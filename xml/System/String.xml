<Type Name="String" FullName="System.String">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bca6cb70cbbc34b4d8170b379576027df0dbb65e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37731851" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class String : ICloneable, IComparable, IComparable&lt;string&gt;, IConvertible, IEquatable&lt;string&gt;, System.Collections.Generic.IEnumerable&lt;char&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit string extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;char&gt;, class System.Collections.IEnumerable, class System.ICloneable, class System.IComparable, class System.IComparable`1&lt;string&gt;, class System.IConvertible, class System.IEquatable`1&lt;string&gt;" />
  <TypeSignature Language="DocId" Value="T:System.String" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class String&#xA;Implements ICloneable, IComparable, IComparable(Of String), IConvertible, IEnumerable(Of Char), IEquatable(Of String)" />
  <TypeSignature Language="C++ CLI" Value="public ref class String sealed : ICloneable, IComparable, IComparable&lt;System::String ^&gt;, IConvertible, IEquatable&lt;System::String ^&gt;, System::Collections::Generic::IEnumerable&lt;char&gt;" />
  <TypeSignature Language="F#" Value="type string = class&#xA;    interface IComparable&#xA;    interface ICloneable&#xA;    interface IConvertible&#xA;    interface IEnumerable&#xA;    interface IComparable&lt;string&gt;&#xA;    interface seq&lt;char&gt;&#xA;    interface IEquatable&lt;string&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Char&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.String&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.String&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="9380d-101">Stellt Text als Sequenz von UTF-16-Codeeinheiten dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9380d-101">Represents text as a sequence of UTF-16 code units.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
 <span data-ttu-id="9380d-102">Eine Zeichenfolge ist eine sequenzielle Auflistung von Zeichen, die zur Darstellung von Text verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-102">A string is a sequential collection of characters that is used to represent text.</span></span> <span data-ttu-id="9380d-103">Ein <xref:System.String> Objekt ist eine sequenzielle Auflistung von <xref:System.Char?displayProperty=nameWithType> Objekte, die darstellen, eine Zeichenfolge, ein <xref:System.Char?displayProperty=nameWithType> -Objekt entspricht einer Codeeinheit UTF-16.</span><span class="sxs-lookup"><span data-stu-id="9380d-103">A <xref:System.String> object is a sequential collection of <xref:System.Char?displayProperty=nameWithType> objects that represent a string; a <xref:System.Char?displayProperty=nameWithType> object corresponds to a UTF-16 code unit.</span></span> <span data-ttu-id="9380d-104">Der Wert des der <xref:System.String> Objekt ist der Inhalt der sequenziellen Auflistung von <xref:System.Char?displayProperty=nameWithType> Objekte und unveränderlichen Wert (d.h., sie ist schreibgeschützt).</span><span class="sxs-lookup"><span data-stu-id="9380d-104">The value of the <xref:System.String> object is the content of the sequential collection of <xref:System.Char?displayProperty=nameWithType> objects, and that value is immutable (that is, it is read-only).</span></span> <span data-ttu-id="9380d-105">Weitere Informationen über die Unveränderlichkeit von Zeichenfolgen finden Sie unter den [Unveränderlichkeit und der StringBuilder-Klasse](#Immutability) weiter unten in diesem Thema.</span><span class="sxs-lookup"><span data-stu-id="9380d-105">For more information about the immutability of strings, see the [Immutability and the StringBuilder class](#Immutability) section later in this topic.</span></span> <span data-ttu-id="9380d-106">Die maximale Größe einer <xref:System.String> Objekt im Arbeitsspeicher ist 2 GB oder etwa 1 Milliarde Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-106">The maximum size of a <xref:System.String> object in memory is 2GB, or about 1 billion characters.</span></span>  
  
 <span data-ttu-id="9380d-107">In diesem Abschnitt</span><span class="sxs-lookup"><span data-stu-id="9380d-107">In this section:</span></span>  
  
 <span data-ttu-id="9380d-108">[Instanziieren ein String-Objekt](#Instantiation) </span><span class="sxs-lookup"><span data-stu-id="9380d-108">[Instantiating a String object](#Instantiation) </span></span>  
 <span data-ttu-id="9380d-109">[Char-Objekten und Unicode-Zeichen](#Characters) </span><span class="sxs-lookup"><span data-stu-id="9380d-109">[Char objects and Unicode characters](#Characters) </span></span>  
 <span data-ttu-id="9380d-110">[Zeichenfolgen und Unicode-Standard](#Unicode) </span><span class="sxs-lookup"><span data-stu-id="9380d-110">[Strings and The Unicode Standard](#Unicode) </span></span>  
 <span data-ttu-id="9380d-111">[Zeichenfolgen und eingebettete Null-Zeichen](#EmbeddedNulls) </span><span class="sxs-lookup"><span data-stu-id="9380d-111">[Strings and embedded null characters](#EmbeddedNulls) </span></span>  
 <span data-ttu-id="9380d-112">[Zeichenfolgen und Indizes](#Indexes) </span><span class="sxs-lookup"><span data-stu-id="9380d-112">[Strings and indexes](#Indexes) </span></span>  
 <span data-ttu-id="9380d-113">[NULL-Zeichenfolgen und leere Zeichenfolgen](#Nulls) </span><span class="sxs-lookup"><span data-stu-id="9380d-113">[Null strings and empty strings](#Nulls) </span></span>  
 <span data-ttu-id="9380d-114">[Unveränderlichkeit von und der StringBuilder-Klasse](#Immutability) </span><span class="sxs-lookup"><span data-stu-id="9380d-114">[Immutability and the StringBuilder class](#Immutability) </span></span>  
 <span data-ttu-id="9380d-115">[Ordnungszahl im Vergleich zu kulturabhängige Operationen](#CultureSensitive) </span><span class="sxs-lookup"><span data-stu-id="9380d-115">[Ordinal vs. culture-sensitive operations](#CultureSensitive) </span></span>  
 <span data-ttu-id="9380d-116">[Normalisierung](#Normalization) </span><span class="sxs-lookup"><span data-stu-id="9380d-116">[Normalization](#Normalization) </span></span>  
 [<span data-ttu-id="9380d-117">Zeichenfolgenoperationen nach Kategorie</span><span class="sxs-lookup"><span data-stu-id="9380d-117">String operations by category</span></span>](#ByCategory)  
  
<a name="Instantiation"></a>   
## <a name="instantiating-a-string-object"></a><span data-ttu-id="9380d-118">Instanziieren ein String-Objekt</span><span class="sxs-lookup"><span data-stu-id="9380d-118">Instantiating a String object</span></span>  
 <span data-ttu-id="9380d-119">Instanziieren Sie ein <xref:System.String> Objekt auf folgende Weise:</span><span class="sxs-lookup"><span data-stu-id="9380d-119">You can instantiate a <xref:System.String> object in the following ways:</span></span>  
  
-   <span data-ttu-id="9380d-120">Durch Zuweisen eines Zeichenfolgenliterals zu einem <xref:System.String> Variable.</span><span class="sxs-lookup"><span data-stu-id="9380d-120">By assigning a string literal to a <xref:System.String> variable.</span></span> <span data-ttu-id="9380d-121">Dies ist die am häufigsten verwendete Methode zum Erstellen einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-121">This is the most commonly used method for creating a string.</span></span> <span data-ttu-id="9380d-122">Im folgende Beispiel wird eine Zuweisung zum Erstellen von mehreren Zeichenfolgen verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-122">The following example uses assignment to create several strings.</span></span> <span data-ttu-id="9380d-123">Beachten Sie, dass in c#, da der umgekehrte Schrägstrich (\\) ist ein Escapezeichen, Literale umgekehrte Schrägstriche in einer Zeichenfolge muss mit Escapezeichen versehen werden, oder die gesamte Zeichenfolge muss @-quoted.</span><span class="sxs-lookup"><span data-stu-id="9380d-123">Note that in C#, because the backslash (\\) is an escape character, literal backslashes in a string must be escaped or the entire string must be @-quoted.</span></span>  
  
     [!code-cpp[System.String.Class.Instantiate#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.instantiate/cpp/string.instantiate1.cpp#1)]
     [!code-csharp[System.String.Class.Instantiate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.instantiate/cs/program.cs#1)]
     [!code-vb[System.String.Class.Instantiate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.instantiate/vb/instantiate1.vb#1)]  
  
-   <span data-ttu-id="9380d-124">Durch Aufrufen einer <xref:System.String> Klassenkonstruktor.</span><span class="sxs-lookup"><span data-stu-id="9380d-124">By calling a <xref:System.String> class constructor.</span></span> <span data-ttu-id="9380d-125">Im folgende Beispiel wird die Zeichenfolgen durch Aufrufen von Konstruktoren für verschiedene Klassen instanziiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-125">The following example instantiates strings by calling several class constructors.</span></span> <span data-ttu-id="9380d-126">Beachten Sie, dass einige der Konstruktoren Zeiger auf Zeichenarrays oder Byte mit Vorzeichen von Arrays als Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-126">Note that some of the constructors include pointers to character arrays or signed byte arrays as parameters.</span></span> <span data-ttu-id="9380d-127">Visual Basic unterstützt keine Aufrufe dieser Konstruktoren.</span><span class="sxs-lookup"><span data-stu-id="9380d-127">Visual Basic does not support calls to these constructors.</span></span> <span data-ttu-id="9380d-128">Ausführliche Informationen zu <xref:System.String> Konstruktoren finden Sie unter den <xref:System.String.%23ctor%2A> Konstruktor Zusammenfassung.</span><span class="sxs-lookup"><span data-stu-id="9380d-128">For detailed information about <xref:System.String> constructors, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
     [!code-cpp[System.String.Class.Instantiate#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.instantiate/cpp/string.instantiate2.cpp#2)]
     [!code-csharp[System.String.Class.Instantiate#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.instantiate/cs/program.cs#2)]
     [!code-vb[System.String.Class.Instantiate#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.instantiate/vb/instantiate1.vb#2)]  
  
-   <span data-ttu-id="9380d-129">Mithilfe des Operators für zeichenfolgenverkettung (+ in C# geschrieben und & oder + in Visual Basic) zum Erstellen einer einzelnen Zeichenfolge aus einer beliebigen Kombination <xref:System.String> Instanzen und Zeichenfolgenliterale.</span><span class="sxs-lookup"><span data-stu-id="9380d-129">By using the string concatenation operator (+ in C# and & or + in Visual Basic) to create a single string from any combination of <xref:System.String> instances and string literals.</span></span> <span data-ttu-id="9380d-130">Das folgende Beispiel veranschaulicht die Verwendung der der Operator für zeichenfolgenverkettung.</span><span class="sxs-lookup"><span data-stu-id="9380d-130">The following example illustrates the use of the string concatenation operator.</span></span>  
  
     [!code-cpp[System.String.Class.Instantiate#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.instantiate/cpp/string.instantiate3.cpp#3)]
     [!code-csharp[System.String.Class.Instantiate#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.instantiate/cs/program.cs#3)]
     [!code-vb[System.String.Class.Instantiate#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.instantiate/vb/instantiate1.vb#3)]  
  
-   <span data-ttu-id="9380d-131">Zum Abrufen einer Eigenschaft oder Aufrufen einer Methode, die eine Zeichenfolge zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-131">By retrieving a property or calling a method that returns a string.</span></span> <span data-ttu-id="9380d-132">Im folgenden Beispiel wird die Methoden der <xref:System.String> Klasse, um eine Teilzeichenfolge aus einer größeren Zeichenfolge zu extrahieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-132">The following example uses the methods of the <xref:System.String> class to extract a substring from a larger string.</span></span>  
  
     [!code-cpp[System.String.Class.Instantiate#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.instantiate/cpp/string.instantiate3.cpp#4)]
     [!code-csharp[System.String.Class.Instantiate#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.instantiate/cs/program.cs#4)]
     [!code-vb[System.String.Class.Instantiate#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.instantiate/vb/instantiate1.vb#4)]  
  
-   <span data-ttu-id="9380d-133">Durch Aufrufen einer Formatierungsmethode auf, um einen Wert oder Objekt in seine Zeichenfolgendarstellung zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-133">By calling a formatting method to convert a value or object to its string representation.</span></span> <span data-ttu-id="9380d-134">Im folgenden Beispiel wird die [kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) Funktion, um die Zeichenfolgendarstellung von zwei Objekten in eine Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-134">The following example uses the                [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature to embed the string representation of two objects into a string.</span></span>  
  
     [!code-cpp[System.String.Class.Instantiate#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.instantiate/cpp/string.instantiate3.cpp#5)]
     [!code-csharp[System.String.Class.Instantiate#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.instantiate/cs/program.cs#5)]
     [!code-vb[System.String.Class.Instantiate#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.instantiate/vb/instantiate1.vb#5)]  
  
<a name="Characters"></a>   
## <a name="char-objects-and-unicode-characters"></a><span data-ttu-id="9380d-135">Char-Objekten und Unicode-Zeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-135">Char objects and Unicode characters</span></span>  
 <span data-ttu-id="9380d-136">Jedes Zeichen in einer Zeichenfolge wird durch eine Unicode-Skalarwert, die auch als Unicode-Codepunkt oder den Ordinalwert des Unicode-Zeichens (numerischen) definiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-136">Each character in a string is defined by a Unicode scalar value, also called a Unicode code point or the ordinal (numeric) value of the Unicode character.</span></span> <span data-ttu-id="9380d-137">Jeder Codepunkt mithilfe von UTF-16-Codierung codiert ist und der numerische Wert der einzelnen Elemente der Codierung wird dargestellt, indem eine <xref:System.Char> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9380d-137">Each code point is encoded by using UTF-16 encoding, and the numeric value of each element of the encoding is represented by a <xref:System.Char> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-138">Beachten Sie, dass da ein <xref:System.String> Instanz besteht aus einer sequenziellen Auflistung von UTF-16-Codeeinheiten, es ist möglich, erstellen Sie eine <xref:System.String> -Objekt, das keine Unicode-Zeichenfolge wohlgeformt ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-138">Note that, because a <xref:System.String> instance consists of a sequential collection of UTF-16 code units, it is possible to create a <xref:System.String> object that is not a well-formed Unicode string.</span></span> <span data-ttu-id="9380d-139">Beispielsweise ist es möglich, eine Zeichenfolge zu erstellen, die ein niedriges Ersatzzeichen ohne entsprechende hohes Ersatzzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-139">For example, it is possible to create a string that has a low surrogate without a corresponding high surrogate.</span></span> <span data-ttu-id="9380d-140">Obwohl einige Methoden, z. B. die Methoden der Codierung und Decodierung von Objekten in der <xref:System.Text> Namespace kann überprüft, stellen Sie sicher, dass die Zeichenfolgen wohlgeformt sind <xref:System.String> Klassenmember ist nicht sichergestellt, dass eine Zeichenfolge wohlgeformt ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-140">Although some methods, such as the methods of encoding and decoding objects in the <xref:System.Text> namespace, may performs checks to ensure that strings are well-formed, <xref:System.String> class members don't ensure that a string is well-formed.</span></span>  
  
 <span data-ttu-id="9380d-141">Ein einzelnes <xref:System.Char> Objekt in der Regel stellt einen einzelnen Codepunkt, d. h., der numerische Wert des der <xref:System.Char> Codepunkt entspricht.</span><span class="sxs-lookup"><span data-stu-id="9380d-141">A single <xref:System.Char> object usually represents a single code point; that is, the numeric value of the <xref:System.Char> equals the code point.</span></span> <span data-ttu-id="9380d-142">Z. B. den Codepunkt für das Zeichen "a" ist U + 0061 ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-142">For example, the code point for the character "a" is U+0061.</span></span> <span data-ttu-id="9380d-143">Erfordert jedoch ein Codepunkt möglicherweise mehr als ein codiertes-Element (mehr als eine <xref:System.Char> Objekt).</span><span class="sxs-lookup"><span data-stu-id="9380d-143">However, a code point might require more than one encoded element (more than one <xref:System.Char> object).</span></span> <span data-ttu-id="9380d-144">Der Unicode-Standard definiert zwei Arten von Zeichen, die entsprechen mehreren <xref:System.Char> Objekte: Graphemes und zusätzliche Unicode-Codepunkten, die den zusätzlichen Ebenen der Unicode-Zeichen entsprechen.</span><span class="sxs-lookup"><span data-stu-id="9380d-144">The Unicode standard defines two types of characters that correspond to multiple <xref:System.Char> objects: graphemes, and Unicode supplementary code points that correspond to characters in the Unicode supplementary planes.</span></span>  
  
-   <span data-ttu-id="9380d-145">Eine zwischen graphemgruppen wird durch ein Basiszeichen, gefolgt von einem oder mehreren Kombination von Zeichen dargestellt.</span><span class="sxs-lookup"><span data-stu-id="9380d-145">A grapheme is represented by a base character followed by one or more combining characters.</span></span> <span data-ttu-id="9380d-146">Beispielsweise wird das Zeichen "ä" dargestellt, durch ein <xref:System.Char> Objekt, dessen Codepunkt U + 0061 ist gefolgt von einem <xref:System.Char> Objekt, dessen Codepunkt U + 0308.</span><span class="sxs-lookup"><span data-stu-id="9380d-146">For example, the character ä is represented by a <xref:System.Char> object whose code point is U+0061 followed by a <xref:System.Char> object whose code point is U+0308.</span></span> <span data-ttu-id="9380d-147">Dieses Zeichen auch definiert werden, indem ein einzelnes <xref:System.Char> Objekt, das einen Codepunkt U + 00E4 verfügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-147">This character can also be defined by a single <xref:System.Char> object that has a code point of U+00E4.</span></span> <span data-ttu-id="9380d-148">Wie im folgenden Beispiel wird gezeigt, gibt ein kulturabhängigen Vergleich, Gleichheit, dass diese beiden datendarstellungen gleich, und sind zwar ein Ordinalvergleich durch gewöhnlicher nicht der Fall ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-148">As the following example shows, a culture-sensitive comparison for equality indicates that these two representations are equal, although an ordinary ordinal comparison does not.</span></span> <span data-ttu-id="9380d-149">Wenn die beiden Zeichenfolgen normalisiert sind, gibt hingegen ein ordinalen Vergleich auch, dass sie gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-149">However, if the two strings are normalized, an ordinal comparison also indicates that they are equal.</span></span> <span data-ttu-id="9380d-150">(Weitere Informationen zum Normalisieren von Zeichenfolgen finden Sie unter den [Normalisierung](#Normalization) Abschnitt.)</span><span class="sxs-lookup"><span data-stu-id="9380d-150">(For more information on normalizing strings, see the [Normalization](#Normalization) section.)</span></span>  
  
     [!code-cpp[System.String.Class#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.char1.cpp#2)]
     [!code-csharp[System.String.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/grapheme1.cs#2)]
     [!code-vb[System.String.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/grapheme1.vb#2)]  
  
-   <span data-ttu-id="9380d-151">Unicode zusätzliche Codepunkt (ein Ersatzzeichenpaar) wird durch eine <xref:System.Char> Objekt, dessen Code ein hohes Ersatzzeichen ist, gefolgt von einer <xref:System.Char> -Objekt, dessen Codepunkt ein niedriges Ersatzzeichen ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-151">A Unicode supplementary code point (a surrogate pair) is represented by a <xref:System.Char> object whose code point is a high surrogate followed by a <xref:System.Char> object whose code point is a low surrogate.</span></span> <span data-ttu-id="9380d-152">Die Codeeinheiten der hohe Ersatzzeichen-Bereich von U + D800 bis U + DBFF liegt.</span><span class="sxs-lookup"><span data-stu-id="9380d-152">The code units of high surrogates range from U+D800 to U+DBFF.</span></span> <span data-ttu-id="9380d-153">Die Codeeinheiten der niedrige Ersatzzeichen liegen zwischen U + DC00 und U + DFFF.</span><span class="sxs-lookup"><span data-stu-id="9380d-153">The code units of low surrogates range from U+DC00 to U+DFFF.</span></span> <span data-ttu-id="9380d-154">Ersatzzeichenpaare werden verwendet, um Zeichen in den 16 zusätzlichen Unicode-Ebenen darstellen.</span><span class="sxs-lookup"><span data-stu-id="9380d-154">Surrogate pairs are used to represent characters in the 16 Unicode supplementary planes.</span></span> <span data-ttu-id="9380d-155">Das folgende Beispiel erstellt ein Ersatzzeichen und übergibt es an der <xref:System.Char.IsSurrogatePair%28System.Char%2CSystem.Char%29?displayProperty=nameWithType> Methode, um zu bestimmen, ob es sich um ein Ersatzzeichenpaar ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-155">The following example creates a surrogate character and passes it to the <xref:System.Char.IsSurrogatePair%28System.Char%2CSystem.Char%29?displayProperty=nameWithType> method to determine whether it is a surrogate pair.</span></span>  
  
     [!code-cpp[System.String.Class#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.char2.cpp#3)]
     [!code-csharp[System.String.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/surrogate1.cs#3)]
     [!code-vb[System.String.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/surrogate1.vb#3)]  
  
<a name="Unicode"></a>   
## <a name="strings-and-the-unicode-standard"></a><span data-ttu-id="9380d-156">Zeichenfolgen und Unicode-Standard</span><span class="sxs-lookup"><span data-stu-id="9380d-156">Strings and The Unicode Standard</span></span>  
 <span data-ttu-id="9380d-157">Werden die Zeichen in einer Zeichenfolge von UTF-16-codierte Codeeinheiten, die den entsprechen dargestellt <xref:System.Char> Werte.</span><span class="sxs-lookup"><span data-stu-id="9380d-157">Characters in a string are represented by UTF-16 encoded code units, which correspond to <xref:System.Char> values.</span></span>  
  
 <span data-ttu-id="9380d-158">Jedes Zeichen in einer Zeichenfolge verfügt über eine zugeordnete Unicode-Zeichen-Kategorie, die in .NET Framework durch dargestellt wird die <xref:System.Globalization.UnicodeCategory> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-158">Each character in a string has an associated Unicode character category, which is represented in the .NET Framework by the <xref:System.Globalization.UnicodeCategory> enumeration.</span></span> <span data-ttu-id="9380d-159">Die Kategorie eines Zeichens oder ein Ersatzzeichenpaar kann bestimmt werden, indem die <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-159">The category of a character or a surrogate pair can be determined by calling the <xref:System.Globalization.CharUnicodeInfo.GetUnicodeCategory%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9380d-160">.NET verwaltet eine eigene Tabelle von Zeichen und ihrer entsprechenden Kategorien, dadurch wird sichergestellt, dass Informationen zu Auftragskategorien identische Zeichen, eine bestimmte Version einer .NET-Implementierung, die auf unterschiedlichen Plattformen ausgeführt zurückgibt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-160">.NET maintains its own table of characters and their corresponding categories, which ensures that a specific version of a .NET implementation running on different platforms returns identical character category information.</span></span> <span data-ttu-id="9380d-161">Die folgende Tabelle enthält die Versionen von .NET sowie die Versionen von der Unicode-Standard, auf denen ihre Zeichenkategorien basieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-161">The following table lists .NET versions and the versions of the Unicode Standard on which their character categories are based.</span></span>  
  
|<span data-ttu-id="9380d-162">.NET Framework-Version</span><span class="sxs-lookup"><span data-stu-id="9380d-162">.NET Framework version</span></span>|<span data-ttu-id="9380d-163">Version des Unicode-Standards</span><span class="sxs-lookup"><span data-stu-id="9380d-163">Version of the Unicode Standard</span></span>|  
|----------------------------|-------------------------------------|  
|[!INCLUDE[net_v11_long](~/includes/net-v11-long-md.md)]|[<span data-ttu-id="9380d-164">Der Unicode-Standard, Version 4.0.0</span><span class="sxs-lookup"><span data-stu-id="9380d-164">The Unicode Standard, Version 4.0.0</span></span>](https://www.unicode.org/versions/Unicode4.0.0/)|  
|<span data-ttu-id="9380d-165">.NET Framework 2.0</span><span class="sxs-lookup"><span data-stu-id="9380d-165">The .NET Framework 2.0</span></span>|[<span data-ttu-id="9380d-166">Der Unicode-Standard, Version 5.0.0</span><span class="sxs-lookup"><span data-stu-id="9380d-166">The Unicode Standard, Version 5.0.0</span></span>](http://www.unicode.org/versions/Unicode5.0.0)|  
|[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]|[<span data-ttu-id="9380d-167">Der Unicode-Standard, Version 5.0.0</span><span class="sxs-lookup"><span data-stu-id="9380d-167">The Unicode Standard, Version 5.0.0</span></span>](http://www.unicode.org/versions/Unicode5.0.0)|  
|[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]|[<span data-ttu-id="9380d-168">Der Unicode-Standard, Version 5.0.0</span><span class="sxs-lookup"><span data-stu-id="9380d-168">The Unicode Standard, Version 5.0.0</span></span>](http://www.unicode.org/versions/Unicode5.0.0)|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)]|[<span data-ttu-id="9380d-169">Der Unicode-Standard, Version 6.3.0</span><span class="sxs-lookup"><span data-stu-id="9380d-169">The Unicode Standard, Version 6.3.0</span></span>](https://www.unicode.org/versions/Unicode6.3.0/)|  
|[!INCLUDE[net_v451](~/includes/net-v451-md.md)]|[<span data-ttu-id="9380d-170">Der Unicode-Standard, Version 6.3.0</span><span class="sxs-lookup"><span data-stu-id="9380d-170">The Unicode Standard, Version 6.3.0</span></span>](https://www.unicode.org/versions/Unicode6.3.0/)|  
|[!INCLUDE[net_v452](~/includes/net-v452-md.md)]|[<span data-ttu-id="9380d-171">Der Unicode-Standard, Version 6.3.0</span><span class="sxs-lookup"><span data-stu-id="9380d-171">The Unicode Standard, Version 6.3.0</span></span>](https://www.unicode.org/versions/Unicode6.3.0/)|  
|[!INCLUDE[net_v46](~/includes/net-v46-md.md)]|[<span data-ttu-id="9380d-172">Der Unicode-Standard, Version 6.3.0</span><span class="sxs-lookup"><span data-stu-id="9380d-172">The Unicode Standard, Version 6.3.0</span></span>](https://www.unicode.org/versions/Unicode6.3.0/)|  
|[!INCLUDE[net_v461](~/includes/net-v461-md.md)]|[<span data-ttu-id="9380d-173">Der Unicode-Standard, Version 6.3.0</span><span class="sxs-lookup"><span data-stu-id="9380d-173">The Unicode Standard, Version 6.3.0</span></span>](https://www.unicode.org/versions/Unicode6.3.0/)|  
|[!INCLUDE[net_v462](~/includes/net-v462-md.md)]|[<span data-ttu-id="9380d-174">Der Unicode-Standard, Version 8.0.0</span><span class="sxs-lookup"><span data-stu-id="9380d-174">The Unicode Standard, Version 8.0.0</span></span>](https://www.unicode.org/versions/Unicode8.0.0/)|  
|<span data-ttu-id="9380d-175">.NET Core (alle Versionen)</span><span class="sxs-lookup"><span data-stu-id="9380d-175">.NET Core (all versions)</span></span>|[<span data-ttu-id="9380d-176">Der Unicode-Standard, Version 8.0.0</span><span class="sxs-lookup"><span data-stu-id="9380d-176">The Unicode Standard, Version 8.0.0</span></span>](https://www.unicode.org/versions/Unicode8.0.0/)|
  
 <span data-ttu-id="9380d-177">Darüber hinaus unterstützt .NET Framework Zeichenfolgenvergleich und Sortierung basierend auf den Unicode-Standard.</span><span class="sxs-lookup"><span data-stu-id="9380d-177">In addition, the .NET Framework supports string comparison and sorting based on the Unicode standard.</span></span> <span data-ttu-id="9380d-178">In Versionen von .NET Framework durch die [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], .NET Framework verwaltet eine eigene Tabelle von Zeichenfolgendaten.</span><span class="sxs-lookup"><span data-stu-id="9380d-178">In versions of the .NET Framework through the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], the .NET Framework maintains its own table of string data.</span></span> <span data-ttu-id="9380d-179">Dies gilt auch für Versionen von .NET Framework ab, mit der [!INCLUDE[net_v45](~/includes/net-v45-md.md)] auf Windows 7 ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-179">This is also true of versions of the .NET Framework starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] running on Windows 7.</span></span> <span data-ttu-id="9380d-180">Beginnend mit der [!INCLUDE[net_v45](~/includes/net-v45-md.md)] auf Windows 8 und höheren Versionen des Windows-Betriebssystems ausgeführt werden, die die Common Language Runtime-Delegaten Zeichenfolge Vergleichs- und Sortiervorgänge für das Betriebssystem.</span><span class="sxs-lookup"><span data-stu-id="9380d-180">Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)] running on Window 8 and later versions of the Windows operating system, the runtime delegates string comparison and sorting operations to the operating system.</span></span> <span data-ttu-id="9380d-181">Die folgende Tabelle enthält die Versionen von .NET Framework und die Versionen von Unicode-Standard auf, welches Zeichen als Vergleich und Sortierung basieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-181">The following table lists the versions of the .NET Framework and the versions of the Unicode Standard on which character comparison and sorting are based.</span></span>  
  
|<span data-ttu-id="9380d-182">.NET Framework-Version</span><span class="sxs-lookup"><span data-stu-id="9380d-182">.NET Framework version</span></span>|<span data-ttu-id="9380d-183">Version des Unicode-Standards</span><span class="sxs-lookup"><span data-stu-id="9380d-183">Version of the Unicode Standard</span></span>|  
|----------------------------|-------------------------------------|  
|[!INCLUDE[net_v11_long](~/includes/net-v11-long-md.md)]|[<span data-ttu-id="9380d-184">Der Unicode-Standard, Version 4.0.0</span><span class="sxs-lookup"><span data-stu-id="9380d-184">The Unicode Standard, Version 4.0.0</span></span>](https://www.unicode.org/versions/Unicode4.0.0/)|  
|<span data-ttu-id="9380d-185">.NET Framework 2.0</span><span class="sxs-lookup"><span data-stu-id="9380d-185">The .NET Framework 2.0</span></span>|[<span data-ttu-id="9380d-186">Der Unicode-Standard, Version 5.0.0</span><span class="sxs-lookup"><span data-stu-id="9380d-186">The Unicode Standard, Version 5.0.0</span></span>](http://www.unicode.org/versions/Unicode5.0.0)|  
|[!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)]|[<span data-ttu-id="9380d-187">Der Unicode-Standard, Version 5.0.0</span><span class="sxs-lookup"><span data-stu-id="9380d-187">The Unicode Standard, Version 5.0.0</span></span>](http://www.unicode.org/versions/Unicode5.0.0)|  
|[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]|[<span data-ttu-id="9380d-188">Der Unicode-Standard, Version 5.0.0</span><span class="sxs-lookup"><span data-stu-id="9380d-188">The Unicode Standard, Version 5.0.0</span></span>](http://www.unicode.org/versions/Unicode5.0.0)|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)]<span data-ttu-id="9380d-189"> und höher unter Windows 7</span><span class="sxs-lookup"><span data-stu-id="9380d-189"> and later on Windows 7</span></span>|[<span data-ttu-id="9380d-190">Der Unicode-Standard, Version 5.0.0</span><span class="sxs-lookup"><span data-stu-id="9380d-190">The Unicode Standard, Version 5.0.0</span></span>](http://www.unicode.org/versions/Unicode5.0.0)|  
|[!INCLUDE[net_v45](~/includes/net-v45-md.md)]<span data-ttu-id="9380d-191"> und höher unter Windows 8 und späteren Windows-Betriebssystemen</span><span class="sxs-lookup"><span data-stu-id="9380d-191"> and later on Windows 8 and later Windows operating systems</span></span>|[<span data-ttu-id="9380d-192">Der Unicode-Standard, Version 6.3.0</span><span class="sxs-lookup"><span data-stu-id="9380d-192">The Unicode Standard, Version 6.3.0</span></span>](https://www.unicode.org/versions/Unicode6.3.0/)|  

<span data-ttu-id="9380d-193">In .NET Core, basieren die sortierungs-und Vergleichsvorgängen auf [der Unicode-Standard, Version 8.0.0](https://www.unicode.org/versions/Unicode8.0.0/).</span><span class="sxs-lookup"><span data-stu-id="9380d-193">In .NET Core, sorting and comparison operations are based on [Version 8.0.0 of the Unicode Standard](https://www.unicode.org/versions/Unicode8.0.0/).</span></span>

<a name="EmbeddedNulls"></a>   
## <a name="strings-and-embedded-null-characters"></a><span data-ttu-id="9380d-194">Zeichenfolgen und eingebettete Null-Zeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-194">Strings and embedded null characters</span></span>  
 <span data-ttu-id="9380d-195">In .NET Framework eine <xref:System.String> Objekt kann eingebetteten Null-Zeichen, die Anzahl der im Rahmen der die Länge der Zeichenfolge enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-195">In the .NET Framework, a <xref:System.String> object can include embedded null characters, which count as a part of the string's length.</span></span> <span data-ttu-id="9380d-196">Jedoch in einigen Sprachen wie C und C++, ein Null-Zeichen gibt das Ende einer Zeichenfolge; es gilt einen Teil der Zeichenfolge nicht und zählt nicht als Teil der die Länge der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-196">However, in some languages such as C and C++, a null character indicates the end of a string;it is not considered a part of the string and is not counted as part of the string's length.</span></span> <span data-ttu-id="9380d-197">Dies bedeutet, dass die folgenden allgemeinen Annahmen, die in C oder C++ geschriebene Bibliotheken oder C- und C++-Programmierer über Zeichenfolgen, die möglicherweise nicht unbedingt gültig, wenn Sie zugewiesen sind <xref:System.String> Objekte:</span><span class="sxs-lookup"><span data-stu-id="9380d-197">This means that the following common assumptions that C and C++ programmers or libraries written in C or C++ might make about strings are not necessarily valid when applied to <xref:System.String> objects:</span></span>  
  
-   <span data-ttu-id="9380d-198">Der Rückgabewert von der `strlen` oder `wcslen` Funktionen ist nicht unbedingt gleich <xref:System.String.Length%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-198">The value returned by the `strlen` or `wcslen` functions does not necessarily equal <xref:System.String.Length%2A?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="9380d-199">Die Zeichenfolge, die erstellt werden, indem Sie die `strcpy_s` oder `wcscpy_s` Funktionen ist nicht unbedingt identisch, mit der Zeichenfolge, die erstellt werden, indem die <xref:System.String.Copy%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-199">The string created by the `strcpy_s` or `wcscpy_s` functions is not necessarily identical to the string created by the <xref:System.String.Copy%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9380d-200">Sie sollten sicherstellen, dass diese systemeigene C- und C++-Code, der instanziiert <xref:System.String> Objekte und Code, der übergeben wird <xref:System.String> Objekte über Platform aufrufen, nicht davon ausgehen, dass ein Null-Zeichen am Ende der Zeichenfolge kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="9380d-200">You should ensure that native C and C++ code that instantiates <xref:System.String> objects, and code that is passed <xref:System.String> objects through platform invoke, don't assume that an embedded null character marks the end of the string.</span></span>  
  
 <span data-ttu-id="9380d-201">Eingebettete Null-Zeichen in einer Zeichenfolge werden auch anders behandelt werden, wenn eine Zeichenfolge sortiert (bzw. im Vergleich) und eine Zeichenfolge gesucht wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-201">Embedded null characters in a string are also treated differently when a string is sorted (or compared) and when a string is searched.</span></span> <span data-ttu-id="9380d-202">NULL-Zeichen werden ignoriert, wenn kulturabhängige Vergleiche zwischen zwei Zeichenfolgen, einschließlich vergleichen, die mit der invarianten Kultur ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-202">Null characters are ignored when performing culture-sensitive comparisons between two strings, including comparisons using the invariant culture.</span></span> <span data-ttu-id="9380d-203">Diese sind nur für die Ordinalvergleiche, bei Ordnungszahl oder Groß-/Kleinschreibung berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-203">They are considered only for ordinal or case-insensitive ordinal comparisons.</span></span> <span data-ttu-id="9380d-204">Auf der anderen Seite eingebettete Null-Zeichen werden immer berücksichtigt, wenn eine Zeichenfolge mit Methoden wie z. B. Suche <xref:System.String.Contains%2A>, <xref:System.String.StartsWith%2A>, und <xref:System.String.IndexOf%2A>.</span><span class="sxs-lookup"><span data-stu-id="9380d-204">On the other hand, embedded null characters are always considered when searching a string with methods such as <xref:System.String.Contains%2A>, <xref:System.String.StartsWith%2A>, and <xref:System.String.IndexOf%2A>.</span></span>  
  
<a name="Indexes"></a>   
## <a name="strings-and-indexes"></a><span data-ttu-id="9380d-205">Zeichenfolgen und Indizes</span><span class="sxs-lookup"><span data-stu-id="9380d-205">Strings and indexes</span></span>  
 <span data-ttu-id="9380d-206">Ein Index ist die Position des ein <xref:System.Char> Objekt (nicht in ein Unicode-Zeichen) in einem <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="9380d-206">An index is the position of a <xref:System.Char> object (not a Unicode character) in a <xref:System.String>.</span></span> <span data-ttu-id="9380d-207">Ein Index ist eine nullbasierte, nicht negative Zahl, die von der ersten Position in der Zeichenfolge, beginnt die Indexposition 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-207">An index is a zero-based, nonnegative number that starts from the first position in the string, which is index position zero.</span></span> <span data-ttu-id="9380d-208">Eine Reihe von Suchmethoden z. B. <xref:System.String.IndexOf%2A> und <xref:System.String.LastIndexOf%2A>, den Index eines Zeichens zurück, oder in der Zeichenfolgeninstanz Teilzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-208">A number of search methods, such as <xref:System.String.IndexOf%2A> and <xref:System.String.LastIndexOf%2A>, return the index of a character or substring in the string instance.</span></span>  
  
 <span data-ttu-id="9380d-209">Die <xref:System.String.Chars%2A> Eigenschaft ermöglicht den Zugriff auf einzelne <xref:System.Char> Objekte durch ihre Indexposition in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-209">The <xref:System.String.Chars%2A> property lets you access individual <xref:System.Char> objects by their index position in the string.</span></span> <span data-ttu-id="9380d-210">Da die <xref:System.String.Chars%2A> -Eigenschaft ist die Standardeigenschaft (in Visual Basic) oder der Indexer (in c#), es stehen die einzelnen <xref:System.Char> Objekte in einer Zeichenfolge durch folgenden Code verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-210">Because the <xref:System.String.Chars%2A> property is the default property (in Visual Basic) or the indexer (in C#), you can access the individual <xref:System.Char> objects in a string by using code such as the following.</span></span> <span data-ttu-id="9380d-211">Dieser Code sucht nach Leerzeichen oder Satzzeichen in eine Zeichenfolge, um zu bestimmen, wie viele Wörter der Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-211">This code looks for white space or punctuation characters in a string to determine how many words the string contains.</span></span>  
  
 [!code-cpp[System.String.Class#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.index1.cpp#4)]
 [!code-csharp[System.String.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/index1.cs#4)]
 [!code-vb[System.String.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/index1.vb#4)]  
  
 <span data-ttu-id="9380d-212">Da die <xref:System.String> -Klasse implementiert die <xref:System.Collections.IEnumerable> -Schnittstelle, Sie können auch durchlaufen die <xref:System.Char> Objekte in eine Zeichenfolge mit einer `foreach` Konstrukt, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-212">Because the <xref:System.String> class implements the <xref:System.Collections.IEnumerable> interface, you can also iterate through the <xref:System.Char> objects in a string by using a `foreach` construct, as the following example shows.</span></span>  
  
 [!code-cpp[System.String.Class#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.index2.cpp#5)]
 [!code-csharp[System.String.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/index2.cs#5)]
 [!code-vb[System.String.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/index2.vb#5)]  
  
 <span data-ttu-id="9380d-213">Aufeinander folgende Indexwerte entspricht möglicherweise nicht aufeinander folgende Unicode-Zeichen, da Unicode Zeichen möglicherweise als mehr als ein codiert <xref:System.Char> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9380d-213">Consecutive index values might not correspond to consecutive Unicode characters, because a Unicode character might be encoded as more than one <xref:System.Char> object.</span></span> <span data-ttu-id="9380d-214">Insbesondere kann eine Zeichenfolge mit mehreren Zeichen Texteinheiten enthalten, die von einem Basiszeichen gefolgt durch eine oder mehrere Kombinationszeichen oder Ersatzzeichenpaare gebildet werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-214">In particular, a string may contain multi-character units of text that are formed by a base character followed by one or more combining characters or by surrogate pairs.</span></span> <span data-ttu-id="9380d-215">Arbeiten mit Unicode-Zeichen anstelle von <xref:System.Char> Objekte zu verwenden, die <xref:System.Globalization.StringInfo?displayProperty=nameWithType> und <xref:System.Globalization.TextElementEnumerator> Klassen.</span><span class="sxs-lookup"><span data-stu-id="9380d-215">To work with Unicode characters instead of <xref:System.Char> objects, use the <xref:System.Globalization.StringInfo?displayProperty=nameWithType> and <xref:System.Globalization.TextElementEnumerator> classes.</span></span> <span data-ttu-id="9380d-216">Das folgende Beispiel veranschaulicht den Unterschied zwischen Code, mit der Funktionsweise <xref:System.Char> Benutzerobjekten und Code, die mit Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-216">The following example illustrates the difference between code that works with <xref:System.Char> objects and code that works with Unicode characters.</span></span> <span data-ttu-id="9380d-217">Die Anzahl der Zeichen oder Text-Elemente in jedem Wort im Satz verglichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-217">It compares the number of characters or text elements in each word of a sentence.</span></span> <span data-ttu-id="9380d-218">Die Zeichenfolge enthält zwei Sequenzen aus einem Basiszeichen, gefolgt von einer Kombination von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-218">The string includes two sequences of a base character followed by a combining character.</span></span>  
  
 [!code-cpp[System.String.Class#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.index3.cpp#6)]
 [!code-csharp[System.String.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/index3.cs#6)]
 [!code-vb[System.String.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/index3.vb#6)]  
  
 <span data-ttu-id="9380d-219">Dieses Beispiel funktioniert mit Textelemente mithilfe der <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> Methode und die <xref:System.Globalization.TextElementEnumerator> Klasse alle Textelemente in einer Zeichenfolge aufgelistet werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-219">This example works with text elements by using the <xref:System.Globalization.StringInfo.GetTextElementEnumerator%2A?displayProperty=nameWithType> method and the <xref:System.Globalization.TextElementEnumerator> class to enumerate all the text elements in a string.</span></span> <span data-ttu-id="9380d-220">Sie können auch ein Array, das durch den Aufruf der Startindex für jedes Textelement enthält Abrufen der <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-220">You can also retrieve an array that contains the starting index of each text element by calling the <xref:System.Globalization.StringInfo.ParseCombiningCharacters%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9380d-221">Weitere Informationen zum Arbeiten mit Einheiten von eher Text als einzelnen <xref:System.Char> -Werte finden Sie in der <xref:System.Globalization.StringInfo> Klasse.</span><span class="sxs-lookup"><span data-stu-id="9380d-221">For more information about working with units of text rather than individual <xref:System.Char> values, see the <xref:System.Globalization.StringInfo> class.</span></span>  
  
<a name="Nulls"></a>   
## <a name="null-strings-and-empty-strings"></a><span data-ttu-id="9380d-222">NULL-Zeichenfolgen und leere Zeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="9380d-222">Null strings and empty strings</span></span>  
 <span data-ttu-id="9380d-223">Eine Zeichenfolge, die deklariert wurde, jedoch wurde kein Wert zugewiesen ist `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-223">A string that has been declared but has not been assigned a value is `null`.</span></span> <span data-ttu-id="9380d-224">Es wird versucht, das Aufrufen von Methoden für diese Zeichenfolge löst eine <xref:System.NullReferenceException>.</span><span class="sxs-lookup"><span data-stu-id="9380d-224">Attempting to call methods on that string throws a <xref:System.NullReferenceException>.</span></span> <span data-ttu-id="9380d-225">Eine null-Zeichenfolge unterscheidet sich von der eine leere Zeichenfolge ist, d. h. eine Zeichenfolge, deren Wert "" oder <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-225">A null string is different from an empty string, which is a string whose value is "" or <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-226">In einigen Fällen löst eine Ausnahme aus, wenn Sie eine null-Zeichenfolge oder eine leere Zeichenfolge als Argument in einem Methodenaufruf übergeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-226">In some cases, passing either a null string or an empty string as an argument in a method call throws an exception.</span></span> <span data-ttu-id="9380d-227">Übergeben Sie z. B. eine null-Zeichenfolge, die <xref:System.Int32.Parse%2A?displayProperty=nameWithType> -Methode löst eine <xref:System.ArgumentNullException>, und übergeben eine leere Zeichenfolge löst eine <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="9380d-227">For example, passing a null string to the <xref:System.Int32.Parse%2A?displayProperty=nameWithType> method throws an <xref:System.ArgumentNullException>, and passing an empty string throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="9380d-228">In anderen Fällen kann ein Methodenargument entweder eine null-Zeichenfolge oder eine leere Zeichenfolge sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-228">In other cases, a method argument can be either a null string or an empty string.</span></span> <span data-ttu-id="9380d-229">Wenn Sie bereit sind z. B. eine <xref:System.IFormattable> Implementierung für eine Klasse, mit der allgemeine Formatbezeichner ("G") sowohl eine null-Zeichenfolge und eine leere Zeichenfolge entsprechen sollen.</span><span class="sxs-lookup"><span data-stu-id="9380d-229">For example, if you are providing an <xref:System.IFormattable> implementation for a class, you want to equate both a null string and an empty string with the general ("G") format specifier.</span></span>  
  
 <span data-ttu-id="9380d-230">Die <xref:System.String> Klasse enthält die folgenden zwei Hilfsmethoden, mit denen Sie überprüfen, ob eine Zeichenfolge ist `null` oder leer sein:</span><span class="sxs-lookup"><span data-stu-id="9380d-230">The <xref:System.String> class includes the following two convenience methods that enable you to test whether a string is `null` or empty:</span></span>  
  
-   <span data-ttu-id="9380d-231"><xref:System.String.IsNullOrEmpty%2A>, der angibt, ob eine Zeichenfolge, die eine ist `null` oder gleich <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-231"><xref:System.String.IsNullOrEmpty%2A>, which indicates whether a string is either `null` or is equal to  <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-232">Diese Methode entfällt das Code wie den folgenden verwenden:</span><span class="sxs-lookup"><span data-stu-id="9380d-232">This method eliminates the need to use code such as the following:</span></span>  
  
     [!code-cpp[System.String.Class.Null#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.null/cpp/string.null.cpp#1)]
     [!code-csharp[System.String.Class.Null#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.null/cs/nullorempty1.cs#1)]
     [!code-vb[System.String.Class.Null#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.null/vb/nullorempty1.vb#1)]  
  
-   <span data-ttu-id="9380d-233"><xref:System.String.IsNullOrWhiteSpace%2A>, der angibt, ob eine Zeichenfolge ist `null`, gleich <xref:System.String.Empty?displayProperty=nameWithType>, oder ausschließlich aus Leerzeichen besteht.</span><span class="sxs-lookup"><span data-stu-id="9380d-233"><xref:System.String.IsNullOrWhiteSpace%2A>, which indicates whether a string is `null`, equals <xref:System.String.Empty?displayProperty=nameWithType>, or consists exclusively of white-space characters.</span></span> <span data-ttu-id="9380d-234">Diese Methode entfällt das Code wie den folgenden verwenden:</span><span class="sxs-lookup"><span data-stu-id="9380d-234">This method eliminates the need to use code such as the following:</span></span>  
  
     [!code-cpp[System.String.Class.Null#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.null/cpp/string.null.cpp#2)]
     [!code-csharp[System.String.Class.Null#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.null/cs/nullorempty1.cs#2)]
     [!code-vb[System.String.Class.Null#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.null/vb/nullorempty1.vb#2)]  
  
 <span data-ttu-id="9380d-235">Im folgenden Beispiel wird die <xref:System.String.IsNullOrEmpty%2A> -Methode in der die <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> Implementierung eines benutzerdefinierten `Temperature` Klasse.</span><span class="sxs-lookup"><span data-stu-id="9380d-235">The following example uses the <xref:System.String.IsNullOrEmpty%2A> method in the <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation of a custom `Temperature` class.</span></span> <span data-ttu-id="9380d-236">Die Methode unterstützt die Formatzeichenfolgen "G", "C", "F" und "K".</span><span class="sxs-lookup"><span data-stu-id="9380d-236">The method supports the "G", "C", "F", and "K" format strings.</span></span> <span data-ttu-id="9380d-237">Wenn eine leere Zeichenfolge oder ein Format, deren Wert eine Zeichenfolge ist `null` übergeben an die Methode wird der Wert mit der Formatzeichenfolge "G" geändert.</span><span class="sxs-lookup"><span data-stu-id="9380d-237">If an empty format string or a format string whose value is `null` is passed to the method, its value is changed to the "G" format string.</span></span>  
  
 [!code-cpp[System.String.Class.Null#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.class.null/cpp/string.null.cpp#3)]
 [!code-csharp[System.String.Class.Null#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.class.null/cs/nullorempty1.cs#3)]
 [!code-vb[System.String.Class.Null#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.class.null/vb/nullorempty1.vb#3)]  
  
<a name="Immutability"></a>   
## <a name="immutability-and-the-stringbuilder-class"></a><span data-ttu-id="9380d-238">Unveränderlichkeit von und der StringBuilder-Klasse</span><span class="sxs-lookup"><span data-stu-id="9380d-238">Immutability and the StringBuilder class</span></span>  
 <span data-ttu-id="9380d-239">Ein <xref:System.String> Objekt wird als unveränderlich (schreibgeschützt), da der Wert kann nicht geändert werden, nachdem es erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-239">A <xref:System.String> object is called immutable (read-only), because its value cannot be modified after it has been created.</span></span> <span data-ttu-id="9380d-240">Methoden, die angezeigt werden, so ändern Sie eine <xref:System.String> Objekt tatsächlich ein neues zurückzugeben <xref:System.String> Objekt, das die Änderung enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-240">Methods that appear to modify a <xref:System.String> object actually return a new <xref:System.String> object that contains the modification.</span></span>  
  
 <span data-ttu-id="9380d-241">Da Zeichenfolgen unveränderlich sind, wiederholt Zeichenfolge-manipulationsroutinen, die ausgeführt werden, Hinzufügungen oder löschungen von aussieht, dass eine einzelne Zeichenfolge beträchtliche Leistungseinbußen genauer kann.</span><span class="sxs-lookup"><span data-stu-id="9380d-241">Because strings are immutable, string manipulation routines that perform repeated additions or deletions to what appears to be a single string can exact a significant performance penalty.</span></span> <span data-ttu-id="9380d-242">Der folgende Code verwendet beispielsweise eine Zufallszahlen-Generators zum Erstellen einer Zeichenfolge mit 1000 Zeichen im Bereich von 0 x 0001, 0x052F.</span><span class="sxs-lookup"><span data-stu-id="9380d-242">For example, the following code uses a random number generator to create a string with 1000 characters in the range 0x0001 to 0x052F.</span></span> <span data-ttu-id="9380d-243">Obwohl der Code angezeigt, zum Verketten von Zeichenfolgen zu verwenden wird, um ein neues Zeichen an die vorhandene Zeichenfolge, die mit dem Namen Anfügen `str`, tatsächlich wird ein neuer <xref:System.String> Objekt für jeden Verkettungsvorgang.</span><span class="sxs-lookup"><span data-stu-id="9380d-243">Although the code appears to use string concatenation to append a new character to the existing string named `str`, it actually creates a new <xref:System.String> object for each concatenation operation.</span></span>  
  
 [!code-cpp[System.String.Class#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.stringbuilder1.cpp#15)]
 [!code-csharp[System.String.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/immutable.cs#15)]
 [!code-vb[System.String.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/immutable.vb#15)]  
  
 <span data-ttu-id="9380d-244">Können Sie die <xref:System.Text.StringBuilder> -Klasse anstelle der <xref:System.String> -Klasse für Vorgänge, die mehrere Änderungen an den Wert einer Zeichenfolge vornehmen.</span><span class="sxs-lookup"><span data-stu-id="9380d-244">You can use the <xref:System.Text.StringBuilder> class instead of the <xref:System.String> class for operations that make multiple changes to the value of a string.</span></span> <span data-ttu-id="9380d-245">Im Gegensatz zu Instanzen der <xref:System.String> -Klasse, <xref:System.Text.StringBuilder> Objekte sind änderbar, wenn Sie verketten, Anfügen oder Löschen von untergeordneten Zeichenfolgen aus einer Zeichenfolge, die Vorgänge werden für eine einzelne Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-245">Unlike instances of the <xref:System.String> class, <xref:System.Text.StringBuilder> objects are mutable; when you concatenate, append, or delete substrings from a string, the operations are performed on a single string.</span></span> <span data-ttu-id="9380d-246">Sobald Sie abgeschlossen haben, Ändern des Werts einer <xref:System.Text.StringBuilder> Objekt, rufen Sie die <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> Methode in eine Zeichenfolge zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-246">When you have finished modifying the value of a <xref:System.Text.StringBuilder> object, you can call its <xref:System.Text.StringBuilder.ToString%2A?displayProperty=nameWithType> method to convert it to a string.</span></span> <span data-ttu-id="9380d-247">Im folgenden Beispiel ersetzt die <xref:System.String> im vorherigen Beispiel zum Verketten von 1000 zufällige Zeichen im Bereich von 0 x 0001 bis 0x052F mit verwendet eine <xref:System.Text.StringBuilder> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9380d-247">The following example replaces the <xref:System.String> used in the previous example to concatenate 1000 random characters in the range to  0x0001 to 0x052F with a <xref:System.Text.StringBuilder> object.</span></span>  
  
 [!code-cpp[System.String.Class#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.stringbuilder2.cpp#16)]
 [!code-csharp[System.String.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/immutable1.cs#16)]
 [!code-vb[System.String.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/immutable1.vb#16)]  
  
<a name="CultureSensitive"></a>   
## <a name="ordinal-vs-culture-sensitive-operations"></a><span data-ttu-id="9380d-248">Ordnungszahl im Vergleich zu kulturabhängige Operationen</span><span class="sxs-lookup"><span data-stu-id="9380d-248">Ordinal vs. culture-sensitive operations</span></span>  
 <span data-ttu-id="9380d-249">Mitglieder der <xref:System.String> Klasse entweder Ordnungszahl- oder kulturabhängige (linguistische) Vorgänge ausführen, auf eine <xref:System.String> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9380d-249">Members of the <xref:System.String> class perform either ordinal or culture-sensitive (linguistic) operations on a <xref:System.String> object.</span></span> <span data-ttu-id="9380d-250">Ein ordinaler-Vorgang ausgeführt wird, nach dem numerischen Wert der einzelnen <xref:System.Char> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9380d-250">An ordinal operation acts on the numeric value of each <xref:System.Char> object.</span></span> <span data-ttu-id="9380d-251">Eine kulturabhängige Operation wird der Wert, der die <xref:System.String> -Objekt, und nimmt kulturspezifische Groß-/Kleinschreibung, Sortierung, Formatierung, und Analyseregeln berücksichtigen.</span><span class="sxs-lookup"><span data-stu-id="9380d-251">A culture-sensitive operation acts on the value of the <xref:System.String> object, and takes culture-specific casing, sorting, formatting, and parsing rules into account.</span></span> <span data-ttu-id="9380d-252">Führen Sie kulturabhängige Operationen im Kontext einer explizit deklarierten Kultur oder implizite der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-252">Culture-sensitive operations execute in the context of an explicitly declared culture or the implicit current culture.</span></span> <span data-ttu-id="9380d-253">Die beiden Arten von Vorgängen können sehr unterschiedliche Ergebnisse erzeugen, wenn sie auf die gleiche Zeichenfolge ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-253">The two kinds of operations can produce very different results when they are performed on the same string.</span></span>  
  
 <span data-ttu-id="9380d-254">.NET Framework unterstützt auch kulturunabhängige linguistische Zeichenfolgenoperationen mit der invarianten Kultur (<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>), die lose basiert auf den kultureinstellungen der englischen Sprache unabhängig von der Region.</span><span class="sxs-lookup"><span data-stu-id="9380d-254">The .NET Framework also supports culture-insensitive linguistic string operations by using the invariant culture (<xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>), which is loosely based on the culture settings of the English language independent of region.</span></span> <span data-ttu-id="9380d-255">Im Gegensatz zu anderen <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> Einstellungen, die Einstellungen der invarianten Kultur sind garantiert auf einem einzelnen Computer, von System und für Versionen von .NET Framework System konsistent bleiben.</span><span class="sxs-lookup"><span data-stu-id="9380d-255">Unlike other <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> settings, the settings of the invariant culture are guaranteed to remain consistent on a single computer, from system to system, and across versions of the .NET Framework.</span></span> <span data-ttu-id="9380d-256">Die invariante Kultur kann als eine Art von Blackbox, die gewährleistet die Stabilität von Zeichenfolgenvergleichen betrieben und Bestellungen sein, in allen Kulturen.</span><span class="sxs-lookup"><span data-stu-id="9380d-256">The invariant culture can be seen as a kind of black box that ensures stability of string comparisons and ordering across all cultures.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9380d-257">Wenn die Anwendung eine sicherheitsentscheidung zu einen symbolischen Bezeichner wie z. B. ein Dateiname macht oder die named Pipe oder über persistente Daten wie z. B. die textbasierte Daten in eine XML-Datei, sollte der Vorgang einen Ordinalvergleich anstelle einen kulturabhängigen Vergleich verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-257">If your application makes a security decision about a symbolic identifier such as a file name or named pipe, or about persisted data such as the text-based data in an XML file, the operation should use an ordinal comparison instead of a culture-sensitive comparison.</span></span> <span data-ttu-id="9380d-258">Grund hierfür ist ein kulturabhängiger Vergleich zu anderen Ergebnissen je nach Kultur aktiviert ist, führen kann hingegen ein Ordinalvergleich ausschließlich auf den binären Wert der verglichenen Zeichen abhängt.</span><span class="sxs-lookup"><span data-stu-id="9380d-258">This is because a culture-sensitive comparison can yield different results depending on the culture in effect, whereas an ordinal comparison depends solely on the binary value of the compared characters.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9380d-259">Die meisten Methoden, die Zeichenfolgenvorgänge umfassen eine Überladung, die einen vom Typ Parameter <xref:System.StringComparison>, können Sie angeben, ob die Methode eine Ordnungszahl oder kulturabhängige Operation ausführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-259">Most methods that perform string operations include an overload that has a parameter of type <xref:System.StringComparison>, which enables you to specify whether the method performs an ordinal or culture-sensitive operation.</span></span> <span data-ttu-id="9380d-260">Im Allgemeinen sollten Sie diese Überladung, um den Zweck der Methode eindeutig zu machen aufrufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-260">In general, you should call this overload to make the intent of your method call clear.</span></span> <span data-ttu-id="9380d-261">Best Practices und Anleitungen zur Verwendung von Ordnungszahlen und kulturabhängige Vorgänge auf Zeichenfolgen, finden Sie unter [bewährte Methoden für die Verwendung von Zeichenfolgen](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-261">For best practices and guidance for using ordinal and culture-sensitive operations on strings, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="9380d-262">Vorgänge für [Schreibweise](#casing), [Analyse und Formatierung](#parsing), [Vergleich und Sortierung](#comparison), und [Testen auf Gleichheit](#equality) kann entweder Ordnungszahl oder kulturabhängig.</span><span class="sxs-lookup"><span data-stu-id="9380d-262">Operations for [casing](#casing), [parsing and formatting](#parsing), [comparison and sorting](#comparison), and [testing for equality](#equality) can be either ordinal or culture-sensitive.</span></span> <span data-ttu-id="9380d-263">Den folgenden Abschnitten werden die einzelnen Kategorien des Vorgangs.</span><span class="sxs-lookup"><span data-stu-id="9380d-263">The following sections discuss each category of operation.</span></span>  
  
> [!TIP]
>  <span data-ttu-id="9380d-264">Sie sollten immer eine methodenüberladung aufrufen, die den Zweck der Methode eindeutig macht.</span><span class="sxs-lookup"><span data-stu-id="9380d-264">You should always call a method overload that makes the intent of your method call clear.</span></span> <span data-ttu-id="9380d-265">Z. B. statt der <xref:System.String.Compare%28System.String%2CSystem.String%29> Methode, um einen kulturabhängigen Vergleich von zwei Zeichenfolgen mithilfe der Konventionen der aktuellen Kultur ausführen rufen Sie die <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> Methode mit einem Wert von <xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType> für die `comparisonType` Argument.</span><span class="sxs-lookup"><span data-stu-id="9380d-265">For example, instead of calling the <xref:System.String.Compare%28System.String%2CSystem.String%29> method to perform a culture-sensitive comparison of two strings by using the conventions of the current culture, you should call the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> method with a value of <xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType> for the `comparisonType` argument.</span></span> <span data-ttu-id="9380d-266">Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für die Verwendung von Zeichenfolgen in .NET Framework](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-266">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
<a name="casing"></a>   
### <a name="casing"></a><span data-ttu-id="9380d-267">Schreibweise</span><span class="sxs-lookup"><span data-stu-id="9380d-267">Casing</span></span>  
 <span data-ttu-id="9380d-268">Groß-/ Kleinschreibregeln bestimmen, wie die Groß-/Kleinschreibung von einem Unicode-Zeichen ändern wird. z. B. von Kleinbuchstaben in Großbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="9380d-268">Casing rules determine how to change the capitalization of a Unicode character; for example, from lowercase to uppercase.</span></span> <span data-ttu-id="9380d-269">Häufig wird ein Vorgang zur Groß-und Kleinschreibung vor einen Zeichenfolgenvergleich durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-269">Often, a casing operation is performed before a string comparison.</span></span> <span data-ttu-id="9380d-270">Beispielsweise kann eine Zeichenfolge in Großbuchstaben konvertiert werden, damit er mit einer anderen Großbuchstaben Zeichenfolge verglichen werden kann.</span><span class="sxs-lookup"><span data-stu-id="9380d-270">For example, a string might be converted to uppercase so that it can be compared with another uppercase string.</span></span> <span data-ttu-id="9380d-271">Sie können die Zeichen in eine Zeichenfolge, die durch den Aufruf in Kleinbuchstaben konvertieren die <xref:System.String.ToLower%2A> oder <xref:System.String.ToLowerInvariant%2A> Methode, und Sie können sie durch den Aufruf in Großbuchstaben konvertieren die <xref:System.String.ToUpper%2A> oder <xref:System.String.ToUpperInvariant%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-271">You can convert the characters in a string to lowercase by calling the <xref:System.String.ToLower%2A> or <xref:System.String.ToLowerInvariant%2A> method, and you can convert them to uppercase by calling the <xref:System.String.ToUpper%2A> or <xref:System.String.ToUpperInvariant%2A> method.</span></span> <span data-ttu-id="9380d-272">Darüber hinaus können Sie die <xref:System.Globalization.TextInfo.ToTitleCase%2A?displayProperty=nameWithType> Methode zum Konvertieren einer Zeichenfolge in titelschreibung.</span><span class="sxs-lookup"><span data-stu-id="9380d-272">In addition, you can use the <xref:System.Globalization.TextInfo.ToTitleCase%2A?displayProperty=nameWithType> method to convert a string to title case.</span></span>  
  
 <span data-ttu-id="9380d-273">Schreibweise Vorgänge können auf die Regeln für die aktuelle Kultur, einer angegebenen Kultur oder der invarianten Kultur basieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-273">Casing operations can be based on the rules of the current culture, a specified culture, or the invariant culture.</span></span> <span data-ttu-id="9380d-274">Da schreibungszuordnungen abhängig von der verwendeten Kultur variieren können, kann das Ergebnis der Schreibweise Vorgänge basierend auf Kultur variieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-274">Because case mappings can vary depending on the culture used, the result of casing operations can vary based on culture.</span></span> <span data-ttu-id="9380d-275">Die tatsächlichen Unterschiede in Groß-/Kleinschreibung gibt es drei Arten:</span><span class="sxs-lookup"><span data-stu-id="9380d-275">The actual differences in casing are of three kinds:</span></span>  
  
-   <span data-ttu-id="9380d-276">Unterschiede in der Zuordnung der Schreibweise des LATIN CAPITAL LETTER I (U + 0049), kleinen Buchstaben LATEINISCH I (U + 0069), LATIN CAPITAL LETTER I mit Punkt oben (U + 0130) und LATIN kleine Buchstaben ohne Punkte I (U + 0131).</span><span class="sxs-lookup"><span data-stu-id="9380d-276">Differences in the case mapping of LATIN CAPITAL LETTER I (U+0049), LATIN SMALL LETTER I (U+0069), LATIN CAPITAL LETTER I WITH DOT ABOVE (U+0130), and LATIN SMALL LETTER DOTLESS I (U+0131).</span></span> <span data-ttu-id="9380d-277">In die Latn-Verfügbarkeitszonenübergreifende (Aserbaidschan, Lateinisch)-Kulturen und tr-TR (Türkisch (Türkei)) und in der tr az und az-Latn neutrale Kulturen die kleinbuchstabenentsprechung von LATIN CAPITAL LETTER I ist LATIN kleine Buchstaben ohne Punkte I und ist der entsprechende Großbuchstabe LATIN kleine Buchstaben I LATIN CAPITAL LETTER ICH MIT PUNKT OBEN.</span><span class="sxs-lookup"><span data-stu-id="9380d-277">In the tr-TR (Turkish (Turkey)) and az-Latn-AZ (Azerbaijan, Latin) cultures, and in the tr, az, and az-Latn neutral cultures, the lowercase equivalent of LATIN CAPITAL LETTER I is LATIN SMALL LETTER DOTLESS I, and the uppercase equivalent of LATIN SMALL LETTER I is LATIN CAPITAL LETTER I WITH DOT ABOVE.</span></span> <span data-ttu-id="9380d-278">In allen anderen Kulturen einschließlich der invarianten Kultur, kleine Buchstaben LATEINISCH I und LATIN CAPITAL LETTER ich die Groß- und Kleinbuchstaben Entsprechungen sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-278">In all other cultures, including the invariant culture, LATIN SMALL LETTER I and LATIN CAPITAL LETTER I are lowercase and uppercase equivalents.</span></span>  
  
     <span data-ttu-id="9380d-279">Im folgenden Beispiel wird veranschaulicht, wie einen Zeichenfolgenvergleich entwickelt zu Dateisystemzugriff zu verhindern, dass durchgeführt werden können, wenn es auf einem Vergleich kulturabhängig Groß-/Kleinschreibung verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-279">The following example demonstrates how a string comparison designed to prevent file system access can fail if it relies on a culture-sensitive casing comparison.</span></span> <span data-ttu-id="9380d-280">(Die Groß-/ Kleinschreibungskonventionen der invarianten Kultur sollte verwendet werden.)</span><span class="sxs-lookup"><span data-stu-id="9380d-280">(The casing conventions of the invariant culture should have been used.)</span></span>  
  
     [!code-csharp[System.String.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/case2.cs#17)]
     [!code-vb[System.String.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/case2.vb#17)]  
  
-   <span data-ttu-id="9380d-281">Unterschiede in der Groß-/Kleinschreibung Zuordnungen zwischen der invarianten Kultur und alle anderen Kulturen.</span><span class="sxs-lookup"><span data-stu-id="9380d-281">Differences in case mappings between the invariant culture and all other cultures.</span></span> <span data-ttu-id="9380d-282">In diesen Fällen gibt das gleiche Zeichen zurück, wenn Sie mit der Groß-/ Kleinschreibregeln der invarianten Kultur, um ein Zeichen in Groß-oder Kleinbuchstaben zu ändern.</span><span class="sxs-lookup"><span data-stu-id="9380d-282">In these cases, using the casing rules of the invariant culture to change a character to uppercase or lowercase returns the same character.</span></span> <span data-ttu-id="9380d-283">Für alle anderen Kulturen wird ein anderes Zeichen zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-283">For all other cultures, it returns a different character.</span></span> <span data-ttu-id="9380d-284">Einige der betroffenen Zeichen sind in der folgenden Tabelle aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-284">Some of the affected characters are listed in the following table.</span></span>  
  
    |<span data-ttu-id="9380d-285">Zeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-285">Character</span></span>|<span data-ttu-id="9380d-286">Wenn in geändert</span><span class="sxs-lookup"><span data-stu-id="9380d-286">If changed to</span></span>|<span data-ttu-id="9380d-287">Rückgabe</span><span class="sxs-lookup"><span data-stu-id="9380d-287">Returns</span></span>|  
    |---------------|-------------------|-------------|  
    |<span data-ttu-id="9380d-288">NM-ANMELDUNG (U + 00B5)</span><span class="sxs-lookup"><span data-stu-id="9380d-288">MICRON SIGN (U+00B5)</span></span>|<span data-ttu-id="9380d-289">Großbuchstaben</span><span class="sxs-lookup"><span data-stu-id="9380d-289">Uppercase</span></span>|<span data-ttu-id="9380d-290">GRIECHISCHEN GROSSBUCHSTABEN MU (U +-39C)</span><span class="sxs-lookup"><span data-stu-id="9380d-290">GREEK CAPITAL LETTER MU (U+-39C)</span></span>|  
    |<span data-ttu-id="9380d-291">LATIN CAPITAL LETTER ICH PUNKT OBEN (U + 0130)</span><span class="sxs-lookup"><span data-stu-id="9380d-291">LATIN CAPITAL LETTER I WITH DOT ABOVE (U+0130)</span></span>|<span data-ttu-id="9380d-292">Kleinbuchstaben</span><span class="sxs-lookup"><span data-stu-id="9380d-292">Lowercase</span></span>|<span data-ttu-id="9380d-293">LATEINISCHE KLEINE BUCHSTABE I (U + 0069)</span><span class="sxs-lookup"><span data-stu-id="9380d-293">LATIN SMALL LETTER I (U+0069)</span></span>|  
    |<span data-ttu-id="9380d-294">KLEINES LATEINISCHES DOTLESS ICH (U + 0131)</span><span class="sxs-lookup"><span data-stu-id="9380d-294">LATIN SMALL LETTER DOTLESS I (U+0131)</span></span>|<span data-ttu-id="9380d-295">Großbuchstaben</span><span class="sxs-lookup"><span data-stu-id="9380d-295">Uppercase</span></span>|<span data-ttu-id="9380d-296">LATIN CAPITAL LETTER ICH (U + 0049)</span><span class="sxs-lookup"><span data-stu-id="9380d-296">LATIN CAPITAL LETTER I (U+0049)</span></span>|  
    |<span data-ttu-id="9380d-297">KLEINES LATEINISCHES LANGE S (U + 017F)</span><span class="sxs-lookup"><span data-stu-id="9380d-297">LATIN SMALL LETTER LONG S (U+017F)</span></span>|<span data-ttu-id="9380d-298">Großbuchstaben</span><span class="sxs-lookup"><span data-stu-id="9380d-298">Uppercase</span></span>|<span data-ttu-id="9380d-299">LATIN CAPITAL LETTER S (U + 0053)</span><span class="sxs-lookup"><span data-stu-id="9380d-299">LATIN CAPITAL LETTER S (U+0053)</span></span>|  
    |<span data-ttu-id="9380d-300">LATEINISCHE GROSSBUCHSTABEN D MIT KLEINEN BUCHSTABEN Z MIT HÄKCHEN (U + 01C 5)</span><span class="sxs-lookup"><span data-stu-id="9380d-300">LATIN CAPITAL LETTER D WITH SMALL LETTER Z WITH CARON (U+01C5)</span></span>|<span data-ttu-id="9380d-301">Kleinbuchstaben</span><span class="sxs-lookup"><span data-stu-id="9380d-301">Lowercase</span></span>|<span data-ttu-id="9380d-302">KLEINES LATEINISCHES DZ MIT HÄKCHEN (U + 01C 6)</span><span class="sxs-lookup"><span data-stu-id="9380d-302">LATIN SMALL LETTER DZ WITH CARON (U+01C6)</span></span>|  
    |<span data-ttu-id="9380d-303">KOMBINIEREN VON YPOGRAMMENI (U + 0345)</span><span class="sxs-lookup"><span data-stu-id="9380d-303">COMBINING GREEK YPOGEGRAMMENI (U+0345)</span></span>|<span data-ttu-id="9380d-304">Großbuchstaben</span><span class="sxs-lookup"><span data-stu-id="9380d-304">Uppercase</span></span>|<span data-ttu-id="9380d-305">GRIECHISCHEN GROSSBUCHSTABEN IOTA (U + 0399)</span><span class="sxs-lookup"><span data-stu-id="9380d-305">GREEK CAPITAL LETTER IOTA (U+0399)</span></span>|  
  
-   <span data-ttu-id="9380d-306">Unterschiede in der Groß-/Kleinschreibung Zuordnungen von zwei Buchstaben bestehenden gemischter-Paare im ASCII-Zeichenbereich.</span><span class="sxs-lookup"><span data-stu-id="9380d-306">Differences in case mappings of two-letter mixed-case pairs in the ASCII character range.</span></span> <span data-ttu-id="9380d-307">In den meisten Kulturen ist ein kleingeschriebener zweibuchstabiger-gemischter-Paar gleich an das entsprechende Paar aus zwei Buchstaben bestehenden Groß- oder Kleinbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="9380d-307">In most cultures, a two-letter mixed-case pair is equal to the equivalent two-letter uppercase or lowercase pair.</span></span> <span data-ttu-id="9380d-308">Dies gilt nicht für die folgenden Paare aus zwei Buchstaben in den folgenden Kulturen, da in jedem Fall sie nicht auf einen Digraph verglichen werden:</span><span class="sxs-lookup"><span data-stu-id="9380d-308">This is not true for the following two-letter pairs in the following cultures, because in each case they are compared to a digraph:</span></span>  
  
    -   <span data-ttu-id="9380d-309">"lJ" und "nJ", in die Kultur hr-HR (Kroatisch (Kroatien)).</span><span class="sxs-lookup"><span data-stu-id="9380d-309">"lJ" and "nJ" in the hr-HR (Croatian (Croatia)) culture.</span></span>  
  
    -   <span data-ttu-id="9380d-310">"cH" in der Cs-CZ (Tschechisch (Tschechische Republik)) und Kulturen der sk-SK (Slowakisch (Slowakei)).</span><span class="sxs-lookup"><span data-stu-id="9380d-310">"cH" in the cs-CZ (Czech (Czech Republic)) and sk-SK (Slovak (Slovakia)) cultures.</span></span>  
  
    -   <span data-ttu-id="9380d-311">"aA" in der Kultur da-DK (Dänisch (Dänemark)).</span><span class="sxs-lookup"><span data-stu-id="9380d-311">"aA" in the da-DK (Danish (Denmark)) culture.</span></span>  
  
    -   <span data-ttu-id="9380d-312">"cS", "dZ", "dZS", "nY", "sZ", "tY" und "zS" in der Kultur Hu-HU (Ungarisch (Ungarn)).</span><span class="sxs-lookup"><span data-stu-id="9380d-312">"cS", "dZ", "dZS", "nY", "sZ", "tY", and "zS" in the hu-HU (Hungarian (Hungary)) culture.</span></span>  
  
    -   <span data-ttu-id="9380d-313">"cH" und "lL" in der Kultur es-ES_tradnl (Spanisch (Spanien, Traditionelle Sortierung)).</span><span class="sxs-lookup"><span data-stu-id="9380d-313">"cH" and "lL" in the es-ES_tradnl (Spanish (Spain, Traditional Sort)) culture.</span></span>  
  
    -   <span data-ttu-id="9380d-314">"cH", "gI", "kH", "nG" "Notification Hub", "pH", "qU", "tH" und "tR" in der Kultur des vi-VN (Vietnamesisch (Vietnam)).</span><span class="sxs-lookup"><span data-stu-id="9380d-314">"cH", "gI", "kH", "nG" "nH", "pH", "qU', "tH", and "tR" in the vi-VN (Vietnamese (Vietnam)) culture.</span></span>  
  
     <span data-ttu-id="9380d-315">Es ist jedoch ungewöhnlich, die eine Situation, in der ein kulturabhängiger Vergleich dieser Paare Probleme erstellt, auftreten, da diese Paare feste Zeichenfolgen oder Bezeichner selten auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-315">However, it is unusual to encounter a situation in which a culture-sensitive comparison of these pairs creates problems, because these pairs are uncommon in fixed strings or identifiers.</span></span>  
  
 <span data-ttu-id="9380d-316">Das folgende Beispiel veranschaulicht einige der Unterschiede in der Groß-/ Kleinschreibregeln zwischen Kulturen, die beim Konvertieren von Zeichenfolgen in Großbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="9380d-316">The following example illustrates some of the differences in casing rules between cultures when converting strings to uppercase.</span></span>  
  
 [!code-cpp[System.String.Class#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.casing.cpp#7)]
 [!code-csharp[System.String.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/case1.cs#7)]
 [!code-vb[System.String.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/case1.vb#7)]  
  
<a name="parsing"></a>   
### <a name="parsing-and-formatting"></a><span data-ttu-id="9380d-317">Analyse und Formatierung</span><span class="sxs-lookup"><span data-stu-id="9380d-317">Parsing and formatting</span></span>  
 <span data-ttu-id="9380d-318">Formatierung und Analyse sind umgekehrte Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="9380d-318">Formatting and parsing are inverse operations.</span></span> <span data-ttu-id="9380d-319">Formatierungsregeln bestimmen Sie, wie einen Wert, z. B. ein Datum und Uhrzeit oder eine Zahl ist, in seine zeichenfolgenentsprechung konvertiert während Analyseregeln Gewusst wie: Konvertieren einer Zeichenfolgendarstellung in einen Wert wie z. B. Datum und Uhrzeit bestimmen.</span><span class="sxs-lookup"><span data-stu-id="9380d-319">Formatting rules determine how to convert a value, such as a date and time or a number, to its string representation, whereas parsing rules determine how to convert a string representation to a value such as a date and time.</span></span> <span data-ttu-id="9380d-320">Kulturelle Konventionen hängen sowohl Formatierung und Analyse für Regeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-320">Both formatting and parsing rules are dependent on cultural conventions.</span></span> <span data-ttu-id="9380d-321">Das folgende Beispiel veranschaulicht die Mehrdeutigkeit, die auftreten kann, wenn eine kulturspezifische Datumszeichenfolge zu interpretieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-321">The following example illustrates the ambiguity that can arise when interpreting a culture-specific date string.</span></span> <span data-ttu-id="9380d-322">Ohne Kenntnis der Konventionen der Kultur, die verwendet wurde, um eine Datumszeichenfolge zu erzeugen, ist es nicht möglich, um herauszufinden, ob 03/01/2011, 3/1/2011 und 01/03/2011 3. Januar 2011 oder 1. März 2011 darstellen.</span><span class="sxs-lookup"><span data-stu-id="9380d-322">Without knowing the conventions of the culture that was used to produce a date string, it is not possible to know whether 03/01/2011, 3/1/2011, and 01/03/2011 represent January 3, 2011 or March 1, 2011.</span></span>  
  
 [!code-cpp[System.String.Class#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.format1.cpp#8)]
 [!code-csharp[System.String.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/format1.cs#8)]
 [!code-vb[System.String.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/format1.vb#8)]  
  
 <span data-ttu-id="9380d-323">Auf ähnliche Weise wie im folgenden Beispiel wird gezeigt, kann eine einzelne Zeichenfolge unterschiedliche Daten je nach Kultur erstellen, dessen Konventionen in den Analysevorgang verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-323">Similarly, as the following example shows, a single string can produce different dates depending on the culture whose conventions are used in the parsing operation.</span></span>  
  
 [!code-cpp[System.String.Class#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.parse1.cpp#9)]
 [!code-csharp[System.String.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/parse1.cs#9)]
 [!code-vb[System.String.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/parse1.vb#9)]  
  
<a name="comparison"></a>   
### <a name="string-comparison-and-sorting"></a><span data-ttu-id="9380d-324">Zeichenfolgenvergleich und-Sortierung</span><span class="sxs-lookup"><span data-stu-id="9380d-324">String comparison and sorting</span></span>  
 <span data-ttu-id="9380d-325">Konventionen für die vergleichenden und sortierenden Zeichenfolgen variieren Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-325">Conventions for comparing and sorting strings vary from culture to culture.</span></span> <span data-ttu-id="9380d-326">Beispielsweise kann die Sortierreihenfolge auf der Phonetik oder der visuellen Darstellung von Zeichen basieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-326">For example, the sort order may be based on phonetics or on the visual representation of characters.</span></span> <span data-ttu-id="9380d-327">In ostasiatischen Sprachen werden Zeichen anhand der Anzahl der Striche und der Radikale der Ideogramme sortiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-327">In East Asian languages, characters are sorted by the stroke and radical of ideographs.</span></span> <span data-ttu-id="9380d-328">Die Sortierung hängt außerdem von der Reihenfolge ab, die das Alphabet der jeweiligen Sprache bzw. Kultur aufweist.</span><span class="sxs-lookup"><span data-stu-id="9380d-328">Sorting also depends on the order languages and cultures use for the alphabet.</span></span> <span data-ttu-id="9380d-329">Im Dänischen gibt es beispielsweise das Zeichen "Æ", das im Alphabet nach dem Zeichen "Z" einsortiert ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-329">For example, the Danish language has an "Æ" character that it sorts after "Z" in the alphabet.</span></span> <span data-ttu-id="9380d-330">Darüber hinaus können es sich bei Vergleichen Groß-/Kleinschreibung oder Groß-/Kleinschreibung, und in einigen Fällen Regeln Groß-und Kleinschreibung unterscheiden sich auch nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-330">In addition, comparisons can be case-sensitive or case-insensitive, and in some cases casing rules also differ by culture.</span></span> <span data-ttu-id="9380d-331">Ordinalvergleich, verwendet die Unicode-Codepunkte einzelner Zeichen auf der anderen Seite in einer Zeichenfolge, die beim Vergleichen und Sortieren von Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-331">Ordinal comparison, on the other hand, uses the Unicode code points of individual characters in a string when comparing and sorting strings.</span></span>  
  
 <span data-ttu-id="9380d-332">Sortierregeln bestimmen, dass die alphabetische Reihenfolge der Unicode-Zeichen und wie Zeichenfolgen miteinander vergleichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-332">Sort rules determine the alphabetic order of Unicode characters and how two strings compare to each other.</span></span> <span data-ttu-id="9380d-333">Z. B. die <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> Methode vergleicht zwei Zeichenfolgen, die auf der Grundlage der <xref:System.StringComparison> Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-333">For example, the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> method compares two strings based on the <xref:System.StringComparison> parameter.</span></span> <span data-ttu-id="9380d-334">Wenn der Parameterwert ist <xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType>, die Methode führt einen linguistischen Vergleich, der die Konventionen der aktuellen Kultur; verwendet, wenn der Parameterwert ist <xref:System.StringComparison.Ordinal?displayProperty=nameWithType>, die Methode führt einen Ordinalvergleich.</span><span class="sxs-lookup"><span data-stu-id="9380d-334">If the parameter value is <xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType>, the method performs a linguistic comparison that uses the conventions of the current culture; if the parameter value is <xref:System.StringComparison.Ordinal?displayProperty=nameWithType>, the method performs an ordinal comparison.</span></span> <span data-ttu-id="9380d-335">Folglich, wie das folgende Beispiel zeigt, wenn die aktuelle Kultur Englisch Englisch, der erste Aufruf der <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> (mithilfe von kulturabhängigen Vergleich) Methode betrachtet, "a" kleiner als "A", aber der zweite Aufruf (mit Ordinalvergleich) derselben Methode betrachtet "a" größer als "A".</span><span class="sxs-lookup"><span data-stu-id="9380d-335">Consequently, as the following example shows, if the current culture is U.S. English, the first call to the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29?displayProperty=nameWithType> method (using culture-sensitive comparison) considers "a" less than "A", but the second call to the same method (using ordinal comparison) considers "a" greater than "A".</span></span>  
  
 [!code-cpp[System.String.Class#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.compare1.cpp#10)]
 [!code-csharp[System.String.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/compare1.cs#10)]
 [!code-vb[System.String.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/compare1.vb#10)]  
  
 <span data-ttu-id="9380d-336">.NET Framework unterstützt Wort-, Zeichenfolgen- und Ordinalsortierregeln:</span><span class="sxs-lookup"><span data-stu-id="9380d-336">The .NET Framework supports word, string, and ordinal sort rules:</span></span>  
  
-   <span data-ttu-id="9380d-337">Bei einer Wortsortierung wird ein kulturabhängiger Vergleich von Zeichenfolgen durchgeführt, bei dem bestimmten nicht alphanumerischen Unicode-Zeichen u. U. bestimmte Gewichtungen zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-337">A word sort performs a culture-sensitive comparison of strings in which certain nonalphanumeric Unicode characters might have special weights assigned to them.</span></span> <span data-ttu-id="9380d-338">Z. B. der Bindestrich (-) möglicherweise eine sehr geringe Gewichtung zugeordnet, sodass "Coop" und "coop" in einer sortierten Liste nebeneinander angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-338">For example, the hyphen (-) might have a very small weight assigned to it so that "coop" and "co-op" appear next to each other in a sorted list.</span></span> <span data-ttu-id="9380d-339">Eine Liste mit den <xref:System.String> Methoden, Vergleichen von zwei Zeichenfolgen mithilfe der Word-Sortierregeln, finden Sie unter der [Zeichenfolgenoperationen nach Kategorie](#ByCategory) Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="9380d-339">For a list of the <xref:System.String> methods that compare two strings using word sort rules, see the [String operations by category](#ByCategory) section.</span></span>  
  
-   <span data-ttu-id="9380d-340">Eine führt auch einen kulturabhängigen Vergleich.</span><span class="sxs-lookup"><span data-stu-id="9380d-340">A string sort also performs a culture-sensitive comparison.</span></span> <span data-ttu-id="9380d-341">Es ähnelt einer wortsortierung, außer dass es keine Sonderfälle gibt und alle nicht alphanumerischen Symbole vor allen alphanumerischen Unicode-Zeichen sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-341">It is similar to a word sort, except that there are no special cases, and all nonalphanumeric symbols come before all alphanumeric Unicode characters.</span></span> <span data-ttu-id="9380d-342">Zwei Zeichenfolgen können verglichen werden, mithilfe von Zeichenfolge-Sortierregeln durch Aufrufen der <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> Überladungen der Methode, die eine `options` Parameter bereitgestellte Wert <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-342">Two strings can be compared using string sort rules by calling the <xref:System.Globalization.CompareInfo.Compare%2A?displayProperty=nameWithType> method overloads that have an `options` parameter that is supplied a value of <xref:System.Globalization.CompareOptions.StringSort?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-343">Beachten Sie, dass dies nur eine Methode enthält, die .NET Framework bietet zum Vergleichen von zwei Zeichenfolgen mithilfe von Zeichenfolge-Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-343">Note that this is the only method that the .NET Framework provides to compare two strings using string sort rules.</span></span>  
  
-   <span data-ttu-id="9380d-344">Eine Ordinalsortierung vergleicht Zeichenfolgen anhand des numerischen Werts jedes <xref:System.Char>-Objekts in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-344">An ordinal sort compares strings based on the numeric value of each <xref:System.Char> object in the string.</span></span> <span data-ttu-id="9380d-345">Ein ordinalen Vergleich ist automatisch die Groß-/Kleinschreibung beachtet, da die Groß- und Kleinbuchstaben Versionen eines Zeichens verschiedene Codepunkte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-345">An ordinal comparison is automatically case-sensitive because the lowercase and uppercase versions of a character have different code points.</span></span> <span data-ttu-id="9380d-346">Wenn Fall nicht wichtig ist, können Sie jedoch einen ordinalen Vergleich angeben, der Groß-und Kleinschreibung ignoriert.</span><span class="sxs-lookup"><span data-stu-id="9380d-346">However, if case is not important, you can specify an ordinal comparison that ignores case.</span></span> <span data-ttu-id="9380d-347">Dies entspricht dem Konvertieren der Zeichenfolge in Großbuchstaben unter Verwendung der invarianten Kultur, und klicken Sie dann einen Ordinalvergleich ausführen, auf dem Ergebnis.</span><span class="sxs-lookup"><span data-stu-id="9380d-347">This is equivalent to converting the string to uppercase by using the invariant culture and then performing an ordinal comparison on the result.</span></span> <span data-ttu-id="9380d-348">Eine Liste mit den <xref:System.String> Methoden, Vergleichen von zwei Zeichenfolgen mithilfe der ordinalen Sortierregeln, finden Sie unter der [Zeichenfolgenoperationen nach Kategorie](#ByCategory) Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="9380d-348">For a list of the <xref:System.String> methods that compare two strings using ordinal sort rules, see the [String operations by category](#ByCategory) section.</span></span>  
  
 <span data-ttu-id="9380d-349">Ein kulturabhängiger Vergleich ist ein Vergleich, explizit oder implizit verwendet, eine <xref:System.Globalization.CultureInfo> -Objekts, einschließlich der invarianten Kultur, die angegeben wird die <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9380d-349">A culture-sensitive comparison is any comparison that explicitly or implicitly uses a <xref:System.Globalization.CultureInfo> object, including the invariant culture that is specified by the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9380d-350">Die implizite Kultur ist die aktuelle Kultur, die von angegeben wird die <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> und <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="9380d-350">The implicit culture is the current culture, which is specified by the <xref:System.Threading.Thread.CurrentCulture%2A?displayProperty=nameWithType> and <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> properties.</span></span> <span data-ttu-id="9380d-351">Ist es beträchtliche Abweichung in der Sortierreihenfolge von alphabetischen Zeichen (d. h. Zeichen für die die <xref:System.Char.IsLetter%2A?displayProperty=nameWithType> -Eigenschaft gibt `true`) über Kulturen hinweg.</span><span class="sxs-lookup"><span data-stu-id="9380d-351">There is considerable variation in the sort order of alphabetic characters (that is, characters for which the <xref:System.Char.IsLetter%2A?displayProperty=nameWithType> property returns `true`) across cultures.</span></span> <span data-ttu-id="9380d-352">Sie können angeben, dass einen kulturabhängiger Vergleich, der die Konventionen einer bestimmten Kultur durch Angabe verwendet eine <xref:System.Globalization.CultureInfo> Objekt auf einer Zeichenfolgenvergleichsmethode wie <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29>.</span><span class="sxs-lookup"><span data-stu-id="9380d-352">You can specify a culture-sensitive comparison that uses the conventions of a specific culture by supplying a <xref:System.Globalization.CultureInfo> object to a string comparison method such as <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29>.</span></span> <span data-ttu-id="9380d-353">Können Sie angeben, einen kulturabhängigen Vergleich, der die Konventionen der aktuellen Kultur durch Angabe verwendet <xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType>, <xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType>, oder ein Mitglied der <xref:System.Globalization.CompareOptions> Enumeration außer <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> oder <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> auf einen entsprechenden Überladen von der <xref:System.String.Compare%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-353">You can specify a culture-sensitive comparison that uses the conventions of the current culture by supplying <xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType>, <xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType>, or any member of the <xref:System.Globalization.CompareOptions> enumeration other than <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> or <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> to an appropriate overload of the <xref:System.String.Compare%2A> method.</span></span> <span data-ttu-id="9380d-354">Ein kulturabhängiger Vergleich ist im Allgemeinen gut geeignet für die Sortierung während ein ordinalen Vergleich nicht ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-354">A culture-sensitive comparison is generally appropriate for sorting whereas an ordinal comparison is not.</span></span> <span data-ttu-id="9380d-355">Ein ordinalen Vergleich ist im Allgemeinen gut geeignet, um zu bestimmen, ob zwei Zeichenfolgen gleich sind (d. h. bei der identitätsbestimmung) dagegen ein kulturabhängigen Vergleich nicht ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-355">An ordinal comparison is generally appropriate for determining whether two strings are equal (that is, for determining identity) whereas a culture-sensitive comparison is not.</span></span>  
  
 <span data-ttu-id="9380d-356">Das folgende Beispiel veranschaulicht den Unterschied zwischen kulturabhängige und ordinalen Vergleich.</span><span class="sxs-lookup"><span data-stu-id="9380d-356">The following example illustrates the difference between culture-sensitive and ordinal comparison.</span></span> <span data-ttu-id="9380d-357">Im Beispiel, das ausgewertet wird, drei Zeichenfolgen, "Apple", "Æble" und "AEble", die mithilfe von ordinalen Vergleich und die Konventionen der Kulturen da-DK "und" En-US (von denen jeder ist die Standardkultur, zum Zeitpunkt der <xref:System.String.Compare%2A> Methode wird aufgerufen).</span><span class="sxs-lookup"><span data-stu-id="9380d-357">The example evaluates three strings, "Apple", "Æble", and "AEble", using ordinal comparison and the conventions of the da-DK and en-US cultures (each of which is the default culture at the time the <xref:System.String.Compare%2A> method is called).</span></span> <span data-ttu-id="9380d-358">Da die dänische Sprache das Zeichen "Æ" als einzelner Buchstabe wird und sie nach "Z" im Alphabet beginnen sortiert, ist die Zeichenfolge "Æble" größer als "Apple".</span><span class="sxs-lookup"><span data-stu-id="9380d-358">Because the Danish language treats the character "Æ" as an individual letter and sorts it after "Z" in the alphabet, the string "Æble" is greater than "Apple".</span></span> <span data-ttu-id="9380d-359">"Æble" ist jedoch nicht äquivalent zu "AEble", angesehen, ist die "Æble" auch größer als "AEble".</span><span class="sxs-lookup"><span data-stu-id="9380d-359">However, "Æble" is not considered equivalent to "AEble", so "Æble" is also greater than "AEble".</span></span> <span data-ttu-id="9380d-360">Die Kultur En-US interpretiert als Entsprechung zu "AE", die erklärt, warum "Æble" kleiner als "Apple", aber gleich "AEble" ist jedoch nicht der Buchstabe "Æ" enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-360">The en-US culture doesn't include the letter"Æ" but treats it as equivalent to "AE", which explains why  "Æble" is less than "Apple" but equal to "AEble".</span></span> <span data-ttu-id="9380d-361">Ordinalvergleich, berücksichtigt dagegen auf "Apple" kleiner als "Æble" und "Æble" größer als "AEble" sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-361">Ordinal comparison, on the other hand, considers "Apple" to be less than "Æble", and "Æble" to be greater than "AEble".</span></span>  
  
 [!code-csharp[System.String.Class#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/compare4.cs#21)]
 [!code-vb[System.String.Class#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/compare4.vb#21)]  
  
 <span data-ttu-id="9380d-362">Verwenden Sie die folgenden allgemeinen Richtlinien, um eine entsprechende Sortierung oder Zeichenfolge Vergleichsmethode auszuwählen:</span><span class="sxs-lookup"><span data-stu-id="9380d-362">Use the following general guidelines to choose an appropriate sorting or string comparison method:</span></span>  
  
-   <span data-ttu-id="9380d-363">Wenn Sie die Zeichenfolgen sortiert werden basierend auf der Kultur des Benutzers möchten, müssen Sie basierend auf der die Konventionen der aktuellen Kultur Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-363">If you want the strings to be ordered based on the user's culture, you should order them based on the conventions of the current culture.</span></span> <span data-ttu-id="9380d-364">Wenn die Kultur des Benutzers ändert, wird die Reihenfolge der sortierten Zeichenfolgen auch entsprechend geändert.</span><span class="sxs-lookup"><span data-stu-id="9380d-364">If the user's culture changes, the order of sorted strings will also change accordingly.</span></span> <span data-ttu-id="9380d-365">Beispielsweise sollte eine Thesaurus-Anwendung immer Wörter, die basierend auf der Kultur des Benutzers sortieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-365">For example, a thesaurus application should always sort words based on the user's culture.</span></span>  
  
-   <span data-ttu-id="9380d-366">Gegebenenfalls die Zeichenfolgen, die bestellt werden basierend auf den Konventionen einer bestimmten Kultur bestellen Sie sie durch Angabe einer <xref:System.Globalization.CultureInfo> -Objekt, das die Kultur für eine Vergleichsmethode darstellt.</span><span class="sxs-lookup"><span data-stu-id="9380d-366">If you want the strings to be ordered based on the conventions of a specific culture, you should order them by supplying a <xref:System.Globalization.CultureInfo> object that represents that culture to a comparison method.</span></span> <span data-ttu-id="9380d-367">Beispielsweise sollen in einer Anwendung entwickelt, um Schüler und Studenten mit eine bestimmte Sprache zu unterrichten, Zeichenfolgen, die bestellt werden basierend auf den Konventionen der eine der Kulturen, die diese Sprache spricht.</span><span class="sxs-lookup"><span data-stu-id="9380d-367">For example, in an application designed to teach students a particular language, you want strings to be ordered based on the conventions of one of the cultures that speaks that language.</span></span>  
  
-   <span data-ttu-id="9380d-368">Wenn Sie die Reihenfolge der Zeichenfolgen über Kulturen hinweg unverändert bleiben möchten, sollten Sie in beliebiger Reihenfolge basierend auf den Konventionen der invarianten Kultur oder verwenden einen Ordinalvergleich durch.</span><span class="sxs-lookup"><span data-stu-id="9380d-368">If you want the order of strings to remain unchanged across cultures, you should order them based on the conventions of the invariant culture or use an ordinal comparison.</span></span> <span data-ttu-id="9380d-369">Beispielsweise würde eine Ordinalsortierung verwenden, um die Namen der Dateien, Prozesse, Mutexe zu organisieren oder named Pipes.</span><span class="sxs-lookup"><span data-stu-id="9380d-369">For example, you would use an ordinal sort to organize the names of files, processes, mutexes, or named pipes.</span></span>  
  
-   <span data-ttu-id="9380d-370">Einen Vergleich, der eine sicherheitsentscheidung (z. B., ob ein Benutzername gültig ist) umfasst, sollten Sie immer einen Ordnungszahlen Test auf Gleichheit durch Aufruf einer Überladung der Ausführen der <xref:System.String.Equals%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-370">For a comparison that involves a security decision (such as whether a username is valid), you should always perform an ordinal test for equality by calling an overload of the <xref:System.String.Equals%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-371">Der kulturabhängige Sortierung und Groß-/Kleinschreibung beim Zeichenfolgenvergleich verwendete Regeln, abhängig von der Version von .NET Framework ab.</span><span class="sxs-lookup"><span data-stu-id="9380d-371">The culture-sensitive sorting and casing rules used in string comparison depend on the version of the .NET Framework.</span></span> <span data-ttu-id="9380d-372">In .NET Framework [!INCLUDE[net_v45](~/includes/net-v45-md.md)] unter der [!INCLUDE[win8](~/includes/win8-md.md)] operating System, Sortierung, die Groß-/Kleinschreibung, Normalisierung und Unicode-Zeichen-Informationen für den Standard Unicode 6.0 entspricht.</span><span class="sxs-lookup"><span data-stu-id="9380d-372">In the .NET Framework [!INCLUDE[net_v45](~/includes/net-v45-md.md)] running on the [!INCLUDE[win8](~/includes/win8-md.md)] operating system, sorting, casing, normalization, and Unicode character information conforms to the Unicode 6.0 standard.</span></span> <span data-ttu-id="9380d-373">Bei anderen Betriebssystemen entspricht es dem Standard Unicode 5.0.</span><span class="sxs-lookup"><span data-stu-id="9380d-373">On other operating systems, it conforms to the Unicode 5.0 standard.</span></span>  
  
 <span data-ttu-id="9380d-374">Weitere Informationen über Wort-, Zeichenfolgen- und Ordinalsortierregeln finden Sie unter den <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> Thema.</span><span class="sxs-lookup"><span data-stu-id="9380d-374">For more information about word, string, and ordinal sort rules, see the <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> topic.</span></span> <span data-ttu-id="9380d-375">Zusätzliche Empfehlungen zur Verwendung für jede Regel finden Sie unter [bewährte Methoden für die Verwendung von Zeichenfolgen](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-375">For additional recommendations on when to use each rule, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="9380d-376">Normalerweise Sie keine Vergleichsmethoden aufrufen, Zeichenfolge wie z. B. <xref:System.String.Compare%2A> direkt auf die Sortierreihenfolge von Zeichenfolgen bestimmt.</span><span class="sxs-lookup"><span data-stu-id="9380d-376">Ordinarily, you don't call string comparison methods such as <xref:System.String.Compare%2A> directly to determine the sort order of strings.</span></span> <span data-ttu-id="9380d-377">Stattdessen werden die Methoden zum Zeichenfolgenvergleich durch Methoden wie z. B. sortieren aufgerufen <xref:System.Array.Sort%2A?displayProperty=nameWithType> oder <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-377">Instead, comparison methods are called by sorting methods such as <xref:System.Array.Sort%2A?displayProperty=nameWithType> or <xref:System.Collections.Generic.List%601.Sort%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-378">Im folgenden Beispiel wird die vier verschiedenen Sortieroperationen (Word-Sortierung mit der aktuellen Kultur, wortsortierung mit der invarianten Kultur, Ordinalsortierung und String-Sortierung, die mit der invarianten Kultur) ohne den expliziten Aufruf einer Methode zum Zeichenfolgenvergleich, Obwohl sie den Typ des Vergleichs mit angeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-378">The following example performs four different sorting operations (word sort using the current culture, word sort using the invariant culture, ordinal sort, and string sort using the invariant culture) without explicitly calling a string comparison method, although they do specify the type of comparison to use.</span></span> <span data-ttu-id="9380d-379">Beachten Sie, dass jede Art von Sortierreihenfolge erzeugt eine eindeutige Sortierung der Zeichenfolgen im Array.</span><span class="sxs-lookup"><span data-stu-id="9380d-379">Note that each type of sort produces a unique ordering of strings in its array.</span></span>  
  
 [!code-cpp[System.String.Class#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.compare2.cpp#12)]
 [!code-csharp[System.String.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/compare2.cs#12)]
 [!code-vb[System.String.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/compare2.vb#12)]  
  
> [!TIP]
>  <span data-ttu-id="9380d-380">Intern verwendet.NET Framework Sortierschlüssel Culturallysensitive Zeichenfolgenvergleich unterstützen.</span><span class="sxs-lookup"><span data-stu-id="9380d-380">Internally, the.NET Framework uses sort keys to support culturallysensitive string comparison.</span></span> <span data-ttu-id="9380d-381">Jedem Zeichen in einer Zeichenfolge sind mehrere Sortiergewichtungskategorien zugeordnet, darunter nach Skript, alphabetischer Folge, Groß-/Kleinschreibung und diakritischer Gewichtung.</span><span class="sxs-lookup"><span data-stu-id="9380d-381">Each character in a string is given several categories of sort weights, including alphabetic, case, and diacritic.</span></span> <span data-ttu-id="9380d-382">Ein Sortierschlüssel, dargestellt durch die <xref:System.Globalization.SortKey> Klasse, ein Repository für diese Gewichtungen für eine bestimmte Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-382">A sort key, represented by the <xref:System.Globalization.SortKey> class, provides a repository of these weights for a particular string.</span></span> <span data-ttu-id="9380d-383">Wenn eine große Anzahl von Suche und Sortiervorgänge in der gleichen Gruppe von Zeichenfolgen in Ihre app ausgeführt wird, können Sie die Leistung verbessern, indem generieren und speichern die Sortierschlüssel für alle Zeichenfolgen, die verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-383">If your app performs a large number of searching or sorting operations on the same set of strings, you can improve its performance by generating and storing sort keys for all the strings that it uses.</span></span> <span data-ttu-id="9380d-384">Wenn eine Sortierung oder ein Vergleich erforderlich ist, verwenden Sie die Sortierschlüssel anstelle der Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-384">When a sort or comparison operation is required, you use the sort keys instead of the strings.</span></span> <span data-ttu-id="9380d-385">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Globalization.SortKey>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="9380d-385">For more information, see the <xref:System.Globalization.SortKey> class.</span></span>  
  
 <span data-ttu-id="9380d-386">Wenn Sie nicht, dass eine Zeichenfolge Vergleich-Konvention angeben, Sortierfunktionen, z. B. <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> eine Kultur, Unterscheidung nach Groß-/Kleinschreibung beachtet die Sortierung für Zeichenfolgen durchführen.</span><span class="sxs-lookup"><span data-stu-id="9380d-386">If you don't specify a string comparison convention, sorting methods such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> perform a culture-sensitive, case-sensitive sort on strings.</span></span> <span data-ttu-id="9380d-387">Im folgende Beispiel wird veranschaulicht, wie das Ändern der aktuellen Kultur die Reihenfolge der sortierten Zeichenfolgen in einem Array wirkt sich auf.</span><span class="sxs-lookup"><span data-stu-id="9380d-387">The following example illustrates how changing the current culture affects the order of sorted strings in an array.</span></span> <span data-ttu-id="9380d-388">Es wird ein Array von drei Zeichenfolgen erstellt.</span><span class="sxs-lookup"><span data-stu-id="9380d-388">It creates an array of three strings.</span></span> <span data-ttu-id="9380d-389">Zuerst wird die `System.Threading.Thread.CurrentThread.CurrentCulture`-Eigenschaft auf "en-US" festgelegt, und die <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType>-Methode wird aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-389">First, it sets the `System.Threading.Thread.CurrentThread.CurrentCulture` property to en-US and calls the <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9380d-390">Die sich daraus ergebende Sortierreihenfolge basiert auf den Sortierkonventionen für die Kultur Englisch (USA).</span><span class="sxs-lookup"><span data-stu-id="9380d-390">The resulting sort order is based on sorting conventions for the English (United States) culture.</span></span> <span data-ttu-id="9380d-391">Als Nächstes wird die `System.Threading.Thread.CurrentThread.CurrentCulture`-Eigenschaft auf "da-DK" festgelegt und die <xref:System.Array.Sort%2A?displayProperty=nameWithType>-Methode erneut aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-391">Next, the example sets the `System.Threading.Thread.CurrentThread.CurrentCulture` property to da-DK and calls the <xref:System.Array.Sort%2A?displayProperty=nameWithType> method again.</span></span> <span data-ttu-id="9380d-392">Die sich daraus ergebende Sortierreihenfolge unterscheidet sich von den Ergebnissen für "en-US", da die Sortierkonventionen für "Dänisch (Dänemark)" verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-392">Notice how the resulting sort order differs from the en-US results because it uses the sorting conventions for Danish (Denmark).</span></span>  
  
 [!code-csharp[Conceptual.Strings.Comparing#3](~/samples/snippets/csharp/VS_Snippets_CLR/conceptual.strings.comparing/cs/sort1.cs#3)]
 [!code-vb[Conceptual.Strings.Comparing#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/conceptual.strings.comparing/vb/sort1.vb#3)]  
  
> [!WARNING]
>  <span data-ttu-id="9380d-393">Wenn das primäre Ziel Vergleichen von Zeichenfolgen ist, um zu bestimmen, ob sie gleich sind, rufen Sie die <xref:System.String.Equals%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-393">If your primary purpose in comparing strings is to determine whether they are equal, you should call the <xref:System.String.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9380d-394">Verwenden Sie in der Regel <xref:System.String.Equals%2A> einen Ordinalvergleich ausführen.</span><span class="sxs-lookup"><span data-stu-id="9380d-394">Typically, you should use <xref:System.String.Equals%2A> to perform an ordinal comparison.</span></span> <span data-ttu-id="9380d-395">Die <xref:System.String.Compare%2A?displayProperty=nameWithType> -Methode dient in erster Linie zum Sortieren von Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-395">The <xref:System.String.Compare%2A?displayProperty=nameWithType> method is intended primarily to sort strings.</span></span>  
  
 <span data-ttu-id="9380d-396">Zeichenfolgensuchmethoden, z. B. <xref:System.String.StartsWith%2A?displayProperty=nameWithType> und <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, auch können kulturabhängig oder Ordinalzahl Zeichenfolgenvergleiche ausführen.</span><span class="sxs-lookup"><span data-stu-id="9380d-396">String search methods, such as <xref:System.String.StartsWith%2A?displayProperty=nameWithType> and <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, also can perform culture-sensitive or ordinal string comparisons.</span></span> <span data-ttu-id="9380d-397">Das folgende Beispiel veranschaulicht die Unterschiede zwischen der Ordinalzahl und kulturabhängige Vergleiche mit der <xref:System.String.IndexOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-397">The following example illustrates the differences between ordinal and culture-sensitive comparisons using the <xref:System.String.IndexOf%2A> method.</span></span> <span data-ttu-id="9380d-398">Eine kulturabhängige Suche in der die aktuelle Kultur Englisch (Vereinigte Staaten) ist, berücksichtigt die Teilzeichenfolge "Oe" entsprechend der Ligatur "œ".</span><span class="sxs-lookup"><span data-stu-id="9380d-398">A culture-sensitive search in which the current culture is English (United States) considers the substring "oe" to match the ligature "œ".</span></span> <span data-ttu-id="9380d-399">Da Sie ein bedingten Bindestrich (U + 00AD) eine Breite von NULL-Zeichen ist, behandelt die Suche der bedingten Bindestrich als Entsprechung zu <xref:System.String.Empty> und findet eine Übereinstimmung am Anfang der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-399">Because a soft hyphen (U+00AD) is a zero-width character, the search treats the soft hyphen as equivalent to <xref:System.String.Empty> and finds a match at the beginning of the string.</span></span> <span data-ttu-id="9380d-400">Eine Ordinalsuche, wird eine Übereinstimmung in beiden Fällen auf der anderen Seite nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="9380d-400">An ordinal search, on the other hand, does not find a match in either case.</span></span>  
  
 [!code-cpp[System.String.Class#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.compare3.cpp#13)]
 [!code-csharp[System.String.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/compare3.cs#13)]
 [!code-vb[System.String.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/compare3.vb#13)]  
  
### <a name="searching-strings"></a><span data-ttu-id="9380d-401">Suchen von Zeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="9380d-401">Searching Strings</span></span>  
 <span data-ttu-id="9380d-402">Zeichenfolgensuchmethoden, z. B. <xref:System.String.StartsWith%2A?displayProperty=nameWithType> und <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, auch Aktualisierungsoption kulturabhängig oder ordinalen Vergleich von Zeichenfolgen zu bestimmen, ob ein Zeichen oder eine Teilzeichenfolge in einer angegebenen Zeichenfolge gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-402">String search methods, such as <xref:System.String.StartsWith%2A?displayProperty=nameWithType> and <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, also can perform culture-sensitive or ordinal string comparisons to determine whether a character or substring is found in a specified string.</span></span>  
  
 <span data-ttu-id="9380d-403">Die Search-Methoden in der <xref:System.String> -Klasse, die für ein einzelnes Zeichen, z. B. Suchen der <xref:System.String.IndexOf%2A> Methode oder zu einem Satz von Zeichen, z. B. die <xref:System.String.IndexOfAny%2A> -Methode, alle eine ordinale Suche ausführen.</span><span class="sxs-lookup"><span data-stu-id="9380d-403">The search methods in the <xref:System.String> class that search for an individual character, such as the <xref:System.String.IndexOf%2A> method, or one of a set of characters,   such as the <xref:System.String.IndexOfAny%2A> method, all perform an ordinal search.</span></span> <span data-ttu-id="9380d-404">Um eine kulturabhängige Suche nach einem Zeichen auszuführen, rufen Sie eine <xref:System.Globalization.CompareInfo> Methode, z. B. <xref:System.Globalization.CompareInfo.IndexOf%28System.String%2CSystem.Char%29?displayProperty=nameWithType> oder <xref:System.Globalization.CompareInfo.LastIndexOf%28System.String%2CSystem.Char%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-404">To perform a culture-sensitive search for a character, you must call a <xref:System.Globalization.CompareInfo> method such as <xref:System.Globalization.CompareInfo.IndexOf%28System.String%2CSystem.Char%29?displayProperty=nameWithType> or <xref:System.Globalization.CompareInfo.LastIndexOf%28System.String%2CSystem.Char%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-405">Beachten Sie, dass die Ergebnisse der Suche nach einem Zeichen, die mithilfe von Ordnungszahlen und kulturabhängige Vergleich sehr unterschiedlich sein können.</span><span class="sxs-lookup"><span data-stu-id="9380d-405">Note that the results of searching for a character using ordinal and culture-sensitive comparison can be very different.</span></span> <span data-ttu-id="9380d-406">Beispielsweise könnte eine Suche für ein zusammengesetztes Unicodezeichen, z. B. die Ligatur "Æ" (U + 00 C 6) entspricht jedem Vorkommen der Komponenten in der richtigen Reihenfolge, z. B. "AE" (U + 041U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-406">For example, a search for a precomposed Unicode character such as the ligature "Æ" (U+00C6) might match any occurrence of its components in the correct sequence, such as "AE" (U+041U+0045), depending on the culture.</span></span> <span data-ttu-id="9380d-407">Das folgende Beispiel veranschaulicht den Unterschied zwischen der <xref:System.String.IndexOf%28System.Char%29?displayProperty=nameWithType> und <xref:System.Globalization.CompareInfo.IndexOf%28System.String%2CSystem.Char%29?displayProperty=nameWithType> Methoden bei der Suche nach der ein einzelnes Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-407">The following example illustrates the difference between the <xref:System.String.IndexOf%28System.Char%29?displayProperty=nameWithType> and <xref:System.Globalization.CompareInfo.IndexOf%28System.String%2CSystem.Char%29?displayProperty=nameWithType> methods when searching for an individual character.</span></span> <span data-ttu-id="9380d-408">Die Ligatur "Æ" (U + 00E6) wurde in der Zeichenfolge "Luftbild" bei Verwendung der Konventionen der Kultur En-US, jedoch nicht, wenn die Konventionen der Kultur da-DK verwendet oder wenn Sie einen Ordinalvergleich ausführen gefunden.</span><span class="sxs-lookup"><span data-stu-id="9380d-408">The ligature "æ" (U+00E6) is found in the string "aerial" when using the conventions of the en-US culture, but not when using the conventions of the da-DK culture or when performing an ordinal comparison.</span></span>  
  
 [!code-csharp[System.String.Class#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/search1.cs#22)]
 [!code-vb[System.String.Class#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/search1.vb#22)]  
  
 <span data-ttu-id="9380d-409">Auf der anderen Seite <xref:System.String> -Klassenmethoden, die Suche nach einer Zeichenfolge anstelle eines Zeichens eine kulturabhängige Suche durchführen, wenn Suchoptionen durch einen Parameter vom Typ nicht explizit angegeben werden <xref:System.StringComparison>.</span><span class="sxs-lookup"><span data-stu-id="9380d-409">On the other hand, <xref:System.String> class methods that search for a string rather than a character perform a culture-sensitive search if search options are not explicitly specified by a parameter of type <xref:System.StringComparison>.</span></span> <span data-ttu-id="9380d-410">Die einzige Ausnahme ist <xref:System.String.Contains%2A>, die eine ordinale Suche durchführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-410">The sole exception is <xref:System.String.Contains%2A>, which performs an ordinal search.</span></span>  
  
<a name="equality"></a>   
### <a name="testing-for-equality"></a><span data-ttu-id="9380d-411">Testen auf Gleichheit</span><span class="sxs-lookup"><span data-stu-id="9380d-411">Testing for equality</span></span>  
 <span data-ttu-id="9380d-412">Verwenden der <xref:System.String.Compare%2A?displayProperty=nameWithType> Methode, um die Beziehung zwischen zwei Zeichenfolgen in der Sortierreihenfolge festzulegen.</span><span class="sxs-lookup"><span data-stu-id="9380d-412">Use the <xref:System.String.Compare%2A?displayProperty=nameWithType> method to determine the relationship of two strings in the sort order.</span></span> <span data-ttu-id="9380d-413">Dies ist normalerweise eine kulturabhängige Operation.</span><span class="sxs-lookup"><span data-stu-id="9380d-413">Typically, this is a culture-sensitive operation.</span></span> <span data-ttu-id="9380d-414">Im Gegensatz dazu rufen Sie die <xref:System.String.Equals%2A?displayProperty=nameWithType> Methode zum Testen auf Gleichheit.</span><span class="sxs-lookup"><span data-stu-id="9380d-414">In contrast, call the <xref:System.String.Equals%2A?displayProperty=nameWithType> method to test for equality.</span></span> <span data-ttu-id="9380d-415">Da der Test auf Gleichheit in der Regel der Benutzereingabe mit einer bekannten Zeichenfolge, z. B. einen gültigen Benutzernamen ein, ein Kennwort oder einen Dateisystempfad, vergleicht wird er in der Regel eine Ordnungszahl Vorgang.</span><span class="sxs-lookup"><span data-stu-id="9380d-415">Because the test for equality usually compares user input with some known string, such as a valid user name, a password, or a file system path, it is typically an ordinal operation.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="9380d-416">Es ist möglich, Testen auf Gleichheit durch Aufrufen der <xref:System.String.Compare%2A?displayProperty=nameWithType> -Methode und bestimmen, ob der Rückgabewert 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-416">It is possible to test for equality by calling the <xref:System.String.Compare%2A?displayProperty=nameWithType> method and determining whether the return value is zero.</span></span> <span data-ttu-id="9380d-417">Diese Vorgehensweise ist jedoch nicht empfohlen.</span><span class="sxs-lookup"><span data-stu-id="9380d-417">However, this practice is not recommended.</span></span> <span data-ttu-id="9380d-418">Um zu bestimmen, ob zwei Zeichenfolgen gleich sind, sollten Sie eine der Überladungen von Aufrufen der <xref:System.String.Equals%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-418">To determine whether two strings are equal, you should call one of the overloads of the <xref:System.String.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9380d-419">Die bevorzugte Überladung aufrufen, ist entweder wird die Instanz <xref:System.String.Equals%28System.String%2CSystem.StringComparison%29> oder die statische <xref:System.String.Equals%28System.String%2CSystem.String%2CSystem.StringComparison%29> -Methode, da beide Methoden enthalten eine <xref:System.StringComparison?displayProperty=nameWithType> Parameter, der explizit den Typ des Vergleichs angibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-419">The preferred overload to call is either the instance <xref:System.String.Equals%28System.String%2CSystem.StringComparison%29> method or the static <xref:System.String.Equals%28System.String%2CSystem.String%2CSystem.StringComparison%29> method, because both methods include a <xref:System.StringComparison?displayProperty=nameWithType> parameter that explicitly specifies the type of comparison.</span></span>  
  
 <span data-ttu-id="9380d-420">Das folgende Beispiel zeigt die Gefahr der Ausführung eines kulturabhängigen Vergleichs, Gleichheit, wenn eine Ordinalzahl, die eine stattdessen verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="9380d-420">The following example illustrates the danger of performing a culture-sensitive comparison for equality when an ordinal one should be used instead.</span></span> <span data-ttu-id="9380d-421">Die Absicht des Codes werden in diesem Fall den Dateisystemzugriff von URLs zu verhindern, die mit "FILE://" oder "file://" beginnen, Groß-/Kleinschreibung Vergleich des Anfangs einer URL mit der Zeichenfolge "FILE://" ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-421">In this case, the intent of the code is to prohibit file system access from URLs that begin with "FILE://" or "file://" by performing a case-insensitive comparison of the beginning of a URL with the string "FILE://".</span></span> <span data-ttu-id="9380d-422">Jedoch, wenn ein kulturabhängiger Vergleich ausgeführt wird, mit der Türkisch (Türkei)-Kultur in einer URL, die mit "file://" beginnt, schlägt fehl der Vergleich für Gleichheit, weil Türkisch Großbuchstaben den Kleinbuchstaben "i" "İ" anstelle von "I" entspricht.</span><span class="sxs-lookup"><span data-stu-id="9380d-422">However, if a culture-sensitive comparison is performed using the Turkish (Turkey) culture on a URL that begins with "file://", the comparison for equality fails, because the Turkish uppercase equivalent of the lowercase "i" is "İ" instead of "I".</span></span> <span data-ttu-id="9380d-423">Daher wird der Dateisystemzugriff versehentlich zulässig.</span><span class="sxs-lookup"><span data-stu-id="9380d-423">As a result, file system access is inadvertently permitted.</span></span> <span data-ttu-id="9380d-424">Andererseits, wenn ein ordinalen Vergleich ausgeführt wird, wird der Vergleich für Gleichheit ist erfolgreich, und Dateisystemzugriff verweigert wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-424">On the other hand, if an ordinal comparison is performed, the comparison for equality succeeds, and file system access is denied.</span></span>  
  
 [!code-cpp[System.String.Class#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.equals.cpp#11)]
 [!code-csharp[System.String.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/equality1.cs#11)]
 [!code-vb[System.String.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/equality1.vb#11)]  
  
<a name="Normalization"></a>   
## <a name="normalization"></a><span data-ttu-id="9380d-425">Normalisierung</span><span class="sxs-lookup"><span data-stu-id="9380d-425">Normalization</span></span>  
 <span data-ttu-id="9380d-426">Einige Unicode-Zeichen umfassen mehrere Darstellungen.</span><span class="sxs-lookup"><span data-stu-id="9380d-426">Some Unicode characters have multiple representations.</span></span> <span data-ttu-id="9380d-427">Beispielsweise kann eine der folgenden Code verweist den Buchstaben "ắ" darstellen:</span><span class="sxs-lookup"><span data-stu-id="9380d-427">For example, any of the following code points can represent the letter "ắ":</span></span>  
  
-   <span data-ttu-id="9380d-428">U + 1EAF</span><span class="sxs-lookup"><span data-stu-id="9380d-428">U+1EAF</span></span>  
  
-   <span data-ttu-id="9380d-429">U + 0103 U + 0301</span><span class="sxs-lookup"><span data-stu-id="9380d-429">U+0103 U+0301</span></span>  
  
-   <span data-ttu-id="9380d-430">U + 0061 U + 0306 U + 0301</span><span class="sxs-lookup"><span data-stu-id="9380d-430">U+0061 U+0306 U+0301</span></span>  
  
 <span data-ttu-id="9380d-431">Mehrere Darstellungen für ein einzelnes Zeichen suchen, sortieren, Abgleich und andere Zeichenfolgenoperationen verkompliziert werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-431">Multiple representations for a single character complicate searching, sorting, matching, and other string operations.</span></span>  
  
 <span data-ttu-id="9380d-432">Die Unicode-standard definiert einen Prozess namens Normalisierung, die eine binäre Darstellung eines Unicode-Zeichens für jede der entsprechende binäre Darstellung zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-432">The Unicode standard defines a process called normalization that returns one binary representation of a Unicode character for any of its equivalent binary representations.</span></span> <span data-ttu-id="9380d-433">Normalisierung können mehrere Algorithmen, so genannte Normalisierungsformen, die verschiedene Regeln einhalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-433">Normalization can use several algorithms, called normalization forms, that follow different rules.</span></span> <span data-ttu-id="9380d-434">.NET Framework unterstützt Unicode-Normalisierungsformen C, D, KC und KD.</span><span class="sxs-lookup"><span data-stu-id="9380d-434">The .NET Framework supports Unicode normalization forms C, D, KC, and KD.</span></span> <span data-ttu-id="9380d-435">Wenn Sie Zeichenfolgen in die gleiche Normalisierungsform normalisiert wurden, können sie mithilfe von ordinalen Vergleich verglichen werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-435">When strings have been normalized to the same normalization form, they can be compared by using ordinal comparison.</span></span>  
  
 <span data-ttu-id="9380d-436">Ein ordinalen Vergleich ist ein binärer Vergleich von der Unicode-Skalarwert des entsprechenden <xref:System.Char> Objekte in jeder Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-436">An ordinal comparison is a binary comparison of the Unicode scalar value of corresponding <xref:System.Char> objects in each string.</span></span> <span data-ttu-id="9380d-437">Die <xref:System.String> Klasse enthält eine Reihe von Methoden, die einen Ordinalvergleich durch, einschließlich der folgenden ausführen können:</span><span class="sxs-lookup"><span data-stu-id="9380d-437">The <xref:System.String> class includes a number of methods that can perform an ordinal comparison, including the following:</span></span>  
  
-   <span data-ttu-id="9380d-438">Überladung von der <xref:System.String.Compare%2A>, <xref:System.String.Equals%2A>, <xref:System.String.StartsWith%2A>, <xref:System.String.EndsWith%2A>, <xref:System.String.IndexOf%2A>, und <xref:System.String.LastIndexOf%2A> Methoden, die umfasst eine <xref:System.StringComparison> Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-438">Any overload of the <xref:System.String.Compare%2A>, <xref:System.String.Equals%2A>, <xref:System.String.StartsWith%2A>,  <xref:System.String.EndsWith%2A>, <xref:System.String.IndexOf%2A>, and <xref:System.String.LastIndexOf%2A> methods that includes a <xref:System.StringComparison> parameter.</span></span> <span data-ttu-id="9380d-439">Die Methode führt einen ordinalen Vergleich aus, wenn Sie angeben, dass der Wert <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> oder <xref:System.StringComparison.OrdinalIgnoreCase> für diesen Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-439">The method performs an ordinal comparison if you supply a value of <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> or <xref:System.StringComparison.OrdinalIgnoreCase> for this parameter.</span></span>  
  
-   <span data-ttu-id="9380d-440">Die Überladungen der <xref:System.String.CompareOrdinal%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-440">The overloads of the <xref:System.String.CompareOrdinal%2A> method.</span></span>  
  
-   <span data-ttu-id="9380d-441">Methoden, mit denen Ordinalvergleich standardmäßig wie z. B. <xref:System.String.Contains%2A>, <xref:System.String.Replace%2A>, und <xref:System.String.Split%2A>.</span><span class="sxs-lookup"><span data-stu-id="9380d-441">Methods that use ordinal comparison by default, such as <xref:System.String.Contains%2A>, <xref:System.String.Replace%2A>, and <xref:System.String.Split%2A>.</span></span>  
  
-   <span data-ttu-id="9380d-442">Methoden, die für die Suche eine <xref:System.Char> Wert oder für die Elemente in einem <xref:System.Char> Arrays in einer Zeichenfolgeninstanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-442">Methods that search for a <xref:System.Char> value or for the elements in a <xref:System.Char> array in a string instance.</span></span> <span data-ttu-id="9380d-443">Diese Methoden umfassen <xref:System.String.IndexOf%28System.Char%29> und <xref:System.String.Split%28System.Char%5B%5D%29>.</span><span class="sxs-lookup"><span data-stu-id="9380d-443">Such methods include <xref:System.String.IndexOf%28System.Char%29> and <xref:System.String.Split%28System.Char%5B%5D%29>.</span></span>  
  
 <span data-ttu-id="9380d-444">Können Sie bestimmen, ob eine Zeichenfolge in der Normalisierungsform C, durch den Aufruf normalisiert wird der <xref:System.String.IsNormalized?displayProperty=nameWithType> -Methode, oder Sie rufen die <xref:System.String.IsNormalized%28System.Text.NormalizationForm%29?displayProperty=nameWithType> Methode, um zu bestimmen, ob eine Zeichenfolge in eine angegebene Normalisierungsform normalisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-444">You can determine whether a string is normalized to normalization form C by calling the <xref:System.String.IsNormalized?displayProperty=nameWithType> method, or you can call the <xref:System.String.IsNormalized%28System.Text.NormalizationForm%29?displayProperty=nameWithType> method to determine whether a string is normalized to a specified normalization form.</span></span> <span data-ttu-id="9380d-445">Sie können auch aufrufen, die <xref:System.String.Normalize?displayProperty=nameWithType> Methode zum Konvertieren einer Zeichenfolge in der Normalisierungsform C, oder Sie können Aufrufen der <xref:System.String.Normalize%28System.Text.NormalizationForm%29?displayProperty=nameWithType> Methode zum Konvertieren einer Zeichenfolge in eine angegebene Normalisierungsform.</span><span class="sxs-lookup"><span data-stu-id="9380d-445">You can also call the <xref:System.String.Normalize?displayProperty=nameWithType> method to convert a string to normalization form C, or you can call the <xref:System.String.Normalize%28System.Text.NormalizationForm%29?displayProperty=nameWithType> method to convert a string to a specified normalization form.</span></span> <span data-ttu-id="9380d-446">Detaillierte Informationen zu normalisieren, und Vergleichen von Zeichenfolgen finden Sie die <xref:System.String.Normalize> und <xref:System.String.Normalize%28System.Text.NormalizationForm%29> Methoden.</span><span class="sxs-lookup"><span data-stu-id="9380d-446">For step-by-step information about normalizing and comparing strings, see the <xref:System.String.Normalize> and <xref:System.String.Normalize%28System.Text.NormalizationForm%29> methods.</span></span>  
  
 <span data-ttu-id="9380d-447">Das folgende einfache Beispiel veranschaulicht die Normalisierung von Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-447">The following simple example illustrates string normalization.</span></span> <span data-ttu-id="9380d-448">Er definiert den Buchstaben "ố" auf drei verschiedene Arten in drei verschiedenen Zeichenfolgen und verwendet einen ordinalen Vergleich, Gleichheit, um zu bestimmen, dass jede Zeichenfolge von den anderen beiden Zeichenfolgen unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="9380d-448">It defines the letter "ố" in three different ways in three different strings, and uses an ordinal comparison for equality to determine that each string differs from the other two strings.</span></span> <span data-ttu-id="9380d-449">Es konvertiert dann jede Zeichenfolge in den unterstützten Normalisierungsformen und führt erneut einen Ordinalvergleich von jeder Zeichenfolge in einer angegebenen Normalisierungsform.</span><span class="sxs-lookup"><span data-stu-id="9380d-449">It then converts each string to the supported normalization forms, and again performs an ordinal comparison of each string in a specified normalization form.</span></span> <span data-ttu-id="9380d-450">In jedem Fall zeigt der zweite Test auf Gleichheit an, dass die Zeichenfolgen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-450">In each case, the second test for equality shows that the strings are equal.</span></span>  
  
 [!code-cpp[System.String.Class#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/string.normalize.cpp#14)]
 [!code-csharp[System.String.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/normalize1.cs#14)]
 [!code-vb[System.String.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/normalize1.vb#14)]  
  
 <span data-ttu-id="9380d-451">Weitere Informationen zu Normalisierung und Normalisierungsformen, finden Sie unter <xref:System.Text.NormalizationForm?displayProperty=nameWithType>, als auch [Unicode Standard Annex #15: Unicode Normalization Forms](https://unicode.org/reports/tr15/) und [Normalisierung – häufig gestellte Fragen](https://www.unicode.org/faq/normalization.html) auf der Unicode.org-Website.</span><span class="sxs-lookup"><span data-stu-id="9380d-451">For more information about normalization and normalization forms, see <xref:System.Text.NormalizationForm?displayProperty=nameWithType>, as well as [Unicode Standard Annex #15: Unicode Normalization Forms](https://unicode.org/reports/tr15/) and the [Normalization FAQ](https://www.unicode.org/faq/normalization.html) on the unicode.org website.</span></span>  
  
<a name="ByCategory"></a>   
## <a name="string-operations-by-category"></a><span data-ttu-id="9380d-452">Zeichenfolgenoperationen nach Kategorie</span><span class="sxs-lookup"><span data-stu-id="9380d-452">String operations by category</span></span>  
 <span data-ttu-id="9380d-453">Die <xref:System.String> Klasse enthält Elemente zum Vergleichen von Zeichenfolgen, das Testen von Zeichenfolgen auf Gleichheit überprüfen, Suchen nach Zeichen oder Teilzeichenfolgen in einer Zeichenfolge, die Änderung einer Zeichenfolge, und Extrahieren von Teilzeichenfolgen aus einer Zeichenfolge, die Zeichenfolgen, Formatieren von Werten, das Kopieren einer Zeichenfolge kombiniert und normalisiert eine Zeichenfolge an.</span><span class="sxs-lookup"><span data-stu-id="9380d-453">The <xref:System.String> class provides members for comparing strings, testing strings for equality, finding characters or substrings in a string, modifying a string, extracting substrings from a string, combining strings, formatting values, copying a string, and normalizing a string.</span></span>  
  
### <a name="comparing-strings"></a><span data-ttu-id="9380d-454">Vergleichen von Zeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="9380d-454">Comparing strings</span></span>  
 <span data-ttu-id="9380d-455">Sie können Zeichenfolgen vergleichen, um ihre relative Position in der Sortierreihenfolge bestimmen mithilfe der Folgendes <xref:System.String> Methoden:</span><span class="sxs-lookup"><span data-stu-id="9380d-455">You can compare strings to determine their relative position in the sort order by using the following <xref:System.String> methods:</span></span>  
  
-   <span data-ttu-id="9380d-456"><xref:System.String.Compare%2A> Gibt eine Ganzzahl, die die Beziehung aus einer Zeichenfolge in eine zweite Zeichenfolge in der Sortierreihenfolge angibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-456"><xref:System.String.Compare%2A> returns an integer that indicates the relationship of one string to a second string in the sort order.</span></span>  
  
-   <span data-ttu-id="9380d-457"><xref:System.String.CompareOrdinal%2A> Gibt eine Ganzzahl, die die Beziehung aus einer Zeichenfolge in eine zweite Zeichenfolge auf Basis eines Wertevergleichs der die Codepunkte angibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-457"><xref:System.String.CompareOrdinal%2A> returns an integer that indicates the relationship of one string to a second string based on a comparison of their code points.</span></span>  
  
-   <span data-ttu-id="9380d-458"><xref:System.String.CompareTo%2A> Gibt eine Ganzzahl, die die Beziehung des die aktuelle Zeichenfolgeninstanz mit einer zweiten Zeichenfolge in der Sortierreihenfolge angibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-458"><xref:System.String.CompareTo%2A> returns an integer that indicates the relationship of the current string instance to a second string in the sort order.</span></span> <span data-ttu-id="9380d-459">Die <xref:System.String.CompareTo%28System.String%29> Methode bietet die <xref:System.IComparable> und <xref:System.IComparable%601> Implementierungen für die <xref:System.String> Klasse.</span><span class="sxs-lookup"><span data-stu-id="9380d-459">The <xref:System.String.CompareTo%28System.String%29> method provides the <xref:System.IComparable> and <xref:System.IComparable%601> implementations for the <xref:System.String> class.</span></span>  
  
### <a name="testing-strings-for-equality"></a><span data-ttu-id="9380d-460">Testen von Zeichenfolgen auf Gleichheit</span><span class="sxs-lookup"><span data-stu-id="9380d-460">Testing strings for equality</span></span>  
 <span data-ttu-id="9380d-461">Rufen Sie die <xref:System.String.Equals%2A> Methode, um zu bestimmen, ob zwei Zeichenfolgen gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-461">You call the <xref:System.String.Equals%2A> method to determine whether two strings are equal.</span></span> <span data-ttu-id="9380d-462">Die Instanz <xref:System.String.Equals%28System.String%2CSystem.String%2CSystem.StringComparison%29> und der statischen <xref:System.String.Equals%28System.String%2CSystem.StringComparison%29> Überladungen können Sie angeben, ob der Vergleich kulturabhängig oder Ordinalzahl ist, und gibt an, ob Fall berücksichtigt oder ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-462">The instance <xref:System.String.Equals%28System.String%2CSystem.String%2CSystem.StringComparison%29> and the static <xref:System.String.Equals%28System.String%2CSystem.StringComparison%29> overloads let you specify whether the comparison is culture-sensitive or ordinal, and whether case is considered or ignored.</span></span> <span data-ttu-id="9380d-463">Die meisten Tests für Gleichheit die Ordinalvergleiche darstellen, und Vergleiche auf Gleichheit, die bestimmen, den Zugriff auf eine Systemressource (z. B. ein Dateisystemobjekt) sollten immer ordinal sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-463">Most tests for equality are ordinal, and comparisons for equality that determine access to a system resource (such as a file system object) should always be ordinal.</span></span>  
  
### <a name="finding-characters-in-a-string"></a><span data-ttu-id="9380d-464">Suchen von Zeichen in einer Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="9380d-464">Finding characters in a string</span></span>  
 <span data-ttu-id="9380d-465">Die <xref:System.String> Klasse enthält zwei verschiedene Suchmethoden:</span><span class="sxs-lookup"><span data-stu-id="9380d-465">The <xref:System.String> class includes two kinds of search methods:</span></span>  
  
-   <span data-ttu-id="9380d-466">Methoden, die Zurückgeben einer <xref:System.Boolean> Wert, der angibt, ob eine bestimmte Teilzeichenfolge in einer Zeichenfolgeninstanz vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-466">Methods that return a <xref:System.Boolean> value to indicate whether a particular substring is present in a string instance.</span></span> <span data-ttu-id="9380d-467">Dazu gehören die <xref:System.String.Contains%2A>, <xref:System.String.EndsWith%2A>, und <xref:System.String.StartsWith%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="9380d-467">These include the <xref:System.String.Contains%2A>, <xref:System.String.EndsWith%2A>, and <xref:System.String.StartsWith%2A> methods.</span></span>  
  
-   <span data-ttu-id="9380d-468">Methoden, die die Anfangsposition einer Teilzeichenfolge in einer Zeichenfolgeninstanz anzugeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-468">Methods that indicate the starting position of a substring in a string instance.</span></span> <span data-ttu-id="9380d-469">Dazu gehören die <xref:System.String.IndexOf%2A>, <xref:System.String.IndexOfAny%2A>, <xref:System.String.LastIndexOf%2A>, und <xref:System.String.LastIndexOfAny%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="9380d-469">These include the <xref:System.String.IndexOf%2A>, <xref:System.String.IndexOfAny%2A>, <xref:System.String.LastIndexOf%2A>, and <xref:System.String.LastIndexOfAny%2A> methods.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="9380d-470">Wenn Sie eine Zeichenfolge für eine bestimmte Teilzeichenfolge, anstatt einem bestimmten Muster suchen möchten, sollten Sie reguläre Ausdrücke verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-470">If you want to search a string for a particular pattern rather than a specific substring, you should use regular expressions.</span></span> <span data-ttu-id="9380d-471">Weitere Informationen hierzu finden Sie unter [Reguläre Ausdrücke von .NET Framework](~/docs/standard/base-types/regular-expressions.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-471">For more information, see [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>  
  
### <a name="modifying-a-string"></a><span data-ttu-id="9380d-472">Ändern einer Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="9380d-472">Modifying a string</span></span>  
 <span data-ttu-id="9380d-473">Die <xref:System.String> Klasse enthält die folgenden Methoden, die zum Ändern des Werts einer Zeichenfolge angezeigt werden:</span><span class="sxs-lookup"><span data-stu-id="9380d-473">The <xref:System.String> class includes the following methods that appear to modify the value of a string:</span></span>  
  
-   <span data-ttu-id="9380d-474"><xref:System.String.Insert%2A> Fügt eine Zeichenfolge mit dem aktuellen <xref:System.String> Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-474"><xref:System.String.Insert%2A> inserts a string into the current <xref:System.String> instance.</span></span>  
  
-   <span data-ttu-id="9380d-475"><xref:System.String.PadLeft%2A> Fügt einem oder mehreren Vorkommen eines angegebenen Zeichens am Anfang einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-475"><xref:System.String.PadLeft%2A> inserts one or more occurrences of a specified character at the beginning of a string.</span></span>  
  
-   <span data-ttu-id="9380d-476"><xref:System.String.PadRight%2A> Fügt einem oder mehreren Vorkommen eines angegebenen Zeichens am Ende einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-476"><xref:System.String.PadRight%2A> inserts one or more occurrences of a specified character at the end of a string.</span></span>  
  
-   <span data-ttu-id="9380d-477"><xref:System.String.Remove%2A> Löscht eine Teilzeichenfolge aus dem aktuellen <xref:System.String> Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-477"><xref:System.String.Remove%2A> deletes a substring from the current <xref:System.String> instance.</span></span>  
  
-   <span data-ttu-id="9380d-478"><xref:System.String.Replace%2A> ersetzt eine Teilzeichenfolge durch eine andere Teilzeichenfolge in der aktuellen <xref:System.String> Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-478"><xref:System.String.Replace%2A> replaces a substring with another substring in the current <xref:System.String> instance.</span></span>  
  
-   <span data-ttu-id="9380d-479"><xref:System.String.ToLower%2A> und <xref:System.String.ToLowerInvariant%2A> alle Zeichen in einer Zeichenfolge in Kleinbuchstaben zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-479"><xref:System.String.ToLower%2A> and <xref:System.String.ToLowerInvariant%2A> convert all the characters in a string to lowercase.</span></span>  
  
-   <span data-ttu-id="9380d-480"><xref:System.String.ToUpper%2A> und <xref:System.String.ToUpperInvariant%2A> alle Zeichen in einer Zeichenfolge in Großbuchstaben zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-480"><xref:System.String.ToUpper%2A> and <xref:System.String.ToUpperInvariant%2A> convert all the characters in a string to uppercase.</span></span>  
  
-   <span data-ttu-id="9380d-481"><xref:System.String.Trim%2A> Entfernt alle Vorkommen von einem Zeichen am Anfang und Ende einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-481"><xref:System.String.Trim%2A> removes all occurrences of a character from the beginning and end of a string.</span></span>  
  
-   <span data-ttu-id="9380d-482"><xref:System.String.TrimEnd%2A> Entfernt alle Vorkommen eines Zeichens vom Ende einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-482"><xref:System.String.TrimEnd%2A> removes all occurrences of a character from the end of a string.</span></span>  
  
-   <span data-ttu-id="9380d-483"><xref:System.String.TrimStart%2A> Entfernt alle Vorkommen eines Zeichens vom Anfang einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-483"><xref:System.String.TrimStart%2A> removes all occurrences of a character from the beginning of a string.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9380d-484">Alle Änderungen von Zeichenfolgenmethoden zurück auf ein neues <xref:System.String> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9380d-484">All string modification methods return a new <xref:System.String> object.</span></span> <span data-ttu-id="9380d-485">Ändern sie nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-485">They don't modify the value of the current instance.</span></span>  
  
### <a name="extracting-substrings-from-a-string"></a><span data-ttu-id="9380d-486">Extrahieren von untergeordneten Zeichenfolgen aus einer Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="9380d-486">Extracting substrings from a string</span></span>  
 <span data-ttu-id="9380d-487">Die <xref:System.String.Split%2A?displayProperty=nameWithType> Methode trennt eine einzelne Zeichenfolge in mehrere Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-487">The <xref:System.String.Split%2A?displayProperty=nameWithType> method separates a single string into multiple strings.</span></span> <span data-ttu-id="9380d-488">Überladungen der Methode können Sie angeben, mehrere Trennzeichen, um die maximale Anzahl von Teilzeichenfolgen zu bestimmen, die die Methode extrahiert, und um zu bestimmen, ob leere Zeichenfolgen (die auftreten, wenn die Trennzeichen aneinandergrenzen) für die zurückgegebenen Zeichenfolgen enthalten sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-488">Overloads of the method allow you to specify multiple delimiters, to determine the maximum number of substrings that the method extracts, and to determine whether empty strings (which occur when delimiters are adjacent) are included among the returned strings.</span></span>  
  
### <a name="combining-strings"></a><span data-ttu-id="9380d-489">Kombinieren von Zeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="9380d-489">Combining strings</span></span>  
 <span data-ttu-id="9380d-490">Die folgenden <xref:System.String> können Methoden für die zeichenfolgenverkettung verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="9380d-490">The following <xref:System.String> methods can be used for string concatenation:</span></span>  
  
-   <span data-ttu-id="9380d-491"><xref:System.String.Concat%2A> werden ein oder mehrere Teilzeichenfolgen in einer einzelnen Zeichenfolge kombiniert.</span><span class="sxs-lookup"><span data-stu-id="9380d-491"><xref:System.String.Concat%2A> combines one or more substrings into a single string.</span></span>  
  
-   <span data-ttu-id="9380d-492"><xref:System.String.Join%2A> verkettet eine oder mehrere Teilzeichenfolgen in ein einzelnes Element und fügt ein Trennzeichen zwischen den Teilzeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-492"><xref:System.String.Join%2A> concatenates one or more substrings into a single element and adds a separator between each substring.</span></span>  
  
### <a name="formatting-values"></a><span data-ttu-id="9380d-493">Formatieren von Werten</span><span class="sxs-lookup"><span data-stu-id="9380d-493">Formatting values</span></span>  
 <span data-ttu-id="9380d-494">Die <xref:System.String.Format%2A?displayProperty=nameWithType> Methode, die Funktion für kombinierte Formatierung verwendet, um einen oder mehrere Platzhalter in einer Zeichenfolge durch die Zeichenfolgendarstellung von einigen Objekt oder den Wert zu ersetzen.</span><span class="sxs-lookup"><span data-stu-id="9380d-494">The <xref:System.String.Format%2A?displayProperty=nameWithType> method uses the composite formatting feature to replace one or more placeholders in a string with the string representation of some object or value.</span></span> <span data-ttu-id="9380d-495">Die <xref:System.String.Format%2A> Methode wird häufig verwendet, um Folgendes auszuführen:</span><span class="sxs-lookup"><span data-stu-id="9380d-495">The <xref:System.String.Format%2A> method is often used to do the following:</span></span>  
  
-   <span data-ttu-id="9380d-496">Um die Zeichenfolgendarstellung eines numerischen Werts in einer Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-496">To embed the string representation of a numeric value in a string.</span></span>  
  
-   <span data-ttu-id="9380d-497">Die Zeichenfolgendarstellung eines Werts für Datum und Uhrzeit in eine Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-497">To embed the string representation of a date and time value in a string.</span></span>  
  
-   <span data-ttu-id="9380d-498">Die Zeichenfolgendarstellung eines Enumerationswerts in eine Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-498">To embed the string representation of an enumeration value in a string.</span></span>  
  
-   <span data-ttu-id="9380d-499">Die Zeichenfolgendarstellung von einem Objekt eingebettet, die unterstützt die <xref:System.IFormattable> Schnittstelle in einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-499">To embed the string representation of some object that supports the <xref:System.IFormattable> interface in a string.</span></span>  
  
-   <span data-ttu-id="9380d-500">Rechtsbündig oder linksbündig einer Teilzeichenfolge in ein Feld innerhalb einer größeren Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-500">To right-justify or left-justify a substring in a field within a larger string.</span></span>  
  
 <span data-ttu-id="9380d-501">Ausführliche Informationen zur Formatierung, Vorgänge und Beispiele finden Sie unter den <xref:System.String.Format%2A> Zusammenfassung überladen.</span><span class="sxs-lookup"><span data-stu-id="9380d-501">For detailed information about formatting operations and examples, see the <xref:System.String.Format%2A> overload summary.</span></span>  
  
### <a name="copying-a-string"></a><span data-ttu-id="9380d-502">Kopieren einer Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="9380d-502">Copying a string</span></span>  
 <span data-ttu-id="9380d-503">Sie können den folgenden Aufruf <xref:System.String> Methoden, um eine Kopie einer Zeichenfolge zu erstellen:</span><span class="sxs-lookup"><span data-stu-id="9380d-503">You can call the following <xref:System.String> methods to make a copy of a string:</span></span>  
  
-   <span data-ttu-id="9380d-504"><xref:System.String.Clone%2A> Gibt einen Verweis auf ein vorhandenes <xref:System.String> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9380d-504"><xref:System.String.Clone%2A> returns a reference to an existing <xref:System.String> object.</span></span>  
  
-   <span data-ttu-id="9380d-505"><xref:System.String.Copy%2A> erstellt eine Kopie einer vorhandenen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-505"><xref:System.String.Copy%2A> creates a copy of an existing string.</span></span>  
  
-   <span data-ttu-id="9380d-506"><xref:System.String.CopyTo%2A> Kopiert einen Teil einer Zeichenfolge in ein Zeichenarray.</span><span class="sxs-lookup"><span data-stu-id="9380d-506"><xref:System.String.CopyTo%2A> copies a portion of a string to a character array.</span></span>  
  
### <a name="normalizing-a-string"></a><span data-ttu-id="9380d-507">Eine Zeichenfolge normalisieren</span><span class="sxs-lookup"><span data-stu-id="9380d-507">Normalizing a string</span></span>  
 <span data-ttu-id="9380d-508">Im Unicode-Format kann ein einzelnes Zeichen über mehrere Codepunkte haben.</span><span class="sxs-lookup"><span data-stu-id="9380d-508">In Unicode, a single character can have multiple code points.</span></span> <span data-ttu-id="9380d-509">Normalisierung konvertiert diese entsprechende Zeichen in der gleichen binäre Darstellung.</span><span class="sxs-lookup"><span data-stu-id="9380d-509">Normalization converts these equivalent characters into the same binary representation.</span></span> <span data-ttu-id="9380d-510">Die <xref:System.String.Normalize%2A?displayProperty=nameWithType> Methode führt die Normalisierung aus, und die <xref:System.String.IsNormalized%2A?displayProperty=nameWithType> Methode bestimmt, ob eine Zeichenfolge normalisiert wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-510">The <xref:System.String.Normalize%2A?displayProperty=nameWithType> method performs the normalization, and the <xref:System.String.IsNormalized%2A?displayProperty=nameWithType> method determines whether a string is normalized.</span></span>  
  
 <span data-ttu-id="9380d-511">Weitere Informationen und ein Beispiel finden Sie unter den [Normalisierung](#Normalization) weiter oben in diesem Thema.</span><span class="sxs-lookup"><span data-stu-id="9380d-511">For more information and an example, see the [Normalization](#Normalization) section earlier in this topic.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="9380d-512">Dieser Typ ist threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="9380d-512">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.ICloneable" />
    <altmember cref="T:System.IConvertible" />
    <altmember cref="T:System.Collections.IEnumerable" />
    <altmember cref="T:System.Text.StringBuilder" />
    <altmember cref="T:System.Globalization.CultureInfo" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-513">Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-513">Initializes a new instance of the <see cref="T:System.String" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-514">In diesem Abschnitt</span><span class="sxs-lookup"><span data-stu-id="9380d-514">In this section:</span></span>  
  
 <span data-ttu-id="9380d-515">[Der überladene Konstruktor-syntax](#Syntax) </span><span class="sxs-lookup"><span data-stu-id="9380d-515">[Overloaded constructor syntax](#Syntax) </span></span>  
 <span data-ttu-id="9380d-516">[Parameter](#Params) </span><span class="sxs-lookup"><span data-stu-id="9380d-516">[Parameters](#Params) </span></span>  
 <span data-ttu-id="9380d-517">[Ausnahmen](#Exceptions) </span><span class="sxs-lookup"><span data-stu-id="9380d-517">[Exceptions](#Exceptions) </span></span>  
 <span data-ttu-id="9380d-518">[Welche Methode rufe ich?](#Tasks) </span><span class="sxs-lookup"><span data-stu-id="9380d-518">[Which method do I call?](#Tasks) </span></span>  
 <span data-ttu-id="9380d-519">[Erstellen von Zeichenfolgen](#Creating_Strings) </span><span class="sxs-lookup"><span data-stu-id="9380d-519">[Creating strings](#Creating_Strings) </span></span>  
 <span data-ttu-id="9380d-520">[Behandlung von Zeichenfolgen](#Repetitive) </span><span class="sxs-lookup"><span data-stu-id="9380d-520">[Handling repetitive strings](#Repetitive) </span></span>  
 <span data-ttu-id="9380d-521">Beispiele für Zeichenfolgen mit instanziieren:</span><span class="sxs-lookup"><span data-stu-id="9380d-521">Examples of instantiating strings:</span></span>   
 [<span data-ttu-id="9380d-522">Mit der Zeichenfolge-Zuweisung</span><span class="sxs-lookup"><span data-stu-id="9380d-522">Using string assignment</span></span>](#Ctor1_Example)  
 [<span data-ttu-id="9380d-523">Verwenden ein Array von Zeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-523">Using a character array</span></span>](#Ctor2_Example)  
 [<span data-ttu-id="9380d-524">Verwenden einen Teil eines Arrays von Zeichen, und wiederholen ein einzelnes Zeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-524">Using a portion of a character array and repeating a single character</span></span>](#Ctor3_Example)  
 [<span data-ttu-id="9380d-525">Mithilfe eines Zeigers auf ein Array von Zeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-525">Using a pointer to a character array</span></span>](#Ctor4_Example)  
 [<span data-ttu-id="9380d-526">Verwenden einen Zeiger und einen Bereich eines Arrays</span><span class="sxs-lookup"><span data-stu-id="9380d-526">Using  a pointer and a range of an array</span></span>](#Ctor5_Example)  
 [<span data-ttu-id="9380d-527">Mithilfe eines Zeigers auf ein Bytearray mit Vorzeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-527">Using a pointer to a signed byte array</span></span>](#Ctor6_Example)  
[<span data-ttu-id="9380d-528">Versionsinformationen</span><span class="sxs-lookup"><span data-stu-id="9380d-528">Version information</span></span>](#Versions)  
  
<a name="Syntax"></a>   
## <a name="overloaded-constructor-syntax"></a><span data-ttu-id="9380d-529">Der überladene Konstruktor-syntax</span><span class="sxs-lookup"><span data-stu-id="9380d-529">Overloaded constructor syntax</span></span>  
 <span data-ttu-id="9380d-530">Konstruktoren für Zeichenfolge in zwei Kategorien unterteilen: ohne Zeigerparameter an, und die mit Zeigerparameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-530">String constructors fall into two categories: those without pointer parameters, and those with pointer parameters.</span></span> <span data-ttu-id="9380d-531">Die Konstruktoren, die Zeiger verwenden, sind nicht CLS-kompatibel.</span><span class="sxs-lookup"><span data-stu-id="9380d-531">The constructors that use pointers are not CLS-compliant.</span></span> <span data-ttu-id="9380d-532">Darüber hinaus Visual Basic unterstützt nicht die Verwendung von Zeigern und in c# muss Code, der Zeiger verwendet wird, um in einem unsicheren Kontext auszuführen.</span><span class="sxs-lookup"><span data-stu-id="9380d-532">In addition, Visual Basic does not support the use of pointers, and C# requires code that uses pointers to run in an unsafe context.</span></span> <span data-ttu-id="9380d-533">Weitere Informationen finden Sie unter [unsafe](~/docs/csharp/language-reference/keywords/unsafe.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-533">For more information, see [unsafe](~/docs/csharp/language-reference/keywords/unsafe.md).</span></span>  
  
 <span data-ttu-id="9380d-534">Weitere Anleitungen zum Auswählen einer Überladung finden Sie unter [welche Methode rufe ich?](#Tasks)</span><span class="sxs-lookup"><span data-stu-id="9380d-534">For additional guidance on choosing an overload, see [Which method do I call?](#Tasks)</span></span>  
  
 `String(Char[] value)`  
 <span data-ttu-id="9380d-535">Initialisiert die neue Instanz mit dem Wert durch ein Array von Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-535">Initializes the new instance to the value indicated by an array of Unicode characters.</span></span> <span data-ttu-id="9380d-536">Dieser Konstruktor kopiert die Unicode-Zeichen ([Beispiel](#Ctor2_Example)).</span><span class="sxs-lookup"><span data-stu-id="9380d-536">This constructor copies Unicode characters([example](#Ctor2_Example)).</span></span>  
  
 `String(Char[] value, Int32 startIndex, Int32 length)`  
 <span data-ttu-id="9380d-537">Initialisiert die neue Instanz mit dem Wert durch ein Array von Unicode-Zeichen, die Position des ersten Zeichens innerhalb dieses Arrays, und die Länge ([Beispiel](#Ctor3_Example)).</span><span class="sxs-lookup"><span data-stu-id="9380d-537">Initializes the new instance to the value indicated by an array of Unicode characters, a starting character position within that array, and a length ([example](#Ctor3_Example)).</span></span>  
  
 `String(Char c, Int32 count)`  
 <span data-ttu-id="9380d-538">Eine angegebene Anzahl von Malen wiederholt, initialisiert die neue Instanz mit dem Wert angegeben wird, durch ein angegebenes Unicodezeichen ([Beispiel](#Ctor3_Example)).</span><span class="sxs-lookup"><span data-stu-id="9380d-538">Initializes the new instance to the value indicated by a specified Unicode character repeated a specified number of times ([example](#Ctor3_Example)).</span></span>  
  
 `String(char* value)`  
 <span data-ttu-id="9380d-539">**(Nicht CLS-kompatibel) ** Initialisiert die neue Instanz mit dem Wert durch einen Zeiger auf ein Array von Unicode-Zeichen, die durch ein Null-Zeichen beendet wird (U + 0000 oder '\0').</span><span class="sxs-lookup"><span data-stu-id="9380d-539">**(Not CLS-compliant)** Initializes the new instance to the value indicated by a pointer to an array of Unicode characters that is terminated by a null character (U+0000 or '\0').</span></span> <span data-ttu-id="9380d-540">([Beispiel](#Ctor4_Example)).</span><span class="sxs-lookup"><span data-stu-id="9380d-540">([example](#Ctor4_Example)).</span></span>  
  
 <span data-ttu-id="9380d-541">Berechtigung: <xref:System.Security.SecurityCriticalAttribute>, erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="9380d-541">Permission: <xref:System.Security.SecurityCriticalAttribute>, requires full trust for the immediate caller.</span></span> <span data-ttu-id="9380d-542">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-542">This member cannot be used by partially trusted or transparent code.</span></span>  
  
 `String(char* value, Int32 startIndex, Int32 length)`  
 <span data-ttu-id="9380d-543">**(Nicht CLS-kompatibel) ** Initialisiert die neue Instanz mit dem Wert durch einen Zeiger auf ein Array von Unicode-Zeichen, die Position des ersten Zeichens innerhalb dieses Arrays und eine Länge angegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-543">**(Not CLS-compliant)** Initializes the new instance to the value indicated by a pointer to an array of Unicode characters, a starting character position within that array, and a length.</span></span> <span data-ttu-id="9380d-544">Der Konstruktor kopiert die Unicode-Zeichen von `value` beginnend am Index `startIndex` und endet am Index `startIndex`  +  `length` – 1 ([Beispiel](#Ctor5_Example)).</span><span class="sxs-lookup"><span data-stu-id="9380d-544">The constructor copies the Unicode characters from `value` starting at index `startIndex` and ending at index `startIndex` + `length` – 1 ([example](#Ctor5_Example)).</span></span>  
  
 <span data-ttu-id="9380d-545">Berechtigung: <xref:System.Security.SecurityCriticalAttribute>, erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="9380d-545">Permission: <xref:System.Security.SecurityCriticalAttribute>, requires full trust for the immediate caller.</span></span> <span data-ttu-id="9380d-546">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-546">This member cannot be used by partially trusted or transparent code.</span></span>  
  
 `String(SByte* value)`  
 <span data-ttu-id="9380d-547">**(Nicht CLS-kompatibel) ** Initialisiert die neue Instanz mit dem Wert durch einen Zeiger auf ein Array von 8-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-547">**(Not CLS-compliant)** Initializes the new instance to the value indicated by a pointer to an array of 8-bit signed integers.</span></span> <span data-ttu-id="9380d-548">Das Array wird davon ausgegangen, dass zur Darstellung einer Zeichenfolge, die mit der aktuellen Codepage des Systems codiert (d. h. durch angegebene Codierung <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="9380d-548">The array is assumed to represent a string encoded using the current system code page (that is, the encoding specified by <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="9380d-549">Der Konstruktor verarbeitet die Zeichen aus `value` beginnend an der vom Zeiger angegeben werden, bis ein Null-Zeichen (0 x 00) erreicht ist ([Beispiel](#Ctor6_Example)).</span><span class="sxs-lookup"><span data-stu-id="9380d-549">The constructor processes characters from `value` starting from the location specified by the pointer until a null character (0x00) is reached ([example](#Ctor6_Example)).</span></span>  
  
 <span data-ttu-id="9380d-550">Berechtigung: <xref:System.Security.SecurityCriticalAttribute>, erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="9380d-550">Permission: <xref:System.Security.SecurityCriticalAttribute>, requires full trust for the immediate caller.</span></span> <span data-ttu-id="9380d-551">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-551">This member cannot be used by partially trusted or transparent code.</span></span>  
  
 `String(SByte* value, Int32 startIndex, Int32 length)`  
 <span data-ttu-id="9380d-552">**(Nicht CLS-kompatibel) ** Initialisiert die neue Instanz auf den Wert durch einen Zeiger auf ein Array von 8-Bit-Ganzzahlen mit Vorzeichen, die Startposition innerhalb dieses Arrays und eine Länge angegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-552">**(Not CLS-compliant)** Initializes the new instance to the value indicated by a pointer to an array of 8-bit signed integers, a starting position within that array, and a length.</span></span>  <span data-ttu-id="9380d-553">Das Array wird davon ausgegangen, dass zur Darstellung einer Zeichenfolge, die mit der aktuellen Codepage des Systems codiert (d. h. durch angegebene Codierung <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="9380d-553">The array is assumed to represent a string encoded using the current system code page (that is, the encoding specified by <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>).</span></span> <span data-ttu-id="9380d-554">Der Konstruktor verarbeitet Zeichen aus beginnend mit Wert `startIndex` und endet um `startIndex`  +  `length` – 1 ([Beispiel](#Ctor6_Example)).</span><span class="sxs-lookup"><span data-stu-id="9380d-554">The constructor processes characters from value starting at `startIndex` and ending at `startIndex` + `length` – 1 ([example](#Ctor6_Example)).</span></span>  
  
 <span data-ttu-id="9380d-555">Berechtigung: <xref:System.Security.SecurityCriticalAttribute>, erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="9380d-555">Permission: <xref:System.Security.SecurityCriticalAttribute>, requires full trust for the immediate caller.</span></span> <span data-ttu-id="9380d-556">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-556">This member cannot be used by partially trusted or transparent code.</span></span>  
  
 `String(SByte* value, Int32 startIndex, Int32 length, Encoding enc)`  
 <span data-ttu-id="9380d-557">**(Nicht CLS-kompatibel) ** Initialisiert die neue Instanz mit dem Wert durch einen Zeiger auf ein Array von 8-Bit-Ganzzahlen mit Vorzeichen, Startposition innerhalb dieses Arrays, eine Länge und ein <xref:System.Text.Encoding> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9380d-557">**(Not CLS-compliant)** Initializes the new instance to the value indicated by a pointer to an array of 8-bit signed integers, a starting position within that array, a length, and an <xref:System.Text.Encoding> object.</span></span>  
  
 <span data-ttu-id="9380d-558">Berechtigung: <xref:System.Security.SecurityCriticalAttribute>, erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="9380d-558">Permission: <xref:System.Security.SecurityCriticalAttribute>, requires full trust for the immediate caller.</span></span> <span data-ttu-id="9380d-559">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-559">This member cannot be used by partially trusted or transparent code.</span></span>  
  
<a name="Params"></a>   
## <a name="parameters"></a><span data-ttu-id="9380d-560">Parameter</span><span class="sxs-lookup"><span data-stu-id="9380d-560">Parameters</span></span>  
 <span data-ttu-id="9380d-561">Hier ist eine vollständige Liste der von verwendeten Parameter <xref:System.String> Konstruktoren, die einen Zeigerparameter nicht enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-561">Here is a complete list of parameters used by <xref:System.String> constructors that don't include a pointer parameter.</span></span> <span data-ttu-id="9380d-562">Die Parameter, die von jeder Überladung verwendet wird finden Sie unter die oben stehende Syntax Überladung.</span><span class="sxs-lookup"><span data-stu-id="9380d-562">For the parameters used by each overload, see the overload syntax above.</span></span>  
  
|<span data-ttu-id="9380d-563">Parameter</span><span class="sxs-lookup"><span data-stu-id="9380d-563">Parameter</span></span>|<span data-ttu-id="9380d-564">Typ</span><span class="sxs-lookup"><span data-stu-id="9380d-564">Type</span></span>|<span data-ttu-id="9380d-565">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="9380d-565">Description</span></span>|  
|---------------|----------|-----------------|  
|`value`|<span data-ttu-id="9380d-566"><xref:System.Char>[]</span><span class="sxs-lookup"><span data-stu-id="9380d-566"><xref:System.Char>[]</span></span>|<span data-ttu-id="9380d-567">Ein Array von Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-567">An array of Unicode characters.</span></span>|  
|`c`|<xref:System.Char>|<span data-ttu-id="9380d-568">Ein Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-568">A Unicode character.</span></span>|  
|`startIndex`|<xref:System.Int32>|<span data-ttu-id="9380d-569">Die Anfangsposition in `value` des ersten Zeichens in der neuen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-569">The starting position in `value` of the first character in the new string.</span></span><br /><br /> <span data-ttu-id="9380d-570">Standardwert: 0</span><span class="sxs-lookup"><span data-stu-id="9380d-570">Default value: 0</span></span>|  
|`length`|<xref:System.Int32>|<span data-ttu-id="9380d-571">Die Anzahl der Zeichen in `value` in der neuen Zeichenfolge eingeschlossen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="9380d-571">The number of characters in `value` to include in the new string.</span></span><br /><br /> <span data-ttu-id="9380d-572">Standardwert: <xref:System.Array.Length%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9380d-572">Default value: <xref:System.Array.Length%2A?displayProperty=nameWithType></span></span>|  
|`count`|<xref:System.Int32>|<span data-ttu-id="9380d-573">Die Häufigkeit, mit des Zeichens `c` wird in der neuen Zeichenfolge wiederholt.</span><span class="sxs-lookup"><span data-stu-id="9380d-573">The number of times the character `c` is repeated in the new string.</span></span> <span data-ttu-id="9380d-574">Wenn `count` NULL ist, wird der Wert des neuen Objekts <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-574">If `count` is zero, the value of the new object is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>|  
  
 <span data-ttu-id="9380d-575">Hier ist eine vollständige Liste der von verwendeten Parameter <xref:System.String> Konstruktoren, die einen Zeigerparameter enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-575">Here is a complete list of parameters used by <xref:System.String> constructors that include a pointer parameter.</span></span> <span data-ttu-id="9380d-576">Die Parameter, die von jeder Überladung verwendet wird finden Sie unter die oben stehende Syntax Überladung.</span><span class="sxs-lookup"><span data-stu-id="9380d-576">For the parameters used by each overload, see the overload syntax above.</span></span>  
  
|<span data-ttu-id="9380d-577">Parameter</span><span class="sxs-lookup"><span data-stu-id="9380d-577">Parameter</span></span>|<span data-ttu-id="9380d-578">Typ</span><span class="sxs-lookup"><span data-stu-id="9380d-578">Type</span></span>|<span data-ttu-id="9380d-579">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="9380d-579">Description</span></span>|  
|---------------|----------|-----------------|  
|`value`|<xref:System.Char>*<br /><br /> <span data-ttu-id="9380d-580">- oder - </span><span class="sxs-lookup"><span data-stu-id="9380d-580">-or-</span></span><br /><br /> <xref:System.SByte>\*|<span data-ttu-id="9380d-581">Ein Zeiger auf eine mit Null endendes Array von Unicode-Zeichen oder ein Array von 8-Bit-Ganzzahlen mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-581">A pointer to a null-terminated array of Unicode characters or an array of 8-bit signed integers.</span></span> <span data-ttu-id="9380d-582">Wenn `value` ist `null` oder ein leeres Array ist der Wert der neuen Zeichenfolge <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-582">If `value` is `null` or an empty array, the value of the new string is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>|  
|`startIndex`|<xref:System.Int32>|<span data-ttu-id="9380d-583">Der Index des Arrayelements dar, der das erste Zeichen in der neuen Zeichenfolge definiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-583">The index of the array element that defines the first character in the new string.</span></span><br /><br /> <span data-ttu-id="9380d-584">Standardwert: 0</span><span class="sxs-lookup"><span data-stu-id="9380d-584">Default value: 0</span></span>|  
|`length`|<xref:System.Int32>|<span data-ttu-id="9380d-585">Die Anzahl der Elemente des Arrays zu verwenden, um die neue Zeichenfolge zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="9380d-585">The number of array elements to use to create the new string.</span></span> <span data-ttu-id="9380d-586">Wenn die Länge 0 (null) ist, wird der Konstruktor erstellt eine Zeichenfolge, deren Wert <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-586">If length is zero, the constructor creates a string whose value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span><br /><br /> <span data-ttu-id="9380d-587">Standardwert: <xref:System.Array.Length%2A?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="9380d-587">Default value: <xref:System.Array.Length%2A?displayProperty=nameWithType></span></span>|  
|`enc`|<xref:System.Text.Encoding>|<span data-ttu-id="9380d-588">Ein Objekt, der angibt, wie die `value` Array codiert ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-588">An object that specifies how the `value` array is encoded.</span></span><br /><br /> <span data-ttu-id="9380d-589">Standardwert: <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>, oder der aktuellen ANSI-Codepage des Systems</span><span class="sxs-lookup"><span data-stu-id="9380d-589">Default value: <xref:System.Text.Encoding.Default%2A?displayProperty=nameWithType>, or the system's current ANSI code page</span></span>|  
  
<a name="Exceptions"></a>   
## <a name="exceptions"></a><span data-ttu-id="9380d-590">Ausnahmen</span><span class="sxs-lookup"><span data-stu-id="9380d-590">Exceptions</span></span>  
 <span data-ttu-id="9380d-591">Hier ist eine Liste der Ausnahmen, die von den Konstruktoren, die keine Zeigerparameter enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-591">Here's a list of exceptions thrown by constructors that don't include pointer parameters.</span></span>  
  
|<span data-ttu-id="9380d-592">Ausnahme</span><span class="sxs-lookup"><span data-stu-id="9380d-592">Exception</span></span>|<span data-ttu-id="9380d-593">Bedingung</span><span class="sxs-lookup"><span data-stu-id="9380d-593">Condition</span></span>|<span data-ttu-id="9380d-594">Ausgelöst durch</span><span class="sxs-lookup"><span data-stu-id="9380d-594">Thrown by</span></span>|  
|---------------|---------------|---------------|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="9380d-595">`value` ist `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-595">`value` is `null`.</span></span>|<xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="9380d-596">`startIndex`,`length`, oder `count` ist kleiner als 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-596">`startIndex`,`length`, or `count` is less than zero.</span></span><br /><br /> <span data-ttu-id="9380d-597">- oder - </span><span class="sxs-lookup"><span data-stu-id="9380d-597">-or-</span></span><br /><br /> <span data-ttu-id="9380d-598">Die Summe von `startIndex` und `length` ist größer als die Anzahl der Elemente von `value`.</span><span class="sxs-lookup"><span data-stu-id="9380d-598">The sum of `startIndex` and `length` is greater than the number of elements in `value`.</span></span><br /><br /> <span data-ttu-id="9380d-599">- oder - </span><span class="sxs-lookup"><span data-stu-id="9380d-599">-or-</span></span><br /><br /> <span data-ttu-id="9380d-600">`count` ist kleiner als Null.</span><span class="sxs-lookup"><span data-stu-id="9380d-600">`count` is less than zero.</span></span>|<xref:System.String.%23ctor%28System.Char%2CSystem.Int32%29><br /><br /> <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29>|  
  
 <span data-ttu-id="9380d-601">Hier ist eine Liste der Ausnahmen, die von den Konstruktoren, die Zeigerparameter enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-601">Here's a list of exceptions thrown by constructors that include pointer parameters.</span></span>  
  
|<span data-ttu-id="9380d-602">Ausnahme</span><span class="sxs-lookup"><span data-stu-id="9380d-602">Exception</span></span>|<span data-ttu-id="9380d-603">Bedingung</span><span class="sxs-lookup"><span data-stu-id="9380d-603">Condition</span></span>|<span data-ttu-id="9380d-604">Ausgelöst durch</span><span class="sxs-lookup"><span data-stu-id="9380d-604">Thrown by</span></span>|  
|---------------|---------------|---------------|  
|<xref:System.ArgumentException>|<span data-ttu-id="9380d-605">`value` Gibt ein Array, das ein ungültiges Unicodezeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-605">`value` specifies an array that contains an invalid Unicode character.</span></span><br /><br /> <span data-ttu-id="9380d-606">- oder - </span><span class="sxs-lookup"><span data-stu-id="9380d-606">-or-</span></span><br /><br /> <span data-ttu-id="9380d-607">`value` oder `value`  +  `startIndex` gibt an, eine Adresse kleiner als 64K.</span><span class="sxs-lookup"><span data-stu-id="9380d-607">`value` or `value` + `startIndex` specifies an address that is less than 64K.</span></span><br /><br /> <span data-ttu-id="9380d-608">- oder - </span><span class="sxs-lookup"><span data-stu-id="9380d-608">-or-</span></span><br /><br /> <span data-ttu-id="9380d-609">Ein neues <xref:System.String> Instanz konnte nicht initialisiert werden, aus der `value` Bytearray da `value` verwendet nicht die standardmäßige Systemcodeseiten-Codierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-609">A new <xref:System.String> instance could not be initialized from the `value` byte array because `value` does not use the default code page encoding.</span></span>|<span data-ttu-id="9380d-610">Alle Konstruktoren mit Zeigern.</span><span class="sxs-lookup"><span data-stu-id="9380d-610">All constructors with pointers.</span></span>|  
|<xref:System.ArgumentNullException>|<span data-ttu-id="9380d-611">`value` ist NULL.</span><span class="sxs-lookup"><span data-stu-id="9380d-611">`value` is null.</span></span>|<xref:System.String.%23ctor%28System.SByte%2A%29><br /><br /> <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29><br /><br /> <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%29>|  
|<xref:System.ArgumentOutOfRangeException>|<span data-ttu-id="9380d-612">Der aktuelle Prozess hat keinen Lesezugriff auf alle adressierten Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-612">The current process does not have read access to all the addressed characters.</span></span><br /><br /> <span data-ttu-id="9380d-613">- oder - </span><span class="sxs-lookup"><span data-stu-id="9380d-613">-or-</span></span><br /><br /> <span data-ttu-id="9380d-614">`startIndex` oder `length` ist kleiner als 0 (null), `value` + `startIndex` verursacht einen Zeigerüberlauf oder der aktuelle Prozess hat keinen Lesezugriff auf alle adressierten Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-614">`startIndex` or `length` is less than zero, `value` + `startIndex` cause a pointer overflow, or the current process does not have read access to all the addressed characters.</span></span><br /><br /> <span data-ttu-id="9380d-615">- oder - </span><span class="sxs-lookup"><span data-stu-id="9380d-615">-or-</span></span><br /><br /> <span data-ttu-id="9380d-616">Die Länge der neuen Zeichenfolge ist zu groß für die Zuordnung.</span><span class="sxs-lookup"><span data-stu-id="9380d-616">The length of the new string is too large to allocate.</span></span>|<span data-ttu-id="9380d-617">Alle Konstruktoren mit Zeigern.</span><span class="sxs-lookup"><span data-stu-id="9380d-617">All constructors with pointers.</span></span>|  
|<xref:System.AccessViolationException>|<span data-ttu-id="9380d-618">`value`, oder `value`  +  `startIndex`  +  `length` – 1, gibt eine ungültige Adresse.</span><span class="sxs-lookup"><span data-stu-id="9380d-618">`value`, or `value` + `startIndex` + `length` – 1, specifies an invalid address.</span></span>|<xref:System.String.%23ctor%28System.SByte%2A%29><br /><br /> <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29><br /><br /> <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%29>|  
  
<a name="Tasks"></a>   
## <a name="which-method-do-i-call"></a><span data-ttu-id="9380d-619">Welche Methode rufe ich?</span><span class="sxs-lookup"><span data-stu-id="9380d-619">Which method do I call?</span></span>  
  
|<span data-ttu-id="9380d-620">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="9380d-620">To</span></span>|<span data-ttu-id="9380d-621">Aufruf, oder verwenden</span><span class="sxs-lookup"><span data-stu-id="9380d-621">Call or use</span></span>|  
|--------|-----------------|  
|<span data-ttu-id="9380d-622">Eine Zeichenfolge zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="9380d-622">Create a string.</span></span>|<span data-ttu-id="9380d-623">Zuweisung von einem Zeichenfolgenliteral oder eine vorhandene Zeichenfolge ([Beispiel](#Ctor1_Example))</span><span class="sxs-lookup"><span data-stu-id="9380d-623">Assignment from a string literal or an existing string ([example](#Ctor1_Example))</span></span>|  
|<span data-ttu-id="9380d-624">Erstellen Sie eine Zeichenfolge aus einem Array ganze Zeichen ein.</span><span class="sxs-lookup"><span data-stu-id="9380d-624">Create a string from an entire character array.</span></span>|<span data-ttu-id="9380d-625"><xref:System.String.%23ctor%28System.Char%5B%5D%29> ([Beispiel](#Ctor2_Example))</span><span class="sxs-lookup"><span data-stu-id="9380d-625"><xref:System.String.%23ctor%28System.Char%5B%5D%29> ([example](#Ctor2_Example))</span></span>|  
|<span data-ttu-id="9380d-626">Erstellt einen Zeichenfolge aus einem Abschnitt eines Arrays von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-626">Createa string from a portion of a character array.</span></span>|<span data-ttu-id="9380d-627"><xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> ([Beispiel](#Ctor3_Example))</span><span class="sxs-lookup"><span data-stu-id="9380d-627"><xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> ([example](#Ctor3_Example))</span></span>|  
|<span data-ttu-id="9380d-628">Erstellen Sie eine Zeichenfolge, die das gleiche Zeichen mehrere Male wiederholt.</span><span class="sxs-lookup"><span data-stu-id="9380d-628">Create a string that repeats the same character multiple times.</span></span>|<span data-ttu-id="9380d-629"><xref:System.String.%23ctor%28System.Char%2CSystem.Int32%29> ([Beispiel](#Ctor3_Example))</span><span class="sxs-lookup"><span data-stu-id="9380d-629"><xref:System.String.%23ctor%28System.Char%2CSystem.Int32%29> ([example](#Ctor3_Example))</span></span>|  
|<span data-ttu-id="9380d-630">Erstellen Sie eine Zeichenfolge von einem Zeiger auf eine Unicode- oder ein Array mit Breitzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-630">Create a string from a pointer to a Unicode or wide character array.</span></span>|<xref:System.String.%23ctor%28System.Char%2A%29>|  
|<span data-ttu-id="9380d-631">Erstellen Sie eine Zeichenfolge mithilfe der Zeiger aus einem Abschnitt eine Unicode-oder ein Array mit Breitzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-631">Create a string from a portion of a Unicode or wide character array by using its pointer.</span></span>|<xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29>|  
|<span data-ttu-id="9380d-632">Erstellen Sie eine Zeichenfolge aus einer C++ `char` Array.</span><span class="sxs-lookup"><span data-stu-id="9380d-632">Create a string from a C++ `char` array.</span></span>|<span data-ttu-id="9380d-633"><xref:System.String.%23ctor%28System.SByte%2A%29>, <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29></span><span class="sxs-lookup"><span data-stu-id="9380d-633"><xref:System.String.%23ctor%28System.SByte%2A%29>, <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29></span></span><br /><br /> <span data-ttu-id="9380d-634">- oder - </span><span class="sxs-lookup"><span data-stu-id="9380d-634">-or-</span></span><br /><br /> <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%2CSystem.Text.Encoding%29>|  
|<span data-ttu-id="9380d-635">Erstellen Sie eine Zeichenfolge, aus ASCII-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-635">Create a string from ASCII characters.</span></span>|<xref:System.Text.ASCIIEncoding.GetString%2A?displayProperty=nameWithType>|  
  
<a name="Creating_Strings"></a>   
## <a name="creating-strings"></a><span data-ttu-id="9380d-636">Erstellen von Zeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="9380d-636">Creating strings</span></span>  
 <span data-ttu-id="9380d-637">Die am häufigsten verwendeten Verfahren für programmgesteuerte Erstellung von Zeichenfolgen einfache Zuweisung, siehe [in diesem Beispiel](#Ctor1_Example).</span><span class="sxs-lookup"><span data-stu-id="9380d-637">The most commonly used technique for creating strings programmatically is simple assignment, as illustrated in [this example](#Ctor1_Example).</span></span> <span data-ttu-id="9380d-638">Die <xref:System.String> -Klasse enthält auch vier Typen von überladene Konstruktoren verfügbar, mit denen Sie die Zeichenfolgen aus den folgenden Werten zu erstellen:</span><span class="sxs-lookup"><span data-stu-id="9380d-638">The <xref:System.String> class also includes four types of constructor overloads that let you create strings from the following values:</span></span>  
  
-   <span data-ttu-id="9380d-639">Aus einem Array mit Zeichen (ein Array von UTF-16-codierte Zeichen).</span><span class="sxs-lookup"><span data-stu-id="9380d-639">From a character array (an array of UTF-16-encoded characters).</span></span> <span data-ttu-id="9380d-640">Sie können ein neues erstellen <xref:System.String> Objekt aus der Zeichen in das gesamte Array oder einen Teil davon.</span><span class="sxs-lookup"><span data-stu-id="9380d-640">You can create a new <xref:System.String> object from the characters in the entire array or a portion of it.</span></span> <span data-ttu-id="9380d-641">Die <xref:System.String.%23ctor%28System.Char%5B%5D%29> Konstruktor kopiert alle Zeichen im Array, in die neue Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-641">The <xref:System.String.%23ctor%28System.Char%5B%5D%29> constructor copies all the characters in the array to the new string.</span></span> <span data-ttu-id="9380d-642">Die <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Konstruktor kopiert die Zeichen aus dem Index `startIndex` Index `startIndex`  +  `length` – 1, um die neue Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-642">The <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> constructor copies the characters from index `startIndex` to index `startIndex` + `length` – 1 to the new string.</span></span> <span data-ttu-id="9380d-643">Wenn `length` NULL ist, wird der Wert der neuen Zeichenfolge <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-643">If `length` is zero, the value of the new string is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
     <span data-ttu-id="9380d-644">Wenn Ihr Code wiederholt Zeichenfolgen, die den gleichen Wert verfügen instanziiert, können Sie die Anwendungsleistung verbessern, mit der eine alternative Möglichkeit für das Erstellen von Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-644">If your code repeatedly instantiates strings that have the same value, you can improve application performance by using an alternate means of creating strings.</span></span> <span data-ttu-id="9380d-645">Weitere Informationen finden Sie unter [Behandlung von Zeichenfolgen](#Repetitive).</span><span class="sxs-lookup"><span data-stu-id="9380d-645">For more information, see [Handling repetitive strings](#Repetitive).</span></span>  
  
-   <span data-ttu-id="9380d-646">Von einem einzelnen Zeichen, das doppelte 0 (null), einen oder mehrere Male, mit der <xref:System.String.%23ctor%28System.Char%2CSystem.Int32%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="9380d-646">From a single character that is duplicated zero, one, or more times, by using the <xref:System.String.%23ctor%28System.Char%2CSystem.Int32%29> constructor.</span></span> <span data-ttu-id="9380d-647">Wenn `count` NULL ist, wird der Wert der neuen Zeichenfolge <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-647">If `count` is zero, the value of the new string is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="9380d-648">Mithilfe von einem Zeiger auf ein Null-terminierte Zeichenarray, das <xref:System.String.%23ctor%28System.Char%2A%29> oder <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="9380d-648">From a pointer to a null-terminated character array, by using the <xref:System.String.%23ctor%28System.Char%2A%29> or <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> constructor.</span></span> <span data-ttu-id="9380d-649">Entweder das gesamte Array oder einem angegebenen Bereich kann verwendet werden, um die Zeichenfolge zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-649">Either the entire array or a specified range can be used to initialize the string.</span></span> <span data-ttu-id="9380d-650">Der Konstruktor kopiert eine Sequenz von Unicode-Zeichen ab, aus dem angegebenen Zeiger oder der angegebene Zeiger plus `startIndex` und bis zum Ende des Arrays oder für `length` Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-650">The constructor copies a sequence of Unicode characters starting from the specified pointer or from the specified pointer plus `startIndex` and continuing to the end of the array or for `length` characters.</span></span> <span data-ttu-id="9380d-651">Wenn `value` ist ein null-Zeiger oder `length` 0 (null), wird der Konstruktor erstellt eine Zeichenfolge, deren Wert <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-651">If `value` is a null pointer or `length` is zero, the constructor creates a string whose value is <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-652">Wenn der Kopiervorgang wird, bis zum Ende des Arrays fortgesetzt, und das Array ist nicht für die Null-terminiert, ist das Verhalten der Konstruktor System abhängig.</span><span class="sxs-lookup"><span data-stu-id="9380d-652">If the copy operation proceeds to the end of the array and the array is not null-terminated, the constructor behavior is system-dependent.</span></span> <span data-ttu-id="9380d-653">Eine solche Bedingung kann eine zugriffsverletzung verursachen.</span><span class="sxs-lookup"><span data-stu-id="9380d-653">Such a condition might cause an access violation.</span></span>  
  
     <span data-ttu-id="9380d-654">Wenn das Array eingebetteten Null-Zeichen enthält (U + 0000 oder '\0') und die <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> Überladung aufgerufen wird, wird die Zeichenfolgeninstanz enthält `length` Zeichen einschließlich aller eingebettete NULL-Werte.</span><span class="sxs-lookup"><span data-stu-id="9380d-654">If the array contains any embedded null characters (U+0000 or '\0') and the <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> overload is called, the string instance contains `length` characters including any embedded nulls.</span></span> <span data-ttu-id="9380d-655">Das folgende Beispiel zeigt, was geschieht, wenn ein Zeiger auf ein Array aus 10 Elementen, die zwei Null-Zeichen enthält, übergeben, wird die <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-655">The following example shows what happens when a pointer to an array of 10 elements that includes two null characters is passed to the <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="9380d-656">Da die Adresse der Anfang des Arrays ist und alle Elemente im Array der Zeichenfolge hinzugefügt werden, instanziiert der Konstruktor eine Zeichenfolge mit zehn Zeichen, einschließlich der zwei eingebettete NULL-Werte.</span><span class="sxs-lookup"><span data-stu-id="9380d-656">Because the address is the beginning of the array and all elements in the array are to be added to the string, the constructor instantiates a string with ten characters, including two embedded nulls.</span></span> <span data-ttu-id="9380d-657">Andererseits, wenn dasselbe Array übergeben wird, um die <xref:System.String.%23ctor%28System.Char%2A%29> -Konstruktor, der das Ergebnis ist eine vier-Zeichenfolge, die keine erste Null-Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-657">On the other hand, if the same array is passed to the <xref:System.String.%23ctor%28System.Char%2A%29> constructor, the result is a four-character string that does not include the first null character.</span></span>  
  
     [!code-cpp[System.String.ctor#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.ctor/cpp/chptrctor_null.cpp#5)]
     [!code-csharp[System.String.ctor#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.ctor/cs/chptrctor_null.cs#5)]  
  
     <span data-ttu-id="9380d-658">Das Array muss es sich um Unicode-Zeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-658">The array must contain Unicode characters.</span></span> <span data-ttu-id="9380d-659">In C++ ist dies bedeutet, dass das Zeichenarray muss entweder als die verwaltete definiert <xref:System.Char>[]-Typ oder die nicht verwaltete`wchar_t`[]-Typ.</span><span class="sxs-lookup"><span data-stu-id="9380d-659">In C++, this means that the character array must be defined either as the managed <xref:System.Char>[] type or the unmanaged`wchar_t`[] type.</span></span>  
  
     <span data-ttu-id="9380d-660">Wenn die <xref:System.String.%23ctor%28System.Char%2A%29> -Überladung aufgerufen wird und das Array ist nicht für die Null-terminiert ist, oder wenn die <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> -Überladung aufgerufen wird und `startIndex`  +  `length`-1 umfasst eine Reihe, die sie außerhalb des Speichers für die Sequenz von Zeichen zugeordnet das Verhalten des Konstruktors ist systemabhängig und eine zugriffsverletzung auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-660">If the <xref:System.String.%23ctor%28System.Char%2A%29> overload is called and the array is not null-terminated, or if the <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> overload is called and `startIndex` + `length`-1 includes a range that it outside the memory allocated for the sequence of characters, the behavior of the constructor is system-dependent, and an access violation may occur.</span></span> <span data-ttu-id="9380d-661">Darüber hinaus auf dem Intel Itanium-Prozessor aufgerufen, um die <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> Konstruktor löst möglicherweise eine <xref:System.DataMisalignedException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="9380d-661">In addition, on the Intel Itanium processor, calls to the <xref:System.String.%23ctor%28System.Char%2A%2CSystem.Int32%2CSystem.Int32%29> constructor may throw a <xref:System.DataMisalignedException> exception.</span></span> <span data-ttu-id="9380d-662">In diesem Fall rufen die <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> stattdessen.</span><span class="sxs-lookup"><span data-stu-id="9380d-662">If this occurs, call the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> instead.</span></span>  
  
-   <span data-ttu-id="9380d-663">Von einem Zeiger auf ein Array von Byte mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-663">From a pointer to a signed byte array.</span></span> <span data-ttu-id="9380d-664">Entweder das gesamte Array oder einem angegebenen Bereich kann verwendet werden, um die Zeichenfolge zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-664">Either the entire array or a specified range can be used to initialize the string.</span></span> <span data-ttu-id="9380d-665">Die Abfolge von Bytes mit der Standardcodepage-Codierung interpretiert werden kann, oder eine Codierung im Konstruktoraufruf angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-665">The sequence of bytes can be interpreted by using the default code page encoding, or an encoding can be specified in the constructor call.</span></span> <span data-ttu-id="9380d-666">Wenn der Konstruktor versucht, eine Zeichenfolge aus einem gesamten Array zu instanziieren, der keine Null-terminiert ist, oder wenn der Bereich der Arrays von `value`  +  `startIndex` zu `value`  +  `startIndex`  +  `length` -1 ist, außerhalb des Arbeitsspeichers für das Array, das Verhalten dieses Konstruktors ist systemabhängig und eine zugriffsverletzung auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-666">If the constructor tries to instantiate a string from an entire array that is not null-terminated, or if the range of the array from `value` + `startIndex` to `value` + `startIndex` + `length` -1 is outside of the memory allocated for the array, the behavior of this constructor is system-dependent, and an access violation may occur.</span></span>  
  
     <span data-ttu-id="9380d-667">Die drei Konstruktoren, die als Parameter ein Bytearray mit Vorzeichen enthalten dienen in erster Linie zum Konvertieren einer C++ `char` array in eine Zeichenfolge, wie im folgenden Beispiel gezeigt:</span><span class="sxs-lookup"><span data-stu-id="9380d-667">The three constructors that include a signed byte array as a parameter are designed primarily to convert a C++ `char` array to a string, as shown in this example:</span></span>  
  
     [!code-cpp[System.String.Ctor#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.ctor/cpp/sbyte_ctor1.cpp#4)]  
  
     <span data-ttu-id="9380d-668">Wenn das Array enthält Null-Zeichen ('\0') oder die Bytes, deren Wert 0 gleich, und der <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29> Überladung aufgerufen wird, wird die Zeichenfolgeninstanz enthält `length` Zeichen einschließlich aller eingebettete NULL-Werte.</span><span class="sxs-lookup"><span data-stu-id="9380d-668">If the array contains any null characters ('\0') or bytes whose value is 0 and the <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29> overload is called, the string instance contains `length` characters including any embedded nulls.</span></span> <span data-ttu-id="9380d-669">Das folgende Beispiel zeigt, was geschieht, wenn ein Zeiger auf ein Array aus 10 Elementen, die zwei Null-Zeichen enthält, übergeben, wird die <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-669">The following example shows what happens when a pointer to an array of 10 elements that includes two null characters is passed to the <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="9380d-670">Da die Adresse der Anfang des Arrays ist und alle Elemente im Array der Zeichenfolge hinzugefügt werden, instanziiert der Konstruktor eine Zeichenfolge mit zehn Zeichen, einschließlich der zwei eingebettete NULL-Werte.</span><span class="sxs-lookup"><span data-stu-id="9380d-670">Because the address is the beginning of the array and all elements in the array are to be added to the string, the constructor instantiates a string with ten characters, including two embedded nulls.</span></span> <span data-ttu-id="9380d-671">Andererseits, wenn dasselbe Array übergeben wird, um die <xref:System.String.%23ctor%28System.SByte%2A%29> -Konstruktor, der das Ergebnis ist eine vier-Zeichenfolge, die keine erste Null-Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-671">On the other hand, if the same array is passed to the <xref:System.String.%23ctor%28System.SByte%2A%29> constructor, the result is a four-character string that does not include the first null character.</span></span>  
  
     [!code-cpp[System.String.ctor#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.ctor/cpp/ptrctor_null.cpp#6)]
     [!code-csharp[System.String.ctor#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.ctor/cs/ptrctor_null.cs#6)]  
  
     <span data-ttu-id="9380d-672">Da die <xref:System.String.%23ctor%28System.SByte%2A%29> und <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29> Konstruktoren interpretieren `value` verwenden die Standard-ANSI-Codepage, diese Konstruktoren mit identischer Byte-Arrays aufrufen kann erstellen Zeichenfolgen, die auf anderen Systemen unterschiedliche Werte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-672">Because the <xref:System.String.%23ctor%28System.SByte%2A%29> and <xref:System.String.%23ctor%28System.SByte%2A%2CSystem.Int32%2CSystem.Int32%29> constructors interpret `value` by using the default ANSI code page, calling these constructors with identical byte arrays may create strings that have different values on different systems.</span></span>  
  
<a name="Repetitive"></a>   
## <a name="handling-repetitive-strings"></a><span data-ttu-id="9380d-673">Behandlung von Zeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="9380d-673">Handling repetitive strings</span></span>  
 <span data-ttu-id="9380d-674">Verwenden Sie Apps, die analysiert werden, oder Streams von Text häufig Decodieren der <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Konstruktor oder die <xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Methode, um Sequenzen von Zeichen in eine Zeichenfolge zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-674">Apps that parse or decode streams of text often use the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> constructor or the <xref:System.Text.StringBuilder.Append%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to convert sequences of characters into a string.</span></span> <span data-ttu-id="9380d-675">Erstellen neue Zeichenfolgen wiederholt mit den gleichen Wert anstatt zu erstellen und Wiederverwenden von einer Zeichenfolge wird Arbeitsspeicher vergeudet.</span><span class="sxs-lookup"><span data-stu-id="9380d-675">Repeatedly creating new strings with the same value instead of creating and reusing one string wastes memory.</span></span> <span data-ttu-id="9380d-676">Wenn Sie wahrscheinlich den gleichen Zeichenfolgenwert wiederholt zu erstellen, indem die <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Konstruktor, selbst wenn Sie nicht in kennen fahren Sie fort, was diese Werte identisch sein können, können Sie stattdessen eine Nachschlagetabelle verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-676">If you are likely to create the same string value repeatedly by calling the <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> constructor, even if you don't know in advance what those identical string values may be, you can use a lookup table instead.</span></span>  
  
 <span data-ttu-id="9380d-677">Nehmen wir beispielsweise an, Sie lesen und Analysieren einen Stream von Zeichen aus einer Datei, die XML-Tags und Attribute enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-677">For example, suppose you read and parse a stream of characters from a file that contains XML tags and attributes.</span></span> <span data-ttu-id="9380d-678">Wenn Sie den Stream zu analysieren, treten wiederholt bestimmte Token (d. h. Sequenzen von Zeichen, die eine symbolische Bedeutung haben).</span><span class="sxs-lookup"><span data-stu-id="9380d-678">When you parse the stream, you repeatedly encounter certain tokens (that is, sequences of characters that have a symbolic meaning).</span></span> <span data-ttu-id="9380d-679">Token, die die Zeichenfolgen "0", "1", "true" und "false" werden wahrscheinlich in einem XML-Stream häufig auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-679">Tokens equivalent to the strings "0", "1", "true", and "false" are likely to occur frequently in an XML stream.</span></span>  
  
 <span data-ttu-id="9380d-680">Nicht jedes Token in einer neuen Zeichenfolge zu konvertieren, können Sie erstellen eine <xref:System.Xml.NameTable?displayProperty=nameWithType> Objekt, das häufig auftretende Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-680">Instead of converting each token into a new string, you can create a <xref:System.Xml.NameTable?displayProperty=nameWithType> object to hold commonly occurring strings.</span></span> <span data-ttu-id="9380d-681">Die <xref:System.Xml.NameTable> -Objekt verbessert die Leistung, da es sich um gespeicherten Zeichenfolgen abruft, ohne den temporären Speicher zuzuordnen.</span><span class="sxs-lookup"><span data-stu-id="9380d-681">The <xref:System.Xml.NameTable> object improves performance, because it retrieves stored strings without allocating temporary memory.</span></span> <span data-ttu-id="9380d-682">Wenn Sie ein Token auftritt, verwenden Sie die <xref:System.Xml.NameTable.Get%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Methode, um das Token aus der Tabelle abzurufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-682">When you encounter a token, use the <xref:System.Xml.NameTable.Get%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to retrieve the token from the table.</span></span> <span data-ttu-id="9380d-683">Wenn das Token vorhanden ist, gibt die Methode die entsprechende Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-683">If the token exists, the method returns the corresponding string.</span></span> <span data-ttu-id="9380d-684">Wenn das Token nicht vorhanden ist, verwenden Sie die <xref:System.Xml.NameTable.Add%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> Methode, um das Token in die Tabelle einzufügen und die entsprechende Zeichenfolge abgerufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-684">If the token does not exist, use the <xref:System.Xml.NameTable.Add%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType> method to insert the token into the table and to get the corresponding string.</span></span>  
  
<a name="Ctor1_Example"></a>   
## <a name="example-1-using-string-assignment"></a><span data-ttu-id="9380d-685">Beispiel 1: Mit der Zeichenfolge-Zuweisung</span><span class="sxs-lookup"><span data-stu-id="9380d-685">Example 1: Using string assignment</span></span>  
 <span data-ttu-id="9380d-686">Das folgende Beispiel erstellt eine neue Zeichenfolge, indem Sie ihm ein Zeichenfolgenliteral zuweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-686">The following example creates a new string by assigning it a string literal.</span></span> <span data-ttu-id="9380d-687">Es erstellt eine zweite Zeichenfolge an, indem Sie den Wert der ersten Zeichenfolge zuweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-687">It creates a second string by assigning the value of the first string to it.</span></span> <span data-ttu-id="9380d-688">Hierbei handelt es sich um die beiden am häufigsten verwendeten Arten zum Instanziieren einer neuen <xref:System.String> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9380d-688">These are the two most common ways to instantiate a new <xref:System.String> object.</span></span>  
  
 [!code-cpp[System.String.ctor#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.ctor/cpp/assignment.cpp#1)]
 [!code-csharp[System.String.ctor#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.ctor/cs/ctor1.cs#1)]
 [!code-vb[System.String.ctor#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.ctor/vb/ctor1.vb#1)]  
  
<a name="Ctor2_Example"></a>   
## <a name="example-2-using-a-character-array"></a><span data-ttu-id="9380d-689">Beispiel 2: Verwenden ein Array von Zeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-689">Example 2: Using a character array</span></span>  
 <span data-ttu-id="9380d-690">Im folgende Beispiel wird veranschaulicht, wie zum Erstellen eines neuen <xref:System.String> Objekt aus einem Zeichenarray.</span><span class="sxs-lookup"><span data-stu-id="9380d-690">The following example demonstrates how to create a new <xref:System.String> object from a character array.</span></span>  
  
 [!code-cpp[stringexample1#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringexample1/CPP/source.cpp#1)]
 [!code-csharp[stringexample1#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringexample1/CS/source.cs#1)]
 [!code-vb[stringexample1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringexample1/VB/source.vb#1)]  
  
<a name="Ctor3_Example"></a>   
## <a name="example-3-using-a-portion-of-a-character-array-and-repeating-a-single-character"></a><span data-ttu-id="9380d-691">Beispiel 3: Verwenden einen Teil eines Arrays von Zeichen, und wiederholen ein einzelnes Zeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-691">Example 3: Using a portion of a character array and repeating a single character</span></span>  
 <span data-ttu-id="9380d-692">Im folgende Beispiel wird veranschaulicht, wie zum Erstellen eines neuen <xref:System.String> Objekt aus einem Abschnitt der ein Array von Zeichen und das Erstellen eines neuen <xref:System.String> -Objekt, das mehrere Vorkommen eines einzelnen Zeichens enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-692">The following example demonstrates how to create a new <xref:System.String> object from a portion of a character array, and how to create a new <xref:System.String> object that contains multiple occurrences of a single character.</span></span>  
  
 [!code-cpp[stringexample1#3](~/samples/snippets/cpp/VS_Snippets_CLR/stringexample1/CPP/source.cpp#3)]
 [!code-csharp[stringexample1#3](~/samples/snippets/csharp/VS_Snippets_CLR/stringexample1/CS/source.cs#3)]
 [!code-vb[stringexample1#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringexample1/VB/source.vb#3)]  
  
<a name="Ctor4_Example"></a>   
## <a name="example-4-using-a-pointer-to-a-character-array"></a><span data-ttu-id="9380d-693">Beispiel 4: Mithilfe eines Zeigers auf ein Array von Zeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-693">Example 4: Using a pointer to a character array</span></span>  
 <span data-ttu-id="9380d-694">Im folgende Beispiel wird veranschaulicht, wie zum Erstellen eines neuen <xref:System.String> Objekt von einem Zeiger auf ein Array von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-694">The following example demonstrates how to create a new <xref:System.String> object from a pointer to an array of characters.</span></span> <span data-ttu-id="9380d-695">C#-Beispiel muss kompiliert werden, mithilfe der `/unsafe` Compilerschalter.</span><span class="sxs-lookup"><span data-stu-id="9380d-695">The C# example must be compiled by using the `/unsafe` compiler switch.</span></span>  
  
 [!code-cpp[System.String.Ctor#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.ctor/cpp/char1_ctor.cpp#2)]
 [!code-csharp[System.String.Ctor#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.ctor/cs/ctor2.cs#2)]  
  
<a name="Ctor5_Example"></a>   
## <a name="example-5-instantiating-a-string-from-a-pointer-and-a-range-of-an-array"></a><span data-ttu-id="9380d-696">Beispiel 5: Instanziieren einer Zeichenfolge von einem Zeiger und einen Bereich eines Arrays</span><span class="sxs-lookup"><span data-stu-id="9380d-696">Example 5: Instantiating a string from a pointer and a range of an array</span></span>  
 <span data-ttu-id="9380d-697">Im folgende Beispiel werden die Elemente eines Arrays von Zeichen für einen Zeitraum oder ein Ausrufezeichen untersucht.</span><span class="sxs-lookup"><span data-stu-id="9380d-697">The following example examines the elements of a character array for either a period or an exclamation point.</span></span> <span data-ttu-id="9380d-698">Wenn eines gefunden wird, instanziiert er eine Zeichenfolge aus den Zeichen im Array, die das interpunktionssymbol vorangestellt sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-698">If one is found, it instantiates a string from the characters in the array that precede the punctuation symbol.</span></span> <span data-ttu-id="9380d-699">Wenn dies nicht der Fall ist, wird er instanziiert eine Zeichenfolge mit den gesamten Inhalt des Arrays.</span><span class="sxs-lookup"><span data-stu-id="9380d-699">If not, it instantiates a string with the entire contents of the array.</span></span> <span data-ttu-id="9380d-700">C#-Beispiel muss kompiliert werden, mithilfe der `/unsafe` Compilerschalter.</span><span class="sxs-lookup"><span data-stu-id="9380d-700">The C# example must be compiled using the `/unsafe` compiler switch.</span></span>  
  
 [!code-cpp[System.String.Ctor#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.ctor/cpp/char2_ctor.cpp#3)]
 [!code-csharp[System.String.Ctor#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.ctor/cs/char2_ctor.cs#3)]  
  
<a name="Ctor6_Example"></a>   
## <a name="example-6-instantiating-a-string-from-a-pointer-to-a-signed-byte-array"></a><span data-ttu-id="9380d-701">Beispiel 6: Instanziieren einer Zeichenfolge von einem Zeiger auf ein Array von Byte mit Vorzeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-701">Example 6: Instantiating a string from a pointer to a signed byte array</span></span>  
 <span data-ttu-id="9380d-702">Im folgende Beispiel wird veranschaulicht, wie Sie eine Instanz von erstellen können die <xref:System.String> -Klasse mit der <xref:System.String.%23ctor%28System.SByte%2A%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="9380d-702">The following example demonstrates how you can create an instance of the <xref:System.String> class with the <xref:System.String.%23ctor%28System.SByte%2A%29> constructor.</span></span>  
  
 [!code-cpp[stringexample1#2](~/samples/snippets/cpp/VS_Snippets_CLR/stringexample1/CPP/source.cpp#2)]
 [!code-csharp[stringexample1#2](~/samples/snippets/csharp/VS_Snippets_CLR/stringexample1/CS/source.cs#2)]  
  
<a name="Versions"></a>   
## <a name="version-information"></a><span data-ttu-id="9380d-703">Versionsinformationen</span><span class="sxs-lookup"><span data-stu-id="9380d-703">Version information</span></span>  
 <span data-ttu-id="9380d-704">.NET Framework</span><span class="sxs-lookup"><span data-stu-id="9380d-704">.NET Framework</span></span>  
 <span data-ttu-id="9380d-705">Alle Überladungen werden unterstützt: 4.5 "," 4 "," 3.5 "," 3.0 "," 2.0 "," 1.1 "," 1.0</span><span class="sxs-lookup"><span data-stu-id="9380d-705">All overloads are supported in: 4.5, 4, 3.5, 3.0, 2.0, 1.1, 1.0</span></span>  
  
 <span data-ttu-id="9380d-706">.NET Framework Client Profile</span><span class="sxs-lookup"><span data-stu-id="9380d-706">.NET Framework Client Profile</span></span>  
 <span data-ttu-id="9380d-707">Alle Überladungen werden unterstützt: 4 und 3.5 SP1</span><span class="sxs-lookup"><span data-stu-id="9380d-707">All overloads are supported in: 4, 3.5 SP1</span></span>  
  
 <span data-ttu-id="9380d-708">Portable Klassenbibliothek</span><span class="sxs-lookup"><span data-stu-id="9380d-708">Portable Class Library</span></span>  
 <span data-ttu-id="9380d-709">Alle Überladungen ohne eine <xref:System.SByte> `*` Parameter werden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="9380d-709">All overloads without an <xref:System.SByte>`*` parameter are supported</span></span>  
  
 <span data-ttu-id="9380d-710">.NET für Windows Store-Apps</span><span class="sxs-lookup"><span data-stu-id="9380d-710">.NET for Windows Store apps</span></span>  
 <span data-ttu-id="9380d-711">Alle Überladungen ohne eine <xref:System.SByte> `*` Parameter werden unterstützt: Windows 8</span><span class="sxs-lookup"><span data-stu-id="9380d-711">All overloads without an <xref:System.SByte>`*` parameter are supported in: Windows 8</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (char* value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.Char*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(char* value);" />
      <MemberSignature Language="F#" Value="new string : nativeptr&lt;char&gt; -&gt; string" Usage="new System.string value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-712">Ein Zeiger auf ein mit Null endendes Array von Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-712">A pointer to a null-terminated array of Unicode characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-713">Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem Wert, der durch einen angegebenen Zeiger auf ein Array von Unicode-Zeichen bestimmt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-713">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by a specified pointer to an array of Unicode characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9380d-714">Beispiele und eine umfassende von Nutzungsinformationen zu diesem und anderen `String` Konstruktorüberladungen, finden Sie unter den <xref:System.String.%23ctor%2A> Konstruktor Zusammenfassung.</span><span class="sxs-lookup"><span data-stu-id="9380d-714">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-715">Der aktuelle Prozess hat keinen Lesezugriff auf alle adressierten Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-715">The current process does not have read access to all the addressed characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-716">
            <paramref name="value" /> gibt ein Array an, das ein ungültiges Unicode-Zeichen enthält, oder <paramref name="value" /> gibt eine Adresse kleiner als 64000 an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-716">
              <paramref name="value" /> specifies an array that contains an invalid Unicode character, or <paramref name="value" /> specifies an address less than 64000.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9380d-717">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-717">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9380d-718">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-718">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (char[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Char())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(cli::array &lt;char&gt; ^ value);" />
      <MemberSignature Language="F#" Value="new string : char[] -&gt; string" Usage="new System.string value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-719">Ein Array von Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-719">An array of Unicode characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-720">Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem durch ein Array von Unicode-Zeichen angegebenen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-720">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by an array of Unicode characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9380d-721">Beispiele und eine umfassende von Nutzungsinformationen zu diesem und anderen `String` Konstruktorüberladungen, finden Sie unter den <xref:System.String.%23ctor%2A> Konstruktor Zusammenfassung.</span><span class="sxs-lookup"><span data-stu-id="9380d-721">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.ReadOnlySpan`1&lt;char&gt; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.ReadOnlySpan{System.Char})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As ReadOnlySpan(Of Char))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(ReadOnlySpan&lt;char&gt; value);" />
      <MemberSignature Language="F#" Value="new string : ReadOnlySpan&lt;char&gt; -&gt; string" Usage="new System.string value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (sbyte* value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int8* value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.SByte*)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(System::SByte* value);" />
      <MemberSignature Language="F#" Value="new string : nativeptr&lt;sbyte&gt; -&gt; string" Usage="new System.string value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.SByte*" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-722">Ein Zeiger auf ein mit NULL endendes Array von 8-Bit-Ganzzahlen mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-722">A pointer to a null-terminated array of 8-bit signed integers.</span>
          </span>
          <span data-ttu-id="9380d-723">Die Ganzzahlen werden mit der aktuellen Systemcodeseiten-Codierung interpretiert (d.h. der durch <see cref="P:System.Text.Encoding.Default" /> angegebenen Codierung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-723">The integers are interpreted using the current system code page encoding (that is, the encoding specified by <see cref="P:System.Text.Encoding.Default" />).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-724">Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem durch einen Zeiger auf ein Array von 8-Bit-Ganzzahlen mit Vorzeichen angegebenen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-724">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by a pointer to an array of 8-bit signed integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9380d-725">Beispiele und eine umfassende von Nutzungsinformationen zu diesem und anderen `String` Konstruktorüberladungen, finden Sie unter den <xref:System.String.%23ctor%2A> Konstruktor Zusammenfassung.</span><span class="sxs-lookup"><span data-stu-id="9380d-725">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-726">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-726">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-727">Eine neue Instanz von <see cref="T:System.String" /> konnte nicht mit <paramref name="value" /> initialisiert werden, wobei angenommen wurde, dass <paramref name="value" /> in ANSI codiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-727">A new instance of <see cref="T:System.String" /> could not be initialized using <paramref name="value" />, assuming <paramref name="value" /> is encoded in ANSI.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-728">Die Länge der neuen zu initialisierenden Zeichenfolge, die durch das NULL-Abschlusszeichen von <paramref name="value" /> bestimmt wird, ist zu groß für die Zuordnung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-728">The length of the new string to initialize, which is determined by the null termination character of <paramref name="value" />, is too large to allocate.</span>
          </span>
        </exception>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="9380d-729">
            <paramref name="value" /> gibt eine ungültige Adresse an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-729">
              <paramref name="value" /> specifies an invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9380d-730">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-730">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9380d-731">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-731">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (char c, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char c, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (c As Char, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(char c, int count);" />
      <MemberSignature Language="F#" Value="new string : char * int -&gt; string" Usage="new System.string (c, count)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="c" Type="System.Char" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="c">
          <span data-ttu-id="9380d-732">Ein Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-732">A Unicode character.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-733">Die Anzahl des Vorkommens von <c>c</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-733">The number of times <c>c</c> occurs.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-734">Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem Wert, der durch ein angegebenes so oft wie angegeben wiederholtes Unicode-Zeichen bestimmt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-734">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by a specified Unicode character repeated a specified number of times.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9380d-735">Beispiele und eine umfassende von Nutzungsinformationen zu diesem und anderen `String` Konstruktorüberladungen, finden Sie unter den <xref:System.String.%23ctor%2A> Konstruktor Zusammenfassung.</span><span class="sxs-lookup"><span data-stu-id="9380d-735">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-736">
            <paramref name="count" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-736">
              <paramref name="count" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (char* value, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char* value, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.Char*,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(char* value, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="new string : nativeptr&lt;char&gt; * int * int -&gt; string" Usage="new System.string (value, startIndex, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char*" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-737">Ein Zeiger auf ein Array von Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-737">A pointer to an array of Unicode characters.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-738">Die Anfangsposition in <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-738">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9380d-739">Die Anzahl der aus <c>value</c> zu verwendenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-739">The number of characters within <c>value</c> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-740">Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem Wert, der durch einen angegebenen Zeiger auf ein Array von Unicode-Zeichen, durch die Position des ersten Zeichens innerhalb dieses Arrays und durch eine Länge bestimmt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-740">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by a specified pointer to an array of Unicode characters, a starting character position within that array, and a length.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9380d-741">Beispiele und eine umfassende von Nutzungsinformationen zu diesem und anderen `String` Konstruktorüberladungen, finden Sie unter den <xref:System.String.%23ctor%2A> Konstruktor Zusammenfassung.</span><span class="sxs-lookup"><span data-stu-id="9380d-741">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-742">
            <paramref name="startIndex" /> oder <paramref name="length" /> ist kleiner als 0 (null), <paramref name="value" /> + <paramref name="startIndex" /> verursacht einen Zeigerüberlauf oder der aktuelle Prozess hat keinen Lesezugriff auf alle adressierten Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-742">
              <paramref name="startIndex" /> or <paramref name="length" /> is less than zero, <paramref name="value" /> + <paramref name="startIndex" /> cause a pointer overflow, or the current process does not have read access to all the addressed characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-743">
            <paramref name="value" /> gibt ein Array an, das ein ungültiges Unicode-Zeichen enthält, oder <paramref name="value" /> + <paramref name="startIndex" /> gibt eine Adresse kleiner als 64000 an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-743">
              <paramref name="value" /> specifies an array that contains an invalid Unicode character, or <paramref name="value" /> + <paramref name="startIndex" /> specifies an address less than 64000.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9380d-744">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-744">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9380d-745">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-745">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (char[] value, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char[] value, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Char(), startIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(cli::array &lt;char&gt; ^ value, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="new string : char[] * int * int -&gt; string" Usage="new System.string (value, startIndex, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-746">Ein Array von Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-746">An array of Unicode characters.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-747">Die Anfangsposition in <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-747">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9380d-748">Die Anzahl der aus <c>value</c> zu verwendenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-748">The number of characters within <c>value</c> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-749">Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem Wert, der durch ein Array von Unicode-Zeichen, die Position des ersten Zeichens innerhalb dieses Arrays und eine Länge bestimmt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-749">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by an array of Unicode characters, a starting character position within that array, and a length.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9380d-750">Beispiele und eine umfassende von Nutzungsinformationen zu diesem und anderen `String` Konstruktorüberladungen, finden Sie unter den <xref:System.String.%23ctor%2A> Konstruktor Zusammenfassung.</span><span class="sxs-lookup"><span data-stu-id="9380d-750">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-751">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-751">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-752">
            <paramref name="startIndex" /> oder <paramref name="length" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-752">
              <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span>
          </span>
          <span data-ttu-id="9380d-753">Oder:  Die Summe von <paramref name="startIndex" /> und <paramref name="length" /> ist größer als die Anzahl der Elemente in <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-753">-or-  The sum of <paramref name="startIndex" /> and <paramref name="length" /> is greater than the number of elements in <paramref name="value" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (sbyte* value, int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int8* value, int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.SByte*,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(System::SByte* value, int startIndex, int length);" />
      <MemberSignature Language="F#" Value="new string : nativeptr&lt;sbyte&gt; * int * int -&gt; string" Usage="new System.string (value, startIndex, length)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.SByte*" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-754">Ein Zeiger auf ein Array von 8-Bit-Ganzzahlen mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-754">A pointer to an array of 8-bit signed integers.</span>
          </span>
          <span data-ttu-id="9380d-755">Die Ganzzahlen werden mit der aktuellen Systemcodeseiten-Codierung interpretiert (d.h. der durch <see cref="P:System.Text.Encoding.Default" /> angegebenen Codierung).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-755">The integers are interpreted using the current system code page encoding (that is, the encoding specified by <see cref="P:System.Text.Encoding.Default" />).</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-756">Die Anfangsposition in <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-756">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9380d-757">Die Anzahl der aus <c>value</c> zu verwendenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-757">The number of characters within <c>value</c> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-758">Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem Wert, der durch einen angegebenen Zeiger auf ein Array von 8-Bit-Ganzzahlen mit Vorzeichen, die Startposition innerhalb dieses Arrays und die Länge angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-758">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by a specified pointer to an array of 8-bit signed integers, a starting position within that array, and a length.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9380d-759">Beispiele und eine umfassende von Nutzungsinformationen zu diesem und anderen `String` Konstruktorüberladungen, finden Sie unter den <xref:System.String.%23ctor%2A> Konstruktor Zusammenfassung.</span><span class="sxs-lookup"><span data-stu-id="9380d-759">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-760">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-760">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-761">
            <paramref name="startIndex" /> oder <paramref name="length" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-761">
              <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span>
          </span>
          <span data-ttu-id="9380d-762">Oder:  Die durch <paramref name="value" /> + <paramref name="startIndex" /> angegebene Adresse ist zu groß für die aktuelle Plattform, d.h., bei der Berechnung der Adresse ist ein Überlauf aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-762">-or-  The address specified by <paramref name="value" /> + <paramref name="startIndex" /> is too large for the current platform; that is, the address calculation overflowed.</span>
          </span>
          <span data-ttu-id="9380d-763">Oder:  Die Länge der zu initialisierenden neuen Zeichenfolge ist zu groß und kann daher nicht zugeordnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-763">-or-  The length of the new string to initialize is too large to allocate.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-764">Die durch <paramref name="value" /> + <paramref name="startIndex" /> angegebene Adresse ist kleiner als 64K.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-764">The address specified by <paramref name="value" /> + <paramref name="startIndex" /> is less than 64K.</span>
          </span>
          <span data-ttu-id="9380d-765">Oder:  Eine neue Instanz von <see cref="T:System.String" /> konnte nicht mit <paramref name="value" /> initialisiert werden, wobei angenommen wurde, dass <paramref name="value" /> in ANSI codiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-765">-or-  A new instance of <see cref="T:System.String" /> could not be initialized using <paramref name="value" />, assuming <paramref name="value" /> is encoded in ANSI.</span>
          </span>
        </exception>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="9380d-766">
            <paramref name="value" />, <paramref name="startIndex" /> und <paramref name="length" /> geben zusammen eine ungültige Adresse an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-766">
              <paramref name="value" />, <paramref name="startIndex" />, and <paramref name="length" /> collectively specify an invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9380d-767">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-767">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9380d-768">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-768">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public String (sbyte* value, int startIndex, int length, System.Text.Encoding enc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int8* value, int32 startIndex, int32 length, class System.Text.Encoding enc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.#ctor(System.SByte*,System.Int32,System.Int32,System.Text.Encoding)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; String(System::SByte* value, int startIndex, int length, System::Text::Encoding ^ enc);" />
      <MemberSignature Language="F#" Value="new string : nativeptr&lt;sbyte&gt; * int * int * System.Text.Encoding -&gt; string" Usage="new System.string (value, startIndex, length, enc)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="value" Type="System.SByte*" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="enc" Type="System.Text.Encoding" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-769">Ein Zeiger auf ein Array von 8-Bit-Ganzzahlen mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-769">A pointer to an array of 8-bit signed integers.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-770">Die Anfangsposition in <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-770">The starting position within <c>value</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9380d-771">Die Anzahl der aus <c>value</c> zu verwendenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-771">The number of characters within <c>value</c> to use.</span>
          </span>
        </param>
        <param name="enc">
          <span data-ttu-id="9380d-772">Ein Objekt, das angibt, wie das Array codiert ist, auf das <c>value</c> verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-772">An object that specifies how the array referenced by <c>value</c> is encoded.</span>
          </span>
          <span data-ttu-id="9380d-773">Wenn <c>enc</c> gleich <see langword="null" /> ist, wird von ANSI-Codierung ausgegangen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-773">If <c>enc</c> is <see langword="null" />, ANSI encoding is assumed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-774">Initialisiert eine neue Instanz der <see cref="T:System.String" />-Klasse mit dem Wert, der durch einen angegebenen Zeiger auf ein Array von 8-Bit-Ganzzahlen mit Vorzeichen, die Startposition innerhalb dieses Arrays, eine Länge und ein <see cref="T:System.Text.Encoding" />-Objekt angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-774">Initializes a new instance of the <see cref="T:System.String" /> class to the value indicated by a specified pointer to an array of 8-bit signed integers, a starting position within that array, a length, and an <see cref="T:System.Text.Encoding" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9380d-775">Beispiele und eine umfassende von Nutzungsinformationen zu diesem und anderen `String` Konstruktorüberladungen, finden Sie unter den <xref:System.String.%23ctor%2A> Konstruktor Zusammenfassung.</span><span class="sxs-lookup"><span data-stu-id="9380d-775">For examples and comprehensive usage information about this and other `String` constructor overloads, see the <xref:System.String.%23ctor%2A> constructor summary.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-776">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-776">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-777">
            <paramref name="startIndex" /> oder <paramref name="length" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-777">
              <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span>
          </span>
          <span data-ttu-id="9380d-778">Oder:  Die durch <paramref name="value" /> + <paramref name="startIndex" /> angegebene Adresse ist zu groß für die aktuelle Plattform, d.h., bei der Berechnung der Adresse ist ein Überlauf aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-778">-or-  The address specified by <paramref name="value" /> + <paramref name="startIndex" /> is too large for the current platform; that is, the address calculation overflowed.</span>
          </span>
          <span data-ttu-id="9380d-779">Oder:  Die Länge der zu initialisierenden neuen Zeichenfolge ist zu groß und kann daher nicht zugeordnet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-779">-or-  The length of the new string to initialize is too large to allocate.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-780">Die durch <paramref name="value" /> + <paramref name="startIndex" /> angegebene Adresse ist kleiner als 64K.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-780">The address specified by <paramref name="value" /> + <paramref name="startIndex" /> is less than 64K.</span>
          </span>
          <span data-ttu-id="9380d-781">Oder:  Eine neue Instanz von <see cref="T:System.String" /> konnte nicht mit <paramref name="value" /> initialisiert werden, wobei angenommen wurde, dass <paramref name="value" /> entsprechend der Angabe durch <paramref name="enc" /> codiert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-781">-or-  A new instance of <see cref="T:System.String" /> could not be initialized using <paramref name="value" />, assuming <paramref name="value" /> is encoded as specified by <paramref name="enc" />.</span>
          </span>
        </exception>
        <exception cref="T:System.AccessViolationException">
          <span data-ttu-id="9380d-782">
            <paramref name="value" />, <paramref name="startIndex" /> und <paramref name="length" /> geben zusammen eine ungültige Adresse an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-782">
              <paramref name="value" />, <paramref name="startIndex" />, and <paramref name="length" /> collectively specify an invalid address.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="9380d-783">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-783">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="9380d-784">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-784">This member cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Chars">
      <MemberSignature Language="C#" Value="public char this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char Chars(int32)" />
      <MemberSignature Language="DocId" Value="P:System.String.Chars(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Chars(index As Integer) As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char default[int] { char get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Chars(int) : char" Usage="System.string.Chars" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="9380d-785">Eine Position in der aktuellen Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-785">A position in the current string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-786">Ruft das <see cref="T:System.Char" />-Objekt an einer angegebenen Zeichenposition innerhalb des aktuellen <see cref="T:System.String" />-Objekts ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-786">Gets the <see cref="T:System.Char" /> object at a specified position in the current <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9380d-787">Das Objekt an der <paramref name="index" />-Position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-787">The object at position <paramref name="index" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-788">Die `index` Parameter ist nullbasiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-788">The `index` parameter is zero-based.</span></span>  
  
 <span data-ttu-id="9380d-789">Diese Eigenschaft gibt die <xref:System.Char> -Objekt an der Position, die gemäß der `index` Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-789">This property returns the <xref:System.Char> object at the position specified by the `index` parameter.</span></span> <span data-ttu-id="9380d-790">Allerdings kann ein Unicode-Zeichen dargestellt werden, von mehreren <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="9380d-790">However, a Unicode character might be represented by more than one <xref:System.Char>.</span></span> <span data-ttu-id="9380d-791">Verwenden der <xref:System.Globalization.StringInfo?displayProperty=nameWithType> -Klasse zum Arbeiten mit Unicode-Zeichen anstelle von <xref:System.Char> Objekte.</span><span class="sxs-lookup"><span data-stu-id="9380d-791">Use the <xref:System.Globalization.StringInfo?displayProperty=nameWithType> class to work with Unicode characters instead of <xref:System.Char> objects.</span></span> <span data-ttu-id="9380d-792">Weitere Informationen finden Sie im Abschnitt "Char-Objekten und Unicode-Zeichen" in der <xref:System.String> Übersicht über die Klasse.</span><span class="sxs-lookup"><span data-stu-id="9380d-792">For more information, see the "Char Objects and Unicode Characters" section in the <xref:System.String> class overview.</span></span>  
  
 <span data-ttu-id="9380d-793">In c# die <xref:System.String.Chars%2A> Eigenschaft ist ein Indexer.</span><span class="sxs-lookup"><span data-stu-id="9380d-793">In C#, the <xref:System.String.Chars%2A> property is an indexer.</span></span> <span data-ttu-id="9380d-794">In Visual Basic ist es die Standardeigenschaft der <xref:System.String> Klasse.</span><span class="sxs-lookup"><span data-stu-id="9380d-794">In Visual Basic, it is the default property of the <xref:System.String> class.</span></span> <span data-ttu-id="9380d-795">Jede <xref:System.Char> Objekt in der Zeichenfolge kann mit Code wie den folgenden zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-795">Each <xref:System.Char> object in the string can be accessed by using code such as the following.</span></span>  
  
 [!code-csharp[System.String.Chars#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.chars/cs/chars1.cs#1)]
 [!code-vb[System.String.Chars#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.chars/vb/chars1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-796">Im folgende Beispiel wird veranschaulicht, wie Sie mit diesem Indexer in einer Routine verwenden können, um eine Zeichenfolge zu überprüfen.</span><span class="sxs-lookup"><span data-stu-id="9380d-796">The following example demonstrates how you can use this indexer in a routine to validate a string.</span></span>  
  
 [!code-cpp[Uri_IsHexDigit#1](~/samples/snippets/cpp/VS_Snippets_CLR/Uri_IsHexDigit/CPP/uri_ishexdigit.cpp#1)]
 [!code-csharp[Uri_IsHexDigit#1](~/samples/snippets/csharp/VS_Snippets_CLR/Uri_IsHexDigit/CS/uri_ishexdigit.cs#1)]
 [!code-vb[Uri_IsHexDigit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Uri_IsHexDigit/VB/uri_ishexdigit.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="9380d-797">
            <paramref name="index" /> ist größer oder gleich der Länge dieses Objekts oder kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-797">
              <paramref name="index" /> is greater than or equal to the length of this object or less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.GetEnumerator" />
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="string.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-798">Gibt einen Verweis auf diese Instanz von <see cref="T:System.String" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-798">Returns a reference to this instance of <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-799">Diese Instanz von <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-799">This instance of <see cref="T:System.String" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-800">Der Rückgabewert ist nicht über eine unabhängige Kopie dieser Instanz; Es ist einfach eine andere Ansicht derselben Daten.</span><span class="sxs-lookup"><span data-stu-id="9380d-800">The return value is not an independent copy of this instance; it is simply another view of the same data.</span></span> <span data-ttu-id="9380d-801">Verwenden der <xref:System.String.Copy%2A> oder <xref:System.String.CopyTo%2A> Methode zum Erstellen eines separaten <xref:System.String> Objekt mit dem gleichen Wert wie diese Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-801">Use the <xref:System.String.Copy%2A> or <xref:System.String.CopyTo%2A> method to create a separate <xref:System.String> object with the same value as this instance.</span></span>  
  
 <span data-ttu-id="9380d-802">Da die <xref:System.String.Clone%2A> Methode gibt einfach die vorhandenen Zeichenfolgeninstanz zurück, ist es eigentlich nicht direkt aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-802">Because the <xref:System.String.Clone%2A> method simply returns the existing string instance, there is little reason to call it directly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Copy(System.String)" />
        <altmember cref="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Compare">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-803">Vergleicht zwei angegebene <see cref="T:System.String" />-Objekte und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-803">Compares two specified <see cref="T:System.String" /> objects and returns an integer that indicates their relative position in the sort order.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-804">Alle Überladungen der Methode <xref:System.String.Compare%2A> geben eine 32-Bit-Ganzzahl mit Vorzeichen zurück, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-804">All overloads of the <xref:System.String.Compare%2A> method return a 32-bit signed integer indicating the lexical relationship between the two comparands.</span></span>  
  
|<span data-ttu-id="9380d-805">Wert</span><span class="sxs-lookup"><span data-stu-id="9380d-805">Value</span></span>|<span data-ttu-id="9380d-806">Bedingung</span><span class="sxs-lookup"><span data-stu-id="9380d-806">Condition</span></span>|  
|-----------|---------------|  
|<span data-ttu-id="9380d-807">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="9380d-807">Less than zero</span></span>|<span data-ttu-id="9380d-808">Die erste Teilzeichenfolge steht die zweite Teilzeichenfolge in der Sortierreihenfolge vor.</span><span class="sxs-lookup"><span data-stu-id="9380d-808">The first substring precedes the second substring in the sort order.</span></span>|  
|<span data-ttu-id="9380d-809">Zero</span><span class="sxs-lookup"><span data-stu-id="9380d-809">Zero</span></span>|<span data-ttu-id="9380d-810">Die Teilzeichenfolgen treten in der Sortierreihenfolge an der gleichen Position auf, oder `length` ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-810">The substrings occur in the same position in the sort order, or `length` is zero.</span></span>|  
|<span data-ttu-id="9380d-811">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="9380d-811">Greater than zero</span></span>|<span data-ttu-id="9380d-812">Die erste Teilzeichenfolge folgt die zweite Teilzeichenfolge in der Sortierreihenfolge an.</span><span class="sxs-lookup"><span data-stu-id="9380d-812">The first substring follows the second substring in the sort order.</span></span>|  
  
> [!WARNING]
>  <span data-ttu-id="9380d-813">Wann immer möglich, sollten Sie eine Überladung von Aufrufen der <xref:System.String.Compare%2A> Methode, enthält eine <xref:System.StringComparison> Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-813">Whenever possible, you should call an overload of the <xref:System.String.Compare%2A> method that includes a <xref:System.StringComparison> parameter.</span></span> <span data-ttu-id="9380d-814">Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für die Verwendung von Zeichenfolgen in .NET Framework](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-814">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, string strB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, string strB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, strB As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, System::String ^ strB);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string -&gt; int" Usage="System.string.Compare (strA, strB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="strB" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strA">
          <span data-ttu-id="9380d-815">Die erste zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-815">The first string to compare.</span>
          </span>
        </param>
        <param name="strB">
          <span data-ttu-id="9380d-816">Die zweite zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-816">The second string to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-817">Vergleicht zwei angegebene <see cref="T:System.String" />-Objekte und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-817">Compares two specified <see cref="T:System.String" /> objects and returns an integer that indicates their relative position in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-818">Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-818">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="9380d-819">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description>
                  <paramref name="strA" /> steht in der Sortierreihenfolge vor <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description>
                  <paramref name="strA" /> tritt in der Sortierreihenfolge an der gleichen Position wie <paramref name="strB" /> auf.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description>
                  <paramref name="strA" /> steht in der Sortierreihenfolge hinter <paramref name="strB" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-819">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="strA" /> follows <paramref name="strB" /> in the sort order.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-820">Der Vergleich verwendet die aktuelle Kultur zum Abrufen von kulturspezifischen Informationen wie z. B. Groß-/ Kleinschreibregeln und die alphabetische Reihenfolge der einzelnen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-820">The comparison uses the current culture to obtain culture-specific information such as casing rules and the alphabetic order of individual characters.</span></span> <span data-ttu-id="9380d-821">Z. B. eine Kultur angeben, dass bestimmte Kombinationen von Zeichen als ein einzelnes Zeichen behandelt werden, oder auf eine bestimmte Weise Groß-und Kleinschreibung verglichen werden, oder, der die Sortierreihenfolge der ein Zeichen ist abhängig von der Zeichen, die vor oder Führen Sie es aus.</span><span class="sxs-lookup"><span data-stu-id="9380d-821">For example, a culture could specify that certain combinations of characters be treated as a single character, or uppercase and lowercase characters be compared in a particular way, or that the sorting order of a character depends on the characters that precede or follow it.</span></span>  
  
 <span data-ttu-id="9380d-822">Der Vergleich erfolgt mithilfe von Word-Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-822">The comparison is performed using word sort rules.</span></span> <span data-ttu-id="9380d-823">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-823">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="9380d-824">Beim Vergleichen von Zeichenfolgen, Sie sollten aufrufen, die <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> -Methode, die erfordert, dass Sie den Typ des Zeichenfolgenvergleichs explizit angeben, die die Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-824">When comparing strings, you should call the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> method, which requires that you explicitly specify the type of string comparison that the method uses.</span></span> <span data-ttu-id="9380d-825">Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für die Verwendung von Zeichenfolgen in .NET Framework](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-825">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="9380d-826">Einer oder beiden Vergleichswerte möglich `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-826">One or both comparands can be `null`.</span></span> <span data-ttu-id="9380d-827">Definitionsgemäß eine beliebige Zeichenfolge, einschließlich die leere Zeichenfolge (""), verglichen, die größer als ein null-Verweis; und zwei null-Verweis gleich miteinander vergleichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-827">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="9380d-828">Der Vergleich wird beendet, wenn eine Ungleichheit ermittelt wird, oder beide Zeichenfolgen verglichen wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-828">The comparison terminates when an inequality is discovered or both strings have been compared.</span></span> <span data-ttu-id="9380d-829">Allerdings wird, wenn die beiden Zeichenfolgen gleich dem Ende einer Zeichenfolge vergleichen und die andere Zeichenfolge enthält Zeichen, die verbleibenden, klicken Sie dann die Zeichenfolge mit den verbleibenden Zeichen größer angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-829">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, then the string with remaining characters is considered greater.</span></span> <span data-ttu-id="9380d-830">Der Rückgabewert ist das Ergebnis der letzten Vergleich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-830">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="9380d-831">Beim Vergleichen von Kultur-, Groß-/Kleinschreibung Regeln betroffen sind, können unerwartete Ergebnisse auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-831">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="9380d-832">Gibt z. B. im türkischen im folgenden Beispiel wird die falsche Ergebnisse da Dateisystem im türkischen nicht linguistische Schreibweise Regeln für den Buchstaben "i" in "File".</span><span class="sxs-lookup"><span data-stu-id="9380d-832">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#10)]
 [!code-csharp[System.String.Compare#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#10)]
 [!code-vb[System.String.Compare#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#10)]  
  
 <span data-ttu-id="9380d-833">Vergleichen Sie den Pfadnamen in "File" verwenden einen Ordinalvergleich durch.</span><span class="sxs-lookup"><span data-stu-id="9380d-833">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="9380d-834">Zu diesem Zweck der richtige Code lautet wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="9380d-834">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#11)]
 [!code-csharp[System.String.Compare#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#11)]
 [!code-vb[System.String.Compare#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#11)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-835">Im folgenden Beispiel wird die <xref:System.String.Compare%28System.String%2CSystem.String%29> Methode, um die drei Sätze von Zeichenfolgen zu vergleichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-835">The following example calls the <xref:System.String.Compare%28System.String%2CSystem.String%29> method to compare three sets of strings.</span></span>  
  
 [!code-cpp[System.String.Compare#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/compare02.cpp#18)]
 [!code-csharp[System.String.Compare#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare02.cs#18)]
 [!code-vb[System.String.Compare#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare02.vb#18)]  
  
 <span data-ttu-id="9380d-836">Im folgenden Beispiel die `ReverseStringComparer` Klasse veranschaulicht, wie Sie zwei Zeichenfolgen mit auswerten können die <xref:System.String.Compare%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-836">In the following example, the `ReverseStringComparer` class demonstrates how you can evaluate two strings with the <xref:System.String.Compare%2A> method.</span></span>  
  
 [!code-cpp[ArrayList#7](~/samples/snippets/cpp/VS_Snippets_CLR/ArrayList/CPP/ArrayListSample.cpp#7)]
 [!code-csharp[ArrayList#7](~/samples/snippets/csharp/VS_Snippets_CLR/ArrayList/CS/ArrayListSample.cs#7)]
 [!code-vb[ArrayList#7](~/samples/snippets/visualbasic/VS_Snippets_CLR/ArrayList/VB/ArrayListSample.vb#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-837">
            <para>Zeichensätze enthalten Ignorierbare Zeichen. Die <see cref="M:System.String.Compare(System.String,System.String)" /> Methode berücksichtigt keine solche Zeichen, wenn er einen kulturabhängigen Vergleich ausführt. Angenommen, der folgende Code ausgeführt wird, auf der [! Include[netfx40_short](~/Includes/netfx40-Short-MD.MD)] oder höher, ein kulturabhängigen Vergleich "Tier" mit "Ani-falsch" (mit einem bedingten Bindestrichs oder U + 00AD) gibt an, dass die beiden Zeichenfolgen entspricht.  [! Code-Csharp [System.String.Compare#21] (~/samples/snippets/csharp/VS_Snippets_CLR_System/System. String.Compare/cs/compare21.cs#21)] [! Vb-Code [System.String.Compare#21] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System. String.Compare/vb/compare21.vb#21)] zur Erkennung von Ignorierbare Zeichen in einen Zeichenfolgenvergleich, der Aufruf der <see cref="M:System.String.Compare(System.String,System.String,System.StringComparison)" /> -Methode, und geben entweder <see cref="F:System.Globalization.CompareOptions.Ordinal" /> oder <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> für den Parameter "ComparisonType".</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-837">
              <para>Character sets include ignorable characters. The <see cref="M:System.String.Compare(System.String,System.String)" /> method does not consider such characters when it performs a culture-sensitive comparison. For example, if the following code is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, a culture-sensitive comparison of "animal" with "ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent.  [!code-csharp[System.String.Compare#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare21.cs#21)] [!code-vb[System.String.Compare#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare21.vb#21)]  To recognize ignorable characters in a string comparison, call the <see cref="M:System.String.Compare(System.String,System.String,System.StringComparison)" /> method and supply a value of either <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the `comparisonType` parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, string strB, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, string strB, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, strB As String, ignoreCase As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, System::String ^ strB, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * bool -&gt; int" Usage="System.string.Compare (strA, strB, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="strB" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="strA">
          <span data-ttu-id="9380d-838">Die erste zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-838">The first string to compare.</span>
          </span>
        </param>
        <param name="strB">
          <span data-ttu-id="9380d-839">Die zweite zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-839">The second string to compare.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="9380d-840">
            <see langword="true" />, wenn die Groß-/Kleinschreibung beim Vergleich ignoriert werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-840">
              <see langword="true" /> to ignore case during the comparison; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-841">Vergleicht zwei angegebene <see cref="T:System.String" />-Objekte, wobei ihre Groß- und Kleinschreibung entweder ignoriert oder berücksichtigt wird, und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-841">Compares two specified <see cref="T:System.String" /> objects, ignoring or honoring their case, and returns an integer that indicates their relative position in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-842">Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-842">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="9380d-843">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description>
                  <paramref name="strA" /> steht in der Sortierreihenfolge vor <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description>
                  <paramref name="strA" /> tritt in der Sortierreihenfolge an der gleichen Position wie <paramref name="strB" /> auf.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description>
                  <paramref name="strA" /> steht in der Sortierreihenfolge hinter <paramref name="strB" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-843">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="strA" /> follows <paramref name="strB" /> in the sort order.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-844">Der Vergleich verwendet die aktuelle Kultur zum Abrufen von kulturspezifischen Informationen wie z. B. Groß-/ Kleinschreibregeln und die alphabetische Reihenfolge der einzelnen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-844">The comparison uses the current culture to obtain culture-specific information such as casing rules and the alphabetic order of individual characters.</span></span> <span data-ttu-id="9380d-845">Z. B. eine Kultur angeben, dass bestimmte Kombinationen von Zeichen als ein einzelnes Zeichen behandelt werden, oder auf eine bestimmte Weise Groß-und Kleinschreibung verglichen werden, oder, der die Sortierreihenfolge der ein Zeichen ist abhängig von der Zeichen, die vor oder Führen Sie es aus.</span><span class="sxs-lookup"><span data-stu-id="9380d-845">For example, a culture could specify that certain combinations of characters be treated as a single character, or uppercase and lowercase characters be compared in a particular way, or that the sorting order of a character depends on the characters that precede or follow it.</span></span>  
  
 <span data-ttu-id="9380d-846">Der Vergleich erfolgt mithilfe von Word-Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-846">The comparison is performed using word sort rules.</span></span> <span data-ttu-id="9380d-847">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-847">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="9380d-848">Beim Vergleichen von Zeichenfolgen, Sie sollten aufrufen, die <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> -Methode, die erfordert, dass Sie den Typ des Zeichenfolgenvergleichs explizit angeben, die die Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-848">When comparing strings, you should call the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> method, which requires that you explicitly specify the type of string comparison that the method uses.</span></span> <span data-ttu-id="9380d-849">Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für die Verwendung von Zeichenfolgen in .NET Framework](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-849">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="9380d-850">Einer oder beiden Vergleichswerte möglich `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-850">One or both comparands can be `null`.</span></span> <span data-ttu-id="9380d-851">Definitionsgemäß eine beliebige Zeichenfolge, einschließlich die leere Zeichenfolge (""), verglichen, die größer als ein null-Verweis; und zwei null-Verweis gleich miteinander vergleichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-851">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="9380d-852">Der Vergleich wird beendet, wenn eine Ungleichheit ermittelt wird, oder beide Zeichenfolgen verglichen wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-852">The comparison terminates when an inequality is discovered or both strings have been compared.</span></span> <span data-ttu-id="9380d-853">Allerdings wird, wenn die beiden Zeichenfolgen gleich dem Ende einer Zeichenfolge vergleichen und die andere Zeichenfolge enthält Zeichen, die verbleibenden, klicken Sie dann die Zeichenfolge mit den verbleibenden Zeichen größer angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-853">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, then the string with remaining characters is considered greater.</span></span> <span data-ttu-id="9380d-854">Der Rückgabewert ist das Ergebnis der letzten Vergleich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-854">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="9380d-855">Beim Vergleichen von Kultur-, Groß-/Kleinschreibung Regeln betroffen sind, können unerwartete Ergebnisse auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-855">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="9380d-856">Gibt z. B. im türkischen im folgenden Beispiel wird die falsche Ergebnisse da Dateisystem im türkischen nicht linguistische Schreibweise Regeln für den Buchstaben "i" in "File".</span><span class="sxs-lookup"><span data-stu-id="9380d-856">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#12)]
 [!code-csharp[System.String.Compare#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#12)]
 [!code-vb[System.String.Compare#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#12)]  
  
 <span data-ttu-id="9380d-857">Vergleichen Sie den Pfadnamen in "File" verwenden einen Ordinalvergleich durch.</span><span class="sxs-lookup"><span data-stu-id="9380d-857">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="9380d-858">Zu diesem Zweck der richtige Code lautet wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="9380d-858">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#13](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#13)]
 [!code-csharp[System.String.Compare#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#13)]
 [!code-vb[System.String.Compare#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#13)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-859">Das folgende Beispiel zeigt, dass die <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29> Methode ist äquivalent zur Verwendung <xref:System.String.ToUpper%2A> oder <xref:System.String.ToLower%2A> beim Vergleichen von Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-859">The following example demonstrates that the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Boolean%29> method is equivalent to using <xref:System.String.ToUpper%2A> or <xref:System.String.ToLower%2A> when comparing strings.</span></span>  
  
 [!code-cpp[System.String.Compare#18](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/compare02.cpp#18)]
 [!code-csharp[System.String.Compare#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare02.cs#18)]
 [!code-vb[System.String.Compare#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare02.vb#18)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-860">
            <para>Zeichensätze enthalten Ignorierbare Zeichen. Die <see cref="M:System.String.Compare(System.String,System.String,System.Boolean)" /> Methode berücksichtigt keine solche Zeichen, wenn er einen kulturabhängigen Vergleich ausführt. Angenommen, der folgende Code ausgeführt wird, auf der [! Include[netfx40_short](~/Includes/netfx40-Short-MD.MD)] oder später ein Vergleich Kultur, Unterscheidung nach Groß-/Kleinschreibung der "Tier" mit "Ani-falsch" (mit einem bedingten Bindestrichs oder U + 00AD) gibt an, dass die beiden Zeichenfolgen entspricht.  [! Code-Csharp [System.String.Compare#22] (~/samples/snippets/csharp/VS_Snippets_CLR_System/System. String.Compare/cs/compare22.cs#22)] [! Vb-Code [System.String.Compare#22] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System. String.Compare/vb/compare22.vb#22)] zur Erkennung von Ignorierbare Zeichen in einen Zeichenfolgenvergleich, der Aufruf der <see cref="M:System.String.Compare(System.String,System.String,System.StringComparison)" /> -Methode, und geben entweder <see cref="F:System.Globalization.CompareOptions.Ordinal" /> oder <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> für die <paramref name="comparisonType" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-860">
              <para>Character sets include ignorable characters. The <see cref="M:System.String.Compare(System.String,System.String,System.Boolean)" /> method does not consider such characters when it performs a culture-sensitive comparison. For example, if the following code is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, a culture-sensitive, case-insensitive comparison of "animal" with "Ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent.  [!code-csharp[System.String.Compare#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare22.cs#22)] [!code-vb[System.String.Compare#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare22.vb#22)]  To recognize ignorable characters in a string comparison, call the <see cref="M:System.String.Compare(System.String,System.String,System.StringComparison)" /> method and supply a value of either <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="comparisonType" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, string strB, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, string strB, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, strB As String, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, System::String ^ strB, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * StringComparison -&gt; int" Usage="System.string.Compare (strA, strB, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="strB" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="strA">
          <span data-ttu-id="9380d-861">Die erste zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-861">The first string to compare.</span>
          </span>
        </param>
        <param name="strB">
          <span data-ttu-id="9380d-862">Die zweite zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-862">The second string to compare.</span>
          </span>
        </param>
        <param name="comparisonType">
          <span data-ttu-id="9380d-863">Einer der Enumerationswerte, der die für den Vergleich zu verwendenden Regeln angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-863">One of the enumeration values that specifies the rules to use in the comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-864">Vergleicht zwei angegebene <see cref="T:System.String" />-Objekte gemäß den angegebenen Vergleichsregeln und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-864">Compares two specified <see cref="T:System.String" /> objects using the specified rules, and returns an integer that indicates their relative position in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-865">Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-865">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="9380d-866">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description>
                  <paramref name="strA" /> steht in der Sortierreihenfolge vor <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description>
                  <paramref name="strA" /> befindet sich in der Sortierreihenfolge an der gleichen Position wie <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description>
                  <paramref name="strA" /> steht in der Sortierreihenfolge hinter <paramref name="strB" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-866">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="strA" /> is in the same position as <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="strA" /> follows <paramref name="strB" /> in the sort order.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-867">Die `comparisonType` Parameter gibt an, ob der Vergleich die aktuelle oder der invariante Kultur verwenden soll, berücksichtigen oder ignorieren die Groß-/Kleinschreibung der verglichenen Elemente angibt, oder verwenden (kulturabhängige) oder ordinalen (kulturunabhängigen) Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-867">The `comparisonType` parameter indicates whether the comparison should use the current or invariant culture, honor or ignore the case of the comparands, or use word (culture-sensitive) or ordinal (culture-insensitive) sort rules.</span></span>  
  
 <span data-ttu-id="9380d-868">Einer oder beiden Vergleichswerte möglich `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-868">One or both comparands can be `null`.</span></span> <span data-ttu-id="9380d-869">Definitionsgemäß eine beliebige Zeichenfolge, einschließlich die leere Zeichenfolge (""), verglichen, die größer als ein null-Verweis; und zwei null-Verweis gleich miteinander vergleichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-869">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="9380d-870">Der Vergleich wird beendet, wenn eine Ungleichheit ermittelt wird, oder beide Zeichenfolgen verglichen wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-870">The comparison terminates when an inequality is discovered or both strings have been compared.</span></span> <span data-ttu-id="9380d-871">Allerdings wird, wenn die beiden Zeichenfolgen gleich dem Ende einer Zeichenfolge vergleichen und die andere Zeichenfolge über die verbleibenden Zeichen, die Zeichenfolge mit den verbleibenden Zeichen größer angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-871">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, the string with remaining characters is considered greater.</span></span> <span data-ttu-id="9380d-872">Der Rückgabewert ist das Ergebnis der letzten Vergleich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-872">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="9380d-873">Beim Vergleichen von Kultur-, Groß-/Kleinschreibung Regeln betroffen sind, können unerwartete Ergebnisse auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-873">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="9380d-874">Gibt z. B. im türkischen im folgenden Beispiel wird die falsche Ergebnisse da Dateisystem im türkischen nicht linguistische Schreibweise Regeln für den Buchstaben "i" in "File".</span><span class="sxs-lookup"><span data-stu-id="9380d-874">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#16](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#16)]
 [!code-csharp[System.String.Compare#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#16)]
 [!code-vb[System.String.Compare#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#16)]  
  
 <span data-ttu-id="9380d-875">Vergleichen Sie den Pfadnamen in "File" verwenden einen Ordinalvergleich durch.</span><span class="sxs-lookup"><span data-stu-id="9380d-875">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="9380d-876">Zu diesem Zweck der richtige Code lautet wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="9380d-876">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#17](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#17)]
 [!code-csharp[System.String.Compare#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#17)]
 [!code-vb[System.String.Compare#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#17)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-877">Im folgenden Beispiel werden drei Versionen von den Buchstaben "I".</span><span class="sxs-lookup"><span data-stu-id="9380d-877">The following example compares three versions of the letter "I".</span></span> <span data-ttu-id="9380d-878">Die Ergebnisse sind betroffen, durch die Auswahl der Kultur, ob die Groß-/Kleinschreibung ignoriert wird und gibt an, ob ein ordinaler Vergleich ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-878">The results are affected by the choice of culture, whether case is ignored, and whether an ordinal comparison is performed.</span></span>  
  
 [!code-cpp[System.String.CompareCmp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.CompareCmp/cpp/cmpcmp.cpp#1)]
 [!code-csharp[System.String.CompareCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.CompareCmp/cs/cmpcmp.cs#1)]
 [!code-vb[System.String.CompareCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.CompareCmp/vb/cmpcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-879">
            <paramref name="comparisonType" /> ist kein <see cref="T:System.StringComparison" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-879">
              <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="9380d-880">
            <see cref="T:System.StringComparison" /> wird nicht unterstützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-880">
              <see cref="T:System.StringComparison" /> is not supported.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-881">
            <para>Zeichensätze enthalten Ignorierbare Zeichen. Die <see cref="M:System.String.Compare(System.String,System.String,System.StringComparison)" /> Methode berücksichtigt keine solche Zeichen, wenn er einen kulturabhängigen Vergleich ausführt. Geben Sie den Wert so, dass um Ignorierbare Zeichen in den Vergleich zu erkennen, <see cref="F:System.StringComparison.Ordinal" /> oder <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> für die <paramref name="comparisonType" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-881">
              <para>Character sets include ignorable characters. The <see cref="M:System.String.Compare(System.String,System.String,System.StringComparison)" /> method does not consider such characters when it performs a culture-sensitive comparison. To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> for the <paramref name="comparisonType" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, string strB, bool ignoreCase, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, string strB, bool ignoreCase, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, strB As String, ignoreCase As Boolean, culture As CultureInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, System::String ^ strB, bool ignoreCase, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * bool * System.Globalization.CultureInfo -&gt; int" Usage="System.string.Compare (strA, strB, ignoreCase, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="strB" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="strA">
          <span data-ttu-id="9380d-882">Die erste zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-882">The first string to compare.</span>
          </span>
        </param>
        <param name="strB">
          <span data-ttu-id="9380d-883">Die zweite zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-883">The second string to compare.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="9380d-884">
            <see langword="true" />, wenn die Groß-/Kleinschreibung beim Vergleich ignoriert werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-884">
              <see langword="true" /> to ignore case during the comparison; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9380d-885">Ein Objekt, das kulturspezifische Vergleichsinformationen angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-885">An object that supplies culture-specific comparison information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-886">Vergleicht zwei angegebene <see cref="T:System.String" />-Objekte, wobei ihre Groß- und Kleinschreibung entweder ignoriert oder berücksichtigt und der Vergleich durch kulturspezifische Informationen beeinflusst wird, und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-886">Compares two specified <see cref="T:System.String" /> objects, ignoring or honoring their case, and using culture-specific information to influence the comparison, and returns an integer that indicates their relative position in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-887">Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-887">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="9380d-888">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description>
                  <paramref name="strA" /> steht in der Sortierreihenfolge vor <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description>
                  <paramref name="strA" /> tritt in der Sortierreihenfolge an der gleichen Position wie <paramref name="strB" /> auf.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description>
                  <paramref name="strA" /> steht in der Sortierreihenfolge hinter <paramref name="strB" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-888">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="strA" /> precedes <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="strA" /> follows <paramref name="strB" /> in the sort order.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-889">Der Vergleich wird die `culture` Parameter zum Abrufen von kulturspezifischen Informationen wie z. B. Groß-/ Kleinschreibregeln und die alphabetische Reihenfolge der einzelnen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-889">The comparison uses the `culture` parameter to obtain culture-specific information such as casing rules and the alphabetic order of individual characters.</span></span> <span data-ttu-id="9380d-890">Z. B. eine Kultur angeben, dass bestimmte Kombinationen von Zeichen als ein einzelnes Zeichen behandelt werden, oder auf eine bestimmte Weise Groß-und Kleinschreibung verglichen werden, oder, der die Sortierreihenfolge der ein Zeichen ist abhängig von der Zeichen, die vor oder Führen Sie es aus.</span><span class="sxs-lookup"><span data-stu-id="9380d-890">For example, a culture could specify that certain combinations of characters be treated as a single character, or uppercase and lowercase characters be compared in a particular way, or that the sorting order of a character depends on the characters that precede or follow it.</span></span>  
  
 <span data-ttu-id="9380d-891">Der Vergleich erfolgt mithilfe von Word-Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-891">The comparison is performed using word sort rules.</span></span> <span data-ttu-id="9380d-892">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-892">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9380d-893">Einer oder beiden Vergleichswerte möglich `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-893">One or both comparands can be `null`.</span></span> <span data-ttu-id="9380d-894">Definitionsgemäß eine beliebige Zeichenfolge, einschließlich die leere Zeichenfolge (""), verglichen, die größer als ein null-Verweis; und zwei null-Verweis gleich miteinander vergleichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-894">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="9380d-895">Der Vergleich wird beendet, wenn eine Ungleichheit ermittelt wird, oder beide Zeichenfolgen verglichen wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-895">The comparison terminates when an inequality is discovered or both strings have been compared.</span></span> <span data-ttu-id="9380d-896">Allerdings wird, wenn die beiden Zeichenfolgen gleich dem Ende einer Zeichenfolge vergleichen und die andere Zeichenfolge enthält Zeichen, die verbleibenden, klicken Sie dann die Zeichenfolge mit den verbleibenden Zeichen größer angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-896">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, then the string with remaining characters is considered greater.</span></span> <span data-ttu-id="9380d-897">Der Rückgabewert ist das Ergebnis der letzten Vergleich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-897">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="9380d-898">Beim Vergleichen von Kultur-, Groß-/Kleinschreibung Regeln betroffen sind, können unerwartete Ergebnisse auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-898">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="9380d-899">Gibt z. B. im türkischen im folgenden Beispiel wird die falsche Ergebnisse da Dateisystem im türkischen nicht linguistische Schreibweise Regeln für den Buchstaben "i" in "File".</span><span class="sxs-lookup"><span data-stu-id="9380d-899">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#14](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#14)]
 [!code-csharp[System.String.Compare#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#14)]
 [!code-vb[System.String.Compare#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#14)]  
  
 <span data-ttu-id="9380d-900">Vergleichen Sie den Pfadnamen in "File" verwenden einen Ordinalvergleich durch.</span><span class="sxs-lookup"><span data-stu-id="9380d-900">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="9380d-901">Zu diesem Zweck der richtige Code lautet wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="9380d-901">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#15](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#15)]
 [!code-csharp[System.String.Compare#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#15)]
 [!code-vb[System.String.Compare#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#15)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-902">Im folgende Beispiel wird veranschaulicht, wie die Kultur ein Vergleichs auswirken kann.</span><span class="sxs-lookup"><span data-stu-id="9380d-902">The following example demonstrates how culture can affect a comparison.</span></span> <span data-ttu-id="9380d-903">Tschechisch - Kultur der Tschechischen Republik, ist "ch" für ein einzelnes Zeichen, das größer als "d" ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-903">In Czech - Czech Republic culture, "ch" is a single character that is greater than "d".</span></span> <span data-ttu-id="9380d-904">Jedoch in Englisch - USA Kultur "ch" besteht aus zwei Zeichen, und "c" ist kleiner als "d".</span><span class="sxs-lookup"><span data-stu-id="9380d-904">However, in English - United States culture, "ch" consists of two characters, and "c" is less than "d".</span></span>  
  
 [!code-cpp[string.comp4#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.comp4/CPP/string.comp4.cpp#1)]
 [!code-csharp[string.comp4#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.comp4/CS/string.comp4.cs#1)]
 [!code-vb[string.comp4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.comp4/VB/string.comp4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-905">
            <paramref name="culture" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-905">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-906">
            <para>Zeichensätze enthalten Ignorierbare Zeichen. Die <see cref="M:System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" /> Methode berücksichtigt keine solche Zeichen, wenn er einen kulturabhängigen Vergleich ausführt. Angenommen, der folgende Code ausgeführt wird, auf der [! Include[netfx40_short](~/Includes/netfx40-Short-MD.MD)] oder höher, ein Groß-/Kleinschreibung Vergleich "Tier" mit "Ani-falsch" (mit einem bedingten Bindestrichs oder U + 00AD) die invariante Kultur angibt, dass die zwei Zeichenfolgen identisch sind.  [! Code-Csharp [System.String.Compare#23] (~/samples/snippets/csharp/VS_Snippets_CLR_System/System. String.Compare/cs/compare23.cs#23)] [! Vb-Code [System.String.Compare#23] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System. String.Compare/vb/compare23.vb#23)] zur Erkennung von Ignorierbare Zeichen in einen Zeichenfolgenvergleich, der Aufruf der <see cref="M:System.String.Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> -Methode, und geben entweder <see cref="F:System.Globalization.CompareOptions.Ordinal" /> oder <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> für die <paramref name="options" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-906">
              <para>Character sets include ignorable characters. The <see cref="M:System.String.Compare(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" /> method does not consider such characters when it performs a culture-sensitive comparison. For example, if the following code is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, a case-insensitive comparison of "animal" with "Ani-mal" (using a soft hyphen, or U+00AD) using the invariant culture indicates that the two strings are equivalent.  [!code-csharp[System.String.Compare#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/compare23.cs#23)] [!code-vb[System.String.Compare#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/compare23.vb#23)]  To recognize ignorable characters in a string comparison, call the <see cref="M:System.String.Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> method and supply a value of either <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
        <altmember cref="M:System.Globalization.CompareInfo.IsPrefix(System.String,System.String,System.Globalization.CompareOptions)" />
        <altmember cref="T:System.Boolean" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, string strB, System.Globalization.CultureInfo culture, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, string strB, class System.Globalization.CultureInfo culture, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, strB As String, culture As CultureInfo, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, System::String ^ strB, System::Globalization::CultureInfo ^ culture, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="static member Compare : string * string * System.Globalization.CultureInfo * System.Globalization.CompareOptions -&gt; int" Usage="System.string.Compare (strA, strB, culture, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="strB" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="strA">
          <span data-ttu-id="9380d-907">Die erste zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-907">The first string to compare.</span>
          </span>
        </param>
        <param name="strB">
          <span data-ttu-id="9380d-908">Die zweite zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-908">The second string to compare.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9380d-909">Die Kultur, die kulturspezifische Vergleichsinformationen liefert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-909">The culture that supplies culture-specific comparison information.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9380d-910">Die beim Ausführen des Vergleichs zu verwendenden Optionen (z. B. Ignorieren von Groß- und Kleinschreibung oder Symbolen).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-910">Options to use when performing the comparison (such as ignoring case or symbols).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-911">Vergleicht zwei angegebene <see cref="T:System.String" />-Objekte mit den festgelegten Vergleichsoptionen und kulturspezifischen Informationen, die den Vergleich beeinflussen, und gibt eine ganze Zahl zurück, die die Beziehung der beiden Zeichenfolgen zueinander in der Sortierreihenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-911">Compares two specified <see cref="T:System.String" /> objects using the specified comparison options and culture-specific information to influence the comparison, and returns an integer that indicates the relationship of the two strings to each other in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-912">Eine ganze 32-Bit-Zahl mit Vorzeichen, die die lexikalische Beziehung zwischen <paramref name="strA" /> und <paramref name="strB" />, wie in der folgenden Tabelle veranschaulicht, angibt.  <list type="table"><listheader><term> Wert  </term><description> Bedingung  </description></listheader><item><term> Kleiner als 0 (null)  </term><description><paramref name="strA" /> steht in der Sortierreihenfolge vor <paramref name="strB" />.  </description></item><item><term> 0 (null)  </term><description><paramref name="strA" /> tritt in der Sortierreihenfolge an der gleichen Position wie <paramref name="strB" /> auf.  </description></item><item><term> Größer als 0 (null)  </term><description><paramref name="strA" /> steht in der Sortierreihenfolge hinter <paramref name="strB" />. </description></item></list></span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-912">A 32-bit signed integer that indicates the lexical relationship between <paramref name="strA" /> and <paramref name="strB" />, as shown in the following table  <list type="table"><listheader><term> Value  </term><description> Condition  </description></listheader><item><term> Less than zero  </term><description><paramref name="strA" /> precedes <paramref name="strB" /> in the sort order.  </description></item><item><term> Zero  </term><description><paramref name="strA" /> occurs in the same position as <paramref name="strB" /> in the sort order.  </description></item><item><term> Greater than zero  </term><description><paramref name="strA" /> follows <paramref name="strB" /> in the sort order.  </description></item></list></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-913">Der Vergleich wird die `culture` Parameter zum Abrufen von kulturspezifischen Informationen, z. B. Groß-/ Kleinschreibregeln und die alphabetische Reihenfolge der einzelnen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-913">The comparison uses the `culture` parameter to obtain culture-specific information, such as casing rules and the alphabetical order of individual characters.</span></span> <span data-ttu-id="9380d-914">Z. B. eine bestimmte Kultur angeben, dass bestimmte Kombinationen von Zeichen als ein einzelnes Zeichen behandelt werden, auf eine bestimmte Weise Groß-und Kleinschreibung verglichen werden soll, oder, der die Sortierreihenfolge der ein Zeichen ist abhängig von der Zeichen, vorausgehen und folgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-914">For example, a particular culture could specify that certain combinations of characters be treated as a single character, that uppercase and lowercase characters be compared in a particular way, or that the sort order of a character depends on the characters that precede or follow it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9380d-915">Die <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29> Methode dient in erster Linie zur Verwendung in sortiert oder alphabetisch sortiert Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="9380d-915">The <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29> method is designed primarily for use in sorting or alphabetizing operations.</span></span> <span data-ttu-id="9380d-916">Es sollte nicht verwendet werden, wenn der primäre Zweck des Methodenaufrufs ist, um festzustellen, ob zwei Zeichenfolgen identisch sind (d. h. wenn der Zweck des Methodenaufrufs für einen Rückgabewert von 0 (null) testen).</span><span class="sxs-lookup"><span data-stu-id="9380d-916">It should not be used when the primary purpose of the method call is to determine whether two strings are equivalent (that is, when the purpose of the method call is to test for a return value of zero).</span></span> <span data-ttu-id="9380d-917">Um zu bestimmen, ob zwei Zeichenfolgen identisch sind, rufen Sie die <xref:System.String.Equals%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-917">To determine whether two strings are equivalent, call the <xref:System.String.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="9380d-918">Der Vergleich kann weiter angegeben werden, werden die `options` -Parameter, der eine oder mehrere Member besteht aus den <xref:System.Globalization.CompareOptions> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-918">The comparison can be further specified by the `options` parameter, which consists of one or more members of the <xref:System.Globalization.CompareOptions> enumeration.</span></span> <span data-ttu-id="9380d-919">Jedoch, da der Zweck dieser Methode wird einen kulturabhängige Zeichenfolgenvergleich, Durchführen der <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> und <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> Werte haben keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="9380d-919">However, because the purpose of this method is to conduct a culture-sensitive string comparison, the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> and <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> values have no effect.</span></span>  
  
 <span data-ttu-id="9380d-920">Einer oder beiden Vergleichswerte möglich `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-920">Either or both comparands can be `null`.</span></span> <span data-ttu-id="9380d-921">Definitionsgemäß eine beliebige Zeichenfolge, einschließlich <xref:System.String.Empty?displayProperty=nameWithType>, Vergleich größer als ein null-Verweis, und zwei null-Verweise sind gleich.</span><span class="sxs-lookup"><span data-stu-id="9380d-921">By definition, any string, including <xref:System.String.Empty?displayProperty=nameWithType>, compares greater than a null reference, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="9380d-922">Der Vergleich wird beendet, wenn eine Ungleichheit ermittelt wird, oder beide Zeichenfolgen verglichen wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-922">The comparison terminates when an inequality is discovered or both strings have been compared.</span></span> <span data-ttu-id="9380d-923">Allerdings wird, wenn die beiden Zeichenfolgen gleich dem Ende einer Zeichenfolge vergleichen und die andere Zeichenfolge über die verbleibenden Zeichen, die Zeichenfolge mit den verbleibenden Zeichen größer angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-923">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, the string with the remaining characters is considered greater.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-924">Das folgende Beispiel vergleicht zwei Zeichenfolgen auf drei verschiedene Arten: Verwenden von linguistischen Vergleich für die Kultur En-US Verwenden von linguistischen Vergleich von Groß-/Kleinschreibung für die Kultur En-US; und verwenden einen Ordinalvergleich durch.</span><span class="sxs-lookup"><span data-stu-id="9380d-924">The following example compares two strings in three different ways: using linguistic comparison for the en-US culture; using linguistic case-sensitive comparison for the en-US culture; and using an ordinal comparison.</span></span> <span data-ttu-id="9380d-925">Es wird veranschaulicht, wie die drei Methoden der Vergleich für drei unterschiedliche Ergebnisse liefern.</span><span class="sxs-lookup"><span data-stu-id="9380d-925">It illustrates how the three methods of comparison produce three different results.</span></span>  
  
 [!code-cpp[System.String.Compare#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/example.cpp#1)]
 [!code-csharp[System.String.Compare#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/Example.cs#1)]
 [!code-vb[System.String.Compare#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/Example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-926">
            <paramref name="options" /> ist kein <see cref="T:System.Globalization.CompareOptions" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-926">
              <paramref name="options" /> is not a <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-927">
            <paramref name="culture" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-927">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-928">
            <para>Zeichensätze enthalten Ignorierbare Zeichen, d. h. Zeichen, die beim Ausführen einer linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden. Die <see cref="M:System.String.Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> Methode berücksichtigt keine solche Zeichen, wenn er einen kulturabhängigen Vergleich ausführt. Geben Sie den Wert so, dass um Ignorierbare Zeichen in den Vergleich zu erkennen, <see cref="F:System.Globalization.CompareOptions.Ordinal" /> oder <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> für die <paramref name="options" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-928">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison. The <see cref="M:System.String.Compare(System.String,System.String,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> method does not consider such characters when it performs a culture-sensitive comparison. To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="Overload:System.String.CompareOrdinal" />
        <altmember cref="Overload:System.String.CompareTo" />
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, int indexA, string strB, int indexB, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, int32 indexA, string strB, int32 indexB, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, int indexA, System::String ^ strB, int indexB, int length);" />
      <MemberSignature Language="F#" Value="static member Compare : string * int * string * int * int -&gt; int" Usage="System.string.Compare (strA, indexA, strB, indexB, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="indexA" Type="System.Int32" />
        <Parameter Name="strB" Type="System.String" />
        <Parameter Name="indexB" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="strA">
          <span data-ttu-id="9380d-929">Die erste im Vergleich zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-929">The first string to use in the comparison.</span>
          </span>
        </param>
        <param name="indexA">
          <span data-ttu-id="9380d-930">Die Position der Teilzeichenfolge innerhalb von <c>strA</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-930">The position of the substring within <c>strA</c>.</span>
          </span>
        </param>
        <param name="strB">
          <span data-ttu-id="9380d-931">Die zweite im Vergleich zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-931">The second string to use in the comparison.</span>
          </span>
        </param>
        <param name="indexB">
          <span data-ttu-id="9380d-932">Die Position der Teilzeichenfolge innerhalb von <c>strB</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-932">The position of the substring within <c>strB</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9380d-933">Die maximale Anzahl der zu vergleichenden Zeichen der Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-933">The maximum number of characters in the substrings to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-934">Vergleicht zwei angegebene <see cref="T:System.String" />-Objekte und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-934">Compares substrings of two specified <see cref="T:System.String" /> objects and returns an integer that indicates their relative position in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-935">Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-935">A 32-bit signed integer indicating the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="9380d-936">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description> Die Teilzeichenfolge in <paramref name="strA" /> steht in der Sortierreihenfolge vor der Teilzeichenfolge in <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Die Teilzeichenfolgen befinden sich in der Sortierreihenfolge an derselben Position, oder <paramref name="length" /> ist 0 (null).  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Die Teilzeichenfolge in <paramref name="strA" /> steht in der Teilzeichenfolge hinter <paramref name="strB" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-936">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The substrings occur in the same position in the sort order, or <paramref name="length" /> is zero.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-937">Starten Sie die zu vergleichenden Teilzeichenfolgen im `strA` am `indexA` und `strB` am `indexB`.</span><span class="sxs-lookup"><span data-stu-id="9380d-937">The substrings to compare start in `strA` at `indexA` and in `strB` at `indexB`.</span></span> <span data-ttu-id="9380d-938">Beide `indexA` und `indexB` sind nullbasiert, d. h. das erste Zeichen in `strA` und `strB` an Position 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-938">Both `indexA` and `indexB` are zero-based; that is, the first character in `strA` and `strB` is at position zero.</span></span> <span data-ttu-id="9380d-939">Die Länge der ersten Teilzeichenfolge ist gleich der Länge der `strA` minus `indexA` plus eins.</span><span class="sxs-lookup"><span data-stu-id="9380d-939">The length of the first substring is equal to the length of `strA` minus `indexA` plus one.</span></span> <span data-ttu-id="9380d-940">Die Länge der zweiten Teilzeichenfolge ist gleich der Länge der `strB` minus `indexB` plus eins.</span><span class="sxs-lookup"><span data-stu-id="9380d-940">The length of the second substring is equal to the length of `strB` minus `indexB` plus one.</span></span>  
  
 <span data-ttu-id="9380d-941">Die Anzahl der zu vergleichenden Zeichen ist kleiner als die Länge der beiden Teilzeichenfolgen und `length`.</span><span class="sxs-lookup"><span data-stu-id="9380d-941">The number of characters to compare is the lesser of the lengths of the two substrings, and `length`.</span></span> <span data-ttu-id="9380d-942">Die `indexA`, `indexB`, und `length` Parameter dürfen nicht negativ sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-942">The `indexA`, `indexB`, and `length` parameters must be nonnegative.</span></span>  
  
 <span data-ttu-id="9380d-943">Der Vergleich verwendet die aktuelle Kultur zum Abrufen von kulturspezifischen Informationen wie z. B. Groß-/ Kleinschreibregeln und die alphabetische Reihenfolge der einzelnen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-943">The comparison uses the current culture to obtain culture-specific information such as casing rules and the alphabetic order of individual characters.</span></span> <span data-ttu-id="9380d-944">Z. B. eine Kultur angeben, dass bestimmte Kombinationen von Zeichen als ein einzelnes Zeichen behandelt werden, oder auf eine bestimmte Weise Groß-und Kleinschreibung verglichen werden, oder, der die Sortierreihenfolge der ein Zeichen ist abhängig von der Zeichen, die vor oder Führen Sie es aus.</span><span class="sxs-lookup"><span data-stu-id="9380d-944">For example, a culture could specify that certain combinations of characters be treated as a single character, or uppercase and lowercase characters be compared in a particular way, or that the sorting order of a character depends on the characters that precede or follow it.</span></span>  
  
 <span data-ttu-id="9380d-945">Der Vergleich erfolgt mithilfe von Word-Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-945">The comparison is performed using word sort rules.</span></span> <span data-ttu-id="9380d-946">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-946">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="9380d-947">Beim Vergleichen von Zeichenfolgen, Sie sollten aufrufen, die <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.StringComparison%29> -Methode, die erfordert, dass Sie den Typ des Zeichenfolgenvergleichs explizit angeben, die die Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-947">When comparing strings, you should call the <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.StringComparison%29> method, which requires that you explicitly specify the type of string comparison that the method uses.</span></span> <span data-ttu-id="9380d-948">Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für die Verwendung von Zeichenfolgen in .NET Framework](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-948">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="9380d-949">Einer oder beiden Vergleichswerte möglich `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-949">One or both comparands can be `null`.</span></span> <span data-ttu-id="9380d-950">Definitionsgemäß eine beliebige Zeichenfolge, einschließlich die leere Zeichenfolge (""), verglichen, die größer als ein null-Verweis; und zwei null-Verweis gleich miteinander vergleichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-950">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="9380d-951">Der Vergleich wird beendet, wenn Ungleichheit ermittelt wird, oder beide Teilzeichenfolgen verglichen wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-951">The comparison terminates when an inequality is discovered or both substrings have been compared.</span></span> <span data-ttu-id="9380d-952">Allerdings wird, wenn die beiden Zeichenfolgen gleich dem Ende einer Zeichenfolge vergleichen und die andere Zeichenfolge enthält Zeichen, die verbleibenden, klicken Sie dann die Zeichenfolge mit den verbleibenden Zeichen größer angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-952">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, then the string with remaining characters is considered greater.</span></span> <span data-ttu-id="9380d-953">Der Rückgabewert ist das Ergebnis der letzten Vergleich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-953">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="9380d-954">Beim Vergleichen von Kultur-, Groß-/Kleinschreibung Regeln betroffen sind, können unerwartete Ergebnisse auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-954">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="9380d-955">Gibt z. B. im türkischen im folgenden Beispiel wird die falsche Ergebnisse da Dateisystem im türkischen nicht linguistische Schreibweise Regeln für den Buchstaben "i" in "File".</span><span class="sxs-lookup"><span data-stu-id="9380d-955">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#2)]
 [!code-csharp[System.String.Compare#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#2)]
 [!code-vb[System.String.Compare#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#2)]  
  
 <span data-ttu-id="9380d-956">Vergleichen Sie den Pfadnamen in "File" verwenden einen Ordinalvergleich durch.</span><span class="sxs-lookup"><span data-stu-id="9380d-956">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="9380d-957">Zu diesem Zweck der richtige Code lautet wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="9380d-957">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#3)]
 [!code-csharp[System.String.Compare#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#3)]
 [!code-vb[System.String.Compare#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-958">Im folgende Beispiel werden zwei Teilzeichenfolgen verglichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-958">The following example compares two substrings.</span></span>  
  
 [!code-cpp[string.compare3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.compare3/CPP/comp3.cpp#1)]
 [!code-csharp[string.compare3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.compare3/CS/comp3.cs#1)]
 [!code-vb[string.compare3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.compare3/VB/comp3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-959">
            <paramref name="indexA" /> ist größer als <paramref name="strA" /><see cref="P:System.String.Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-959">
              <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.</span>
          </span>
          <span data-ttu-id="9380d-960">Oder:  <paramref name="indexB" /> ist größer als <paramref name="strB" />.<see cref="P:System.String.Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-960">-or-  <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.</span>
          </span>
          <span data-ttu-id="9380d-961">Oder:  <paramref name="indexA" />, <paramref name="indexB" /> oder <paramref name="length" /> ist negativ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-961">-or-  <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-962">Oder:  Entweder <paramref name="indexA" /> oder <paramref name="indexB" /> ist <see langword="null" />, und <paramref name="length" /> ist größer als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-962">-or-  Either <paramref name="indexA" /> or <paramref name="indexB" /> is <see langword="null" />, and <paramref name="length" /> is greater than zero.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-963">
            <para>Zeichensätze enthalten Ignorierbare Zeichen. Die <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" /> Methode berücksichtigt nicht diese Zeichen aus, wenn er einen linguistischen oder kulturabhängigen Vergleich ausführt. Rufen Sie so, dass um Ignorierbare Zeichen in den Vergleich zu erkennen, die <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" /> Methode, und geben Sie den Wert <see cref="F:System.Globalization.CompareOptions.Ordinal" /> oder <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> für die <paramref name="comparisonType" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-963">
              <para>Character sets include ignorable characters. The <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison. To recognize ignorable characters in your comparison, call the <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="comparisonType" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, int indexA, string strB, int indexB, int length, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, int32 indexA, string strB, int32 indexB, int32 length, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer, ignoreCase As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, int indexA, System::String ^ strB, int indexB, int length, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Compare : string * int * string * int * int * bool -&gt; int" Usage="System.string.Compare (strA, indexA, strB, indexB, length, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="indexA" Type="System.Int32" />
        <Parameter Name="strB" Type="System.String" />
        <Parameter Name="indexB" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="strA">
          <span data-ttu-id="9380d-964">Die erste im Vergleich zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-964">The first string to use in the comparison.</span>
          </span>
        </param>
        <param name="indexA">
          <span data-ttu-id="9380d-965">Die Position der Teilzeichenfolge innerhalb von <c>strA</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-965">The position of the substring within <c>strA</c>.</span>
          </span>
        </param>
        <param name="strB">
          <span data-ttu-id="9380d-966">Die zweite im Vergleich zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-966">The second string to use in the comparison.</span>
          </span>
        </param>
        <param name="indexB">
          <span data-ttu-id="9380d-967">Die Position der Teilzeichenfolge innerhalb von <c>strB</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-967">The position of the substring within <c>strB</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9380d-968">Die maximale Anzahl der zu vergleichenden Zeichen der Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-968">The maximum number of characters in the substrings to compare.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="9380d-969">
            <see langword="true" />, wenn die Groß-/Kleinschreibung beim Vergleich ignoriert werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-969">
              <see langword="true" /> to ignore case during the comparison; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-970">Vergleicht Teilzeichenfolgen von zwei angegebenen <see cref="T:System.String" />-Objekten, wobei ihre Groß- und Kleinschreibung entweder ignoriert oder berücksichtigt wird, und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-970">Compares substrings of two specified <see cref="T:System.String" /> objects, ignoring or honoring their case, and returns an integer that indicates their relative position in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-971">Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-971">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="9380d-972">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description> Die Teilzeichenfolge in <paramref name="strA" /> steht in der Sortierreihenfolge vor der Teilzeichenfolge in <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Die Teilzeichenfolgen befinden sich in der Sortierreihenfolge an derselben Position, oder <paramref name="length" /> ist 0 (null).  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Die Teilzeichenfolge in <paramref name="strA" /> steht in der Teilzeichenfolge hinter <paramref name="strB" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-972">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The substrings occur in the same position in the sort order, or <paramref name="length" /> is zero.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-973">Starten Sie die zu vergleichenden Teilzeichenfolgen im `strA` am `indexA`, und klicken Sie in `strB` am `indexB`.</span><span class="sxs-lookup"><span data-stu-id="9380d-973">The substrings to compare start in `strA` at `indexA`, and in `strB` at `indexB`.</span></span> <span data-ttu-id="9380d-974">Beide `indexA` und `indexB` sind nullbasiert, d. h. das erste Zeichen in `strA` und `strB` an Position 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-974">Both `indexA` and `indexB` are zero-based; that is, the first character in `strA` and `strB` is at position zero.</span></span> <span data-ttu-id="9380d-975">Die Länge der ersten Teilzeichenfolge ist gleich der Länge der `strA` minus `indexA` plus eins.</span><span class="sxs-lookup"><span data-stu-id="9380d-975">The length of the first substring is equal to the length of `strA` minus `indexA` plus one.</span></span> <span data-ttu-id="9380d-976">Die Länge der zweiten Teilzeichenfolge ist gleich der Länge der `strB` minus `indexB` plus eins.</span><span class="sxs-lookup"><span data-stu-id="9380d-976">The length of the second substring is equal to the length of `strB` minus `indexB` plus one.</span></span>  
  
 <span data-ttu-id="9380d-977">Die Anzahl der zu vergleichenden Zeichen ist kleiner als die Länge der beiden Teilzeichenfolgen und `length`.</span><span class="sxs-lookup"><span data-stu-id="9380d-977">The number of characters to compare is the lesser of the lengths of the two substrings, and `length`.</span></span> <span data-ttu-id="9380d-978">Die `indexA`, `indexB`, und `length` Parameter dürfen nicht negativ sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-978">The `indexA`, `indexB`, and `length` parameters must be nonnegative.</span></span>  
  
 <span data-ttu-id="9380d-979">Der Vergleich verwendet die aktuelle Kultur zum Abrufen von kulturspezifischen Informationen wie z. B. Groß-/ Kleinschreibregeln und die alphabetische Reihenfolge der einzelnen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-979">The comparison uses the current culture to obtain culture-specific information such as casing rules and the alphabetic order of individual characters.</span></span> <span data-ttu-id="9380d-980">Z. B. eine Kultur angeben, dass bestimmte Kombinationen von Zeichen als ein einzelnes Zeichen behandelt werden, oder auf eine bestimmte Weise Groß-und Kleinschreibung verglichen werden, oder, der die Sortierreihenfolge der ein Zeichen ist abhängig von der Zeichen, die vor oder Führen Sie es aus.</span><span class="sxs-lookup"><span data-stu-id="9380d-980">For example, a culture could specify that certain combinations of characters be treated as a single character, or uppercase and lowercase characters be compared in a particular way, or that the sorting order of a character depends on the characters that precede or follow it.</span></span>  
  
 <span data-ttu-id="9380d-981">Der Vergleich erfolgt mithilfe von Word-Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-981">The comparison is performed using word sort rules.</span></span> <span data-ttu-id="9380d-982">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-982">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="9380d-983">Beim Vergleichen von Zeichenfolgen, Sie sollten aufrufen, die <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.StringComparison%29> -Methode, die erfordert, dass Sie den Typ des Zeichenfolgenvergleichs explizit angeben, die die Methode verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-983">When comparing strings, you should call the <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.StringComparison%29> method, which requires that you explicitly specify the type of string comparison that the method uses.</span></span> <span data-ttu-id="9380d-984">Weitere Informationen finden Sie unter [Empfohlene Vorgehensweisen für die Verwendung von Zeichenfolgen in .NET Framework](~/docs/standard/base-types/best-practices-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-984">For more information, see [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md).</span></span>  
  
 <span data-ttu-id="9380d-985">Einer oder beiden Vergleichswerte möglich `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-985">One or both comparands can be `null`.</span></span> <span data-ttu-id="9380d-986">Definitionsgemäß eine beliebige Zeichenfolge, einschließlich die leere Zeichenfolge (""), verglichen, die größer als ein null-Verweis; und zwei null-Verweis gleich miteinander vergleichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-986">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="9380d-987">Der Vergleich wird beendet, wenn Ungleichheit ermittelt wird, oder beide Teilzeichenfolgen verglichen wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-987">The comparison terminates when an inequality is discovered or both substrings have been compared.</span></span> <span data-ttu-id="9380d-988">Allerdings wird, wenn die beiden Zeichenfolgen gleich dem Ende einer Zeichenfolge vergleichen und die andere Zeichenfolge enthält Zeichen, die verbleibenden, klicken Sie dann die Zeichenfolge mit den verbleibenden Zeichen größer angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-988">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, then the string with remaining characters is considered greater.</span></span> <span data-ttu-id="9380d-989">Der Rückgabewert ist das Ergebnis der letzten Vergleich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-989">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="9380d-990">Beim Vergleichen von Kultur-, Groß-/Kleinschreibung Regeln betroffen sind, können unerwartete Ergebnisse auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-990">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="9380d-991">Gibt z. B. im türkischen im folgenden Beispiel wird die falsche Ergebnisse da Dateisystem im türkischen nicht linguistische Schreibweise Regeln für den Buchstaben "i" in "File".</span><span class="sxs-lookup"><span data-stu-id="9380d-991">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#4)]
 [!code-csharp[System.String.Compare#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#4)]
 [!code-vb[System.String.Compare#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#4)]  
  
 <span data-ttu-id="9380d-992">Der Pfadname muss in einer invariante Weise verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9380d-992">The path name needs to be compared in an invariant manner.</span></span> <span data-ttu-id="9380d-993">Zu diesem Zweck der richtige Code lautet wie folgt aus.</span><span class="sxs-lookup"><span data-stu-id="9380d-993">The correct code to do this is as follows.</span></span>  
  
 [!code-cpp[System.String.Compare#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#5)]
 [!code-csharp[System.String.Compare#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#5)]
 [!code-vb[System.String.Compare#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-994">Im folgende Beispiel führt zwei Vergleiche der beiden Teilzeichenfolgen, die unterscheiden sich nur bei.</span><span class="sxs-lookup"><span data-stu-id="9380d-994">The following example performs two comparisons of two substrings that only differ in case.</span></span> <span data-ttu-id="9380d-995">Der erste Vergleich ignoriert die Groß-/Kleinschreibung, und die zweite Vergleich berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-995">The first comparison ignores case and the second comparison considers case.</span></span>  
  
 [!code-cpp[string.compare4#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.compare4/CPP/comp4.cpp#1)]
 [!code-csharp[string.compare4#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.compare4/CS/comp4.cs#1)]
 [!code-vb[string.compare4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.compare4/VB/comp4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-996">
            <paramref name="indexA" /> ist größer als <paramref name="strA" /><see cref="P:System.String.Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-996">
              <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.</span>
          </span>
          <span data-ttu-id="9380d-997">Oder:  <paramref name="indexB" /> ist größer als <paramref name="strB" />.<see cref="P:System.String.Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-997">-or-  <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.</span>
          </span>
          <span data-ttu-id="9380d-998">Oder:  <paramref name="indexA" />, <paramref name="indexB" /> oder <paramref name="length" /> ist negativ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-998">-or-  <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-999">Oder:  Entweder <paramref name="indexA" /> oder <paramref name="indexB" /> ist <see langword="null" />, und <paramref name="length" /> ist größer als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-999">-or-  Either <paramref name="indexA" /> or <paramref name="indexB" /> is <see langword="null" />, and <paramref name="length" /> is greater than zero.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1000">
            <para>Zeichensätze enthalten Ignorierbare Zeichen. Die <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" /> Methode berücksichtigt nicht diese Zeichen aus, wenn er einen linguistischen oder kulturabhängigen Vergleich ausführt. Rufen Sie so, dass um Ignorierbare Zeichen in den Vergleich zu erkennen, die <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" /> Methode, und geben Sie den Wert <see cref="F:System.Globalization.CompareOptions.Ordinal" /> oder <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> für die <paramref name="comparisonType" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1000">
              <para>Character sets include ignorable characters. The <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison. To recognize ignorable characters in your comparison, call the <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="comparisonType" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, int indexA, string strB, int indexB, int length, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, int32 indexA, string strB, int32 indexB, int32 length, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, int indexA, System::String ^ strB, int indexB, int length, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Compare : string * int * string * int * int * StringComparison -&gt; int" Usage="System.string.Compare (strA, indexA, strB, indexB, length, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="indexA" Type="System.Int32" />
        <Parameter Name="strB" Type="System.String" />
        <Parameter Name="indexB" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="strA">
          <span data-ttu-id="9380d-1001">Die erste im Vergleich zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1001">The first string to use in the comparison.</span>
          </span>
        </param>
        <param name="indexA">
          <span data-ttu-id="9380d-1002">Die Position der Teilzeichenfolge innerhalb von <c>strA</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1002">The position of the substring within <c>strA</c>.</span>
          </span>
        </param>
        <param name="strB">
          <span data-ttu-id="9380d-1003">Die zweite im Vergleich zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1003">The second string to use in the comparison.</span>
          </span>
        </param>
        <param name="indexB">
          <span data-ttu-id="9380d-1004">Die Position der Teilzeichenfolge innerhalb von <c>strB</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1004">The position of the substring within <c>strB</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9380d-1005">Die maximale Anzahl der zu vergleichenden Zeichen der Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1005">The maximum number of characters in the substrings to compare.</span>
          </span>
        </param>
        <param name="comparisonType">
          <span data-ttu-id="9380d-1006">Einer der Enumerationswerte, der die für den Vergleich zu verwendenden Regeln angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1006">One of the enumeration values that specifies the rules to use in the comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1007">Vergleicht Teilzeichenfolgen von zwei angegebenen <see cref="T:System.String" />-Objekten gemäß den angegebenen Vergleichsregeln und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1007">Compares substrings of two specified <see cref="T:System.String" /> objects using the specified rules, and returns an integer that indicates their relative position in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1008">Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1008">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="9380d-1009">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description> Die Teilzeichenfolge in <paramref name="strA" /> steht in der Sortierreihenfolge vor der Teilzeichenfolge in <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Die Teilzeichenfolgen befinden sich in der Sortierreihenfolge an der gleichen Position, oder der <paramref name="length" />-Parameter ist 0 (null).  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Die Teilzeichenfolge in <paramref name="strA" /> steht in der Sortierreihenfolge nach der Teilzeichenfolge in <paramref name="strB" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1009">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The substrings occur in the same position in the sort order, or the <paramref name="length" /> parameter is zero.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The substring in <paramref name="strA" /> follllows the substring in <paramref name="strB" /> in the sort order.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1010">Starten Sie die zu vergleichenden Teilzeichenfolgen im `strA` am `indexA` und `strB` am `indexB`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1010">The substrings to compare start in `strA` at `indexA` and in `strB` at `indexB`.</span></span> <span data-ttu-id="9380d-1011">Beide `indexA` und `indexB` sind nullbasiert, d. h. das erste Zeichen in `strA` und `strB` an position 0 (null) ist, nicht an der position einer.</span><span class="sxs-lookup"><span data-stu-id="9380d-1011">Both `indexA` and `indexB` are zero-based; that is, the first character in `strA` and `strB` is at position zero, not position one.</span></span> <span data-ttu-id="9380d-1012">Die Länge der ersten Teilzeichenfolge ist gleich der Länge der `strA` minus `indexA` plus eins.</span><span class="sxs-lookup"><span data-stu-id="9380d-1012">The length of the first substring is equal to the length of `strA` minus `indexA` plus one.</span></span> <span data-ttu-id="9380d-1013">Die Länge der zweiten Teilzeichenfolge ist gleich der Länge der `strB` minus `indexB` plus eins.</span><span class="sxs-lookup"><span data-stu-id="9380d-1013">The length of the second substring is equal to the length of `strB` minus `indexB` plus one.</span></span>  
  
 <span data-ttu-id="9380d-1014">Die Anzahl der zu vergleichenden Zeichen ist kleiner als die Länge der beiden Teilzeichenfolgen und `length`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1014">The number of characters to compare is the lesser of the lengths of the two substrings, and `length`.</span></span> <span data-ttu-id="9380d-1015">Die `indexA`, `indexB`, und `length` Parameter dürfen nicht negativ sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-1015">The `indexA`, `indexB`, and `length` parameters must be nonnegative.</span></span>  
  
 <span data-ttu-id="9380d-1016">Die `comparisonType` Parameter gibt an, ob der Vergleich die aktuelle oder der invariante Kultur verwenden soll, berücksichtigen oder ignorieren die Groß-/Kleinschreibung der verglichenen Elemente angibt, oder verwenden (kulturabhängige) oder ordinalen (kulturunabhängigen) Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-1016">The `comparisonType` parameter indicates whether the comparison should use the current or invariant culture, honor or ignore the case of the comparands, or use word (culture-sensitive) or ordinal (culture-insensitive) sort rules.</span></span>  
  
 <span data-ttu-id="9380d-1017">Einer oder beiden Vergleichswerte möglich `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1017">One or both comparands can be `null`.</span></span> <span data-ttu-id="9380d-1018">Definitionsgemäß eine beliebige Zeichenfolge, einschließlich die leere Zeichenfolge (""), verglichen, die größer als ein null-Verweis; und zwei null-Verweis gleich miteinander vergleichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1018">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="9380d-1019">Der Vergleich wird beendet, wenn Ungleichheit ermittelt wird, oder beide Teilzeichenfolgen verglichen wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1019">The comparison terminates when an inequality is discovered or both substrings have been compared.</span></span> <span data-ttu-id="9380d-1020">Allerdings wird, wenn die beiden Zeichenfolgen gleich dem Ende einer Zeichenfolge vergleichen und die andere Zeichenfolge über die verbleibenden Zeichen, die Zeichenfolge mit den verbleibenden Zeichen größer angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1020">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, the string with remaining characters is considered greater.</span></span> <span data-ttu-id="9380d-1021">Der Rückgabewert ist das Ergebnis der letzten Vergleich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1021">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="9380d-1022">Beim Vergleichen von Kultur-, Groß-/Kleinschreibung Regeln betroffen sind, können unerwartete Ergebnisse auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1022">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="9380d-1023">Gibt z. B. im türkischen im folgenden Beispiel wird die falsche Ergebnisse da Dateisystem im türkischen nicht linguistische Schreibweise Regeln für den Buchstaben "i" in "File".</span><span class="sxs-lookup"><span data-stu-id="9380d-1023">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#8)]
 [!code-csharp[System.String.Compare#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#8)]
 [!code-vb[System.String.Compare#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#8)]  
  
 <span data-ttu-id="9380d-1024">Vergleichen Sie den Pfadnamen in "File" verwenden einen Ordinalvergleich durch.</span><span class="sxs-lookup"><span data-stu-id="9380d-1024">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="9380d-1025">Zu diesem Zweck der richtige Code lautet wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="9380d-1025">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#9)]
 [!code-csharp[System.String.Compare#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#9)]
 [!code-vb[System.String.Compare#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#9)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1026">Im folgende Beispiel werden zwei Teilzeichenfolgen verglichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1026">The following example compares two substrings.</span></span>  
  
 [!code-cpp[string.compare3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.compare3/CPP/comp3.cpp#1)]
 [!code-csharp[string.compare3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.compare3/CS/comp3.cs#1)]
 [!code-vb[string.compare3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.compare3/VB/comp3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1027">
            <paramref name="indexA" /> ist größer als <paramref name="strA" /><see cref="P:System.String.Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1027">
              <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.</span>
          </span>
          <span data-ttu-id="9380d-1028">Oder:  <paramref name="indexB" /> ist größer als <paramref name="strB" />.<see cref="P:System.String.Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1028">-or-  <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.</span>
          </span>
          <span data-ttu-id="9380d-1029">Oder:  <paramref name="indexA" />, <paramref name="indexB" /> oder <paramref name="length" /> ist negativ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1029">-or-  <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-1030">Oder:  Entweder <paramref name="indexA" /> oder <paramref name="indexB" /> ist <see langword="null" />, und <paramref name="length" /> ist größer als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1030">-or-  Either <paramref name="indexA" /> or <paramref name="indexB" /> is <see langword="null" />, and <paramref name="length" /> is greater than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-1031">
            <paramref name="comparisonType" /> ist kein <see cref="T:System.StringComparison" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1031">
              <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1032">
            <para>Zeichensätze enthalten Ignorierbare Zeichen. Die <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" /> Methode berücksichtigt nicht diese Zeichen aus, wenn er einen linguistischen oder kulturabhängigen Vergleich ausführt. Geben Sie den Wert so, dass um Ignorierbare Zeichen in den Vergleich zu erkennen, <see cref="F:System.StringComparison.Ordinal" /> oder <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> für die <paramref name="comparisonType" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1032">
              <para>Character sets include ignorable characters. The <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.StringComparison)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison. To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> for the <paramref name="comparisonType" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, int indexA, string strB, int indexB, int length, bool ignoreCase, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, int32 indexA, string strB, int32 indexB, int32 length, bool ignoreCase, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer, ignoreCase As Boolean, culture As CultureInfo) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, int indexA, System::String ^ strB, int indexB, int length, bool ignoreCase, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="static member Compare : string * int * string * int * int * bool * System.Globalization.CultureInfo -&gt; int" Usage="System.string.Compare (strA, indexA, strB, indexB, length, ignoreCase, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="indexA" Type="System.Int32" />
        <Parameter Name="strB" Type="System.String" />
        <Parameter Name="indexB" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="strA">
          <span data-ttu-id="9380d-1033">Die erste im Vergleich zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1033">The first string to use in the comparison.</span>
          </span>
        </param>
        <param name="indexA">
          <span data-ttu-id="9380d-1034">Die Position der Teilzeichenfolge innerhalb von <c>strA</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1034">The position of the substring within <c>strA</c>.</span>
          </span>
        </param>
        <param name="strB">
          <span data-ttu-id="9380d-1035">Die zweite im Vergleich zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1035">The second string to use in the comparison.</span>
          </span>
        </param>
        <param name="indexB">
          <span data-ttu-id="9380d-1036">Die Position der Teilzeichenfolge innerhalb von <c>strB</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1036">The position of the substring within <c>strB</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9380d-1037">Die maximale Anzahl der zu vergleichenden Zeichen der Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1037">The maximum number of characters in the substrings to compare.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="9380d-1038">
            <see langword="true" />, wenn die Groß-/Kleinschreibung beim Vergleich ignoriert werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1038">
              <see langword="true" /> to ignore case during the comparison; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9380d-1039">Ein Objekt, das kulturspezifische Vergleichsinformationen angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1039">An object that supplies culture-specific comparison information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1040">Vergleicht Teilzeichenfolgen von zwei angegebenen <see cref="T:System.String" />-Objekten, wobei ihre Groß- und Kleinschreibung entweder ignoriert oder berücksichtigt und der Vergleich durch kulturspezifische Informationen beeinflusst wird, und gibt eine ganze Zahl zurück, die ihre relative Position in der Sortierreihenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1040">Compares substrings of two specified <see cref="T:System.String" /> objects, ignoring or honoring their case and using culture-specific information to influence the comparison, and returns an integer that indicates their relative position in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1041">Eine ganze Zahl, die die lexikalische Beziehung zwischen den beiden Vergleichswerten angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1041">An integer that indicates the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="9380d-1042">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description> Die Teilzeichenfolge in <paramref name="strA" /> steht in der Sortierreihenfolge vor der Teilzeichenfolge in <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Die Teilzeichenfolgen befinden sich in der Sortierreihenfolge an derselben Position, oder <paramref name="length" /> ist 0 (null).  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Die Teilzeichenfolge in <paramref name="strA" /> steht in der Teilzeichenfolge hinter <paramref name="strB" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1042">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The substrings occur in the same position in the sort order, or <paramref name="length" /> is zero.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1043">Starten Sie die zu vergleichenden Teilzeichenfolgen im `strA` am `indexA`, und klicken Sie in `strB` am `indexB`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1043">The substrings to compare start in `strA` at `indexA`, and in `strB` at `indexB`.</span></span> <span data-ttu-id="9380d-1044">Beide `indexA` und `indexB` sind nullbasiert, d. h. das erste Zeichen in `strA` und `strB` an position 0 (null) ist, nicht an der position einer.</span><span class="sxs-lookup"><span data-stu-id="9380d-1044">Both `indexA` and `indexB` are zero-based; that is, the first character in `strA` and `strB` is at position zero, not position one.</span></span> <span data-ttu-id="9380d-1045">Die Länge der ersten Teilzeichenfolge ist gleich der Länge der `strA` minus `indexA` plus eins.</span><span class="sxs-lookup"><span data-stu-id="9380d-1045">The length of the first substring is equal to the length of `strA` minus `indexA` plus one.</span></span> <span data-ttu-id="9380d-1046">Die Länge der zweiten Teilzeichenfolge ist gleich der Länge der `strB` minus `indexB` plus eins.</span><span class="sxs-lookup"><span data-stu-id="9380d-1046">The length of the second substring is equal to the length of `strB` minus `indexB` plus one.</span></span>  
  
 <span data-ttu-id="9380d-1047">Die Anzahl der zu vergleichenden Zeichen ist kleiner als die Länge der beiden Teilzeichenfolgen und `length`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1047">The number of characters to compare is the lesser of the lengths of the two substrings, and `length`.</span></span> <span data-ttu-id="9380d-1048">Die `indexA`, `indexB`, und `length` Parameter dürfen nicht negativ sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-1048">The `indexA`, `indexB`, and `length` parameters must be nonnegative.</span></span>  
  
 <span data-ttu-id="9380d-1049">Der Vergleich wird die `culture` Parameter zum Abrufen von kulturspezifischen Informationen wie z. B. Groß-/ Kleinschreibregeln und die alphabetische Reihenfolge der einzelnen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1049">The comparison uses the `culture` parameter to obtain culture-specific information such as casing rules and the alphabetic order of individual characters.</span></span> <span data-ttu-id="9380d-1050">Z. B. eine Kultur angeben, dass bestimmte Kombinationen von Zeichen als ein einzelnes Zeichen behandelt werden, oder auf eine bestimmte Weise Groß-und Kleinschreibung verglichen werden, oder, der die Sortierreihenfolge der ein Zeichen ist abhängig von der Zeichen, die vor oder Führen Sie es aus.</span><span class="sxs-lookup"><span data-stu-id="9380d-1050">For example, a culture could specify that certain combinations of characters be treated as a single character, or uppercase and lowercase characters be compared in a particular way, or that the sorting order of a character depends on the characters that precede or follow it.</span></span>  
  
 <span data-ttu-id="9380d-1051">Der Vergleich erfolgt mithilfe von Word-Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-1051">The comparison is performed using word sort rules.</span></span> <span data-ttu-id="9380d-1052">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1052">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9380d-1053">Einer oder beiden Vergleichswerte möglich `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1053">One or both comparands can be `null`.</span></span> <span data-ttu-id="9380d-1054">Definitionsgemäß eine beliebige Zeichenfolge, einschließlich die leere Zeichenfolge (""), verglichen, die größer als ein null-Verweis; und zwei null-Verweis gleich miteinander vergleichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1054">By definition, any string, including the empty string (""), compares greater than a null reference; and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="9380d-1055">Der Vergleich wird beendet, wenn Ungleichheit ermittelt wird, oder beide Teilzeichenfolgen verglichen wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1055">The comparison terminates when an inequality is discovered or both substrings have been compared.</span></span> <span data-ttu-id="9380d-1056">Allerdings wird, wenn die beiden Zeichenfolgen gleich dem Ende einer Zeichenfolge vergleichen und die andere Zeichenfolge enthält Zeichen, die verbleibenden, klicken Sie dann die Zeichenfolge mit den verbleibenden Zeichen größer angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1056">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, then the string with remaining characters is considered greater.</span></span> <span data-ttu-id="9380d-1057">Der Rückgabewert ist das Ergebnis der letzten Vergleich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1057">The return value is the result of the last comparison performed.</span></span>  
  
 <span data-ttu-id="9380d-1058">Beim Vergleichen von Kultur-, Groß-/Kleinschreibung Regeln betroffen sind, können unerwartete Ergebnisse auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1058">Unexpected results can occur when comparisons are affected by culture-specific casing rules.</span></span> <span data-ttu-id="9380d-1059">Gibt z. B. im türkischen im folgenden Beispiel wird die falsche Ergebnisse da Dateisystem im türkischen nicht linguistische Schreibweise Regeln für den Buchstaben "i" in "File".</span><span class="sxs-lookup"><span data-stu-id="9380d-1059">For example, in Turkish, the following example yields the wrong results because the file system in Turkish does not use linguistic casing rules for the letter "i" in "file".</span></span>  
  
 [!code-cpp[System.String.Compare#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#6)]
 [!code-csharp[System.String.Compare#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#6)]
 [!code-vb[System.String.Compare#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#6)]  
  
 <span data-ttu-id="9380d-1060">Vergleichen Sie den Pfadnamen in "File" verwenden einen Ordinalvergleich durch.</span><span class="sxs-lookup"><span data-stu-id="9380d-1060">Compare the path name to "file" using an ordinal comparison.</span></span> <span data-ttu-id="9380d-1061">Zu diesem Zweck der richtige Code lautet wie folgt aus:</span><span class="sxs-lookup"><span data-stu-id="9380d-1061">The correct code to do this is as follows:</span></span>  
  
 [!code-cpp[System.String.Compare#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Compare/cpp/remarks.cpp#7)]
 [!code-csharp[System.String.Compare#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare/cs/remarks.cs#7)]
 [!code-vb[System.String.Compare#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare/vb/remarks.vb#7)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1062">Das folgende Beispiel vergleicht zwei Verwendung unterschiedlicher Kulturen und ignorieren die Groß-/Kleinschreibung der Teilzeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1062">The following example compares two substrings using different cultures and ignoring the case of the substrings.</span></span> <span data-ttu-id="9380d-1063">Die bevorzugte Kultur wirkt sich auf, wie der Buchstabe "I" ist im Vergleich.</span><span class="sxs-lookup"><span data-stu-id="9380d-1063">The choice of culture affects how the letter "I" is compared.</span></span>  
  
 [!code-cpp[string.compare5#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.compare5/CPP/comp5.cpp#1)]
 [!code-csharp[string.compare5#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.compare5/CS/comp5.cs#1)]
 [!code-vb[string.compare5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.compare5/VB/comp5.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1064">
            <paramref name="indexA" /> ist größer als <paramref name="strA" /><see cref="P:System.String.Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1064">
              <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.</span>
          </span>
          <span data-ttu-id="9380d-1065">Oder:  <paramref name="indexB" /> ist größer als <paramref name="strB" />.<see cref="P:System.String.Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1065">-or-  <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.</span>
          </span>
          <span data-ttu-id="9380d-1066">Oder:  <paramref name="indexA" />, <paramref name="indexB" /> oder <paramref name="length" /> ist negativ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1066">-or-  <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-1067">Oder:  Entweder <paramref name="strA" /> oder <paramref name="strB" /> ist <see langword="null" />, und <paramref name="length" /> ist größer als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1067">-or-  Either <paramref name="strA" /> or <paramref name="strB" /> is <see langword="null" />, and <paramref name="length" /> is greater than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1068">
            <paramref name="culture" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1068">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1069">
            <para>Zeichensätze enthalten Ignorierbare Zeichen. Die <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" /> Methode berücksichtigt nicht diese Zeichen aus, wenn er einen linguistischen oder kulturabhängigen Vergleich ausführt. Rufen Sie so, dass um Ignorierbare Zeichen in den Vergleich zu erkennen, die <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> Methode, und geben Sie den Wert <see cref="F:System.Globalization.CompareOptions.Ordinal" /> oder <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> für die <paramref name="options" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1069">
              <para>Character sets include ignorable characters. The <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Boolean,System.Globalization.CultureInfo)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison. To recognize ignorable characters in your comparison, call the <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> method and supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Compare">
      <MemberSignature Language="C#" Value="public static int Compare (string strA, int indexA, string strB, int indexB, int length, System.Globalization.CultureInfo culture, System.Globalization.CompareOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 Compare(string strA, int32 indexA, string strB, int32 indexB, int32 length, class System.Globalization.CultureInfo culture, valuetype System.Globalization.CompareOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Compare (strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer, culture As CultureInfo, options As CompareOptions) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int Compare(System::String ^ strA, int indexA, System::String ^ strB, int indexB, int length, System::Globalization::CultureInfo ^ culture, System::Globalization::CompareOptions options);" />
      <MemberSignature Language="F#" Value="static member Compare : string * int * string * int * int * System.Globalization.CultureInfo * System.Globalization.CompareOptions -&gt; int" Usage="System.string.Compare (strA, indexA, strB, indexB, length, culture, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="indexA" Type="System.Int32" />
        <Parameter Name="strB" Type="System.String" />
        <Parameter Name="indexB" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="options" Type="System.Globalization.CompareOptions" />
      </Parameters>
      <Docs>
        <param name="strA">
          <span data-ttu-id="9380d-1070">Die erste im Vergleich zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1070">The first string to use in the comparison.</span>
          </span>
        </param>
        <param name="indexA">
          <span data-ttu-id="9380d-1071">Die Anfangsposition der Teilzeichenfolge innerhalb des <c>strA</c>-Parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1071">The starting position of the substring within <c>strA</c>.</span>
          </span>
        </param>
        <param name="strB">
          <span data-ttu-id="9380d-1072">Die zweite im Vergleich zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1072">The second string to use in the comparison.</span>
          </span>
        </param>
        <param name="indexB">
          <span data-ttu-id="9380d-1073">Die Anfangsposition der Teilzeichenfolge innerhalb des <c>strB</c>-Parameters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1073">The starting position of the substring within <c>strB</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9380d-1074">Die maximale Anzahl der zu vergleichenden Zeichen der Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1074">The maximum number of characters in the substrings to compare.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9380d-1075">Ein Objekt, das kulturspezifische Vergleichsinformationen angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1075">An object that supplies culture-specific comparison information.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9380d-1076">Die beim Ausführen des Vergleichs zu verwendenden Optionen (z. B. Ignorieren von Groß- und Kleinschreibung oder Symbolen).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1076">Options to use when performing the comparison (such as ignoring case or symbols).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1077">Vergleicht Teilzeichenfolgen von zwei angegebenen <see cref="T:System.String" />-Objekten mit den festgelegten Vergleichsoptionen und kulturspezifischen Informationen, die den Vergleich beeinflussen, und gibt eine ganze Zahl zurück, die die Beziehung der beiden Teilzeichenfolgen zueinander in der Sortierreihenfolge angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1077">Compares substrings of two specified <see cref="T:System.String" /> objects using the specified comparison options and culture-specific information to influence the comparison, and returns an integer that indicates the relationship of the two substrings to each other in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1078">Eine ganze Zahl, die die lexikalische Beziehung zwischen den beiden Teilzeichenfolgen angibt, wie in der folgenden Tabelle veranschaulicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1078">An integer that indicates the lexical relationship between the two substrings, as shown in the following table.</span>
          </span>
          <span data-ttu-id="9380d-1079">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description> Die Teilzeichenfolge in <paramref name="strA" /> steht in der Sortierreihenfolge vor der Teilzeichenfolge in <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Die Teilzeichenfolgen befinden sich in der Sortierreihenfolge an derselben Position, oder <paramref name="length" /> ist 0 (null).  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Die Teilzeichenfolge in <paramref name="strA" /> steht in der Teilzeichenfolge hinter <paramref name="strB" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1079">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The substring in <paramref name="strA" /> precedes the substring in <paramref name="strB" /> in the sort order.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The substrings occur in the same position in the sort order, or <paramref name="length" /> is zero.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The substring in <paramref name="strA" /> follows the substring in <paramref name="strB" /> in the sort order.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1080">Starten Sie die zu vergleichenden Teilzeichenfolgen im `strA` an Position `indexA` und `strB` an Position `indexB`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1080">The substrings to compare start in `strA` at position `indexA` and in `strB` at position `indexB`.</span></span> <span data-ttu-id="9380d-1081">Die Länge der ersten Teilzeichenfolge ist die Länge des `strA` minus `indexA`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1081">The length of the first substring is the length of `strA` minus `indexA`.</span></span> <span data-ttu-id="9380d-1082">Die Länge der zweiten Teilzeichenfolge ist die Länge des `strB` minus `indexB`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1082">The length of the second substring is the length of `strB` minus `indexB`.</span></span>  
  
 <span data-ttu-id="9380d-1083">Die Anzahl der zu vergleichenden Zeichen ist kleiner als die Länge der beiden Teilzeichenfolgen und `length`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1083">The number of characters to compare is the lesser of the lengths of the two substrings, and `length`.</span></span> <span data-ttu-id="9380d-1084">Die `indexA`, `indexB`, und `length` Parameter dürfen nicht negativ sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-1084">The `indexA`, `indexB`, and `length` parameters must be nonnegative.</span></span>  
  
 <span data-ttu-id="9380d-1085">Der Vergleich wird die `culture` Parameter zum Abrufen von kulturspezifischen Informationen, z. B. Groß-/ Kleinschreibregeln und die alphabetische Reihenfolge der einzelnen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1085">The comparison uses the `culture` parameter to obtain culture-specific information, such as casing rules and the alphabetical order of individual characters.</span></span> <span data-ttu-id="9380d-1086">Z. B. eine bestimmte Kultur angeben, dass bestimmte Kombinationen von Zeichen als ein einzelnes Zeichen behandelt werden, auf eine bestimmte Weise Groß-und Kleinschreibung verglichen werden soll, oder, der die Sortierreihenfolge der ein Zeichen ist abhängig von der Zeichen, vorausgehen und folgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1086">For example, a particular culture could specify that certain combinations of characters be treated as a single character, that uppercase and lowercase characters be compared in a particular way, or that the sort order of a character depends on the characters that precede or follow it.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9380d-1087">Die <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29> Methode dient in erster Linie zur Verwendung in sortiert oder alphabetisch sortiert Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1087">The <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29> method is designed primarily for use in sorting or alphabetizing operations.</span></span> <span data-ttu-id="9380d-1088">Es sollte nicht verwendet werden, wenn der primäre Zweck des Methodenaufrufs ist, um festzustellen, ob die beiden Teilzeichenfolgen äquivalent sind (d. h. wenn der Zweck des Methodenaufrufs für einen Rückgabewert von 0 (null) testen).</span><span class="sxs-lookup"><span data-stu-id="9380d-1088">It should not be used when the primary purpose of the method call is to determine whether two substrings are equivalent (that is, when the purpose of the method call is to test for a return value of zero).</span></span> <span data-ttu-id="9380d-1089">Um zu bestimmen, ob zwei Zeichenfolgen identisch sind, rufen Sie die <xref:System.String.Equals%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1089">To determine whether two strings are equivalent, call the <xref:System.String.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="9380d-1090">Eine oder beide der `strA` und `strB` kann `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1090">One or both of `strA` and `strB` can be `null`.</span></span> <span data-ttu-id="9380d-1091">Definitionsgemäß eine beliebige Zeichenfolge, einschließlich <xref:System.String.Empty?displayProperty=nameWithType>, Vergleich größer als ein null-Verweis, und zwei null-Verweise sind gleich.</span><span class="sxs-lookup"><span data-stu-id="9380d-1091">By definition, any string, including <xref:System.String.Empty?displayProperty=nameWithType>, compares greater than a null reference, and two null references compare equal to each other.</span></span>  
  
 <span data-ttu-id="9380d-1092">Der Vergleich kann weiter angegeben werden, werden die `options` -Parameter, der eine oder mehrere Member besteht aus den <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-1092">The comparison can be further specified by the `options` parameter, which consists of one or more members of the <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> enumeration.</span></span> <span data-ttu-id="9380d-1093">Jedoch, da der Zweck dieser Methode wird einen kulturabhängige Zeichenfolgenvergleich, Durchführen der <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> und <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> Werte haben keine Auswirkungen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1093">However, because the purpose of this method is to conduct a culture-sensitive string comparison, the <xref:System.Globalization.CompareOptions.Ordinal?displayProperty=nameWithType> and <xref:System.Globalization.CompareOptions.OrdinalIgnoreCase?displayProperty=nameWithType> values have no effect.</span></span>  
  
 <span data-ttu-id="9380d-1094">Der Vergleich wird beendet, wenn Ungleichheit ermittelt wird, oder beide Teilzeichenfolgen verglichen wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1094">The comparison terminates when an inequality is discovered or both substrings have been compared.</span></span> <span data-ttu-id="9380d-1095">Allerdings wird, wenn die beiden Zeichenfolgen gleich dem Ende einer Zeichenfolge vergleichen und die andere Zeichenfolge über die verbleibenden Zeichen, die Zeichenfolge mit den verbleibenden Zeichen größer angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1095">However, if the two strings compare equal to the end of one string, and the other string has characters remaining, the string with the remaining characters is considered greater.</span></span> <span data-ttu-id="9380d-1096">Der Rückgabewert ist das Ergebnis der letzten Vergleich ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1096">The return value is the result of the last comparison performed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1097">Im folgenden Beispiel wird die <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29> Methode, um die Nachnamen von zwei Personen vergleichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1097">The following example uses the <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Globalization.CultureInfo%2CSystem.Globalization.CompareOptions%29> method to compare the last names of two people.</span></span> <span data-ttu-id="9380d-1098">Anschließend werden diese in alphabetischer Reihenfolge aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1098">It then lists them in alphabetical order.</span></span>  
  
 [!code-csharp[System.String.Compare5#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Compare5/cs/Example.cs#1)]
 [!code-vb[System.String.Compare5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Compare5/vb/Example.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-1099">
            <paramref name="options" /> ist kein <see cref="T:System.Globalization.CompareOptions" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1099">
              <paramref name="options" /> is not a <see cref="T:System.Globalization.CompareOptions" /> value.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1100">
            <paramref name="indexA" /> ist größer als <paramref name="strA" /><see langword=".Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1100">
              <paramref name="indexA" /> is greater than <paramref name="strA" /><see langword=".Length" />.</span>
          </span>
          <span data-ttu-id="9380d-1101">Oder:  <paramref name="indexB" /> ist größer als <paramref name="strB" /><see langword=".Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1101">-or-  <paramref name="indexB" /> is greater than <paramref name="strB" /><see langword=".Length" />.</span>
          </span>
          <span data-ttu-id="9380d-1102">Oder:  <paramref name="indexA" />, <paramref name="indexB" /> oder <paramref name="length" /> ist negativ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1102">-or-  <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-1103">Oder:  Entweder <paramref name="strA" /> oder <paramref name="strB" /> ist <see langword="null" />, und <paramref name="length" /> ist größer als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1103">-or-  Either <paramref name="strA" /> or <paramref name="strB" /> is <see langword="null" />, and <paramref name="length" /> is greater than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1104">
            <paramref name="culture" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1104">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1105">
            <para>Zeichensätze enthalten Ignorierbare Zeichen. Die <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> Methode berücksichtigt nicht diese Zeichen aus, wenn er einen linguistischen oder kulturabhängigen Vergleich ausführt. Geben Sie den Wert so, dass um Ignorierbare Zeichen in den Vergleich zu erkennen, <see cref="F:System.Globalization.CompareOptions.Ordinal" /> oder <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> für die <paramref name="options" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1105">
              <para>Character sets include ignorable characters. The <see cref="M:System.String.Compare(System.String,System.Int32,System.String,System.Int32,System.Int32,System.Globalization.CultureInfo,System.Globalization.CompareOptions)" /> method does not consider these characters when it performs a linguistic or culture-sensitive comparison. To recognize ignorable characters in your comparison, supply a value of <see cref="F:System.Globalization.CompareOptions.Ordinal" /> or <see cref="F:System.Globalization.CompareOptions.OrdinalIgnoreCase" /> for the <paramref name="options" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="Overload:System.String.Equals" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareOrdinal">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-1106">Vergleicht zwei <see cref="T:System.String" />-Objekte, indem die numerischen Werte der entsprechenden <see cref="T:System.Char" />-Objekte in den Zeichenfolgen ausgewertet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1106">Compares two <see cref="T:System.String" /> objects by evaluating the numeric values of the corresponding <see cref="T:System.Char" /> objects in each string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareOrdinal">
      <MemberSignature Language="C#" Value="public static int CompareOrdinal (string strA, string strB);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareOrdinal(string strA, string strB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.CompareOrdinal(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareOrdinal (strA As String, strB As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareOrdinal(System::String ^ strA, System::String ^ strB);" />
      <MemberSignature Language="F#" Value="static member CompareOrdinal : string * string -&gt; int" Usage="System.string.CompareOrdinal (strA, strB)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="strB" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strA">
          <span data-ttu-id="9380d-1107">Die erste zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1107">The first string to compare.</span>
          </span>
        </param>
        <param name="strB">
          <span data-ttu-id="9380d-1108">Die zweite zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1108">The second string to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1109">Vergleicht zwei <see cref="T:System.String" />-Objekte, indem die numerischen Werte der entsprechenden <see cref="T:System.Char" />-Objekte in den Zeichenfolgen ausgewertet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1109">Compares two specified <see cref="T:System.String" /> objects by evaluating the numeric values of the corresponding <see cref="T:System.Char" /> objects in each string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1110">Eine ganze Zahl, die die lexikalische Beziehung zwischen den beiden Vergleichswerten angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1110">An integer that indicates the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="9380d-1111">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description>
                  <paramref name="strA" /> ist kleiner als <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description>
                  <paramref name="strA" /> und <paramref name="strB" /> sind gleich.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description>
                  <paramref name="strA" /> ist größer als <paramref name="strB" />. </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1111">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description>
                    <paramref name="strA" /> is less than <paramref name="strB" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description>
                    <paramref name="strA" /> and <paramref name="strB" /> are equal.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description>
                    <paramref name="strA" /> is greater than <paramref name="strB" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1112">Diese Methode führt einen Vergleich Groß-/Kleinschreibung anhand der ordinalen Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-1112">This method performs a case-sensitive comparison using ordinal sort rules.</span></span> <span data-ttu-id="9380d-1113">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1113">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-1114">Um einen Groß-/Kleinschreibung, anhand der ordinalen Sortierregeln Vergleich durchzuführen, rufen die <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> -Methode mit dem `comparisonType` Argument festgelegt wird, um <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1114">To perform a case-insensitive comparison using ordinal sort rules, call the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> method with the `comparisonType` argument set to <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9380d-1115">Da <xref:System.String.CompareOrdinal%28System.String%2CSystem.String%29> ist eine statische Methode, `strA` und `strB` kann `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1115">Because <xref:System.String.CompareOrdinal%28System.String%2CSystem.String%29> is a static method, `strA` and `strB` can be `null`.</span></span> <span data-ttu-id="9380d-1116">Wenn beide Werte sind `null`, die Methode gibt 0 (null), der angibt, dass `strA` und `strB` gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1116">If both values are `null`, the method returns 0 (zero), which indicates that `strA` and `strB` are equal.</span></span> <span data-ttu-id="9380d-1117">Wenn nur einer der Werte ist `null`, die Methode berücksichtigt, die Null-Wert größer sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-1117">If only one of the values is `null`, the method considers the non-null value to be greater.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1118">Im folgenden Beispiel wird und ordinalen Vergleich von zwei Zeichenfolgen unterscheiden sich nur hinsichtlich der Fall.</span><span class="sxs-lookup"><span data-stu-id="9380d-1118">The following example performs and ordinal comparison of two strings that only differ in case.</span></span>  
  
 [!code-cpp[string.compareordinal#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.compareordinal/CPP/comp0.cpp#1)]
 [!code-csharp[string.compareordinal#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.compareordinal/CS/comp0.cs#1)]
 [!code-vb[string.compareordinal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.compareordinal/VB/comp0.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareOrdinal">
      <MemberSignature Language="C#" Value="public static int CompareOrdinal (string strA, int indexA, string strB, int indexB, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 CompareOrdinal(string strA, int32 indexA, string strB, int32 indexB, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.CompareOrdinal(System.String,System.Int32,System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CompareOrdinal (strA As String, indexA As Integer, strB As String, indexB As Integer, length As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int CompareOrdinal(System::String ^ strA, int indexA, System::String ^ strB, int indexB, int length);" />
      <MemberSignature Language="F#" Value="static member CompareOrdinal : string * int * string * int * int -&gt; int" Usage="System.string.CompareOrdinal (strA, indexA, strB, indexB, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strA" Type="System.String" />
        <Parameter Name="indexA" Type="System.Int32" />
        <Parameter Name="strB" Type="System.String" />
        <Parameter Name="indexB" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="strA">
          <span data-ttu-id="9380d-1119">Die erste im Vergleich zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1119">The first string to use in the comparison.</span>
          </span>
        </param>
        <param name="indexA">
          <span data-ttu-id="9380d-1120">Der Anfangsindex der Teilzeichenfolge in <c>strA</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1120">The starting index of the substring in <c>strA</c>.</span>
          </span>
        </param>
        <param name="strB">
          <span data-ttu-id="9380d-1121">Die zweite im Vergleich zu verwendende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1121">The second string to use in the comparison.</span>
          </span>
        </param>
        <param name="indexB">
          <span data-ttu-id="9380d-1122">Der Anfangsindex der Teilzeichenfolge in <c>strB</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1122">The starting index of the substring in <c>strB</c>.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9380d-1123">Die maximale Anzahl der zu vergleichenden Zeichen der Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1123">The maximum number of characters in the substrings to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1124">Vergleicht Teilzeichenfolgen zweier angegebener <see cref="T:System.String" />-Objekte, indem die numerischen Werte der entsprechenden <see cref="T:System.Char" />-Objekte in den Teilzeichenfolgen ausgewertet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1124">Compares substrings of two specified <see cref="T:System.String" /> objects by evaluating the numeric values of the corresponding <see cref="T:System.Char" /> objects in each substring.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1125">Eine 32-Bit-Ganzzahl mit Vorzeichen, die die lexikalische Beziehung der beiden verglichenen Elemente angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1125">A 32-bit signed integer that indicates the lexical relationship between the two comparands.</span>
          </span>
          <span data-ttu-id="9380d-1126">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description> Die Teilzeichenfolge in <paramref name="strA" /> ist kleiner als die Teilzeichenfolge in <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Die Teilzeichenfolgen sind gleich, oder <paramref name="length" /> ist 0 (null).  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Die Teilzeichenfolge in <paramref name="strA" /> ist größer als die Teilzeichenfolge in <paramref name="strB" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1126">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The substring in <paramref name="strA" /> is less than the substring in <paramref name="strB" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The substrings are equal, or <paramref name="length" /> is zero.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The substring in <paramref name="strA" /> is greater than the substring in <paramref name="strB" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1127">Die `indexA`, `indexB`, und `length` Parameter dürfen nicht negativ sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-1127">The `indexA`, `indexB`, and `length` parameters must be nonnegative.</span></span>  
  
 <span data-ttu-id="9380d-1128">Die Anzahl der Zeichen im Vergleich ist kleiner als die Länge des `strA` weniger `indexA`, die Länge des `strB` weniger `indexB`, und `length`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1128">The number of characters compared is the lesser of the length of `strA` less `indexA`, the length of `strB` less `indexB`, and `length`.</span></span>  
  
 <span data-ttu-id="9380d-1129">Diese Methode führt einen Vergleich Groß-/Kleinschreibung anhand der ordinalen Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-1129">This method performs a case-sensitive comparison using ordinal sort rules.</span></span> <span data-ttu-id="9380d-1130">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1130">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-1131">Um einen Groß-/Kleinschreibung, anhand der ordinalen Sortierregeln Vergleich durchzuführen, rufen die <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.StringComparison%29> -Methode mit dem `comparisonType` Argument festgelegt wird, um <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1131">To perform a case-insensitive comparison using ordinal sort rules, call the <xref:System.String.Compare%28System.String%2CSystem.Int32%2CSystem.String%2CSystem.Int32%2CSystem.Int32%2CSystem.StringComparison%29> method with the `comparisonType` argument set to <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9380d-1132">Da <xref:System.String.CompareOrdinal%28System.String%2CSystem.String%29> ist eine statische Methode, `strA` und `strB` kann `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1132">Because <xref:System.String.CompareOrdinal%28System.String%2CSystem.String%29> is a static method, `strA` and `strB` can be `null`.</span></span> <span data-ttu-id="9380d-1133">Wenn beide Werte sind `null`, die Methode gibt 0 (null), der angibt, dass `strA` und `strB` gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1133">If both values are `null`, the method returns 0 (zero), which indicates that `strA` and `strB` are equal.</span></span> <span data-ttu-id="9380d-1134">Wenn nur einer der Werte ist `null`, die Methode berücksichtigt, die Null-Wert größer sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-1134">If only one of the values is `null`, the method considers the non-null value to be greater.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1135">Im folgenden Beispiel wird veranschaulicht, dass <xref:System.String.CompareOrdinal%2A> und <xref:System.String.Compare%2A> unterschiedliche Sortierreihenfolgen verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1135">This following example demonstrates that <xref:System.String.CompareOrdinal%2A> and <xref:System.String.Compare%2A> use different sort orders.</span></span>  
  
 [!code-cpp[StringCompareOrdinal#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringCompareOrdinal/CPP/stringcompareordinal.cpp#1)]
 [!code-csharp[StringCompareOrdinal#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringCompareOrdinal/CS/stringcompareordinal.cs#1)]
 [!code-vb[StringCompareOrdinal#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringCompareOrdinal/VB/stringcompareordinal.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1136">
            <paramref name="strA" /> ist nicht <see langword="null" /> und <paramref name="indexA" /> ist größer als <paramref name="strA" /><see cref="P:System.String.Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1136">
              <paramref name="strA" /> is not <see langword="null" /> and <paramref name="indexA" /> is greater than <paramref name="strA" />.<see cref="P:System.String.Length" />.</span>
          </span>
          <span data-ttu-id="9380d-1137">Oder:  <paramref name="strB" /> ist nicht <see langword="null" />, und <paramref name="indexB" /> ist größer als <paramref name="strB" />.<see cref="P:System.String.Length" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1137">-or-  <paramref name="strB" /> is not <see langword="null" /> and <paramref name="indexB" /> is greater than <paramref name="strB" />.<see cref="P:System.String.Length" />.</span>
          </span>
          <span data-ttu-id="9380d-1138">Oder:  <paramref name="indexA" />, <paramref name="indexB" /> oder <paramref name="length" /> ist negativ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1138">-or-  <paramref name="indexA" />, <paramref name="indexB" />, or <paramref name="length" /> is negative.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
        <altmember cref="M:System.String.CompareTo(System.Object)" />
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-1139">Vergleicht diese Instanz mit einem angegebenen Objekt oder <see cref="T:System.String" /> und gibt eine ganze Zahl zurück, die angibt, ob diese Instanz in der Sortierreihenfolge an einer früheren, späteren oder derselben Position wie das angegebene Objekt oder <see cref="T:System.String" /> aufgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1139">Compares this instance with a specified object or <see cref="T:System.String" /> and returns an integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified object or <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1140">Beide Überladungen der <xref:System.String.CompareTo%2A> -Methode führen kulturabhängige und Groß-/Kleinschreibung im Vergleich.</span><span class="sxs-lookup"><span data-stu-id="9380d-1140">Both overloads of the <xref:System.String.CompareTo%2A> method perform culture-sensitive and case-sensitive comparison.</span></span> <span data-ttu-id="9380d-1141">Sie können nicht auf diese Methode verwenden, um kulturunabhängige oder Ordinalzahl Vergleiche durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1141">You cannot use this method to perform culture-insensitive or ordinal comparisons.</span></span> <span data-ttu-id="9380d-1142">Aus Gründen der Übersichtlichkeit des Codes, wird empfohlen, dass Sie vermeiden die <xref:System.String.CompareTo%2A> Methode, und rufen die <xref:System.String.Compare%2A> Methode stattdessen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1142">For code clarity, we recommend that you avoid the <xref:System.String.CompareTo%2A> method and call the <xref:System.String.Compare%2A> method instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="string.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1143">Ein Objekt, das als <see cref="T:System.String" /> ausgewertet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1143">An object that evaluates to a <see cref="T:System.String" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1144">Vergleicht diese Instanz mit einem angegebenen <see cref="T:System.Object" /> und gibt an, ob diese Instanz in der Sortierreihenfolge an einer früheren, späteren oder derselben Position wie das angegebene <see cref="T:System.Object" /> aufgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1144">Compares this instance with a specified <see cref="T:System.Object" /> and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified <see cref="T:System.Object" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1145">Eine 32-Bit-Ganzzahl mit Vorzeichen, die angibt, ob diese Instanz in der Sortierreihenfolge an einer früheren, späteren oder derselben Position wie der <paramref name="value" />-Parameter aufgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1145">A 32-bit signed integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the <paramref name="value" /> parameter.</span>
          </span>
          <span data-ttu-id="9380d-1146">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null) </term>
                <description> Diese Instanz steht vor <paramref name="value" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Diese Instanz hat in der Sortierreihenfolge dieselbe Position wie <paramref name="value" />.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Diese Instanz folgt auf <paramref name="value" />.  Oder:  <paramref name="value" /> ist <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1146">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="value" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="value" />.  -or-  <paramref name="value" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1147">`value` muss eine <xref:System.String> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1147">`value` must be a <xref:System.String> object.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9380d-1148">Die <xref:System.String.CompareTo%2A> Methode ist darauf ausgelegt, in erster Linie zur Verwendung in sortiert oder alphabetisch sortiert Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1148">The <xref:System.String.CompareTo%2A> method was designed primarily for use in sorting or alphabetizing operations.</span></span> <span data-ttu-id="9380d-1149">Es sollte nicht verwendet werden, wenn der primäre Zweck des Methodenaufrufs ist, um festzustellen, ob zwei Zeichenfolgen identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1149">It should not be used when the primary purpose of the method call is to determine whether two strings are equivalent.</span></span> <span data-ttu-id="9380d-1150">Um zu bestimmen, ob zwei Zeichenfolgen identisch sind, rufen Sie die <xref:System.String.Equals%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1150">To determine whether two strings are equivalent, call the <xref:System.String.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="9380d-1151">Diese Methode vergleicht Word (Groß-/Kleinschreibung beachtet und kulturabhängige) mit der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1151">This method performs a word (case-sensitive and culture-sensitive) comparison using the current culture.</span></span> <span data-ttu-id="9380d-1152">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1152">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9380d-1153">Weitere Informationen über das Verhalten dieser Methode finden Sie im Abschnitt "Hinweise" der <xref:System.String.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1153">For more information about the behavior of this method, see the Remarks section of the <xref:System.String.Compare%28System.String%2CSystem.String%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1154">Im folgenden Beispiel wird die <xref:System.String.CompareTo%2A> -Methode mit einem <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1154">The following example uses the <xref:System.String.CompareTo%2A> method with an <xref:System.Object>.</span></span> <span data-ttu-id="9380d-1155">Da versucht wird, vergleichen Sie ein <xref:System.String> -Instanz, auf eine `TestClass` Objekt ist, löst die Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1155">Because it attempts to compare a <xref:System.String> instance to a `TestClass` object, the method throws an <xref:System.ArgumentException>.</span></span>  
  
 [!code-cpp[ExToString#1](~/samples/snippets/cpp/VS_Snippets_CLR/ExToString/CPP/extostring.cpp#1)]
 [!code-csharp[ExToString#1](~/samples/snippets/csharp/VS_Snippets_CLR/ExToString/CS/extostring.cs#1)]
 [!code-vb[ExToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ExToString/VB/extostring.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-1156">
            <paramref name="value" /> ist keine <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1156">
              <paramref name="value" /> is not a <see cref="T:System.String" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1157">
            <para>Zeichensätze enthalten Ignorierbare Zeichen. Die <see cref="M:System.String.CompareTo(System.Object)" /> Methode berücksichtigt keine solche Zeichen, wenn er einen kulturabhängigen Vergleich ausführt. Angenommen, der folgende Code ausgeführt wird, auf der [! Include[netfx40_short](~/Includes/netfx40-Short-MD.MD)] oder später ein Vergleich der "Tier" mit "Ani-falsch" (mit einem bedingten Bindestrichs oder U + 00AD) gibt an, dass die beiden Zeichenfolgen entspricht.  [! code-csharp[System.String.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.compareto/cs/compareto1.cs#1)] [! code-vb[System.String.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.compareto/vb/compareto1.vb#1)]  Rufen Sie so, dass Ignorierbare Zeichen in einen Zeichenfolgenvergleich erkennen zu können, die <see cref="M:System.String.CompareOrdinal(System.String,System.String)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1157">
              <para>Character sets include ignorable characters. The <see cref="M:System.String.CompareTo(System.Object)" /> method does not consider such characters when it performs a culture-sensitive comparison. For example, if the following code is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, a comparison of "animal" with "ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent.  [!code-csharp[System.String.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.compareto/cs/compareto1.cs#1)] [!code-vb[System.String.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.compareto/vb/compareto1.vb#1)]  To recognize ignorable characters in a string comparison, call the <see cref="M:System.String.CompareOrdinal(System.String,System.String)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (string strB);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(string strB) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.CompareTo(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (strB As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::String ^ strB);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : string -&gt; int&#xA;override this.CompareTo : string -&gt; int" Usage="string.CompareTo strB" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strB" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="strB">
          <span data-ttu-id="9380d-1158">Die Zeichenfolge, die mit dieser Instanz verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1158">The string to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1159">Vergleicht diese Instanz mit einem angegebenen <see cref="T:System.String" />-Objekt und gibt an, ob diese Instanz in der Sortierreihenfolge an einer früheren, späteren oder derselben Position wie die angegebene Zeichenfolge aufgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1159">Compares this instance with a specified <see cref="T:System.String" /> object and indicates whether this instance precedes, follows, or appears in the same position in the sort order as the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1160">Eine 32-Bit-Ganzzahl mit Vorzeichen, die angibt, ob diese Instanz in der Sortierreihenfolge an einer früheren, späteren oder derselben Position wie der <paramref name="strB" />-Parameter aufgeführt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1160">A 32-bit signed integer that indicates whether this instance precedes, follows, or appears in the same position in the sort order as the <paramref name="strB" /> parameter.</span>
          </span>
          <span data-ttu-id="9380d-1161">
            <list type="table">
              <listheader>
                <term> Wert  </term>
                <description> Bedingung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null) </term>
                <description> Diese Instanz steht vor <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Diese Instanz hat in der Sortierreihenfolge dieselbe Position wie <paramref name="strB" />.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Diese Instanz folgt auf <paramref name="strB" />.  Oder:  <paramref name="strB" /> ist <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1161">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Condition  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> This instance precedes <paramref name="strB" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> This instance has the same position in the sort order as <paramref name="strB" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> This instance follows <paramref name="strB" />.  -or-  <paramref name="strB" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1162">Diese Methode vergleicht Word (Groß-/Kleinschreibung beachtet und kulturabhängige) mit der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1162">This method performs a word (case-sensitive and culture-sensitive) comparison using the current culture.</span></span> <span data-ttu-id="9380d-1163">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1163">For more information about word, string, and ordinal sorts, see <xref:System.Globalization.CompareOptions?displayProperty=nameWithType>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="9380d-1164">Die <xref:System.String.CompareTo%2A> Methode ist darauf ausgelegt, in erster Linie zur Verwendung in sortiert oder alphabetisch sortiert Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1164">The <xref:System.String.CompareTo%2A> method was designed primarily for use in sorting or alphabetizing operations.</span></span> <span data-ttu-id="9380d-1165">Es sollte nicht verwendet werden, wenn der primäre Zweck des Methodenaufrufs ist, um festzustellen, ob zwei Zeichenfolgen identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1165">It should not be used when the primary purpose of the method call is to determine whether two strings are equivalent.</span></span> <span data-ttu-id="9380d-1166">Um zu bestimmen, ob zwei Zeichenfolgen identisch sind, rufen Sie die <xref:System.String.Equals%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1166">To determine whether two strings are equivalent, call the <xref:System.String.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="9380d-1167">Weitere Informationen über das Verhalten dieser Methode finden Sie im Abschnitt "Hinweise" der <xref:System.String.Compare%28System.String%2CSystem.String%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1167">For more information about the behavior of this method, see the Remarks section of the <xref:System.String.Compare%28System.String%2CSystem.String%29> method.</span></span>  
  
 <span data-ttu-id="9380d-1168">Diese Methode implementiert die <xref:System.IComparable%601?displayProperty=nameWithType> -Schnittstelle und führt geringfügig besser als die <xref:System.String.CompareTo%28System.Object%29?displayProperty=nameWithType> -Methode, da er nicht verfügt, um zu bestimmen, ob die `strB` Argument ist ein Typ von änderbaren Wert, der mittels Boxing konvertiert werden muss, und es muss keine Umwandlung der Parameter aus einem <xref:System.Object> zu einem <xref:System.String>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1168">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.String.CompareTo%28System.Object%29?displayProperty=nameWithType> method, because it does not have to determine whether the `strB` argument is a mutable value type that must be boxed, and it does not have to cast its parameter from an <xref:System.Object> to a <xref:System.String>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1169">Im folgenden Beispiel wird die <xref:System.String.CompareTo%2A> Methode, um die aktuelle Zeichenfolgeninstanz mit einer anderen Zeichenfolge verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9380d-1169">The following example uses the <xref:System.String.CompareTo%2A> method to compare the current string instance with another string.</span></span>  
  
 [!code-cpp[stringcompareto#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringCompareTo/CPP/stringcompareto.cpp#1)]
 [!code-csharp[stringcompareto#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringCompareTo/CS/stringcompareto.cs#1)]
 [!code-vb[stringcompareto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringCompareTo/VB/stringcompareto.vb#1)]  
  
 <span data-ttu-id="9380d-1170">Im folgende Beispiel wird veranschaulicht, generische und nicht generischen Versionen der CompareTo-Methode für verschiedene Wert- und Referenztypen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1170">The following example demonstrates generic and non-generic versions of the CompareTo method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1171">
            <para>Zeichensätze enthalten Ignorierbare Zeichen. Die <see cref="M:System.String.CompareTo(System.String)" /> Methode berücksichtigt keine solche Zeichen, wenn er einen kulturabhängigen Vergleich ausführt. Angenommen, der folgende Code ausgeführt wird, auf der [! Include[netfx40_short](~/Includes/netfx40-Short-MD.MD)] oder später ein Vergleich der "Tier" mit "Ani-falsch" (mit einem bedingten Bindestrichs oder U + 00AD) gibt an, dass die beiden Zeichenfolgen entspricht.  [! code-csharp[System.String.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.compareto/cs/compareto2.cs#2)] [! code-vb[System.String.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.compareto/vb/compareto2.vb#2)]  Rufen Sie so, dass Ignorierbare Zeichen in einen Zeichenfolgenvergleich erkennen zu können, die <see cref="M:System.String.CompareOrdinal(System.String,System.String)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1171">
              <para>Character sets include ignorable characters. The <see cref="M:System.String.CompareTo(System.String)" /> method does not consider such characters when it performs a culture-sensitive comparison. For example, if the following code is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, a comparison of "animal" with "ani-mal" (using a soft hyphen, or U+00AD) indicates that the two strings are equivalent.  [!code-csharp[System.String.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.compareto/cs/compareto2.cs#2)] [!code-vb[System.String.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.compareto/vb/compareto2.vb#2)]  To recognize ignorable characters in a string comparison, call the <see cref="M:System.String.CompareOrdinal(System.String,System.String)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Concat">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-1172">Verkettet eine oder mehrere Instanzen von <see cref="T:System.String" /> oder die <see cref="T:System.String" />-Darstellungen der Werte einer oder mehrerer Instanzen von <see cref="T:System.Object" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1172">Concatenates one or more instances of <see cref="T:System.String" />, or the <see cref="T:System.String" /> representations of the values of one or more instances of <see cref="T:System.Object" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (System.Collections.Generic.IEnumerable&lt;string&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(class System.Collections.Generic.IEnumerable`1&lt;string&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (values As IEnumerable(Of String)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Concat : seq&lt;string&gt; -&gt; string" Usage="System.string.Concat values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="9380d-1173">Ein Auflistungsobjekt, das <see cref="T:System.Collections.Generic.IEnumerable`1" /> implementiert und dessen generisches Typargument <see cref="T:System.String" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1173">A collection object that implements <see cref="T:System.Collections.Generic.IEnumerable`1" /> and whose generic type argument is <see cref="T:System.String" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1174">Verkettet die Member einer erstellten <see cref="T:System.Collections.Generic.IEnumerable`1" />-Auflistung vom Typ <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1174">Concatenates the members of a constructed <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of type <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1175">Die verketteten Zeichenfolgen in <paramref name="values" /> oder <see cref="F:System.String.Empty" />, wenn <paramref name="values" /> ein leeres <see langword="IEnumerable(Of String)" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1175">The concatenated strings in <paramref name="values" />, or <see cref="F:System.String.Empty" /> if <paramref name="values" /> is an empty <see langword="IEnumerable(Of String)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1176">Die Methode verkettet, jedes Objekt in `values`; es werden Trennzeichen nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1176">The method concatenates each object in `values`; it does not add any delimiters.</span></span> <span data-ttu-id="9380d-1177">Ein Trennzeichen zwischen den einzelnen Elementen an `values`, rufen Sie die <xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1177">To specify a delimiter between each member of `values`, call the <xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method.</span></span>  
  
 <span data-ttu-id="9380d-1178">Ein <xref:System.String.Empty> diese Zeichenfolge wird verwendet, statt alle null-Element im `values`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1178">An <xref:System.String.Empty> string is used in place of any null element in `values`.</span></span>  
  
 <span data-ttu-id="9380d-1179">Wenn `values` ist eine leere `IEnumerable(Of String)`, gibt die Methode zurück <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1179">If `values` is an empty `IEnumerable(Of String)`, the method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-1180">Wenn `values` ist `null`, löst die Methode eine <xref:System.ArgumentNullException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="9380d-1180">If `values` is `null`, the method throws an <xref:System.ArgumentNullException> exception.</span></span>  
  
 <span data-ttu-id="9380d-1181"><xref:System.String.Concat%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%29> ist eine bequeme Methode, mit dem Sie verketten, jedes Element in einer `IEnumerable(Of String)` Auflistung ohne Elemente zunächst in ein Zeichenfolgenarray konvertiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1181"><xref:System.String.Concat%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%29> is a convenience method that lets you concatenate each element in an `IEnumerable(Of String)` collection without first converting the elements to a string array.</span></span> <span data-ttu-id="9380d-1182">Es ist besonders nützlich bei Abfrageausdrücken Language-Integrated Query (LINQ).</span><span class="sxs-lookup"><span data-stu-id="9380d-1182">It is particularly useful with Language-Integrated Query (LINQ) query expressions.</span></span> <span data-ttu-id="9380d-1183">Das folgende Beispiel übergibt eine `List(Of String)` Objekt, das die Groß- oder Kleinbuchstaben Buchstaben des Alphabets, einen Lambda-Ausdruck, die Buchstaben, die gleich oder größer als einen bestimmten Buchstaben enthält auswählt (die im Beispiel "M" ist).</span><span class="sxs-lookup"><span data-stu-id="9380d-1183">The following example passes a `List(Of String)` object that contains either the uppercase or lowercase letters of the alphabet to a lambda expression that selects letters that are equal to or greater than a particular letter (which, in the example, is "M").</span></span> <span data-ttu-id="9380d-1184">Die `IEnumerable(Of String)` -Auflistung, die von zurückgegeben wird die <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> Methode übergeben wird, um die <xref:System.String.Concat%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%29> Methode, um das Ergebnis als eine einzelne Zeichenfolge anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1184">The `IEnumerable(Of String)` collection that is returned by the <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> method is passed to the <xref:System.String.Concat%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method to display the result as a single string.</span></span>  
  
 [!code-csharp[System.String.Concat#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.concat/cs/concat2.cs#3)]
 [!code-vb[System.String.Concat#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.concat/vb/concat2.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1185">Im folgenden Beispiel wird den Algorithmus Sieb des Eratosthenes zum Berechnen von Primzahlen, die kleiner als oder gleich 100 sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1185">The following example uses the Sieve of Eratosthenes algorithm to calculate the prime numbers that are less than or equal to 100.</span></span> <span data-ttu-id="9380d-1186">Weist das Ergebnis an eine <xref:System.Collections.Generic.List%601> Objekt vom Typ <xref:System.String>, die es dann an übergibt die <xref:System.String.Concat%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1186">It assigns the result to a <xref:System.Collections.Generic.List%601> object of type <xref:System.String>, which it then passes to the <xref:System.String.Concat%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method.</span></span>  
  
 [!code-csharp[System.String.Concat#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.concat/cs/concat1.cs#2)]
 [!code-vb[System.String.Concat#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.concat/vb/concat1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1187">
            <paramref name="values" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1187">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (arg0 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Concat : obj -&gt; string" Usage="System.string.Concat arg0" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg0">
          <span data-ttu-id="9380d-1188">Das darzustellende Objekt oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1188">The object to represent, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1189">Erstellt die Zeichenfolgendarstellung eines angegebenen Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1189">Creates the string  representation of a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1190">Die Zeichenfolgendarstellung des Werts von <paramref name="arg0" /> oder <see cref="F:System.String.Empty" />, wenn <paramref name="arg0" /><see langword="null" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1190">The string representation of the value of <paramref name="arg0" />, or <see cref="F:System.String.Empty" /> if <paramref name="arg0" /> is <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1191">Die <xref:System.String.Concat%28System.Object%29> Methode stellt `arg0` als Zeichenfolge durch Aufrufen der parameterlosen `ToString` Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1191">The <xref:System.String.Concat%28System.Object%29> method represents `arg0` as a string by calling its parameterless `ToString` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1192">Das folgende Beispiel veranschaulicht die <xref:System.String.Concat%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1192">The following example demonstrates the <xref:System.String.Concat%2A> method.</span></span>  
  
 [!code-cpp[string.concat5#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.concat5/CPP/string.concat5.cpp#1)]
 [!code-csharp[string.concat5#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.concat5/CS/string.concat5.cs#1)]
 [!code-vb[string.concat5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.concat5/VB/string.concat5.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (ParamArray args As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Concat : obj[] -&gt; string" Usage="System.string.Concat args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="9380d-1193">Ein Objektarray, das die zu verkettenden Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1193">An object array that contains the elements to concatenate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1194">Verkettet die Zeichenfolgendarstellungen der Elemente in einem angegebenen <see cref="T:System.Object" />-Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1194">Concatenates the string representations of the elements in a specified <see cref="T:System.Object" /> array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1195">Die verketteten Zeichenfolgendarstellungen der Werte der Elemente in <paramref name="args" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1195">The concatenated string representations of the values of the elements in <paramref name="args" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1196">Die Methode verkettet, jedes Objekt in `args` durch Aufrufen der parameterlosen `ToString` Methode dieses Objekts; es werden Trennzeichen nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1196">The method concatenates each object in `args` by calling the parameterless `ToString` method of that object; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="9380d-1197"><xref:System.String.Empty?displayProperty=nameWithType> wird anstelle eines null-Objekts im Array verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1197"><xref:System.String.Empty?displayProperty=nameWithType> is used in place of any null object in the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1198">Das folgende Beispiel zeigt die Verwendung der <xref:System.String.Concat%2A> -Methode mit einer <xref:System.Object> Array.</span><span class="sxs-lookup"><span data-stu-id="9380d-1198">The following example demonstrates the use of the <xref:System.String.Concat%2A> method with an <xref:System.Object> array.</span></span>  
  
 [!code-csharp[stringconcat1#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringconcat1/CS/stringconcat1.cs#1)]
 [!code-vb[stringconcat1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringconcat1/VB/stringconcat1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1199">
            <paramref name="args" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1199">
              <paramref name="args" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="9380d-1200">Nicht genügend Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1200">Out of memory.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1201">
            <para>Diese Methode wird von C++-Code nicht aufgerufen. Der C++-Compiler löst Aufrufe von <see cref="Overload:System.String.Concat" /> deren vier oder mehr Objektparameter als Aufruf an <see cref="M:System.String.Concat(System.Object,System.Object,System.Object,System.Object)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1201">
              <para>This method is not called by C++ code. The C++ compiler resolves calls to <see cref="Overload:System.String.Concat" /> that have four or more object parameters as a call to <see cref="M:System.String.Concat(System.Object,System.Object,System.Object,System.Object)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (params string[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(string[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (ParamArray values As String()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(... cli::array &lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Concat : string[] -&gt; string" Usage="System.string.Concat values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="values">
          <span data-ttu-id="9380d-1202">Ein Array von Zeichenfolgeninstanzen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1202">An array of string instances.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1203">Verkettet die Elemente eines angegebenen <see cref="T:System.String" />-Arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1203">Concatenates the elements of a specified <see cref="T:System.String" /> array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1204">Die verketteten Elemente von <paramref name="values" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1204">The concatenated elements of <paramref name="values" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1205">Die Methode verkettet, jedes Objekt in `values`; es werden Trennzeichen nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1205">The method concatenates each object in `values`; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="9380d-1206">Ein <xref:System.String.Empty> Zeichenfolge anstelle eines null-Objekts im Array verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1206">An <xref:System.String.Empty> string is used in place of any null object in the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1207">Das folgende Beispiel zeigt die Verwendung der <xref:System.String.Concat%2A> -Methode mit einer <xref:System.String> Array.</span><span class="sxs-lookup"><span data-stu-id="9380d-1207">The following example demonstrates the use of the <xref:System.String.Concat%2A> method with a <xref:System.String> array.</span></span>  
  
 [!code-cpp[stringconcat3#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringconcat3/CPP/stringconcat3.cpp#1)]
 [!code-csharp[stringconcat3#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringconcat3/CS/stringconcat3.cs#1)]
 [!code-vb[stringconcat3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringconcat3/VB/stringconcat3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1208">
            <paramref name="values" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1208">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="9380d-1209">Nicht genügend Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1209">Out of memory.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (arg0 As Object, arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Concat : obj * obj -&gt; string" Usage="System.string.Concat (arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg0">
          <span data-ttu-id="9380d-1210">Das erste zu verkettende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1210">The first object to concatenate.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="9380d-1211">Das zweite zu verkettende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1211">The second object to concatenate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1212">Verkettet die Zeichenfolgendarstellungen zweier angegebener Objekte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1212">Concatenates the string representations of two specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1213">Die verketteten Zeichenfolgendarstellungen der Werte von <paramref name="arg0" /> und <paramref name="arg1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1213">The concatenated string representations of the values of <paramref name="arg0" /> and <paramref name="arg1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1214">Die Methode verkettet `arg0` und `arg1` durch Aufrufen der parameterlosen `ToString` -Methode der `arg0` und `arg1`; es werden Trennzeichen nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1214">The method concatenates `arg0` and `arg1` by calling the parameterless `ToString` method of `arg0` and `arg1`; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="9380d-1215"><xref:System.String.Empty?displayProperty=nameWithType> wird anstelle von null-Argumenten verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1215"><xref:System.String.Empty?displayProperty=nameWithType> is used in place of any null argument.</span></span>  
  
 <span data-ttu-id="9380d-1216">Wenn entweder der Argumente der Verweis auf ein Array ist, verkettet die Methode eine Zeichenfolge, die dieses Arrays, anstatt ihre Mitglieder (z. B. "System.String[]").</span><span class="sxs-lookup"><span data-stu-id="9380d-1216">If either of the arguments is an array reference, the method concatenates a string representing that array, instead of its members (for example, "System.String[]").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1217">Das folgende Beispiel veranschaulicht die <xref:System.String.Concat%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1217">The following example demonstrates the <xref:System.String.Concat%2A> method.</span></span>  
  
 [!code-cpp[string.concat5#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.concat5/CPP/string.concat5.cpp#1)]
 [!code-csharp[string.concat5#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.concat5/CS/string.concat5.cs#1)]
 [!code-vb[string.concat5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.concat5/VB/string.concat5.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (string str0, string str1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(string str0, string str1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (str0 As String, str1 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::String ^ str0, System::String ^ str1);" />
      <MemberSignature Language="F#" Value="static member Concat : string * string -&gt; string" Usage="System.string.Concat (str0, str1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str0" Type="System.String" />
        <Parameter Name="str1" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str0">
          <span data-ttu-id="9380d-1218">Die erste zu verkettende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1218">The first string to concatenate.</span>
          </span>
        </param>
        <param name="str1">
          <span data-ttu-id="9380d-1219">Die zweite zu verkettende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1219">The second string to concatenate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1220">Verkettet zwei angegebene Instanzen von <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1220">Concatenates two specified instances of <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1221">Die Verkettung von <paramref name="str0" /> und <paramref name="str1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1221">The concatenation of <paramref name="str0" /> and <paramref name="str1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1222">Die Methode verkettet `str0` und `str1`; es werden Trennzeichen nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1222">The method concatenates `str0` and `str1`; it does not add any delimiters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-1223">Sie können auch die Sprache der Operator für zeichenfolgenverkettungen, verwenden, z. B. `+` in c# oder `&` und `+` in Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-1223">You can also use your language's string concatenation operator, such as `+` in C#, or `&` and `+` in Visual Basic)</span></span>  
>   
>  <span data-ttu-id="9380d-1224">, um Zeichenfolgen zu verketten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1224">, to concatenate strings.</span></span>  
  
 <span data-ttu-id="9380d-1225">Ein <xref:System.String.Empty> diese Zeichenfolge wird anstelle von null-Argumenten verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1225">An <xref:System.String.Empty> string is used in place of any null argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1226">Das folgende Beispiel, verkettet den Namen einer Person vor-, zweit- und letzte.</span><span class="sxs-lookup"><span data-stu-id="9380d-1226">The following example concatenates a person's first, middle, and last name.</span></span>  
  
 [!code-cpp[stringconcat4#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringconcat4/CPP/stringconcat4.cpp#1)]
 [!code-csharp[stringconcat4#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringconcat4/CS/stringconcat4.cs#1)]
 [!code-vb[stringconcat4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringconcat4/VB/stringconcat4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (arg0 As Object, arg1 As Object, arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Concat : obj * obj * obj -&gt; string" Usage="System.string.Concat (arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg0">
          <span data-ttu-id="9380d-1227">Das erste zu verkettende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1227">The first object to concatenate.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="9380d-1228">Das zweite zu verkettende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1228">The second object to concatenate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="9380d-1229">Das dritte zu verkettende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1229">The third object to concatenate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1230">Verkettet die Zeichenfolgendarstellungen von drei angegebenen Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1230">Concatenates the string representations of three specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1231">Die verketteten Zeichenfolgendarstellungen der Werte von <paramref name="arg0" />, <paramref name="arg1" /> und <paramref name="arg2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1231">The concatenated string representations of the values of <paramref name="arg0" />, <paramref name="arg1" />, and <paramref name="arg2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1232">Die Methode verkettet `arg0`, `arg1`, und `arg2` durch Aufrufen der parameterlosen `ToString` -Methode aller Objekte; es werden Trennzeichen nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1232">The method concatenates `arg0`, `arg1`, and `arg2` by calling the parameterless `ToString` method of each object; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="9380d-1233"><xref:System.String.Empty?displayProperty=nameWithType> wird anstelle von null-Argumenten verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1233"><xref:System.String.Empty?displayProperty=nameWithType> is used in place of any null argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1234">Das folgende Beispiel veranschaulicht die <xref:System.String.Concat%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1234">The following example demonstrates the <xref:System.String.Concat%2A> method.</span></span>  
  
 [!code-cpp[string.concat5#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.concat5/CPP/string.concat5.cpp#1)]
 [!code-csharp[string.concat5#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.concat5/CS/string.concat5.cs#1)]
 [!code-vb[string.concat5#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.concat5/VB/string.concat5.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (string str0, string str1, string str2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(string str0, string str1, string str2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (str0 As String, str1 As String, str2 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::String ^ str0, System::String ^ str1, System::String ^ str2);" />
      <MemberSignature Language="F#" Value="static member Concat : string * string * string -&gt; string" Usage="System.string.Concat (str0, str1, str2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str0" Type="System.String" />
        <Parameter Name="str1" Type="System.String" />
        <Parameter Name="str2" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str0">
          <span data-ttu-id="9380d-1235">Die erste zu verkettende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1235">The first string to concatenate.</span>
          </span>
        </param>
        <param name="str1">
          <span data-ttu-id="9380d-1236">Die zweite zu verkettende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1236">The second string to concatenate.</span>
          </span>
        </param>
        <param name="str2">
          <span data-ttu-id="9380d-1237">Die dritte zu verkettende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1237">The third string to concatenate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1238">Verkettet zwei angegebene Instanzen von <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1238">Concatenates three specified instances of <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1239">Die Verkettung von <paramref name="str0" />, <paramref name="str1" /> und <paramref name="str2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1239">The concatenation of <paramref name="str0" />, <paramref name="str1" />, and <paramref name="str2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1240">Die Methode verkettet `str0`, `str1`, und `str2`; es werden Trennzeichen nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1240">The method concatenates `str0`, `str1`, and `str2`; it does not add any delimiters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-1241">Sie können auch die Sprache der Operator für zeichenfolgenverkettungen, verwenden, z. B. `+` in c# oder `&` und `+` in Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-1241">You can also use your language's string concatenation operator, such as `+` in C#, or `&` and `+` in Visual Basic)</span></span>  
>   
>  <span data-ttu-id="9380d-1242">, um Zeichenfolgen zu verketten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1242">, to concatenate strings.</span></span>  
  
 <span data-ttu-id="9380d-1243">Ein <xref:System.String.Empty> diese Zeichenfolge wird anstelle von null-Argumenten verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1243">An <xref:System.String.Empty> string is used in place of any null argument.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1244">Im folgenden Beispiel wird die <xref:System.String.Concat%2A> Methode zum Verketten von drei Zeichenfolgen und das Ergebnis wird angezeigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1244">The following example uses the <xref:System.String.Concat%2A> method to concatenate three strings and displays the result.</span></span>  
  
 [!code-cpp[System.String.Concat#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.concat/cpp/Concat6.cpp#6)]
 [!code-csharp[System.String.Concat#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.concat/cs/Concat6.cs#6)]
 [!code-vb[System.String.Concat#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.concat/vb/Concat6.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (object arg0, object arg1, object arg2, object arg3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(object arg0, object arg1, object arg2, object arg3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.Object,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (arg0 As Object, arg1 As Object, arg2 As Object, arg3 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2, System::Object ^ arg3);" />
      <MemberSignature Language="F#" Value="static member Concat : obj * obj * obj * obj -&gt; string" Usage="System.string.Concat (arg0, arg1, arg2, arg3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
        <Parameter Name="arg3" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="arg0">
          <span data-ttu-id="9380d-1245">Das erste zu verkettende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1245">The first object to concatenate.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="9380d-1246">Das zweite zu verkettende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1246">The second object to concatenate.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="9380d-1247">Das dritte zu verkettende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1247">The third object to concatenate.</span>
          </span>
        </param>
        <param name="arg3">
          <span data-ttu-id="9380d-1248">Das vierte zu verkettende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1248">The fourth object to concatenate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1249">Verkettet die Zeichenfolgenentsprechungen von vier angegebenen Objekten sowie aller in einer optionalen Parameterliste variabler Länger angegebenen Objekte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1249">Concatenates the string representations of four specified objects and any objects specified in an optional variable length parameter list.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1250">Die verkettete Zeichenfolgendarstellung aller Werte in der Parameterliste.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1250">The concatenated string representation of each value in the parameter list.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="9380d-1251">Diese API ist nicht CLS-kompatibel.</span><span class="sxs-lookup"><span data-stu-id="9380d-1251">This API is not CLS-compliant.</span></span> <span data-ttu-id="9380d-1252">Die CLS-kompatible Alternative ist <xref:System.String.Concat%28System.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1252">The CLS-compliant alternative is <xref:System.String.Concat%28System.Object%5B%5D%29?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-1253">Die C#- und Visual Basic-Compiler lösen einen Aufruf dieser Methode automatisch als Aufruf an <xref:System.String.Concat%28System.Object%5B%5D%29?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1253">The C# and Visual Basic compilers automatically resolve a call to this method as a call to <xref:System.String.Concat%28System.Object%5B%5D%29?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9380d-1254">Verkettet die Methode jedes Objekt in der Liste durch Aufrufen der parameterlosen `ToString` Methode; sie werden keine Trennzeichen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1254">The method concatenates each object in the parameter list by calling its parameterless `ToString` method; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="9380d-1255"><xref:System.String.Empty?displayProperty=nameWithType> wird anstelle von null-Argumenten verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1255"><xref:System.String.Empty?displayProperty=nameWithType> is used in place of any null argument.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-1256">Der letzte Parameter von der <xref:System.String.Concat%2A> Methode ist eine optionale durch Trennzeichen getrennte Liste von einem oder mehreren zusätzlichen Objekten zu verketten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1256">The last parameter of the  <xref:System.String.Concat%2A> method is an optional comma-delimited list of one or more additional objects to concatenate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1257">Das folgende Beispiel veranschaulicht die Verwendung der <xref:System.String.Concat%28System.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> Methode, um eine Liste der Variablenparameter verketten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1257">The following example illustrates the use of the <xref:System.String.Concat%28System.Object%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method to concatenate a list of variable parameters.</span></span> <span data-ttu-id="9380d-1258">In diesem Fall wird die Methode mit neun Parametern aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1258">In this case, the method is called with nine parameters.</span></span>  
  
 [!code-csharp[System.String.Concat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.concat/cs/concat4.cs#1)]
 [!code-vb[System.String.Concat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.concat/vb/concat4.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1259">
            <para>Diese Methode ist mit markiert die <see langword="vararg" /> -Schlüsselwort, das bedeutet, dass es sich um eine Variable Anzahl an Parametern unterstützt. Die Methode kann aufgerufen werden, von Visual C++, aber es kann nicht in c# oder Visual Basic-Code aufgerufen werden. Die C#- und Visual Basic-Compiler lösen Aufrufe von <see cref="M:System.String.Concat(System.Object,System.Object,System.Object,System.Object)" /> als Aufrufe von <see cref="M:System.String.Concat(System.Object[])" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1259">
              <para>This method is marked with the <see langword="vararg" /> keyword, which means that it supports a variable number of parameters. The method can be called from Visual C++, but it cannot be called from C# or Visual Basic code. The C# and Visual Basic compilers resolve calls to <see cref="M:System.String.Concat(System.Object,System.Object,System.Object,System.Object)" /> as calls to <see cref="M:System.String.Concat(System.Object[])" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Concat">
      <MemberSignature Language="C#" Value="public static string Concat (string str0, string str1, string str2, string str3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat(string str0, string str1, string str2, string str3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat(System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat (str0 As String, str1 As String, str2 As String, str3 As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Concat(System::String ^ str0, System::String ^ str1, System::String ^ str2, System::String ^ str3);" />
      <MemberSignature Language="F#" Value="static member Concat : string * string * string * string -&gt; string" Usage="System.string.Concat (str0, str1, str2, str3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str0" Type="System.String" />
        <Parameter Name="str1" Type="System.String" />
        <Parameter Name="str2" Type="System.String" />
        <Parameter Name="str3" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str0">
          <span data-ttu-id="9380d-1260">Die erste zu verkettende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1260">The first string to concatenate.</span>
          </span>
        </param>
        <param name="str1">
          <span data-ttu-id="9380d-1261">Die zweite zu verkettende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1261">The second string to concatenate.</span>
          </span>
        </param>
        <param name="str2">
          <span data-ttu-id="9380d-1262">Die dritte zu verkettende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1262">The third string to concatenate.</span>
          </span>
        </param>
        <param name="str3">
          <span data-ttu-id="9380d-1263">Die vierte zu verkettende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1263">The fourth string to concatenate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1264">Verkettet zwei angegebene Instanzen von <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1264">Concatenates four specified instances of <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1265">Die Verkettung von <paramref name="str0" />, <paramref name="str1" />, <paramref name="str2" /> und <paramref name="str3" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1265">The concatenation of <paramref name="str0" />, <paramref name="str1" />, <paramref name="str2" />, and <paramref name="str3" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1266">Die Methode verkettet `str0`, `str1`, `str2`, und `str3`; es werden Trennzeichen nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1266">The method concatenates `str0`, `str1`, `str2`, and `str3`; it does not add any delimiters.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-1267">Sie können auch die Sprache der Operator für zeichenfolgenverkettungen, verwenden, z. B. `+` in c# oder `&` und `+` in Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-1267">You can also use your language's string concatenation operator, such as `+` in C#, or `&` and `+` in Visual Basic)</span></span>  
>   
>  <span data-ttu-id="9380d-1268">, um Zeichenfolgen zu verketten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1268">, to concatenate strings.</span></span>  
  
 <span data-ttu-id="9380d-1269">Ein <xref:System.String.Empty> Zeichenfolge anstelle eines null-Objekts im Array verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1269">An <xref:System.String.Empty> string is used in place of any null object in the array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1270">Im folgenden Beispiel definiert ein Array von vier Buchstaben Wörter und die einzelnen Buchstaben in ein Zeichenfolgenarray gespeichert, um sie der Zeichenfolge durcheinanderbringen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1270">The following example defines an array of four-letter words and stores their individual letters to a string array in order to scramble them.</span></span> <span data-ttu-id="9380d-1271">Es ruft dann die <xref:System.String.Concat%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> Methode, um die unverständliche Wörter wieder zusammensetzen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1271">It then calls the <xref:System.String.Concat%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29> method to reassemble the scrambled words.</span></span>  
  
 [!code-csharp[System.String.Concat#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.concat/cs/concat4.cs#1)]
 [!code-vb[System.String.Concat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.concat/vb/concat4.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
      </Docs>
    </Member>
    <Member MemberName="Concat&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static string Concat&lt;T&gt; (System.Collections.Generic.IEnumerable&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Concat&lt;T&gt;(class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Concat``1(System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Concat(Of T) (values As IEnumerable(Of T)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::String ^ Concat(System::Collections::Generic::IEnumerable&lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Concat : seq&lt;'T&gt; -&gt; string" Usage="System.string.Concat values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="9380d-1272">Der Typ der Elemente der <c>Werte</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1272">The type of the members of <c>values</c>.</span>
          </span>
        </typeparam>
        <param name="values">
          <span data-ttu-id="9380d-1273">Ein Auflistungsobjekt, das die <see cref="T:System.Collections.Generic.IEnumerable`1" />-Schnittstelle implementiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1273">A collection object that implements the <see cref="T:System.Collections.Generic.IEnumerable`1" /> interface.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1274">Verkettet die Member einer <see cref="T:System.Collections.Generic.IEnumerable`1" />-Implementierung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1274">Concatenates the members of an <see cref="T:System.Collections.Generic.IEnumerable`1" /> implementation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1275">Die verketteten Zeichenfolgen in <paramref name="values" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1275">The concatenated members in <paramref name="values" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1276">Die Methode verkettet, jedes Objekt in `values`; es werden Trennzeichen nicht hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1276">The method concatenates each object in `values`; it does not add any delimiters.</span></span>  
  
 <span data-ttu-id="9380d-1277">Ein <xref:System.String.Empty> diese Zeichenfolge wird anstelle von null-Argumenten verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1277">An <xref:System.String.Empty> string is used in place of any null argument.</span></span>  
  
 <span data-ttu-id="9380d-1278"><xref:System.String.Concat%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> ist eine bequeme Methode, mit dem Sie verketten, jedes Element in einer <xref:System.Collections.Generic.IEnumerable%601> Auflistung ohne Elemente zunächst in Zeichenfolgen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1278"><xref:System.String.Concat%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> is a convenience method that lets you concatenate each element in an <xref:System.Collections.Generic.IEnumerable%601> collection without first converting the elements to strings.</span></span> <span data-ttu-id="9380d-1279">Es ist besonders nützlich bei Abfrageausdrücken Language-Integrated Query (LINQ), wie im Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="9380d-1279">It is particularly useful with Language-Integrated Query (LINQ) query expressions, as the example illustrates.</span></span> <span data-ttu-id="9380d-1280">Die Zeichenfolgendarstellung der einzelnen Objekte in der <xref:System.Collections.Generic.IEnumerable%601> Auflistung wird durch Aufrufen des Objekts abgeleitet `ToString` Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1280">The string representation of each object in the <xref:System.Collections.Generic.IEnumerable%601> collection is derived by calling that object's `ToString` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1281">Das folgende Beispiel definiert eine sehr einfache `Animal` Klasse enthält den Namen des Tieres und die Reihenfolge an, zu dem er gehört.</span><span class="sxs-lookup"><span data-stu-id="9380d-1281">The following example defines a very simple `Animal` class that contains the name of an animal and the order to which it belongs.</span></span> <span data-ttu-id="9380d-1282">Es definiert dann eine <xref:System.Collections.Generic.List%601> Objekt, das eine Reihe von enthalten `Animal` Objekte.</span><span class="sxs-lookup"><span data-stu-id="9380d-1282">It then defines a <xref:System.Collections.Generic.List%601> object to contain a number of `Animal` objects.</span></span> <span data-ttu-id="9380d-1283">Die <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> Erweiterungsmethode aufgerufen, um das Extrahieren der `Animal` Objekte, deren `Order` -Eigenschaft gleich "Nagetier".</span><span class="sxs-lookup"><span data-stu-id="9380d-1283">The <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> extension method is called to extract the `Animal` objects whose `Order` property equals "Rodent".</span></span> <span data-ttu-id="9380d-1284">Das Ergebnis wird zum Übergeben der <xref:System.String.Concat%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> Methode und in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1284">The result is passed to the <xref:System.String.Concat%60%601%28System.Collections.Generic.IEnumerable%7B%60%600%7D%29> method and displayed to the console.</span></span>  
  
 [!code-csharp[System.String.Concat#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.concat/cs/concat3.cs#4)]
 [!code-vb[System.String.Concat#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.concat/vb/concat3.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1285">
            <paramref name="values" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1285">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Contains(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(char value);" />
      <MemberSignature Language="F#" Value="member this.Contains : char -&gt; bool" Usage="string.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Contains : string -&gt; bool" Usage="string.Contains value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1286">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1286">The string to seek.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1287">Gibt einen Wert zurück, der angibt, ob eine angegebene untergeordnete Zeichenfolge in dieser Zeichenfolge vorkommt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1287">Returns a value indicating whether a specified substring occurs within this string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1288">
            <see langword="true" />, wenn der <paramref name="value" />-Parameter in dieser Zeichenfolge vorkommt oder <paramref name="value" /> eine leere Zeichenfolge ("") ist; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1288">
              <see langword="true" /> if the <paramref name="value" /> parameter occurs within this string, or if <paramref name="value" /> is the empty string (""); otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1289">Diese Methode führt einen Ordinalvergleich der (Groß-/Kleinschreibung beachtet und kulturunabhängige).</span><span class="sxs-lookup"><span data-stu-id="9380d-1289">This method performs an ordinal (case-sensitive and culture-insensitive) comparison.</span></span> <span data-ttu-id="9380d-1290">Die Suche beginnt an der Position des ersten Zeichens dieser Zeichenfolge und wird fortgesetzt, bis der letzten Zeichenposition.</span><span class="sxs-lookup"><span data-stu-id="9380d-1290">The search begins at the first character position of this string and continues through the last character position.</span></span>  
  
 <span data-ttu-id="9380d-1291">Um zu bestimmen, ob eine Zeichenfolge eine angegebene Teilzeichenfolge mit etwas anderes als ordinaler Vergleich (z. B. ein kulturabhängiger Vergleich oder Groß-/Kleinschreibung Ordinalvergleich) enthält, können Sie eine benutzerdefinierte Methode erstellen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1291">To determine whether a string contains a specified substring by using something other than ordinal comparison (such as culture-sensitive comparison, or ordinal case-insensitive comparison), you can create a custom method.</span></span> <span data-ttu-id="9380d-1292">Das folgende Beispiel veranschaulicht einen solchen Ansatz.</span><span class="sxs-lookup"><span data-stu-id="9380d-1292">The following example illustrates one such approach.</span></span> <span data-ttu-id="9380d-1293">Definiert eine <xref:System.String> -Erweiterungsmethode, die enthält eine <xref:System.StringComparison> Parameter und gibt an, ob eine Zeichenfolge eine Teilzeichenfolge enthält, wenn das angegebene Formular des Zeichenfolgenvergleichs verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1293">It defines a <xref:System.String> extension method  that includes a <xref:System.StringComparison> parameter and indicates whether a string contains a substring when using the specified form of string comparison.</span></span>  
  
 [!code-csharp[System.String.Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Contains/cs/ContainsExt1.cs#1)]
 [!code-vb[System.String.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Contains/vb/ContainsExt1.vb#1)]  
  
 <span data-ttu-id="9380d-1294">Das folgende Beispiel ruft dann die `Contains` Erweiterungsmethode, um zu bestimmen, ob eine Teilzeichenfolge in einer Zeichenfolge gefunden wird, wenn ordinaler Vergleich und die Groß-/Kleinschreibung Ordinalvergleich verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1294">The following example then calls the `Contains` extension method to determine whether a substring is found in a string when using ordinal comparison and case-insensitive ordinal comparison.</span></span>  
  
 [!code-csharp[System.String.Contains#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Contains/cs/ContainsExt1.cs#2)]
 [!code-vb[System.String.Contains#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Contains/vb/ContainsExt1.vb#2)]  
  
 <span data-ttu-id="9380d-1295">Wenn Sie die Position der Teilzeichenfolge interessiert sind `value` in der aktuellen Instanz ist, können Sie Aufrufen der <xref:System.String.IndexOf%2A> -Methode zum Abrufen der Position des ersten Vorkommens, oder Sie können Aufrufen der <xref:System.String.LastIndexOf%2A> -Methode zum Abrufen der ab der position der Letztes auftreten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1295">If you are interested in the position of the substring `value` in the current instance, you can call the <xref:System.String.IndexOf%2A> method to get the starting position of its first occurrence, or you can call the <xref:System.String.LastIndexOf%2A> method to get the starting position of its last occurrence.</span></span> <span data-ttu-id="9380d-1296">Das Beispiel enthält einen Aufruf an die <xref:System.String.IndexOf%28System.String%29> Methode, wenn in einer Zeichenfolgeninstanz eine Teilzeichenfolge gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-1296">The example includes a call to the <xref:System.String.IndexOf%28System.String%29> method if a substring is found in a string instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1297">Im folgenden Beispiel wird bestimmt, ob die Zeichenfolge "Fuchs" eine Teilzeichenfolge eines Angebots vertraut.</span><span class="sxs-lookup"><span data-stu-id="9380d-1297">The following example determines whether the string "fox" is a substring of a familiar quotation.</span></span> <span data-ttu-id="9380d-1298">Wenn "Fuchs" in der Zeichenfolge gefunden werden, wird auch die Position des ersten angezeigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1298">If "fox" is found in the string, it also displays its starting position.</span></span>  
  
 [!code-cpp[String.Contains#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.contains/CPP/cont.cpp#1)]
 [!code-csharp[String.Contains#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.contains/CS/cont.cs#1)]
 [!code-vb[String.Contains#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.contains/VB/cont.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1299">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1299">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOf(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (char value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(char value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Contains(System.Char,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Char, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(char value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.Contains : char * StringComparison -&gt; bool" Usage="string.Contains (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Contains(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.Contains : string * StringComparison -&gt; bool" Usage="string.Contains (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static string Copy (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Copy(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Copy(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Copy (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Copy(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Copy : string -&gt; string" Usage="System.string.Copy str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="9380d-1300">Die zu kopierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1300">The string to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1301">Erstellt eine neue Instanz von <see cref="T:System.String" /> mit demselben Wert wie eine angegebene Instanz von <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1301">Creates a new instance of <see cref="T:System.String" /> with the same value as a specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1302">Eine neue Zeichenfolge mit demselben Wert wie <paramref name="str" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1302">A new string with the same value as <paramref name="str" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1303">Die <xref:System.String.Copy%2A> Methode gibt eine <xref:System.String> Objekt, das den gleichen Wert wie die ursprüngliche Zeichenfolge aber einen anderes Objektverweis darstellt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1303">The <xref:System.String.Copy%2A> method returns a <xref:System.String> object that has the same value as the original string but represents a different object reference.</span></span> <span data-ttu-id="9380d-1304">Es unterscheidet sich vom eine Zuweisungsoperation, die einen vorhandenen Zeichenfolgenverweis auf eine zusätzliche Objektvariable weist.</span><span class="sxs-lookup"><span data-stu-id="9380d-1304">It differs from an assignment operation, which assigns an existing string reference to an additional object variable.</span></span> <span data-ttu-id="9380d-1305">Das Beispiel veranschaulicht den Unterschied.</span><span class="sxs-lookup"><span data-stu-id="9380d-1305">The example illustrates the difference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1306">Im folgende Beispiel werden zwei Zeichenfolgenobjekte mit unterschiedlichen Werten erstellt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1306">The following example creates two string objects with different values.</span></span> <span data-ttu-id="9380d-1307">Bei Aufruf der <xref:System.String.Copy%2A> Methode zum Zuweisen des ersten Werts in der zweiten Zeichenfolge, die Ausgabe gibt an, dass die Zeichenfolgen verschiedene Objektverweise darstellen, obwohl Sie jetzt ihre Werte gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1307">When it calls the <xref:System.String.Copy%2A> method to assign the first value to the second string, the output indicates that the strings represent different object references although their values are now equal.</span></span> <span data-ttu-id="9380d-1308">Andererseits, wenn die erste Zeichenfolge, die zweite Zeichenfolge zugewiesen wird, verfügen beide Zeichenfolgen über identische Werte, da sie auf den gleichen Objektverweis darstellen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1308">On the other hand, when the first string is assigned to the second string, the two strings have identical values because they represent the same object reference.</span></span>  
  
 [!code-csharp[System.String.Copy#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.copy/cs/copy1.cs#1)]
 [!code-vb[System.String.Copy#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.copy/vb/copy1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1309">
            <paramref name="str" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1309">
              <paramref name="str" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (int sourceIndex, char[] destination, int destinationIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(int32 sourceIndex, char[] destination, int32 destinationIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (sourceIndex As Integer, destination As Char(), destinationIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(int sourceIndex, cli::array &lt;char&gt; ^ destination, int destinationIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : int * char[] * int * int -&gt; unit" Usage="string.CopyTo (sourceIndex, destination, destinationIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destination" Type="System.Char[]" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceIndex">
          <span data-ttu-id="9380d-1310">Der Index des ersten Zeichens in dieser Instanz, das kopiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1310">The index of the first character in this instance to copy.</span>
          </span>
        </param>
        <param name="destination">
          <span data-ttu-id="9380d-1311">Ein Array von Unicode-Zeichen, in das Zeichen in dieser Instanz kopiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1311">An array of Unicode characters to which characters in this instance are copied.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="9380d-1312">Der Index in <c>destination</c>, bei dem der Kopiervorgang beginnt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1312">The index in <c>destination</c> at which the copy operation begins.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-1313">Die Anzahl der Zeichen in dieser Instanz, die nach <c>destination</c> kopiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1313">The number of characters in this instance to copy to <c>destination</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1314">Kopiert eine angegebene Anzahl von Zeichen von einer angegebenen Position in dieser Instanz an eine angegebene Position in einem Array von Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1314">Copies a specified number of characters from a specified position in this instance to a specified position in an array of Unicode characters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1315">Diese Methode kopiert `count` Zeichen aus der `sourceIndex` Position dieser Instanz mit der `destinationIndex` position `destination` Zeichenarray.</span><span class="sxs-lookup"><span data-stu-id="9380d-1315">This method copies `count` characters from the `sourceIndex` position of this instance to the `destinationIndex` position of `destination` character array.</span></span> <span data-ttu-id="9380d-1316">Diese Methode ändert nicht die Größe der `destination` Zeichenarray; muss eine ausreichende Anzahl von Elementen, die die kopierten Zeichen aufzunehmen, oder die Methode löst eine <xref:System.ArgumentOutOfRangeException>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1316">This method does not resize the `destination` character array; it must have a sufficient number of elements to accommodate the copied characters or the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="9380d-1317">`sourceIndex` und `destinationIndex` sind nullbasiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1317">`sourceIndex` and `destinationIndex` are zero-based.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1318">Das folgende Beispiel veranschaulicht die <xref:System.String.CopyTo%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1318">The following example demonstrates the <xref:System.String.CopyTo%2A> method.</span></span>  
  
 [!code-cpp[stringcopyto#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringcopyto/CPP/stringcopyto.cpp#1)]
 [!code-csharp[stringcopyto#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringcopyto/CS/stringcopyto.cs#1)]
 [!code-vb[stringcopyto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringcopyto/VB/stringcopyto.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1319">
            <paramref name="destination" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1319">
              <paramref name="destination" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1320">
            <paramref name="sourceIndex" />, <paramref name="destinationIndex" /> oder <paramref name="count" /> ist negativ.  Oder:  <paramref name="sourceIndex" /> identifiziert keine Position in der aktuellen Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1320">
              <paramref name="sourceIndex" />, <paramref name="destinationIndex" />, or <paramref name="count" /> is negative  -or-  <paramref name="sourceIndex" /> does not identify a position in the current instance.</span>
          </span>
          <span data-ttu-id="9380d-1321">Oder:  <paramref name="destinationIndex" /> identifiziert keinen gültigen Index im <paramref name="destination" />-Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1321">-or-  <paramref name="destinationIndex" /> does not identify a valid index in the <paramref name="destination" /> array.</span>
          </span>
          <span data-ttu-id="9380d-1322">Oder:  <paramref name="count" /> ist größer als die Länge der Teilzeichenfolge von <paramref name="sourceIndex" /> zum Ende dieser Instanz.  Oder:  <paramref name="count" /> ist größer als die Länge des Teilarrays von <paramref name="destinationIndex" /> zum Ende des <paramref name="destination" />-Arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1322">-or-  <paramref name="count" /> is greater than the length of the substring from <paramref name="sourceIndex" /> to the end of this instance  -or-  <paramref name="count" /> is greater than the length of the subarray from <paramref name="destinationIndex" /> to the end of the <paramref name="destination" /> array.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Create&lt;TState&gt;">
      <MemberSignature Language="C#" Value="public static string Create&lt;TState&gt; (int length, TState state, System.Buffers.SpanAction&lt;char,TState&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Create&lt;TState&gt;(int32 length, !!TState state, class System.Buffers.SpanAction`2&lt;char, !!TState&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Create``1(System.Int32,``0,System.Buffers.SpanAction{System.Char,``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create(Of TState) (length As Integer, state As TState, action As SpanAction(Of Char, TState)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TState&gt;&#xA; static System::String ^ Create(int length, TState state, System::Buffers::SpanAction&lt;char, TState&gt; ^ action);" />
      <MemberSignature Language="F#" Value="static member Create : int * 'State * System.Buffers.SpanAction&lt;char, 'State&gt; -&gt; string" Usage="System.string.Create (length, state, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TState" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="state" Type="TState" />
        <Parameter Name="action" Type="System.Buffers.SpanAction&lt;System.Char,TState&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TState">To be added.</typeparam>
        <param name="length">To be added.</param>
        <param name="state">To be added.</param>
        <param name="action">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly string Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string Empty" />
      <MemberSignature Language="DocId" Value="F:System.String.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : string" Usage="System.string.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-1323">Stellt die leere Zeichenfolge dar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1323">Represents the empty string.</span>
          </span>
          <span data-ttu-id="9380d-1324">Dieses Feld ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1324">This field is read-only.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1325">Der Wert dieses Felds ist die Zeichenfolge der Länge 0 (null), "".</span><span class="sxs-lookup"><span data-stu-id="9380d-1325">The value of this field is the zero-length string, "".</span></span>  
  
 <span data-ttu-id="9380d-1326">Im Code wird dieses Feld am häufigsten in Zuweisungen verwendet, um eine String-Variable auf eine leere Zeichenfolge zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-1326">In application code, this field is most commonly used in assignments to initialize a string variable to an empty string.</span></span> <span data-ttu-id="9380d-1327">Um zu testen, ob der Wert einer Zeichenfolge entweder `null` oder <xref:System.String.Empty?displayProperty=nameWithType>, verwenden Sie die <xref:System.String.IsNullOrEmpty%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1327">To test whether the value of a string is either `null` or <xref:System.String.Empty?displayProperty=nameWithType>, use the <xref:System.String.IsNullOrEmpty%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.IsNullOrEmpty(System.String)" />
        <altmember cref="M:System.String.IsNullOrWhiteSpace(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="EndsWith">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-1328">Bestimmt, ob das Ende dieser Zeichenfolgeninstanz mit einer angegebenen Zeichenfolge übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1328">Determines whether the end of this string instance matches a specified string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.EndsWith(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(char value);" />
      <MemberSignature Language="F#" Value="member this.EndsWith : char -&gt; bool" Usage="string.EndsWith value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.EndsWith(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string -&gt; bool" Usage="string.EndsWith value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1329">Die Zeichenfolge, die mit der Teilzeichenfolge am Ende dieser Instanz verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1329">The string to compare to the substring at the end of this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1330">Bestimmt, ob das Ende dieser Zeichenfolgeninstanz mit der angegebenen Zeichenfolge übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1330">Determines whether the end of this string instance matches the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1331">
            <see langword="true" />, wenn <paramref name="value" /> mit dem Ende dieser Instanz übereinstimmt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1331">
              <see langword="true" /> if <paramref name="value" /> matches the end of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1332">Diese Methode vergleicht `value` mit der Teilzeichenfolge am Ende dieser Instanz, die gleiche Länge wie `value`, und gibt einen Wert zurück, ob diese gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1332">This method compares `value` to the substring at the end of this instance that is the same length as `value`, and returns an indication whether they are equal.</span></span> <span data-ttu-id="9380d-1333">Gleich, `value` muss ein Verweis auf die gleiche Instanz sein oder mit dem Ende dieser Instanz übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1333">To be equal, `value` must be a reference to this same instance or match the end of this instance.</span></span>  
  
 <span data-ttu-id="9380d-1334">Diese Methode vergleicht Word (Groß-/Kleinschreibung beachtet und kulturabhängige) mit der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1334">This method performs a word (case-sensitive and culture-sensitive) comparison using the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1335">Das folgende Beispiel gibt an, ob jede Zeichenfolge in ein Array mit einem Punkt endet (".").</span><span class="sxs-lookup"><span data-stu-id="9380d-1335">The following example indicates whether each string in an array ends with a period (".").</span></span>  
  
 [!code-csharp[System.String.EndsWith#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.EndsWith/cs/EndsWith1.cs#1)]
 [!code-vb[System.String.EndsWith#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.EndsWith/vb/EndsWith1.vb#1)]  
  
 <span data-ttu-id="9380d-1336">Das folgende Beispiel definiert eine `StripEndTags` Methode, verwendet der <xref:System.String.EndsWith%28System.String%29> Methode, um HTML-Endtags vom Ende einer Zeile zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1336">The following example defines a `StripEndTags` method that uses the <xref:System.String.EndsWith%28System.String%29> method to remove HTML end tags from the end of a line.</span></span> <span data-ttu-id="9380d-1337">Beachten Sie, dass die `StripEndTags` Methode rekursiv aufgerufen, um sicherzustellen, dass mehrere HTML-End-Tags am Ende der Zeile entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1337">Note that the  `StripEndTags` method is called recursively to ensure that multiple HTML end tags at the end of the line are removed.</span></span>  
  
 [!code-cpp[stringendswith#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringendswith/CPP/stringendswith.cpp#1)]
 [!code-csharp[stringendswith#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringendswith/CS/stringendswith.cs#1)]
 [!code-vb[stringendswith#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringendswith/VB/stringendswith.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1338">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1338">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1339">
            <para>Wie unter [bewährte Methoden für Strings](~/docs/standard/base-types/best-practices-strings.md) verwenden, es wird empfohlen, dass Sie vermeiden, Aufrufen von Methoden zum Zeichenfolgenvergleich, die Standardwerte ersetzen, und rufen stattdessen die Methoden, die Parameter erfordern explizit angegeben. Aufrufen, um zu bestimmen, ob eine Zeichenfolge mit einer bestimmten Teilzeichenfolge endet, mithilfe der Regeln für Zeichenfolgenvergleiche der aktuellen Kultur, die <see cref="M:System.String.EndsWith(System.String,System.StringComparison)" /> methodenüberladung mit einem Wert von <see cref="F:System.StringComparison.CurrentCulture" /> für seine <paramref name="comparisonType" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1339">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified. To determine whether a string ends with a particular substring by using the string comparison rules of the current culture, call the <see cref="M:System.String.EndsWith(System.String,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its <paramref name="comparisonType" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.StartsWith(System.String)" />
        <altmember cref="M:System.String.Compare(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.EndsWith(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (value As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(System::String ^ value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string * StringComparison -&gt; bool" Usage="string.EndsWith (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1340">Die Zeichenfolge, die mit der Teilzeichenfolge am Ende dieser Instanz verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1340">The string to compare to the substring at the end of this instance.</span>
          </span>
        </param>
        <param name="comparisonType">
          <span data-ttu-id="9380d-1341">Einer der Enumerationswerte, die bestimmen, wie diese Zeichenfolge und <c>value</c> verglichen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1341">One of the enumeration values that determines how this string and <c>value</c> are compared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1342">Bestimmt, ob das Ende dieser Zeichenfolgeninstanz bei einem Vergleich unter Verwendung der angegebenen Vergleichsoption mit der angegebenen Zeichenfolge übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1342">Determines whether the end of this string instance matches the specified string when compared using the specified comparison option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1343">
            <see langword="true" />, wenn der <paramref name="value" />-Parameter mit dem Ende dieser Zeichenfolge übereinstimmt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1343">
              <see langword="true" /> if the <paramref name="value" /> parameter matches the end of this string; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1344">Die <xref:System.String.EndsWith%2A> -Methode vergleicht die `value` Parameter mit der Teilzeichenfolge am Ende dieser Zeichenfolge und gibt einen Wert, der angibt, ob diese gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1344">The <xref:System.String.EndsWith%2A> method compares the `value` parameter to the substring at the end of this string and returns a value that indicates whether they are equal.</span></span> <span data-ttu-id="9380d-1345">Gleich, `value` ein Verweis auf die gleiche Zeichenfolge sein muss, muss die leere Zeichenfolge (""), oder mit das Ende dieser Zeichenfolge übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1345">To be equal, `value` must be a reference to this same string, must be the empty string (""), or must match the end of this string.</span></span> <span data-ttu-id="9380d-1346">Den Typ des Vergleichs wurden und die <xref:System.String.EndsWith%2A> Methode hängt vom Wert von der `comparisonType` Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-1346">The type of comparison performed by the <xref:System.String.EndsWith%2A> method depends on the value of the `comparisonType` parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1347">Im folgenden Beispiel wird bestimmt, ob eine Zeichenfolge mit einer bestimmten Teilzeichenfolge endet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1347">The following example determines whether a string ends with a particular substring.</span></span> <span data-ttu-id="9380d-1348">Die Ergebnisse sind betroffen, durch die Auswahl der Kultur, ob die Groß-/Kleinschreibung ignoriert wird und gibt an, ob ein ordinaler Vergleich ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1348">The results are affected by the choice of culture, whether case is ignored, and whether an ordinal comparison is performed.</span></span>  
  
 [!code-cpp[System.String.EndsWithCmp#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.EndsWithCmp/cpp/ewcmp.cpp#1)]
 [!code-csharp[System.String.EndsWithCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.EndsWithCmp/cs/ewcmp.cs#1)]
 [!code-vb[System.String.EndsWithCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.EndsWithCmp/vb/ewcmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1349">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1349">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-1350">
            <paramref name="comparisonType" /> ist kein <see cref="T:System.StringComparison" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1350">
              <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.StringComparison" />
      </Docs>
    </Member>
    <Member MemberName="EndsWith">
      <MemberSignature Language="C#" Value="public bool EndsWith (string value, bool ignoreCase, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool EndsWith(string value, bool ignoreCase, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.EndsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndsWith (value As String, ignoreCase As Boolean, culture As CultureInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool EndsWith(System::String ^ value, bool ignoreCase, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.EndsWith : string * bool * System.Globalization.CultureInfo -&gt; bool" Usage="string.EndsWith (value, ignoreCase, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1351">Die Zeichenfolge, die mit der Teilzeichenfolge am Ende dieser Instanz verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1351">The string to compare to the substring at the end of this instance.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="9380d-1352">
            <see langword="true" />, wenn die Groß-/Kleinschreibung beim Vergleich ignoriert werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1352">
              <see langword="true" /> to ignore case during the comparison; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9380d-1353">Kulturinformationen, die bestimmen, wie diese Instanz und <c>value</c> verglichen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1353">Cultural information that determines how this instance and <c>value</c> are compared.</span>
          </span>
          <span data-ttu-id="9380d-1354">Wenn <c>culture</c><see langword="null" /> ist, wird die aktuelle Kultur verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1354">If <c>culture</c> is <see langword="null" />, the current culture is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1355">Bestimmt, ob das Ende dieser Zeichenfolgeninstanz bei einem Vergleich unter Verwendung der angegebenen Kultur mit der angegebenen Zeichenfolge übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1355">Determines whether the end of this string instance matches the specified string when compared using the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1356">
            <see langword="true" />, wenn der <paramref name="value" />-Parameter mit dem Ende dieser Zeichenfolge übereinstimmt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1356">
              <see langword="true" /> if the <paramref name="value" /> parameter matches the end of this string; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1357">Diese Methode vergleicht die `value` Parameter mit der Teilzeichenfolge am Ende dieser Zeichenfolge, die gleiche Länge wie `value`, und gibt einen Wert, der angibt, ob diese gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1357">This method compares the `value` parameter to the substring at the end of this string that is the same length as `value`, and returns a value that indicates whether they are equal.</span></span> <span data-ttu-id="9380d-1358">Gleich, `value` muss ein Verweis auf die gleiche Instanz sein oder mit dem Ende dieser Zeichenfolge übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1358">To be equal, `value` must be a reference to this same instance or match the end of this string.</span></span>  
  
 <span data-ttu-id="9380d-1359">Diese Methode vergleicht Word (kulturabhängig) mithilfe der angegebenen Groß-/Kleinschreibung und Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1359">This method performs a word (culture-sensitive) comparison using the specified casing and culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1360">Im folgenden Beispiel wird bestimmt, ob eine Zeichenfolge am Ende einer anderen Zeichenfolge auftritt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1360">The following example determines whether a string occurs at the end of another string.</span></span> <span data-ttu-id="9380d-1361">Die <xref:System.String.EndsWith%2A> Methode wird aufgerufen, mehrmals mit Groß-/Kleinschreibung, Groß-/Kleinschreibung und andere Kulturen, die die Ergebnisse der Suche zu beeinflussen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1361">The <xref:System.String.EndsWith%2A> method is called several times using case sensitivity, case insensitivity, and different cultures that influence the results of the search.</span></span>  
  
 [!code-csharp[system.string.EndsWithCI#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.EndsWithCI/cs/ewci.cs#1)]
 [!code-vb[system.string.EndsWithCI#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.EndsWithCI/vb/ewci.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1362">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1362">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-1363">Bestimmt, ob zwei <see cref="T:System.String" />-Objekte denselben Wert haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1363">Determines whether two <see cref="T:System.String" /> objects have the same value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="string.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="9380d-1364">Die Zeichenfolge, die mit dieser Instanz verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1364">The string to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1365">Bestimmt, ob diese Instanz und ein angegebenes Objekt, das ebenfalls ein <see cref="T:System.String" />-Objekt sein muss, denselben Wert haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1365">Determines whether this instance and a specified object, which must also be a <see cref="T:System.String" /> object, have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1366">
            <see langword="true" />, wenn <paramref name="obj" /> ein <see cref="T:System.String" /> ist und denselben Wert wie diese Instanz hat, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1366">
              <see langword="true" /> if <paramref name="obj" /> is a <see cref="T:System.String" /> and its value is the same as this instance; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9380d-1367">Wenn <paramref name="obj" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1367">If <paramref name="obj" /> is <see langword="null" />, the method returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1368">Diese Methode führt einen Ordinalvergleich der (Groß-/Kleinschreibung beachtet und kulturunabhängige).</span><span class="sxs-lookup"><span data-stu-id="9380d-1368">This method performs an ordinal (case-sensitive and culture-insensitive) comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1369">Das folgende Beispiel veranschaulicht die <xref:System.String.Equals%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1369">The following example demonstrates the <xref:System.String.Equals%2A> method.</span></span>  
  
 [!code-cpp[string.equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.equals/CPP/equals.cpp#1)]
 [!code-csharp[string.equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.equals/CS/equals.cs#1)]
 [!code-vb[string.equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Equals(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::String ^ value);" />
      <MemberSignature Language="F#" Value="override this.Equals : string -&gt; bool" Usage="string.Equals value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1370">Die Zeichenfolge, die mit dieser Instanz verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1370">The string to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1371">Bestimmt, ob diese Instanz und ein anderes angegebenes <see cref="T:System.String" />-Objekt denselben Wert haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1371">Determines whether this instance and another specified <see cref="T:System.String" /> object have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1372">
            <see langword="true" />, wenn der <paramref name="value" />-Parameter und diese Instanz denselben Wert haben, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1372">
              <see langword="true" /> if the value of the <paramref name="value" /> parameter is the same as the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9380d-1373">Wenn <paramref name="value" /> gleich <see langword="null" /> ist, gibt die Methode <see langword="false" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1373">If <paramref name="value" /> is <see langword="null" />, the method returns <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1374">Diese Methode führt einen Ordinalvergleich der (Groß-/Kleinschreibung beachtet und kulturunabhängige).</span><span class="sxs-lookup"><span data-stu-id="9380d-1374">This method performs an ordinal (case-sensitive and culture-insensitive) comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1375">Das folgende Beispiel zeigt die <xref:System.String.Equals%2A> Methode. Es vergleicht die Groß-/Kleinschreibung Titel Wort "File" mit ein Äquivalent Wort, dessen Entsprechung in Kleinbuchstaben, dessen Entsprechung in Großbuchstaben und ein Wort, das LATIN kleine Buchstaben ohne Punkte I enthält (U + 0131) anstelle von kleinen Buchstaben LATEINISCH I (U + 0069).</span><span class="sxs-lookup"><span data-stu-id="9380d-1375">The following example demonstrates the <xref:System.String.Equals%2A> method.It compares the title-cased word "File" with an equivalent word, its lowercase equivalent, its uppercase equivalent, and a word that contains LATIN SMALL LETTER DOTLESS I (U+0131) instead of LATIN SMALL LETTER I (U+0069).</span></span> <span data-ttu-id="9380d-1376">Da die <xref:System.String.Equals%28System.String%29> Methode führt einen Ordinalvergleich, nur für der Vergleich mit einer identischen Wort gibt `true`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1376">Because the <xref:System.String.Equals%28System.String%29> method performs an ordinal comparison, only the comparison with an identical word returns `true`.</span></span>  
  
 [!code-csharp[System.String.Equals#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.equals/cs/equalsex1.cs#2)]
 [!code-vb[System.String.Equals#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.equals/vb/equalsex1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (string a, string b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(string a, string b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Equals(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As String, b As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::String ^ a, System::String ^ b);" />
      <MemberSignature Language="F#" Value="static member Equals : string * string -&gt; bool" Usage="System.string.Equals (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.String" />
        <Parameter Name="b" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="9380d-1377">Die erste Zeichenfolge für den Vergleich oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1377">The first string to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="9380d-1378">Die zweite Zeichenfolge für den Vergleich oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1378">The second string to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1379">Bestimmt, ob zwei angegebene <see cref="T:System.String" />-Objekte denselben Wert haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1379">Determines whether two specified <see cref="T:System.String" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1380">
            <see langword="true" />, wenn <paramref name="a" /> und <paramref name="b" /> denselben Wert haben, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1380">
              <see langword="true" /> if the value of <paramref name="a" /> is the same as the value of <paramref name="b" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="9380d-1381">Wenn <paramref name="a" /> und <paramref name="b" /><see langword="null" /> sind, gibt diese Methode <see langword="true" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1381">If both <paramref name="a" /> and <paramref name="b" /> are <see langword="null" />, the method returns <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1382">Diese Methode führt einen Ordinalvergleich der (Groß-/Kleinschreibung beachtet und kulturunabhängige).</span><span class="sxs-lookup"><span data-stu-id="9380d-1382">This method performs an ordinal (case-sensitive and culture-insensitive) comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1383">Das folgende Beispiel veranschaulicht die <xref:System.String.Equals%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1383">The following example demonstrates the <xref:System.String.Equals%2A> method.</span></span>  
  
 [!code-cpp[string.equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.equals/CPP/equals.cpp#1)]
 [!code-csharp[string.equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.equals/CS/equals.cs#1)]
 [!code-vb[string.equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.equals/VB/equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Equals(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (value As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::String ^ value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="override this.Equals : string * StringComparison -&gt; bool" Usage="string.Equals (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1384">Die Zeichenfolge, die mit dieser Instanz verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1384">The string to compare to this instance.</span>
          </span>
        </param>
        <param name="comparisonType">
          <span data-ttu-id="9380d-1385">Einer der Enumerationswerte, die angeben, wie die Zeichenfolgen verglichen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1385">One of the enumeration values that specifies how the strings will be compared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1386">Bestimmt, ob diese Zeichenfolge und ein angegebenes <see cref="T:System.String" />-Objekt denselben Wert haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1386">Determines whether this string and a specified <see cref="T:System.String" /> object have the same value.</span>
          </span>
          <span data-ttu-id="9380d-1387">Ein Parameter gibt die Kultur, Berücksichtigung von Groß- und Kleinschreibung und Sortierregeln, die für den Vergleich verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1387">A parameter specifies the culture, case, and sort rules used in the comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1388">
            <see langword="true" />, wenn der <paramref name="value" />-Parameter und diese Zeichenfolge denselben Wert haben; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1388">
              <see langword="true" /> if the value of the <paramref name="value" /> parameter is the same as this string; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1389">Die `comparisonType` Parameter gibt an, ob der Vergleich die aktuelle oder der invariante Kultur verwenden soll, berücksichtigen die zwei verglichenen Zeichenfolgen die Groß-/Kleinschreibung ignorieren oder Wort- oder ordinalen Sortierregeln verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1389">The `comparisonType` parameter indicates whether the comparison should use the current or invariant culture, honor or ignore the case of the two strings being compared, or use word or ordinal sort rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1390">Das folgende Beispiel erstellt ein Array von Zeichenfolgen, die von einem großen "I" Kleinbuchstaben "i" und eine ohne Punkte "ı" besteht.</span><span class="sxs-lookup"><span data-stu-id="9380d-1390">The following example creates a string array that consists of an uppercase "I", a lowercase "i", and a dotless "ı".</span></span> <span data-ttu-id="9380d-1391">Es ruft dann die <xref:System.String.Equals%28System.String%2CSystem.StringComparison%29> Methode, um sie zu vergleichen mit jedem möglichen <xref:System.StringComparison> Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1391">It then calls the <xref:System.String.Equals%28System.String%2CSystem.StringComparison%29> method to compare them by using each possible <xref:System.StringComparison> enumeration value.</span></span>  
  
 [!code-csharp[System.String.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.equals/cs/eqcmp.cs#1)]
 [!code-vb[System.String.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.equals/vb/eqcmp.vb#1)]  
  
 <span data-ttu-id="9380d-1392">Im folgenden Beispiel werden vier Sätze von Wörtern mit jedem Mitglied der <xref:System.StringComparison> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-1392">The following example compares four sets of words by using each member of the <xref:System.StringComparison> enumeration.</span></span>  <span data-ttu-id="9380d-1393">Die Vergleiche, die Konventionen der Samisch (obere Schweden) Kulturen Englisch (USA) und verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1393">The comparisons use the conventions of the English (United States) and Sami (Upper Sweden) cultures.</span></span> <span data-ttu-id="9380d-1394">Beachten Sie, dass die Zeichenfolgen "Encyclopædia" und "Enzyklopädie" entspricht in der Kultur En-US, aber nicht in der Kultur Samisch (Nord, Schweden) berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1394">Note that the strings "encyclopædia" and "encyclopedia" are considered equivalent in the en-US culture but not in the Sami (Northern Sweden) culture.</span></span>  
  
 [!code-csharp[System.String.Equals#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.equals/cs/equals_ex4.cs#4)]
 [!code-vb[System.String.Equals#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.equals/vb/equals_ex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-1395">
            <paramref name="comparisonType" /> ist kein <see cref="T:System.StringComparison" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1395">
              <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public static bool Equals (string a, string b, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Equals(string a, string b, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Equals(System.String,System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Equals (a As String, b As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Equals(System::String ^ a, System::String ^ b, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="static member Equals : string * string * StringComparison -&gt; bool" Usage="System.string.Equals (a, b, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.String" />
        <Parameter Name="b" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="9380d-1396">Die erste Zeichenfolge für den Vergleich oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1396">The first string to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="9380d-1397">Die zweite Zeichenfolge für den Vergleich oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1397">The second string to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="comparisonType">
          <span data-ttu-id="9380d-1398">Einer der Enumerationswerte, der die Regeln für den Vergleich angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1398">One of the enumeration values that specifies the rules for the comparison.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1399">Bestimmt, ob zwei angegebene <see cref="T:System.String" />-Objekte denselben Wert haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1399">Determines whether two specified <see cref="T:System.String" /> objects have the same value.</span>
          </span>
          <span data-ttu-id="9380d-1400">Ein Parameter gibt die Kultur, Berücksichtigung von Groß- und Kleinschreibung und Sortierregeln, die für den Vergleich verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1400">A parameter specifies the culture, case, and sort rules used in the comparison.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1401">
            <see langword="true" />, wenn der Wert des <paramref name="a" />-Parameters dem Wert des <paramref name="b" />-Parameters entspricht, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1401">
              <see langword="true" /> if the value of the <paramref name="a" /> parameter is equal to the value of the <paramref name="b" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1402">Die `comparisonType` Parameter gibt an, ob der Vergleich die aktuelle oder der invariante Kultur verwenden soll, berücksichtigen die zwei verglichenen Zeichenfolgen die Groß-/Kleinschreibung ignorieren oder Wort- oder ordinalen Sortierregeln verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1402">The `comparisonType` parameter indicates whether the comparison should use the current or invariant culture, honor or ignore the case of the two strings being compared, or use word or ordinal sort rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1403">Im folgenden Beispiel werden vier Sätze von Wörtern mit jedem Mitglied der <xref:System.StringComparison> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-1403">The following example compares four sets of words by using each member of the <xref:System.StringComparison> enumeration.</span></span>  <span data-ttu-id="9380d-1404">Die Vergleiche, die Konventionen der Samisch (obere Schweden) Kulturen Englisch (USA) und verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1404">The comparisons use the conventions of the English (United States) and Sami (Upper Sweden) cultures.</span></span> <span data-ttu-id="9380d-1405">Beachten Sie, dass die Zeichenfolgen "Encyclopædia" und "Enzyklopädie" entspricht in der Kultur En-US, aber nicht in der Kultur Samisch (Nord, Schweden) berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1405">Note that the strings "encyclopædia" and "encyclopedia" are considered equivalent in the en-US culture but not in the Sami (Northern Sweden) culture.</span></span>  
  
 [!code-csharp[System.String.Equals#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.equals/cs/equals_ex3.cs#3)]
 [!code-vb[System.String.Equals#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.equals/vb/equals_ex3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-1406">
            <paramref name="comparisonType" /> ist kein <see cref="T:System.StringComparison" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1406">
              <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.CompareOrdinal(System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Format">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-1407">Konvertiert auf der Grundlage der angegebenen Formate den Wert von Objekten in Zeichenfolgen und fügt sie in eine andere Zeichenfolge ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1407">Converts the value of objects to strings based on the formats specified and inserts them into another string.</span>
          </span>
          <span data-ttu-id="9380d-1408">Wenn Sie die Methode „String.Format“ noch nicht kennen, lesen Sie den Abschnitt [Erste Schritte mit der String.Format-Methode](#Starting), um sich einen Überblick zu verschaffen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1408">If you are new to the `String.Format` method, see the [Get started with the String.Format method](#Starting) section for a quick overview.</span>
          </span>
          <span data-ttu-id="9380d-1409">Die allgemeine Dokumentation zur String.Format-Methode finden Sie im Abschnitt [Hinweise](#remarks-top).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1409">See the [Remarks](#remarks-top) section for general documentation for the `String.Format` method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
<a name="remarks-top"></a>   
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
 
 <span data-ttu-id="9380d-1410">In diesem Abschnitt</span><span class="sxs-lookup"><span data-stu-id="9380d-1410">In this section:</span></span>  
  
 <span data-ttu-id="9380d-1411">[Erste Schritte mit der String.Format-Methode](#Starting) </span><span class="sxs-lookup"><span data-stu-id="9380d-1411">[Get started with the String.Format method](#Starting) </span></span>  
 <span data-ttu-id="9380d-1412">[Welche Methode rufe ich?](#FTaskList) </span><span class="sxs-lookup"><span data-stu-id="9380d-1412">[Which method do I call?](#FTaskList) </span></span>  
 <span data-ttu-id="9380d-1413">[Der Format-Methode in Kürze](#Format_Brief) </span><span class="sxs-lookup"><span data-stu-id="9380d-1413">[The Format method in brief](#Format_Brief) </span></span>  
 <span data-ttu-id="9380d-1414">[Das Format-Element](#FormatItem) </span><span class="sxs-lookup"><span data-stu-id="9380d-1414">[The Format item](#FormatItem) </span></span>  
 <span data-ttu-id="9380d-1415">[Wie werden Argumente formatiert.](#HowFormatted) </span><span class="sxs-lookup"><span data-stu-id="9380d-1415">[How arguments are formatted](#HowFormatted) </span></span>  
 <span data-ttu-id="9380d-1416">[Formatelemente, die den gleichen Index aufweisen.](#SameIndex) </span><span class="sxs-lookup"><span data-stu-id="9380d-1416">[Format items that have the same index](#SameIndex) </span></span>  
 <span data-ttu-id="9380d-1417">[Formatierung und Kultur](#Format_Culture) </span><span class="sxs-lookup"><span data-stu-id="9380d-1417">[Formatting and culture](#Format_Culture) </span></span>  
 <span data-ttu-id="9380d-1418">[Benutzerdefinierte Formatierung Vorgänge](#Format_Custom) </span><span class="sxs-lookup"><span data-stu-id="9380d-1418">[Custom formatting operations](#Format_Custom) </span></span>  
 [<span data-ttu-id="9380d-1419">"String.Format"-F & A</span><span class="sxs-lookup"><span data-stu-id="9380d-1419">String.Format Q & A</span></span>](#QA)  
  
<a name="Starting"></a>   
## <a name="get-started-with-the-stringformat-method"></a><span data-ttu-id="9380d-1420">Erste Schritte mit der String.Format-Methode</span><span class="sxs-lookup"><span data-stu-id="9380d-1420">Get started with the String.Format method</span></span>  
 <span data-ttu-id="9380d-1421">Verwendung <xref:System.String.Format%2A?displayProperty=nameWithType> Wenn Sie den Wert eines Objekts, eine Variable oder ein Ausdruck in einer anderen Zeichenfolge einzufügen müssen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1421">Use <xref:System.String.Format%2A?displayProperty=nameWithType> if you need to insert the value of an object, variable, or expression into another string.</span></span> <span data-ttu-id="9380d-1422">Sie können beispielsweise den Wert der Einfügen einer <xref:System.Decimal> Wert in eine Zeichenfolge für den Benutzer als einzelne Zeichenfolge angezeigt:</span><span class="sxs-lookup"><span data-stu-id="9380d-1422">For example, you can insert the value of a <xref:System.Decimal> value into a string to display it to the user as a single string:</span></span>  
  
 [!code-cpp[System.String.Format#35](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting2.cpp#35)]
 [!code-csharp-interactive[System.String.Format#35](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting2.cs#35)]
 [!code-vb[System.String.Format#35](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting2.vb#35)]  
  
 <span data-ttu-id="9380d-1423">Und Sie können die Formatierung des Werts steuern:</span><span class="sxs-lookup"><span data-stu-id="9380d-1423">And you can control that value's formatting:</span></span>  
  
 [!code-cpp[System.String.Format#36](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting2.cpp#36)]
 [!code-csharp-interactive[System.String.Format#36](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting2.cs#36)]
 [!code-vb[System.String.Format#36](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting2.vb#36)]  
  
 <span data-ttu-id="9380d-1424">Neben der Formatierung, können Sie auch die Ausrichtung und Abstände steuern.</span><span class="sxs-lookup"><span data-stu-id="9380d-1424">Besides formatting, you can also control alignment and spacing.</span></span>  
  
 ### <a name="inserting-a-string"></a><span data-ttu-id="9380d-1425">Eine Zeichenfolge eingefügt</span><span class="sxs-lookup"><span data-stu-id="9380d-1425">Inserting a string</span></span>  

 <span data-ttu-id="9380d-1426"><xref:System.String.Format%2A?displayProperty=nameWithType> beginnt mit einer Formatzeichenfolge, gefolgt von ein oder mehrere Objekte oder Ausdrücke, die in Zeichenfolgen konvertiert und an einer angegebenen Position in der Formatzeichenfolge eingefügt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1426"><xref:System.String.Format%2A?displayProperty=nameWithType> starts with a format string, followed by one or more objects or expressions that will be converted to strings and inserted at a specified place in the format string.</span></span> <span data-ttu-id="9380d-1427">Zum Beispiel:</span><span class="sxs-lookup"><span data-stu-id="9380d-1427">For example:</span></span>  
  
 [!code-cpp[System.String.Format#30](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting1.cpp#30)]
 [!code-csharp-interactive[System.String.Format#30](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting1.cs#30)]
 [!code-vb[System.String.Format#30](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting1.vb#30)]  
  
 <span data-ttu-id="9380d-1428">Die `{0}` im Format Zeichenfolge eines Formatelements ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-1428">The `{0}` in the format string is a format item.</span></span> <span data-ttu-id="9380d-1429">`0` ist der Index des Objekts, dessen Wert an dieser Position eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1429">`0` is the index of the object whose string value will be inserted at that position.</span></span> <span data-ttu-id="9380d-1430">(Indizes beginnen bei 0.) Wenn das Objekt eingefügt werden soll, keine Zeichenfolge, ist die `ToString` Methode wird aufgerufen, um sie zu einem vor dem Einfügen in der Ergebniszeichenfolge zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-1430">(Indexes start at 0.) If the object to be inserted is not a string, its `ToString` method is called to convert it to one before inserting it in the result string.</span></span>  
  
 <span data-ttu-id="9380d-1431">Hier ist ein weiteres Beispiel, das zwei Formatelemente und zwei Objekte in der Objektliste verwendet:</span><span class="sxs-lookup"><span data-stu-id="9380d-1431">Here's another example that uses two format items and two objects in the object list:</span></span>  
  
 [!code-cpp[System.String.Format#31](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting1.cpp#31)]
 [!code-csharp-interactive[System.String.Format#31](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting1.cs#31)]
 [!code-vb[System.String.Format#31](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting1.vb#31)]  
  
 <span data-ttu-id="9380d-1432">Sie können beliebig viele Formatelemente und beliebig viele Objekte in der Objektliste, wie Sie möchten, solange der Index der jedes Formatelement, das kein übereinstimmendes Objekt in der Objektliste verfügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1432">You can have as many format items and as many objects in the object list as you want, as long as the index of every format item has a matching object in the object list.</span></span> <span data-ttu-id="9380d-1433">Ferner müssen nicht Gedanken machen, über welche, die Überladung Sie aufrufen; der Compiler wird das entsprechende Feld für die Sie auswählen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1433">You also don't have to worry about which overload you call; the compiler will select the appropriate one for you.</span></span>  
  
 ### <a name="controlling-formatting"></a><span data-ttu-id="9380d-1434">Steuern der Formatierung</span><span class="sxs-lookup"><span data-stu-id="9380d-1434">Controlling formatting</span></span>  
 <span data-ttu-id="9380d-1435">Führen Sie den Index in einem Formatelement, das mit einer Formatzeichenfolge zu steuern, wie ein Objekt formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-1435">You can follow the index in a format item with a format string to control how an object is formatted.</span></span> <span data-ttu-id="9380d-1436">Z. B. `{0:d}` gilt die Zeichenfolge "d" zum ersten Objekt in der Objektliste.</span><span class="sxs-lookup"><span data-stu-id="9380d-1436">For example, `{0:d}` applies the "d" format string to the first object in the object list.</span></span> <span data-ttu-id="9380d-1437">Es folgt ein Beispiel mit einem einzelnen Objekt und zwei Elemente formatieren:</span><span class="sxs-lookup"><span data-stu-id="9380d-1437">Here is an example with a single object and two format items:</span></span>  
  
 [!code-cpp[System.String.Format#32](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting1.cpp#32)]
 [!code-csharp-interactive[System.String.Format#32](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting1.cs#32)]
 [!code-vb[System.String.Format#32](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting1.vb#32)]  
  
 <span data-ttu-id="9380d-1438">Eine Anzahl von Typen unterstützen Formatzeichenfolgen, einschließlich aller numerischen Typen (sowohl [standard](~/docs/standard/base-types/standard-numeric-format-strings.md) und [benutzerdefinierte](~/docs/standard/base-types/custom-numeric-format-strings.md) Formatzeichenfolgen), alle Datums- und Uhrzeitangaben (beide [standard](~/docs/standard/base-types/standard-date-and-time-format-strings.md) und [benutzerdefinierte](~/docs/standard/base-types/custom-date-and-time-format-strings.md) Formatzeichenfolgen) und Zeitintervalle (beide [standard](~/docs/standard/base-types/standard-timespan-format-strings.md) und [benutzerdefinierte](~/docs/standard/base-types/custom-timespan-format-strings.md) Formatzeichenfolgen), alle Enumerationstypen [Enumerationstypen ](~/docs/standard/base-types/enumeration-format-strings.md), und [GUIDs](https://msdn.microsoft.com/library/97af8hh4.aspx).</span><span class="sxs-lookup"><span data-stu-id="9380d-1438">A number of types support format strings, including all numeric types (both [standard](~/docs/standard/base-types/standard-numeric-format-strings.md) and [custom](~/docs/standard/base-types/custom-numeric-format-strings.md) format strings), all dates and times (both [standard](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [custom](~/docs/standard/base-types/custom-date-and-time-format-strings.md) format strings) and time intervals (both [standard](~/docs/standard/base-types/standard-timespan-format-strings.md) and [custom](~/docs/standard/base-types/custom-timespan-format-strings.md) format strings), all enumeration types [enumeration types](~/docs/standard/base-types/enumeration-format-strings.md), and [GUIDs](https://msdn.microsoft.com/library/97af8hh4.aspx).</span></span> <span data-ttu-id="9380d-1439">Sie können auch Unterstützung für Formatzeichenfolgen für eigene Typen hinzufügen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1439">You can also add support for format strings to your own types.</span></span>  
  
 ### <a name="controlling-spacing"></a><span data-ttu-id="9380d-1440">Steuern der Abstand</span><span class="sxs-lookup"><span data-stu-id="9380d-1440">Controlling spacing</span></span>  
 <span data-ttu-id="9380d-1441">Sie können die Breite der Zeichenfolge, die in die Ergebniszeichenfolge eingefügt wird, wie z. B. mit der Syntax definieren `{0,12}`, die eine 12 Zeichen bestehende Zeichenfolge eingefügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1441">You can define the width of the string that is inserted into the result string by using syntax such as `{0,12}`, which inserts a 12-character string.</span></span> <span data-ttu-id="9380d-1442">In diesem Fall ist die Zeichenfolgendarstellung des ersten Objekts rechtsbündig in das Feld 12 Zeichen bestehende.</span><span class="sxs-lookup"><span data-stu-id="9380d-1442">In this case, the string representation of the first object is right-aligned in the 12-character field.</span></span>  <span data-ttu-id="9380d-1443">(Wenn die Zeichenfolgendarstellung des ersten Objekts mehr als 12 Zeichen lang ist, jedoch die gewünschte Feldbreite wird ignoriert, und die gesamte Zeichenfolge wird in die Ergebniszeichenfolge eingefügt.)</span><span class="sxs-lookup"><span data-stu-id="9380d-1443">(If the string representation of the first object is more than 12 characters in length, though, the preferred field width is ignored, and the entire string is inserted into the result string.)</span></span>  
  
 <span data-ttu-id="9380d-1444">Das folgende Beispiel definiert ein Feld 6 Zeichen, um die Zeichenfolge "Year" und einige Zeichenfolgen von Jahr, als auch ein Feld 15 Zeichen für die Zeichenfolge "Auffüllung" und einige Daten auffüllen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1444">The following example defines a 6-character field to hold the string "Year" and some year strings, as well as an 15-character field to hold the string "Population" and some population data.</span></span> <span data-ttu-id="9380d-1445">Beachten Sie, dass die Zeichen rechtsbündig in das Feld.</span><span class="sxs-lookup"><span data-stu-id="9380d-1445">Note that the characters are right-aligned in the field.</span></span>  
  
 [!code-cpp[System.String.Format#33](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting1.cpp#33)]
 [!code-csharp-interactive[System.String.Format#33](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting3.cs)]
 [!code-vb[System.String.Format#33](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting1.vb#33)]  
  
 ### <a name="controlling-alignment"></a><span data-ttu-id="9380d-1446">Steuern der Ausrichtung</span><span class="sxs-lookup"><span data-stu-id="9380d-1446">Controlling alignment</span></span>  
 <span data-ttu-id="9380d-1447">Standardmäßig werden Zeichenfolgen in ihre Feld rechtsbündig ausgerichtet, wenn Sie eine Feldbreite angeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-1447">By default, strings are right-aligned within their field if you specify a field width.</span></span> <span data-ttu-id="9380d-1448">Um Zeichenfolgen in einem Feld linksbündig, Sie stellen die Feldbreite ein negatives Vorzeichen, z. B. `{0,-12}` so definieren Sie ein Feld mit 12 Zeichen bestehende rechtsbündig ausgerichtet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1448">To left-align strings in a field, you preface the field width with a negative sign, such as `{0,-12}` to define a 12-character right-aligned field.</span></span>  
  
 <span data-ttu-id="9380d-1449">Im folgende Beispiel ähnelt dem vorherigen Beispiel, außer dass sie sowohl die Bezeichnungen als auch die Daten linksbündig.</span><span class="sxs-lookup"><span data-stu-id="9380d-1449">The following example is similar to the previous one, except that it left-aligns both labels and data.</span></span>  
  
 [!code-cpp[System.String.Format#34](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/starting1.cpp#34)]
 [!code-csharp-interactive[System.String.Format#34](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/starting1.cs#34)]
 [!code-vb[System.String.Format#34](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/starting1.vb#34)]  
  
 <span data-ttu-id="9380d-1450"><xref:System.String.Format%2A?displayProperty=nameWithType> der Funktion für kombinierte Formatierung verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1450"><xref:System.String.Format%2A?displayProperty=nameWithType> makes use of the composite formatting feature.</span></span> <span data-ttu-id="9380d-1451">Weitere Informationen finden Sie unter [Zusammengesetzte Formatierung](~/docs/standard/base-types/composite-formatting.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-1451">For more information, see [Composite Formatting](~/docs/standard/base-types/composite-formatting.md).</span></span>  
  
<a name="FTaskList"></a>   
## <a name="which-method-do-i-call"></a><span data-ttu-id="9380d-1452">Welche Methode rufe ich?</span><span class="sxs-lookup"><span data-stu-id="9380d-1452">Which method do I call?</span></span>  
  
|<span data-ttu-id="9380d-1453">Beschreibung</span><span class="sxs-lookup"><span data-stu-id="9380d-1453">To</span></span>|<span data-ttu-id="9380d-1454">Call</span><span class="sxs-lookup"><span data-stu-id="9380d-1454">Call</span></span>|  
|--------|----------|  
|<span data-ttu-id="9380d-1455">Ein oder mehrere Objekte mit den Konventionen der aktuellen Kultur zu formatieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-1455">Format one or more objects by using the conventions of the current culture.</span></span>|<span data-ttu-id="9380d-1456">Mit Ausnahme der Überladungen, die eine `provider` Parameter, die verbleibenden <xref:System.String.Format%2A> -Überladungen enthalten eine <xref:System.String> Parameter folgen eine oder mehrere Objektparameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-1456">Except for the overloads that include a `provider` parameter, the remaining <xref:System.String.Format%2A> overloads include a <xref:System.String> parameter followed by one or more object parameters.</span></span> <span data-ttu-id="9380d-1457">Aus diesem Grund müssen Sie nicht ermitteln, welche <xref:System.String.Format%2A> Überladung, die Sie aufrufen möchten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1457">Because of this, you don't have to determine which <xref:System.String.Format%2A> overload you intend to call.</span></span> <span data-ttu-id="9380d-1458">Ihr Sprachcompiler wählt die entsprechende Überladung zwischen Überladungen, die keinem `provider` basierend auf Ihrer Typargumentliste-Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-1458">Your language compiler selects the appropriate overload from among the overloads that don't have a `provider` parameter, based on your argument list.</span></span> <span data-ttu-id="9380d-1459">Z. B. Wenn Sie Ihrer Typargumentliste fünf Argumente verfügt, die der Compiler Ruft die <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1459">For example, if your argument list has five arguments, the compiler calls the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span>|  
|<span data-ttu-id="9380d-1460">Ein oder mehrere Objekte mit den Konventionen einer bestimmten Kultur zu formatieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-1460">Format one or more objects by using the conventions of a specific culture.</span></span>|<span data-ttu-id="9380d-1461">Jede <xref:System.String.Format%2A> Überladung, die mit beginnt eine `provider` -Parameter folgt einem <xref:System.String> Parameter und mindestens eine Objekt-Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-1461">Each <xref:System.String.Format%2A> overload that begins with a `provider` parameter is followed by a <xref:System.String> parameter and one or more object parameters.</span></span> <span data-ttu-id="9380d-1462">Aus diesem Grund nicht haben festlegen, um zu bestimmen, welche spezifischen <xref:System.String.Format%2A> Überladung, die Sie aufrufen möchten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1462">Because of this, you don't have to determine which specific <xref:System.String.Format%2A> overload you intend to call.</span></span> <span data-ttu-id="9380d-1463">Ihr Sprachcompiler wählt die entsprechende Überladung aus die Überladungen mit einem `provider` basierend auf Ihrer Typargumentliste-Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-1463">Your language compiler selects the appropriate overload from among the overloads that have a `provider` parameter, based on your argument list.</span></span> <span data-ttu-id="9380d-1464">Z. B. Wenn Sie Ihrer Typargumentliste fünf Argumente verfügt, die der Compiler Ruft die <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1464">For example, if your argument list has five arguments, the compiler calls the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> method.</span></span>|  
|<span data-ttu-id="9380d-1465">Führen Sie einem benutzerdefinierten Formatierungsvorgang entweder mit einem <xref:System.ICustomFormatter> Implementierung oder <xref:System.IFormattable> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-1465">Perform a custom formatting operation either with an <xref:System.ICustomFormatter> implementation or an <xref:System.IFormattable> implementation.</span></span>|<span data-ttu-id="9380d-1466">Die vier Überladungen mit einem `provider` Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-1466">Any of the four overloads with a `provider` parameter.</span></span> <span data-ttu-id="9380d-1467">Der Compiler wählt die entsprechende Überladung aus die Überladungen mit einem `provider` basierend auf Ihrer Typargumentliste-Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-1467">The compiler selects the appropriate overload from among the overloads that have a `provider` parameter, based on your argument list.</span></span>|  
  
<a name="Format_Brief"></a>   
## <a name="the-format-method-in-brief"></a><span data-ttu-id="9380d-1468">Der Format-Methode in Kürze</span><span class="sxs-lookup"><span data-stu-id="9380d-1468">The Format method in brief</span></span> 

 <span data-ttu-id="9380d-1469">Jede Überladung der der <xref:System.String.Format%2A> -Methode verwendet die [Funktion für kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) nullbasierte indizierte Platzhaltern, so genannten einschließen *Elemente formatieren*, in eine kombinierte Formatzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1469">Each overload of the <xref:System.String.Format%2A> method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to include zero-based indexed placeholders, called *format items*, in a composite format string.</span></span> <span data-ttu-id="9380d-1470">Zur Laufzeit wird jedes Formatelement durch die Zeichenfolgendarstellung des entsprechenden Arguments in einer Parameterliste ersetzt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1470">At run time, each format item is replaced with the string representation of the corresponding argument in a parameter list.</span></span> <span data-ttu-id="9380d-1471">Wenn der Wert des Arguments `null`, ersetzt das Formatelement mit <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1471">If the value of the argument is `null`, the format item is replaced with <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-1472">Beispielsweise der folgende Aufruf von der <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> Methode enthält eine Formatzeichenfolge mit drei Formatelemente {0}, {1}, und {2}, und einer Argumentliste mit drei Elementen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1472">For example, the following call to the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method includes a format string with three format items, {0}, {1}, and {2}, and an argument list with three items.</span></span>  
  
 [!code-cpp[System.String.Format#8](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/formatoverload1.cpp#8)]
 [!code-csharp-interactive[System.String.Format#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/formatoverload1.cs#8)]
 [!code-vb[System.String.Format#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/formatoverload1.vb#8)]  
  
<a name="FormatItem"></a>   
## <a name="the-format-item"></a><span data-ttu-id="9380d-1473">Das Formatelement</span><span class="sxs-lookup"><span data-stu-id="9380d-1473">The format item</span></span>  
 <span data-ttu-id="9380d-1474">Ein Formatelement, das hat folgende Syntax:</span><span class="sxs-lookup"><span data-stu-id="9380d-1474">A format item has this syntax:</span></span>  
  
```  
{index[,alignment][:formatString]}  
```  
 
 <span data-ttu-id="9380d-1475">Klammern bezeichnen optionale Elemente.</span><span class="sxs-lookup"><span data-stu-id="9380d-1475">Brackets denote optional elements.</span></span> <span data-ttu-id="9380d-1476">Die öffnende und schließende geschweifte Klammern sind erforderlich.</span><span class="sxs-lookup"><span data-stu-id="9380d-1476">The opening and closing braces are required.</span></span> <span data-ttu-id="9380d-1477">(Umfassen eine literale öffnende oder schließende geschweifte Klammer in der Formatzeichenfolge der [versehen von geschweiften Klammern](~/docs/standard/base-types/composite-formatting.md#escaping-braces) im Abschnitt der [kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) Artikel.)</span><span class="sxs-lookup"><span data-stu-id="9380d-1477">(To include a literal opening or closing brace in the format string, see the [Escaping Braces](~/docs/standard/base-types/composite-formatting.md#escaping-braces) section in the [Composite Formatting](~/docs/standard/base-types/composite-formatting.md) article.)</span></span>  
  
 <span data-ttu-id="9380d-1478">Beispielsweise kann ein Formatelement, das einen Währungswert formatiert Folgendes angezeigt:</span><span class="sxs-lookup"><span data-stu-id="9380d-1478">For example, a format item to format a currency value might appear like this:</span></span>  
  
 [!code-cpp[System.String.Format#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/formatsyntax1.cpp#12)]
 [!code-csharp-interactive[System.String.Format#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/formatsyntax1.cs#12)]  
 [!code-vb[System.String.Format#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/formatsyntax1.vb#12)]  

 <span data-ttu-id="9380d-1479">Einem Formatelement hat die folgenden Elemente:</span><span class="sxs-lookup"><span data-stu-id="9380d-1479">A format item has the following elements:</span></span>  
  
 <span data-ttu-id="9380d-1480">*index*</span><span class="sxs-lookup"><span data-stu-id="9380d-1480">*index*</span></span>  
 <span data-ttu-id="9380d-1481">Der nullbasierte Index des Arguments, dessen Zeichenfolgendarstellung werden an dieser Position in der Zeichenfolge enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1481">The zero-based index of the argument whose string representation is to be included at this position in the string.</span></span> <span data-ttu-id="9380d-1482">Wenn dieses Argument `null`, eine leere Zeichenfolge wird an dieser Position in der Zeichenfolge enthalten sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-1482">If this argument is `null`, an empty string will be included at this position in the string.</span></span>  
  
 <span data-ttu-id="9380d-1483">*Ausrichtung*</span><span class="sxs-lookup"><span data-stu-id="9380d-1483">*alignment*</span></span>  
 <span data-ttu-id="9380d-1484">Dies ist optional.</span><span class="sxs-lookup"><span data-stu-id="9380d-1484">Optional.</span></span> <span data-ttu-id="9380d-1485">Eine Ganzzahl mit Vorzeichen gibt an, dass die Gesamtlänge des Felds in der eingefügt wird, dass Sie des Arguments und gibt an, ob rechts ausgerichtet wird (eine positive ganze Zahl) oder linksbündig ausgerichtet (eine negative ganze Zahl).</span><span class="sxs-lookup"><span data-stu-id="9380d-1485">A signed integer that indicates the total length of the field into which the argument is inserted and whether it is right-aligned (a positive integer) or left-aligned (a negative integer).</span></span> <span data-ttu-id="9380d-1486">Wenn Sie weglassen *Ausrichtung*, die Zeichenfolgendarstellung des entsprechenden Arguments in einem Feld darf keine führenden oder nachgestellten Leerzeichen eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1486">If you omit *alignment*, the string representation of the corresponding argument is inserted in a field with no leading or trailing spaces.</span></span>  
  
 <span data-ttu-id="9380d-1487">Wenn der Wert des *Ausrichtung* ist kleiner als die Länge des Arguments, eingefügt werden soll, *Ausrichtung* wird ignoriert, und die Länge der Zeichenfolgendarstellung des Arguments wird als Feldbreite verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1487">If the value of *alignment* is less than the length of the argument to be inserted, *alignment* is ignored and the length of the string representation of the argument is used as the field width.</span></span>  
  
 <span data-ttu-id="9380d-1488">*formatString*</span><span class="sxs-lookup"><span data-stu-id="9380d-1488">*formatString*</span></span>  
 <span data-ttu-id="9380d-1489">Dies ist optional.</span><span class="sxs-lookup"><span data-stu-id="9380d-1489">Optional.</span></span> <span data-ttu-id="9380d-1490">Eine Zeichenfolge, die das Format der Ergebniszeichenfolge für das entsprechende Argument angibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1490">A string that specifies the format of the corresponding argument's result string.</span></span> <span data-ttu-id="9380d-1491">Wenn Sie weglassen *FormatString*, das entsprechende Argument der parameterlosen `ToString` Methode wird aufgerufen, um die Zeichenfolgendarstellung zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1491">If you omit *formatString*, the corresponding argument's parameterless `ToString` method is called to produce its string representation.</span></span> <span data-ttu-id="9380d-1492">Bei Angabe von *FormatString*, muss das Argument verwiesen wird, von dem Formatelement, das Implementieren der <xref:System.IFormattable> Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="9380d-1492">If you specify *formatString*, the argument referenced by the format item must implement the <xref:System.IFormattable> interface.</span></span> <span data-ttu-id="9380d-1493">Typen, die Formatzeichenfolgen unterstützen umfassen:</span><span class="sxs-lookup"><span data-stu-id="9380d-1493">Types that support format strings include:</span></span>  
  
-   <span data-ttu-id="9380d-1494">Alle Ganzzahlen und Gleitkomma-Typen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1494">All integral and floating-point types.</span></span> <span data-ttu-id="9380d-1495">(Finden Sie unter [standardmäßige numerische Formatzeichenfolgen](~/docs/standard/base-types/standard-numeric-format-strings.md) und [benutzerdefinierte numerische Formatzeichenfolgen](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span><span class="sxs-lookup"><span data-stu-id="9380d-1495">(See [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span></span>  
  
-   <span data-ttu-id="9380d-1496"><xref:System.DateTime> und <xref:System.DateTimeOffset>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1496"><xref:System.DateTime> and <xref:System.DateTimeOffset>.</span></span> <span data-ttu-id="9380d-1497">(Finden Sie unter [Formatzeichenfolgen für Datum und Uhrzeit](~/docs/standard/base-types/standard-date-and-time-format-strings.md) und [Formatzeichenfolgen für Datum und Uhrzeit](~/docs/standard/base-types/custom-date-and-time-format-strings.md).)</span><span class="sxs-lookup"><span data-stu-id="9380d-1497">(See [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).)</span></span>  
  
-   <span data-ttu-id="9380d-1498">Alle Enumerationstypen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1498">All enumeration types.</span></span> <span data-ttu-id="9380d-1499">(Finden Sie unter [Enumerationsformatzeichenfolgen](~/docs/standard/base-types/enumeration-format-strings.md).)</span><span class="sxs-lookup"><span data-stu-id="9380d-1499">(See [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).)</span></span>  
  
-   <span data-ttu-id="9380d-1500"><xref:System.TimeSpan>-Werte sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1500"><xref:System.TimeSpan> values.</span></span> <span data-ttu-id="9380d-1501">(Finden Sie unter [TimeSpan-Standardformatzeichenfolgen](~/docs/standard/base-types/standard-timespan-format-strings.md) und [benutzerdefinierte TimeSpan-Formatzeichenfolgen](~/docs/standard/base-types/custom-timespan-format-strings.md).)</span><span class="sxs-lookup"><span data-stu-id="9380d-1501">(See [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).)</span></span>  
  
-   <span data-ttu-id="9380d-1502">GUIDs.</span><span class="sxs-lookup"><span data-stu-id="9380d-1502">GUIDs.</span></span> <span data-ttu-id="9380d-1503">(Finden Sie unter den <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> Methode.)</span><span class="sxs-lookup"><span data-stu-id="9380d-1503">(See the <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> method.)</span></span>  
  
 <span data-ttu-id="9380d-1504">Beachten Sie jedoch, dass für jeden benutzerdefinierter Typ implementieren, kann <xref:System.IFormattable> oder Erweitern eines vorhandenen Typs <xref:System.IFormattable> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-1504">However, note that any custom type can implement <xref:System.IFormattable> or extend an existing type's <xref:System.IFormattable> implementation.</span></span>  
  
 <span data-ttu-id="9380d-1505">Im folgenden Beispiel wird die `alignment` und `formatString` Argumente, die formatierte Ausgabe erzeugen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1505">The following example uses the `alignment` and `formatString` arguments to produce formatted output.</span></span>  
  
 [!code-cpp[System.String.Format#9](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/formatoverload2.cpp#9)]
 [!code-csharp-interactive[System.String.Format#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/formatoverload2.cs#9)]
 [!code-vb[System.String.Format#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/formatoverload2.vb#9)]  
  
<a name="HowFormatted"></a>   
## <a name="how-arguments-are-formatted"></a><span data-ttu-id="9380d-1506">Wie werden Argumente formatiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1506">How arguments are formatted</span></span>  
 <span data-ttu-id="9380d-1507">Formatelemente werden nacheinander vom Anfang der Zeichenfolge verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1507">Format items are processed sequentially from the beginning of the string.</span></span> <span data-ttu-id="9380d-1508">Jedes Formatelement verfügt über einen Index, der auf ein Objekt in der Methode Argumentliste entspricht.</span><span class="sxs-lookup"><span data-stu-id="9380d-1508">Each format item has an index that corresponds to an object in the method's argument list.</span></span> <span data-ttu-id="9380d-1509">Die <xref:System.String.Format%2A> Methode ruft das Argument und seine Zeichenfolgendarstellung wie folgt abgeleitet:</span><span class="sxs-lookup"><span data-stu-id="9380d-1509">The <xref:System.String.Format%2A> method retrieves the argument and derives its string representation as follows:</span></span>  
  
-   <span data-ttu-id="9380d-1510">Wenn das Argument ist `null`, die Methode fügt <xref:System.String.Empty?displayProperty=nameWithType> in die Ergebniszeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1510">If the argument is `null`, the method inserts <xref:System.String.Empty?displayProperty=nameWithType> into the result string.</span></span> <span data-ttu-id="9380d-1511">Sie müssen keine kümmern Behandlung einer <xref:System.NullReferenceException> für null-Argumente.</span><span class="sxs-lookup"><span data-stu-id="9380d-1511">You don't have to be concerned with handling a <xref:System.NullReferenceException> for null arguments.</span></span> 
  
-   <span data-ttu-id="9380d-1512">Aufrufen der <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> überladen und `provider` des Objekts <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> Implementierung gibt eine Wert ungleich Null zurück <xref:System.ICustomFormatter> -Implementierung, mit das Argument übergeben wird seine <xref:System.ICustomFormatter.Format%28System.String%2CSystem.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1512">If you call the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> overload and the `provider` object's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> implementation returns a non-null <xref:System.ICustomFormatter> implementation, the argument is passed to its <xref:System.ICustomFormatter.Format%28System.String%2CSystem.Object%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9380d-1513">Wenn das Formatelement enthält eine *FormatString* -Argument, es wird als erstes Argument an die Methode übergeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-1513">If the format item includes a *formatString* argument, it is passed as the first argument to the method.</span></span> <span data-ttu-id="9380d-1514">Wenn die <xref:System.ICustomFormatter> Implementierung zur Verfügung und erzeugt eine nicht-Null-Zeichenfolge, die Zeichenfolge als die Zeichenfolgendarstellung des Arguments zurückgegeben wird; andernfalls der nächste Schritt ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1514">If the <xref:System.ICustomFormatter> implementation is available and produces a non-null string, that string is returned as the string representation of the argument; otherwise, the next step executes.</span></span>  
  
-   <span data-ttu-id="9380d-1515">Wenn das Argument implementiert die <xref:System.IFormattable> -Schnittstelle, die <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> -Implementierung aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1515">If the argument implements the <xref:System.IFormattable> interface, its <xref:System.IFormattable.ToString%2A?displayProperty=nameWithType> implementation is called.</span></span>  
  
-   <span data-ttu-id="9380d-1516">Das Argument der parameterlosen `ToString` -Methode, die entweder überschreibt oder die Implementierung einer Basisklasse erbt, heißt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1516">The argument's parameterless `ToString` method, which either overrides or inherits from a base class implementation, is called.</span></span>  
  
 <span data-ttu-id="9380d-1517">Ein Beispiel für die fängt Aufrufe an die <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> Methode und ermöglicht Ihnen, welche Informationen finden Sie unter der <xref:System.String.Format%2A> -Methode übergibt, einer Formatierungsmethode für jedes Formatelement in einer zusammengesetzten Formatzeichenfolge, finden Sie unter [Beispiel: ein Anbieter abfangen und Römische Ziffer Formatierungsprogramm](#Format7_Example).</span><span class="sxs-lookup"><span data-stu-id="9380d-1517">For an example that intercepts calls to the <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> method and allows you to see what information the <xref:System.String.Format%2A> method passes to a formatting method for each format item in a composite format string, see [Example: An intercept provider and Roman numeral formatter](#Format7_Example).</span></span>  

 <span data-ttu-id="9380d-1518">Weitere Informationen finden Sie unter den [Verarbeitungsreihenfolge](~/docs/standard/base-types/composite-formatting.md##processing-order) im Abschnitt der [kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) Artikel.</span><span class="sxs-lookup"><span data-stu-id="9380d-1518">For more information, see the [Processing Order](~/docs/standard/base-types/composite-formatting.md##processing-order) section in the [Composite Formatting](~/docs/standard/base-types/composite-formatting.md) article.</span></span>  
  
<a name="SameIndex"></a>   
## <a name="format-items-that-have-the-same-index"></a><span data-ttu-id="9380d-1519">Formatelemente, die den gleichen Index aufweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1519">Format items that have the same index</span></span>  
 <span data-ttu-id="9380d-1520">Die <xref:System.String.Format%2A> -Methode löst eine <xref:System.FormatException> -Ausnahme aus, wenn der Index eines Elements der Index größer als oder gleich der Anzahl von Argumenten in der Argumentliste ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-1520">The <xref:System.String.Format%2A> method throws a <xref:System.FormatException> exception if the index of an index item is greater than or equal to the number of arguments in the argument list.</span></span> <span data-ttu-id="9380d-1521">Allerdings `format` zählen mehrere Formatelemente, die als Argumente vorhanden sind, als mehrere Formatelemente auf den gleichen Index aufweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1521">However, `format` can include more format items than there are arguments, as long as multiple format items have the same index.</span></span> <span data-ttu-id="9380d-1522">Im Aufruf der <xref:System.String.Format%28System.String%2CSystem.Object%29> -Methode in der folgenden Beispiel wird die Argumentliste verfügt über ein einzelnes Argument, aber die Formatzeichenfolge enthält zwei Formatelemente: eine zeigt den Dezimalwert einer Zahl und das andere seinem Hexadezimalwert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1522">In the call to the <xref:System.String.Format%28System.String%2CSystem.Object%29> method in following example, the argument list has a single argument, but the format string includes two format items: one displays the decimal value of a number, and the other displays its hexadecimal value.</span></span>  
  
 [!code-csharp-interactive[System.String.Format2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format2/cs/Example1.cs#1)]
 [!code-vb[System.String.Format2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format2/vb/Example1.vb#1)]  
  
<a name="Format_Culture"></a>   
## <a name="formatting-and-culture"></a><span data-ttu-id="9380d-1523">Formatierung und Kultur</span><span class="sxs-lookup"><span data-stu-id="9380d-1523">Formatting and culture</span></span>  
 <span data-ttu-id="9380d-1524">Im Allgemeinen Objekte in der Argumentliste werden in konvertiert die zeichenfolgendarstellungen, die mithilfe der Konventionen der aktuellen Kultur, die von zurückgegeben wird das <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9380d-1524">Generally, objects in the argument list are converted to their string representations by using the conventions of the current culture, which is returned by the <xref:System.Globalization.CultureInfo.CurrentCulture%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="9380d-1525">Sie können dieses Verhalten steuern, indem Sie eine der Überladungen der <xref:System.String.Format%2A> , umfasst eine `provider` Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-1525">You can control this behavior by calling one of the overloads of <xref:System.String.Format%2A> that includes a `provider` parameter.</span></span> <span data-ttu-id="9380d-1526">Die `provider` -Parameter ist ein <xref:System.IFormatProvider> -Implementierung, die benutzerdefinierte und kulturspezifische Formatierungsinformationen bereitstellt, der verwendet wird, um die Formatierung Mittel zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1526">The `provider` parameter is an <xref:System.IFormatProvider> implementation that supplies custom and culture-specific formatting information that is used to moderate the formatting process.</span></span>  
  
 <span data-ttu-id="9380d-1527">Die <xref:System.IFormatProvider> Schnittstelle verfügt über einen einzelnen Member, <xref:System.IFormatProvider.GetFormat%2A>, ist zuständig für die Rückgabe des Objekts, das Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1527">The <xref:System.IFormatProvider> interface has a single member, <xref:System.IFormatProvider.GetFormat%2A>, which is responsible for returning the object that provides formatting information.</span></span> <span data-ttu-id="9380d-1528">.NET Framework verfügt über drei <xref:System.IFormatProvider> Implementierungen, die kulturspezifische Formatierung bereitzustellen:</span><span class="sxs-lookup"><span data-stu-id="9380d-1528">The .NET Framework has three <xref:System.IFormatProvider> implementations that provide culture-specific formatting:</span></span>  
  
-   <span data-ttu-id="9380d-1529"><xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="9380d-1529"><xref:System.Globalization.CultureInfo>.</span></span> <span data-ttu-id="9380d-1530">Die <xref:System.Globalization.CultureInfo.GetFormat%2A> Methodenrückgabe eine kulturspezifische <xref:System.Globalization.NumberFormatInfo> Objekt zum Formatieren von numerischen Werten und eine kulturspezifische <xref:System.Globalization.DateTimeFormatInfo> Objekt zum Formatieren von Datums-und Uhrzeitwerte.</span><span class="sxs-lookup"><span data-stu-id="9380d-1530">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns a culture-specific <xref:System.Globalization.NumberFormatInfo> object for formatting numeric values and a culture-specific <xref:System.Globalization.DateTimeFormatInfo> object for formatting date and time values.</span></span>  
  
-   <span data-ttu-id="9380d-1531"><xref:System.Globalization.DateTimeFormatInfo>, die für die kulturabhängige Formatierung von Datums-und Uhrzeitwerte verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1531"><xref:System.Globalization.DateTimeFormatInfo>, which is used for culture-specific formatting of date and time values.</span></span> <span data-ttu-id="9380d-1532">Die <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A> -Methode sich selbst zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1532">Its <xref:System.Globalization.DateTimeFormatInfo.GetFormat%2A> method returns itself.</span></span>  
  
-   <span data-ttu-id="9380d-1533"><xref:System.Globalization.NumberFormatInfo>, die für die kulturabhängige Formatierung von numerischen Werten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1533"><xref:System.Globalization.NumberFormatInfo>, which is used for culture-specific formatting of numeric values.</span></span> <span data-ttu-id="9380d-1534">Die <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> Eigenschaft sich selbst zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1534">Its <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> property returns itself.</span></span> 

<a name="Format_Custom"></a>   
## <a name="custom-formatting-operations"></a><span data-ttu-id="9380d-1535">Benutzerdefinierte Formatierung Vorgänge</span><span class="sxs-lookup"><span data-stu-id="9380d-1535">Custom formatting operations</span></span>  
 <span data-ttu-id="9380d-1536">Sie können auch eine der Überladungen der Aufrufen der <xref:System.String.Format%2A> Methode, die eine `provider` Parameter vom Typ <xref:System.IFormatProvider> zum Ausführen von Vorgängen für benutzerdefinierte Formatierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-1536">You can also call the any of the overloads of the <xref:System.String.Format%2A> method that have a `provider` parameter of type <xref:System.IFormatProvider> to perform custom formatting operations.</span></span> <span data-ttu-id="9380d-1537">Sie können z. B. eine ganze Zahl als eine ID oder eine Telefonnummer formatieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-1537">For example, you could format an integer as an identification number or as a telephone number.</span></span> <span data-ttu-id="9380d-1538">Benutzerdefinierte Formatierung Ausführen Ihrer `provider` Argument muss beide implementieren die <xref:System.IFormatProvider> und <xref:System.ICustomFormatter> Schnittstellen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1538">To perform custom formatting, your `provider` argument must implement both the <xref:System.IFormatProvider> and <xref:System.ICustomFormatter> interfaces.</span></span> <span data-ttu-id="9380d-1539">Bei der <xref:System.String.Format%2A> -Methode übergeben ein <xref:System.ICustomFormatter> Implementierung als die `provider` -Argument, die <xref:System.String.Format%2A> Methodenaufrufe der <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> Implementierung und fordert ein Objekt vom Typ <xref:System.ICustomFormatter>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1539">When the <xref:System.String.Format%2A> method is passed an <xref:System.ICustomFormatter> implementation as the `provider` argument, the <xref:System.String.Format%2A> method calls its   <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> implementation and requests an object of type <xref:System.ICustomFormatter>.</span></span> <span data-ttu-id="9380d-1540">Es ruft dann die zurückgegebene <xref:System.ICustomFormatter> des Objekts <xref:System.ICustomFormatter.Format%2A> Methode zum Formatieren der einzelnen Elemente in der zusammengesetzten Zeichenfolge übergeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-1540">It then calls the returned <xref:System.ICustomFormatter> object's <xref:System.ICustomFormatter.Format%2A> method to format each format item in the composite string passed to it.</span></span>  
  
 <span data-ttu-id="9380d-1541">Weitere Informationen zum Bereitstellen von benutzerdefinierter Formatierung Lösungen finden Sie unter [wie: definieren und benutzerdefinierten numerischen Formatanbietern verwenden](~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md) und <xref:System.ICustomFormatter>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1541">For more information about providing custom formatting solutions, see [How to: Define and Use Custom Numeric Format Providers](~/docs/standard/base-types/how-to-define-and-use-custom-numeric-format-providers.md) and <xref:System.ICustomFormatter>.</span></span> <span data-ttu-id="9380d-1542">Ein Beispiel, das ganze Zahlen in formatierte benutzerdefinierte Zahlen konvertiert, finden Sie unter [Beispiel: eine benutzerdefinierte Formatierungsvorgang](#Format6_Example).</span><span class="sxs-lookup"><span data-stu-id="9380d-1542">For an example that converts integers to formatted custom numbers, see [Example: A custom formatting operation](#Format6_Example).</span></span> <span data-ttu-id="9380d-1543">Ein Beispiel, das Bytes ohne Vorzeichen in römischen Ziffern konvertiert werden, finden Sie unter [Beispiel: eine Konstante Glied-Anbieter und die römische Zahl Formatierungsprogramm](#Format7_Example).</span><span class="sxs-lookup"><span data-stu-id="9380d-1543">For an example that converts unsigned bytes to Roman numerals, see [Example: An intercept provider and Roman numeral formatter](#Format7_Example).</span></span>  
  
<a name="Format6_Example" />  
### <a name="example-a-custom-formatting-operation"></a><span data-ttu-id="9380d-1544">Beispiel: Eine benutzerdefinierte Formatierungsvorgang</span><span class="sxs-lookup"><span data-stu-id="9380d-1544">Example: A custom formatting operation</span></span>  
 <span data-ttu-id="9380d-1545">Dieses Beispiel definiert einen Formatanbieter, der einen ganzzahligen Wert als die Kontonummer eines Kunden in der Form X-Xxxxx-Xx formatiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1545">This example defines a format provider that formats an integer value as a customer account number in the form x-xxxxx-xx.</span></span>  
  
 [!code-cpp[System.String.Format#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/formatexample2.cpp#2)]
 [!code-csharp-interactive[System.String.Format#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/FormatExample2.cs#2)]
 [!code-vb[System.String.Format#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/FormatExample2.vb#2)]  
  
<a name="Format7_Example" />  
### <a name="example-an-intercept-provider-and-roman-numeral-formatter"></a><span data-ttu-id="9380d-1546">Beispiel: Eine Konstante Glied Anbieter und römische Ziffer Formatierungsprogramm</span><span class="sxs-lookup"><span data-stu-id="9380d-1546">Example: An intercept provider and Roman numeral formatter</span></span>  
 <span data-ttu-id="9380d-1547">Dieses Beispiel definiert einen benutzerdefiniertes Format-Anbieter, implementiert die <xref:System.ICustomFormatter> und <xref:System.IFormatProvider> Schnittstellen für zwei Dinge tun:</span><span class="sxs-lookup"><span data-stu-id="9380d-1547">This example defines a custom format provider that implements the <xref:System.ICustomFormatter> and <xref:System.IFormatProvider> interfaces to do two things:</span></span>  
  
-   <span data-ttu-id="9380d-1548">Es zeigt die Parameter, die an die <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-1548">It displays the parameters passed to its <xref:System.ICustomFormatter.Format%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="9380d-1549">Dies ermöglicht uns, welche Parameter finden Sie unter den <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> übergeben Methode ist für die benutzerdefinierte Formatierung Implementierung für jedes Objekt, das er versucht, zu formatieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-1549">This enables us to see what parameters the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> method is passing to the custom formatting implementation for each object that it tries to format.</span></span> <span data-ttu-id="9380d-1550">Dies kann nützlich sein, wenn Sie Ihre Anwendung debuggen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1550">This can be useful when you're debugging your application.</span></span>  
  
-   <span data-ttu-id="9380d-1551">Wenn das Objekt zu formatierenden einen Bytewert ohne Vorzeichen, die mit der standardmäßigen Formatzeichenfolge "R" formatiert sein, formatiert das benutzerdefinierte Formatierungsprogramm den numerischen Wert als einer römischen Zahl.</span><span class="sxs-lookup"><span data-stu-id="9380d-1551">If the object to be formatted is an unsigned byte value that is to be formatted by using the "R" standard format string, the custom formatter formats the numeric value as a Roman numeral.</span></span>  
  
 [!code-cpp[System.String.Format#11](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/interceptor2.cpp#11)]
 [!code-csharp-interactive[System.String.Format#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/interceptor2.cs#11)]
 [!code-vb[System.String.Format#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/interceptor2.vb#11)]  
  
<a name="QA"></a>   
## <a name="stringformat-q--a"></a><span data-ttu-id="9380d-1552">"String.Format"-F & A</span><span class="sxs-lookup"><span data-stu-id="9380d-1552">String.Format Q & A</span></span>  
  
### <a name="why-do-you-recommend-string-interpolation-over-calls-to-the-stringformat-method"></a><span data-ttu-id="9380d-1553">Warum empfehlen Sie zeichenfolgeninterpolation über Aufrufe an die `String.Format` Methode?</span><span class="sxs-lookup"><span data-stu-id="9380d-1553">Why do you recommend string interpolation over calls to the `String.Format` method?</span></span>

<span data-ttu-id="9380d-1554">Zeichenfolgeninterpolation ist:</span><span class="sxs-lookup"><span data-stu-id="9380d-1554">String interpolation is:</span></span>

- <span data-ttu-id="9380d-1555">Mehr Flexibilität.</span><span class="sxs-lookup"><span data-stu-id="9380d-1555">More flexible.</span></span> <span data-ttu-id="9380d-1556">Es kann eine beliebige Zeichenfolge ohne einen Aufruf einer Methode, die kombinierte Formatierung unterstützen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1556">It can be used in any string without requiring a call to a method that supports composite formatting.</span></span> <span data-ttu-id="9380d-1557">Andernfalls muss der <xref:System.String.Format%2A> -Methode oder eine andere Methode, die kombinierte Formatierung, z. B. unterstützt <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> oder <xref:System.Text.StringBuilder.AppendFormat%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1557">Otherwise, you have to call the <xref:System.String.Format%2A> method or another method that supports composite formatting, such as <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or <xref:System.Text.StringBuilder.AppendFormat%2A?displayProperty=nameWithType>.</span></span> 

- <span data-ttu-id="9380d-1558">Besser lesbar.</span><span class="sxs-lookup"><span data-stu-id="9380d-1558">More readable.</span></span> <span data-ttu-id="9380d-1559">Da der Ausdruck zum Einfügen in eine Zeichenfolge in der interpolierte Ausdruck nicht in einer Argumentliste angezeigt wird, sind interpolierte Zeichenfolgen viel einfacher, Code zu lesen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1559">Because the expression to insert into a string appears in the interpolated expression rather than in a argument list, interpolated strings are far easier to code and to read.</span></span> <span data-ttu-id="9380d-1560">Aufgrund ihrer bessere Lesbarkeit interpolierte Zeichenfolgen können nicht nur Aufrufe von Methoden für zusammengesetzte ersetzen, aber sie können auch in zeichenfolgenverkettung verwendet werden, um präziseren Code klarer zu erzeugen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1560">Because of their greater readability, interpolated strings can replace not only calls to composite format methods, but they can also be used in string concatenation operations to produce more concise, clearer code.</span></span> 

<span data-ttu-id="9380d-1561">Ein Vergleich der folgenden beiden Codebeispiele veranschaulicht der Überlegenheit von interpolierten Zeichenfolgen verketten von Zeichenfolgen und Aufrufe von Methoden zur kombinierten Formatierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-1561">A comparison of the following two code examples illustrates the superiority of interpolated strings over string concatenation and calls to composite formatting methods.</span></span> <span data-ttu-id="9380d-1562">Die Verwendung von mehreren zeichenfolgenverkettung im folgenden Beispiel erzeugt ausführliche und schwer lesbaren Code.</span><span class="sxs-lookup"><span data-stu-id="9380d-1562">The use of multiple string concatenation operations in the following example produces verbose and hard-to-read code.</span></span>

[!code-csharp-interactive[non-interpolated string operations](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa-interpolated1.cs)]
[!code-vb[non-interpolated string operations](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa-interpolated1.vb)]  

<span data-ttu-id="9380d-1563">Im Gegensatz dazu die Verwendung von interpolierte Zeichenfolgen im folgenden Beispiel erzeugen viel klarer Code präziser als die Zeichenfolge verketten-Anweisung und der Aufruf von der <xref:System.String.Format%2A> -Methode in der im vorherigen Beispiel.</span><span class="sxs-lookup"><span data-stu-id="9380d-1563">In contrast, the use of interpolated strings in the following example produce much clearer, more concise code than the string concatenation statement and the call to the <xref:System.String.Format%2A> method in the previous example.</span></span>

[!code-csharp-interactive[interpolated string operations](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa-interpolated2.cs)]
[!code-vb[interpolated string operations](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa-interpolated2.vb)]  

### <a name="where-can-i-find-a-list-of-the-predefined-format-strings-that-can-be-used-with-format-items"></a><span data-ttu-id="9380d-1564">Wo finde ich eine Liste der vordefinierten Formatzeichenfolgen, die mit einem Formatelement verwendet werden können?</span><span class="sxs-lookup"><span data-stu-id="9380d-1564">Where can I find a list of the predefined format strings that can be used with format items?</span></span>  
  
-   <span data-ttu-id="9380d-1565">Alle Typen für Ganzzahl- und Gleitkommatypen finden Sie unter [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) und [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-1565">For all integral and floating-point types, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="9380d-1566">Datum und Uhrzeit-Werten, finden Sie unter [Standardformatzeichenfolgen für Datum und Uhrzeit-Formatzeichenfolgen](~/docs/standard/base-types/standard-date-and-time-format-strings.md) und [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-1566">For date and time values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md) and [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
-   <span data-ttu-id="9380d-1567">Enumerationswerte, finden Sie unter [Enumerationsformatzeichenfolgen](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-1567">For enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span>  
  
-   <span data-ttu-id="9380d-1568">Für <xref:System.TimeSpan> Werte finden Sie unter [TimeSpan-Standardformatzeichenfolgen](~/docs/standard/base-types/standard-timespan-format-strings.md) und [benutzerdefinierte TimeSpan-Formatzeichenfolgen](~/docs/standard/base-types/custom-timespan-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-1568">For <xref:System.TimeSpan> values, see  [Standard TimeSpan Format Strings](~/docs/standard/base-types/standard-timespan-format-strings.md) and [Custom TimeSpan Format Strings](~/docs/standard/base-types/custom-timespan-format-strings.md).</span></span>  
  
-   <span data-ttu-id="9380d-1569">Für <xref:System.Guid> Werte finden Sie im Abschnitt "Hinweise" der <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> Referenzseite.</span><span class="sxs-lookup"><span data-stu-id="9380d-1569">For <xref:System.Guid> values, see the Remarks section of the <xref:System.Guid.ToString%28System.String%29?displayProperty=nameWithType> reference page.</span></span>  
  
### <a name="how-do-i-control-the-alignment-of-the-result-strings-that-replace-format-items"></a><span data-ttu-id="9380d-1570">Wie steuere ich die Ausrichtung des Ergebniszeichenfolgen, die Formatelemente ersetzen?</span><span class="sxs-lookup"><span data-stu-id="9380d-1570">How do I control the alignment of the result strings that replace format items?</span></span>  
 <span data-ttu-id="9380d-1571">Die allgemeine Syntax eines Formatelements ist:</span><span class="sxs-lookup"><span data-stu-id="9380d-1571">The general syntax of a format item is:</span></span>  
  
```  
{index[,alignment][: formatString]}  
```  
  
 <span data-ttu-id="9380d-1572">wo *Ausrichtung* ist eine Ganzzahl mit Vorzeichen, die die Breite des Felds definiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1572">where *alignment* is a signed integer that defines the field width.</span></span> <span data-ttu-id="9380d-1573">Wenn dieser Wert negativ ist, wird Text in das Feld linksbündig ausgerichtet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1573">If this value is negative, text in the field is left-aligned.</span></span> <span data-ttu-id="9380d-1574">Wenn sie positiv ist, ist Text rechtsbündig ausgerichtet.</span><span class="sxs-lookup"><span data-stu-id="9380d-1574">If it is positive, text is right-aligned.</span></span>  
  
### <a name="how-do-i-control-the-number-of-digits-after-the-decimal-separator"></a><span data-ttu-id="9380d-1575">Wie steuere ich die Anzahl der Ziffern nach dem Dezimaltrennzeichen?</span><span class="sxs-lookup"><span data-stu-id="9380d-1575">How do I control the number of digits after the decimal separator?</span></span>  
 <span data-ttu-id="9380d-1576">Alle [standardmäßige numerische Formatzeichenfolgen](~/docs/standard/base-types/standard-numeric-format-strings.md) mit Ausnahme von "D" (die mit nur ganze Zahlen verwendet wird), "G", "R" und "X" ermöglichen ein Genauigkeitsbezeichner angegeben, die die Anzahl von Dezimalstellen in der Ergebniszeichenfolge definiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1576">All [standard numeric format strings](~/docs/standard/base-types/standard-numeric-format-strings.md) except "D" (which is used with integers only), "G", "R", and "X" allow a precision specifier that defines the number of decimal digits in the result string.</span></span> <span data-ttu-id="9380d-1577">Im folgenden Beispiel wird die standardmäßige numerische Formatzeichenfolgen, die Anzahl von Dezimalstellen in der Ergebniszeichenfolge steuern.</span><span class="sxs-lookup"><span data-stu-id="9380d-1577">The following example uses standard numeric format strings to control the number of decimal digits in the result string.</span></span>  
  
 [!code-csharp-interactive[System.String.Format#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa26.cs#26)]
 [!code-vb[System.String.Format#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa26.vb#26)]  
  
 <span data-ttu-id="9380d-1578">Bei Verwendung einer [benutzerdefinierte numerische Formatzeichenfolge](~/docs/standard/base-types/custom-numeric-format-strings.md), den Formatbezeichner "0" zum Steuern der Anzahl von Dezimalstellen in der Ergebniszeichenfolge enthält, wie im folgenden Beispiel gezeigt verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1578">If you're using a [custom numeric format string](~/docs/standard/base-types/custom-numeric-format-strings.md), use the "0" format specifier to control the number of decimal digits in the result string, as the following example shows.</span></span>  
  
 [!code-csharp-interactive[System.String.Format#27](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa27.cs#27)]
 [!code-vb[System.String.Format#27](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa27.vb#27)]  
  
### <a name="how-do-i-control-the-number-of-integral-digits"></a><span data-ttu-id="9380d-1579">Wie steuere ich die Anzahl von ganzzahligen Ziffern?</span><span class="sxs-lookup"><span data-stu-id="9380d-1579">How do I control the number of integral digits?</span></span>  
 <span data-ttu-id="9380d-1580">Standardmäßig werden Formatierungsvorgängen nur ungleich NULL ganzzahlige Ziffern angezeigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1580">By default, formatting operations only display non-zero integral digits.</span></span> <span data-ttu-id="9380d-1581">Wenn Sie ganze Zahlen formatieren, können Sie ein Genauigkeitsbezeichner angegeben, mit der "D" und "X" standard verwendete Formatzeichenfolgen, zum Steuern der Anzahl von Ziffern.</span><span class="sxs-lookup"><span data-stu-id="9380d-1581">If you are formatting integers, you can use a precision specifier with the "D" and "X" standard format strings to control the number of digits.</span></span>  
  
 [!code-csharp-interactive[System.String.Format#29](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa29.cs#29)]
 [!code-vb[System.String.Format#29](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa29.vb#29)]  
  
 <span data-ttu-id="9380d-1582">Können Sie eine ganze Zahl oder Gleitkommazahl mit führenden Nullen, um eine Ergebniszeichenfolge, die mit einer angegebenen Anzahl von ganzzahligen Ziffern zu erzeugen, mithilfe von "0" Auffüllen [benutzerdefinierten numerischen Format Specifier](~/docs/standard/base-types/custom-numeric-format-strings.md), wie im folgende Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1582">You can pad an integer or floating-point number with leading zeros to produce a result string with a specified number of integral digits by using the "0" [custom numeric format specifier](~/docs/standard/base-types/custom-numeric-format-strings.md), as the following example shows.</span></span>  
  
 [!code-csharp-interactive[System.String.Format#28](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa28.cs#28)]
 [!code-vb[System.String.Format#28](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa28.vb#28)]  
  
### <a name="how-many-items-can-i-include-in-the-format-list"></a><span data-ttu-id="9380d-1583">Wie viele Elemente kann ich in der Formatliste aufnehmen?</span><span class="sxs-lookup"><span data-stu-id="9380d-1583">How many items can I include in the format list?</span></span>  
 <span data-ttu-id="9380d-1584">Es ist praktisch unbeschränkt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1584">There is no practical limit.</span></span> <span data-ttu-id="9380d-1585">Der zweite Parameter von der <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> Methode wird mit markiert die <xref:System.ParamArrayAttribute> -Attribut, das Ihnen ermöglicht, die entweder eine durch Trennzeichen getrennte Liste oder ein Objektarray als Formatliste enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1585">The second parameter of the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> method is tagged with the <xref:System.ParamArrayAttribute> attribute, which allows you to include either a delimited list or an object array as your format list.</span></span>  
  
<a name="braces" />
### <a name="how-do-i-include-literal-braces--and--in-the-result-string"></a><span data-ttu-id="9380d-1586">Wie beziehe ich ein literal geschweifte Klammern ("{" und "}") in der Ergebniszeichenfolge?</span><span class="sxs-lookup"><span data-stu-id="9380d-1586">How do I include literal braces ("{" and "}") in the result string?</span></span>  
 <span data-ttu-id="9380d-1587">Z. B. wie Sie verhindern, dass den folgende Methodenaufruf vom Auslösen einer <xref:System.FormatException> Ausnahme?</span><span class="sxs-lookup"><span data-stu-id="9380d-1587">For example, how do you prevent the following method call from throwing a <xref:System.FormatException> exception?</span></span>  
  
 [!code-csharp[System.String.Format#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#23)]
 [!code-vb[System.String.Format#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#23)]  
  
 <span data-ttu-id="9380d-1588">Eine einzelne öffnende oder schließende geschweifte Klammer wird immer als Anfang oder Ende eines Formatelements interpretiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1588">A single opening or closing brace is always interpreted as the beginning or end of a format item.</span></span> <span data-ttu-id="9380d-1589">Um die interpretiert werden, muss er mit Escapezeichen versehen werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1589">To be interpreted literally, it must be escaped.</span></span> <span data-ttu-id="9380d-1590">Sie eine geschweifte Klammer durch Hinzufügen einer anderen geschweiften Klammern mit Escapezeichen versehen ("{{" und "}}" anstelle von "{" und "}"), wie in den folgenden Methodenaufruf:</span><span class="sxs-lookup"><span data-stu-id="9380d-1590">You escape a brace by adding another brace ("{{" and "}}" instead of "{" and "}"), as in the following method call:</span></span>  
  
 [!code-csharp-interactive[System.String.Format#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#24)]
 [!code-vb[System.String.Format#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#24)]  
  
 <span data-ttu-id="9380d-1591">Geschweifte Klammern selbst mit Escapezeichen gibt allerdings leicht falsch interpretiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1591">However, even escaped braces are easily misinterpreted.</span></span> <span data-ttu-id="9380d-1592">Es wird empfohlen, dass Sie die geschweiften Klammern, in der Formatliste einschließen und Formatelementen zum Einfügen in der Ergebniszeichenfolge enthält, wie im folgenden Beispiel gezeigt verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1592">We recommend that you include braces in the format list and use format items to insert them in the result string, as the following example shows.</span></span>  
  
 [!code-csharp-interactive[System.String.Format#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#25)]
 [!code-vb[System.String.Format#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#25)]  
  
### <a name="why-does-my-call-to-the-stringformat-method-throw-a-formatexception"></a><span data-ttu-id="9380d-1593">Warum wird meine Aufruf der Methode "String.Format" FormatException ausgelöst?</span><span class="sxs-lookup"><span data-stu-id="9380d-1593">Why does my call to the String.Format method throw a FormatException?</span></span>  
 <span data-ttu-id="9380d-1594">Die häufigste Ursache der Ausnahme ist, dass der Index eines Formatelements entspricht nicht auf ein Objekt in der Formatliste definiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1594">The most common cause of the exception is that the index of a format item doesn't correspond to an object in the format list.</span></span> <span data-ttu-id="9380d-1595">In der Regel bedeutet dies, Sie die Indizes der Formatelemente misnumbered haben oder Sie vergessen haben, ein Objekt in der Formatliste einfügen möchten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1595">Usually this indicates that you've misnumbered the indexes of format items or you've forgotten to include an object in the format list.</span></span> <span data-ttu-id="9380d-1596">Es wird versucht, einen ohne Escapezeichen linke oder rechte Klammer Zeichen auch löst eine <xref:System.FormatException>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1596">Attempting to include an unescaped left or right brace character also throws a <xref:System.FormatException>.</span></span> <span data-ttu-id="9380d-1597">In einigen Fällen ist die Ausnahme das Ergebnis war ein Tippfehler; ein typischer Fehler ist beispielsweise falsch eingeben "[" (die öffnende Klammer) anstelle von "{" (die linke geschweifte Klammer).</span><span class="sxs-lookup"><span data-stu-id="9380d-1597">Occasionally, the exception is the result of a typo; for example, a typical mistake is to mistype "[" (the left bracket) instead of "{" (the left brace).</span></span>  
  
### <a name="if-the-formatsystemiformatprovidersystemstringsystemobject-method-supports-parameter-arrays-why-does-my-code-throw-an-exception-when-i-use-an-array"></a><span data-ttu-id="9380d-1598">Wenn die Methode Format(System.IFormatProvider,System.String,System.Object[]) Parameterarrays, warum mein Code eine Ausnahme auslöst unterstützt, wenn ich ein Array verwenden?</span><span class="sxs-lookup"><span data-stu-id="9380d-1598">If the Format(System.IFormatProvider,System.String,System.Object[]) method supports parameter arrays, why does my code throw an exception when I use an array?</span></span>  
 <span data-ttu-id="9380d-1599">Der folgende code beispielsweise löst ein <xref:System.FormatException> Ausnahme:</span><span class="sxs-lookup"><span data-stu-id="9380d-1599">For example, the following code throws a <xref:System.FormatException> exception:</span></span>  
  
 [!code-csharp[System.String.Format#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa1.cs#21)]
 [!code-vb[System.String.Format#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa1.vb#21)]  
  
 <span data-ttu-id="9380d-1600">Dies ist ein Problem der überladungsauflösung des Compiler.</span><span class="sxs-lookup"><span data-stu-id="9380d-1600">This is a problem of compiler overload resolution.</span></span> <span data-ttu-id="9380d-1601">Da der Compiler ein Array von Ganzzahlen in ein Objektarray konvertieren kann, es wird das ganze Zahl Array als ein einzelnes Argument, aufruft und es dem <xref:System.String.Format%28System.String%2CSystem.Object%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1601">Because the compiler cannot convert an array of integers to an object array, it treats the integer array as a single argument, so it calls the <xref:System.String.Format%28System.String%2CSystem.Object%29> method.</span></span> <span data-ttu-id="9380d-1602">Die Ausnahme wird ausgelöst, da es vier Formatelemente aber nur ein einzelnes Element in der Formatliste gibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1602">The exception is thrown because there are four format items but only a single item in the format list.</span></span>  
  
 <span data-ttu-id="9380d-1603">Da weder Visual Basic oder c# ein Array von Ganzzahlen in ein Objektarray konvertieren kann, haben Sie zum Durchführen der Konvertierung selbst vor dem Aufruf der <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1603">Because neither Visual Basic nor C# can convert an integer array to an object array, you have to perform the conversion yourself before calling the <xref:System.String.Format%28System.String%2CSystem.Object%5B%5D%29> method.</span></span> <span data-ttu-id="9380d-1604">Im folgenden Beispiel wird eine Implementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-1604">The following example provides one implementation.</span></span>  
  
 [!code-csharp-interactive[System.String.Format#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa2.cs#22)]
 [!code-vb[System.String.Format#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa2.vb#22)]  

## Examples

<span data-ttu-id="9380d-1605">Zahlreiche Beispiele, die aufgerufen werden die <xref:System.String.Format%2A> Methode vermischt werden, über die ["Hinweise"](#remarks) Abschnitt dieses Artikels.</span><span class="sxs-lookup"><span data-stu-id="9380d-1605">Numerous examples that call the <xref:System.String.Format%2A> method are interspersed through the [Remarks](#remarks) section of this article.</span></span>  

[!INCLUDE[interactive-note](~/includes/csharp-interactive-note.md)]

<span data-ttu-id="9380d-1606">Sie können auch einen vollständigen Satz von `String.Format` Beispiele, die enthalten sind ein [.NET Core 2.0-Projekt für C#-Code](https://github.com/dotnet/samples/raw/master/snippets/csharp/downloads/api/System/String.Format.zip) und [.NET Core 2.0-Projekt für Visual Basic](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/downloads/api/System/String.Format.zip), aus der [Dotnet / GitHub-beispielrepository](https://github.com/dotnet/samples).</span><span class="sxs-lookup"><span data-stu-id="9380d-1606">You can also download a complete set of `String.Format` examples, which are included a [.NET Core 2.0 project for C#](https://github.com/dotnet/samples/raw/master/snippets/csharp/downloads/api/System/String.Format.zip) and a [.NET Core 2.0 project for Visual Basic](https://github.com/dotnet/samples/raw/master/snippets/visualbasic/downloads/api/System/String.Format.zip), from the [dotnet/samples GitHub repository](https://github.com/dotnet/samples).</span></span>

<span data-ttu-id="9380d-1607">Im folgenden werden einige der Beispiele in diesem Artikel enthalten:</span><span class="sxs-lookup"><span data-stu-id="9380d-1607">The following are some of the examples included in the article:</span></span>

### <a name="create-a-format-string"></a><span data-ttu-id="9380d-1608">Erstellen Sie eine Formatzeichenfolge</span><span class="sxs-lookup"><span data-stu-id="9380d-1608">Create a format string</span></span>

[<span data-ttu-id="9380d-1609">Eine Zeichenfolge eingefügt</span><span class="sxs-lookup"><span data-stu-id="9380d-1609">Inserting a string</span></span>](#inserting-a-string)  
[<span data-ttu-id="9380d-1610">Das Formatelement</span><span class="sxs-lookup"><span data-stu-id="9380d-1610">The format item</span></span>](#the-format-item)  
[<span data-ttu-id="9380d-1611">Formatelemente, die den gleichen Index aufweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1611">Format items that have the same index</span></span>](#format-items-that-have-the-same-index)

### <a name="control-formatted-output"></a><span data-ttu-id="9380d-1612">Steuern Sie formatierten Ausgabe</span><span class="sxs-lookup"><span data-stu-id="9380d-1612">Control formatted output</span></span>

[<span data-ttu-id="9380d-1613">Steuern der Formatierung</span><span class="sxs-lookup"><span data-stu-id="9380d-1613">Controlling formatting</span></span>](#controlling-formatting)  
[<span data-ttu-id="9380d-1614">Steuern der Abstand</span><span class="sxs-lookup"><span data-stu-id="9380d-1614">Controlling spacing</span></span>](#controlling-spacing)  
[<span data-ttu-id="9380d-1615">Steuern der Ausrichtung</span><span class="sxs-lookup"><span data-stu-id="9380d-1615">Controlling alignment</span></span>](#controlling-alignment)  
[<span data-ttu-id="9380d-1616">Steuern der Anzahl von ganzzahligen Ziffern</span><span class="sxs-lookup"><span data-stu-id="9380d-1616">Controlling the number of integral digits</span></span>](#how-do-i-control-the-number-of-integral-digits)  
[<span data-ttu-id="9380d-1617">Steuern die Anzahl der Ziffern nach dem Dezimaltrennzeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-1617">Controlling the number of digits after the decimal separator</span></span>](#how-do-i-control-the-number-of-digits-after-the-decimal-separator)  
[<span data-ttu-id="9380d-1618">Literale geschweifte Klammern einschließlich in eine Ergebniszeichenfolge</span><span class="sxs-lookup"><span data-stu-id="9380d-1618">Including literal braces in a result string</span></span>](#braces)  

### <a name="make-format-strings-culture-sensitive"></a><span data-ttu-id="9380d-1619">Stellen Sie Formatzeichenfolgen kulturabhängige</span><span class="sxs-lookup"><span data-stu-id="9380d-1619">Make format strings culture-sensitive</span></span>

[<span data-ttu-id="9380d-1620">Kulturabhängige Formatierung</span><span class="sxs-lookup"><span data-stu-id="9380d-1620">Culture-sensitive formatting</span></span>](#culture-sensitive-formatting)  

### <a name="customize-the-formatting-operation"></a><span data-ttu-id="9380d-1621">Anpassen des Formatierungsvorgangs</span><span class="sxs-lookup"><span data-stu-id="9380d-1621">Customize the formatting operation</span></span>

[<span data-ttu-id="9380d-1622">Einen benutzerdefinierten Formatierungsvorgang</span><span class="sxs-lookup"><span data-stu-id="9380d-1622">A custom formatting operation</span></span>](#example-a-custom-formatting-operation)  
[<span data-ttu-id="9380d-1623">Eine Konstante Glied-Anbieter und die römische Zahl Formatierungsprogramm</span><span class="sxs-lookup"><span data-stu-id="9380d-1623">An intercept provider and Roman numeral formatter</span></span>](#example-an-intercept-provider-and-roman-numeral-formatter)  

 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (format As String, arg0 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Format : string * obj -&gt; string" Usage="System.string.Format (format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="9380d-1624">Eine [zusammengesetzte Formatzeichenfolge](~/docs/standard/base-types/composite-formatting.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1624">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="9380d-1625">Das zu formatierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1625">The object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1626">Ersetzt mindestens ein Formatelement in einer Zeichenfolge durch die Zeichenfolgendarstellung eines angegebenen Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1626">Replaces one or more format items in a string with the string representation of a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1627">Eine Kopie von <paramref name="format" />, in der alle Formatelemente durch die Zeichenfolgendarstellung von <paramref name="arg0" /> ersetzt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1627">A copy of <paramref name="format" /> in which any format items are replaced by the string representation of <paramref name="arg0" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="9380d-1628">Diese Methode verwendet die [Funktion für kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) , den Wert eines Ausdrucks in seine Zeichenfolgendarstellung zu konvertieren und diese Darstellung in einer Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1628">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of an expression to its string representation and to embed that representation in a string.</span></span> 

[!INCLUDE[simple-string-format](~/includes/simple-string-format.md)]

## <a name="example-formatting-a-single-argument"></a><span data-ttu-id="9380d-1629">Beispiel: Formatieren eines einzelnen Arguments</span><span class="sxs-lookup"><span data-stu-id="9380d-1629">Example: Formatting a single argument</span></span>  
 
 <span data-ttu-id="9380d-1630">Im folgenden Beispiel wird die <xref:System.String.Format%28System.String%2CSystem.Object%29> Methode, um das Alter einer Einzelperson in der Mitte einer Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1630">The following example uses the <xref:System.String.Format%28System.String%2CSystem.Object%29> method to embed an individual's age in the middle of a string.</span></span>  
  
 [!code-cpp[System.String.Format#7](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/format7.cpp#7)]
 [!code-csharp-interactive[System.String.Format#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/format7.cs#7)]
 [!code-vb[System.String.Format#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/format7.vb#7)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1631">
            <paramref name="format" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1631">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-1632">Das Formatelement in <paramref name="format" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1632">The format item in <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="9380d-1633">Oder:  Der Index eines Formatelements ist nicht 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1633">-or-  The index of a format item is not zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (format As String, ParamArray args As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Format : string * obj[] -&gt; string" Usage="System.string.Format (format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="9380d-1634">Eine [zusammengesetzte Formatzeichenfolge](~/docs/standard/base-types/composite-formatting.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1634">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="9380d-1635">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1635">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1636">Ersetzt das Formatelement in einer angegebenen Zeichenfolge durch die Zeichenfolgendarstellung eines entsprechenden Objekts in einem angegebenen Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1636">Replaces the format item in a specified string with the string representation of a corresponding object in a specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1637">Eine Kopie von <paramref name="format" />, in der die Formatelemente durch die Zeichenfolgendarstellung der entsprechenden Objekte in <paramref name="args" /> ersetzt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1637">A copy of <paramref name="format" /> in which the format items have been replaced by the string representation of the corresponding objects in <paramref name="args" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="9380d-1638">Diese Methode verwendet die [Funktion für kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) , den Wert der vier oder mehr Ausdrücke, deren Zeichenfolgenrepräsentationen konvertieren und diese Darstellungen in eine Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1638">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of four or more expressions to their string representations and to embed those representations in a string.</span></span> <span data-ttu-id="9380d-1639">Da die `args` Parameter markiert wird, mit der <xref:System.ParamArrayAttribute?displayProperty=nameWithType> -Attribut, Sie können die Objekte an die Methode übergeben als einzelne Argumente oder als ein <xref:System.Object> Array.</span><span class="sxs-lookup"><span data-stu-id="9380d-1639">Since the `args` parameter is marked with the <xref:System.ParamArrayAttribute?displayProperty=nameWithType> attribute, you can pass the objects to the method as individual arguments or as an <xref:System.Object> array.</span></span> 

[!INCLUDE[simple-string-format](~/includes/simple-string-format.md)]

## <a name="example-formatting-more-than-three-arguments"></a><span data-ttu-id="9380d-1640">Beispiel: Formatieren von mehr als drei Argumente</span><span class="sxs-lookup"><span data-stu-id="9380d-1640">Example: Formatting more than three arguments</span></span>  
 
 <span data-ttu-id="9380d-1641">Dieses Beispiel erstellt eine Zeichenfolge, die Daten für die Höchst- und Tiefsttemperatur für ein bestimmtes Datum enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-1641">This example creates a string that contains data on the high and low temperature on a particular date.</span></span> <span data-ttu-id="9380d-1642">Die zusammengesetzte Formatierungszeichenfolge verfügt über fünf Formatelemente in c#-Beispiel und sechs in Visual Basic-Beispiel.</span><span class="sxs-lookup"><span data-stu-id="9380d-1642">The composite format string has five format items in the C# example and six in the Visual Basic example.</span></span> <span data-ttu-id="9380d-1643">Zwei der die Formatelemente definieren die Breite des Werts, auf die entsprechende Zeichenfolgendarstellung und das erste Formatelement enthält auch einen Standardformatbezeichner für Datum und Uhrzeit-Formatzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1643">Two of the format items define the width of their corresponding value's string representation, and the first format item also includes a standard date and time format string.</span></span>  
  
 [!code-cpp[System.String.Format#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/format5.cpp#5)]
 [!code-csharp-interactive[System.String.Format#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/format5.cs#5)]
 [!code-vb[System.String.Format#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/format5.vb#5)]  
  
 <span data-ttu-id="9380d-1644">Sie können auch übergeben der Objekte, die als Array formatiert werden anstelle eines Argumentliste enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1644">You can also pass the objects to be formatted as an array rather than a an argument list.</span></span>  
  
 [!code-cpp[System.String.Format#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/format_paramarray1.cpp#10)]
 [!code-csharp-interactive[System.String.Format#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/format_paramarray1.cs#10)]
 [!code-vb[System.String.Format#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/format_paramarray1.vb#10)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1645">
            <paramref name="format" /> oder <paramref name="args" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1645">
              <paramref name="format" /> or <paramref name="args" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-1646">
            <paramref name="format" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1646">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="9380d-1647">Oder:  Der Index eines Formatelements ist kleiner als 0 (null) oder größer oder gleich der Länge des <paramref name="args" />-Arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1647">-or-  The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (IFormatProvider provider, string format, object arg0);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.IFormatProvider provider, string format, object arg0) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.IFormatProvider,System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (provider As IFormatProvider, format As String, arg0 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0);" />
      <MemberSignature Language="F#" Value="static member Format : IFormatProvider * string * obj -&gt; string" Usage="System.string.Format (provider, format, arg0)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-1648">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1648">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="9380d-1649">Eine [zusammengesetzte Formatzeichenfolge](~/docs/standard/base-types/composite-formatting.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1649">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="9380d-1650">Das zu formatierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1650">The object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1651">Ersetzt die Formatelemente in einer angegebenen Zeichenfolge durch die Zeichenfolgendarstellung des angegebenen Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1651">Replaces the format item or items in a specified string with the string representation of the corresponding object.</span>
          </span>
          <span data-ttu-id="9380d-1652">Ein Parameter liefert kulturspezifische Formatierungsinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1652">A parameter supplies culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1653">Eine Kopie von <paramref name="format" />, in der die Formatelemente durch die Zeichenfolgendarstellung von <paramref name="arg0" /> ersetzt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1653">A copy of <paramref name="format" /> in which the format item or items have been replaced by the string representation of <paramref name="arg0" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="9380d-1654">Diese Methode verwendet die [Funktion für kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) , den Wert eines Ausdrucks in seine Zeichenfolgendarstellung zu konvertieren und diese Darstellung in einer Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1654">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of an expression to its string representation and to embed that representation in a string.</span></span> <span data-ttu-id="9380d-1655">Beim Durchführen der Konvertierung, verwendet die Methode, kulturabhängige Formatierung oder einen benutzerdefinierten Formatierer.</span><span class="sxs-lookup"><span data-stu-id="9380d-1655">In performing the conversion, the method uses culture-sensitive formatting or a custom formatter.</span></span> <span data-ttu-id="9380d-1656">Konvertiert die Methode `arg0` in seine Zeichenfolgendarstellung durch Aufrufen der **ToString(IFormatProvider)** Methode oder das Objekt entsprechende schließt Formatelement, das eine Formatzeichenfolge, durch den Aufruf der **ToString () String, IFormatProvider)** Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1656">The method converts `arg0` to its string representation by calling its **ToString(IFormatProvider)** method or, if the object's corresponding format item includes a format string, by calling its **ToString(String,IFormatProvider)** method.</span></span> <span data-ttu-id="9380d-1657">Wenn diese Methoden nicht vorhanden sind, ruft das Objekt die parameterlosen **ToString** Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1657">If these methods don't exist, it calls the object's parameterless **ToString** method.</span></span>  

[!INCLUDE[provider-string-format](~/includes/provider-string-format.md)]
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1658">
            <paramref name="format" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1658">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-1659">
            <paramref name="format" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1659">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="9380d-1660">Oder:  Der Index eines Formatelements ist nicht 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1660">-or-  The index of a format item is not zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (IFormatProvider provider, string format, params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.IFormatProvider provider, string format, object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.IFormatProvider,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (provider As IFormatProvider, format As String, ParamArray args As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(IFormatProvider ^ provider, System::String ^ format, ... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="static member Format : IFormatProvider * string * obj[] -&gt; string" Usage="System.string.Format (provider, format, args)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-1661">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1661">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="9380d-1662">Eine [zusammengesetzte Formatzeichenfolge](~/docs/standard/base-types/composite-formatting.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1662">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span>
          </span>
        </param>
        <param name="args">
          <span data-ttu-id="9380d-1663">Ein Objektarray mit 0 (null) oder mehr zu formatierenden Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1663">An object array that contains zero or more objects to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1664">Ersetzt die Formatelemente in einer Zeichenfolge durch die Zeichenfolgendarstellungen entsprechender Objekte in einem angegebenen Array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1664">Replaces the format items in a string with the string representations of corresponding objects in a specified array.</span>
          </span>
          <span data-ttu-id="9380d-1665">Ein Parameter liefert kulturspezifische Formatierungsinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1665">A parameter supplies culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1666">Eine Kopie von <paramref name="format" />, in der die Formatelemente durch die Zeichenfolgendarstellung der entsprechenden Objekte in <paramref name="args" /> ersetzt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1666">A copy of <paramref name="format" /> in which the format items have been replaced by the string representation of the corresponding objects in <paramref name="args" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="9380d-1667">Diese Methode verwendet die [Funktion für kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) , vier oder mehr Ausdrücke in ihre Zeichenfolgendarstellung konvertieren und diese Darstellungen in eine Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1667">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert four or more expressions to their string representations and to embed those representations in a string.</span></span> <span data-ttu-id="9380d-1668">Beim Durchführen der Konvertierung, verwendet die Methode, kulturabhängige Formatierung oder einen benutzerdefinierten Formatierer.</span><span class="sxs-lookup"><span data-stu-id="9380d-1668">In performing the conversion, the method uses culture-sensitive formatting or a custom formatter.</span></span> <span data-ttu-id="9380d-1669">Die Methode konvertiert jede <xref:System.Object> Argument in seine Zeichenfolgendarstellung durch Aufrufen der **ToString(IFormatProvider)** Methode oder das Objekt entsprechende schließt Formatelement, das eine Formatzeichenfolge, durch Aufrufen der **ToString(String,IFormatProvider)** Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1669">The method converts each <xref:System.Object> argument to its string representation by calling its **ToString(IFormatProvider)** method or, if the object's corresponding format item includes a format string, by calling its **ToString(String,IFormatProvider)** method.</span></span> <span data-ttu-id="9380d-1670">Wenn diese Methoden nicht vorhanden sind, ruft das Objekt die parameterlosen **ToString** Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1670">If these methods don't exist, it calls the object's parameterless **ToString** method.</span></span>  

[!INCLUDE[provider-string-format](~/includes/provider-string-format.md)]
  
## <a name="example-culture-sensitive-formatting"></a><span data-ttu-id="9380d-1671">Beispiel: Kulturabhängige Formatierung</span><span class="sxs-lookup"><span data-stu-id="9380d-1671">Example: Culture-sensitive formatting</span></span>  
 <span data-ttu-id="9380d-1672">Dieses Beispiel verwendet die <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> Methode, um die Zeichenfolgendarstellung für einige Datums-und Uhrzeitwerte und numerische Werte anzeigen, indem Sie verschiedene Kulturen verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1672">This example uses the <xref:System.String.Format%28System.IFormatProvider%2CSystem.String%2CSystem.Object%5B%5D%29> method to display the string representation of some date and time values and numeric values by using several different cultures.</span></span>  
  
 [!code-csharp-interactive[System.String.Format2#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format2/cs/Example2.cs#2)]
 [!code-vb[System.String.Format2#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format2/vb/Example2.vb#2)]  

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1673">
            <paramref name="format" /> oder <paramref name="args" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1673">
              <paramref name="format" /> or <paramref name="args" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-1674">
            <paramref name="format" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1674">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="9380d-1675">Oder:  Der Index eines Formatelements ist kleiner als 0 (null) oder größer oder gleich der Länge des <paramref name="args" />-Arrays.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1675">-or-  The index of a format item is less than zero, or greater than or equal to the length of the <paramref name="args" /> array.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.DateTimeFormatInfo" />
        <altmember cref="T:System.ICustomFormatter" />
        <altmember cref="T:System.IFormatProvider" />
        <altmember cref="T:System.Globalization.NumberFormatInfo" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (format As String, arg0 As Object, arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Format : string * obj * obj -&gt; string" Usage="System.string.Format (format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="9380d-1676">Eine [zusammengesetzte Formatzeichenfolge](~/docs/standard/base-types/composite-formatting.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1676">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="9380d-1677">Das erste zu formatierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1677">The first object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="9380d-1678">Das zweite zu formatierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1678">The second object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1679">Ersetzt die Formatelemente in einer Zeichenfolge durch die Zeichenfolgendarstellung von zwei angegebenen Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1679">Replaces the format items in a string with the string representation of two specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1680">Eine Kopie von <paramref name="format" />, in der Formatelemente durch die Zeichenfolgendarstellung von <paramref name="arg0" /> und <paramref name="arg1" /> ersetzt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1680">A copy of <paramref name="format" /> in which format items are replaced by the string representations of <paramref name="arg0" /> and <paramref name="arg1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="9380d-1681">Diese Methode verwendet die [Funktion für kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) , den Wert von zwei Ausdrücken, deren Zeichenfolgenrepräsentationen konvertieren und diese Darstellungen in eine Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1681">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of two expressions to their string representations and to embed those representations in a string.</span></span> 

[!INCLUDE[simple-string-format](~/includes/simple-string-format.md)]

## <a name="example-formatting-two-arguments"></a><span data-ttu-id="9380d-1682">Beispiel: Formatieren von zwei Argumenten</span><span class="sxs-lookup"><span data-stu-id="9380d-1682">Example: Formatting two arguments</span></span>  
 
 <span data-ttu-id="9380d-1683">Dieses Beispiel verwendet die <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> anzuzeigenden Zeit und Temperatur-Daten in einer generischen Methode <xref:System.Collections.Generic.Dictionary%602> Objekt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1683">This example uses the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%29> method to display time and temperature data stored in a generic <xref:System.Collections.Generic.Dictionary%602> object.</span></span> <span data-ttu-id="9380d-1684">Beachten Sie, dass die Zeichenfolge drei Formatelemente, allerdings nur zwei stehen zu formatierenden Objekten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1684">Note that the format string has three format items, although there are only two objects to format.</span></span> <span data-ttu-id="9380d-1685">Dies ist, weil das erste Objekt in der Liste (ein Wert für Datum und Uhrzeit) von zwei Formatelemente verwendet werden: die erste Format-Element angezeigt, die Zeit, und die zweite zeigt das Datum an.</span><span class="sxs-lookup"><span data-stu-id="9380d-1685">This is because the first object in the list (a date and time value) is used by two format items: The first format item displays the time, and the second displays the date.</span></span>  
  
 [!code-cpp[System.String.Format#6](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/formatexample4.cpp#6)]
 [!code-csharp-interactive[System.String.Format#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/formatexample4.cs#6)]
 [!code-vb[System.String.Format#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/formatexample4.vb#6)]  
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1686">
            <paramref name="format" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1686">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-1687">
            <paramref name="format" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1687">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="9380d-1688">Oder:  Der Index eines Formatelements ist nicht 0 (null) oder 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1688">-or-  The index of a format item is not zero or one.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (IFormatProvider provider, string format, object arg0, object arg1);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.IFormatProvider provider, string format, object arg0, object arg1) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (provider As IFormatProvider, format As String, arg0 As Object, arg1 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0, System::Object ^ arg1);" />
      <MemberSignature Language="F#" Value="static member Format : IFormatProvider * string * obj * obj -&gt; string" Usage="System.string.Format (provider, format, arg0, arg1)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-1689">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1689">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="9380d-1690">Eine [zusammengesetzte Formatzeichenfolge](~/docs/standard/base-types/composite-formatting.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1690">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="9380d-1691">Das erste zu formatierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1691">The first object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="9380d-1692">Das zweite zu formatierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1692">The second object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1693">Ersetzt die Formatelemente in einer Zeichenfolge durch die Zeichenfolgendarstellung von zwei angegebenen Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1693">Replaces the format items in a string with the string representation of two specified objects.</span>
          </span>
          <span data-ttu-id="9380d-1694">Ein Parameter liefert kulturspezifische Formatierungsinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1694">A parameter supplies culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1695">Eine Kopie von <paramref name="format" />, in der Formatelemente durch die Zeichenfolgendarstellung von <paramref name="arg0" /> und <paramref name="arg1" /> ersetzt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1695">A copy of <paramref name="format" /> in which format items are replaced by the string representations of <paramref name="arg0" /> and <paramref name="arg1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="9380d-1696">Diese Methode verwendet die [Funktion für kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) , zwei Ausdrücke in ihre Zeichenfolgendarstellung konvertieren und diese Darstellungen in eine Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1696">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert two expressions to their string representations and to embed those representations in a string.</span></span> <span data-ttu-id="9380d-1697">Beim Durchführen der Konvertierung, verwendet die Methode, kulturabhängige Formatierung oder einen benutzerdefinierten Formatierer.</span><span class="sxs-lookup"><span data-stu-id="9380d-1697">In performing the conversion, the method uses culture-sensitive formatting or a custom formatter.</span></span> <span data-ttu-id="9380d-1698">Die Methode konvertiert jede <xref:System.Object> Argument in seine Zeichenfolgendarstellung durch Aufrufen der **ToString(IFormatProvider)** Methode oder das Objekt entsprechende schließt Formatelement, das eine Formatzeichenfolge, durch Aufrufen der **ToString(String,IFormatProvider)** Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1698">The method converts each <xref:System.Object> argument to its string representation by calling its **ToString(IFormatProvider)** method or, if the object's corresponding format item includes a format string, by calling its **ToString(String,IFormatProvider)** method.</span></span> <span data-ttu-id="9380d-1699">Wenn diese Methoden nicht vorhanden sind, ruft das Objekt die parameterlosen **ToString** Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1699">If these methods don't exist, it calls the object's parameterless **ToString** method.</span></span>  

[!INCLUDE[provider-string-format](~/includes/provider-string-format.md)]
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1700">
            <paramref name="format" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1700">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-1701">
            <paramref name="format" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1701">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="9380d-1702">Oder:  Der Index eines Formatelements ist nicht 0 (null) oder 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1702">-or-  The index of a format item is not zero or one.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (format As String, arg0 As Object, arg1 As Object, arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Format : string * obj * obj * obj -&gt; string" Usage="System.string.Format (format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="9380d-1703">Eine [zusammengesetzte Formatzeichenfolge](~/docs/standard/base-types/composite-formatting.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1703">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="9380d-1704">Das erste zu formatierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1704">The first object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="9380d-1705">Das zweite zu formatierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1705">The second object to format.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="9380d-1706">Das dritte zu formatierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1706">The third object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1707">Ersetzt die Formatelemente in einer Zeichenfolge durch die Zeichenfolgendarstellung von drei angegebenen Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1707">Replaces the format items in a string with the string representation of three specified objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1708">Eine Kopie von <paramref name="format" />, in der die Formatelemente durch die Zeichenfolgendarstellung von <paramref name="arg0" />, <paramref name="arg1" /> und <paramref name="arg2" /> ersetzt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1708">A copy of <paramref name="format" /> in which the format items have been replaced by the string representations of <paramref name="arg0" />, <paramref name="arg1" />, and <paramref name="arg2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="9380d-1709">Diese Methode verwendet die [Funktion für kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) um den Wert der drei Ausdrücke, deren Zeichenfolgenrepräsentationen konvertieren und diese Darstellungen in eine Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1709">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert the value of three expressions to their string representations and to embed those representations in a string.</span></span> 

[!INCLUDE[simple-string-format](~/includes/simple-string-format.md)]

## <a name="example-formatting-three-arguments"></a><span data-ttu-id="9380d-1710">Beispiel: Formatieren von drei Argumenten</span><span class="sxs-lookup"><span data-stu-id="9380d-1710">Example: Formatting three arguments</span></span>  
 
 <span data-ttu-id="9380d-1711">Dieses Beispiel verwendet die <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> Methode, um eine Zeichenfolge zu erstellen, die das Ergebnis von booleschen Werten veranschaulicht `And` Vorgang mit zwei ganzzahligen Werten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1711">This example uses the <xref:System.String.Format%28System.String%2CSystem.Object%2CSystem.Object%2CSystem.Object%29> method to create a string that illustrates the result of a Boolean `And` operation with two integer values.</span></span> <span data-ttu-id="9380d-1712">Beachten Sie, dass die Formatzeichenfolge sechs Formatelemente enthält, aber die Methode nur drei Elemente in der Parameterliste hat, da jedes Element auf zwei verschiedene Arten formatiert ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-1712">Note that the format string includes six format items, but the method has only three items in its parameter list, because each item is formatted in two different ways.</span></span>  
  
 [!code-cpp[System.String.Format#4](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Format/cpp/format4.cpp#4)]
 [!code-csharp-interactive[System.String.Format#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/format4.cs#4)]
 [!code-vb[System.String.Format#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/format4.vb#4)]  
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1713">
            <paramref name="format" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1713">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-1714">
            <paramref name="format" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1714">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="9380d-1715">Oder:  Der Index eines Formatelements ist kleiner als 0 (null) oder größer als 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1715">-or-  The index of a format item is less than zero, or greater than two.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (IFormatProvider provider, string format, object arg0, object arg1, object arg2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.IFormatProvider provider, string format, object arg0, object arg1, object arg2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Format(System.IFormatProvider,System.String,System.Object,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (provider As IFormatProvider, format As String, arg0 As Object, arg1 As Object, arg2 As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(IFormatProvider ^ provider, System::String ^ format, System::Object ^ arg0, System::Object ^ arg1, System::Object ^ arg2);" />
      <MemberSignature Language="F#" Value="static member Format : IFormatProvider * string * obj * obj * obj -&gt; string" Usage="System.string.Format (provider, format, arg0, arg1, arg2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="arg0" Type="System.Object" />
        <Parameter Name="arg1" Type="System.Object" />
        <Parameter Name="arg2" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-1716">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1716">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="9380d-1717">Eine [zusammengesetzte Formatzeichenfolge](~/docs/standard/base-types/composite-formatting.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1717">A [composite format string](~/docs/standard/base-types/composite-formatting.md).</span>
          </span>
        </param>
        <param name="arg0">
          <span data-ttu-id="9380d-1718">Das erste zu formatierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1718">The first object to format.</span>
          </span>
        </param>
        <param name="arg1">
          <span data-ttu-id="9380d-1719">Das zweite zu formatierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1719">The second object to format.</span>
          </span>
        </param>
        <param name="arg2">
          <span data-ttu-id="9380d-1720">Das dritte zu formatierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1720">The third object to format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1721">Ersetzt die Formatelemente in einer Zeichenfolge durch die Zeichenfolgendarstellung von drei angegebenen Objekten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1721">Replaces the format items in a string with the string representation of three specified objects.</span>
          </span>
          <span data-ttu-id="9380d-1722">Ein Parameter liefert kulturspezifische Formatierungsinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1722">An parameter supplies culture-specific formatting information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1723">Eine Kopie von <paramref name="format" />, in der die Formatelemente durch die Zeichenfolgendarstellung von <paramref name="arg0" />, <paramref name="arg1" /> und <paramref name="arg2" /> ersetzt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1723">A copy of <paramref name="format" /> in which the format items have been replaced by the string representations of <paramref name="arg0" />, <paramref name="arg1" />, and <paramref name="arg2" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

[!INCLUDE[interpolated-strings](~/includes/interpolated-strings.md)] 
  
<span data-ttu-id="9380d-1724">Diese Methode verwendet die [Funktion für kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) , drei Ausdrücke in ihre Zeichenfolgendarstellung konvertieren und diese Darstellungen in eine Zeichenfolge einzubetten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1724">This method uses the [composite formatting feature](~/docs/standard/base-types/composite-formatting.md) to convert three expressions to their string representations and to embed those representations in a string.</span></span> <span data-ttu-id="9380d-1725">Beim Durchführen der Konvertierung, verwendet die Methode, kulturabhängige Formatierung oder einen benutzerdefinierten Formatierer.</span><span class="sxs-lookup"><span data-stu-id="9380d-1725">In performing the conversion, the method uses culture-sensitive formatting or a custom formatter.</span></span> <span data-ttu-id="9380d-1726">Die Methode konvertiert jede <xref:System.Object> Argument in seine Zeichenfolgendarstellung durch Aufrufen der **ToString(IFormatProvider)** Methode oder das Objekt entsprechende schließt Formatelement, das eine Formatzeichenfolge, durch Aufrufen der **ToString(String,IFormatProvider)** Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1726">The method converts each <xref:System.Object> argument to its string representation by calling its **ToString(IFormatProvider)** method or, if the object's corresponding format item includes a format string, by calling its **ToString(String,IFormatProvider)** method.</span></span> <span data-ttu-id="9380d-1727">Wenn diese Methoden nicht vorhanden sind, ruft das Objekt die parameterlosen **ToString** Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1727">If these methods don't exist, it calls the object's parameterless **ToString** method.</span></span>  

[!INCLUDE[provider-string-format](~/includes/provider-string-format.md)]
    
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1728">
            <paramref name="format" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1728">
              <paramref name="format" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-1729">
            <paramref name="format" /> ist ungültig.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1729">
              <paramref name="format" /> is invalid.</span>
          </span>
          <span data-ttu-id="9380d-1730">Oder:  Der Index eines Formatelements ist kleiner als 0 (null) oder größer als 2.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1730">-or-  The index of a format item is less than zero, or greater than two.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public CharEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CharEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As CharEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CharEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="member this.GetEnumerator : unit -&gt; CharEnumerator" Usage="string.GetEnumerator " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CharEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-1731">Ruft ein Objekt ab, das die einzelnen Zeichen dieser Zeichenfolge durchlaufen kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1731">Retrieves an object that can iterate through the individual characters in this string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1732">Ein Enumeratorobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1732">An enumerator object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!TIP]
> <span data-ttu-id="9380d-1733">Anstatt Aufrufen der <xref:System.String.GetEnumerator%2A> Methode zum Abrufen einer <xref:System.CharEnumerator> Objekt, das Sie verwenden, um eine Zeichenfolge aufgelistet werden, verwenden Sie stattdessen die Sprache des Iteration-Konstrukt (in c# in C++ / CLR, und in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9380d-1733">Rather than calling the <xref:System.String.GetEnumerator%2A> method to retrieve a <xref:System.CharEnumerator> object that you then use to enumerate a string, you should instead use your language's iteration construct (in C#, in C++/CLR, and in Visual Basic).</span></span> <span data-ttu-id="9380d-1734">[Foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) in c# [für jede](/cpp/dotnet/for-each-in) in C++ / CLR und [für jede](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="9380d-1734">[foreach](~/docs/csharp/language-reference/keywords/foreach-in.md) in C#, [for each](/cpp/dotnet/for-each-in) in C++/CLR, and [For Each](~/docs/visual-basic/language-reference/statements/for-each-next-statement.md) in Visual Basic).</span></span>
  
 <span data-ttu-id="9380d-1735">Diese Methode können Sie die einzelnen Zeichen in einer Zeichenfolge zu durchlaufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1735">This method enables you to iterate the individual characters in a string.</span></span> <span data-ttu-id="9380d-1736">Z. B. Visual Basic `For Each` und C#- `foreach` -Anweisungen Aufrufen dieser Methode zurückgeben einer <xref:System.CharEnumerator> Objekt, das nur-Lese Zugriff auf die Zeichen in dieser Zeichenfolgeninstanz bereitstellen kann.</span><span class="sxs-lookup"><span data-stu-id="9380d-1736">For example, the Visual Basic `For Each` and C# `foreach` statements invoke this method to return a <xref:System.CharEnumerator> object that can provide read-only access to the characters in this string instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1737">Das folgende Beispiel durchläuft die Zeichen in der mehrere Zeichenfolgen und zeigt Informationen zu den einzelnen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1737">The following example iterates the characters in several strings and displays information about their individual characters.</span></span> <span data-ttu-id="9380d-1738">Er verwendet das Language-Iteration-Konstrukt, anstatt einen Aufruf der <xref:System.String.GetEnumerator%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1738">It uses the language iteration construct rather than a call to the <xref:System.String.GetEnumerator%2A> method.</span></span>  
  
 [!code-cpp[system.string.getenumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.GetEnumerator/CPP/getenumerator.cpp#1)]
 [!code-csharp[system.string.getenumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.GetEnumerator/CS/getenumerator.cs#1)]
 [!code-vb[system.string.getenumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.GetEnumerator/VB/getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerator" />
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="P:System.String.Chars(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="string.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-1739">Gibt den Hashcode für diese Zeichenfolge zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1739">Returns the hash code for this string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1740">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1740">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1741">Das Verhalten der <xref:System.String.GetHashCode%2A> richtet sich nach der Implementierung, die von einer Version der common Language Runtime auf einen anderen ändern kann.</span><span class="sxs-lookup"><span data-stu-id="9380d-1741">The behavior of <xref:System.String.GetHashCode%2A> is dependent on its implementation, which might change from one version of the common language runtime to another.</span></span> <span data-ttu-id="9380d-1742">Ein Grund, warum dies vorkommen kann, wird zur Verbesserung der Leistung von <xref:System.String.GetHashCode%2A>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1742">A reason why this might happen is to improve the performance of <xref:System.String.GetHashCode%2A>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9380d-1743">Wenn zwei Zeichenfolgenobjekte gleich sind, die <xref:System.String.GetHashCode%2A> -Methode identische Werte zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-1743">If two string objects are equal, the <xref:System.String.GetHashCode%2A> method returns identical values.</span></span> <span data-ttu-id="9380d-1744">Es ist jedoch kein eindeutigen Hashcodewert für jeden eindeutigen Zeichenfolgenwert.</span><span class="sxs-lookup"><span data-stu-id="9380d-1744">However, there is not a unique hash code value for each unique string value.</span></span> <span data-ttu-id="9380d-1745">Verschiedene Zeichenfolgen können den gleichen Hashcode zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-1745">Different strings can return the same hash code.</span></span>  
>   
>  <span data-ttu-id="9380d-1746">Der Hashcode selbst ist nicht garantiert, stabil sein.</span><span class="sxs-lookup"><span data-stu-id="9380d-1746">The hash code itself is not guaranteed to be stable.</span></span> <span data-ttu-id="9380d-1747">Hashcodes für identische Zeichenfolgen können durch .NET Framework-Versionen und Plattformen (z. B. ein 32-Bit- und 64-Bit) für eine einzelne Version von .NET Framework unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1747">Hash codes for identical strings can differ across versions of the .NET Framework and across platforms (such as 32-bit and 64-bit) for a single version of the .NET Framework.</span></span> <span data-ttu-id="9380d-1748">In einigen Fällen können sie auch durch die Anwendungsdomäne unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1748">In some cases, they can even differ by application domain.</span></span> <span data-ttu-id="9380d-1749">Dies bedeutet, dass die beiden nachfolgende Ausführungen desselben Programms möglicherweise unterschiedliche Hashcodes zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-1749">This implies two subsequent runs of the same program may return different hash codes.</span></span>  
>   
>  <span data-ttu-id="9380d-1750">Als Ergebnis Hash Codes niemals außerhalb der Anwendungsdomäne verwendet werden, sollte in der sie erstellt wurden, sollten nicht als wichtige Felder in einer Auflistung verwendet werden, und diese nie beibehalten werden sollen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1750">As a result, hash codes should never be used outside of the application domain in which they were created, they should never be used as key fields in a collection, and they should never be persisted.</span></span>  
>   
>  <span data-ttu-id="9380d-1751">Abschließend verwenden Sie nicht den Hashcode anstelle eines Werts von einer kryptografischen Hashfunktion zurückgegeben wird, wenn Sie einen kryptographisch starken Hashwert benötigen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1751">Finally, don't use the hash code instead of a value returned by a cryptographic hashing function if you need a cryptographically strong hash.</span></span> <span data-ttu-id="9380d-1752">Für kryptografische Hashes, verwenden Sie eine von abgeleitete Klasse die <xref:System.Security.Cryptography.HashAlgorithm?displayProperty=nameWithType> oder <xref:System.Security.Cryptography.KeyedHashAlgorithm?displayProperty=nameWithType> Klasse.</span><span class="sxs-lookup"><span data-stu-id="9380d-1752">For cryptographic hashes, use a class derived from the <xref:System.Security.Cryptography.HashAlgorithm?displayProperty=nameWithType> or <xref:System.Security.Cryptography.KeyedHashAlgorithm?displayProperty=nameWithType> class.</span></span>  
>   
>  <span data-ttu-id="9380d-1753">Weitere Informationen zu Hashcodes finden Sie unter <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1753">For more information about hash codes, see <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="9380d-1754">In desktop-apps können Sie mithilfe der [ \<UseRandomizedStringHashAlgorithm >-Element](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md) zum Generieren von eindeutigen Hashcodes für eine pro Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="9380d-1754">In desktop apps, you can use the             [\<UseRandomizedStringHashAlgorithm> element](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md) to generate unique hash codes on a per application domain basis.</span></span> <span data-ttu-id="9380d-1755">Die Anzahl der Konflikte reduzieren können und verbessern die allgemeine Leistung von einfügungen und Suchvorgängen, die Hashtabellen verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1755">This can reduce the number of collisions and improve the overall performance of insertions and lookups that use hash tables.</span></span> <span data-ttu-id="9380d-1756">Das folgende Beispiel zeigt, wie Sie mit der [ \<UseRandomizedStringHashAlgorithm >-Element](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-1756">The following example shows how to use the                [\<UseRandomizedStringHashAlgorithm> element](~/docs/framework/configure-apps/file-schema/runtime/userandomizedstringhashalgorithm-element.md).</span></span> <span data-ttu-id="9380d-1757">Definiert eine zur Generierung der eindeutigen Hash-Codes auf einer pro Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="9380d-1757">It defines a  to generate unique hash codes on a per application domain basis.</span></span> <span data-ttu-id="9380d-1758">Die Anzahl der Konflikte reduzieren können und verbessern die allgemeine Leistung von einfügungen und Suchvorgängen, die Hashtabellen verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1758">This can reduce the number of collisions and improve the overall performance of insertions and lookups that use hash tables.</span></span> <span data-ttu-id="9380d-1759">Das folgende Beispiel zeigt, wie Sie mit der.</span><span class="sxs-lookup"><span data-stu-id="9380d-1759">The following example shows how to use the .</span></span> <span data-ttu-id="9380d-1760">Definiert eine `DisplayString` -Klasse, eine private Zeichenfolgenkonstante enthält `s`, deren Wert ist "Dies ist eine Zeichenfolge".</span><span class="sxs-lookup"><span data-stu-id="9380d-1760">It defines a `DisplayString` class that includes a private string constant, `s`, whose value is "This is a string."</span></span> <span data-ttu-id="9380d-1761">Außerdem enthält sie eine `ShowStringHashCode`-Methode, die den Zeichenfolgenwert und dessen Hashcode zusammen mit dem Namen der Anwendungsdomäne anzeigt, in der die Methode ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1761">It also includes a `ShowStringHashCode` method that displays the string value and its hash code along with the name of the application domain in which the method is executing.</span></span>  
  
 [!code-csharp[System.String.GetHashCode#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.GetHashCode/CS/perdomain.cs#2)]
 [!code-vb[System.String.GetHashCode#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.GetHashCode/VB/perdomain.vb#2)]  
  
 <span data-ttu-id="9380d-1762">Wenn Sie das Beispiel ausführen, ohne eine Konfigurationsdatei anzugeben, wird die folgende Ausgabe angezeigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1762">When you run the example without supplying a configuration file, it displays output similar to the following.</span></span> <span data-ttu-id="9380d-1763">Beachten Sie, dass die Hashcodes für die Zeichenfolge in den zwei Anwendungsdomänen identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1763">Note that the hash codes for the string are identical in the two application domains.</span></span>  
  
```  
  
String 'This is a string.' in domain 'PerDomain.exe': 941BCEAC  
String 'This is a string.' in domain 'NewDomain': 941BCEAC  
  
```  
  
 <span data-ttu-id="9380d-1764">Wenn Sie jedoch die folgende Konfigurationsdatei im Verzeichnis des Beispiels hinzufügen und dann das Beispiel ausführen, unterscheiden sich die Hashcodes je nach Anwendungsdomäne.</span><span class="sxs-lookup"><span data-stu-id="9380d-1764">However, if you add the following configuration file to the example's directory and then run the example, the hash codes for the same string will differ by application domain.</span></span>  
  
```xml  
  
<?xml version ="1.0"?>  
<configuration>  
   <runtime>  
      <UseRandomizedStringHashAlgorithm enabled="1" />  
   </runtime>  
</configuration>  
  
```  
  
 <span data-ttu-id="9380d-1765">Wenn die Konfigurationsdatei vorhanden ist, zeigt das Beispiel die folgende Ausgabe an:</span><span class="sxs-lookup"><span data-stu-id="9380d-1765">When the configuration file is present, the example displays the following output:</span></span>  
  
```  
  
String 'This is a string.' in domain 'PerDomain.exe': 5435776D  
String 'This is a string.' in domain 'NewDomain': 75CC8236  
  
```  
  
> [!IMPORTANT]
>  <span data-ttu-id="9380d-1766">Hashcodes dienen zum Einfügen und verschlüsselte Objekte von Hashtabellen effizient abrufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1766">Hash codes are used to insert and retrieve keyed objects from hash tables efficiently.</span></span> <span data-ttu-id="9380d-1767">Hashcodes Identifizierung Zeichenfolgen jedoch nicht.</span><span class="sxs-lookup"><span data-stu-id="9380d-1767">However, hash codes don't uniquely identify strings.</span></span> <span data-ttu-id="9380d-1768">Identische Zeichenfolgen haben gleich Hashcodes, aber den gleichen Hashcode kann auch in andere Zeichenfolgen von die common Language Runtime zuweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1768">Identical strings have  equal hash codes, but the common language runtime can also assign the same hash code to different strings.</span></span> <span data-ttu-id="9380d-1769">Darüber hinaus können Hashcodes von .NET Framework-Version, von der Plattform in eine einzelne Version und von Anwendungsdomäne variieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-1769">In addition, hash codes can vary by version of the .NET Framework, by platform within a single version, and by application domain.</span></span> <span data-ttu-id="9380d-1770">Aus diesem Grund sollten Sie nicht zu serialisieren oder Code-Hashwerte beibehalten, noch sollten Sie verwenden diese als Schlüssel in eine Hashtabelle oder Wörterbuch.</span><span class="sxs-lookup"><span data-stu-id="9380d-1770">Because of this, you should not serialize or persist hash code values, nor should you use them as keys in a hash table or dictionary.</span></span>  
  
 <span data-ttu-id="9380d-1771">Weitere Informationen zur Verwendung von Hashcodes und `GetHashCode` -Methode finden Sie unter <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-1771">For additional information about the use of hash codes and the `GetHashCode` method, see <xref:System.Object.GetHashCode%2A?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1772">Das folgende Beispiel zeigt die <xref:System.String.GetHashCode%2A> Methode, die mit verschiedenen Eingabezeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1772">The following example demonstrates the <xref:System.String.GetHashCode%2A> method using various input strings.</span></span>  
  
 [!code-cpp[system.string.gethashcode#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.GetHashCode/CPP/gethashcode.cpp#1)]
 [!code-csharp[system.string.gethashcode#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.GetHashCode/CS/gethashcode.cs#1)]
 [!code-vb[system.string.gethashcode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.GetHashCode/VB/gethashcode.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1773">
            <para>Der Rückgabewert von <see cref="M:System.String.GetHashCode" /> ist plattformabhängig. Es unterscheidet sich auf die 32-Bit und 64-Bit-Versionen von .NET Framework. Es kann auch zwischen verschiedenen Versionen von .NET Framework unterscheiden.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1773">
              <para>The value returned by <see cref="M:System.String.GetHashCode" /> is platform-dependent. It differs on the 32-bit and 64-bit versions of the .NET Framework. It also can differ between versions of the .NET Framework.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public int GetHashCode (StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHashCode(valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.GetHashCode(System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHashCode (comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHashCode(StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : StringComparison -&gt; int" Usage="string.GetHashCode comparisonType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="string.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-1774">Gibt einen <see cref="T:System.TypeCode" /> für das <see cref="T:System.String" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1774">Returns the <see cref="T:System.TypeCode" /> for class <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1775">Die Enumerationskonstante <see cref="F:System.TypeCode.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1775">The enumerated constant, <see cref="F:System.TypeCode.String" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="9380d-1776">Das folgende Beispiel zeigt die <xref:System.TypeCode> Enumerationskonstante, die für die <xref:System.String> Typ.</span><span class="sxs-lookup"><span data-stu-id="9380d-1776">The following example displays the <xref:System.TypeCode> enumerated constant for the <xref:System.String> type.</span></span>  
  
 [!code-cpp[string.gettypecode#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.gettypecode/CPP/gtc.cpp#1)]
 [!code-csharp[string.gettypecode#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.gettypecode/CS/gtc.cs#1)]
 [!code-vb[string.gettypecode#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.gettypecode/VB/gtc.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-1777">Gibt den NULL-basierten Index des ersten Vorkommens eines angegebenen Unicode-Zeichens oder einer angegebenen Unicode-Zeichenfolge in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1777">Reports the zero-based index of the first occurrence of a specified Unicode character or string within this instance.</span>
          </span>
          <span data-ttu-id="9380d-1778">Die Methode gibt -1 zurück, wenn das Zeichen oder die Zeichenfolge in dieser Instanz nicht gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1778">The method returns -1 if the character or string is not found in this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char -&gt; int" Usage="string.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1779">Ein zu suchendes Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1779">A Unicode character to seek.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1780">Gibt den NULL-basierten Index des ersten Vorkommens des angegebenen Unicode-Zeichens in dieser Zeichenfolge an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1780">Reports the zero-based index of the first occurrence of the specified Unicode character in this string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1781">Die nullbasierte Indexposition von <paramref name="value" />, wenn dieses Zeichen gefunden wurde, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1781">The zero-based index position of <paramref name="value" /> if that character is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1782">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-1782">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="9380d-1783">Diese Methode führt eine ordinale (kulturunabhängige) Suche, in dem ein Zeichen als gleich betrachtet, ein anderes Zeichen nur dann, wenn die Unicode-Skalarwerten identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1783">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="9380d-1784">Um eine kulturabhängige Suche durchzuführen, verwenden die <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> -Methode, in dem ein Unicode-Skalarwert, ein zusammengesetztes Zeichen, z. B. die Ligatur "Æ" (U + 00 C 6) betrachtet werden kann entspricht jedem Vorkommen des Zeichens-Komponenten in der Korrigieren Sie die Sequenz, wie z. B. "AE" (U + 0041, U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1784">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1785">Im folgenden Beispiel wird veranschaulicht, wie Sie durchsucht eine <xref:System.String> für ein Zeichen mithilfe der <xref:System.String.IndexOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1785">The following example demonstrates how you can search a <xref:System.String> for a character using the <xref:System.String.IndexOf%2A> method.</span></span>  
  
 [!code-cpp[System.String.IndexOf#5](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.IndexOf/CPP/indexof_c.cpp#5)]
 [!code-csharp[System.String.IndexOf#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/indexof_c.cs#5)]
 [!code-vb[System.String.IndexOf#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/indexof_c.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string -&gt; int" Usage="string.IndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1786">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1786">The string to seek.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1787">Gibt den NULL-basierten Index des ersten Vorkommens der angegebenen Zeichenfolge in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1787">Reports the zero-based index of the first occurrence of the specified string in this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1788">Die nullbasierte Indexposition von <paramref name="value" />, wenn diese Zeichenfolge gefunden wurde, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1788">The zero-based index position of <paramref name="value" /> if that string is found, or -1 if it is not.</span>
          </span>
          <span data-ttu-id="9380d-1789">Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, wird 0 zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1789">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1790">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-1790">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="9380d-1791">Diese Methode führt eine Wortsuche (Groß-/Kleinschreibung beachtet und kulturabhängige) mit der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1791">This method performs a word (case-sensitive and culture-sensitive) search using the current culture.</span></span> <span data-ttu-id="9380d-1792">Die Suche beginnt an der Position des ersten Zeichens dieser Instanz und wird fortgesetzt, bis der letzten Zeichenposition.</span><span class="sxs-lookup"><span data-stu-id="9380d-1792">The search begins at the first character position of this instance and continues until the last character position.</span></span>  
  
 <span data-ttu-id="9380d-1793">Zeichensätze enthalten ignorierbare Zeichen, d. h. Zeichen, die bei der Durchführung eines linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1793">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="9380d-1794">Bei einer kulturabhängige Suche, bei der `value` ein ignorierbares Zeichen enthält, ist das Ergebnis das gleiche wie bei einer Suche ohne dieses Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1794">In a culture-sensitive search, if `value` contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="9380d-1795">Wenn `value` besteht nur aus ein oder mehrere Ignorierbare Zeichen, die <xref:System.String.IndexOf%28System.String%29> Methode gibt immer 0 (null), um anzugeben, dass die Übereinstimmung am Anfang der aktuellen Instanz gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1795">If `value` consists only of one or more ignorable characters, the <xref:System.String.IndexOf%28System.String%29> method always returns 0 (zero) to indicate that the match is found at the beginning of the current instance.</span></span> <span data-ttu-id="9380d-1796">Im folgenden Beispiel die <xref:System.String.IndexOf%28System.String%29> Methode wird verwendet, um drei Teilzeichenfolgen (einen bedingten Bindestrich (U + 00AD), einen bedingten Bindestrich gefolgt von "n" und einen bedingten Bindestrich gefolgt von "m") in zwei Zeichenfolgen zu suchen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1796">In the following example, the <xref:System.String.IndexOf%28System.String%29> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="9380d-1797">Nur eine der Zeichenfolgen enthält einen bedingten Bindestrich.</span><span class="sxs-lookup"><span data-stu-id="9380d-1797">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="9380d-1798">Wenn Sie das Beispiel ausgeführt wird, auf die [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] oder höher in jedem Fall, da die bedingten Bindestrich ein ignorierbares Zeichen ist das Ergebnis ist identisch, als ob bedingten Bindestrichs nicht in einbezogen wurden, mussten `value`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1798">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in `value`.</span></span> <span data-ttu-id="9380d-1799">Bei der Suche nach nur einen bedingten Bindestrich gibt die Methode 0 (null), um anzugeben, dass es eine Übereinstimmung am Anfang der Zeichenfolge gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-1799">When searching for a soft hyphen only, the method returns 0 (zero) to indicate that it has found a match at the beginning of the string.</span></span>  
  
 [!code-csharp[System.String.IndexOf#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable21.cs#21)]
 [!code-vb[System.String.IndexOf#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable21.vb#21)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1800">Das folgende Beispiel sucht nach "n" in "Tier".</span><span class="sxs-lookup"><span data-stu-id="9380d-1800">The following example searches for the "n" in "animal".</span></span> <span data-ttu-id="9380d-1801">Da 0 (null) anstelle einer Zeichenfolge Indizes beginnen die <xref:System.String.IndexOf%28System.String%29> Methode gibt an, dass die "n" an Position 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-1801">Because string indexes begin at zero rather than one, the <xref:System.String.IndexOf%28System.String%29> method indicates that the "n" is at position 1.</span></span>  
  
 [!code-cpp[System.String.IndexOf#12](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.IndexOf/CPP/simple1.cpp#12)]
 [!code-csharp[System.String.IndexOf#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/simple1.cs#12)]
 [!code-vb[System.String.IndexOf#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/simple1.vb#12)]  
  
 <span data-ttu-id="9380d-1802">Im folgenden Beispiel wird die <xref:System.String.IndexOf%2A> Methode, um die Position des Tiernamens in einem Satz zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1802">The following example uses the <xref:System.String.IndexOf%2A> method to determine the starting position of an animal name in a sentence.</span></span> <span data-ttu-id="9380d-1803">Diese Position dann verwendet, um ein Adjektiv einzufügen, die das Tier wird, in dem Satz beschrieben.</span><span class="sxs-lookup"><span data-stu-id="9380d-1803">It then uses this position to insert an adjective that describes the animal into the sentence.</span></span>  
  
 [!code-cpp[stringinsert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringinsert/CPP/stringinsert.cpp#1)]
 [!code-csharp[stringinsert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringinsert/CS/stringinsert.cs#1)]
 [!code-vb[stringinsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringinsert/VB/stringinsert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1804">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1804">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1805">
            <para>Wie unter [bewährte Methoden für Strings](~/docs/standard/base-types/best-practices-strings.md) verwenden, es wird empfohlen, dass Sie vermeiden, Aufrufen von Methoden zum Zeichenfolgenvergleich, die Standardwerte ersetzen, und rufen stattdessen die Methoden, die Parameter erfordern explizit angegeben. Um den ersten Index aus einer Unterzeichenfolge einer Zeichenfolgeninstanz mit die Vergleichsregeln der aktuellen Kultur zu suchen, rufen die <see cref="M:System.String.IndexOf(System.String,System.StringComparison)" /> methodenüberladung mit einem Wert von <see cref="F:System.StringComparison.CurrentCulture" /> für den Parameter "ComparisonType".</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1805">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified. To find the first index of a substring within a string instance by using the comparison rules of the current culture, call the <see cref="M:System.String.IndexOf(System.String,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its `comparisonType` parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char value, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * int -&gt; int" Usage="string.IndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1806">Ein zu suchendes Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1806">A Unicode character to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-1807">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1807">The search starting position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1808">Gibt den NULL-basierten Index des ersten Vorkommens des angegebenen Unicode-Zeichens in dieser Zeichenfolge an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1808">Reports the zero-based index of the first occurrence of the specified Unicode character in this string.</span>
          </span>
          <span data-ttu-id="9380d-1809">Die Suche beginnt an einer angegebenen Zeichenposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1809">The search starts at a specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1810">Die nullbasierte Indexposition von <paramref name="value" /> ab dem Anfang der Zeichenfolge, wenn dieses Zeichen gefunden wurde, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1810">The zero-based index position of <paramref name="value" /> from the start of the string if that character is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1811">Der Index die Nummerierung beginnt bei 0.</span><span class="sxs-lookup"><span data-stu-id="9380d-1811">Index numbering starts from 0.</span></span> <span data-ttu-id="9380d-1812">Der `startIndex`-Parameter kann von 0 bis zu der Länge der Zeichenfolgeninstanz reichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1812">The `startIndex` parameter can range from 0 to the length of the string instance.</span></span> <span data-ttu-id="9380d-1813">Wenn `startIndex` entspricht der Länge der Zeichenfolgeninstanz, die Methode gibt-1 zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-1813">If `startIndex` equals the length of the string instance, the method returns -1.</span></span>  
  
 <span data-ttu-id="9380d-1814">Die Suche erfolgt von `startIndex` bis zum Ende der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1814">The search ranges from `startIndex` to the end of the string.</span></span>  
  
 <span data-ttu-id="9380d-1815">Diese Methode führt eine ordinale (kulturunabhängige) Suche, in dem ein Zeichen als gleich betrachtet, ein anderes Zeichen nur dann, wenn die Unicode-Skalarwerten identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1815">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="9380d-1816">Um eine kulturabhängige Suche durchzuführen, verwenden die <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> -Methode, in dem ein Unicode-Skalarwert, ein zusammengesetztes Zeichen, z. B. die Ligatur "Æ" (U + 00 C 6) betrachtet werden kann entspricht jedem Vorkommen des Zeichens-Komponenten in der Korrigieren Sie die Sequenz, wie z. B. "AE" (U + 0041, U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1816">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1817">Das folgende Beispiel veranschaulicht die <xref:System.String.IndexOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1817">The following example demonstrates the <xref:System.String.IndexOf%2A> method.</span></span>  
  
 [!code-cpp[string.indexof1#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.indexof1/CPP/ixof1.cpp#1)]
 [!code-csharp[string.indexof1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.indexof1/CS/ixof1.cs#1)]
 [!code-vb[string.indexof1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.indexof1/VB/ixof1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1818">
            <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1818">
              <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of the string.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.Char,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Char, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * StringComparison -&gt; int" Usage="string.IndexOf (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * int -&gt; int" Usage="string.IndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1819">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1819">The string to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-1820">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1820">The search starting position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1821">Gibt den NULL-basierten Index des ersten Vorkommens der angegebenen Zeichenfolge in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1821">Reports the zero-based index of the first occurrence of the specified string in this instance.</span>
          </span>
          <span data-ttu-id="9380d-1822">Die Suche beginnt an einer angegebenen Zeichenposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1822">The search starts at a specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1823">Die nullbasierte Indexposition von <paramref name="value" /> vom Anfang der aktuellen Instanz, wenn diese Zeichenfolge gefunden wurde, oder -1, wenn sie nicht gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1823">The zero-based index position of <paramref name="value" /> from the start of the current instance if that string is found, or -1 if it is not.</span>
          </span>
          <span data-ttu-id="9380d-1824">Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, wird <paramref name="startIndex" /> zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1824">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1825">Der Index die Nummerierung beginnt bei 0.</span><span class="sxs-lookup"><span data-stu-id="9380d-1825">Index numbering starts from 0.</span></span> <span data-ttu-id="9380d-1826">Der `startIndex`-Parameter kann von 0 bis zu der Länge der Zeichenfolgeninstanz reichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1826">The `startIndex` parameter can range from 0 to the length of the string instance.</span></span> <span data-ttu-id="9380d-1827">Wenn `startIndex` entspricht der Länge der Zeichenfolgeninstanz, die Methode gibt-1 zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-1827">If `startIndex` equals the length of the string instance, the method returns -1.</span></span>  
  
 <span data-ttu-id="9380d-1828">Diese Methode führt eine Wortsuche (Groß-/Kleinschreibung beachtet und kulturabhängige) mit der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1828">This method performs a word (case-sensitive and culture-sensitive) search using the current culture.</span></span> <span data-ttu-id="9380d-1829">Die Suche beginnt an der `startIndex` Zeichen Position dieser Instanz und wird fortgesetzt, bis der letzten Zeichenposition.</span><span class="sxs-lookup"><span data-stu-id="9380d-1829">The search begins at the `startIndex` character position of this instance and continues until the last character position.</span></span>  
  
 <span data-ttu-id="9380d-1830">Zeichensätze enthalten ignorierbare Zeichen, d. h. Zeichen, die bei der Durchführung eines linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1830">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="9380d-1831">Bei einer kulturabhängige Suche, bei der `value` ein ignorierbares Zeichen enthält, ist das Ergebnis das gleiche wie bei einer Suche ohne dieses Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1831">In a culture-sensitive search, if `value` contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="9380d-1832">Wenn `value` besteht nur aus ein oder mehrere Ignorierbare Zeichen, die <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29> Methode gibt immer `startIndex`, d.h. die Zeichenposition, an dem die Suche beginnt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1832">If `value` consists only of one or more ignorable characters, the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29> method always returns `startIndex`, which is the character position at which the search begins.</span></span> <span data-ttu-id="9380d-1833">Im folgenden Beispiel die <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29> Methode wird verwendet, um die Position (U + 00AD) über einen bedingten Bindestrich gefolgt von einem "m" in zwei Zeichenfolgen zu suchen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1833">In the following example, the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%29> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in two strings.</span></span> <span data-ttu-id="9380d-1834">Nur eine der Zeichenfolgen enthält die erforderliche Teilzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1834">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="9380d-1835">Wenn Sie das Beispiel ausgeführt wird, auf die [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] oder höher in beiden Fällen, da die bedingten Bindestrich ein ignorierbares Zeichen ist, wird die Methode gibt den Index des "m" in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1835">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string.</span></span> <span data-ttu-id="9380d-1836">Beachten Sie, dass bei der ersten Zeichenfolge, die den bedingten Bindestrich gefolgt von einem "m" umfasst, die Methode den Index des bedingten Bindestrichs nicht zurückgeben kann, sondern stattdessen den Index des "m" zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1836">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>  
  
 [!code-csharp[System.String.IndexOf#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable22.cs#22)]
 [!code-vb[System.String.IndexOf#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable22.vb#22)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1837">Das folgende Beispiel sucht nach allen Vorkommen der angegebenen Zeichenfolge in eine Zielzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1837">The following example searches for all occurrences of a specified string within a target string.</span></span>  
  
 [!code-cpp[stringindexof4#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringindexof4/CPP/stringindexof4.cpp#1)]
 [!code-csharp[stringindexof4#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringindexof4/CS/stringindexof4.cs#1)]
 [!code-vb[stringindexof4#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringindexof4/VB/stringindexof4.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1838">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1838">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1839">
            <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge diese Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1839">
              <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of this string.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1840">
            <para>Wie unter [bewährte Methoden für Strings](~/docs/standard/base-types/best-practices-strings.md) verwenden, es wird empfohlen, dass Sie vermeiden, Aufrufen von Methoden zum Zeichenfolgenvergleich, die Standardwerte ersetzen, und rufen stattdessen die Methoden, die Parameter erfordern explizit angegeben. Um den ersten Index einer Teilzeichenfolge, die auftritt, nach einer bestimmten Zeichenposition mithilfe der Vergleichsregeln der aktuellen Kultur zu suchen, rufen die <see cref="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" /> methodenüberladung mit einem Wert von <see cref="F:System.StringComparison.CurrentCulture" /> für den Parameter "ComparisonType".</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1840">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified. To find the first index of a substring that occurs after a particular character position by using the comparison rules of the current culture, call the <see cref="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its `comparisonType` parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * StringComparison -&gt; int" Usage="string.IndexOf (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1841">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1841">The string to seek.</span>
          </span>
        </param>
        <param name="comparisonType">
          <span data-ttu-id="9380d-1842">Einer der Enumerationswerte, der die Regeln für die Suche angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1842">One of the enumeration values that specifies the rules for the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1843">Gibt den NULL-basierten Index des ersten Vorkommens der angegebenen Zeichenfolge im aktuellen <see cref="T:System.String" />-Objekt an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1843">Reports the zero-based index of the first occurrence of the specified string in the current <see cref="T:System.String" /> object.</span>
          </span>
          <span data-ttu-id="9380d-1844">Ein Parameter gibt den Typ der Suche für die angegebene Zeichenfolge an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1844">A parameter specifies the type of search to use for the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1845">Die Indexposition des <paramref name="value" />-Parameters, wenn diese Zeichenfolge gefunden wurde, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1845">The index position of the <paramref name="value" /> parameter if that string is found, or -1 if it is not.</span>
          </span>
          <span data-ttu-id="9380d-1846">Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, wird 0 zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1846">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is 0.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1847">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-1847">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="9380d-1848">Die `comparisonType` Parameter gibt an, dass für die Suche die `value` Parameter unter Verwendung der aktuellen oder der invarianten Kultur, mithilfe einer Suche Groß- und Kleinschreibung beachtet und mithilfe von Word oder Ordinalvergleichsregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-1848">The `comparisonType` parameter specifies to search for the `value` parameter using the current or invariant culture, using a case-sensitive or case-insensitive search, and using word or ordinal comparison rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1849">Die folgenden Exampledemonstrates drei Überladungen, der die <xref:System.String.IndexOf%2A> -Methode, die das erste Vorkommen einer Zeichenfolge innerhalb einer anderen Zeichenfolge, die mit unterschiedlichen Werten der suchen die <xref:System.StringComparison> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-1849">The following exampledemonstrates three overloads of the <xref:System.String.IndexOf%2A> method that find the first occurrence of a string within another string using different values of the <xref:System.StringComparison> enumeration.</span></span>  
  
 [!code-csharp[system.string.IndexOfCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.IndexOfCmp/cs/iocmp.cs#1)]
 [!code-vb[system.string.IndexOfCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.IndexOfCmp/vb/iocmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1850">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1850">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-1851">
            <paramref name="comparisonType" /> ist kein gültiger <see cref="T:System.StringComparison" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1851">
              <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1852">
            <para>Zeichensätze enthalten Ignorierbare Zeichen, d. h. Zeichen, die beim Ausführen einer linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden. Bei einer kulturabhängige Suche (das heißt, wenn <paramref name="comparisonType" /> nicht <see cref="F:System.StringComparison.Ordinal" /> oder <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> ist), bei der <paramref name="value" /> ein ignorierbares Zeichen enthält, ist das Ergebnis das gleiche wie bei einer Suche ohne dieses Zeichen. Wenn <paramref name="value" /> besteht nur aus ein oder mehrere Ignorierbare Zeichen, die <see cref="M:System.String.IndexOf(System.String,System.StringComparison)" /> Methode gibt immer 0 (null), um anzugeben, dass die Übereinstimmung am Anfang der aktuellen Instanz gefunden wird.  Im folgenden Beispiel die <see cref="M:System.String.IndexOf(System.String,System.StringComparison)" /> Methode wird verwendet, um drei Teilzeichenfolgen (einen bedingten Bindestrich (U + 00AD), einen bedingten Bindestrich gefolgt von "n" und einen bedingten Bindestrich gefolgt von "m") in zwei Zeichenfolgen zu suchen. Nur eine der Zeichenfolgen enthält einen bedingten Bindestrich. Wenn Sie das Beispiel ausgeführt wird, auf der [! Include[netfx40_short](~/Includes/netfx40-Short-MD.MD)] oder höher, da der bedingten Bindestrich ein ignorierbares Zeichen ist, eine kulturabhängige Suche derselbe Wert zurückgegeben, die es zurückgegeben würde, wenn es sich bei bedingten Bindestrichs nicht in der Suchzeichenfolge enthalten waren. Allerdings eine Ordinalsuche erfolgreich bedingten Bindestrichs in einer Zeichenfolge sucht und gibt an, dass sie nicht vorhanden ist aus der zweiten Zeichenfolge.  [! Code-Csharp [System.String.IndexOf#26] (~/samples/snippets/csharp/VS_Snippets_CLR_System/System. String.IndexOf/CS/ignorable26.cs#26)] [! Vb-Code [System.String.IndexOf#26] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System. String.IndexOf/VB/ignorable26.vb#26)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1852">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison. In a culture-sensitive search (that is, if <paramref name="comparisonType" /> is not <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.String.IndexOf(System.String,System.StringComparison)" /> method always returns 0 (zero) to indicate that the match is found at the beginning of the current instance.  In the following example, the <see cref="M:System.String.IndexOf(System.String,System.StringComparison)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings. Only one of the strings contains a soft hyphen. If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string. An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.  [!code-csharp[System.String.IndexOf#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable26.cs#26)] [!code-vb[System.String.IndexOf#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable26.vb#26)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : char * int * int -&gt; int" Usage="string.IndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1853">Ein zu suchendes Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1853">A Unicode character to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-1854">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1854">The search starting position.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-1855">Die Anzahl der zu überprüfenden Zeichenpositionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1855">The number of character positions to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1856">Gibt den NULL-basierten Index des ersten Vorkommens des angegebenen Zeichens in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1856">Reports the zero-based index of the first occurrence of the specified character in this instance.</span>
          </span>
          <span data-ttu-id="9380d-1857">Die Suche beginnt an einer angegebenen Zeichenposition, und es wird eine angegebene Anzahl von Zeichenpositionen überprüft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1857">The search starts at a specified character position and examines a specified number of character positions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1858">Die nullbasierte Indexposition von <paramref name="value" /> ab dem Anfang der Zeichenfolge, wenn dieses Zeichen gefunden wurde, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1858">The zero-based index position of <paramref name="value" /> from the start of the string if that character is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1859">Die Suche beginnt an `startIndex` und weiterhin `startIndex`  +  `count` -1.</span><span class="sxs-lookup"><span data-stu-id="9380d-1859">The search begins at `startIndex` and continues to `startIndex` + `count` -1.</span></span> <span data-ttu-id="9380d-1860">Das Zeichen an der `startIndex`  +  `count` ist in der Suche nicht enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1860">The character at `startIndex` + `count` is not included in the search.</span></span>  
  
 <span data-ttu-id="9380d-1861">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-1861">Index numbering starts from 0 (zero).</span></span> <span data-ttu-id="9380d-1862">Der `startIndex`-Parameter kann von 0 bis zu der Länge der Zeichenfolgeninstanz reichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1862">The `startIndex` parameter can range from 0 to the length of the string instance.</span></span>  
  
 <span data-ttu-id="9380d-1863">Diese Methode führt eine ordinale (kulturunabhängige) Suche, in dem ein Zeichen als gleich betrachtet, ein anderes Zeichen nur dann, wenn die Unicode-Skalarwerten identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1863">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="9380d-1864">Um eine kulturabhängige Suche durchzuführen, verwenden die <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> -Methode, in dem ein Unicode-Skalarwert, ein zusammengesetztes Zeichen, z. B. die Ligatur "Æ" (U + 00 C 6) betrachtet werden kann entspricht jedem Vorkommen des Zeichens-Komponenten in der Korrigieren Sie die Sequenz, wie z. B. "AE" (U + 0041, U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1864">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1865">Das folgende Beispiel veranschaulicht die <xref:System.String.IndexOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-1865">The following example demonstrates the <xref:System.String.IndexOf%2A> method.</span></span>  
  
 [!code-cpp[system.string.indexof#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.IndexOf/CPP/indexofcii.cpp#1)]
 [!code-csharp[system.string.indexof#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/indexofcii.cs#1)]
 [!code-vb[system.string.indexof#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/indexofcii.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1866">
            <paramref name="count" /> oder <paramref name="startIndex" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1866">
              <paramref name="count" /> or <paramref name="startIndex" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-1867">Oder:  <paramref name="startIndex" /> ist größer als die Länge dieser Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1867">-or-  <paramref name="startIndex" /> is greater than the length of this string.</span>
          </span>
          <span data-ttu-id="9380d-1868">Oder:  <paramref name="count" /> ist größer als die Länge dieser Zeichenfolge minus <paramref name="startIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1868">-or-  <paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * int * int -&gt; int" Usage="string.IndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1869">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1869">The string to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-1870">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1870">The search starting position.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-1871">Die Anzahl der zu überprüfenden Zeichenpositionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1871">The number of character positions to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1872">Gibt den NULL-basierten Index des ersten Vorkommens der angegebenen Zeichenfolge in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1872">Reports the zero-based index of the first occurrence of the specified string in this instance.</span>
          </span>
          <span data-ttu-id="9380d-1873">Die Suche beginnt an einer angegebenen Zeichenposition, und es wird eine angegebene Anzahl von Zeichenpositionen überprüft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1873">The search starts at a specified character position and examines a specified number of character positions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1874">Die nullbasierte Indexposition von <paramref name="value" /> vom Anfang der aktuellen Instanz, wenn diese Zeichenfolge gefunden wurde, oder -1, wenn sie nicht gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1874">The zero-based index position of <paramref name="value" /> from the start of the current instance if that string is found, or -1 if it is not.</span>
          </span>
          <span data-ttu-id="9380d-1875">Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, wird <paramref name="startIndex" /> zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1875">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1876">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-1876">Index numbering starts from 0 (zero).</span></span> <span data-ttu-id="9380d-1877">Der `startIndex`-Parameter kann von 0 bis zu der Länge der Zeichenfolgeninstanz reichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1877">The `startIndex` parameter can range from 0 to the length of the string instance.</span></span>  
  
 <span data-ttu-id="9380d-1878">Diese Methode führt eine Wortsuche (Groß-/Kleinschreibung beachtet und kulturabhängige) mit der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1878">This method performs a word (case-sensitive and culture-sensitive) search using the current culture.</span></span> <span data-ttu-id="9380d-1879">Die Suche beginnt an `startIndex` und weiterhin `startIndex`  +  `count` -1.</span><span class="sxs-lookup"><span data-stu-id="9380d-1879">The search begins at `startIndex` and continues to `startIndex` + `count` -1.</span></span> <span data-ttu-id="9380d-1880">Das Zeichen an der `startIndex`  +  `count` ist in der Suche nicht enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1880">The character at `startIndex` + `count` is not included in the search.</span></span>  
  
 <span data-ttu-id="9380d-1881">Zeichensätze enthalten ignorierbare Zeichen, d. h. Zeichen, die bei der Durchführung eines linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1881">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="9380d-1882">Bei einer kulturabhängige Suche, bei der `value` ein ignorierbares Zeichen enthält, ist das Ergebnis das gleiche wie bei einer Suche ohne dieses Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1882">In a culture-sensitive search, if `value` contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="9380d-1883">Wenn `value` besteht nur aus ein oder mehrere Ignorierbare Zeichen, die <xref:System.String.IndexOf%28System.String%2CSystem.Int32%2CSystem.Int32%29> Methode gibt immer `startIndex`, d.h. die Zeichenposition, an dem die Suche beginnt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1883">If `value` consists only of one or more ignorable characters, the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%2CSystem.Int32%29> method always returns `startIndex`, which is the character position at which the search begins.</span></span> <span data-ttu-id="9380d-1884">Im folgenden Beispiel die <xref:System.String.IndexOf%28System.String%2CSystem.Int32%2CSystem.Int32%29> Methode wird verwendet, um die Position (U + 00AD) über einen bedingten Bindestrich gefolgt von einem "m" ab dem dritten bis sechsten Zeichenpositionen werden in zwei Zeichenfolgen zu suchen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1884">In the following example, the <xref:System.String.IndexOf%28System.String%2CSystem.Int32%2CSystem.Int32%29> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings.</span></span> <span data-ttu-id="9380d-1885">Nur eine der Zeichenfolgen enthält die erforderliche Teilzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1885">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="9380d-1886">Wenn Sie das Beispiel ausgeführt wird, auf die [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] oder höher in beiden Fällen, da die bedingten Bindestrich ein ignorierbares Zeichen ist die Methode gibt den Index des "m" in der Zeichenfolge, wenn sie einen kulturabhängigen Vergleich ausführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1886">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="9380d-1887">Beachten Sie, dass bei der ersten Zeichenfolge, die den bedingten Bindestrich gefolgt von einem "m" umfasst, die Methode den Index des bedingten Bindestrichs nicht zurückgeben kann, sondern stattdessen den Index des "m" zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1887">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>  
  
 [!code-csharp[System.String.IndexOf#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable23.cs#23)]
 [!code-vb[System.String.IndexOf#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable23.vb#23)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1888">Das folgende Beispiel sucht den Index aller Vorkommen der Zeichenfolge "he" in einer Teilzeichenfolge einer anderen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1888">The following example finds the index of all occurrences of the string "he" within a substring of another string.</span></span> <span data-ttu-id="9380d-1889">Beachten Sie, dass die Anzahl von Zeichen an, die durchsucht werden für jede Iteration Suche neu berechnet werden muss.</span><span class="sxs-lookup"><span data-stu-id="9380d-1889">Note that the number of characters to be searched must be recalculated for each search iteration.</span></span>  
  
 [!code-cpp[string.indexof8#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.indexof8/CPP/ixof8.cpp#1)]
 [!code-csharp[string.indexof8#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.indexof8/CS/ixof8.cs#1)]
 [!code-vb[string.indexof8#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.indexof8/VB/ixof8.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1890">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1890">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1891">
            <paramref name="count" /> oder <paramref name="startIndex" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1891">
              <paramref name="count" /> or <paramref name="startIndex" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-1892">Oder:  <paramref name="startIndex" /> ist größer als die Länge dieser Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1892">-or-  <paramref name="startIndex" /> is greater than the length of this string.</span>
          </span>
          <span data-ttu-id="9380d-1893">Oder:  <paramref name="count" /> ist größer als die Länge dieser Zeichenfolge minus <paramref name="startIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1893">-or-  <paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1894">
            <para>Wie unter [bewährte Methoden für Strings](~/docs/standard/base-types/best-practices-strings.md) verwenden, es wird empfohlen, dass Sie vermeiden, Aufrufen von Methoden zum Zeichenfolgenvergleich, die Standardwerte ersetzen, und rufen stattdessen die Methoden, die Parameter erfordern explizit angegeben. Um die Vergleichsregeln der aktuellen Kultur verwenden, um diesen Vorgang auszuführen, rufen Sie die <see cref="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> methodenüberladung mit einem Wert von <see cref="F:System.StringComparison.CurrentCulture" /> für den Parameter "ComparisonType".</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1894">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified. To use the comparison rules of the current culture to perform this operation, call the <see cref="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its `comparisonType` parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, int startIndex, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, int32 startIndex, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, startIndex As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, int startIndex, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * int * StringComparison -&gt; int" Usage="string.IndexOf (value, startIndex, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1895">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1895">The string to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-1896">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1896">The search starting position.</span>
          </span>
        </param>
        <param name="comparisonType">
          <span data-ttu-id="9380d-1897">Einer der Enumerationswerte, der die Regeln für die Suche angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1897">One of the enumeration values that specifies the rules for the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1898">Gibt den NULL-basierten Index des ersten Vorkommens der angegebenen Zeichenfolge im aktuellen <see cref="T:System.String" />-Objekt an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1898">Reports the zero-based index of the first occurrence of the specified string in the current <see cref="T:System.String" /> object.</span>
          </span>
          <span data-ttu-id="9380d-1899">Parameter geben die Anfangssuchposition in der aktuellen Zeichenfolge und den Typ der Suche an, die für die angegebene Zeichenfolge verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1899">Parameters specify the starting search position in the current string and the type of search to use for the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1900">Die nullbasierte Indexposition des <paramref name="value" />-Parameters vom Anfang der aktuellen Instanz, wenn diese Zeichenfolge gefunden wurde, oder -1, wenn sie nicht gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1900">The zero-based index position of the <paramref name="value" /> parameter from the start of the current instance if that string is found, or -1 if it is not.</span>
          </span>
          <span data-ttu-id="9380d-1901">Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, wird <paramref name="startIndex" /> zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1901">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1902">Der Index die Nummerierung beginnt bei 0.</span><span class="sxs-lookup"><span data-stu-id="9380d-1902">Index numbering starts from 0.</span></span> <span data-ttu-id="9380d-1903">Der `startIndex`-Parameter kann von 0 bis zu der Länge der Zeichenfolgeninstanz reichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1903">The `startIndex` parameter can range from 0 to the length of the string instance.</span></span> <span data-ttu-id="9380d-1904">Wenn `startIndex` entspricht der Länge der Zeichenfolgeninstanz, die Methode gibt-1 zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-1904">If `startIndex` equals the length of the string instance, the method returns -1.</span></span>  
  
 <span data-ttu-id="9380d-1905">Die `comparisonType` Parameter gibt an, dass für die Suche die `value` Parameter unter Verwendung der aktuellen oder der invarianten Kultur, mithilfe einer Suche Groß- und Kleinschreibung beachtet und mithilfe von Word oder Ordinalvergleichsregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-1905">The `comparisonType` parameter specifies to search for the `value` parameter using the current or invariant culture, using a case-sensitive or case-insensitive search, and using word or ordinal comparison rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1906">Die folgenden Exampledemonstrates drei Überladungen, der die <xref:System.String.IndexOf%2A> -Methode, die das erste Vorkommen einer Zeichenfolge innerhalb einer anderen Zeichenfolge, die mit unterschiedlichen Werten der suchen die <xref:System.StringComparison> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-1906">The following exampledemonstrates three overloads of the <xref:System.String.IndexOf%2A> method that find the first occurrence of a string within another string using different values of the <xref:System.StringComparison> enumeration.</span></span>  
  
 [!code-csharp[system.string.IndexOfCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.IndexOfCmp/cs/iocmp.cs#1)]
 [!code-vb[system.string.IndexOfCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.IndexOfCmp/vb/iocmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1907">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1907">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1908">
            <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge diese Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1908">
              <paramref name="startIndex" /> is less than 0 (zero) or greater than the length of this string.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-1909">
            <paramref name="comparisonType" /> ist kein gültiger <see cref="T:System.StringComparison" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1909">
              <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1910">
            <para>Zeichensätze enthalten Ignorierbare Zeichen, d. h. Zeichen, die beim Ausführen einer linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden. Bei einer kulturabhängige Suche (das heißt, wenn <paramref name="comparisonType" /> nicht <see cref="F:System.StringComparison.Ordinal" /> oder <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> ist), bei der <paramref name="value" /> ein ignorierbares Zeichen enthält, ist das Ergebnis das gleiche wie bei einer Suche ohne dieses Zeichen. Wenn <paramref name="value" /> besteht nur aus ein oder mehrere Ignorierbare Zeichen, die <see cref="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" /> Methode gibt immer <paramref name="startIndex" />, d.h. die Zeichenposition, an dem die Suche beginnt.  Im folgenden Beispiel die <see cref="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" /> Methode wird verwendet, um die Position (U + 00AD) über einen bedingten Bindestrich gefolgt von einem "m" beginnend mit der dritten Zeichenposition in zwei Zeichenfolgen zu suchen. Nur eine der Zeichenfolgen enthält die erforderliche Teilzeichenfolge. Wenn Sie das Beispiel ausgeführt wird, auf der [! Include[netfx40_short](~/Includes/netfx40-Short-MD.MD)] oder höher in beiden Fällen, da die bedingten Bindestrich ein ignorierbares Zeichen ist die Methode gibt den Index des "m" in der Zeichenfolge, wenn sie einen kulturabhängigen Vergleich ausführt. Beachten Sie, dass bei der ersten Zeichenfolge, die den bedingten Bindestrich gefolgt von einem "m" umfasst, die Methode den Index des bedingten Bindestrichs nicht zurückgeben kann, sondern stattdessen den Index des "m" zurückgibt. Die Methode gibt den Index des bedingten Bindestrichs in der ersten Zeichenfolge an, nur, wenn es sich um einen Ordinalvergleich ausführt.  [! Code-Csharp [System.String.IndexOf#25] (~/samples/snippets/csharp/VS_Snippets_CLR_System/System. String.IndexOf/CS/ignorable25.cs#25)] [! Vb-Code [System.String.IndexOf#25] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System. String.IndexOf/VB/ignorable25.vb#25)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1910">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison. In a culture-sensitive search (that is, if <paramref name="comparisonType" /> is not <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.  In the following example, the <see cref="M:System.String.IndexOf(System.String,System.Int32,System.StringComparison)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting with the third character position in two strings. Only one of the strings contains the required substring.If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison. Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m". The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.  [!code-csharp[System.String.IndexOf#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable25.cs#25)] [!code-vb[System.String.IndexOf#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable25.vb#25)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (string value, int startIndex, int count, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(string value, int32 startIndex, int32 count, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As String, startIndex As Integer, count As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::String ^ value, int startIndex, int count, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : string * int * int * StringComparison -&gt; int" Usage="string.IndexOf (value, startIndex, count, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-1911">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1911">The string to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-1912">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1912">The search starting position.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-1913">Die Anzahl der zu überprüfenden Zeichenpositionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1913">The number of character positions to examine.</span>
          </span>
        </param>
        <param name="comparisonType">
          <span data-ttu-id="9380d-1914">Einer der Enumerationswerte, der die Regeln für die Suche angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1914">One of the enumeration values that specifies the rules for the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1915">Gibt den NULL-basierten Index des ersten Vorkommens der angegebenen Zeichenfolge im aktuellen <see cref="T:System.String" />-Objekt an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1915">Reports the zero-based index of the first occurrence of the specified string in the current <see cref="T:System.String" /> object.</span>
          </span>
          <span data-ttu-id="9380d-1916">Parameter geben die Anfangssuchposition in der aktuellen Zeichenfolge, die Anzahl der Zeichen in der aktuellen Zeichenfolge und den Typ der Suche für die angegebene Zeichenfolge an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1916">Parameters specify the starting search position in the current string, the number of characters in the current string to search, and the type of search to use for the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1917">Die nullbasierte Indexposition des <paramref name="value" />-Parameters vom Anfang der aktuellen Instanz, wenn diese Zeichenfolge gefunden wurde, oder -1, wenn sie nicht gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1917">The zero-based index position of the <paramref name="value" /> parameter from the start of the current instance if that string is found, or -1 if it is not.</span>
          </span>
          <span data-ttu-id="9380d-1918">Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, wird <paramref name="startIndex" /> zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1918">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1919">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-1919">Index numbering starts from 0 (zero).</span></span> <span data-ttu-id="9380d-1920">Der `startIndex`-Parameter kann von 0 bis zu der Länge der Zeichenfolgeninstanz reichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1920">The `startIndex` parameter can range from 0 to the length of the string instance.</span></span>  
  
 <span data-ttu-id="9380d-1921">Die Suche beginnt an `startIndex` und weiterhin `startIndex`  +  `count` -1.</span><span class="sxs-lookup"><span data-stu-id="9380d-1921">The search begins at `startIndex` and continues to `startIndex` + `count` -1.</span></span> <span data-ttu-id="9380d-1922">Das Zeichen an der `startIndex`  +  `count` ist in der Suche nicht enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1922">The character at `startIndex` + `count` is not included in the search.</span></span>  
  
 <span data-ttu-id="9380d-1923">Die `comparisonType` Parameter gibt an, dass für die Suche die `value` Parameter unter Verwendung der aktuellen oder der invarianten Kultur, mithilfe einer Suche Groß- und Kleinschreibung beachtet und mithilfe von Word oder Ordinalvergleichsregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-1923">The `comparisonType` parameter specifies to search for the `value` parameter using the current or invariant culture, using a case-sensitive or case-insensitive search, and using word or ordinal comparison rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1924">Die folgenden Exampledemonstrates drei Überladungen, der die <xref:System.String.IndexOf%2A> -Methode, die das erste Vorkommen einer Zeichenfolge innerhalb einer anderen Zeichenfolge, die mit unterschiedlichen Werten der suchen die <xref:System.StringComparison> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-1924">The following exampledemonstrates three overloads of the <xref:System.String.IndexOf%2A> method that find the first occurrence of a string within another string using different values of the <xref:System.StringComparison> enumeration.</span></span>  
  
 [!code-csharp[system.string.IndexOfCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.IndexOfCmp/cs/iocmp.cs#1)]
 [!code-vb[system.string.IndexOfCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.IndexOfCmp/vb/iocmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1925">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1925">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1926">
            <paramref name="count" /> oder <paramref name="startIndex" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1926">
              <paramref name="count" /> or <paramref name="startIndex" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-1927">Oder:  <paramref name="startIndex" /> ist größer als die Länge dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1927">-or-  <paramref name="startIndex" /> is greater than the length of this instance.</span>
          </span>
          <span data-ttu-id="9380d-1928">Oder:  <paramref name="count" /> ist größer als die Länge dieser Zeichenfolge minus <paramref name="startIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1928">-or-  <paramref name="count" /> is greater than the length of this string minus <paramref name="startIndex" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-1929">
            <paramref name="comparisonType" /> ist kein gültiger <see cref="T:System.StringComparison" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1929">
              <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-1930">
            <para>Zeichensätze enthalten Ignorierbare Zeichen, d. h. Zeichen, die beim Ausführen einer linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden. Bei einer kulturabhängige Suche (das heißt, wenn <paramref name="comparisonType" /> nicht <see cref="F:System.StringComparison.Ordinal" /> oder <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> ist), bei der <paramref name="value" /> ein ignorierbares Zeichen enthält, ist das Ergebnis das gleiche wie bei einer Suche ohne dieses Zeichen. Wenn <paramref name="value" /> besteht nur aus ein oder mehrere Ignorierbare Zeichen, die <see cref="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> Methode gibt immer <paramref name="startIndex" />, d.h. die Zeichenposition, an dem die Suche beginnt.  Im folgenden Beispiel die <see cref="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> Methode wird verwendet, um die Position (U + 00AD) über einen bedingten Bindestrich gefolgt von einem "m" ab dem dritten bis sechsten Zeichenpositionen werden in zwei Zeichenfolgen zu suchen. Nur eine der Zeichenfolgen enthält die erforderliche Teilzeichenfolge. Wenn Sie das Beispiel ausgeführt wird, auf der [! Include[netfx40_short](~/Includes/netfx40-Short-MD.MD)] oder höher in beiden Fällen, da die bedingten Bindestrich ein ignorierbares Zeichen ist die Methode gibt den Index des "m" in der Zeichenfolge, wenn sie einen kulturabhängigen Vergleich ausführt. Wenn sie einen Ordinalvergleich ausführt, sucht er die Teilzeichenfolge jedoch nur in der ersten Zeichenfolge fest. Beachten Sie, dass bei der ersten Zeichenfolge, die den bedingten Bindestrich gefolgt von einem "m" enthält, die Methode ein Fehler auftritt, um den Index des bedingten Bindestrichs zurückzugeben, aber gibt stattdessen den Index des "m" aus, wenn er einen kulturabhängigen Vergleich ausführt. Die Methode gibt den Index des bedingten Bindestrichs in der ersten Zeichenfolge an, nur, wenn es sich um einen Ordinalvergleich ausführt.  [! Code-Csharp [System.String.IndexOf#24] (~/samples/snippets/csharp/VS_Snippets_CLR_System/System. String.IndexOf/CS/ignorable24.cs#24)] [! Vb-Code [System.String.IndexOf#24] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System. String.IndexOf/VB/ignorable24.vb#24)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1930">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison. In a culture-sensitive search (that is, if <paramref name="comparisonType" /> is not <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.  In the following example, the <see cref="M:System.String.IndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" starting in the third through sixth character positions in two strings. Only one of the strings contains the required substring. If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison. When it performs an ordinal comparison, however, it finds the substring only in the first string. Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison. The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.  [!code-csharp[System.String.IndexOf#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.IndexOf/CS/ignorable24.cs#24)] [!code-vb[System.String.IndexOf#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.IndexOf/VB/ignorable24.vb#24)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOfAny">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-1931">Gibt den Index des ersten Vorkommens eines beliebigen Zeichens aus einem angegebenen Array von Unicode-Zeichen in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1931">Reports the index of the first occurrence in this instance of any character in a specified array of Unicode characters.</span>
          </span>
          <span data-ttu-id="9380d-1932">Die Methode gibt -1 zurück, wenn die Zeichen im Array nicht in dieser Instanz gefunden werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1932">The method returns -1 if the characters in the array are not found in this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOfAny(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] -&gt; int" Usage="string.IndexOfAny anyOf" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="anyOf">
          <span data-ttu-id="9380d-1933">Ein Array von Unicode-Zeichen mit mindestens einem zu suchenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1933">A Unicode character array containing one or more characters to seek.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1934">Gibt den NULL-basierten Index des ersten Vorkommens eines beliebigen Zeichens aus einem angegebenen Array von Unicode-Zeichen in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1934">Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1935">Die nullbasierte Indexposition des ersten Vorkommens eines beliebigen Zeichens aus <paramref name="anyOf" /> in dieser Instanz. -1, wenn kein Zeichen in <paramref name="anyOf" /> gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1935">The zero-based index position of the first occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1936">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-1936">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="9380d-1937">Die Suche nach `anyOf` Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1937">The search for `anyOf` is case-sensitive.</span></span> <span data-ttu-id="9380d-1938">Wenn `anyOf` ist ein leeres Array, der die Methode findet eine Übereinstimmung am Anfang der Zeichenfolge (d. h. am index 0 (null)).</span><span class="sxs-lookup"><span data-stu-id="9380d-1938">If `anyOf` is an empty array, the method finds a match at the beginning of the string (that  is, at index zero).</span></span>  
  
 <span data-ttu-id="9380d-1939">Diese Methode führt eine ordinale (kulturunabhängige) Suche, in dem ein Zeichen als gleich betrachtet, ein anderes Zeichen nur dann, wenn die Unicode-Skalarwerten identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1939">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="9380d-1940">Um eine kulturabhängige Suche durchzuführen, verwenden die <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> -Methode, in dem ein Unicode-Skalarwert, ein zusammengesetztes Zeichen, z. B. die Ligatur "Æ" (U + 00 C 6) betrachtet werden kann entspricht jedem Vorkommen des Zeichens-Komponenten in der Korrigieren Sie die Sequenz, wie z. B. "AE" (U + 0041, U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1940">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1941">Im folgende Beispiel wird der erste Vokal in einer Zeichenfolge gesucht.</span><span class="sxs-lookup"><span data-stu-id="9380d-1941">The following example finds the first vowel in a string.</span></span>  
  
 [!code-csharp[System.String.IndexOfAny#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.IndexOfAny/cs/IndexOfAny1.cs#1)]
 [!code-vb[System.String.IndexOfAny#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.IndexOfAny/vb/IndexOfAny1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1942">
            <paramref name="anyOf" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1942">
              <paramref name="anyOf" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOfAny(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char(), startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] * int -&gt; int" Usage="string.IndexOfAny (anyOf, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anyOf">
          <span data-ttu-id="9380d-1943">Ein Array von Unicode-Zeichen mit mindestens einem zu suchenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1943">A Unicode character array containing one or more characters to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-1944">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1944">The search starting position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1945">Gibt den NULL-basierten Index des ersten Vorkommens eines beliebigen Zeichens aus einem angegebenen Array von Unicode-Zeichen in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1945">Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.</span>
          </span>
          <span data-ttu-id="9380d-1946">Die Suche beginnt an einer angegebenen Zeichenposition.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1946">The search starts at a specified character position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1947">Die nullbasierte Indexposition des ersten Vorkommens eines beliebigen Zeichens aus <paramref name="anyOf" /> in dieser Instanz. -1, wenn kein Zeichen in <paramref name="anyOf" /> gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1947">The zero-based index position of the first occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1948">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-1948">Index numbering starts from zero.</span></span> <span data-ttu-id="9380d-1949">Die `startIndex` Parameter kann im Bereich von 0 bis eins weniger als die Länge der Zeichenfolgeninstanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-1949">The `startIndex` parameter can range from 0 to one less than the length of the string instance.</span></span>  
  
 <span data-ttu-id="9380d-1950">Die Suche erfolgt von `startIndex` bis zum Ende der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1950">The search ranges from `startIndex` to the end of the string.</span></span>  
  
 <span data-ttu-id="9380d-1951">Die Suche nach `anyOf` Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1951">The search for `anyOf` is case-sensitive.</span></span>  
  
 <span data-ttu-id="9380d-1952">Diese Methode führt eine ordinale (kulturunabhängige) Suche, in dem ein Zeichen als gleich betrachtet, ein anderes Zeichen nur dann, wenn die Unicode-Skalarwert identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1952">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar value are the same.</span></span> <span data-ttu-id="9380d-1953">Um eine kulturabhängige Suche durchzuführen, verwenden die <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> -Methode, in dem ein Unicode-Skalarwert, ein zusammengesetztes Zeichen, z. B. die Ligatur "Æ" (U + 00 C 6) betrachtet werden kann entspricht jedem Vorkommen des Zeichens-Komponenten in der Korrigieren Sie die Sequenz, wie z. B. "AE" (U + 0041, U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1953">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1954">Im folgenden Beispiel wird der Index des Vorkommens eines beliebigen Zeichens der Zeichenfolge "is" in einer Teilzeichenfolge einer anderen Zeichenfolge gesucht.</span><span class="sxs-lookup"><span data-stu-id="9380d-1954">The following example finds the index of the occurrence of any character of the string "is" within a substring of another string.</span></span>  
  
 [!code-cpp[string.indexofany2#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.indexofany2/CPP/ixany2.cpp#1)]
 [!code-csharp[string.indexofany2#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.indexofany2/CS/ixany2.cs#1)]
 [!code-vb[string.indexofany2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.indexofany2/VB/ixany2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1955">
            <paramref name="anyOf" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1955">
              <paramref name="anyOf" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1956">
            <paramref name="startIndex" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1956">
              <paramref name="startIndex" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-1957">Oder:  <paramref name="startIndex" /> ist größer als die Anzahl der Zeichen in dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1957">-or-  <paramref name="startIndex" /> is greater than the number of characters in this instance.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfAny">
      <MemberSignature Language="C#" Value="public int IndexOfAny (char[] anyOf, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOfAny(char[] anyOf, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IndexOfAny(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOfAny (anyOf As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.IndexOfAny : char[] * int * int -&gt; int" Usage="string.IndexOfAny (anyOf, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anyOf">
          <span data-ttu-id="9380d-1958">Ein Array von Unicode-Zeichen mit mindestens einem zu suchenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1958">A Unicode character array containing one or more characters to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-1959">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1959">The search starting position.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-1960">Die Anzahl der zu überprüfenden Zeichenpositionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1960">The number of character positions to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1961">Gibt den NULL-basierten Index des ersten Vorkommens eines beliebigen Zeichens aus einem angegebenen Array von Unicode-Zeichen in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1961">Reports the zero-based index of the first occurrence in this instance of any character in a specified array of Unicode characters.</span>
          </span>
          <span data-ttu-id="9380d-1962">Die Suche beginnt an einer angegebenen Zeichenposition, und es wird eine angegebene Anzahl von Zeichenpositionen überprüft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1962">The search starts at a specified character position and examines a specified number of character positions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1963">Die nullbasierte Indexposition des ersten Vorkommens eines beliebigen Zeichens aus <paramref name="anyOf" /> in dieser Instanz. -1, wenn kein Zeichen in <paramref name="anyOf" /> gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1963">The zero-based index position of the first occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1964">Die Suche beginnt an `startIndex` und weiterhin `startIndex`  +  `count` -1.</span><span class="sxs-lookup"><span data-stu-id="9380d-1964">The search begins at `startIndex` and continues to `startIndex` + `count` -1.</span></span> <span data-ttu-id="9380d-1965">Das Zeichen an der `startIndex`  +  `count` ist in der Suche nicht enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-1965">The character at `startIndex` + `count` is not included in the search.</span></span>  
  
 <span data-ttu-id="9380d-1966">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-1966">Index numbering starts from zero.</span></span> <span data-ttu-id="9380d-1967">Die `startIndex` Parameter kann im Bereich von 0 bis eins weniger als die Länge der Zeichenfolgeninstanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-1967">The `startIndex` parameter can range from 0 to one less than the length of the string instance.</span></span>  
  
 <span data-ttu-id="9380d-1968">Die Suche nach `anyOf` Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1968">The search for `anyOf` is case-sensitive.</span></span>  
  
 <span data-ttu-id="9380d-1969">Diese Methode führt eine ordinale (kulturunabhängige) Suche, in dem ein Zeichen als gleich betrachtet, ein anderes Zeichen nur dann, wenn die Unicode-Skalarwert identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-1969">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar value are the same.</span></span> <span data-ttu-id="9380d-1970">Um eine kulturabhängige Suche durchzuführen, verwenden die <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> -Methode, in dem ein Unicode-Skalarwert, ein zusammengesetztes Zeichen, z. B. die Ligatur "Æ" (U + 00 C 6) betrachtet werden kann entspricht jedem Vorkommen des Zeichens-Komponenten in der Korrigieren Sie die Sequenz, wie z. B. "AE" (U + 0041, U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-1970">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.IndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1971">Das folgende Beispiel sucht den Index des Vorkommens eines beliebigen Zeichens der Zeichenfolge "Aid" in einer Teilzeichenfolge einer anderen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1971">The following example finds the index of the occurrence of any character of the string "aid" within a substring of another string.</span></span>  
  
 [!code-cpp[string.indexofany3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.indexofany3/CPP/ixany3.cpp#1)]
 [!code-csharp[string.indexofany3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.indexofany3/CS/ixany3.cs#1)]
 [!code-vb[string.indexofany3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.indexofany3/VB/ixany3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1972">
            <paramref name="anyOf" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1972">
              <paramref name="anyOf" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1973">
            <paramref name="count" /> oder <paramref name="startIndex" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1973">
              <paramref name="count" /> or <paramref name="startIndex" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-1974">Oder:  <paramref name="count" /> + <paramref name="startIndex" /> ist größer als die Anzahl der Zeichen in dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1974">-or-  <paramref name="count" /> + <paramref name="startIndex" /> is greater than the number of characters in this instance.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public string Insert (int startIndex, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Insert(int32 startIndex, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Insert(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (startIndex As Integer, value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Insert(int startIndex, System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * string -&gt; string" Usage="string.Insert (startIndex, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="9380d-1975">Die nullbasierte Indexposition für das Einfügen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1975">The zero-based index position of the insertion.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9380d-1976">Die einzufügende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1976">The string to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1977">Gibt eine neue Zeichenfolge zurück, in der eine angegebene Zeichenfolge an einer angegebenen Indexposition in dieser Instanz eingefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1977">Returns a new string in which a specified string is inserted at a specified index position in this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1978">Eine neue Zeichenfolge, die dieser Instanz mit einem an der Position <paramref name="value" /> eingefügten <paramref name="startIndex" /> entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1978">A new string that is equivalent to this instance, but with <paramref name="value" /> inserted at position <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1979">Wenn `startIndex` ist gleich der Länge dieser Instanz `value` am Ende dieser Instanz angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-1979">If `startIndex` is equal to the length of this instance, `value` is appended to the end of this instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-1980">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-1980">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-1981">Stattdessen wird eine neue Zeichenfolge zurückgegeben, in dem `value` in der aktuellen Instanz eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1981">Instead, it returns a new string in which `value` is inserted into the current instance.</span></span>  
  
 <span data-ttu-id="9380d-1982">Beispielsweise ist der Rückgabewert von `"abc".Insert(2, "XYZ")` "AbXYZc" ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-1982">For example, the return value of `"abc".Insert(2, "XYZ")` is "abXYZc".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-1983">Das folgende Beispiel fügt ein Leerzeichen in der vierten Zeichenposition (das Zeichen am Index 3) einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-1983">The following example inserts a space character in the fourth character position (the character at index 3) of a string.</span></span>  
  
 [!code-csharp[System.String.Insert#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Insert/cs/Insert1.cs#1)]
 [!code-vb[System.String.Insert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Insert/vb/Insert1.vb#1)]  
  
 <span data-ttu-id="9380d-1984">Die folgende Konsolenanwendung fordert den Benutzer zur Eingabe von ein oder mehrere Adjektive um zwei Tiere zu beschreiben.</span><span class="sxs-lookup"><span data-stu-id="9380d-1984">The following console application prompts the users to enter one or more adjectives to describe two animals.</span></span> <span data-ttu-id="9380d-1985">Es ruft dann die <xref:System.String.Insert%2A> Methode, die in eine Zeichenfolge vom Benutzer eingegebenen Text eingefügt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-1985">It then calls the <xref:System.String.Insert%2A> method to insert the text entered by the user into a string.</span></span>  
  
 [!code-cpp[stringinsert#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringinsert/CPP/stringinsert.cpp#1)]
 [!code-csharp[stringinsert#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringinsert/CS/stringinsert.cs#1)]
 [!code-vb[stringinsert#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringinsert/VB/stringinsert.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-1986">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1986">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-1987">
            <paramref name="startIndex" /> ist negativ oder größer als die Länge diese Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1987">
              <paramref name="startIndex" /> is negative or greater than the length of this instance.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.CopyTo(System.Int32,System.Char[],System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Split(System.Char[])" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Intern">
      <MemberSignature Language="C#" Value="public static string Intern (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Intern(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Intern(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Intern (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Intern(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member Intern : string -&gt; string" Usage="System.string.Intern str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="9380d-1988">Eine im Internpool zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1988">A string to search for in the intern pool.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-1989">Ruft den Verweis des Systems auf den angegebenen <see cref="T:System.String" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1989">Retrieves the system's reference to the specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-1990">Der Verweis des Systems auf <paramref name="str" />, wenn dieser im Internpool vorhanden ist, andernfalls ein neuer Verweis auf eine Zeichenfolge mit dem Wert von <paramref name="str" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-1990">The system's reference to <paramref name="str" />, if it is interned; otherwise, a new reference to a string with the value of <paramref name="str" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-1991">Die common Language Runtime behält Zeichenfolgenspeicher durch verwalten eine Tabelle, mit dem Namen Internpool, die einen einzelnen Verweis auf jedes eindeutigen Zeichenfolgenliterals deklariert oder programmgesteuert erstellt, in Ihrem Programm enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-1991">The common language runtime conserves string storage by maintaining a table, called the intern pool, that contains a single reference to each unique literal string declared or created programmatically in your program.</span></span> <span data-ttu-id="9380d-1992">Daher vorhanden eine Instanz einer Literalzeichenfolge mit einem bestimmten Wert nur einmal im System.</span><span class="sxs-lookup"><span data-stu-id="9380d-1992">Consequently, an instance of a literal string with a particular value only exists once in the system.</span></span>  
  
 <span data-ttu-id="9380d-1993">Beispielsweise, wenn Sie mehrere Variablen, die die gleiche Zeichenfolge zuweisen, die Runtime Ruft den gleichen Verweis auf das Zeichenfolgenliteral aus Internpool und jeder Variablen zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1993">For example, if you assign the same literal string to several variables, the runtime retrieves the same reference to the literal string from the intern pool and assigns it to each variable.</span></span>  
  
 <span data-ttu-id="9380d-1994">Die <xref:System.String.Intern%2A> Methode verwendet Internpool um zu suchende eine Zeichenfolge, die gleich dem Wert des `str`.</span><span class="sxs-lookup"><span data-stu-id="9380d-1994">The <xref:System.String.Intern%2A> method uses the intern pool to search for a string equal to the value of `str`.</span></span> <span data-ttu-id="9380d-1995">Wenn eine solche Zeichenfolge vorhanden ist, wird der Verweis im Internpool zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-1995">If such a string exists, its reference in the intern pool is returned.</span></span> <span data-ttu-id="9380d-1996">Wenn die Zeichenfolge nicht vorhanden ist, einen Verweis auf `str` dem Internpool hinzugefügt wird, und klicken Sie dann diesen Verweis zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-1996">If the string does not exist, a reference to `str` is added to the intern pool, then that reference is returned.</span></span>  
  
 <span data-ttu-id="9380d-1997">Im folgenden Beispiel wird der Zeichenfolge s1 mit die Wert "MyTest", bereits intern gespeichert, da es sich um ein Literal in der Anwendung handelt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1997">In the following example, the string s1, which has a value of "MyTest", is already interned because it is a literal in the program.</span></span> <span data-ttu-id="9380d-1998">Die <xref:System.Text.StringBuilder?displayProperty=nameWithType> Klasse generiert ein neues Zeichenfolgenobjekt, das den gleichen Wert wie bei s1 verfügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-1998">The <xref:System.Text.StringBuilder?displayProperty=nameWithType> class generates a new string object that has the same value as s1.</span></span> <span data-ttu-id="9380d-1999">Ein Verweis auf diese Zeichenfolge wird auf s2 Herunterskalieren zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="9380d-1999">A reference to that string is assigned to s2.</span></span> <span data-ttu-id="9380d-2000">Die <xref:System.String.Intern%2A> Methode sucht eine Zeichenfolge, die den gleichen Wert wie s2 hat.</span><span class="sxs-lookup"><span data-stu-id="9380d-2000">The <xref:System.String.Intern%2A> method searches for a string that has the same value as s2.</span></span> <span data-ttu-id="9380d-2001">Da eine solche Zeichenfolge vorhanden ist, gibt die Methode den gleichen Verweis, der auf s1 zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-2001">Because such a string exists, the method returns the same reference that is assigned to s1.</span></span> <span data-ttu-id="9380d-2002">Dieser Verweis wird dann auf s3 zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2002">That reference is then assigned to s3.</span></span> <span data-ttu-id="9380d-2003">Verweise s1 und s2 sind ungleich, da sie auf verschiedene Objekte verweisen. Verweise s1 und s3 sind gleich, da sie auf die gleiche Zeichenfolge verweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2003">References s1 and s2 compare unequal because they refer to different objects; references s1 and s3 compare equal because they refer to the same string.</span></span>  
  
 [!code-csharp[System.String.Intern#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Intern/cs/Intern1.cs#1)]
 [!code-vb[System.String.Intern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Intern/vb/Intern1.vb#1)]  
  
 <span data-ttu-id="9380d-2004">Vergleichen Sie diese Methode, um die <xref:System.String.IsInterned%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2004">Compare this method to the <xref:System.String.IsInterned%2A> method.</span></span>  
  
## <a name="version-considerations"></a><span data-ttu-id="9380d-2005">Version-Überlegungen</span><span class="sxs-lookup"><span data-stu-id="9380d-2005">Version Considerations</span></span>  
 <span data-ttu-id="9380d-2006">In der [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)], <xref:System.String.Intern%2A> Methode auf das Verhalten in .NET Framework 1.0 und 1.1 im Hinblick auf eine Internalisierung die leere Zeichenfolge zurückgesetzt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2006">In the [!INCLUDE[net_v35SP1_long](~/includes/net-v35sp1-long-md.md)], the <xref:System.String.Intern%2A> method reverts to its behavior in the .NET Framework 1.0 and 1.1 with regard to interning the empty string.</span></span> <span data-ttu-id="9380d-2007">In der folgenden Beispiel wird die Variable `str1` erhält einen Verweis auf <xref:System.String.Empty>, und die Variable `str2` erhält den Verweis auf <xref:System.String.Empty> zurückgegeben, die durch Aufrufen der <xref:System.String.Intern%2A> Methode nach der Konvertierung einer <xref:System.Text.StringBuilder>Objekt, dessen Wert <xref:System.String.Empty> in eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2007">In the following example, the variable `str1` is assigned a reference to <xref:System.String.Empty>, and the variable `str2` is assigned the reference to <xref:System.String.Empty> that is returned by calling the <xref:System.String.Intern%2A> method after converting a <xref:System.Text.StringBuilder> object whose value is <xref:System.String.Empty> to a string.</span></span> <span data-ttu-id="9380d-2008">Klicken Sie dann die Verweise, die in enthaltenen `str1` und `str2` Gleichheit verglichen werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2008">Then the references contained in `str1` and `str2` are compared for equality.</span></span>  
  
 [!code-csharp[System.String.Intern#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Intern/cs/Intern2.cs#2)]
 [!code-vb[System.String.Intern#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Intern/vb/Intern2.vb#2)]  
  
 <span data-ttu-id="9380d-2009">In der [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)], [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], und [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)], `str1` und `str2` gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2009">In the [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)], [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], and [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)], `str1` and `str2` are equal.</span></span> <span data-ttu-id="9380d-2010">In der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] und [!INCLUDE[net_v30_long](~/includes/net-v30-long-md.md)], `str1` und `str2` ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2010">In the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)] and [!INCLUDE[net_v30_long](~/includes/net-v30-long-md.md)], `str1` and `str2` are not equal.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="9380d-2011">Überlegungen zur Leistung</span><span class="sxs-lookup"><span data-stu-id="9380d-2011">Performance Considerations</span></span>  
 <span data-ttu-id="9380d-2012">Wenn Sie versuchen, die die Gesamtmenge des Arbeitsspeichers zu reduzieren. Ihre Anwendung weist, denken Sie daran, die Internalisieren von Zeichenfolgen zwei unerwünschte Nebeneffekte hat.</span><span class="sxs-lookup"><span data-stu-id="9380d-2012">If you are trying to reduce the total amount of memory your application allocates, keep in mind that interning a string has two unwanted side effects.</span></span> <span data-ttu-id="9380d-2013">Zunächst der zugeordnete Arbeitsspeicher für internalisiert <xref:System.String> Objekte wird ist wahrscheinlich nicht freigegeben, bis die common Language Runtime (CLR) beendet wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2013">First, the memory allocated for interned <xref:System.String> objects is not likely be released until the common language runtime (CLR) terminates.</span></span> <span data-ttu-id="9380d-2014">Der Grund dafür ist, die der CLR-Verweis auf das internalisierte <xref:System.String> Objekt können beibehalten, nachdem die Anwendung oder sogar der Anwendungsdomäne, beendet wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2014">The reason is that the CLR's reference to the interned <xref:System.String> object can persist after your application, or even your application domain, terminates.</span></span> <span data-ttu-id="9380d-2015">Um eine Zeichenfolge intern, müssen Sie zweitens zunächst die Zeichenfolge erstellen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2015">Second, to intern a string, you must first create the string.</span></span> <span data-ttu-id="9380d-2016">Der Speicher ein, die die <xref:System.String> Objekt muss immer noch zugeordnet werden können, auch wenn der Arbeitsspeicher schließlich Garbage Collection durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2016">The memory used by the <xref:System.String> object must still be allocated, even though the memory will eventually be garbage collected.</span></span>  
  
 <span data-ttu-id="9380d-2017">.NET Framework, Version 2.0 stellt die <xref:System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning?displayProperty=nameWithType> -Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="9380d-2017">The .NET Framework version 2.0 introduces the <xref:System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning?displayProperty=nameWithType> enumeration member.</span></span> <span data-ttu-id="9380d-2018">Die <xref:System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning> Element markiert eine Assembly nicht eine erforderliche Zeichenfolge interning von.</span><span class="sxs-lookup"><span data-stu-id="9380d-2018">The <xref:System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning> member marks an assembly as not requiring string-literal interning.</span></span> <span data-ttu-id="9380d-2019">Sie anwenden können <xref:System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning> auf eine Assembly mit der <xref:System.Runtime.CompilerServices.CompilationRelaxationsAttribute> Attribut.</span><span class="sxs-lookup"><span data-stu-id="9380d-2019">You can apply <xref:System.Runtime.CompilerServices.CompilationRelaxations.NoStringInterning> to an assembly using the <xref:System.Runtime.CompilerServices.CompilationRelaxationsAttribute> attribute.</span></span> <span data-ttu-id="9380d-2020">Wenn Sie darüber hinaus verwenden die [Ngen.exe (Native Image Generator)](~/docs/framework/tools/ngen-exe-native-image-generator.md) zum Kompilieren einer Assembly im Vorfeld zur Laufzeit Zeichenfolgen nicht modulübergreifend Module.</span><span class="sxs-lookup"><span data-stu-id="9380d-2020">Also, when you use the [Ngen.exe (Native Image Generator)](~/docs/framework/tools/ngen-exe-native-image-generator.md) to compile an assembly in advance of run time, strings are not interned across modules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2021">Das folgende Beispiel verwendet drei Zeichenfolgen, die Wert zu bestimmen, ob eine neu erstellte Zeichenfolge identisch ist, und eine im Internpool vorhanden Zeichenfolge sind gleich.</span><span class="sxs-lookup"><span data-stu-id="9380d-2021">The following example uses three strings that are equal in value to determine whether a newly created string and an interned string are equal.</span></span>  
  
 [!code-cpp[string.intern#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.intern/CPP/string_intern.cpp#1)]
 [!code-csharp[string.intern#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.intern/CS/string_intern.cs#1)]
 [!code-vb[string.intern#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.intern/VB/string_intern.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2022">
            <paramref name="str" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2022">
              <paramref name="str" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.IsInterned(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsInterned">
      <MemberSignature Language="C#" Value="public static string IsInterned (string str);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string IsInterned(string str) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IsInterned(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsInterned (str As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ IsInterned(System::String ^ str);" />
      <MemberSignature Language="F#" Value="static member IsInterned : string -&gt; string" Usage="System.string.IsInterned str" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="str" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="str">
          <span data-ttu-id="9380d-2023">Die im Internpool zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2023">The string to search for in the intern pool.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2024">Ruft einen Verweis auf einen angegebenen <see cref="T:System.String" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2024">Retrieves a reference to a specified <see cref="T:System.String" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2025">Ein Verweis auf <paramref name="str" />, wenn sich dieser im Internpool der Common Language Runtime befindet; andernfalls <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2025">A reference to <paramref name="str" /> if it is in the common language runtime intern pool; otherwise, <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2026">Die common Language Runtime verwaltet automatisch eine Tabelle, mit dem Namen Internpool, die eine einzelne Instanz jedes eindeutigen Zeichenfolgenliterals-Konstante, die in einem Programm als auch eine beliebige eindeutige Instanz des deklarierten enthält <xref:System.String> Sie programmgesteuert durch Aufrufen von hinzufügen die <xref:System.String.Intern%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2026">The common language runtime automatically maintains a table, called the intern pool, which contains a single instance of each unique literal string constant declared in a program, as well as any unique instance of <xref:System.String> you add programmatically by calling the <xref:System.String.Intern%2A> method.</span></span>  
  
 <span data-ttu-id="9380d-2027">Der Internpool erhält Zeichenfolgenspeicher.</span><span class="sxs-lookup"><span data-stu-id="9380d-2027">The intern pool conserves string storage.</span></span> <span data-ttu-id="9380d-2028">Wenn Sie eine literale Zeichenfolgenkonstante mit verschiedenen Variablen zuweisen, wird jede Variable auf die gleiche Konstante im Internpool anstelle von Verweisen auf unterschiedliche Instanzen von festgelegt <xref:System.String> , die gleiche Werte aufweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2028">If you assign a literal string constant to several variables, each variable is set to reference the same constant in the intern pool instead of referencing several different instances of <xref:System.String> that have identical values.</span></span>  
  
 <span data-ttu-id="9380d-2029">Diese Methode sucht `str` im Internpool.</span><span class="sxs-lookup"><span data-stu-id="9380d-2029">This method looks up `str` in the intern pool.</span></span> <span data-ttu-id="9380d-2030">Wenn `str` wurde bereits intern gespeichert, die ein Verweis auf diese Instanz wird zurückgegeben, andernfalls `null` zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2030">If `str` has already been interned, a reference to that instance is returned; otherwise, `null` is returned.</span></span>  
  
 <span data-ttu-id="9380d-2031">Vergleichen Sie diese Methode, um die <xref:System.String.Intern%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2031">Compare this method to the <xref:System.String.Intern%2A> method.</span></span>  
  
 <span data-ttu-id="9380d-2032">Diese Methode gibt keinen booleschen Wert zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-2032">This method does not return a Boolean value.</span></span> <span data-ttu-id="9380d-2033">Wenn Sie möchten einen booleschen Wert, der angibt, ob eine bestimmte Zeichenfolge internalisiert ist, dass die Methode aufrufen, können Sie Code wie den folgenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2033">If you call the method because you want a Boolean value that indicates whether a particular string is interned, you can use code such as the following.</span></span>  
  
 [!code-csharp[System.String.IsInterned#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.isinterned/cs/isinternedex1.cs#1)]
 [!code-vb[System.String.IsInterned#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.isinterned/vb/isinternedex1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="9380d-2034">Ab .NET Framework, Version 2.0, können Sie die Verwendung von Internpool bei Verwendung von überschreiben die [Ngen.exe (Native Image Generator)](~/docs/framework/tools/ngen-exe-native-image-generator.md) , eine Assembly auf den Cache für systemeigene Images auf einem lokalen Computer zu installieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-2034">Starting with the .NET Framework version 2.0, you can override the use of the intern pool when you use the [Ngen.exe (Native Image Generator)](~/docs/framework/tools/ngen-exe-native-image-generator.md) to install an assembly to the native image cache on a local computer.</span></span> <span data-ttu-id="9380d-2035">Weitere Informationen finden Sie unter Überlegungen zur Leistung im Abschnitt "Hinweise", um die <xref:System.String.Intern%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9380d-2035">For more information, see Performance Considerations in the Remarks section for the <xref:System.String.Intern%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2036">Das folgende Beispiel zeigt, dass die Literalzeichenfolgen automatisch vom Compiler intern gespeichert werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2036">The following example demonstrates that literal strings are interned automatically by the compiler.</span></span>  
  
 [!code-cpp[string.isinterned#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.isinterned/CPP/isin.cpp#1)]
 [!code-csharp[string.isinterned#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.isinterned/CS/isin.cs#1)]
 [!code-vb[string.isinterned#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.isinterned/VB/isin.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2037">
            <paramref name="str" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2037">
              <paramref name="str" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.Intern(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsNormalized">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2038">Gibt an, ob diese Zeichenfolge in einer bestimmten Unicode-Normalisierungsform vorliegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2038">Indicates whether this string is in a particular Unicode normalization form.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsNormalized">
      <MemberSignature Language="C#" Value="public bool IsNormalized ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNormalized() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IsNormalized" />
      <MemberSignature Language="VB.NET" Value="Public Function IsNormalized () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNormalized();" />
      <MemberSignature Language="F#" Value="member this.IsNormalized : unit -&gt; bool" Usage="string.IsNormalized " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2039">Gibt an, ob diese Zeichenfolge in der Unicode-Normalisierungsform C vorliegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2039">Indicates whether this string is in Unicode normalization form C.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2040">
            <see langword="true" />, wenn diese Zeichenfolge in der Normalisierungsform C vorliegt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2040">
              <see langword="true" /> if this string is in normalization form C; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2041">Einige Unicode-Zeichen umfassen mehrere entsprechende binärdarstellungen bestehend aus Gruppen von der Kombination von und/oder zusammengesetzte Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2041">Some Unicode characters have multiple equivalent binary representations consisting of sets of combining and/or composite Unicode characters.</span></span> <span data-ttu-id="9380d-2042">Das Vorhandensein mehrerer Darstellungen für ein einzelnes Zeichen erschwert suchen, sortieren, Abgleich und andere Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2042">The existence of multiple representations for a single character complicates searching, sorting, matching, and other operations.</span></span>  
  
 <span data-ttu-id="9380d-2043">Die Unicode-standard definiert einen Prozess namens Normalisierung, die eine binäre Darstellung, wenn jede der entsprechende binäre Darstellung eines Zeichens zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2043">The Unicode standard defines a process called normalization that returns one binary representation when given any of the equivalent binary representations of a character.</span></span> <span data-ttu-id="9380d-2044">Normalisierung kann ausgeführt werden, mit mehreren Algorithmen, die genannte Normalisierungsformen, die unterschiedliche Regeln einhalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2044">Normalization can be performed with several algorithms, called normalization forms, that obey different rules.</span></span> <span data-ttu-id="9380d-2045">.NET Framework unterstützt derzeit Normalisierungsformen C, D, KC und KD.</span><span class="sxs-lookup"><span data-stu-id="9380d-2045">The .NET Framework currently supports normalization forms C, D, KC, and KD.</span></span>  
  
 <span data-ttu-id="9380d-2046">Eine Beschreibung der unterstützten Unicode-Normalisierungsformen, finden Sie unter <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2046">For a description of supported Unicode normalization forms, see <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2047">Im folgenden Beispiel wird bestimmt, ob eine Zeichenfolge erfolgreich in verschiedenen Normalisierungsformen normalisiert wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2047">The following example determines whether a string is successfully normalized to various normalization forms.</span></span>  
  
 [!code-cpp[string.normalize#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.normalize/CPP/norm.cpp#1)]
 [!code-csharp[string.normalize#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.normalize/CS/norm.cs#1)]
 [!code-vb[string.normalize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.normalize/VB/norm.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2048">Die aktuelle Instanz enthält ungültige Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2048">The current instance contains invalid Unicode characters.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2049">
            <para>Die <see cref="Overload:System.String.IsNormalized" /> Methodenrückgabe <see langword="false" /> , sobald es feststellt, dass das erste Zeichen der nicht normalisierte in einer Zeichenfolge. Aus diesem Grund, wenn eine Zeichenfolge nicht normalisierte Zeichen gefolgt von ungültigen Unicode-Zeichen, enthält die <see cref="Overload:System.String.Normalize" /> Methode löst eine <see cref="T:System.ArgumentException" /> zwar <see cref="Overload:System.String.IsNormalized" /> gibt <see langword="false" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2049">
              <para>The <see cref="Overload:System.String.IsNormalized" /> method returns <see langword="false" /> as soon as it encounters the first non-normalized character in a string. Therefore, if a string contains non-normalized characters followed by invalid Unicode characters, the <see cref="Overload:System.String.Normalize" /> method will throw an <see cref="T:System.ArgumentException" /> although <see cref="Overload:System.String.IsNormalized" /> returns <see langword="false" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.Normalize" />
      </Docs>
    </Member>
    <Member MemberName="IsNormalized">
      <MemberSignature Language="C#" Value="public bool IsNormalized (System.Text.NormalizationForm normalizationForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsNormalized(valuetype System.Text.NormalizationForm normalizationForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IsNormalized(System.Text.NormalizationForm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsNormalized(System::Text::NormalizationForm normalizationForm);" />
      <MemberSignature Language="F#" Value="member this.IsNormalized : System.Text.NormalizationForm -&gt; bool" Usage="string.IsNormalized normalizationForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" />
      </Parameters>
      <Docs>
        <param name="normalizationForm">
          <span data-ttu-id="9380d-2050">Eine Unicode-Normalisierungsform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2050">A Unicode normalization form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2051">Gibt an, ob diese Zeichenfolge in der angegebenen Unicode-Normalisierungsform vorliegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2051">Indicates whether this string is in the specified Unicode normalization form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2052">
            <see langword="true" />, wenn diese Zeichenfolge in der vom <paramref name="normalizationForm" />-Parameter angegebenen Normalisierungsform vorliegt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2052">
              <see langword="true" /> if this string is in the normalization form specified by the <paramref name="normalizationForm" /> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2053">Einige Unicode-Zeichen umfassen mehrere entsprechende binärdarstellungen bestehend aus Gruppen von der Kombination von und/oder zusammengesetzte Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2053">Some Unicode characters have multiple equivalent binary representations consisting of sets of combining and/or composite Unicode characters.</span></span> <span data-ttu-id="9380d-2054">Das Vorhandensein mehrerer Darstellungen für ein einzelnes Zeichen erschwert suchen, sortieren, Abgleich und andere Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2054">The existence of multiple representations for a single character complicates searching, sorting, matching, and other operations.</span></span>  
  
 <span data-ttu-id="9380d-2055">Die Unicode-standard definiert einen Prozess namens Normalisierung, die eine binäre Darstellung, wenn jede der entsprechende binäre Darstellung eines Zeichens zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2055">The Unicode standard defines a process called normalization that returns one binary representation when given any of the equivalent binary representations of a character.</span></span> <span data-ttu-id="9380d-2056">Normalisierung kann ausgeführt werden, mit mehreren Algorithmen, die genannte Normalisierungsformen, die unterschiedliche Regeln einhalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2056">Normalization can be performed with several algorithms, called normalization forms, that obey different rules.</span></span> <span data-ttu-id="9380d-2057">.NET Framework unterstützt derzeit Normalisierungsformen C, D, KC und KD.</span><span class="sxs-lookup"><span data-stu-id="9380d-2057">The .NET Framework currently supports normalization forms C, D, KC, and KD.</span></span>  
  
 <span data-ttu-id="9380d-2058">Eine Beschreibung der unterstützten Unicode-Normalisierungsformen, finden Sie unter <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2058">For a description of supported Unicode normalization forms, see <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2059">Das folgende Beispiel veranschaulicht die <xref:System.String.IsNormalized%2A> und <xref:System.String.Normalize%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2059">The following example demonstrates the <xref:System.String.IsNormalized%2A> and <xref:System.String.Normalize%2A> methods.</span></span>  
  
 [!code-cpp[string.normalize#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.normalize/CPP/norm.cpp#1)]
 [!code-csharp[string.normalize#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.normalize/CS/norm.cs#1)]
 [!code-vb[string.normalize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.normalize/VB/norm.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2060">Die aktuelle Instanz enthält ungültige Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2060">The current instance contains invalid Unicode characters.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2061">
            <para>Die <see cref="Overload:System.String.IsNormalized" /> Methodenrückgabe <see langword="false" /> , sobald es feststellt, dass das erste Zeichen der nicht normalisierte in einer Zeichenfolge. Aus diesem Grund, wenn eine Zeichenfolge nicht normalisierte Zeichen gefolgt von ungültigen Unicode-Zeichen, enthält die <see cref="Overload:System.String.Normalize" /> Methode löst eine <see cref="T:System.ArgumentException" /> zwar <see cref="Overload:System.String.IsNormalized" /> gibt <see langword="false" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2061">
              <para>The <see cref="Overload:System.String.IsNormalized" /> method returns <see langword="false" /> as soon as it encounters the first non-normalized character in a string. Therefore, if a string contains non-normalized characters followed by invalid Unicode characters, the <see cref="Overload:System.String.Normalize" /> method will throw an <see cref="T:System.ArgumentException" /> although <see cref="Overload:System.String.IsNormalized" /> returns <see langword="false" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.Normalize" />
      </Docs>
    </Member>
    <Member MemberName="IsNullOrEmpty">
      <MemberSignature Language="C#" Value="public static bool IsNullOrEmpty (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNullOrEmpty(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IsNullOrEmpty(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNullOrEmpty (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNullOrEmpty(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsNullOrEmpty : string -&gt; bool" Usage="System.string.IsNullOrEmpty value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2062">Die zu testende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2062">The string to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2063">Gibt an, ob die angegebene Zeichenfolge <see langword="null" /> oder eine <see cref="F:System.String.Empty" />-Zeichenfolge ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2063">Indicates whether the specified string is <see langword="null" /> or an <see cref="F:System.String.Empty" /> string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2064">
            <see langword="true" />, wenn der <paramref name="value" />-Parameter <see langword="null" /> oder eine leere Zeichenfolge ("") ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2064">
              <see langword="true" /> if the <paramref name="value" /> parameter is <see langword="null" /> or an empty string (""); otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2065"><xref:System.String.IsNullOrEmpty%2A> ist eine bequeme Methode, die Ihnen ermöglicht, gleichzeitig zu testen, ob eine <xref:System.String> ist `null` oder der Wert ist <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2065"><xref:System.String.IsNullOrEmpty%2A> is a convenience method that enables you to simultaneously test whether a <xref:System.String> is `null` or its value is <xref:System.String.Empty>.</span></span> <span data-ttu-id="9380d-2066">Dies entspricht dem folgenden Code:</span><span class="sxs-lookup"><span data-stu-id="9380d-2066">It is equivalent to the following code:</span></span>  
  
 [!code-cpp[System.String.IsNullOrEmpty#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.isnullorempty/cpp/isnullorempty1.cpp#1)]
 [!code-csharp[System.String.IsNullOrEmpty#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.isnullorempty/cs/isnullorempty1.cs#1)]
 [!code-vb[System.String.IsNullOrEmpty#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.isnullorempty/vb/isnullorempty1.vb#1)]  
  
 <span data-ttu-id="9380d-2067">Können Sie die <xref:System.String.IsNullOrWhiteSpace%2A> Methode zum Testen, ob eine Zeichenfolge `null`, sein Wert ist <xref:System.String.Empty?displayProperty=nameWithType>, oder es besteht nur aus Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2067">You can use the <xref:System.String.IsNullOrWhiteSpace%2A> method to test whether a string is `null`, its value is <xref:System.String.Empty?displayProperty=nameWithType>,  or it consists only of white-space characters.</span></span>  
  
## <a name="what-is-a-null-string"></a><span data-ttu-id="9380d-2068">Was ist eine null-Zeichenfolge?</span><span class="sxs-lookup"><span data-stu-id="9380d-2068">What is a null string?</span></span>  
 <span data-ttu-id="9380d-2069">Eine Zeichenfolge ist `null` , wenn sie keinen Wert (in C++ und Visual Basic) zugewiesen wurde, oder wenn der Wert explizit zugewiesen wurde `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2069">A string is `null` if it has not been assigned a value (in C++ and Visual Basic) or if has explicitly been assigned a value of `null`.</span></span> <span data-ttu-id="9380d-2070">Obwohl die [kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) Feature kann eine null-Zeichenfolge, ordnungsgemäß behandelt werden wie im folgenden Beispiel gezeigt, der versucht, rufen Sie eine Falls ihre Member löst eine <xref:System.NullReferenceException>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2070">Although the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature can gracefully handle a null string, as the following example shows, attempting to call one if its members throws a <xref:System.NullReferenceException>.</span></span>  
  
 [!code-cpp[System.String.IsNullOrEmpty#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.isnullorempty/cpp/NullString1.cpp#2)]
 [!code-csharp[System.String.IsNullOrEmpty#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.isnullorempty/cs/NullString1.cs#2)]
 [!code-vb[System.String.IsNullOrEmpty#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.isnullorempty/vb/NullString1.vb#2)]  
  
## <a name="what-is-an-empty-string"></a><span data-ttu-id="9380d-2071">Was ist eine leere Zeichenfolge?</span><span class="sxs-lookup"><span data-stu-id="9380d-2071">What is an empty string?</span></span>  
 <span data-ttu-id="9380d-2072">Eine Zeichenfolge ist leer, wenn sie eine leere Zeichenfolge explizit zugewiesen ist ("") oder <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2072">A string is empty if it  is explicitly assigned an empty string ("") or <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-2073">Eine leere Zeichenfolge ist eine <xref:System.String.Length%2A> 0.</span><span class="sxs-lookup"><span data-stu-id="9380d-2073">An empty string has a <xref:System.String.Length%2A> of 0.</span></span>  <span data-ttu-id="9380d-2074">Das folgende Beispiel erstellt eine leere Zeichenfolge und zeigt den Wert und die Länge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2074">The following example creates an empty string and displays its value and its length.</span></span>  
  
 [!code-cpp[System.String.IsNullOrEmpty#3](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.isnullorempty/cpp/NullString1.cpp#3)]
 [!code-csharp[System.String.IsNullOrEmpty#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.isnullorempty/cs/NullString1.cs#3)]
 [!code-vb[System.String.IsNullOrEmpty#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.isnullorempty/vb/NullString1.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2075">Im folgenden Beispiel werden drei Zeichenfolgen und bestimmt, ob jede Zeichenfolge ist, eine leere Zeichenfolge ist oder ist `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2075">The following example examines three strings and determines whether each string has a value, is an empty string, or is `null`.</span></span>  
  
 [!code-cpp[String.IsNullOrEmpty#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.isNullOrEmpty/CPP/inoe.cpp#1)]
 [!code-csharp[String.IsNullOrEmpty#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.isNullOrEmpty/CS/inoe.cs#1)]
 [!code-vb[String.IsNullOrEmpty#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.isNullOrEmpty/VB/inoe.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.IsNullOrWhiteSpace(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsNullOrWhiteSpace">
      <MemberSignature Language="C#" Value="public static bool IsNullOrWhiteSpace (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsNullOrWhiteSpace(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.IsNullOrWhiteSpace(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsNullOrWhiteSpace (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsNullOrWhiteSpace(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member IsNullOrWhiteSpace : string -&gt; bool" Usage="System.string.IsNullOrWhiteSpace value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2076">Die zu testende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2076">The string to test.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2077">Gibt an, ob eine angegebene Zeichenfolge <see langword="null" /> ist, leer ist oder nur aus Leerzeichen besteht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2077">Indicates whether a specified string is <see langword="null" />, empty, or consists only of white-space characters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2078">
            <see langword="true" />, wenn der <paramref name="value" />-Parameter <see langword="null" /> oder <see cref="F:System.String.Empty" /> ist oder wenn <paramref name="value" /> ausschließlich aus Leerzeichen besteht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2078">
              <see langword="true" /> if the <paramref name="value" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, or if <paramref name="value" /> consists exclusively of white-space characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2079"><xref:System.String.IsNullOrWhiteSpace%2A> ist eine bequeme Möglichkeit, der ähnlich wie in den folgenden Code, mit dem Unterschied, dass es sich um eine bessere Leistung bietet:</span><span class="sxs-lookup"><span data-stu-id="9380d-2079"><xref:System.String.IsNullOrWhiteSpace%2A> is a convenience method that is similar to the following  code, except that it offers superior performance:</span></span>  
  
 [!code-csharp[System.String.IsNullOrWhitespace#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.isnullorwhitespace/cs/isnullorwhitespace.cs#2)]
 [!code-vb[System.String.IsNullOrWhitespace#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.isnullorwhitespace/vb/isnullorwhitespace.vb#2)]  
  
 <span data-ttu-id="9380d-2080">Leerzeichen werden durch den Unicode-Standard definiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-2080">White-space characters are defined by the Unicode standard.</span></span> <span data-ttu-id="9380d-2081">Die <xref:System.String.IsNullOrWhiteSpace%2A> -Methode interpretiert alle Zeichen, die den Wert zurückgibt `true` wann erfolgt eine Übergabe an die <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> -Methode, wie ein Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2081">The <xref:System.String.IsNullOrWhiteSpace%2A> method interprets any character that returns a value of `true` when it is passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method as a white-space character.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2082">Das folgende Beispiel erstellt ein Zeichenfolgenarray, und übergibt dann jedes Element des Arrays, das die <xref:System.String.IsNullOrWhiteSpace%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2082">The following example creates a string array, and then passes each element of the array to the <xref:System.String.IsNullOrWhiteSpace%2A> method.</span></span>  
  
 [!code-csharp[System.String.IsNullOrWhiteSpace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.isnullorwhitespace/cs/isnullorwhitespace1.cs#1)]
 [!code-vb[System.String.IsNullOrWhiteSpace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.isnullorwhitespace/vb/isnullorwhitespace1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.IsNullOrEmpty(System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Join">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2083">Verkettet die Elemente eines angegebenen Arrays oder die Member einer Auflistung und verwendet das angegebene Trennzeichen zwischen jedem Element bzw. Member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2083">Concatenates the elements of a specified array or the members of a collection, using the specified separator between each element or member.</span>
          </span>
        </summary>
        <altmember cref="M:System.String.Split(System.Char[])" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (char separator, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(char separator, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.Char,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As Char, ParamArray values As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(char separator, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Join : char * obj[] -&gt; string" Usage="System.string.Join (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" />
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (char separator, params string[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(char separator, string[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.Char,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As Char, ParamArray value As String()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(char separator, ... cli::array &lt;System::String ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member Join : char * string[] -&gt; string" Usage="System.string.Join (separator, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" />
        <Parameter Name="value" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string separator, System.Collections.Generic.IEnumerable&lt;string&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string separator, class System.Collections.Generic.IEnumerable`1&lt;string&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.String,System.Collections.Generic.IEnumerable{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As String, values As IEnumerable(Of String)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ separator, System::Collections::Generic::IEnumerable&lt;System::String ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Join : string * seq&lt;string&gt; -&gt; string" Usage="System.string.Join (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="separator">
          <span data-ttu-id="9380d-2084">Die als Trennzeichen zu verwendende Zeichenfolge. <c>separator</c> ist nur in der zurückgegebenen Zeichenfolge enthalten, wenn <c>values</c> mehr als ein Element enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2084">The string to use as a separator.<c>separator</c> is included in the returned string only if <c>values</c> has more than one element.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="9380d-2085">Eine Auflistung, die die zu verkettenden Zeichenfolgen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2085">A collection that contains the strings to concatenate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2086">Verkettet die Member einer erstellten <see cref="T:System.Collections.Generic.IEnumerable`1" />-Auflistung vom Typ <see cref="T:System.String" /> und verwendet das angegebene Trennzeichen zwischen den einzelnen Membern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2086">Concatenates the members of a constructed <see cref="T:System.Collections.Generic.IEnumerable`1" /> collection of type <see cref="T:System.String" />, using the specified separator between each member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2087">Eine Zeichenfolge, die aus den Membern von <paramref name="values" /> besteht, getrennt durch die <paramref name="separator" />-Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2087">A string that consists of the members of <paramref name="values" /> delimited by the <paramref name="separator" /> string.</span>
          </span>
          <span data-ttu-id="9380d-2088">Wenn <paramref name="values" /> keine Mitglieder hat, gibt die Methode <see cref="F:System.String.Empty" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2088">If <paramref name="values" /> has no members, the method returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2089">Wenn `separator` ist `null`, eine leere Zeichenfolge (<xref:System.String.Empty?displayProperty=nameWithType>) wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-2089">If `separator` is `null`, an empty string (<xref:System.String.Empty?displayProperty=nameWithType>) is used instead.</span></span> <span data-ttu-id="9380d-2090">Wenn alle Member des `values` ist `null`, eine leere Zeichenfolge wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-2090">If any member of `values` is `null`, an empty string is used instead.</span></span>  
  
 <span data-ttu-id="9380d-2091"><xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> ist eine bequeme Methode, mit dem Sie verketten, jedes Element in einer `IEnumerable(Of String)` Auflistung ohne Elemente zunächst in ein Zeichenfolgenarray konvertiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-2091"><xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> is a convenience method that lets you concatenate each element in an `IEnumerable(Of String)` collection without first converting the elements to a string array.</span></span> <span data-ttu-id="9380d-2092">Es ist besonders nützlich bei Abfrageausdrücken Language-Integrated Query (LINQ).</span><span class="sxs-lookup"><span data-stu-id="9380d-2092">It is particularly useful with Language-Integrated Query (LINQ) query expressions.</span></span> <span data-ttu-id="9380d-2093">Das folgende Beispiel übergibt eine `List(Of String)` Objekt, das die Groß- oder Kleinbuchstaben Buchstaben des Alphabets, einen Lambda-Ausdruck, die Buchstaben, die gleich oder größer als einen bestimmten Buchstaben enthält auswählt (die im Beispiel "M" ist).</span><span class="sxs-lookup"><span data-stu-id="9380d-2093">The following example passes a `List(Of String)` object that contains either the uppercase or lowercase letters of the alphabet to a lambda expression that selects letters that are equal to or greater than a particular letter (which, in the example, is "M").</span></span> <span data-ttu-id="9380d-2094">Die `IEnumerable(Of String)` von zurückgegebene Auflistung der <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> Methode übergeben wird, um die <xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> Methode, um das Ergebnis als eine einzelne Zeichenfolge anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2094">The `IEnumerable(Of String)` collection returned by the <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> method is passed to the <xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method to display the result as a single string.</span></span>  
  
 [!code-csharp[System.String.Join#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/join4.cs#4)]
 [!code-vb[System.String.Join#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/join4.vb#4)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2095">Im folgenden Beispiel wird den Algorithmus Sieb des Eratosthenes zum Berechnen von Primzahlen, die kleiner als oder gleich 100 sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2095">The following example uses the Sieve of Eratosthenes algorithm to calculate the prime numbers that are less than or equal to 100.</span></span> <span data-ttu-id="9380d-2096">Weist das Ergebnis an eine <xref:System.Collections.Generic.List%601> Objekt vom Typ <xref:System.String>, die es dann an übergibt die <xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2096">It assigns the result to a <xref:System.Collections.Generic.List%601> object of type <xref:System.String>, which it then passes to the <xref:System.String.Join%28System.String%2CSystem.Collections.Generic.IEnumerable%7BSystem.String%7D%29> method.</span></span>  
  
 [!code-csharp[System.String.Join#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/join3.cs#3)]
 [!code-vb[System.String.Join#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/join3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2097">
            <paramref name="values" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2097">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.Split(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string separator, params object[] values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string separator, object[] values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As String, ParamArray values As Object()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ separator, ... cli::array &lt;System::Object ^&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Join : string * obj[] -&gt; string" Usage="System.string.Join (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="values" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">
          <span data-ttu-id="9380d-2098">Die Zeichenfolge, die als Trennzeichen verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2098">The string to use as a separator.</span>
          </span>
          <span data-ttu-id="9380d-2099">
            <c>separator</c> ist in der zurückgegebenen Zeichenfolge nur enthalten, wenn <c>values</c> mehr als ein Element enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2099">
              <c>separator</c> is included in the returned string only if <c>values</c> has more than one element.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="9380d-2100">Ein Array, das die zu verkettenden Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2100">An array that contains the elements to concatenate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2101">Verkettet die Elemente eines Objektarrays und verwendet das angegebene Trennzeichen zwischen den einzelnen Elementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2101">Concatenates the elements of an object array, using the specified separator between each element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2102">Eine Zeichenfolge, die aus den Membern von <paramref name="values" /> besteht, getrennt durch die <paramref name="separator" />-Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2102">A string that consists of the elements of <paramref name="values" /> delimited by the <paramref name="separator" /> string.</span>
          </span>
          <span data-ttu-id="9380d-2103">Wenn <paramref name="values" /> eine leeres Array ist, gibt die Methode <see cref="F:System.String.Empty" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2103">If <paramref name="values" /> is an empty array, the method returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2104">Wenn `separator` ist `null` oder, wenn ein beliebiges Element von `values` anders als das erste Element ist `null`, eine leere Zeichenfolge (<xref:System.String.Empty?displayProperty=nameWithType>) wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-2104">If `separator` is `null` or if any element of `values` other than the first element is `null`, an empty string (<xref:System.String.Empty?displayProperty=nameWithType>) is used instead.</span></span> <span data-ttu-id="9380d-2105">Siehe Hinweise für Aufrufer-Abschnitt, wenn das erste Element der `values` ist `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2105">See the Notes for Callers section if the first element of `values` is `null`.</span></span>  
  
 <span data-ttu-id="9380d-2106"><xref:System.String.Join%28System.String%2CSystem.Object%5B%5D%29> ist eine Hilfsmethode, mit dem Sie jedes Element in einem Objektarray zu verketten, ohne die Elemente explizit in Zeichenfolgen konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="9380d-2106"><xref:System.String.Join%28System.String%2CSystem.Object%5B%5D%29> is a convenience method that lets you concatenate each element in an object array without explicitly converting its elements to strings.</span></span> <span data-ttu-id="9380d-2107">Die Zeichenfolgendarstellung der einzelnen Objekte im Array wird durch Aufrufen des Objekts abgeleitet `ToString` Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2107">The string representation of each object in the array is derived by calling that object's `ToString` method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2108">Im folgenden Beispiel wird den Algorithmus Sieb des Eratosthenes zum Berechnen von Primzahlen, die kleiner als oder gleich 100 sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2108">The following example uses the Sieve of Eratosthenes algorithm to calculate the prime numbers that are less than or equal to 100.</span></span> <span data-ttu-id="9380d-2109">Es weist ein Ganzzahlarray, auf die diese dann an übergibt das Ergebnis der <xref:System.String.Join%28System.String%2CSystem.Object%5B%5D%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2109">It assigns the result to a integer array, which it then passes to the <xref:System.String.Join%28System.String%2CSystem.Object%5B%5D%29> method.</span></span>  
  
 [!code-csharp[System.String.Join#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/join1.cs#1)]
 [!code-vb[System.String.Join#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/join1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2110">
            <paramref name="values" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2110">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2111">
            <para>Wenn das erste Element der <paramref name="values" /> ist <see langword="null" />, <see cref="M:System.String.Join(System.String,System.Object[])" /> Methode ist nicht die Elemente im verketten <paramref name="values" /> , sondern stattdessen <see cref="F:System.String.Empty" />. Eine Reihe von problemumgehungen zur Behebung dieses Problems stehen zur Verfügung. Weisen Sie den Wert der einfachste Weg ist <see cref="F:System.String.Empty" /> auf das erste Element des Arrays, wie im folgenden Beispiel gezeigt.  [! code-csharp[System.String.Join#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/joinfix1.cs#6)] [! code-vb[System.String.Join#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/joinfix1.vb#6)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2111">
              <para>If the first element of <paramref name="values" /> is <see langword="null" />, the <see cref="M:System.String.Join(System.String,System.Object[])" /> method does not concatenate the elements in <paramref name="values" /> but instead returns <see cref="F:System.String.Empty" />. A number of workarounds for this issue are available. The easiest is to assign a value of <see cref="F:System.String.Empty" /> to the first element of the array, as the following example shows.  [!code-csharp[System.String.Join#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/joinfix1.cs#6)] [!code-vb[System.String.Join#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/joinfix1.vb#6)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.Split(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string separator, params string[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string separator, string[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As String, ParamArray value As String()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ separator, ... cli::array &lt;System::String ^&gt; ^ value);" />
      <MemberSignature Language="F#" Value="static member Join : string * string[] -&gt; string" Usage="System.string.Join (separator, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="value" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">
          <span data-ttu-id="9380d-2112">Die Zeichenfolge, die als Trennzeichen verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2112">The string to use as a separator.</span>
          </span>
          <span data-ttu-id="9380d-2113">
            <c>separator</c> ist in der zurückgegebenen Zeichenfolge nur enthalten, wenn <c>value</c> mehr als ein Element enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2113">
              <c>separator</c> is included in the returned string only if <c>value</c> has more than one element.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9380d-2114">Ein Array, das die zu verkettenden Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2114">An array that contains the elements to concatenate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2115">Verkettet alle Elemente eines Zeichenfolgenarrays und verwendet das angegebene Trennzeichen zwischen den einzelnen Elementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2115">Concatenates all the elements of a string array, using the specified separator between each element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2116">Eine Zeichenfolge, die aus den Membern von <paramref name="value" /> besteht, getrennt durch die <paramref name="separator" />-Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2116">A string that consists of the elements in <paramref name="value" /> delimited by the <paramref name="separator" /> string.</span>
          </span>
          <span data-ttu-id="9380d-2117">Wenn <paramref name="value" /> eine leeres Array ist, gibt die Methode <see cref="F:System.String.Empty" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2117">If <paramref name="value" /> is an empty array, the method returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2118">Z. B. wenn `separator` ist "," und die Elemente der `value` sind "Apple", "Orange", "Grape" und "Pear", `Join(separator, value)` gibt "" Apple "," Orange "," Grape "," Pear ".</span><span class="sxs-lookup"><span data-stu-id="9380d-2118">For example, if `separator` is ", " and the elements of `value` are "apple", "orange", "grape", and "pear", `Join(separator, value)` returns "apple, orange, grape, pear".</span></span>  
  
 <span data-ttu-id="9380d-2119">Wenn `separator` ist `null`, eine leere Zeichenfolge (<xref:System.String.Empty?displayProperty=nameWithType>) wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-2119">If `separator` is `null`, an empty string (<xref:System.String.Empty?displayProperty=nameWithType>) is used instead.</span></span> <span data-ttu-id="9380d-2120">Wenn ein Element in `value` ist `null`, eine leere Zeichenfolge wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-2120">If any element in `value` is `null`, an empty string is used instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2121">Das folgende Beispiel veranschaulicht die <xref:System.String.Join%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2121">The following example demonstrates the <xref:System.String.Join%2A> method.</span></span>  
  
 [!code-cpp[stringjoin#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringjoin/CPP/stringjoin.cpp#1)]
 [!code-csharp[stringjoin#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringjoin/CS/stringjoin.cs#1)]
 [!code-vb[stringjoin#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringjoin/VB/stringjoin.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2122">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2122">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.Concat(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (char separator, string[] value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(char separator, string[] value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.Char,System.String[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As Char, value As String(), startIndex As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(char separator, cli::array &lt;System::String ^&gt; ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member Join : char * string[] * int * int -&gt; string" Usage="System.string.Join (separator, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" />
        <Parameter Name="value" Type="System.String[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="value">To be added.</param>
        <param name="startIndex">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join">
      <MemberSignature Language="C#" Value="public static string Join (string separator, string[] value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join(string separator, string[] value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join(System.String,System.String[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join (separator As String, value As String(), startIndex As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Join(System::String ^ separator, cli::array &lt;System::String ^&gt; ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member Join : string * string[] * int * int -&gt; string" Usage="System.string.Join (separator, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="value" Type="System.String[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="separator">
          <span data-ttu-id="9380d-2123">Die Zeichenfolge, die als Trennzeichen verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2123">The string to use as a separator.</span>
          </span>
          <span data-ttu-id="9380d-2124">
            <c>separator</c> ist in der zurückgegebenen Zeichenfolge nur enthalten, wenn <c>value</c> mehr als ein Element enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2124">
              <c>separator</c> is included in the returned string only if <c>value</c> has more than one element.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="9380d-2125">Ein Array, das die zu verkettenden Elemente enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2125">An array that contains the elements to concatenate.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-2126">Das erste zu verwendende Element aus <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2126">The first element in <c>value</c> to use.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-2127">Die Anzahl der zu verwendenden Elemente aus <c>value</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2127">The number of elements of <c>value</c> to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2128">Verkettet die angegebenen Elemente eines Zeichenfolgenarrays und verwendet das angegebene Trennzeichen zwischen den einzelnen Elementen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2128">Concatenates the specified elements of a string array, using the specified separator between each element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2129">Eine Zeichenfolge, die aus den Zeichenfolgen in <paramref name="value" /> besteht, getrennt durch die <paramref name="separator" />-Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2129">A string that consists of the strings in <paramref name="value" /> delimited by the <paramref name="separator" /> string.</span>
          </span>
          <span data-ttu-id="9380d-2130">Oder:  <see cref="F:System.String.Empty" />, wenn <paramref name="count" /> 0 (null) ist, <paramref name="value" /> keine Elemente enthält oder <paramref name="separator" /> und alle Elemente von <paramref name="value" /><see cref="F:System.String.Empty" /> sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2130">-or-  <see cref="F:System.String.Empty" /> if <paramref name="count" /> is zero, <paramref name="value" /> has no elements, or <paramref name="separator" /> and all the elements of <paramref name="value" /> are <see cref="F:System.String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2131">Z. B. wenn `separator` ist "," und die Elemente der `value` sind "Apple", "Orange", "Grape" und "Pear", `Join(separator, value, 1, 2)` gibt "Orange, Grape".</span><span class="sxs-lookup"><span data-stu-id="9380d-2131">For example, if `separator` is ", " and the elements of `value` are "apple", "orange", "grape", and "pear", `Join(separator, value, 1, 2)` returns "orange, grape".</span></span>  
  
 <span data-ttu-id="9380d-2132">Wenn `separator` ist `null`, eine leere Zeichenfolge (<xref:System.String.Empty?displayProperty=nameWithType>) wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-2132">If `separator` is `null`, an empty string (<xref:System.String.Empty?displayProperty=nameWithType>) is used instead.</span></span> <span data-ttu-id="9380d-2133">Wenn ein Element in `value` ist `null`, eine leere Zeichenfolge wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-2133">If any element in `value` is `null`, an empty string is used instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2134">Im folgende Beispiel werden zwei Elemente aus einem Array von Namen von Früchten verkettet.</span><span class="sxs-lookup"><span data-stu-id="9380d-2134">The following example concatenates two elements from an array of names of fruit.</span></span>  
  
 [!code-cpp[string.join2#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.join2/CPP/join2.cpp#1)]
 [!code-csharp[string.join2#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.join2/CS/join2.cs#1)]
 [!code-vb[string.join2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.join2/VB/join2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2135">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2135">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2136">
            <paramref name="startIndex" /> oder <paramref name="count" /> ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2136">
              <paramref name="startIndex" /> or <paramref name="count" /> is less than 0.</span>
          </span>
          <span data-ttu-id="9380d-2137">Oder:  <paramref name="startIndex" />+<paramref name="count" /> ist größer als die Anzahl der Elemente in <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2137">-or-  <paramref name="startIndex" /> plus <paramref name="count" /> is greater than the number of elements in <paramref name="value" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="9380d-2138">Nicht genügend Arbeitsspeicher.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2138">Out of memory.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.Split(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Join&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static string Join&lt;T&gt; (char separator, System.Collections.Generic.IEnumerable&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join&lt;T&gt;(char separator, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join``1(System.Char,System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join(Of T) (separator As Char, values As IEnumerable(Of T)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::String ^ Join(char separator, System::Collections::Generic::IEnumerable&lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Join : char * seq&lt;'T&gt; -&gt; string" Usage="System.string.Join (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="separator">To be added.</param>
        <param name="values">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Join&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static string Join&lt;T&gt; (string separator, System.Collections.Generic.IEnumerable&lt;T&gt; values);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Join&lt;T&gt;(string separator, class System.Collections.Generic.IEnumerable`1&lt;!!T&gt; values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Join``1(System.String,System.Collections.Generic.IEnumerable{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Join(Of T) (separator As String, values As IEnumerable(Of T)) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::String ^ Join(System::String ^ separator, System::Collections::Generic::IEnumerable&lt;T&gt; ^ values);" />
      <MemberSignature Language="F#" Value="static member Join : string * seq&lt;'T&gt; -&gt; string" Usage="System.string.Join (separator, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="values" Type="System.Collections.Generic.IEnumerable&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="9380d-2139">Der Typ der Elemente der <c>Werte</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2139">The type of the members of <c>values</c>.</span>
          </span>
        </typeparam>
        <param name="separator">
          <span data-ttu-id="9380d-2140">Die als Trennzeichen zu verwendende Zeichenfolge. <c>separator</c> ist nur in der zurückgegebenen Zeichenfolge enthalten, wenn <c>values</c> mehr als ein Element enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2140">The string to use as a separator.<c>separator</c> is included in the returned string only if <c>values</c> has more than one element.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="9380d-2141">Eine Auflistung, die die zu verkettenden Objekte enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2141">A collection that contains the objects to concatenate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2142">Verkettet die Member einer Auflistung und verwendet das angegebene Trennzeichen zwischen den einzelnen Membern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2142">Concatenates the members of a collection, using the specified separator between each member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2143">Eine Zeichenfolge, die aus den Membern von <paramref name="values" /> besteht, getrennt durch die <paramref name="separator" />-Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2143">A string that consists of the members of <paramref name="values" /> delimited by the <paramref name="separator" /> string.</span>
          </span>
          <span data-ttu-id="9380d-2144">Wenn <paramref name="values" /> keine Mitglieder hat, gibt die Methode <see cref="F:System.String.Empty" /> zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2144">If <paramref name="values" /> has no members, the method returns <see cref="F:System.String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2145">Wenn `separator` ist `null`, eine leere Zeichenfolge (<xref:System.String.Empty?displayProperty=nameWithType>) wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-2145">If `separator` is `null`, an empty string (<xref:System.String.Empty?displayProperty=nameWithType>) is used instead.</span></span> <span data-ttu-id="9380d-2146">Wenn alle Member des `values` ist `null`, eine leere Zeichenfolge wird stattdessen verwendet.</span><span class="sxs-lookup"><span data-stu-id="9380d-2146">If any member of `values` is `null`, an empty string is used instead.</span></span>  
  
 <span data-ttu-id="9380d-2147"><xref:System.String.Join%60%601%28System.String%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> ist eine bequeme Methode, mit dem Sie verketten, jedes Mitglied einer <xref:System.Collections.Generic.IEnumerable%601> Auflistung ohne sie in Zeichenfolgen konvertiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-2147"><xref:System.String.Join%60%601%28System.String%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> is a convenience method that lets you concatenate each member of an <xref:System.Collections.Generic.IEnumerable%601> collection without first converting them to strings.</span></span> <span data-ttu-id="9380d-2148">Die Zeichenfolgendarstellung der einzelnen Objekte in der <xref:System.Collections.Generic.IEnumerable%601> Auflistung wird durch Aufrufen des Objekts abgeleitet `ToString` Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2148">The string representation of each object in the <xref:System.Collections.Generic.IEnumerable%601> collection is derived by calling that object's `ToString` method.</span></span>  
  
 <span data-ttu-id="9380d-2149">Diese Methode ist besonders nützlich bei Abfrageausdrücken Language-Integrated Query (LINQ).</span><span class="sxs-lookup"><span data-stu-id="9380d-2149">This method is particular useful with Language-Integrated Query (LINQ) query expressions.</span></span> <span data-ttu-id="9380d-2150">Der folgende Code definiert z. B. eine sehr einfache `Animal` Klasse enthält den Namen des Tieres und die Reihenfolge an, zu dem er gehört.</span><span class="sxs-lookup"><span data-stu-id="9380d-2150">For example, the following code defines a very simple `Animal` class that contains the name of an animal and the order to which it belongs.</span></span> <span data-ttu-id="9380d-2151">Es definiert dann eine <xref:System.Collections.Generic.List%601> -Objekt, das eine Reihe von enthält `Animal` Objekte.</span><span class="sxs-lookup"><span data-stu-id="9380d-2151">It then defines a <xref:System.Collections.Generic.List%601> object that contains a number of `Animal` objects.</span></span> <span data-ttu-id="9380d-2152">Die <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> Erweiterungsmethode aufgerufen, um das Extrahieren der `Animal` Objekte, deren `Order` -Eigenschaft gleich "Nagetier".</span><span class="sxs-lookup"><span data-stu-id="9380d-2152">The <xref:System.Linq.Enumerable.Where%2A?displayProperty=nameWithType> extension method is called to extract the `Animal` objects whose `Order` property equals "Rodent".</span></span> <span data-ttu-id="9380d-2153">Das Ergebnis wird zum Übergeben der <xref:System.String.Join%60%601%28System.String%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2153">The result is passed to the <xref:System.String.Join%60%601%28System.String%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method.</span></span>  
  
 [!code-csharp[System.String.Join#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/join5.cs#5)]
 [!code-vb[System.String.Join#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/join5.vb#5)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2154">Im folgenden Beispiel wird den Algorithmus Sieb des Eratosthenes zum Berechnen von Primzahlen, die kleiner als oder gleich 100 sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2154">The following example uses the Sieve of Eratosthenes algorithm to calculate the prime numbers that are less than or equal to 100.</span></span> <span data-ttu-id="9380d-2155">Weist das Ergebnis einer <xref:System.Collections.Generic.List%601> Objekt vom typinteger, die es dann an übergibt die <xref:System.String.Join%60%601%28System.String%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2155">It assigns the result to a <xref:System.Collections.Generic.List%601> object of type integer, which it then passes to the <xref:System.String.Join%60%601%28System.String%2CSystem.Collections.Generic.IEnumerable%7B%60%600%7D%29> method.</span></span>  
  
 [!code-csharp[System.String.Join#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.join/cs/join2.cs#2)]
 [!code-vb[System.String.Join#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.join/vb/join2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2156">
            <paramref name="values" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2156">
              <paramref name="values" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.Split(System.Char[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2157">Gibt die NULL-basierte Indexposition des letzten Vorkommens eines angegebenen Unicode-Zeichens oder einer angegebenen Unicode-Zeichenfolge in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2157">Reports the zero-based index position of the last occurrence of a specified Unicode character or string within this instance.</span>
          </span>
          <span data-ttu-id="9380d-2158">Die Methode gibt -1 zurück, wenn das Zeichen oder die Zeichenfolge in dieser Instanz nicht gefunden wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2158">The method returns -1 if the character or string is not found in this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As Char) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(char value);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : char -&gt; int" Usage="string.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2159">Das zu suchende Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2159">The Unicode character to seek.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2160">Gibt die NULL-basierte Indexposition des letzten Vorkommens eines angegebenen Unicode-Zeichens in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2160">Reports the zero-based index position of the last occurrence of a specified Unicode character within this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2161">Die nullbasierte Indexposition von <paramref name="value" />, wenn dieses Zeichen gefunden wurde, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2161">The zero-based index position of <paramref name="value" /> if that character is found, or -1 if it is not.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2162">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-2162">Index numbering starts from zero.</span></span> <span data-ttu-id="9380d-2163">D. h. das erste Zeichen in der Zeichenfolge ist, am Index 0 (null) und das letzte liegt bei <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-2163">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="9380d-2164">Diese Methode beginnt die Suche an der Position des letzten Zeichens dieser Instanz und wird rückwärts bis entweder fortgesetzt, `value` gefunden wird oder die Position des erste Zeichens überprüft wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-2164">This method begins searching at the last character position of this instance and proceeds backward toward the beginning until either `value` is found or the first character position has been examined.</span></span> <span data-ttu-id="9380d-2165">Bei der Suche wird die Groß- und Kleinschreibung berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2165">The search is case-sensitive.</span></span>  
  
 <span data-ttu-id="9380d-2166">Diese Methode führt eine ordinale (kulturunabhängige) Suche, in dem ein Zeichen als gleich betrachtet, ein anderes Zeichen nur dann, wenn die Unicode-Skalarwerten identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2166">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="9380d-2167">Um eine kulturabhängige Suche durchzuführen, verwenden die <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> -Methode, in dem ein Unicode-Skalarwert, ein zusammengesetztes Zeichen, z. B. die Ligatur "Æ" (U + 00 C 6) betrachtet werden kann entspricht jedem Vorkommen des Zeichens-Komponenten in der Korrigieren Sie die Sequenz, wie z. B. "AE" (U + 0041, U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-2167">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2168">Das folgende Beispiel definiert eine `ExtractFilename` Methode, verwendet der <xref:System.String.LastIndexOf%28System.Char%29> Methode, um das letzte Verzeichnistrennzeichen in einer Zeichenfolge gesucht und Dateinamen der Zeichenfolge zu extrahieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-2168">The following example defines an `ExtractFilename` method that uses the <xref:System.String.LastIndexOf%28System.Char%29> method to find the last directory separator character in a string and to extract the string's file name.</span></span> <span data-ttu-id="9380d-2169">Wenn die Datei vorhanden ist, gibt die Methode den Dateinamen ohne Pfad zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-2169">If the file exists, the method returns the file name without its path.</span></span>  
  
 [!code-csharp[System.String.LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/LastIndexOf_Example.cs#1)]
 [!code-vb[System.String.LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/LastIndexOf_Example.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string -&gt; int" Usage="string.LastIndexOf value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2170">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2170">The string to seek.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2171">Gibt die NULL-basierte Indexposition des letzten Vorkommens einer angegebenen Zeichenfolge in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2171">Reports the zero-based index position of the last occurrence of a specified string within this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2172">Die nullbasierte Indexposition von <paramref name="value" />, wenn diese Zeichenfolge gefunden wurde, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2172">The zero-based starting index position of <paramref name="value" /> if that string is found, or -1 if it is not.</span>
          </span>
          <span data-ttu-id="9380d-2173">Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, ist der Rückgabewert die letzte Indexposition in dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2173">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is the last index position in this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2174">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-2174">Index numbering starts from zero.</span></span> <span data-ttu-id="9380d-2175">D. h. das erste Zeichen in der Zeichenfolge ist, am Index 0 (null) und das letzte liegt bei <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-2175">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="9380d-2176">Die Suche beginnt an der Position des letzten Zeichens dieser Instanz und wird rückwärts bis entweder fortgesetzt, `value` gefunden wird oder die Position des erste Zeichens überprüft wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-2176">The search begins at the last character position of this instance and proceeds backward toward the beginning until either `value` is found or the first character position has been examined.</span></span>  
  
 <span data-ttu-id="9380d-2177">Diese Methode führt eine Wortsuche (Groß-/Kleinschreibung beachtet und kulturabhängige) mit der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-2177">This method performs a word (case-sensitive and culture-sensitive) search using the current culture.</span></span>  
  
 <span data-ttu-id="9380d-2178">Zeichensätze enthalten ignorierbare Zeichen, d. h. Zeichen, die bei der Durchführung eines linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2178">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="9380d-2179">Bei einer kulturabhängige Suche, bei der `value` ein ignorierbares Zeichen enthält, ist das Ergebnis das gleiche wie bei einer Suche ohne dieses Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2179">In a culture-sensitive search, if `value` contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="9380d-2180">Wenn `value` besteht nur aus ein oder mehrere Ignorierbare Zeichen, die <xref:System.String.LastIndexOf%28System.String%29> Methode gibt immer <xref:System.String.Length%2A?displayProperty=nameWithType> – 1, der die letzte Indexposition in der aktuellen Instanz darstellt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2180">If `value` consists only of one or more ignorable characters, the <xref:System.String.LastIndexOf%28System.String%29> method always returns <xref:System.String.Length%2A?displayProperty=nameWithType> – 1, which represents the last index position in the current instance.</span></span> <span data-ttu-id="9380d-2181">Im folgenden Beispiel die <xref:System.String.LastIndexOf%28System.String%29> Methode wird verwendet, um drei Teilzeichenfolgen (einen bedingten Bindestrich (U + 00AD), einen bedingten Bindestrich gefolgt von "n" und einen bedingten Bindestrich gefolgt von "m") in zwei Zeichenfolgen zu suchen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2181">In the following example, the <xref:System.String.LastIndexOf%28System.String%29> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings.</span></span> <span data-ttu-id="9380d-2182">Nur eine der Zeichenfolgen enthält einen bedingten Bindestrich.</span><span class="sxs-lookup"><span data-stu-id="9380d-2182">Only one of the strings contains a soft hyphen.</span></span> <span data-ttu-id="9380d-2183">Wenn Sie das Beispiel ausgeführt wird, auf die [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] oder höher in jedem Fall, da die bedingten Bindestrich ein ignorierbares Zeichen ist das Ergebnis ist identisch, als ob bedingten Bindestrichs nicht in einbezogen wurden, mussten `value`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2183">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in each case, because the soft hyphen is an ignorable character, the result is the same as if the soft hyphen had not been included in `value`.</span></span> <span data-ttu-id="9380d-2184">Bei der Suche nach nur einen bedingten Bindestrich erfolgt die Methodenrückgabe, 6 und 5.</span><span class="sxs-lookup"><span data-stu-id="9380d-2184">When searching for a soft hyphen only, the method returns 6 and 5.</span></span> <span data-ttu-id="9380d-2185">Diese Werte entsprechen dem Index des letzten Zeichens in den beiden Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2185">These values correspond to the index of the last character in the two strings.</span></span>  
  
 [!code-csharp[System.String.LastIndexOf#21](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof21.cs#21)]
 [!code-vb[System.String.LastIndexOf#21](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof21.vb#21)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2186">Im folgenden Beispiel wird die Start- und Endtags HTML-Zeichenfolge, wenn die Tags beginnen und am Ende der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2186">The following example removes opening and closing HTML tags from a string if the tags begin and end the string.</span></span> <span data-ttu-id="9380d-2187">Wenn eine Zeichenfolge mit einer schließenden beendet Klammer Zeichen (">"), im Beispiel wird die <xref:System.String.LastIndexOf%2A> Methode, um den Start des Endtags zu suchen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2187">If a string ends with a closing bracket character (">"), the example uses the <xref:System.String.LastIndexOf%2A> method to locate the start of the end tag.</span></span>  
  
 [!code-csharp[System.String.LastIndexOf#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof_example2.cs#2)]
 [!code-vb[System.String.LastIndexOf#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof_example2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2188">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2188">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2189">
            <para>Wie unter [bewährte Methoden für Strings](~/docs/standard/base-types/best-practices-strings.md) verwenden, es wird empfohlen, dass Sie vermeiden, Aufrufen von Methoden zum Zeichenfolgenvergleich, die Standardwerte ersetzen, und rufen stattdessen die Methoden, die Parameter erfordern explizit angegeben. Um den letzten Index einer Unterzeichenfolge einer Zeichenfolgeninstanz mit die Vergleichsregeln der aktuellen Kultur zu suchen, rufen die <see cref="M:System.String.LastIndexOf(System.String,System.StringComparison)" /> methodenüberladung mit einem Wert von <see cref="F:System.StringComparison.CurrentCulture" /> für seine <paramref name="comparisonType" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2189">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified. To find the last index of a substring within a string instance by using the comparison rules of the current culture, call the <see cref="M:System.String.LastIndexOf(System.String,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its <paramref name="comparisonType" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (char value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(char value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.Char,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As Char, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(char value, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : char * int -&gt; int" Usage="string.LastIndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2190">Das zu suchende Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2190">The Unicode character to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-2191">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2191">The starting position of the search.</span>
          </span>
          <span data-ttu-id="9380d-2192">Die Suche wird von <c>startIndex</c> bis zum Anfang dieser Instanz fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2192">The search proceeds from <c>startIndex</c> toward the beginning of this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2193">Gibt die NULL-basierte Indexposition des letzten Vorkommens eines angegebenen Unicode-Zeichens in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2193">Reports the zero-based index position of the last occurrence of a specified Unicode character within this instance.</span>
          </span>
          <span data-ttu-id="9380d-2194">Die Suche beginnt an einer angegebenen Zeichenposition und wird rückwärts bis zum Anfang der Zeichenfolge fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2194">The search starts at a specified character position and proceeds backward toward the beginning of the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2195">Die nullbasierte Indexposition von <paramref name="value" />, wenn dieses Zeichen gefunden wurde, oder -1, wenn es nicht gefunden wurde oder die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2195">The zero-based index position of <paramref name="value" /> if that character is found, or -1 if it is not found or if the current instance equals <see cref="F:System.String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2196">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-2196">Index numbering starts from zero.</span></span> <span data-ttu-id="9380d-2197">D. h. das erste Zeichen in der Zeichenfolge ist, am Index 0 (null) und das letzte liegt bei <xref:System.String.Length%2A> -1. diese Methode beginnt die Suche an der `startIndex` Zeichen Position dieser Instanz und wird rückwärts bis zum Anfang der aktuellen Instanz erst fortgesetzt `value` gefunden wird oder die Position des erste Zeichens überprüft wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-2197">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.This method begins searching at the `startIndex` character position of this instance and proceeds backward toward the beginning of the current instance until either `value` is found or the first character position has been examined.</span></span> <span data-ttu-id="9380d-2198">Z. B. wenn `startIndex` ist <xref:System.String.Length%2A> - 1, sucht die Methode alle Zeichen aus dem letzten Zeichen in der Zeichenfolge an den Anfang.</span><span class="sxs-lookup"><span data-stu-id="9380d-2198">For example, if `startIndex` is <xref:System.String.Length%2A> - 1, the method searches every character from the last character in the string to the beginning.</span></span> <span data-ttu-id="9380d-2199">Bei der Suche wird die Groß- und Kleinschreibung berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2199">The search is case-sensitive.</span></span>  
  
 <span data-ttu-id="9380d-2200">Diese Methode führt eine ordinale (kulturunabhängige) Suche, in dem ein Zeichen als gleich betrachtet, ein anderes Zeichen nur dann, wenn die Unicode-Skalarwerten identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2200">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="9380d-2201">Um eine kulturabhängige Suche durchzuführen, verwenden die <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> -Methode, in dem ein Unicode-Skalarwert, ein zusammengesetztes Zeichen, z. B. die Ligatur "Æ" (U + 00 C 6) betrachtet werden kann entspricht jedem Vorkommen des Zeichens-Komponenten in der Korrigieren Sie die Sequenz, wie z. B. "AE" (U + 0041, U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-2201">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2202">Das folgende Beispiel sucht den Index der alle Vorkommen eines Zeichens in einer Zeichenfolge am Ende der Zeichenfolge an den Anfang der Zeichenfolge verwenden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2202">The following example finds the index of all occurrences of a character in a string, working from the end of the string to the start of the string.</span></span>  
  
 [!code-cpp[string.lastindexof1#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.lastindexof1/CPP/lastixof1.cpp#1)]
 [!code-csharp[string.lastindexof1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.lastindexof1/CS/lastixof1.cs#1)]
 [!code-vb[string.lastindexof1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.lastindexof1/VB/lastixof1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2203">Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer oder gleich der Länge dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2203">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than or equal to the length of this instance.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * int -&gt; int" Usage="string.LastIndexOf (value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2204">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2204">The string to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-2205">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2205">The search starting position.</span>
          </span>
          <span data-ttu-id="9380d-2206">Die Suche wird von <c>startIndex</c> bis zum Anfang dieser Instanz fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2206">The search proceeds from <c>startIndex</c> toward the beginning of this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2207">Gibt die NULL-basierte Indexposition des letzten Vorkommens einer angegebenen Zeichenfolge in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2207">Reports the zero-based index position of the last occurrence of a specified string within this instance.</span>
          </span>
          <span data-ttu-id="9380d-2208">Die Suche beginnt an einer angegebenen Zeichenposition und wird rückwärts bis zum Anfang der Zeichenfolge fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2208">The search starts at a specified character position and proceeds backward toward the beginning of the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2209">Die nullbasierte Anfangsindexposition von <paramref name="value" />, wenn diese Zeichenfolge gefunden wurde, oder -1, wenn sie nicht gefunden wurde oder die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2209">The zero-based starting index position of <paramref name="value" /> if that string is found, or -1 if it is not found or if the current instance equals <see cref="F:System.String.Empty" />.</span>
          </span>
          <span data-ttu-id="9380d-2210">Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, ist der Rückgabewert der kleinere <paramref name="startIndex" /> und die letzte Indexposition in dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2210">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is the smaller of <paramref name="startIndex" /> and the last index position in this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2211">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-2211">Index numbering starts from zero.</span></span> <span data-ttu-id="9380d-2212">D. h. das erste Zeichen in der Zeichenfolge ist, am Index 0 (null) und das letzte liegt bei <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-2212">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="9380d-2213">Die Suche beginnt an der `startIndex` Zeichen Position dieser Instanz und wird fortgesetzt, bis entweder rückwärts `value` gefunden wird oder die Position des erste Zeichens überprüft wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-2213">The search begins at the `startIndex` character position of this instance and proceeds backward toward the beginning until either `value` is found or the first character position has been examined.</span></span> <span data-ttu-id="9380d-2214">Z. B. wenn `startIndex` ist <xref:System.String.Length%2A> - 1, sucht die Methode alle Zeichen aus dem letzten Zeichen in der Zeichenfolge an den Anfang.</span><span class="sxs-lookup"><span data-stu-id="9380d-2214">For example, if `startIndex` is <xref:System.String.Length%2A> - 1, the method searches every character from the last character in the string to the beginning.</span></span>  
  
 <span data-ttu-id="9380d-2215">Diese Methode führt eine Wortsuche (Groß-/Kleinschreibung beachtet und kulturabhängige) mit der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-2215">This method performs a word (case-sensitive and culture-sensitive) search using the current culture.</span></span>  
  
 <span data-ttu-id="9380d-2216">Zeichensätze enthalten ignorierbare Zeichen, d. h. Zeichen, die bei der Durchführung eines linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2216">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="9380d-2217">Bei einer kulturabhängige Suche, bei der `value` ein ignorierbares Zeichen enthält, ist das Ergebnis das gleiche wie bei einer Suche ohne dieses Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2217">In a culture-sensitive search, if `value` contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="9380d-2218">Wenn `value` besteht nur aus ein oder mehrere Ignorierbare Zeichen, die <xref:System.String.LastIndexOf%28System.String%2CSystem.Int32%29> Methode gibt immer `startIndex`, d.h. die Zeichenposition, an dem die Suche beginnt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2218">If `value` consists only of one or more ignorable characters, the <xref:System.String.LastIndexOf%28System.String%2CSystem.Int32%29> method always returns `startIndex`, which is the character position at which the search begins.</span></span> <span data-ttu-id="9380d-2219">Im folgenden Beispiel die <xref:System.String.LastIndexOf%28System.String%2CSystem.Int32%29> Methode wird verwendet, finden Sie eine untergeordnete Zeichenfolge, die einen bedingten Bindestrich (U + 00AD) enthält und die vorangestellt ist, oder das letzte "m" in einer Zeichenfolge enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-2219">In the following example, the <xref:System.String.LastIndexOf%28System.String%2CSystem.Int32%29> method is used to find a substring that includes a soft hyphen (U+00AD) and that precedes or includes the final "m" in a string.</span></span> <span data-ttu-id="9380d-2220">Wenn Sie das Beispiel ausgeführt wird, auf die [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] oder höher, da bedingten Bindestrichs in der Suchzeichenfolge ignoriert wird, einen Aufruf der Methode zu eine Teilzeichenfolge, die besteht aus den bedingten Bindestrich und "m" gibt die Position des "m" in der Zeichenfolge, suchen, während aufrufen, um eine Substrin suchen g, der den bedingten Bindestrich und "n" besteht, gibt die Position der "n" zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-2220">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, because the soft hyphen in the search string is ignored, calling the method to find a substring that consists of the soft hyphen and "m" returns the position of the "m" in the string, whereas calling it to find a substring that consists of the soft hyphen and "n" returns the position of the "n".</span></span> <span data-ttu-id="9380d-2221">Wenn die zu suchende Zeichenfolge nur für den bedingten Bindestrich enthält, die Methode gibt den Index des "m", steht für den Wert der `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2221">When the search string contains only the soft hyphen, the method returns the index of the "m", which represents the value of `startIndex`.</span></span>  
  
 [!code-csharp[System.String.LastIndexOf#22](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof22.cs#22)]
 [!code-vb[System.String.LastIndexOf#22](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof22.vb#22)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2222">Das folgende Beispiel sucht den Index der alle Vorkommen einer Zeichenfolge in der Zielzeichenfolge, wird am Ende der Zielzeichenfolge an den Anfang der Zielzeichenfolge arbeiten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2222">The following example finds the index of all occurrences of a string in target string, working from the end of the target string to the start of the target string.</span></span>  
  
 [!code-cpp[string.lastindexof7#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.LastIndexOf7/CPP/lastixof7.cpp#1)]
 [!code-csharp[string.lastindexof7#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.LastIndexOf7/CS/lastixof7.cs#1)]
 [!code-vb[string.lastindexof7#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.LastIndexOf7/VB/lastixof7.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2223">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2223">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2224">Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge der aktuellen Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2224">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than the length of the current instance.</span>
          </span>
          <span data-ttu-id="9380d-2225">Oder:  Die aktuelle Instanz entspricht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> ist kleiner als –1 oder größer als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2225">-or-  The current instance equals <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than -1 or greater than zero.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2226">
            <para>Wie unter [bewährte Methoden für Strings](~/docs/standard/base-types/best-practices-strings.md) verwenden, es wird empfohlen, dass Sie vermeiden, Aufrufen von Methoden zum Zeichenfolgenvergleich, die Standardwerte ersetzen, und rufen stattdessen die Methoden, die Parameter erfordern explizit angegeben. Um den Index einer Teilzeichenfolge suchen, die eine bestimmten Zeichenposition, die mit die Vergleichsregeln der aktuellen Kultur vorangestellt ist, rufen die <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" /> methodenüberladung mit einem Wert von <see cref="F:System.StringComparison.CurrentCulture" /> für seine <paramref name="comparisonType" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2226">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified. To find the index of a substring that precedes a particular character position by using the comparison rules of the current culture, call the <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its <paramref name="comparisonType" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * StringComparison -&gt; int" Usage="string.LastIndexOf (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2227">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2227">The string to seek.</span>
          </span>
        </param>
        <param name="comparisonType">
          <span data-ttu-id="9380d-2228">Einer der Enumerationswerte, der die Regeln für die Suche angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2228">One of the enumeration values that specifies the rules for the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2229">Gibt den NULL-basierten Index des letzten Vorkommens einer angegebenen Zeichenfolge im aktuellen <see cref="T:System.String" />-Objekt an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2229">Reports the zero-based index of the last occurrence of a specified string within the current <see cref="T:System.String" /> object.</span>
          </span>
          <span data-ttu-id="9380d-2230">Ein Parameter gibt den Typ der Suche für die angegebene Zeichenfolge an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2230">A parameter specifies the type of search to use for the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2231">Die nullbasierte Indexposition des <paramref name="value" />-Parameters, wenn diese Zeichenfolge gefunden wurde, andernfalls -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2231">The zero-based starting index position of the <paramref name="value" /> parameter if that string is found, or -1 if it is not.</span>
          </span>
          <span data-ttu-id="9380d-2232">Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, ist der Rückgabewert die letzte Indexposition in dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2232">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is the last index position in this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2233">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-2233">Index numbering starts from zero.</span></span> <span data-ttu-id="9380d-2234">D. h. das erste Zeichen in der Zeichenfolge ist, am Index 0 (null) und das letzte liegt bei <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-2234">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="9380d-2235">Die `comparisonType` Parameter gibt an, dass für die Suche die `value` Parameter unter Verwendung der aktuellen oder der invarianten Kultur, mithilfe einer Suche Groß- und Kleinschreibung beachtet und mithilfe von Word oder Ordinalvergleichsregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-2235">The `comparisonType` parameter specifies to search for the `value` parameter using the current or invariant culture, using a case-sensitive or case-insensitive search, and using word or ordinal comparison rules.</span></span>  
  
 <span data-ttu-id="9380d-2236">Die Suche beginnt an der Position des letzten Zeichens dieser Instanz und wird rückwärts bis entweder fortgesetzt, `value` gefunden wird oder die Position des erste Zeichens überprüft wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-2236">The search begins at the last character position of this instance and proceeds backward toward the beginning until either `value` is found or the first character position has been examined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2237">Die folgenden Exampledemonstrates drei Überladungen, der die <xref:System.String.LastIndexOf%2A> -Methode, die das letzte Vorkommen einer Zeichenfolge innerhalb einer anderen Zeichenfolge, die mit unterschiedlichen Werten der suchen die <xref:System.StringComparison> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-2237">The following exampledemonstrates three overloads of the <xref:System.String.LastIndexOf%2A> method that find the last occurrence of a string within another string using different values of the <xref:System.StringComparison> enumeration.</span></span>  
  
 [!code-csharp[system.string.LastIndexOfCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.LastIndexOfCmp/cs/liocmp.cs#1)]
 [!code-vb[system.string.LastIndexOfCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.LastIndexOfCmp/vb/liocmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2238">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2238">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2239">
            <paramref name="comparisonType" /> ist kein gültiger <see cref="T:System.StringComparison" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2239">
              <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2240">
            <para>Zeichensätze enthalten Ignorierbare Zeichen, d. h. Zeichen, die beim Ausführen einer linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden. Bei einer kulturabhängige Suche (das heißt, wenn <paramref name="options" /> nicht <see cref="F:System.StringComparison.Ordinal" /> oder <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> ist), bei der <paramref name="value" /> ein ignorierbares Zeichen enthält, ist das Ergebnis das gleiche wie bei einer Suche ohne dieses Zeichen. Wenn <paramref name="value" /> besteht nur aus ein oder mehrere Ignorierbare Zeichen, die <see cref="M:System.String.LastIndexOf(System.String,System.StringComparison)" /> Methode gibt immer <see cref="P:System.String.Length" /> – 1, der die letzte Indexposition in der aktuellen Instanz darstellt.  Im folgenden Beispiel die <see cref="M:System.String.LastIndexOf(System.String,System.StringComparison)" /> Methode wird verwendet, um drei Teilzeichenfolgen (einen bedingten Bindestrich (U + 00AD), einen bedingten Bindestrich gefolgt von "n" und einen bedingten Bindestrich gefolgt von "m") in zwei Zeichenfolgen zu suchen. Nur eine der Zeichenfolgen enthält einen bedingten Bindestrich. Wenn Sie das Beispiel ausgeführt wird, auf der [! Include[netfx40_short](~/Includes/netfx40-Short-MD.MD)] oder höher, da der bedingten Bindestrich ein ignorierbares Zeichen ist, eine kulturabhängige Suche derselbe Wert zurückgegeben, die es zurückgegeben würde, wenn es sich bei bedingten Bindestrichs nicht in der Suchzeichenfolge enthalten waren. Allerdings eine Ordinalsuche erfolgreich bedingten Bindestrichs in einer Zeichenfolge sucht und gibt an, dass sie nicht vorhanden ist aus der zweiten Zeichenfolge.  [! Code-Csharp [System.String.LastIndexOf#26] (~/samples/snippets/csharp/VS_Snippets_CLR_System/System. String.LastIndexOf/cs/lastindexof26.cs#26)] [! Vb-Code [System.String.LastIndexOf#26] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System. String.LastIndexOf/vb/lastindexof26.vb#26)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2240">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison. In a culture-sensitive search (that is, if <paramref name="options" /> is not <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.String.LastIndexOf(System.String,System.StringComparison)" /> method always returns <see cref="P:System.String.Length" /> – 1, which represents the last index position in the current instance.  In the following example, the <see cref="M:System.String.LastIndexOf(System.String,System.StringComparison)" /> method is used to find three substrings (a soft hyphen (U+00AD), a soft hyphen followed by "n", and a soft hyphen followed by "m") in two strings. Only one of the strings contains a soft hyphen. If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, because the soft hyphen is an ignorable character, a culture-sensitive search returns the same value that it would return if the soft hyphen were not included in the search string. An ordinal search, however, successfully finds the soft hyphen in one string and reports that it is absent from the second string.  [!code-csharp[System.String.LastIndexOf#26](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof26.cs#26)] [!code-vb[System.String.LastIndexOf#26](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof26.vb#26)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (char value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(char value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.Char,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As Char, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(char value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : char * int * int -&gt; int" Usage="string.LastIndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2241">Das zu suchende Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2241">The Unicode character to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-2242">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2242">The starting position of the search.</span>
          </span>
          <span data-ttu-id="9380d-2243">Die Suche wird von <c>startIndex</c> bis zum Anfang dieser Instanz fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2243">The search proceeds from <c>startIndex</c> toward the beginning of this instance.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-2244">Die Anzahl der zu überprüfenden Zeichenpositionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2244">The number of character positions to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2245">Gibt die NULL-basierte Indexposition des letzten Vorkommens des angegebenen Unicode-Zeichens in einer Teilzeichenfolge dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2245">Reports the zero-based index position of the last occurrence of the specified Unicode character in a substring within this instance.</span>
          </span>
          <span data-ttu-id="9380d-2246">Die Suche beginnt an einer angegebenen Zeichenposition und verläuft für eine angegebene Anzahl von Zeichenpositionen rückwärts zum Anfang der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2246">The search starts at a specified character position and proceeds backward toward the beginning of the string for a specified number of character positions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2247">Die nullbasierte Indexposition von <paramref name="value" />, wenn dieses Zeichen gefunden wurde, oder -1, wenn es nicht gefunden wurde oder die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2247">The zero-based index position of <paramref name="value" /> if that character is found, or -1 if it is not found or if the current instance equals <see cref="F:System.String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2248">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-2248">Index numbering starts from zero.</span></span> <span data-ttu-id="9380d-2249">D. h. das erste Zeichen in der Zeichenfolge ist, am Index 0 (null) und das letzte liegt bei <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-2249">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="9380d-2250">Diese Methode beginnt die Suche an der `startIndex` Zeichen, Position und wird fortgesetzt, bis zum Anfang dieser Instanz erst nach hinten `value` gefunden wird oder `count` Zeichenpositionen überprüft wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2250">This method begins searching at the `startIndex` character position and proceeds backward toward the beginning of this instance until either `value` is found or `count` character positions have been examined.</span></span> <span data-ttu-id="9380d-2251">Z. B. wenn `startIndex` ist <xref:System.String.Length%2A> - 1, sucht die Methode nach hinten `count` Zeichen aus dem letzten Zeichen in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2251">For example, if `startIndex` is <xref:System.String.Length%2A> - 1, the method searches backward `count` characters from the last character in the string.</span></span> <span data-ttu-id="9380d-2252">Bei der Suche wird die Groß- und Kleinschreibung berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2252">The search is case-sensitive.</span></span>  
  
 <span data-ttu-id="9380d-2253">Diese Methode führt eine ordinale (kulturunabhängige) Suche, in dem ein Zeichen als gleich betrachtet, ein anderes Zeichen nur dann, wenn die Unicode-Skalarwert identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2253">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar value are the same.</span></span> <span data-ttu-id="9380d-2254">Um eine kulturabhängige Suche durchzuführen, verwenden die <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> -Methode, in dem ein Unicode-Skalarwert, ein zusammengesetztes Zeichen, z. B. die Ligatur "Æ" (U + 00 C 6) betrachtet werden kann entspricht jedem Vorkommen des Zeichens-Komponenten in der Korrigieren Sie die Sequenz, wie z. B. "AE" (U + 0041, U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-2254">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2255">Das folgende Beispiel sucht den Index der alle Vorkommen eines Zeichens in einer Teilzeichenfolge, arbeiten an den Anfang der Teilzeichenfolge am Ende der Teilzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2255">The following example finds the index of all occurrences of a character in a substring, working from the end of the substring to the start of the substring.</span></span>  
  
 [!code-cpp[string.lastindexof2#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.lastindexof2/CPP/lastixof2.cpp#1)]
 [!code-csharp[string.lastindexof2#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.lastindexof2/CS/lastixof2.cs#1)]
 [!code-vb[string.lastindexof2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.lastindexof2/VB/lastixof2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2256">Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer oder gleich der Länge dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2256">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than or equal to the length of this instance.</span>
          </span>
          <span data-ttu-id="9380d-2257">Oder:  Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> - <paramref name="count" />+1 ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2257">-or-  The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> - <paramref name="count" /> + 1 is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * int * int -&gt; int" Usage="string.LastIndexOf (value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2258">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2258">The string to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-2259">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2259">The search starting position.</span>
          </span>
          <span data-ttu-id="9380d-2260">Die Suche wird von <c>startIndex</c> bis zum Anfang dieser Instanz fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2260">The search proceeds from <c>startIndex</c> toward the beginning of this instance.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-2261">Die Anzahl der zu überprüfenden Zeichenpositionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2261">The number of character positions to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2262">Gibt die NULL-basierte Indexposition des letzten Vorkommens einer angegebenen Zeichenfolge in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2262">Reports the zero-based index position of the last occurrence of a specified string within this instance.</span>
          </span>
          <span data-ttu-id="9380d-2263">Die Suche beginnt an einer angegebenen Zeichenposition und verläuft für eine angegebene Anzahl von Zeichenpositionen rückwärts zum Anfang der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2263">The search starts at a specified character position and proceeds backward toward the beginning of the string for a specified number of character positions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2264">Die nullbasierte Anfangsindexposition von <paramref name="value" />, wenn diese Zeichenfolge gefunden wurde, oder -1, wenn sie nicht gefunden wurde oder die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2264">The zero-based starting index position of <paramref name="value" /> if that string is found, or -1 if it is not found or if the current instance equals <see cref="F:System.String.Empty" />.</span>
          </span>
          <span data-ttu-id="9380d-2265">Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, ist der Rückgabewert der kleinere <paramref name="startIndex" /> und die letzte Indexposition in dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2265">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is the smaller of <paramref name="startIndex" /> and the last index position in this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2266">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-2266">Index numbering starts from zero.</span></span> <span data-ttu-id="9380d-2267">D. h. das erste Zeichen in der Zeichenfolge ist, am Index 0 (null) und das letzte liegt bei <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-2267">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="9380d-2268">Die Suche beginnt an der `startIndex` Zeichen Position dieser Instanz und wird fortgesetzt, bis entweder rückwärts `value` gefunden wird oder `count` Zeichenpositionen überprüft wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2268">The search begins at the `startIndex` character position of this instance and proceeds backward toward the beginning until either `value` is found or `count` character positions have been examined.</span></span> <span data-ttu-id="9380d-2269">Z. B. wenn `startIndex` ist <xref:System.String.Length%2A> - 1, sucht die Methode nach hinten `count` Zeichen aus dem letzten Zeichen in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2269">For example, if `startIndex` is <xref:System.String.Length%2A> - 1, the method searches backward `count` characters from the last character in the string.</span></span>  
  
 <span data-ttu-id="9380d-2270">Diese Methode führt eine Wortsuche (Groß-/Kleinschreibung beachtet und kulturabhängige) mit der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-2270">This method performs a word (case-sensitive and culture-sensitive) search using the current culture.</span></span>  
  
 <span data-ttu-id="9380d-2271">Zeichensätze enthalten ignorierbare Zeichen, d. h. Zeichen, die bei der Durchführung eines linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2271">Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison.</span></span> <span data-ttu-id="9380d-2272">Bei einer kulturabhängige Suche, bei der `value` ein ignorierbares Zeichen enthält, ist das Ergebnis das gleiche wie bei einer Suche ohne dieses Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2272">In a culture-sensitive search, if `value` contains an ignorable character, the result is equivalent to searching with that character removed.</span></span> <span data-ttu-id="9380d-2273">Wenn `value` besteht nur aus ein oder mehrere Ignorierbare Zeichen, die <xref:System.String.LastIndexOf%2A> Methode gibt immer `startIndex`, d.h. die Zeichenposition, an dem die Suche beginnt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2273">If `value` consists only of one or more ignorable characters, the <xref:System.String.LastIndexOf%2A> method always returns `startIndex`, which is the character position at which the search begins.</span></span> <span data-ttu-id="9380d-2274">Im folgenden Beispiel die <xref:System.String.LastIndexOf%2A> Methode wird verwendet, um die Position der einen bedingten Bindestrich (U + 00AD) in den beiden Zeichen zu finden, die vor der letzten "m" von zwei Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2274">In the following example, the <xref:System.String.LastIndexOf%2A> method is used to find the position of a soft hyphen (U+00AD) in the two characters that precede the final "m" of two strings.</span></span> <span data-ttu-id="9380d-2275">Nur eine der Zeichenfolgen enthält die erforderliche Teilzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2275">Only one of the strings contains the required substring.</span></span> <span data-ttu-id="9380d-2276">Wenn Sie das Beispiel ausgeführt wird, auf die [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] oder höher in beiden Fällen, da die bedingten Bindestrich ein ignorierbares Zeichen ist die Methode gibt den Index des "m" in der Zeichenfolge, wenn sie einen kulturabhängigen Vergleich ausführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2276">If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison.</span></span> <span data-ttu-id="9380d-2277">Beachten Sie, dass bei der ersten Zeichenfolge, die den bedingten Bindestrich gefolgt von einem "m" umfasst, die Methode den Index des bedingten Bindestrichs nicht zurückgeben kann, sondern stattdessen den Index des "m" zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2277">Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m".</span></span>  
  
 [!code-csharp[System.String.LastIndexOf#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof23.cs#23)]
 [!code-vb[System.String.LastIndexOf#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof23.vb#23)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2278">Das folgende Beispiel sucht den Index der alle Vorkommen einer Zeichenfolge in Teilzeichenfolgen, arbeiten an den Anfang der Teilzeichenfolge am Ende der Teilzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2278">The following example finds the index of all occurrences of a string in substring, working from the end of the substring to the start of the substring.</span></span>  
  
 [!code-cpp[string.lastindexof8#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.LastIndexOf8/CPP/lastixof8.cpp#1)]
 [!code-csharp[string.lastindexof8#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.LastIndexOf8/CS/lastixof8.cs#1)]
 [!code-vb[string.lastindexof8#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.LastIndexOf8/VB/lastixof8.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2279">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2279">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2280">
            <paramref name="count" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2280">
              <paramref name="count" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-2281">Oder:  Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2281">-or-  The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-2282">Oder:  Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> ist größer als die Länge dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2282">-or-  The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is greater than the length of this instance.</span>
          </span>
          <span data-ttu-id="9380d-2283">Oder:  Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> - <paramref name="count" />+1 gibt eine Position an, die nicht innerhalb dieser Instanz liegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2283">-or-  The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> - <paramref name="count" />+ 1 specifies a position that is not within this instance.</span>
          </span>
          <span data-ttu-id="9380d-2284">Oder:  Die aktuelle Instanz entspricht <see cref="F:System.String.Empty" />, und <paramref name="start" /> ist kleiner als –1 oder größer als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2284">-or-  The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="start" /> is less than -1 or greater than zero.</span>
          </span>
          <span data-ttu-id="9380d-2285">Oder:  Die aktuelle Instanz entspricht <see cref="F:System.String.Empty" />, und <paramref name="count" /> ist größer als 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2285">-or-  The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="count" /> is greater than 1.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2286">
            <para>Wie unter [bewährte Methoden für Strings](~/docs/standard/base-types/best-practices-strings.md) verwenden, es wird empfohlen, dass Sie vermeiden, Aufrufen von Methoden zum Zeichenfolgenvergleich, die Standardwerte ersetzen, und rufen stattdessen die Methoden, die Parameter erfordern explizit angegeben. Aufrufen, um diesen Vorgang auszuführen, mit die Vergleichsregeln der aktuellen Kultur, die <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> methodenüberladung mit einem Wert von <see cref="F:System.StringComparison.CurrentCulture" /> für seine <paramref name="comparisonType" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2286">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified. To perform this operation by using the comparison rules of the current culture, call the <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its <paramref name="comparisonType" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOfAny(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, int startIndex, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, int32 startIndex, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, startIndex As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, int startIndex, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * int * StringComparison -&gt; int" Usage="string.LastIndexOf (value, startIndex, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2287">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2287">The string to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-2288">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2288">The search starting position.</span>
          </span>
          <span data-ttu-id="9380d-2289">Die Suche wird von <c>startIndex</c> bis zum Anfang dieser Instanz fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2289">The search proceeds from <c>startIndex</c> toward the beginning of this instance.</span>
          </span>
        </param>
        <param name="comparisonType">
          <span data-ttu-id="9380d-2290">Einer der Enumerationswerte, der die Regeln für die Suche angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2290">One of the enumeration values that specifies the rules for the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2291">Gibt den NULL-basierten Index des letzten Vorkommens einer angegebenen Zeichenfolge im aktuellen <see cref="T:System.String" />-Objekt an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2291">Reports the zero-based index of the last occurrence of a specified string within the current <see cref="T:System.String" /> object.</span>
          </span>
          <span data-ttu-id="9380d-2292">Die Suche beginnt an einer angegebenen Zeichenposition und wird rückwärts bis zum Anfang der Zeichenfolge fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2292">The search starts at a specified character position and proceeds backward toward the beginning of the string.</span>
          </span>
          <span data-ttu-id="9380d-2293">Ein Parameter gibt den Typ des bei der Suche nach der angegebenen Zeichenfolge auszuführenden Vergleichs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2293">A parameter specifies the type of comparison to perform when searching for the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2294">Die nullbasierte Anfangsindexposition des <paramref name="value" />-Parameters, wenn diese Zeichenfolge gefunden wurde, oder -1, wenn sie nicht gefunden wurde oder die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2294">The zero-based starting index position of the <paramref name="value" /> parameter if that string is found, or -1 if it is not found or if the current instance equals <see cref="F:System.String.Empty" />.</span>
          </span>
          <span data-ttu-id="9380d-2295">Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, ist der Rückgabewert der kleinere <paramref name="startIndex" /> und die letzte Indexposition in dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2295">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is the smaller of <paramref name="startIndex" /> and the last index position in this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2296">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-2296">Index numbering starts from zero.</span></span> <span data-ttu-id="9380d-2297">D. h. das erste Zeichen in der Zeichenfolge ist, am Index 0 (null) und das letzte liegt bei <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-2297">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="9380d-2298">Die Suche beginnt an der `startIndex` Zeichen, Position und wird fortgesetzt, bis entweder rückwärts `value` gefunden wird oder die Position des erste Zeichens überprüft wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-2298">The search begins at the `startIndex` character position and proceeds backward until either `value` is found or the first character position has been examined.</span></span> <span data-ttu-id="9380d-2299">Z. B. wenn `startIndex` ist <xref:System.String.Length%2A> - 1, sucht die Methode alle Zeichen aus dem letzten Zeichen in der Zeichenfolge an den Anfang.</span><span class="sxs-lookup"><span data-stu-id="9380d-2299">For example, if `startIndex` is <xref:System.String.Length%2A> - 1, the method searches every character from the last character in the string to the beginning.</span></span>  
  
 <span data-ttu-id="9380d-2300">Die `comparisonType` Parameter gibt an, dass für die Suche die `value` Parameter unter Verwendung der aktuellen oder der invarianten Kultur, mithilfe einer Suche Groß- und Kleinschreibung beachtet und mithilfe von Word oder Ordinalvergleichsregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-2300">The `comparisonType` parameter specifies to search for the `value` parameter using the current or invariant culture, using a case-sensitive or case-insensitive search, and using word or ordinal comparison rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2301">Die folgenden Exampledemonstrates drei Überladungen, der die <xref:System.String.LastIndexOf%2A> -Methode, die das letzte Vorkommen einer Zeichenfolge innerhalb einer anderen Zeichenfolge, die mit unterschiedlichen Werten der suchen die <xref:System.StringComparison> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-2301">The following exampledemonstrates three overloads of the <xref:System.String.LastIndexOf%2A> method that find the last occurrence of a string within another string using different values of the <xref:System.StringComparison> enumeration.</span></span>  
  
 [!code-csharp[system.string.LastIndexOfCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.LastIndexOfCmp/cs/liocmp.cs#1)]
 [!code-vb[system.string.LastIndexOfCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.LastIndexOfCmp/vb/liocmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2302">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2302">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2303">Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge der aktuellen Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2303">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than zero or greater than the length of the current instance.</span>
          </span>
          <span data-ttu-id="9380d-2304">Oder:  Die aktuelle Instanz entspricht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> ist kleiner als –1 oder größer als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2304">-or-  The current instance equals <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is less than -1 or greater than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2305">
            <paramref name="comparisonType" /> ist kein gültiger <see cref="T:System.StringComparison" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2305">
              <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2306">
            <para>Zeichensätze enthalten Ignorierbare Zeichen, d. h. Zeichen, die beim Ausführen einer linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden. Bei einer kulturabhängige Suche (das heißt, wenn <paramref name="comparisonType" /> nicht <see cref="F:System.StringComparison.Ordinal" /> oder <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> ist), bei der <paramref name="value" /> ein ignorierbares Zeichen enthält, ist das Ergebnis das gleiche wie bei einer Suche ohne dieses Zeichen. Wenn <paramref name="value" /> besteht nur aus ein oder mehrere Ignorierbare Zeichen, die <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" /> Methode gibt immer <paramref name="startIndex" />, d.h. die Zeichenposition, an dem die Suche beginnt.  Im folgenden Beispiel die <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" /> Methode wird verwendet, um die Position (U + 00AD) über einen bedingten Bindestrich gefolgt von einem "m", beginnend mit dem letzten "m" in zwei Zeichenfolgen zu suchen. Nur eine der Zeichenfolgen enthält die erforderliche Teilzeichenfolge. Wenn Sie das Beispiel ausgeführt wird, auf der [! Include[netfx40_short](~/Includes/netfx40-Short-MD.MD)] oder höher in beiden Fällen, da die bedingten Bindestrich ein ignorierbares Zeichen ist die Methode gibt den Index des "m" in der Zeichenfolge, wenn sie einen kulturabhängigen Vergleich ausführt. Beachten Sie, dass bei der ersten Zeichenfolge, die den bedingten Bindestrich gefolgt von einem "m" umfasst, die Methode den Index des bedingten Bindestrichs nicht zurückgeben kann, sondern stattdessen den Index des "m" zurückgibt. Die Methode gibt den Index des bedingten Bindestrichs in der ersten Zeichenfolge an, nur, wenn es sich um einen Ordinalvergleich ausführt.  [! Code-Csharp [System.String.LastIndexOf#25] (~/samples/snippets/csharp/VS_Snippets_CLR_System/System. String.LastIndexOf/cs/lastindexof25.cs#25)] [! Vb-Code [System.String.LastIndexOf#25] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System. String.LastIndexOf/vb/lastindexof25.vb#25)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2306">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison. In a culture-sensitive search (that is, if <paramref name="comparisonType" /> is not <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.  In the following example, the <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.StringComparison)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m", starting with the final "m" in two strings. Only one of the strings contains the required substring. If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison. Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m". The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.  [!code-csharp[System.String.LastIndexOf#25](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof25.cs#25)] [!code-vb[System.String.LastIndexOf#25](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof25.vb#25)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public int LastIndexOf (string value, int startIndex, int count, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOf(string value, int32 startIndex, int32 count, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOf (value As String, startIndex As Integer, count As Integer, comparisonType As StringComparison) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOf(System::String ^ value, int startIndex, int count, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOf : string * int * int * StringComparison -&gt; int" Usage="string.LastIndexOf (value, startIndex, count, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2307">Die zu suchende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2307">The string to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-2308">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2308">The search starting position.</span>
          </span>
          <span data-ttu-id="9380d-2309">Die Suche wird von <c>startIndex</c> bis zum Anfang dieser Instanz fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2309">The search proceeds from <c>startIndex</c> toward the beginning of this instance.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-2310">Die Anzahl der zu überprüfenden Zeichenpositionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2310">The number of character positions to examine.</span>
          </span>
        </param>
        <param name="comparisonType">
          <span data-ttu-id="9380d-2311">Einer der Enumerationswerte, der die Regeln für die Suche angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2311">One of the enumeration values that specifies the rules for the search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2312">Gibt die NULL-basierte Indexposition des letzten Vorkommens einer angegebenen Zeichenfolge in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2312">Reports the zero-based index position of the last occurrence of a specified string within this instance.</span>
          </span>
          <span data-ttu-id="9380d-2313">Die Suche beginnt an einer angegebenen Zeichenposition und verläuft für eine angegebene Anzahl von Zeichenpositionen rückwärts zum Anfang der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2313">The search starts at a specified character position and proceeds backward toward the beginning of the string for the specified number of character positions.</span>
          </span>
          <span data-ttu-id="9380d-2314">Ein Parameter gibt den Typ des bei der Suche nach der angegebenen Zeichenfolge auszuführenden Vergleichs an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2314">A parameter specifies the type of comparison to perform when searching for the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2315">Die nullbasierte Anfangsindexposition des <paramref name="value" />-Parameters, wenn diese Zeichenfolge gefunden wurde, oder -1, wenn sie nicht gefunden wurde oder die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2315">The zero-based starting index position of the <paramref name="value" /> parameter if that string is found, or -1 if it is not found or if the current instance equals <see cref="F:System.String.Empty" />.</span>
          </span>
          <span data-ttu-id="9380d-2316">Wenn <paramref name="value" /><see cref="F:System.String.Empty" /> ist, ist der Rückgabewert der kleinere <paramref name="startIndex" /> und die letzte Indexposition in dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2316">If <paramref name="value" /> is <see cref="F:System.String.Empty" />, the return value is the smaller of <paramref name="startIndex" /> and the last index position in this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2317">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-2317">Index numbering starts from zero.</span></span> <span data-ttu-id="9380d-2318">D. h. das erste Zeichen in der Zeichenfolge ist, am Index 0 (null) und das letzte liegt bei <xref:System.String.Length%2A> - 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-2318">That is, the first character in the string is at index zero and the last is at <xref:System.String.Length%2A> - 1.</span></span>  
  
 <span data-ttu-id="9380d-2319">Die Suche beginnt an der `startIndex` Zeichen, Position und wird fortgesetzt, bis entweder rückwärts `value` gefunden wird oder `count` Zeichenpositionen überprüft wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2319">The search begins at the `startIndex` character position and proceeds backward until either `value` is found or `count` character positions have been examined.</span></span> <span data-ttu-id="9380d-2320">Z. B. wenn `startIndex` ist <xref:System.String.Length%2A> - 1, sucht die Methode nach hinten `count` Zeichen aus dem letzten Zeichen in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2320">For example, if `startIndex` is <xref:System.String.Length%2A> - 1, the method searches backward `count` characters from the last character in the string.</span></span>  
  
 <span data-ttu-id="9380d-2321">Die `comparisonType` Parameter gibt an, dass für die Suche die `value` Parameter unter Verwendung der aktuellen oder der invarianten Kultur, mithilfe einer Suche Groß- und Kleinschreibung beachtet und mithilfe von Word oder Ordinalvergleichsregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-2321">The `comparisonType` parameter specifies to search for the `value` parameter using the current or invariant culture, using a case-sensitive or case-insensitive search, and using word or ordinal comparison rules.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2322">Die folgenden Exampledemonstrates drei Überladungen, der die <xref:System.String.LastIndexOf%2A> -Methode, die das letzte Vorkommen einer Zeichenfolge innerhalb einer anderen Zeichenfolge, die mit unterschiedlichen Werten der suchen die <xref:System.StringComparison> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-2322">The following exampledemonstrates three overloads of the <xref:System.String.LastIndexOf%2A> method that find the last occurrence of a string within another string using different values of the <xref:System.StringComparison> enumeration.</span></span>  
  
 [!code-csharp[system.string.LastIndexOfCmp#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.LastIndexOfCmp/cs/liocmp.cs#1)]
 [!code-vb[system.string.LastIndexOfCmp#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.LastIndexOfCmp/vb/liocmp.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2323">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2323">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2324">
            <paramref name="count" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2324">
              <paramref name="count" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-2325">Oder:  Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2325">-or-  The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-2326">Oder:  Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> ist größer als die Länge dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2326">-or-  The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> is greater than the length of this instance.</span>
          </span>
          <span data-ttu-id="9380d-2327">Oder:  Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" />+1–<paramref name="count" /> gibt eine Position an, die nicht innerhalb dieser Instanz liegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2327">-or-  The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> + 1 - <paramref name="count" /> specifies a position that is not within this instance.</span>
          </span>
          <span data-ttu-id="9380d-2328">Oder:  Die aktuelle Instanz entspricht <see cref="F:System.String.Empty" />, und <paramref name="start" /> ist kleiner als –1 oder größer als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2328">-or-  The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="start" /> is less than -1 or greater than zero.</span>
          </span>
          <span data-ttu-id="9380d-2329">Oder:  Die aktuelle Instanz entspricht <see cref="F:System.String.Empty" />, und <paramref name="count" /> ist größer als 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2329">-or-  The current instance equals <see cref="F:System.String.Empty" /> and <paramref name="count" /> is greater than 1.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2330">
            <paramref name="comparisonType" /> ist kein gültiger <see cref="T:System.StringComparison" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2330">
              <paramref name="comparisonType" /> is not a valid <see cref="T:System.StringComparison" /> value.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2331">
            <para>Zeichensätze enthalten Ignorierbare Zeichen, d. h. Zeichen, die beim Ausführen einer linguistischen oder kulturabhängigen Vergleichs nicht berücksichtigt werden. Bei einer kulturabhängige Suche (das heißt, wenn <paramref name="comparisonType" /> nicht <see cref="F:System.StringComparison.Ordinal" /> oder <see cref="F:System.StringComparison.OrdinalIgnoreCase" /> ist), bei der <paramref name="value" /> ein ignorierbares Zeichen enthält, ist das Ergebnis das gleiche wie bei einer Suche ohne dieses Zeichen. Wenn <paramref name="value" /> besteht nur aus ein oder mehrere Ignorierbare Zeichen, die <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> Methode gibt immer <paramref name="startIndex" />, d.h. die Zeichenposition, an dem die Suche beginnt.  Im folgenden Beispiel die <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> Methode wird verwendet, um die Position (U + 00AD) über einen bedingten Bindestrich gefolgt von einem "m" in allen jedoch der ersten Zeichenposition vor dem letzten "m" in zwei Zeichenfolgen zu suchen. Nur eine der Zeichenfolgen enthält die erforderliche Teilzeichenfolge. Wenn Sie das Beispiel ausgeführt wird, auf der [! Include[netfx40_short](~/Includes/netfx40-Short-MD.MD)] oder höher in beiden Fällen, da die bedingten Bindestrich ein ignorierbares Zeichen ist die Methode gibt den Index des "m" in der Zeichenfolge, wenn sie einen kulturabhängigen Vergleich ausführt. Wenn sie einen Ordinalvergleich ausführt, sucht er die Teilzeichenfolge jedoch nur in der ersten Zeichenfolge fest. Beachten Sie, dass bei der ersten Zeichenfolge, die den bedingten Bindestrich gefolgt von einem "m" enthält, die Methode ein Fehler auftritt, um den Index des bedingten Bindestrichs zurückzugeben, aber gibt stattdessen den Index des "m" aus, wenn er einen kulturabhängigen Vergleich ausführt. Die Methode gibt den Index des bedingten Bindestrichs in der ersten Zeichenfolge an, nur, wenn es sich um einen Ordinalvergleich ausführt.  [! Code-Csharp [System.String.LastIndexOf#24] (~/samples/snippets/csharp/VS_Snippets_CLR_System/System. String.LastIndexOf/cs/lastindexof24.cs#24)] [! Vb-Code [System.String.LastIndexOf#24] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System. String.LastIndexOf/vb/lastindexof24.vb#24)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2331">
              <para>Character sets include ignorable characters, which are characters that are not considered when performing a linguistic or culture-sensitive comparison. In a culture-sensitive search (that is, if <paramref name="comparisonType" /> is not <see cref="F:System.StringComparison.Ordinal" /> or <see cref="F:System.StringComparison.OrdinalIgnoreCase" />), if <paramref name="value" /> contains an ignorable character, the result is equivalent to searching with that character removed. If <paramref name="value" /> consists only of one or more ignorable characters, the <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> method always returns <paramref name="startIndex" />, which is the character position at which the search begins.  In the following example, the <see cref="M:System.String.LastIndexOf(System.String,System.Int32,System.Int32,System.StringComparison)" /> method is used to find the position of a soft hyphen (U+00AD) followed by an "m" in all but the first character position before the final "m" in two strings. Only one of the strings contains the required substring. If the example is run on the [!INCLUDE[netfx40_short](~/includes/netfx40-short-md.md)] or later, in both cases, because the soft hyphen is an ignorable character, the method returns the index of "m" in the string when it performs a culture-sensitive comparison. When it performs an ordinal comparison, however, it finds the substring only in the first string. Note that in the case of the first string, which includes the soft hyphen followed by an "m", the method fails to return the index of the soft hyphen but instead returns the index of the "m" when it performs a culture-sensitive comparison. The method returns the index of the soft hyphen in the first string only when it performs an ordinal comparison.  [!code-csharp[System.String.LastIndexOf#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.LastIndexOf/cs/lastindexof24.cs#24)] [!code-vb[System.String.LastIndexOf#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.LastIndexOf/vb/lastindexof24.vb#24)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOfAny">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2332">Gibt die NULL-basierte Indexposition des letzten Vorkommens eines oder mehrerer angegebener Zeichen eines Unicode-Arrays in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2332">Reports the zero-based index position of the last occurrence in this instance of one or more characters specified in a Unicode array.</span>
          </span>
          <span data-ttu-id="9380d-2333">Die Methode gibt -1 zurück, wenn die Zeichen im Array nicht in dieser Instanz gefunden werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2333">The method returns -1 if the characters in the array are not found in this instance.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOfAny">
      <MemberSignature Language="C#" Value="public int LastIndexOfAny (char[] anyOf);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOfAny(char[] anyOf) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOfAny(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOfAny (anyOf As Char()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOfAny(cli::array &lt;char&gt; ^ anyOf);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOfAny : char[] -&gt; int" Usage="string.LastIndexOfAny anyOf" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
      </Parameters>
      <Docs>
        <param name="anyOf">
          <span data-ttu-id="9380d-2334">Ein Array von Unicode-Zeichen mit mindestens einem zu suchenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2334">A Unicode character array containing one or more characters to seek.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2335">Gibt die NULL-basierte Indexposition des letzten Vorkommens eines oder mehrerer angegebener Zeichen eines Unicode-Arrays in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2335">Reports the zero-based index position of the last occurrence in this instance of one or more characters specified in a Unicode array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2336">Die Indexposition des letzten Vorkommens eines beliebigen Zeichens aus <paramref name="anyOf" /> in dieser Instanz. -1, wenn kein Zeichen in <paramref name="anyOf" /> gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2336">The index position of the last occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2337">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-2337">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="9380d-2338">Diese Methode beginnt die Suche an dieser Instanz der letzten Zeichenposition und verläuft rückwärts zum Anfang bis entweder ein Zeichen in `anyOf` gefunden wird oder die Position des erste Zeichens überprüft wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-2338">This method begins searching at the last character position of this instance and proceeds backward toward the beginning until either a character in `anyOf` is found or the first character position has been examined.</span></span> <span data-ttu-id="9380d-2339">Bei der Suche wird die Groß- und Kleinschreibung berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2339">The search is case-sensitive.</span></span>  
  
 <span data-ttu-id="9380d-2340">Diese Methode führt eine ordinale (kulturunabhängige) Suche, in dem ein Zeichen als gleich betrachtet, ein anderes Zeichen nur dann, wenn die Unicode-Skalarwerten identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2340">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="9380d-2341">Um eine kulturabhängige Suche durchzuführen, verwenden die <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> -Methode, in dem ein Unicode-Skalarwert, ein zusammengesetztes Zeichen, z. B. die Ligatur "Æ" (U + 00 C 6) betrachtet werden kann entspricht jedem Vorkommen des Zeichens-Komponenten in der Korrigieren Sie die Sequenz, wie z. B. "AE" (U + 0041, U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-2341">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2342">Im folgenden Beispiel wird der Index des letzten Vorkommens eines beliebigen Zeichens in der Zeichenfolge "is" in einer anderen Zeichenfolge gesucht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2342">The following example finds the index of the last occurrence of any character in the string "is" within another string.</span></span>  
  
 [!code-cpp[string.lastindexofany1#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.LastIndexOfAny1/CPP/lastixany1.cpp#1)]
 [!code-csharp[string.lastindexofany1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.LastIndexOfAny1/CS/lastixany1.cs#1)]
 [!code-vb[string.lastindexofany1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.LastIndexOfAny1/VB/lastixany1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2343">
            <paramref name="anyOf" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2343">
              <paramref name="anyOf" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOfAny">
      <MemberSignature Language="C#" Value="public int LastIndexOfAny (char[] anyOf, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOfAny(char[] anyOf, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOfAny(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOfAny (anyOf As Char(), startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOfAny : char[] * int -&gt; int" Usage="string.LastIndexOfAny (anyOf, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anyOf">
          <span data-ttu-id="9380d-2344">Ein Array von Unicode-Zeichen mit mindestens einem zu suchenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2344">A Unicode character array containing one or more characters to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-2345">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2345">The search starting position.</span>
          </span>
          <span data-ttu-id="9380d-2346">Die Suche wird von <c>startIndex</c> bis zum Anfang dieser Instanz fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2346">The search proceeds from <c>startIndex</c> toward the beginning of this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2347">Gibt die NULL-basierte Indexposition des letzten Vorkommens eines oder mehrerer angegebener Zeichen eines Unicode-Arrays in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2347">Reports the zero-based index position of the last occurrence in this instance of one or more characters specified in a Unicode array.</span>
          </span>
          <span data-ttu-id="9380d-2348">Die Suche beginnt an einer angegebenen Zeichenposition und wird rückwärts bis zum Anfang der Zeichenfolge fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2348">The search starts at a specified character position and proceeds backward toward the beginning of the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2349">Die Indexposition des letzten Vorkommens eines beliebigen Zeichens aus <paramref name="anyOf" /> in dieser Instanz. -1, wenn kein Zeichen in <paramref name="anyOf" /> gefunden wurde, oder wenn die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2349">The index position of the last occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found or if the current instance equals <see cref="F:System.String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2350">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-2350">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="9380d-2351">Diese Methode beginnt die Suche an der `startIndex` Zeichen Position dieser Instanz und wird fortgesetzt, bis entweder ein Zeichen in rückwärts `anyOf` gefunden wird oder die Position des erste Zeichens überprüft wurde.</span><span class="sxs-lookup"><span data-stu-id="9380d-2351">This method begins searching at the `startIndex` character position of this instance and proceeds backward toward the beginning until either a character in `anyOf` is found or the first character position has been examined.</span></span> <span data-ttu-id="9380d-2352">Bei der Suche wird die Groß- und Kleinschreibung berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2352">The search is case-sensitive.</span></span>  
  
 <span data-ttu-id="9380d-2353">Diese Methode führt eine ordinale (kulturunabhängige) Suche, in dem ein Zeichen als gleich betrachtet, ein anderes Zeichen nur dann, wenn die Unicode-Skalarwerten identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2353">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="9380d-2354">Um eine kulturabhängige Suche durchzuführen, verwenden die <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> -Methode, in dem ein Unicode-Skalarwert, ein zusammengesetztes Zeichen, z. B. die Ligatur "Æ" (U + 00 C 6) betrachtet werden kann entspricht jedem Vorkommen des Zeichens-Komponenten in der Korrigieren Sie die Sequenz, wie z. B. "AE" (U + 0041, U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-2354">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2355">Im folgenden Beispiel wird der Index des letzten Vorkommens eines beliebigen Zeichens in der Zeichenfolge "is" in einer Teilzeichenfolge einer anderen Zeichenfolge gesucht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2355">The following example finds the index of the last occurrence of any character in the string "is" within a substring of another string.</span></span>  
  
 [!code-cpp[string.lastindexofany2#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.LastIndexOfAny2/CPP/lastixany2.cpp#1)]
 [!code-csharp[string.lastindexofany2#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.LastIndexOfAny2/CS/lastixany2.cs#1)]
 [!code-vb[string.lastindexofany2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.LastIndexOfAny2/VB/lastixany2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2356">
            <paramref name="anyOf" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2356">
              <paramref name="anyOf" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2357">Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="startIndex" /> gibt eine Position an, die nicht innerhalb dieser Instanz liegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2357">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> specifies a position that is not within this instance.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOfAny">
      <MemberSignature Language="C#" Value="public int LastIndexOfAny (char[] anyOf, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 LastIndexOfAny(char[] anyOf, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.LastIndexOfAny(System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function LastIndexOfAny (anyOf As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int LastIndexOfAny(cli::array &lt;char&gt; ^ anyOf, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.LastIndexOfAny : char[] * int * int -&gt; int" Usage="string.LastIndexOfAny (anyOf, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="anyOf" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="anyOf">
          <span data-ttu-id="9380d-2358">Ein Array von Unicode-Zeichen mit mindestens einem zu suchenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2358">A Unicode character array containing one or more characters to seek.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="9380d-2359">Die Anfangsposition der Suche.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2359">The search starting position.</span>
          </span>
          <span data-ttu-id="9380d-2360">Die Suche wird von <c>startIndex</c> bis zum Anfang dieser Instanz fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2360">The search proceeds from <c>startIndex</c> toward the beginning of this instance.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-2361">Die Anzahl der zu überprüfenden Zeichenpositionen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2361">The number of character positions to examine.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2362">Gibt die NULL-basierte Indexposition des letzten Vorkommens eines oder mehrerer angegebener Zeichen eines Unicode-Arrays in dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2362">Reports the zero-based index position of the last occurrence in this instance of one or more characters specified in a Unicode array.</span>
          </span>
          <span data-ttu-id="9380d-2363">Die Suche beginnt an einer angegebenen Zeichenposition und verläuft für eine angegebene Anzahl von Zeichenpositionen rückwärts zum Anfang der Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2363">The search starts at a specified character position and proceeds backward toward the beginning of the string for a specified number of character positions.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2364">Die Indexposition des letzten Vorkommens eines beliebigen Zeichens aus <paramref name="anyOf" /> in dieser Instanz. -1, wenn kein Zeichen in <paramref name="anyOf" /> gefunden wurde, oder wenn die aktuelle Instanz gleich <see cref="F:System.String.Empty" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2364">The index position of the last occurrence in this instance where any character in <paramref name="anyOf" /> was found; -1 if no character in <paramref name="anyOf" /> was found or if the current instance equals <see cref="F:System.String.Empty" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2365">Der Index die Nummerierung beginnt bei 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-2365">Index numbering starts from zero.</span></span>  
  
 <span data-ttu-id="9380d-2366">Diese Methode beginnt die Suche an der `startIndex` Zeichen Position dieser Instanz und wird fortgesetzt, bis entweder ein Zeichen in rückwärts `anyOf` gefunden wird oder `count` Zeichenpositionen überprüft wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2366">This method begins searching at the `startIndex` character position of this instance and proceeds backward toward the beginning until either a character in `anyOf` is found or `count` character positions have been examined.</span></span> <span data-ttu-id="9380d-2367">Bei der Suche wird die Groß- und Kleinschreibung berücksichtigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2367">The search is case-sensitive.</span></span>  
  
 <span data-ttu-id="9380d-2368">Diese Methode führt eine ordinale (kulturunabhängige) Suche, in dem ein Zeichen als gleich betrachtet, ein anderes Zeichen nur dann, wenn die Unicode-Skalarwerten identisch sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2368">This method performs an ordinal (culture-insensitive) search, where a character is considered equivalent to another character only if their Unicode scalar values are the same.</span></span> <span data-ttu-id="9380d-2369">Um eine kulturabhängige Suche durchzuführen, verwenden die <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> -Methode, in dem ein Unicode-Skalarwert, ein zusammengesetztes Zeichen, z. B. die Ligatur "Æ" (U + 00 C 6) betrachtet werden kann entspricht jedem Vorkommen des Zeichens-Komponenten in der Korrigieren Sie die Sequenz, wie z. B. "AE" (U + 0041, U + 0045), je nach Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-2369">To perform a culture-sensitive search, use the <xref:System.Globalization.CompareInfo.LastIndexOf%2A?displayProperty=nameWithType> method, where a Unicode scalar value representing a precomposed character, such as the ligature "Æ" (U+00C6), might be considered equivalent to any occurrence of the character's components in the correct sequence, such as "AE" (U+0041, U+0045), depending on the culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2370">Das folgende Beispiel sucht den Index des letzten Vorkommens eines beliebigen Zeichens aus der Zeichenfolge "Hilfe" in einer Teilzeichenfolge einer anderen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2370">The following example finds the index of the last occurrence of any character in the string "aid" within a substring of another string.</span></span>  
  
 [!code-cpp[string.lastindexofany3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.LastIndexOfAny3/CPP/lastixany3.cpp#1)]
 [!code-csharp[string.lastindexofany3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.LastIndexOfAny3/CS/lastixany3.cs#1)]
 [!code-vb[string.lastindexofany3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.LastIndexOfAny3/VB/lastixany3.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2371">
            <paramref name="anyOf" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2371">
              <paramref name="anyOf" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2372">Die aktuelle Instanz entspricht nicht <see cref="F:System.String.Empty" />, und <paramref name="count" /> oder <paramref name="startIndex" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2372">The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="count" /> or <paramref name="startIndex" /> is negative.</span>
          </span>
          <span data-ttu-id="9380d-2373">Oder:  Die aktuelle Instanz ist nicht gleich <see cref="F:System.String.Empty" />, und <paramref name="startIndex" />–<paramref name="count" />+1 ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2373">-or-  The current instance does not equal <see cref="F:System.String.Empty" />, and <paramref name="startIndex" /> minus <paramref name="count" /> + 1 is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="T:System.Array" />
        <altmember cref="M:System.String.IndexOf(System.Char)" />
        <altmember cref="M:System.String.IndexOfAny(System.Char[])" />
        <altmember cref="M:System.String.LastIndexOf(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.String.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.string.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2374">Ruft die Anzahl der Zeichen im aktuellen <see cref="T:System.String" />-Objekt ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2374">Gets the number of characters in the current <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="9380d-2375">Die Anzahl der Zeichen in der aktuellen Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2375">The number of characters in the current string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2376">Die <xref:System.String.Length%2A> Eigenschaft gibt die Anzahl der <xref:System.Char> Objekte in dieser Instanz, nicht die Anzahl der Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2376">The <xref:System.String.Length%2A> property returns the number of <xref:System.Char> objects in this instance, not the number of Unicode characters.</span></span> <span data-ttu-id="9380d-2377">Der Grund ist, dass ein Unicode-Zeichen kann, von mehr als einem dargestellt werden <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2377">The reason is that a Unicode character might be represented by more than one <xref:System.Char>.</span></span> <span data-ttu-id="9380d-2378">Verwenden der <xref:System.Globalization.StringInfo?displayProperty=nameWithType> -Klasse statt auf jedes Unicode-Zeichen verwendet <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2378">Use the <xref:System.Globalization.StringInfo?displayProperty=nameWithType> class to work with each Unicode character instead of each <xref:System.Char>.</span></span>  
  
 <span data-ttu-id="9380d-2379">In einigen Sprachen wie C und C++ gibt ein Null-Zeichen am Ende einer Zeichenfolge an.</span><span class="sxs-lookup"><span data-stu-id="9380d-2379">In some languages, such as C and C++, a null character indicates the end of a string.</span></span> <span data-ttu-id="9380d-2380">In .NET Framework kann ein Null-Zeichen in einer Zeichenfolge eingebettet werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2380">In the .NET Framework, a null character can be embedded in a string.</span></span> <span data-ttu-id="9380d-2381">Wenn eine Zeichenfolge, ein oder mehrere Null-Zeichen enthält, werden sie in die Länge der Zeichenfolge enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2381">When a string includes one or more null characters, they are included in the length of the total string.</span></span> <span data-ttu-id="9380d-2382">Z. B. in der folgenden Zeichenfolge, das die Teilzeichenfolgen, die "Abc" und "Def" durch ein Null-Zeichen getrennt sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2382">For example, in the following string, the substrings "abc" and "def" are separated by a null character.</span></span> <span data-ttu-id="9380d-2383">Die <xref:System.String.Length%2A> Eigenschaft zurückgibt, 7, was bedeutet, dass sie die sechs Buchstaben als auch für das Null-Zeichen enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-2383">The <xref:System.String.Length%2A> property returns 7, which indicates that it includes the six alphabetic characters as well as the null character.</span></span>  
  
 [!code-cpp[System.String.Class#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Class/cpp/system.string.class.cpp#1)]
 [!code-csharp[System.String.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Class/cs/System.String.Class.cs#1)]
 [!code-vb[System.String.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Class/vb/System.String.Class.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2384">Das folgende Beispiel zeigt die <xref:System.String.Length%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9380d-2384">The following example demonstrates the <xref:System.String.Length%2A> property.</span></span>  
  
 [!code-cpp[string.length#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.length/CPP/length.cpp#1)]
 [!code-csharp[string.length#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.length/CS/length.cs#1)]
 [!code-vb[string.length#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.length/VB/length.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Normalize">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2385">Gibt eine neue Zeichenfolge zurück, deren binäre Darstellung in einer bestimmten Unicode-Normalisierungsform vorliegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2385">Returns a new string whose binary representation is in a particular Unicode normalization form.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public string Normalize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Normalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Normalize" />
      <MemberSignature Language="VB.NET" Value="Public Function Normalize () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Normalize();" />
      <MemberSignature Language="F#" Value="member this.Normalize : unit -&gt; string" Usage="string.Normalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2386">Gibt eine neue Zeichenfolge zurück, deren Textwert mit dieser Zeichenfolge übereinstimmt, deren binäre Darstellung jedoch in der Unicode-Normalisierungsform C vorliegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2386">Returns a new string whose textual value is the same as this string, but whose binary representation is in Unicode normalization form C.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2387">Eine neue normalisierte Zeichenfolge, deren Textwert mit dieser Zeichenfolge übereinstimmt, deren binäre Darstellung jedoch in der Normalisierungsform C vorliegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2387">A new, normalized string whose textual value is the same as this string, but whose binary representation is in normalization form C.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2388">Einige Unicode-Zeichen umfassen mehrere entsprechende binärdarstellungen bestehend aus Gruppen von der Kombination von und/oder zusammengesetzte Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2388">Some Unicode characters have multiple equivalent binary representations consisting of sets of combining and/or composite Unicode characters.</span></span> <span data-ttu-id="9380d-2389">Beispielsweise kann eine der folgenden Code verweist den Buchstaben "ắ" darstellen:</span><span class="sxs-lookup"><span data-stu-id="9380d-2389">For example, any of the following code points can represent the letter "ắ":</span></span>  
  
-   <span data-ttu-id="9380d-2390">U + 1EAF</span><span class="sxs-lookup"><span data-stu-id="9380d-2390">U+1EAF</span></span>  
  
-   <span data-ttu-id="9380d-2391">U + 0103 U + 0301</span><span class="sxs-lookup"><span data-stu-id="9380d-2391">U+0103 U+0301</span></span>  
  
-   <span data-ttu-id="9380d-2392">U + 0061 U + 0306 U + 0301</span><span class="sxs-lookup"><span data-stu-id="9380d-2392">U+0061 U+0306 U+0301</span></span>  
  
 <span data-ttu-id="9380d-2393">Das Vorhandensein mehrerer Darstellungen für ein einzelnes Zeichen erschwert suchen, sortieren, Abgleich und andere Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2393">The existence of multiple representations for a single character complicates searching, sorting, matching, and other operations.</span></span>  
  
 <span data-ttu-id="9380d-2394">Die Unicode-standard definiert einen Prozess namens Normalisierung, die eine binäre Darstellung, wenn jede der entsprechende binäre Darstellung eines Zeichens zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2394">The Unicode standard defines a process called normalization that returns one binary representation when given any of the equivalent binary representations of a character.</span></span> <span data-ttu-id="9380d-2395">Normalisierung kann ausgeführt werden, mit mehreren Algorithmen, die genannte Normalisierungsformen, die unterschiedliche Regeln einhalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2395">Normalization can be performed with several algorithms, called normalization forms, that obey different rules.</span></span> <span data-ttu-id="9380d-2396">.NET Framework unterstützt vier Normalisierungsformen (C, D, KC und KD), die durch die Unicode-Standard definiert sind. Wenn zwei Zeichenfolgen in der gleichen Normalisierungsform dargestellt werden, werden mithilfe von ordinalen Vergleich verglichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2396">The .NET Framework supports the four normalization forms (C, D, KC, and KD)that are defined by the Unicode standard.When two strings are represented in the same normalization form, theycan be compared by using ordinal comparison.</span></span>  
  
 <span data-ttu-id="9380d-2397">Um zu normalisieren, und Vergleichen von zwei Zeichenfolgen, führen Sie folgende Schritte aus:</span><span class="sxs-lookup"><span data-stu-id="9380d-2397">To normalize and compare two strings, do the following:</span></span>  
  
1.  <span data-ttu-id="9380d-2398">Rufen Sie die Zeichenfolgen, aus der Eingabequelle, z. B. eine Datei oder ein Eingabegerät Benutzer verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9380d-2398">Obtain the strings to be compared from an input source, such as a file or a user input device.</span></span>  
  
2.  <span data-ttu-id="9380d-2399">Rufen Sie die <xref:System.String.Normalize> Methode, um die Zeichenfolgen in der Normalisierungsform c normalisieren</span><span class="sxs-lookup"><span data-stu-id="9380d-2399">Call the <xref:System.String.Normalize> method to normalize the strings to normalization form C.</span></span>  
  
3.  <span data-ttu-id="9380d-2400">Um zwei Zeichenfolgen zu vergleichen, rufen Sie eine Methode, Ordinalzeichenfolgenvergleich mit, wie z. B. unterstützt, die <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> -Methode, und geben Sie den Wert <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> oder <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> als die <xref:System.StringComparison> Argument.</span><span class="sxs-lookup"><span data-stu-id="9380d-2400">To compare two strings, call a method that supports ordinal string comparison, such as the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> method, and supply a value of <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> or <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> as the <xref:System.StringComparison> argument.</span></span> <span data-ttu-id="9380d-2401">Um ein Array mit normalisierten Zeichenfolgen zu sortieren, übergeben Sie einen `comparer` Wert <xref:System.StringComparer.Ordinal%2A?displayProperty=nameWithType> oder <xref:System.StringComparer.OrdinalIgnoreCase%2A?displayProperty=nameWithType> an eine geeignete Überladung der <xref:System.Array.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2401">To sort an array of normalized strings, pass a `comparer` value of <xref:System.StringComparer.Ordinal%2A?displayProperty=nameWithType> or <xref:System.StringComparer.OrdinalIgnoreCase%2A?displayProperty=nameWithType> to an appropriate overload of <xref:System.Array.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
4.  <span data-ttu-id="9380d-2402">Geben Sie die Zeichenfolgen in der sortierten Ausgabe basierend auf der im vorherigen Schritt angegebenen Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2402">Emit the strings in the sorted output based on the order indicated by the previous step.</span></span>  
  
 <span data-ttu-id="9380d-2403">Eine Beschreibung der unterstützten Unicode-Normalisierungsformen, finden Sie unter <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2403">For a description of supported Unicode normalization forms, see <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2404">Im folgenden Beispiel wird eine Zeichenfolge, die jede der vier Normalisierungsformen normalisiert, normalisiert und bestätigt die Zeichenfolge wurde in die angegebene Normalisierungsform, die den Codepunkten in die normalisierte Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2404">The following example normalizes a string to each of four normalization forms, confirms the string was normalized to the specified normalization form, then lists the code points in the normalized string.</span></span>  
  
 [!code-cpp[string.normalize#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.normalize/CPP/norm.cpp#1)]
 [!code-csharp[string.normalize#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.normalize/CS/norm.cs#1)]
 [!code-vb[string.normalize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.normalize/VB/norm.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2405">Die aktuelle Instanz enthält ungültige Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2405">The current instance contains invalid Unicode characters.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2406">
            <para>Die <see cref="Overload:System.String.IsNormalized" /> Methodenrückgabe <see langword="false" /> , sobald es feststellt, dass das erste Zeichen der nicht normalisierte in einer Zeichenfolge. Aus diesem Grund, wenn eine Zeichenfolge nicht normalisierte Zeichen gefolgt von ungültigen Unicode-Zeichen, enthält die <see cref="Overload:System.String.Normalize" /> Methode löst eine <see cref="T:System.ArgumentException" /> zwar <see cref="Overload:System.String.IsNormalized" /> gibt <see langword="false" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2406">
              <para>The <see cref="Overload:System.String.IsNormalized" /> method returns <see langword="false" /> as soon as it encounters the first non-normalized character in a string. Therefore, if a string contains non-normalized characters followed by invalid Unicode characters, the <see cref="Overload:System.String.Normalize" /> method will throw an <see cref="T:System.ArgumentException" /> although <see cref="Overload:System.String.IsNormalized" /> returns <see langword="false" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.IsNormalized" />
      </Docs>
    </Member>
    <Member MemberName="Normalize">
      <MemberSignature Language="C#" Value="public string Normalize (System.Text.NormalizationForm normalizationForm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Normalize(valuetype System.Text.NormalizationForm normalizationForm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Normalize(System.Text.NormalizationForm)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Normalize(System::Text::NormalizationForm normalizationForm);" />
      <MemberSignature Language="F#" Value="member this.Normalize : System.Text.NormalizationForm -&gt; string" Usage="string.Normalize normalizationForm" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="normalizationForm" Type="System.Text.NormalizationForm" />
      </Parameters>
      <Docs>
        <param name="normalizationForm">
          <span data-ttu-id="9380d-2407">Eine Unicode-Normalisierungsform.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2407">A Unicode normalization form.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2408">Gibt eine neue Zeichenfolge zurück, deren Textwert mit dieser Zeichenfolge übereinstimmt, deren binäre Darstellung jedoch in der angegebenen Unicode-Normalisierungsform vorliegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2408">Returns a new string whose textual value is the same as this string, but whose binary representation is in the specified Unicode normalization form.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2409">Eine neue Zeichenfolge, deren Textwert mit dieser Zeichenfolge übereinstimmt, deren binäre Darstellung jedoch in der im <paramref name="normalizationForm" />-Parameter angegebenen Normalisierungsform vorliegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2409">A new string whose textual value is the same as this string, but whose binary representation is in the normalization form specified by the <paramref name="normalizationForm" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2410">Einige Unicode-Zeichen umfassen mehrere entsprechende binärdarstellungen bestehend aus Gruppen von der Kombination von und/oder zusammengesetzte Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2410">Some Unicode characters have multiple equivalent binary representations consisting of sets of combining and/or composite Unicode characters.</span></span> <span data-ttu-id="9380d-2411">Das Vorhandensein mehrerer Darstellungen für ein einzelnes Zeichen erschwert suchen, sortieren, Abgleich und andere Vorgänge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2411">The existence of multiple representations for a single character complicates searching, sorting, matching, and other operations.</span></span>  
  
 <span data-ttu-id="9380d-2412">Die Unicode-standard definiert einen Prozess namens Normalisierung, die eine binäre Darstellung, wenn jede der entsprechende binäre Darstellung eines Zeichens zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2412">The Unicode standard defines a process called normalization that returns one binary representation when given any of the equivalent binary representations of a character.</span></span> <span data-ttu-id="9380d-2413">Normalisierung kann ausgeführt werden, mit mehreren Algorithmen, die genannte Normalisierungsformen, die unterschiedliche Regeln einhalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2413">Normalization can be performed with several algorithms, called normalization forms, that obey different rules.</span></span> <span data-ttu-id="9380d-2414">.NET Framework unterstützt vier Normalisierungsformen (C, D, KC und KD), die durch die Unicode-Standard definiert sind. Wenn zwei Zeichenfolgen in der gleichen Normalisierungsform dargestellt werden, können sie mithilfe von ordinalen Vergleich verglichen werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2414">The .NET Framework supports the four normalization forms (C, D, KC, and KD)that are defined by the Unicode standard.When two strings are represented in the same normalization form, they can be compared by using ordinal comparison.</span></span>  
  
 <span data-ttu-id="9380d-2415">Um zu normalisieren, und Vergleichen von zwei Zeichenfolgen, führen Sie folgende Schritte aus:</span><span class="sxs-lookup"><span data-stu-id="9380d-2415">To normalize and compare two strings, do the following:</span></span>  
  
1.  <span data-ttu-id="9380d-2416">Rufen Sie die Zeichenfolgen, aus der Eingabequelle, z. B. eine Datei oder ein Eingabegerät Benutzer verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="9380d-2416">Obtain the strings to be compared from an input source, such as a file or a user input device.</span></span>  
  
2.  <span data-ttu-id="9380d-2417">Rufen Sie die <xref:System.String.Normalize%28System.Text.NormalizationForm%29> Methode, um die Zeichenfolgen in einer angegebenen Normalisierungsform zu normalisieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-2417">Call the <xref:System.String.Normalize%28System.Text.NormalizationForm%29> method to normalize the strings to a specified normalization form.</span></span>  
  
3.  <span data-ttu-id="9380d-2418">Um zwei Zeichenfolgen zu vergleichen, rufen Sie eine Methode, Ordinalzeichenfolgenvergleich mit, wie z. B. unterstützt, die <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> -Methode, und geben Sie den Wert <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> oder <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> als die <xref:System.StringComparison> Argument.</span><span class="sxs-lookup"><span data-stu-id="9380d-2418">To compare two strings, call a method that supports ordinal string comparison, such as the <xref:System.String.Compare%28System.String%2CSystem.String%2CSystem.StringComparison%29> method, and supply a value of <xref:System.StringComparison.Ordinal?displayProperty=nameWithType> or <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType> as the <xref:System.StringComparison> argument.</span></span> <span data-ttu-id="9380d-2419">Um ein Array mit normalisierten Zeichenfolgen zu sortieren, übergeben Sie einen `comparer` Wert <xref:System.StringComparer.Ordinal%2A?displayProperty=nameWithType> oder <xref:System.StringComparer.OrdinalIgnoreCase%2A?displayProperty=nameWithType> an eine geeignete Überladung der <xref:System.Array.Sort%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2419">To sort an array of normalized strings, pass a `comparer` value of <xref:System.StringComparer.Ordinal%2A?displayProperty=nameWithType> or <xref:System.StringComparer.OrdinalIgnoreCase%2A?displayProperty=nameWithType> to an appropriate overload of <xref:System.Array.Sort%2A?displayProperty=nameWithType>.</span></span>  
  
4.  <span data-ttu-id="9380d-2420">Geben Sie die Zeichenfolgen in der sortierten Ausgabe basierend auf der im vorherigen Schritt angegebenen Reihenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2420">Emit the strings in the sorted output based on the order indicated by the previous step.</span></span>  
  
 <span data-ttu-id="9380d-2421">Eine Beschreibung der unterstützten Unicode-Normalisierungsformen, finden Sie unter <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2421">For a description of supported Unicode normalization forms, see <xref:System.Text.NormalizationForm?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2422">Im folgenden Beispiel wird eine Zeichenfolge, die jede der vier Normalisierungsformen normalisiert, normalisiert und bestätigt die Zeichenfolge wurde in die angegebene Normalisierungsform, die den Codepunkten in die normalisierte Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2422">The following example normalizes a string to each of four normalization forms, confirms the string was normalized to the specified normalization form, then lists the code points in the normalized string.</span></span>  
  
 [!code-cpp[string.normalize#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.normalize/CPP/norm.cpp#1)]
 [!code-csharp[string.normalize#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.normalize/CS/norm.cs#1)]
 [!code-vb[string.normalize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.normalize/VB/norm.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2423">Die aktuelle Instanz enthält ungültige Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2423">The current instance contains invalid Unicode characters.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2424">
            <para>Die <see cref="Overload:System.String.IsNormalized" /> Methodenrückgabe <see langword="false" /> , sobald es feststellt, dass das erste Zeichen der nicht normalisierte in einer Zeichenfolge. Aus diesem Grund, wenn eine Zeichenfolge nicht normalisierte Zeichen gefolgt von ungültigen Unicode-Zeichen enthält die <see cref="Overload:System.String.Normalize" /> Methode Auslösen einer <see cref="T:System.ArgumentException" /> zwar <see cref="Overload:System.String.IsNormalized" /> gibt <see langword="false" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2424">
              <para>The <see cref="Overload:System.String.IsNormalized" /> method returns <see langword="false" /> as soon as it encounters the first non-normalized character in a string. Therefore, if a string contains non-normalized characters followed by invalid Unicode characters, the <see cref="Overload:System.String.Normalize" /> method may throw an <see cref="T:System.ArgumentException" /> although <see cref="Overload:System.String.IsNormalized" /> returns <see langword="false" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.IsNormalized" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (string a, string b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(string a, string b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.op_Equality(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (a As String, b As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::String ^ a, System::String ^ b);" />
      <MemberSignature Language="F#" Value="static member ( = ) : string * string -&gt; bool" Usage="a = b" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.String" />
        <Parameter Name="b" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="9380d-2425">Die erste Zeichenfolge für den Vergleich oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2425">The first string to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="9380d-2426">Die zweite Zeichenfolge für den Vergleich oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2426">The second string to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2427">Bestimmt, ob zwei angegebene Zeichenfolgen denselben Wert haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2427">Determines whether two specified strings have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2428">
            <see langword="true" />, wenn <paramref name="a" /> und <paramref name="b" /> denselben Wert haben, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2428">
              <see langword="true" /> if the value of <paramref name="a" /> is the same as the value of <paramref name="b" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2429">Die <xref:System.String.op_Equality%2A> Methode definiert, den Vorgang des Gleichheitsoperators für die <xref:System.String> Klasse.</span><span class="sxs-lookup"><span data-stu-id="9380d-2429">The <xref:System.String.op_Equality%2A> method defines the operation of the equality operator for the <xref:System.String> class.</span></span> <span data-ttu-id="9380d-2430">Sie können Code wie z. B. "Beispiel" angezeigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2430">It enables code such as that shown in the Example section.</span></span> <span data-ttu-id="9380d-2431">Der Operator ruft wiederum die statische <xref:System.String.Equals%28System.String%2CSystem.String%29> Methode, die einen Ordinalvergleich der (Groß-/Kleinschreibung beachtet und kulturunabhängige) ausführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2431">The operator, in turn, calls the static <xref:System.String.Equals%28System.String%2CSystem.String%29> method, which performs an ordinal (case-sensitive and culture-insensitive) comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-2432">Visual Basic-Compiler löst nicht den Gleichheitsoperator als Aufruf an die <xref:System.String.op_Equality%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2432">The Visual Basic compiler does not resolve the equality operator as a call to the <xref:System.String.op_Equality%2A> method.</span></span> <span data-ttu-id="9380d-2433">Stattdessen der Gleichheitsoperator umschließt einen Aufruf der <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2433">Instead, the equality operator wraps a call to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2434">Das folgende Beispiel zeigt den Equality-Operator.</span><span class="sxs-lookup"><span data-stu-id="9380d-2434">The following example demonstrates the equality operator.</span></span>  
  
 [!code-cpp[system.string.equality#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Equality/CPP/equalityop.cpp#1)]
 [!code-csharp[system.string.equality#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Equality/CS/equalityop.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator ReadOnlySpan&lt;char&gt; (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname valuetype System.ReadOnlySpan`1&lt;char&gt; op_Implicit(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.op_Implicit(System.String)~System.ReadOnlySpan{System.Char}" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (value As String) As ReadOnlySpan(Of Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator ReadOnlySpan&lt;char&gt;(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; ReadOnlySpan&lt;char&gt;" Usage="System.string.op_Implicit value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (string a, string b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(string a, string b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.op_Inequality(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (a As String, b As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::String ^ a, System::String ^ b);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : string * string -&gt; bool" Usage="System.string.op_Inequality (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.String" />
        <Parameter Name="b" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="a">
          <span data-ttu-id="9380d-2435">Die erste Zeichenfolge für den Vergleich oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2435">The first string to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="b">
          <span data-ttu-id="9380d-2436">Die zweite Zeichenfolge für den Vergleich oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2436">The second string to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2437">Bestimmt, ob zwei angegebene Zeichenfolgen verschiedene Werte haben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2437">Determines whether two specified strings have different values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2438">
            <see langword="true" />, wenn der Wert von <paramref name="a" /> vom Wert von <paramref name="b" /> verschieden ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2438">
              <see langword="true" /> if the value of <paramref name="a" /> is different from the value of <paramref name="b" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2439">Die <xref:System.String.op_Inequality%2A> Methode definiert, den Vorgang des Ungleichheitsoperators für die <xref:System.String> Klasse.</span><span class="sxs-lookup"><span data-stu-id="9380d-2439">The <xref:System.String.op_Inequality%2A> method defines the operation of the inequality operator for the <xref:System.String> class.</span></span>   <span data-ttu-id="9380d-2440">Sie können Code wie im Abschnitt "Beispiele".</span><span class="sxs-lookup"><span data-stu-id="9380d-2440">It enables code such as that shown in the Examples section.</span></span>  
  
 <span data-ttu-id="9380d-2441">Die <xref:System.String.op_Inequality%2A> Operator ruft wiederum die statische <xref:System.String.Equals%28System.String%2CSystem.String%29> Methode, die einen Ordinalvergleich der (Groß-/Kleinschreibung beachtet und kulturunabhängige) ausführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2441">The <xref:System.String.op_Inequality%2A> operator in turn calls the static <xref:System.String.Equals%28System.String%2CSystem.String%29> method, which  performs an ordinal (case-sensitive and culture-insensitive) comparison.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-2442">Visual Basic-Compiler löst den Inequality-Operator nicht als Aufruf an die <xref:System.String.op_Inequality%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2442">The Visual Basic compiler does not resolve the inequality operator as a call to the <xref:System.String.op_Inequality%2A> method.</span></span> <span data-ttu-id="9380d-2443">Stattdessen der Inequality-Operator umschließt einen Aufruf der <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2443">Instead, the inequality operator wraps a call to the <xref:Microsoft.VisualBasic.CompilerServices.Operators.CompareString%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2444">Das folgende Beispiel zeigt den Inequality-Operator.</span><span class="sxs-lookup"><span data-stu-id="9380d-2444">The following example demonstrates the inequality operator.</span></span>  
  
 [!code-cpp[system.string.inequality#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Inequality/CPP/inequalityop.cpp#1)]
 [!code-csharp[system.string.inequality#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Inequality/CS/inequalityop.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="PadLeft">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2445">Gibt eine neue Zeichenfolge mit einer angegebenen Länge zurück, in der der Anfang der aktuellen Zeichenfolge mit Leerzeichen oder einem angegebenen Unicode-Zeichen aufgefüllt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2445">Returns a new string of a specified length in which the beginning of the current string is padded with spaces or with a specified Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PadLeft">
      <MemberSignature Language="C#" Value="public string PadLeft (int totalWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PadLeft(int32 totalWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.PadLeft(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PadLeft (totalWidth As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PadLeft(int totalWidth);" />
      <MemberSignature Language="F#" Value="member this.PadLeft : int -&gt; string" Usage="string.PadLeft totalWidth" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="totalWidth">
          <span data-ttu-id="9380d-2446">Die Anzahl der Zeichen in der resultierenden Zeichenfolge, entsprechend der Anzahl der ursprünglichen Zeichen zuzüglich aller zusätzlichen Füllzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2446">The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2447">Gibt eine neue Zeichenfolge zurück, bei der die Zeichen in dieser Instanz rechtsbündig ausgerichtet werden, indem die linke Seite mit Leerzeichen aufgefüllt wird, um eine angegebene Gesamtlänge zu erreichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2447">Returns a new string that right-aligns the characters in this instance by padding them with spaces on the left, for a specified total length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2448">Eine neue Zeichenfolge, die dieser Instanz entspricht, jedoch rechtsbündig ausgerichtet und links mit Leerzeichen aufgefüllt ist, sodass die Länge <paramref name="totalWidth" /> erreicht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2448">A new string that is equivalent to this instance, but right-aligned and padded on the left with as many spaces as needed to create a length of <paramref name="totalWidth" />.</span>
          </span>
          <span data-ttu-id="9380d-2449">Wenn <paramref name="totalWidth" /> jedoch kleiner als die Länge dieser Instanz ist, gibt die Methode einen Verweis auf die vorhandene Instanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2449">However, if <paramref name="totalWidth" /> is less than the length of this instance, the method returns a reference to the existing instance.</span>
          </span>
          <span data-ttu-id="9380d-2450">Wenn <paramref name="totalWidth" /> gleich der Länge dieser Instanz ist, gibt die Methode eine neue Zeichenfolge zurück, die mit dieser Instanz identisch ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2450">If <paramref name="totalWidth" /> is equal to the length of this instance, the method returns a new string that is identical to this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2451">Ein Unicodeleerzeichen wird als hexadezimale 0 x 0020 definiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-2451">A Unicode space is defined as hexadecimal 0x0020.</span></span>  
  
 <span data-ttu-id="9380d-2452">Die <xref:System.String.PadLeft%28System.Int32%29> Methode füllt den Anfang der zurückgegebenen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2452">The <xref:System.String.PadLeft%28System.Int32%29> method pads the beginning of the returned string.</span></span> <span data-ttu-id="9380d-2453">Dies bedeutet, dass bei Verwendung mit rechts-nach-links-Sprachen den rechten Teil der Zeichenfolge aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2453">This means that, when used with right-to-left languages, it pads the right portion of the string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-2454">Wenn die <xref:System.String.PadLeft%2A> Methode füllt die aktuelle Instanz mit Leerraumzeichen, diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-2454">If the <xref:System.String.PadLeft%2A> method pads the current instance with whitespace characters, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-2455">Stattdessen wird eine neue Zeichenfolge, die mit einem führenden Leerzeichen aufgefüllt wird, damit die Gesamtlänge `totalWidth` Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2455">Instead, it returns a new string that is padded with leading white space so that its total length is `totalWidth` characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2456">Das folgende Beispiel veranschaulicht die <xref:System.String.PadLeft%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2456">The following example demonstrates the <xref:System.String.PadLeft%2A> method.</span></span>  
  
 [!code-cpp[Classic String.PadLeft Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic String.PadLeft Example/CPP/source.cpp#1)]
 [!code-csharp[Classic String.PadLeft Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic String.PadLeft Example/CS/source.cs#1)]
 [!code-vb[Classic String.PadLeft Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic String.PadLeft Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2457">
            <paramref name="totalWidth" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2457">
              <paramref name="totalWidth" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.PadRight(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="PadLeft">
      <MemberSignature Language="C#" Value="public string PadLeft (int totalWidth, char paddingChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PadLeft(int32 totalWidth, char paddingChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.PadLeft(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function PadLeft (totalWidth As Integer, paddingChar As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PadLeft(int totalWidth, char paddingChar);" />
      <MemberSignature Language="F#" Value="member this.PadLeft : int * char -&gt; string" Usage="string.PadLeft (totalWidth, paddingChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalWidth" Type="System.Int32" />
        <Parameter Name="paddingChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="totalWidth">
          <span data-ttu-id="9380d-2458">Die Anzahl der Zeichen in der resultierenden Zeichenfolge, entsprechend der Anzahl der ursprünglichen Zeichen zuzüglich aller zusätzlichen Füllzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2458">The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</span>
          </span>
        </param>
        <param name="paddingChar">
          <span data-ttu-id="9380d-2459">Ein Unicode-Füllzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2459">A Unicode padding character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2460">Gibt eine neue Zeichenfolge zurück, bei der die Zeichen in dieser Instanz rechtsbündig ausgerichtet werden, indem die linke Seite mit einem angegebenen Unicode-Zeichen aufgefüllt wird, um eine angegebene Gesamtlänge zu erreichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2460">Returns a new string that right-aligns the characters in this instance by padding them on the left with a specified Unicode character, for a specified total length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2461">Eine neue Zeichenfolge, die dieser Instanz entspricht, jedoch rechtsbündig ausgerichtet und links mit <paramref name="paddingChar" />-Zeichen aufgefüllt ist, sodass die Länge <paramref name="totalWidth" /> erreicht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2461">A new string that is equivalent to this instance, but right-aligned and padded on the left with as many <paramref name="paddingChar" /> characters as needed to create a length of <paramref name="totalWidth" />.</span>
          </span>
          <span data-ttu-id="9380d-2462">Wenn <paramref name="totalWidth" /> jedoch kleiner als die Länge dieser Instanz ist, gibt die Methode einen Verweis auf die vorhandene Instanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2462">However, if <paramref name="totalWidth" /> is less than the length of this instance, the method returns a reference to the existing instance.</span>
          </span>
          <span data-ttu-id="9380d-2463">Wenn <paramref name="totalWidth" /> gleich der Länge dieser Instanz ist, gibt die Methode eine neue Zeichenfolge zurück, die mit dieser Instanz identisch ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2463">If <paramref name="totalWidth" /> is equal to the length of this instance, the method returns a new string that is identical to this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2464">Die <xref:System.String.PadLeft%28System.Int32%2CSystem.Char%29> Methode füllt den Anfang der zurückgegebenen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2464">The <xref:System.String.PadLeft%28System.Int32%2CSystem.Char%29> method pads the beginning of the returned string.</span></span> <span data-ttu-id="9380d-2465">Dies bedeutet, dass bei Verwendung mit rechts-nach-links-Sprachen den rechten Teil der Zeichenfolge aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2465">This means that, when used with right-to-left languages, it pads the right portion of the string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-2466">Wenn die <xref:System.String.PadLeft%2A> Methode füllt die aktuelle Instanz mit Leerraumzeichen, diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-2466">If the <xref:System.String.PadLeft%2A> method pads the current instance with whitespace characters, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-2467">Stattdessen wird eine neue Zeichenfolge, die mit führenden aufgefüllt wird `paddingChar` Zeichen, damit die Gesamtlänge `totalWidth` Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2467">Instead, it returns a new string that is padded with leading `paddingChar` characters so that its total length is `totalWidth` characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2468">Das folgende Beispiel veranschaulicht die <xref:System.String.PadLeft%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2468">The following example demonstrates the <xref:System.String.PadLeft%2A> method.</span></span>  
  
 [!code-cpp[Classic String.PadLeft1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic String.PadLeft1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic String.PadLeft1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic String.PadLeft1 Example/CS/source.cs#1)]
 [!code-vb[Classic String.PadLeft1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic String.PadLeft1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2469">
            <paramref name="totalWidth" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2469">
              <paramref name="totalWidth" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.PadRight(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PadRight">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2470">Gibt eine neue Zeichenfolge mit einer angegebenen Länge zurück, in der das Ende der aktuellen Zeichenfolge mit Leerzeichen oder einem angegebenen Unicode-Zeichen aufgefüllt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2470">Returns a new string of a specified length in which the end of the current string is padded with spaces or with a specified Unicode character.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="PadRight">
      <MemberSignature Language="C#" Value="public string PadRight (int totalWidth);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PadRight(int32 totalWidth) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.PadRight(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function PadRight (totalWidth As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PadRight(int totalWidth);" />
      <MemberSignature Language="F#" Value="member this.PadRight : int -&gt; string" Usage="string.PadRight totalWidth" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalWidth" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="totalWidth">
          <span data-ttu-id="9380d-2471">Die Anzahl der Zeichen in der resultierenden Zeichenfolge, entsprechend der Anzahl der ursprünglichen Zeichen zuzüglich aller zusätzlichen Füllzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2471">The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2472">Gibt eine neue Zeichenfolge zurück, deren Zeichen linksbündig ausgerichtet werden, indem die rechte Seite mit Leerzeichen aufgefüllt wird, um eine angegebene Gesamtlänge zu erreichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2472">Returns a new string that left-aligns the characters in this string by padding them with spaces on the right, for a specified total length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2473">Eine neue Zeichenfolge, die dieser Instanz entspricht, jedoch rechtsbündig ausgerichtet und links mit Leerzeichen aufgefüllt ist, sodass die Länge <paramref name="totalWidth" /> erreicht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2473">A new string that is equivalent to this instance, but left-aligned and padded on the right with as many spaces as needed to create a length of <paramref name="totalWidth" />.</span>
          </span>
          <span data-ttu-id="9380d-2474">Wenn <paramref name="totalWidth" /> jedoch kleiner als die Länge dieser Instanz ist, gibt die Methode einen Verweis auf die vorhandene Instanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2474">However, if <paramref name="totalWidth" /> is less than the length of this instance, the method returns a reference to the existing instance.</span>
          </span>
          <span data-ttu-id="9380d-2475">Wenn <paramref name="totalWidth" /> gleich der Länge dieser Instanz ist, gibt die Methode eine neue Zeichenfolge zurück, die mit dieser Instanz identisch ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2475">If <paramref name="totalWidth" /> is equal to the length of this instance, the method returns a new string that is identical to this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2476">Ein Unicodeleerzeichen wird als hexadezimale 0 x 0020 definiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-2476">A Unicode space is defined as hexadecimal 0x0020.</span></span>  
  
 <span data-ttu-id="9380d-2477">Die <xref:System.String.PadRight%28System.Int32%29> Methode füllt das Ende der zurückgegebenen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2477">The <xref:System.String.PadRight%28System.Int32%29> method pads the end of the returned string.</span></span> <span data-ttu-id="9380d-2478">Dies bedeutet, dass bei Verwendung mit rechts-nach-links-Sprachen den linken Teil der Zeichenfolge aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2478">This means that, when used with right-to-left languages, it pads the left portion of the string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-2479">Wenn die <xref:System.String.PadRight%2A> Methode füllt die aktuelle Instanz mit Leerraumzeichen, diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-2479">If the <xref:System.String.PadRight%2A> method pads the current instance with whitespace characters, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-2480">Stattdessen wird eine neue Zeichenfolge, die mit einem nachgestellten Leerzeichen aufgefüllt wird, damit die Gesamtlänge `totalWidth` Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2480">Instead, it returns a new string that is padded with trailing white space so that its total length is `totalWidth` characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2481">Das folgende Beispiel veranschaulicht die <xref:System.String.PadRight%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2481">The following example demonstrates the <xref:System.String.PadRight%2A> method.</span></span>  
  
 [!code-cpp[Classic String.PadRight Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic String.PadRight Example/CPP/source.cpp#1)]
 [!code-csharp[Classic String.PadRight Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic String.PadRight Example/cs/source.cs#1)]
 [!code-vb[Classic String.PadRight Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic String.PadRight Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2482">
            <paramref name="totalWidth" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2482">
              <paramref name="totalWidth" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.PadLeft(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="PadRight">
      <MemberSignature Language="C#" Value="public string PadRight (int totalWidth, char paddingChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string PadRight(int32 totalWidth, char paddingChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.PadRight(System.Int32,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function PadRight (totalWidth As Integer, paddingChar As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ PadRight(int totalWidth, char paddingChar);" />
      <MemberSignature Language="F#" Value="member this.PadRight : int * char -&gt; string" Usage="string.PadRight (totalWidth, paddingChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="totalWidth" Type="System.Int32" />
        <Parameter Name="paddingChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="totalWidth">
          <span data-ttu-id="9380d-2483">Die Anzahl der Zeichen in der resultierenden Zeichenfolge, entsprechend der Anzahl der ursprünglichen Zeichen zuzüglich aller zusätzlichen Füllzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2483">The number of characters in the resulting string, equal to the number of original characters plus any additional padding characters.</span>
          </span>
        </param>
        <param name="paddingChar">
          <span data-ttu-id="9380d-2484">Ein Unicode-Füllzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2484">A Unicode padding character.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2485">Gibt eine neue Zeichenfolge zurück, deren Zeichen linksbündig ausgerichtet werden, indem die rechte Seite mit einem angegebenen Unicode-Zeichen aufgefüllt wird, um eine angegebene Gesamtlänge zu erreichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2485">Returns a new string that left-aligns the characters in this string by padding them on the right with a specified Unicode character, for a specified total length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2486">Eine neue Zeichenfolge, die dieser Instanz entspricht, jedoch rechtsbündig ausgerichtet und links mit <paramref name="paddingChar" />-Zeichen aufgefüllt ist, sodass die Länge <paramref name="totalWidth" /> erreicht wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2486">A new string that is equivalent to this instance, but left-aligned and padded on the right with as many <paramref name="paddingChar" /> characters as needed to create a length of <paramref name="totalWidth" />.</span>
          </span>
          <span data-ttu-id="9380d-2487">Wenn <paramref name="totalWidth" /> jedoch kleiner als die Länge dieser Instanz ist, gibt die Methode einen Verweis auf die vorhandene Instanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2487">However, if <paramref name="totalWidth" /> is less than the length of this instance, the method returns a reference to the existing instance.</span>
          </span>
          <span data-ttu-id="9380d-2488">Wenn <paramref name="totalWidth" /> gleich der Länge dieser Instanz ist, gibt die Methode eine neue Zeichenfolge zurück, die mit dieser Instanz identisch ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2488">If <paramref name="totalWidth" /> is equal to the length of this instance, the method returns a new string that is identical to this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2489">Die <xref:System.String.PadRight%28System.Int32%2CSystem.Char%29> Methode füllt das Ende der zurückgegebenen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2489">The <xref:System.String.PadRight%28System.Int32%2CSystem.Char%29> method pads the end of the returned string.</span></span> <span data-ttu-id="9380d-2490">Dies bedeutet, dass bei Verwendung mit rechts-nach-links-Sprachen den linken Teil der Zeichenfolge aufgefüllt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2490">This means that, when used with right-to-left languages, it pads the left portion of the string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-2491">Wenn die <xref:System.String.PadRight%2A> Methode füllt die aktuelle Instanz mit Leerraumzeichen, diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-2491">If the <xref:System.String.PadRight%2A> method pads the current instance with whitespace characters, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-2492">Stattdessen wird eine neue Zeichenfolge, die mit nachfolgenden aufgefüllt wird `paddingChar` Zeichen, damit die Gesamtlänge `totalWidth` Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2492">Instead, it returns a new string that is padded with trailing `paddingChar` characters so that its total length is `totalWidth` characters.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2493">Das folgende Beispiel veranschaulicht die <xref:System.String.PadRight%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2493">The following example demonstrates the <xref:System.String.PadRight%2A> method.</span></span>  
  
 [!code-cpp[Classic String.PadRight1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic String.PadRight1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic String.PadRight1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic String.PadRight1 Example/cs/source.cs#1)]
 [!code-vb[Classic String.PadRight1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic String.PadRight1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2494">
            <paramref name="totalWidth" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2494">
              <paramref name="totalWidth" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.PadLeft(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2495">Gibt eine neue Zeichenfolge zurück, in der eine angegebene Anzahl von Zeichen aus der aktuellen Zeichenfolge gelöscht wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2495">Returns a new string in which a specified number of characters from the current string are deleted.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public string Remove (int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Remove(int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Remove(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (startIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Remove(int startIndex);" />
      <MemberSignature Language="F#" Value="member this.Remove : int -&gt; string" Usage="string.Remove startIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="9380d-2496">Die nullbasierte Position, ab der Zeichen gelöscht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2496">The zero-based position to begin deleting characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2497">Gibt eine neue Zeichenfolge zurück, in der alle Zeichen in der aktuellen Instanz, beginnend an einer angegebenen Position und sich über die letzte Position fortsetzend, gelöscht wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2497">Returns a new string in which all the characters in the current instance, beginning at a specified position and continuing through the last position, have been deleted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2498">Eine neue Zeichenfolge, die dieser Zeichenfolge ohne die entfernten Zeichen entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2498">A new string that is equivalent to this string except for the removed characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2499">In der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], Zeichenfolgen sind nullbasiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-2499">In the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], strings are zero-based.</span></span> <span data-ttu-id="9380d-2500">Der Wert des der `startIndex` Parameter kann von 0 (null) bis eins weniger als die Länge der Zeichenfolgeninstanz reichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2500">The value of the `startIndex` parameter can range from zero to one less than the length of the string instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-2501">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-2501">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-2502">Stattdessen wird eine neue Zeichenfolge in der alle Zeichen ab Position `startIndex` an das Ende der ursprünglichen Zeichenfolge entfernt wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2502">Instead, it returns a new string in which all characters from position `startIndex` to the end of the original string have been removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2503">Das folgende Beispiel veranschaulicht die <xref:System.String.Remove%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2503">The following example demonstrates the <xref:System.String.Remove%2A> method.</span></span> <span data-ttu-id="9380d-2504">Der Case vorletztes entfernt den gesamten Text aus dem angegebenen Index bis zum Ende der Zeichenfolge ab.</span><span class="sxs-lookup"><span data-stu-id="9380d-2504">The next-to-last case removes all text starting from the specified index through the end of the string.</span></span> <span data-ttu-id="9380d-2505">Im letzte Fall werden drei Zeichen, die beginnend beim angegebenen Indexes entfernt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2505">The last case removes three characters starting from the specified index.</span></span>  
  
 [!code-cpp[string.remove#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.remove/CPP/r.cpp#1)]
 [!code-csharp[string.remove#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.remove/CS/r.cs#1)]
 [!code-vb[string.remove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.remove/VB/r.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2506">
            <paramref name="startIndex" /> ist kleiner als Null.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2506">
              <paramref name="startIndex" /> is less than zero.</span>
          </span>
          <span data-ttu-id="9380d-2507">Oder:  <paramref name="startIndex" /> gibt eine Position an, die nicht in dieser Zeichenfolge liegt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2507">-or-  <paramref name="startIndex" /> specifies a position that is not within this string.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Split(System.Char[])" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public string Remove (int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Remove(int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Remove(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (startIndex As Integer, count As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Remove(int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.Remove : int * int -&gt; string" Usage="string.Remove (startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="9380d-2508">Die nullbasierte Position, ab der Zeichen gelöscht werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2508">The zero-based position to begin deleting characters.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-2509">Die Anzahl der zu löschenden Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2509">The number of characters to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2510">Gibt eine neue Zeichenfolge zurück, in der eine bestimmte Anzahl von Zeichen in er aktuellen Instanz, beginnend an einer angegebenen Position, gelöscht wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2510">Returns a new string in which a specified number of characters in the current instance beginning at a specified position have been deleted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2511">Eine neue Zeichenfolge, die dieser Instanz ohne die entfernten Zeichen entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2511">A new string that is equivalent to this instance except for the removed characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2512">In der [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], Zeichenfolgen sind nullbasiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-2512">In the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], strings are zero-based.</span></span> <span data-ttu-id="9380d-2513">Der Wert des der `startIndex` Parameter kann von 0 (null) bis eins weniger als die Länge der Zeichenfolgeninstanz reichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2513">The value of the `startIndex` parameter can range from zero to one less than the length of the string instance.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-2514">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-2514">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-2515">Stattdessen wird eine neue Zeichenfolge, die in der die Anzahl der Zeichen, durch angegeben die `count` Parameter entfernt wurden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2515">Instead, it returns a new string in which the number of characters specified by the `count` parameter have been removed.</span></span> <span data-ttu-id="9380d-2516">Die Zeichen an der Position gemäß entfernt `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2516">The characters are removed at the position specified by `startIndex`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2517">Im folgende Beispiel wird veranschaulicht, wie Sie aus dem vollständigen Namen des zweiten Vornamens entfernen können.</span><span class="sxs-lookup"><span data-stu-id="9380d-2517">The following example demonstrates how you can remove the middle name from a complete name.</span></span>  
  
 [!code-cpp[stringremove#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringremove/CPP/stringremove.cpp#1)]
 [!code-csharp[stringremove#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringremove/CS/stringremove.cs#1)]
 [!code-vb[stringremove#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringremove/VB/stringremove.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2518">
            <paramref name="startIndex" /> oder <paramref name="count" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2518">Either <paramref name="startIndex" /> or <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="9380d-2519">Oder:  <paramref name="startIndex" />+<paramref name="count" /> gibt eine Position außerhalb dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2519">-or-  <paramref name="startIndex" /> plus <paramref name="count" /> specify a position outside this instance.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Split(System.Char[])" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2520">Gibt eine neue Zeichenfolge zurück, in der alle Vorkommen von einem angegebenen Unicode-Zeichen oder <see cref="T:System.String" /> in der aktuellen Zeichenfolge durch ein anderes angegebenes Unicode-Zeichen oder einen anderen <see cref="T:System.String" /> ersetzt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2520">Returns a new string in which all occurrences of a specified Unicode character or <see cref="T:System.String" /> in the current string are replaced with another specified Unicode character or <see cref="T:System.String" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (char oldChar, char newChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(char oldChar, char newChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Replace(System.Char,System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldChar As Char, newChar As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(char oldChar, char newChar);" />
      <MemberSignature Language="F#" Value="member this.Replace : char * char -&gt; string" Usage="string.Replace (oldChar, newChar)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldChar" Type="System.Char" />
        <Parameter Name="newChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="oldChar">
          <span data-ttu-id="9380d-2521">Das zu ersetzende Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2521">The Unicode character to be replaced.</span>
          </span>
        </param>
        <param name="newChar">
          <span data-ttu-id="9380d-2522">Das Unicode-Zeichen, das jedes Vorkommen von <c>oldChar</c> ersetzen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2522">The Unicode character to replace all occurrences of <c>oldChar</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2523">Gibt eine neue Zeichenfolge zurück, in der alle Vorkommen eines angegebenen Unicode-Zeichens in dieser Instanz durch ein anderes angegebenes Unicode-Zeichen ersetzt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2523">Returns a new string in which all occurrences of a specified Unicode character in this instance are replaced with another specified Unicode character.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2524">Eine Zeichenfolge, die dieser Instanz entspricht, außer dass alle Instanzen von <paramref name="oldChar" /> durch <paramref name="newChar" /> ersetzt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2524">A string that is equivalent to this instance except that all instances of <paramref name="oldChar" /> are replaced with <paramref name="newChar" />.</span>
          </span>
          <span data-ttu-id="9380d-2525">Wenn <paramref name="oldChar" /> nicht in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2525">If <paramref name="oldChar" /> is not found in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2526">Diese Methode führt eine ordinale (Groß-/Kleinschreibung beachtet und kulturunabhängige) Suche gefunden `oldChar`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2526">This method performs an ordinal (case-sensitive and culture-insensitive) search to find `oldChar`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-2527">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-2527">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-2528">Stattdessen wird eine neue Zeichenfolge zurückgegeben, in der alle Vorkommen von `oldChar` durch ersetzt `newChar`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2528">Instead, it returns a new string in which all occurrences of `oldChar` are replaced by `newChar`.</span></span>  
  
 <span data-ttu-id="9380d-2529">Da diese Methode die geänderte Zeichenfolge zurückgibt, Sie können miteinander verketten aufeinander folgende Aufrufe von der <xref:System.String.Replace%2A> Methode, um mehrere Ersetzungen für die ursprüngliche Zeichenfolge ausführen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2529">Because this method returns the modified string, you can chain together successive calls to the <xref:System.String.Replace%2A> method to perform multiple replacements on the original string.</span></span> <span data-ttu-id="9380d-2530">Methodenaufrufe werden von links nach rechts ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2530">Method calls are executed from left to right.</span></span> <span data-ttu-id="9380d-2531">Dies wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2531">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.String.Replace#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.replace/cs/replace2.cs#2)]
 [!code-vb[System.String.Replace#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.replace/vb/replace2.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2532">Das folgende Beispiel erstellt eine durch Komma getrennte Werteliste durch Kommas, die Leerzeichen zwischen einer Reihe von Zahlen zu ersetzen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2532">The following example creates a comma separated value list by substituting commas for the blanks between a series of numbers.</span></span>  
  
 [!code-cpp[string.replace1#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.replace1/CPP/string.replace1.cpp#1)]
 [!code-csharp[string.replace1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.replace1/CS/string.replace1.cs#1)]
 [!code-vb[string.replace1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.replace1/VB/string.replace1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Split(System.Char[])" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string oldValue, string newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string oldValue, string newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Replace(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ oldValue, System::String ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string -&gt; string" Usage="string.Replace (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="9380d-2533">Die zu ersetzende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2533">The string to be replaced.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="9380d-2534">Die Zeichenfolge, die jedes Vorkommen von <c>oldValue</c> ersetzen soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2534">The string to replace all occurrences of <c>oldValue</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2535">Gibt eine neue Zeichenfolge zurück, in der alle Vorkommen einer angegebenen Zeichenfolge in der aktuellen Instanz durch eine andere angegebene Zeichenfolge ersetzt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2535">Returns a new string in which all occurrences of a specified string in the current instance are replaced with another specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2536">Eine Zeichenfolge, die der aktuellen Zeichenfolge entspricht, außer dass alle Instanzen von <paramref name="oldValue" /> durch <paramref name="newValue" /> ersetzt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2536">A string that is equivalent to the current string except that all instances of <paramref name="oldValue" /> are replaced with <paramref name="newValue" />.</span>
          </span>
          <span data-ttu-id="9380d-2537">Wenn <paramref name="oldValue" /> nicht in der aktuellen Instanz gefunden wird, gibt die Methode die aktuelle Instanz unverändert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2537">If <paramref name="oldValue" /> is not found in the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2538">Wenn `newValue` ist `null`, alle Vorkommen von `oldValue` werden entfernt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2538">If `newValue` is `null`, all occurrences of `oldValue` are removed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-2539">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-2539">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-2540">Stattdessen wird eine neue Zeichenfolge zurückgegeben, in der alle Vorkommen von `oldValue` durch ersetzt `newValue`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2540">Instead, it returns a new string in which all occurrences of `oldValue` are replaced by `newValue`.</span></span>  
  
 <span data-ttu-id="9380d-2541">Diese Methode führt eine ordinale (Groß-/Kleinschreibung beachtet und kulturunabhängige) Suche gefunden `oldValue`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2541">This method performs an ordinal (case-sensitive and culture-insensitive) search to find `oldValue`.</span></span>  
  
 <span data-ttu-id="9380d-2542">Da diese Methode die geänderte Zeichenfolge zurückgibt, Sie können miteinander verketten aufeinander folgende Aufrufe von der <xref:System.String.Replace%2A> Methode, um mehrere Ersetzungen für die ursprüngliche Zeichenfolge ausführen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2542">Because this method returns the modified string, you can chain together successive calls to the <xref:System.String.Replace%2A> method to perform multiple replacements on the original string.</span></span> <span data-ttu-id="9380d-2543">Methodenaufrufe werden von links nach rechts ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2543">Method calls are executed from left to right.</span></span> <span data-ttu-id="9380d-2544">Dies wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2544">The following example provides an illustration.</span></span>  
  
 [!code-csharp[System.String.Replace#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.replace/cs/replace1.cs#1)]
 [!code-vb[System.String.Replace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.replace/vb/replace1.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2545">Das folgende Beispiel zeigt Informationen zur Verwendung der <xref:System.String.Replace%2A> Methode, um einen Rechtschreibfehler zu korrigieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-2545">The following example demonstrates how you can use the <xref:System.String.Replace%2A> method to correct a spelling error.</span></span>  
  
 [!code-cpp[stringreplace#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringreplace/CPP/stringreplace.cpp#1)]
 [!code-csharp[stringreplace#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringreplace/CS/stringreplace.cs#1)]
 [!code-vb[stringreplace#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringreplace/VB/stringreplace.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2546">
            <paramref name="oldValue" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2546">
              <paramref name="oldValue" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2547">
            <paramref name="oldValue" /> ist die leere Zeichenfolge ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2547">
              <paramref name="oldValue" /> is the empty string ("").</span>
          </span>
        </exception>
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Split(System.Char[])" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string oldValue, string newValue, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string oldValue, string newValue, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Replace(System.String,System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String, comparisonType As StringComparison) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ oldValue, System::String ^ newValue, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * StringComparison -&gt; string" Usage="string.Replace (oldValue, newValue, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <param name="comparisonType">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public string Replace (string oldValue, string newValue, bool ignoreCase, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Replace(string oldValue, string newValue, bool ignoreCase, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Replace(System.String,System.String,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Replace (oldValue As String, newValue As String, ignoreCase As Boolean, culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Replace(System::String ^ oldValue, System::String ^ newValue, bool ignoreCase, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.Replace : string * string * bool * System.Globalization.CultureInfo -&gt; string" Usage="string.Replace (oldValue, newValue, ignoreCase, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.String" />
        <Parameter Name="newValue" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="oldValue">To be added.</param>
        <param name="newValue">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <param name="culture">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Split">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2548">Gibt ein Zeichenfolgenarray zurück, das die Teilzeichenfolgen dieser Instanz enthält, die durch Elemente eines angegebenen Zeichenfolgen- oder Unicode-Zeichenarrays getrennt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2548">Returns a string array that contains the substrings in this instance that are delimited by elements of a specified string or Unicode character array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2549"><xref:System.String.Split%2A> wird verwendet, um eine durch Trennzeichen getrennte Zeichenfolge in Teilzeichenfolgen zu unterteilen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2549"><xref:System.String.Split%2A> is used to break a delimited string into substrings.</span></span> <span data-ttu-id="9380d-2550">Sie können entweder ein Array von Zeichen an der 0 (null), einer oder mehrerer Trennzeichen verwenden (die <xref:System.String.Split%28System.Char%5B%5D%29> Methode), oder Sie können ein Array von Zeichen an der 0 (null), einer oder mehrerer Trennzeichen-Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2550">You can use either a character array to specify zero, one, or multiple delimiting characters (the <xref:System.String.Split%28System.Char%5B%5D%29> method), or you can use a character array to specify zero, one, or multiple delimiting strings.</span></span> <span data-ttu-id="9380d-2551">Überladungen der der <xref:System.String.Split%2A> Methode können Sie die Anzahl der Teilzeichenfolgen, die von der Methode zurückgegebenen zu beschränken (die <xref:System.String.Split%28System.Char%5B%5D%2CSystem.Int32%29> Methode), um zu bestimmen, ob leere Zeichenfolgen in der zurückgegebenen untergeordneten Zeichenfolgen enthalten sind (die <xref:System.String.Split%28System.Char%5B%5D%2CSystem.StringSplitOptions%29> und <xref:System.String.Split%28System.String%5B%5D%2CSystem.StringSplitOptions%29> Methoden oder beides (die <xref:System.String.Split%28System.Char%5B%5D%2CSystem.Int32%2CSystem.StringSplitOptions%29> und <xref:System.String.Split%28System.String%5B%5D%2CSystem.Int32%2CSystem.StringSplitOptions%29> Methoden).</span><span class="sxs-lookup"><span data-stu-id="9380d-2551">Overloads of the <xref:System.String.Split%2A> method allow you to limit the number of substrings returned by the method (the <xref:System.String.Split%28System.Char%5B%5D%2CSystem.Int32%29> method), to determine whether empty strings are included in the returned substrings (the <xref:System.String.Split%28System.Char%5B%5D%2CSystem.StringSplitOptions%29> and <xref:System.String.Split%28System.String%5B%5D%2CSystem.StringSplitOptions%29> methods, or to do both (the <xref:System.String.Split%28System.Char%5B%5D%2CSystem.Int32%2CSystem.StringSplitOptions%29> and <xref:System.String.Split%28System.String%5B%5D%2CSystem.Int32%2CSystem.StringSplitOptions%29> methods).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="9380d-2552">Weitere ausführliche Informationen auf der <xref:System.String.Split%2A> -Methode, wie sowie Beispiele, in denen Aufrufen jeder überladen, finden Sie unter der Dokumentation für die einzelnen Überladungen <xref:System.String.Split%2A>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2552">For more detailed information on the <xref:System.String.Split%2A> method, as well as for examples that call each overload, see the documentation for the individual overloads of <xref:System.String.Split%2A>.</span></span>  
  
 <span data-ttu-id="9380d-2553">Die <xref:System.String.Split%2A> Methode ist nicht immer die beste Methode zum Unterbrechen einer durch Trennzeichen getrennte Zeichenfolge in Teilzeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2553">The <xref:System.String.Split%2A> method is not always the best way to break a delimited string into substrings.</span></span> <span data-ttu-id="9380d-2554">Wenn nicht alle der Teilzeichenfolgen einer durch Trennzeichen getrennten Zeichenfolge extrahiert werden soll, oder wenn Sie eine Zeichenfolge, die basierend auf einem Muster, anstatt einen Satz von Trennzeichen analysieren möchten, sollten Sie die folgenden Alternativen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2554">If you don't want to extract all of the substrings of a delimited string, or if you want to parse a string based on a pattern instead of a set of delimiter characters, consider the following alternatives.</span></span>  
  
## <a name="regular-expressions"></a><span data-ttu-id="9380d-2555">Reguläre Ausdrücke</span><span class="sxs-lookup"><span data-stu-id="9380d-2555">Regular expressions</span></span>  
 <span data-ttu-id="9380d-2556">Wenn die Zeichenfolgen mit einem festen Muster entsprechen, können Sie einen regulären Ausdruck zum Extrahieren und verarbeiten die Elemente.</span><span class="sxs-lookup"><span data-stu-id="9380d-2556">If your strings conform to a fixed pattern, you can use a regular expression to extract and handle their elements.</span></span> <span data-ttu-id="9380d-2557">Wenn Zeichenfolgen in Form werden z. B. "*Anzahl* *Operanden* *Anzahl*" können Sie eine [reguläre](~/docs/standard/base-types/regular-expressions.md) extrahieren und Verarbeiten der Zeichenfolge-Elemente.</span><span class="sxs-lookup"><span data-stu-id="9380d-2557">For example, if strings take the form "*number* *operand* *number*" you can use a [regular expression](~/docs/standard/base-types/regular-expressions.md) to extract and handle the string's elements.</span></span> <span data-ttu-id="9380d-2558">Im Folgenden ein Beispiel:</span><span class="sxs-lookup"><span data-stu-id="9380d-2558">Here's an example:</span></span>  
  
 [!code-csharp[System.String.Split#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/splitalt1.cs#8)]
 [!code-vb[System.String.Split#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/splitalt1.vb#8)]  
  
 <span data-ttu-id="9380d-2559">Muster für reguläre Ausdrücke `(\d+)\s+([-+*/])\s+(\d+)` wird wie folgt definiert:</span><span class="sxs-lookup"><span data-stu-id="9380d-2559">The regular expression pattern `(\d+)\s+([-+*/])\s+(\d+)` is defined like this:</span></span>  
  
|<span data-ttu-id="9380d-2560">Muster</span><span class="sxs-lookup"><span data-stu-id="9380d-2560">Pattern</span></span>|<span data-ttu-id="9380d-2561">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="9380d-2561">Description</span></span>|  
|-------------|-----------------|  
|`(\d+)`|<span data-ttu-id="9380d-2562">Entsprechung für mindestens eine Dezimalstelle finden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2562">Match one or more decimal digits.</span></span> <span data-ttu-id="9380d-2563">Dies ist die erste Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="9380d-2563">This is the first capturing group.</span></span>|  
|`\s+`|<span data-ttu-id="9380d-2564">Übereinstimmung mit ein oder mehrere Leerzeichen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2564">Match one or more whitespace characters.</span></span>|  
|`([-+*/])`|<span data-ttu-id="9380d-2565">Entspricht einem arithmetischen Operator Vorzeichen (+, -, \*, oder /).</span><span class="sxs-lookup"><span data-stu-id="9380d-2565">Match an arithmetic operator sign (+, -, \*, or /).</span></span> <span data-ttu-id="9380d-2566">Dies ist die zweite Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="9380d-2566">This is the second capturing group.</span></span>|  
|`\s+`|<span data-ttu-id="9380d-2567">Übereinstimmung mit ein oder mehrere Leerzeichen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2567">Match one or more whitespace characters.</span></span>|  
|`(\d+)`|<span data-ttu-id="9380d-2568">Entsprechung für mindestens eine Dezimalstelle finden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2568">Match one or more decimal digits.</span></span> <span data-ttu-id="9380d-2569">Dies ist die dritte Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="9380d-2569">This is the third capturing group.</span></span>|  
  
 <span data-ttu-id="9380d-2570">Sie können auch einen regulären Ausdruck verwenden, um Teilzeichenfolgen aus einer Zeichenfolge basierend auf einen festen Satz von Zeichen, anstatt ein Muster zu extrahieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-2570">You can also use a regular expression to extract substrings from a string based on a pattern rather than a fixed set of characters.</span></span> <span data-ttu-id="9380d-2571">Dies ist ein häufiges Szenario, wenn eine dieser Bedingungen auftritt:</span><span class="sxs-lookup"><span data-stu-id="9380d-2571">This is a common scenario when either of these conditions occurs:</span></span>  
  
-   <span data-ttu-id="9380d-2572">Mindestens ein Trennzeichen ist nicht immer als ein Trennzeichen in den <xref:System.String> Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-2572">One or more of the delimiter characters does not always serve as a delimiter in the <xref:System.String> instance.</span></span>  
  
-   <span data-ttu-id="9380d-2573">Die Reihenfolge und Anzahl von Trennzeichen ist variabel oder unbekannt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2573">The sequence and number of delimiter characters is variable or unknown.</span></span>  
  
 <span data-ttu-id="9380d-2574">Z. B. die <xref:System.String.Split%2A> Methode kann nicht zum Aufteilen der folgenden Zeichenfolge, nicht verwendet werden, da die Anzahl der `\n` (in c#) oder `vbCrLf` Zeichen ist die Variable (in Visual Basic), und sie nicht immer als Trennzeichen dienen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2574">For example, the <xref:System.String.Split%2A> method cannot be used to split the following string, because the number of `\n` (in C#) or `vbCrLf` (in Visual Basic) characters is variable, and they don't always serve as delimiters.</span></span>  
  
```  
  
[This is captured\ntext.]\n\n[\n[This is more captured text.]\n]  
\n[Some more captured text:\n   Option1\n   Option2][Terse text.]  
  
```  
  
 <span data-ttu-id="9380d-2575">Diese Zeichenfolge kann einfach, wie das folgende Beispiel zeigt ein regulärer Ausdruck aufgeteilt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2575">A regular expression can split this string easily, as the following example shows.</span></span>  
  
 [!code-csharp[System.String.Split#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/splitalt2.cs#9)]
 [!code-vb[System.String.Split#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/splitalt2.vb#9)]  
  
 <span data-ttu-id="9380d-2576">Muster für reguläre Ausdrücke `\[([^\[\]]+)\]` wird wie folgt definiert:</span><span class="sxs-lookup"><span data-stu-id="9380d-2576">The regular expression pattern `\[([^\[\]]+)\]` is defined like this:</span></span>  
  
|<span data-ttu-id="9380d-2577">Muster</span><span class="sxs-lookup"><span data-stu-id="9380d-2577">Pattern</span></span>|<span data-ttu-id="9380d-2578">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="9380d-2578">Description</span></span>|  
|-------------|-----------------|  
|`\[`|<span data-ttu-id="9380d-2579">Übereinstimmung mit eine öffnende eckige Klammer ein.</span><span class="sxs-lookup"><span data-stu-id="9380d-2579">Match an opening bracket.</span></span>|  
|`([^\[\]]+)`|<span data-ttu-id="9380d-2580">Übereinstimmung mit beliebigem Zeichen, das kein öffnendes oder eine schließende Klammer ist mindestens einmal aus.</span><span class="sxs-lookup"><span data-stu-id="9380d-2580">Match any character that is not an opening or a closing bracket one or more times.</span></span> <span data-ttu-id="9380d-2581">Dies ist die erste Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="9380d-2581">This is the first capturing group.</span></span>|  
|`\]`|<span data-ttu-id="9380d-2582">Übereinstimmung mit einer schließenden Klammer ein.</span><span class="sxs-lookup"><span data-stu-id="9380d-2582">Match a closing bracket.</span></span>|  
  
 <span data-ttu-id="9380d-2583">Die <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> Methode ist fast identisch mit <xref:System.String.Split%2A?displayProperty=nameWithType>, außer dass es sich um eine Zeichenfolge, die basierend auf das Muster eines regulären Ausdrucks anstelle eines festen Zeichen unterteilt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2583">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> method is almost identical to <xref:System.String.Split%2A?displayProperty=nameWithType>, except that it splits a string based on a regular expression pattern instead of a fixed character set.</span></span> <span data-ttu-id="9380d-2584">Z. B. im folgenden Beispiel wird die <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> Methode zum Aufteilen einer Zeichenfolge, die durch verschiedene Kombinationen von Bindestrichen und andere Zeichen getrennten Teilzeichenfolgen enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-2584">For example, the following example uses the <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> method to split a string that contains substrings delimited by various combinations of hyphens and other characters.</span></span>  
  
 [!code-csharp[System.String.Split#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/splitalt3.cs#10)]
 [!code-vb[System.String.Split#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/splitalt3.vb#10)]  
  
 <span data-ttu-id="9380d-2585">Muster für reguläre Ausdrücke `\s-\s?[+*]?\s?-\s` wird wie folgt definiert:</span><span class="sxs-lookup"><span data-stu-id="9380d-2585">The regular expression pattern `\s-\s?[+*]?\s?-\s` is defined like this:</span></span>  
  
|<span data-ttu-id="9380d-2586">Muster</span><span class="sxs-lookup"><span data-stu-id="9380d-2586">Pattern</span></span>|<span data-ttu-id="9380d-2587">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="9380d-2587">Description</span></span>|  
|-------------|-----------------|  
|`\s-`|<span data-ttu-id="9380d-2588">Mit übereinstimmen Sie einem Leerzeichen, gefolgt von einem Bindestrich.</span><span class="sxs-lookup"><span data-stu-id="9380d-2588">Match a whitespace character followed by a hyphen.</span></span>|  
|`\s?`|<span data-ttu-id="9380d-2589">Übereinstimmung mit keinem oder einem Leerzeichen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2589">Match zero or one whitespace character.</span></span>|  
|`[+*]?`|<span data-ttu-id="9380d-2590">Übereinstimmung mit keinem oder einem Vorkommen entweder das + oder \* Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2590">Match zero or one occurrence of either the + or \* character.</span></span>|  
|`\s?`|<span data-ttu-id="9380d-2591">Übereinstimmung mit keinem oder einem Leerzeichen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2591">Match zero or one whitespace character.</span></span>|  
|`-\s`|<span data-ttu-id="9380d-2592">Übereinstimmung mit einem Bindestrich gefolgt von einem Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2592">Match a hyphen followed by a whitespace character.</span></span>|  
  
## <a name="search-methods-and-the-substring-method"></a><span data-ttu-id="9380d-2593">Suchen von Methoden und der Substring-Methode</span><span class="sxs-lookup"><span data-stu-id="9380d-2593">Search methods and the Substring method</span></span>  
 <span data-ttu-id="9380d-2594">Wenn Sie nicht alle die Teilzeichenfolgen in einer Zeichenfolge interessiert sind, möchten Sie möglicherweise arbeiten mit einer der Methoden zum Zeichenfolgenvergleich, der den Index zurückgibt, an dem der Vergleich beginnt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2594">If you aren't interested in all of the substrings in a string, you might prefer to work with one of the string comparison methods that returns the index at which the match begins.</span></span> <span data-ttu-id="9380d-2595">Rufen Sie anschließend die <xref:System.String.Substring%2A> Methode, um die Teilzeichenfolge extrahiert, die Sie möchten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2595">You can then call the <xref:System.String.Substring%2A> method to extract the substring that you want.</span></span> <span data-ttu-id="9380d-2596">Die Methoden zum Zeichenfolgenvergleich umfassen:</span><span class="sxs-lookup"><span data-stu-id="9380d-2596">The string comparison methods include:</span></span>  
  
-   <span data-ttu-id="9380d-2597"><xref:System.String.IndexOf%2A>, den nullbasierten Index des ersten Vorkommens eines Zeichens oder einer Zeichenfolge in eine Zeichenfolgeninstanz zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-2597"><xref:System.String.IndexOf%2A>, which returns the zero-based index of the first occurrence of a character or string in a string instance.</span></span>  
  
-   <span data-ttu-id="9380d-2598"><xref:System.String.IndexOfAny%2A>, die den nullbasierten Index in der aktuellen Zeichenfolgeninstanz des ersten Vorkommens eines beliebigen Zeichens aus einem Array von Zeichen zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2598"><xref:System.String.IndexOfAny%2A>, which returns the zero-based index in the current string instance of the first occurrence of any character in a character array.</span></span>  
  
-   <span data-ttu-id="9380d-2599"><xref:System.String.LastIndexOf%2A>, den nullbasierten Index des letzten Vorkommens eines Zeichens oder einer Zeichenfolge in eine Zeichenfolgeninstanz zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-2599"><xref:System.String.LastIndexOf%2A>, which returns the zero-based index of the last occurrence of a character or string in a string instance.</span></span>  
  
-   <span data-ttu-id="9380d-2600"><xref:System.String.LastIndexOfAny%2A>, die einen nullbasierten Index in der aktuellen Zeichenfolgeninstanz des letzten Vorkommens eines beliebigen Zeichens aus einem Array von Zeichen zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2600"><xref:System.String.LastIndexOfAny%2A>, which returns a zero-based index in the current string instance of the last occurrence of any character in a character array.</span></span>  
  
 <span data-ttu-id="9380d-2601">Im folgenden Beispiel wird die <xref:System.String.IndexOf%2A> Methode, um die Punkte in einer Zeichenfolge gesucht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2601">The following example uses the <xref:System.String.IndexOf%2A> method to find the periods in a string.</span></span> <span data-ttu-id="9380d-2602">Anschließend wird mithilfe der <xref:System.String.Substring%2A> Methode, um vollständige Sätze zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-2602">It then uses the <xref:System.String.Substring%2A> method to return full sentences.</span></span>  
  
 [!code-csharp[System.String.Split#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/splitalt4.cs#11)]
 [!code-vb[System.String.Split#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/splitalt4.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (params char[] separator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char[] separator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (ParamArray separator As Char()) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(... cli::array &lt;char&gt; ^ separator);" />
      <MemberSignature Language="F#" Value="member this.Split : char[] -&gt; string[]" Usage="string.Split separator" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="separator">
          <span data-ttu-id="9380d-2603">Ein Zeichenarray, das die Teilzeichenfolgen in dieser Zeichenfolge trennt, ein leeres Array ohne Trennzeichen oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2603">A character array that delimits the substrings in this string, an empty array that contains no delimiters, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2604">Unterteilt eine Zeichenfolge anhand der Zeichen in einem Array in Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2604">Splits a string into substrings that are based on the characters in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2605">Ein Array, dessen Elemente die Teilzeichenfolgen von dieser Instanz enthält, die durch ein oder mehr Zeichen aus <paramref name="separator" /> getrennt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2605">An array whose elements contain the substrings from this instance that are delimited by one or more characters in <paramref name="separator" />.</span>
          </span>
          <span data-ttu-id="9380d-2606">Weitere Informationen finden Sie im Abschnitt "Hinweise".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2606">For more information, see the Remarks section.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2607">Wenn eine Zeichenfolge von einem bekannten Satz von Zeichen getrennt sind, können Sie die <xref:System.String.Split%28System.Char%5B%5D%29> Methode für die Trennung in Teilzeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2607">When a string is delimited by a known set of characters, you can use the <xref:System.String.Split%28System.Char%5B%5D%29> method to separate it into substrings.</span></span> <span data-ttu-id="9380d-2608">Weitere Informationen zum Teilzeichenfolgen aus einer Zeichenfolge zu extrahieren, finden Sie unter den [Alternativen zur String.Split](#Alternatives) Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2608">For other ways to extract substrings from a string, see the [Alternatives to String.Split](#Alternatives) section.</span></span>  
  
## <a name="return-value-details"></a><span data-ttu-id="9380d-2609">Rückgabewert-details</span><span class="sxs-lookup"><span data-stu-id="9380d-2609">Return value details</span></span>  
 <span data-ttu-id="9380d-2610">Trennzeichen sind nicht in den Elementen des zurückgegebenen Arrays enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2610">Delimiter characters are not included in the elements of the returned array.</span></span> <span data-ttu-id="9380d-2611">Wenn das Array als Trennzeichen das Zeichen enthält z. B. "-" und der Wert der aktuellen Zeichenfolgeninstanz "aa-bb-cc", die Methode gibt ein Array, das drei Elemente enthält: "aa", "bb" und "cc".</span><span class="sxs-lookup"><span data-stu-id="9380d-2611">For example, if the separator array includes the character "-" and the value of the current string instance is "aa-bb-cc", the method returns an array that contains three elements: "aa", "bb", and "cc".</span></span>  
  
 <span data-ttu-id="9380d-2612">Wenn diese Instanz keine Zeichen enthält `separator`, das zurückgegebene Array besteht aus einem einzelnen Element, das diese Instanz enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-2612">If this instance does not contain any of the characters in `separator`, the returned array consists of a single element that contains this instance.</span></span>  
  
 <span data-ttu-id="9380d-2613">Jedes Element der `separator` ein separates Trennzeichen definiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-2613">Each element of `separator` defines a separate delimiter character.</span></span> <span data-ttu-id="9380d-2614">Wenn zwei Trennzeichen benachbart sind oder ein Trennzeichen am Anfang oder Ende dieser Instanz gefunden wird, enthält das entsprechende Element im zurückgegebenen Array <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2614">If two delimiters are adjacent, or a delimiter is found at the beginning or end of this instance, the corresponding element in the returned array contains <xref:System.String.Empty>.</span></span> <span data-ttu-id="9380d-2615">Hier einige Beispiele:</span><span class="sxs-lookup"><span data-stu-id="9380d-2615">Here are some examples:</span></span>  
  
|<span data-ttu-id="9380d-2616">Zeichenfolgenwert</span><span class="sxs-lookup"><span data-stu-id="9380d-2616">String value</span></span>|<span data-ttu-id="9380d-2617">Trennzeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-2617">Separator</span></span>|<span data-ttu-id="9380d-2618">Zurückgegebene array</span><span class="sxs-lookup"><span data-stu-id="9380d-2618">Returned array</span></span>|  
|------------------|---------------|--------------------|  
|<span data-ttu-id="9380d-2619">"42, 12, 19"</span><span class="sxs-lookup"><span data-stu-id="9380d-2619">"42, 12, 19"</span></span>|<span data-ttu-id="9380d-2620">neue Char [] {',', ' '} (c#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2620">new Char[] {',', ' '} (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2621">Char() = {"," c "" C}) (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2621">Char() = {","c, " "c}) (Visual Basic)</span></span>|<span data-ttu-id="9380d-2622">{"42", "", "12", "", "19"}</span><span class="sxs-lookup"><span data-stu-id="9380d-2622">{"42", "", "12", "", "19"}</span></span>|  
|<span data-ttu-id="9380d-2623">"42..12..19"</span><span class="sxs-lookup"><span data-stu-id="9380d-2623">"42..12..19"</span></span>|<span data-ttu-id="9380d-2624">new Char[] {'.'}</span><span class="sxs-lookup"><span data-stu-id="9380d-2624">new Char[] {'.'}</span></span> <span data-ttu-id="9380d-2625">(C#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2625">(C#)</span></span><br /><br /> <span data-ttu-id="9380d-2626">Char() = {"." c} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2626">Char() = {"."c} (Visual Basic)</span></span>|<span data-ttu-id="9380d-2627">{"42", "", "12", "", "19"}</span><span class="sxs-lookup"><span data-stu-id="9380d-2627">{"42", "", "12", "", "19"}</span></span>|  
|<span data-ttu-id="9380d-2628">"Banane"</span><span class="sxs-lookup"><span data-stu-id="9380d-2628">"Banana"</span></span>|<span data-ttu-id="9380d-2629">new Char[] {'.'}</span><span class="sxs-lookup"><span data-stu-id="9380d-2629">new Char[] {'.'}</span></span> <span data-ttu-id="9380d-2630">(C#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2630">(C#)</span></span><br /><br /> <span data-ttu-id="9380d-2631">Char() = {"." c} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2631">Char() = {"."c} (Visual Basic)</span></span>|<span data-ttu-id="9380d-2632">{"Banana"}</span><span class="sxs-lookup"><span data-stu-id="9380d-2632">{"Banana"}</span></span>|  
|<span data-ttu-id="9380d-2633">"Darb\nSmarba" (c#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2633">"Darb\nSmarba" (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2634">"Darb", VbLf & "Smarba" (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2634">"Darb" & vbLf & "Smarba" (Visual Basic)</span></span>|<span data-ttu-id="9380d-2635">neue Char [] {} (c#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2635">new Char[] {} (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2636">Char() = {} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2636">Char() = {} (Visual Basic)</span></span>|<span data-ttu-id="9380d-2637">{"Darb", "Smarba"}</span><span class="sxs-lookup"><span data-stu-id="9380d-2637">{"Darb", "Smarba"}</span></span>|  
|<span data-ttu-id="9380d-2638">"Darb\nSmarba" (c#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2638">"Darb\nSmarba" (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2639">"Darb", VbLf & "Smarba" (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2639">"Darb" & vbLf & "Smarba" (Visual Basic)</span></span>|<span data-ttu-id="9380d-2640">null (C#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2640">null (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2641">Nothing (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2641">Nothing (Visual Basic)</span></span>|<span data-ttu-id="9380d-2642">{"Darb", "Smarba"}</span><span class="sxs-lookup"><span data-stu-id="9380d-2642">{"Darb", "Smarba"}</span></span>|  
  
## <a name="the-separator-array"></a><span data-ttu-id="9380d-2643">Das Separator-array</span><span class="sxs-lookup"><span data-stu-id="9380d-2643">The separator array</span></span>  
 <span data-ttu-id="9380d-2644">Jedes Element des Trennzeichens definiert ein separates Trennzeichen, das ein einzelnes Zeichen besteht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2644">Each element of separator defines a separate delimiter that consists of a single character.</span></span> <span data-ttu-id="9380d-2645">Wenn die `separator` Argument `null` oder keine Zeichen enthält, die Methode behandelt Leerzeichen als Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2645">If the `separator` argument is `null` or contains no characters, the method treats white-space characters as the delimiters.</span></span> <span data-ttu-id="9380d-2646">Leerzeichen werden durch die Unicode-standard definiert. Geben sie zurück `true` Wenn es sich bei der Übergabe an die <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2646">White-space characters are defined by the Unicode standard; they return `true` if they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span>  
  
## <a name="stringsplitchar-and-compiler-overload-resolution"></a><span data-ttu-id="9380d-2647">Auflösen der Überladung String.Split(Char[]) und compiler</span><span class="sxs-lookup"><span data-stu-id="9380d-2647">String.Split(Char[]) and compiler overload resolution</span></span>  
 <span data-ttu-id="9380d-2648">Obwohl die einzelnen Parameter für diese Überladung der <xref:System.String.Split%2A?displayProperty=nameWithType> ist ein Array von Zeichen, können Sie ihn mit einem einzelnen Zeichen, wie im folgenden Beispiel gezeigt aufrufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2648">Although the single parameter for this overload of <xref:System.String.Split%2A?displayProperty=nameWithType> is a character array, you can call it with a single character, as the following example shows.</span></span>  
  
 [!code-csharp[System.String.Split#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/Split_CompilerResolution1.cs#12)]
 [!code-vb[System.String.Split#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/Split_CompilerResolution1.vb#12)]  
  
 <span data-ttu-id="9380d-2649">Da die `separator` Parameter versehen ist, mit der <xref:System.ParamArrayAttribute> Attribut Compiler ein einzelnes Zeichen als ein Array von einem Element Zeichen interpretiert werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2649">Because the `separator` parameter is decorated  with the <xref:System.ParamArrayAttribute> attribute, compilers will interpret a single character as a single-element character array.</span></span> <span data-ttu-id="9380d-2650">Dies gilt nicht für andere <xref:System.String.Split%2A?displayProperty=nameWithType> Überladungen, die eine `separator` -Parameter müssen Sie explizit übergeben diese Überladungen ein Array von Zeichen als die `separator` Argument.</span><span class="sxs-lookup"><span data-stu-id="9380d-2650">This is not the case for other <xref:System.String.Split%2A?displayProperty=nameWithType> overloads that include a `separator` parameter; you must explicitly pass these overloads a character array as the `separator` argument.</span></span>  
  
## <a name="comparison-details"></a><span data-ttu-id="9380d-2651">Von Vergleichsdetails</span><span class="sxs-lookup"><span data-stu-id="9380d-2651">Comparison details</span></span>  
 <span data-ttu-id="9380d-2652">Die <xref:System.String.Split%28System.Char%5B%5D%29> Methode extrahiert die Teilzeichenfolgen in dieser Zeichenfolge, die von einer oder mehreren Zeichen getrennt sind die `separator` array und gibt diese Teilzeichenfolgen als Elemente eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-2652">The <xref:System.String.Split%28System.Char%5B%5D%29> method extracts the substrings in this string that are delimited by one or more of the characters in the `separator` array, and returns those substrings as elements of an array.</span></span>  
  
 <span data-ttu-id="9380d-2653">Die <xref:System.String.Split%28System.Char%5B%5D%29> -Methode sucht nach Trennzeichen durch Durchführen von Vergleichen mit der Groß-/Kleinschreibung der ordinalen Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-2653">The <xref:System.String.Split%28System.Char%5B%5D%29> method looks for delimiters by performing comparisons using case-sensitive ordinal sort rules.</span></span> <span data-ttu-id="9380d-2654">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter den <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-2654">For more information about word, string, and ordinal sorts, see the <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> enumeration.</span></span>  
  
<a name="Alternatives"></a>   
## <a name="alternatives-to-stringsplit"></a><span data-ttu-id="9380d-2655">Alternativen zur String.Split</span><span class="sxs-lookup"><span data-stu-id="9380d-2655">Alternatives to String.Split</span></span>  
 <span data-ttu-id="9380d-2656">Die <xref:System.String.Split%2A> Methode ist nicht immer die beste Methode zum Unterbrechen einer durch Trennzeichen getrennte Zeichenfolge in Teilzeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2656">The <xref:System.String.Split%2A> method is not always the best way to break a delimited string into substrings.</span></span> <span data-ttu-id="9380d-2657">Wenn nicht alle der Teilzeichenfolgen einer durch Trennzeichen getrennten Zeichenfolge extrahiert werden soll, oder wenn Sie eine Zeichenfolge, die basierend auf einem Muster, anstatt einen Satz von Trennzeichen analysieren möchten, sollten Sie die folgenden Alternativen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2657">If you don't want to extract all of the substrings of a delimited string, or if you want to parse a string based on a pattern instead of a set of delimiter characters, consider the following alternatives.</span></span>  
  
### <a name="regular-expressions"></a><span data-ttu-id="9380d-2658">Reguläre Ausdrücke</span><span class="sxs-lookup"><span data-stu-id="9380d-2658">Regular expressions</span></span>  
 <span data-ttu-id="9380d-2659">Wenn die Zeichenfolgen mit einem festen Muster entsprechen, können Sie einen regulären Ausdruck zum Extrahieren und verarbeiten die Elemente.</span><span class="sxs-lookup"><span data-stu-id="9380d-2659">If your strings conform to a fixed pattern, you can use a regular expression to extract and handle their elements.</span></span> <span data-ttu-id="9380d-2660">Wenn Zeichenfolgen in Form werden z. B. "*Anzahl* *Operanden* *Anzahl*" können Sie eine [reguläre](~/docs/standard/base-types/regular-expressions.md) extrahieren und Verarbeiten der Zeichenfolge-Elemente.</span><span class="sxs-lookup"><span data-stu-id="9380d-2660">For example, if strings take the form "*number* *operand* *number*" you can use a [regular expression](~/docs/standard/base-types/regular-expressions.md) to extract and handle the string's elements.</span></span> <span data-ttu-id="9380d-2661">Im Folgenden ein Beispiel:</span><span class="sxs-lookup"><span data-stu-id="9380d-2661">Here's an example:</span></span>  
  
 [!code-csharp[System.String.Split#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/splitalt1.cs#8)]
 [!code-vb[System.String.Split#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/splitalt1.vb#8)]  
  
 <span data-ttu-id="9380d-2662">Muster für reguläre Ausdrücke `(\d+)\s+([-+*/])\s+(\d+)` wird wie folgt definiert:</span><span class="sxs-lookup"><span data-stu-id="9380d-2662">The regular expression pattern `(\d+)\s+([-+*/])\s+(\d+)` is defined like this:</span></span>  
  
|<span data-ttu-id="9380d-2663">Muster</span><span class="sxs-lookup"><span data-stu-id="9380d-2663">Pattern</span></span>|<span data-ttu-id="9380d-2664">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="9380d-2664">Description</span></span>|  
|-------------|-----------------|  
|`(\d+)`|<span data-ttu-id="9380d-2665">Entsprechung für mindestens eine Dezimalstelle finden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2665">Match one or more decimal digits.</span></span> <span data-ttu-id="9380d-2666">Dies ist die erste Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="9380d-2666">This is the first capturing group.</span></span>|  
|`\s+`|<span data-ttu-id="9380d-2667">Übereinstimmung mit ein oder mehrere Leerzeichen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2667">Match one or more whitespace characters.</span></span>|  
|`([-+*/])`|<span data-ttu-id="9380d-2668">Entspricht einem arithmetischen Operator Vorzeichen (+, -, \*, oder /).</span><span class="sxs-lookup"><span data-stu-id="9380d-2668">Match an arithmetic operator sign (+, -, \*, or /).</span></span> <span data-ttu-id="9380d-2669">Dies ist die zweite Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="9380d-2669">This is the second capturing group.</span></span>|  
|`\s+`|<span data-ttu-id="9380d-2670">Übereinstimmung mit ein oder mehrere Leerzeichen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2670">Match one or more whitespace characters.</span></span>|  
|`(\d+)`|<span data-ttu-id="9380d-2671">Entsprechung für mindestens eine Dezimalstelle finden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2671">Match one or more decimal digits.</span></span> <span data-ttu-id="9380d-2672">Dies ist die dritte Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="9380d-2672">This is the third capturing group.</span></span>|  
  
 <span data-ttu-id="9380d-2673">Sie können auch einen regulären Ausdruck verwenden, um Teilzeichenfolgen aus einer Zeichenfolge basierend auf einen festen Satz von Zeichen, anstatt ein Muster zu extrahieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-2673">You can also use a regular expression to extract substrings from a string based on a pattern rather than a fixed set of characters.</span></span> <span data-ttu-id="9380d-2674">Dies ist ein häufiges Szenario, wenn eine dieser Bedingungen auftritt:</span><span class="sxs-lookup"><span data-stu-id="9380d-2674">This is a common scenario when either of these conditions occurs:</span></span>  
  
-   <span data-ttu-id="9380d-2675">Mindestens ein Trennzeichen ist nicht immer als ein Trennzeichen in den <xref:System.String> Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-2675">One or more of the delimiter characters does not always serve as a delimiter in the <xref:System.String> instance.</span></span>  
  
-   <span data-ttu-id="9380d-2676">Die Reihenfolge und Anzahl von Trennzeichen ist variabel oder unbekannt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2676">The sequence and number of delimiter characters is variable or unknown.</span></span>  
  
 <span data-ttu-id="9380d-2677">Z. B. die <xref:System.String.Split%2A> Methode kann nicht zum Aufteilen der folgenden Zeichenfolge, nicht verwendet werden, da die Anzahl der `\n` (in c#) oder `vbCrLf` Zeichen ist die Variable (in Visual Basic), und sie nicht immer als Trennzeichen dienen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2677">For example, the <xref:System.String.Split%2A> method cannot be used to split the following string, because the number of `\n` (in C#) or `vbCrLf` (in Visual Basic) characters is variable, and they don't always serve as delimiters.</span></span>  
  
```  
  
[This is captured\ntext.]\n\n[\n[This is more captured text.]\n]  
\n[Some more captured text:\n   Option1\n   Option2][Terse text.]  
  
```  
  
 <span data-ttu-id="9380d-2678">Diese Zeichenfolge kann einfach, wie das folgende Beispiel zeigt ein regulärer Ausdruck aufgeteilt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2678">A regular expression can split this string easily, as the following example shows.</span></span>  
  
 [!code-csharp[System.String.Split#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/splitalt2.cs#9)]
 [!code-vb[System.String.Split#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/splitalt2.vb#9)]  
  
 <span data-ttu-id="9380d-2679">Muster für reguläre Ausdrücke `\[([^\[\]]+)\]` wird wie folgt definiert:</span><span class="sxs-lookup"><span data-stu-id="9380d-2679">The regular expression pattern `\[([^\[\]]+)\]` is defined like this:</span></span>  
  
|<span data-ttu-id="9380d-2680">Muster</span><span class="sxs-lookup"><span data-stu-id="9380d-2680">Pattern</span></span>|<span data-ttu-id="9380d-2681">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="9380d-2681">Description</span></span>|  
|-------------|-----------------|  
|`\[`|<span data-ttu-id="9380d-2682">Übereinstimmung mit eine öffnende eckige Klammer ein.</span><span class="sxs-lookup"><span data-stu-id="9380d-2682">Match an opening bracket.</span></span>|  
|`([^\[\]]+)`|<span data-ttu-id="9380d-2683">Übereinstimmung mit beliebigem Zeichen, das kein öffnendes oder eine schließende Klammer ist mindestens einmal aus.</span><span class="sxs-lookup"><span data-stu-id="9380d-2683">Match any character that is not an opening or a closing bracket one or more times.</span></span> <span data-ttu-id="9380d-2684">Dies ist die erste Erfassungsgruppe.</span><span class="sxs-lookup"><span data-stu-id="9380d-2684">This is the first capturing group.</span></span>|  
|`\]`|<span data-ttu-id="9380d-2685">Übereinstimmung mit einer schließenden Klammer ein.</span><span class="sxs-lookup"><span data-stu-id="9380d-2685">Match a closing bracket.</span></span>|  
  
 <span data-ttu-id="9380d-2686">Die <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> Methode ist fast identisch mit <xref:System.String.Split%2A?displayProperty=nameWithType>, außer dass es sich um eine Zeichenfolge, die basierend auf das Muster eines regulären Ausdrucks anstelle eines festen Zeichen unterteilt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2686">The <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> method is almost identical to <xref:System.String.Split%2A?displayProperty=nameWithType>, except that it splits a string based on a regular expression pattern instead of a fixed character set.</span></span> <span data-ttu-id="9380d-2687">Z. B. im folgenden Beispiel wird die <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> Methode zum Aufteilen einer Zeichenfolge, die durch verschiedene Kombinationen von Bindestrichen und andere Zeichen getrennten Teilzeichenfolgen enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-2687">For example, the following example uses the <xref:System.Text.RegularExpressions.Regex.Split%2A?displayProperty=nameWithType> method to split a string that contains substrings delimited by various combinations of hyphens and other characters.</span></span>  
  
 [!code-csharp[System.String.Split#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/splitalt3.cs#10)]
 [!code-vb[System.String.Split#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/splitalt3.vb#10)]  
  
 <span data-ttu-id="9380d-2688">Muster für reguläre Ausdrücke `\s-\s?[+*]?\s?-\s` wird wie folgt definiert:</span><span class="sxs-lookup"><span data-stu-id="9380d-2688">The regular expression pattern `\s-\s?[+*]?\s?-\s` is defined like this:</span></span>  
  
|<span data-ttu-id="9380d-2689">Muster</span><span class="sxs-lookup"><span data-stu-id="9380d-2689">Pattern</span></span>|<span data-ttu-id="9380d-2690">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="9380d-2690">Description</span></span>|  
|-------------|-----------------|  
|`\s-`|<span data-ttu-id="9380d-2691">Mit übereinstimmen Sie einem Leerzeichen, gefolgt von einem Bindestrich.</span><span class="sxs-lookup"><span data-stu-id="9380d-2691">Match a whitespace character followed by a hyphen.</span></span>|  
|`\s?`|<span data-ttu-id="9380d-2692">Übereinstimmung mit keinem oder einem Leerzeichen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2692">Match zero or one whitespace character.</span></span>|  
|`[+*]?`|<span data-ttu-id="9380d-2693">Übereinstimmung mit keinem oder einem Vorkommen entweder das + oder \* Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2693">Match zero or one occurrence of either the + or \* character.</span></span>|  
|`\s?`|<span data-ttu-id="9380d-2694">Übereinstimmung mit keinem oder einem Leerzeichen Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2694">Match zero or one whitespace character.</span></span>|  
|`-\s`|<span data-ttu-id="9380d-2695">Übereinstimmung mit einem Bindestrich gefolgt von einem Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2695">Match a hyphen followed by a whitespace character.</span></span>|  
  
### <a name="search-methods-and-the-substring-method"></a><span data-ttu-id="9380d-2696">Suchen von Methoden und der Substring-Methode</span><span class="sxs-lookup"><span data-stu-id="9380d-2696">Search methods and the Substring method</span></span>  
 <span data-ttu-id="9380d-2697">Wenn Sie nicht alle die Teilzeichenfolgen in einer Zeichenfolge interessiert sind, möchten Sie möglicherweise arbeiten mit einer der Methoden zum Zeichenfolgenvergleich, der den Index zurückgibt, an dem der Vergleich beginnt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2697">If you aren't interested in all of the substrings in a string, you might prefer to work with one of the string comparison methods that returns the index at which the match begins.</span></span> <span data-ttu-id="9380d-2698">Rufen Sie anschließend die <xref:System.String.Substring%2A> Methode, um die Teilzeichenfolge extrahiert, die Sie möchten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2698">You can then call the <xref:System.String.Substring%2A> method to extract the substring that you want.</span></span> <span data-ttu-id="9380d-2699">Die Methoden zum Zeichenfolgenvergleich umfassen:</span><span class="sxs-lookup"><span data-stu-id="9380d-2699">The string comparison methods include:</span></span>  
  
-   <span data-ttu-id="9380d-2700"><xref:System.String.IndexOf%2A>, den nullbasierten Index des ersten Vorkommens eines Zeichens oder einer Zeichenfolge in eine Zeichenfolgeninstanz zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-2700"><xref:System.String.IndexOf%2A>, which returns the zero-based index of the first occurrence of a character or string in a string instance.</span></span>  
  
-   <span data-ttu-id="9380d-2701"><xref:System.String.IndexOfAny%2A>, die den nullbasierten Index in der aktuellen Zeichenfolgeninstanz des ersten Vorkommens eines beliebigen Zeichens aus einem Array von Zeichen zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2701"><xref:System.String.IndexOfAny%2A>, which returns the zero-based index in the current string instance of the first occurrence of any character in a character array.</span></span>  
  
-   <span data-ttu-id="9380d-2702"><xref:System.String.LastIndexOf%2A>, den nullbasierten Index des letzten Vorkommens eines Zeichens oder einer Zeichenfolge in eine Zeichenfolgeninstanz zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-2702"><xref:System.String.LastIndexOf%2A>, which returns the zero-based index of the last occurrence of a character or string in a string instance.</span></span>  
  
-   <span data-ttu-id="9380d-2703"><xref:System.String.LastIndexOfAny%2A>, die einen nullbasierten Index in der aktuellen Zeichenfolgeninstanz des letzten Vorkommens eines beliebigen Zeichens aus einem Array von Zeichen zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2703"><xref:System.String.LastIndexOfAny%2A>, which returns a zero-based index in the current string instance of the last occurrence of any character in a character array.</span></span>  
  
 <span data-ttu-id="9380d-2704">Im folgenden Beispiel wird die <xref:System.String.IndexOf%2A> Methode, um die Punkte in einer Zeichenfolge gesucht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2704">The following example uses the <xref:System.String.IndexOf%2A> method to find the periods in a string.</span></span> <span data-ttu-id="9380d-2705">Anschließend wird mithilfe der <xref:System.String.Substring%2A> Methode, um vollständige Sätze zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-2705">It then uses the <xref:System.String.Substring%2A> method to return full sentences.</span></span>  
  
 [!code-csharp[System.String.Split#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/splitalt4.cs#11)]
 [!code-vb[System.String.Split#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/splitalt4.vb#11)]  
  
## <a name="performance-considerations"></a><span data-ttu-id="9380d-2706">Überlegungen zur Leistung</span><span class="sxs-lookup"><span data-stu-id="9380d-2706">Performance Considerations</span></span>  
 <span data-ttu-id="9380d-2707">Die <xref:System.String.Split%2A> Methoden von Arbeitsspeicher für das zurückgegebene Arrayobjekt und <xref:System.String> -Objekt für jedes Arrayelement.</span><span class="sxs-lookup"><span data-stu-id="9380d-2707">The <xref:System.String.Split%2A> methods allocate memory for the returned array object and a <xref:System.String> object for each array element.</span></span> <span data-ttu-id="9380d-2708">Wenn Ihre Anwendung eine optimale Leistung erfordert oder wenn die Verwaltung von speicherbelegung in Ihre Anwendung von entscheidender Bedeutung ist, sollten Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2708">If your application requires optimal performance or if managing memory allocation is critical in your application, consider using the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method.</span></span> <span data-ttu-id="9380d-2709">Sie haben auch die Möglichkeit der Verwendung der <xref:System.String.Compare%2A> Methode, um eine Teilzeichenfolge innerhalb einer Zeichenfolge suchen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2709">You also have the option of using the <xref:System.String.Compare%2A> method to locate a substring within a string.</span></span>  
  
 <span data-ttu-id="9380d-2710">Verwenden Sie zum Aufteilen einer Zeichenfolge am Trennzeichen der <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode zum Suchen eines Trennzeichens in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2710">To split a string at a separator character, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate a separator character in the string.</span></span> <span data-ttu-id="9380d-2711">Verwenden Sie zum Aufteilen einer Zeichenfolge an einem Trennzeichen der <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode zum Suchen des ersten Zeichens der Zeichenfolge als Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2711">To split a string at a separator string, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate the first character of the separator string.</span></span> <span data-ttu-id="9380d-2712">Verwenden Sie dann die <xref:System.String.Compare%2A> Methode, um zu bestimmen, ob die Zeichen nach dem ersten Zeichen der verbleibenden Zeichen in der Trennzeichenfolge gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2712">Then use the <xref:System.String.Compare%2A> method to determine whether the characters after that first character are equal to the remaining characters of the separator string.</span></span>  
  
 <span data-ttu-id="9380d-2713">Darüber hinaus, wenn der gleiche Satz von Zeichen wird verwendet, um Zeichenfolgen in mehreren Teilen <xref:System.String.Split%2A> Methodenaufrufe, sollten Sie ein einzelnes Array erstellen, und klicken Sie in jedem Methodenaufruf darauf verweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2713">In addition, if the same set of characters is used to split strings in multiple <xref:System.String.Split%2A> method calls, consider creating a single array and referencing it in each method call.</span></span> <span data-ttu-id="9380d-2714">Dadurch wird erheblich reduziert, der zusätzliche Verarbeitungsaufwand von jedem Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="9380d-2714">This significantly reduces the additional overhead of each method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2715">Im folgenden Beispiel wird veranschaulicht, wie um einzelne Wörter aus einen Textblock zu extrahieren, indem Sie zum Behandeln von Leerzeichen und Satzzeichen als Trennzeichen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2715">The following example demonstrates how to extract individual words from a block of text by treating white space and punctuation marks as delimiters.</span></span> <span data-ttu-id="9380d-2716">Das Zeichenarray übergeben, um die `separator` Parameter, der die <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> Methode besteht aus einem Leerzeichen und einem Tabstoppzeichen, zusammen mit einigen häufig verwendeten Interpunktionszeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2716">The character array passed to the `separator` parameter of the <xref:System.String.Split%28System.Char%5B%5D%29?displayProperty=nameWithType> method consists of a space character and a tab character, together with some common punctuation symbols.</span></span>  
  
 [!code-csharp[System.String.Split#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/split2.cs#2)]
 [!code-vb[System.String.Split#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/split2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2717">
            <para>In der [! Include[net_v35_short](~/Includes/NET-v35-Short-MD.MD)] und frühere Versionen, wenn die <see cref="M:System.String.Split(System.Char[])" /> -Methode übergeben eine <paramref name="separator" /> , <see langword="null" /> oder keine Zeichen enthält, die Methode verwendet einen etwas anderen Satz von Zeichen zum Aufteilen der eine Zeichenfolge als die <see cref="M:System.String.Trim(System.Char[])" /> Methode ist, um die Zeichenfolge gekürzt. In der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)], beide Methoden verwenden, einen identischen Satz von Unicode-Zeichen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2717">
              <para>In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, if the <see cref="M:System.String.Split(System.Char[])" /> method is passed a <paramref name="separator" /> that is <see langword="null" /> or contains no characters, the method uses a slightly different set of characters to split the string than the <see cref="M:System.String.Trim(System.Char[])" /> method does to trim the string. In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], both methods use an identical set of Unicode white-space characters.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char separator, StringSplitOptions options = System.StringSplitOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char separator, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.Char,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char, Optional options As StringSplitOptions = System.StringSplitOptions.None) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : char * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" />
        <Parameter Name="options" Type="System.StringSplitOptions" />
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char[] separator, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char[] separator, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.Char[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char(), count As Integer) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;char&gt; ^ separator, int count);" />
      <MemberSignature Language="F#" Value="member this.Split : char[] * int -&gt; string[]" Usage="string.Split (separator, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char[]" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="separator">
          <span data-ttu-id="9380d-2718">Ein Zeichenarray, das die Teilzeichenfolgen in dieser Zeichenfolge trennt, ein leeres Array ohne Trennzeichen oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2718">A character array that delimits the substrings in this string, an empty array that contains no delimiters, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-2719">Die maximale Anzahl der zurückzugebenden Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2719">The maximum number of substrings to return.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2720">Unterteilt eine Zeichenfolge anhand der Zeichen in einem Array in eine maximale Anzahl von Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2720">Splits a string into a maximum number of substrings based on the characters in an array.</span>
          </span>
          <span data-ttu-id="9380d-2721">Sie geben außerdem die maximale Anzahl der zurückzugebenden Teilzeichenfolgen an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2721">You also specify the maximum number of substrings to return.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2722">Ein Array, dessen Elemente die Teilzeichenfolgen in dieser Instanz enthält, die durch ein oder mehr Zeichen aus <paramref name="separator" /> getrennt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2722">An array whose elements contain the substrings in this instance that are delimited by one or more characters in <paramref name="separator" />.</span>
          </span>
          <span data-ttu-id="9380d-2723">Weitere Informationen finden Sie im Abschnitt "Hinweise".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2723">For more information, see the Remarks section.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2724">Trennzeichen sind nicht in den Elementen des zurückgegebenen Arrays enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2724">Delimiter characters are not included in the elements of the returned array.</span></span>  
  
 <span data-ttu-id="9380d-2725">Wenn diese Instanz keine Zeichen enthält `separator`, das zurückgegebene Array besteht aus einem einzelnen Element, das diese Instanz enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-2725">If this instance does not contain any of the characters in `separator`, the returned array consists of a single element that contains this instance.</span></span> <span data-ttu-id="9380d-2726">Wenn `count` NULL ist, wird ein leeres Array zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-2726">If `count` is zero, an empty array is returned.</span></span>  
  
 <span data-ttu-id="9380d-2727">Wenn die `separator` Parameter `null` oder keine Zeichen enthält, Leerzeichen werden als Trennzeichen angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2727">If the `separator` parameter is `null` or contains no characters, white-space characters are assumed to be the delimiters.</span></span> <span data-ttu-id="9380d-2728">Leerzeichen werden durch die Unicode-standard und return definiert `true` Wenn es sich bei der Übergabe an die <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2728">White-space characters are defined by the Unicode standard and return `true` if they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9380d-2729">Jedes Element der `separator` ein separates Trennzeichen definiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-2729">Each element of `separator` defines a separate delimiter character.</span></span> <span data-ttu-id="9380d-2730">Wenn zwei Trennzeichen benachbart sind oder ein Trennzeichen am Anfang oder Ende dieser Instanz gefunden wird, enthält das entsprechende Arrayelement <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2730">If two delimiters are adjacent, or a delimiter is found at the beginning or end of this instance, the corresponding array element contains <xref:System.String.Empty>.</span></span>  
  
 <span data-ttu-id="9380d-2731">Treten mehr als `count` Teilzeichenfolgen in dieser Instanz, die die erste `count` -1 Teilzeichenfolgen werden in der ersten zurückgegeben `count` minus 1 Elemente zurückgegeben, und die restlichen Zeichen in dieser Instanz werden in den letzten zurückgegeben Element des Rückgabewerts.</span><span class="sxs-lookup"><span data-stu-id="9380d-2731">If there are more than `count` substrings in this instance, the first `count` minus 1 substrings are returned in the first `count` minus 1 elements of the return value, and the remaining characters in this instance are returned in the last element of the return value.</span></span>  
  
 <span data-ttu-id="9380d-2732">Wenn `count` ist größer als die Anzahl von Teilzeichenfolgen auf, werden die verfügbaren Teilzeichenfolgen zurückgegeben und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2732">If `count` is greater than the number of substrings, the available substrings are returned and no exception is thrown.</span></span>  
  
 <span data-ttu-id="9380d-2733">Die folgende Tabelle enthält Beispiele.</span><span class="sxs-lookup"><span data-stu-id="9380d-2733">The following table provides examples.</span></span>  
  
|<span data-ttu-id="9380d-2734">Zeichenfolgenwert</span><span class="sxs-lookup"><span data-stu-id="9380d-2734">String value</span></span>|<span data-ttu-id="9380d-2735">Trennzeichen</span><span class="sxs-lookup"><span data-stu-id="9380d-2735">Separator</span></span>|<span data-ttu-id="9380d-2736">Anzahl</span><span class="sxs-lookup"><span data-stu-id="9380d-2736">Count</span></span>|<span data-ttu-id="9380d-2737">Zurückgegebene array</span><span class="sxs-lookup"><span data-stu-id="9380d-2737">Returned array</span></span>|  
|------------------|---------------|-----------|--------------------|  
|<span data-ttu-id="9380d-2738">"42, 12, 19"</span><span class="sxs-lookup"><span data-stu-id="9380d-2738">"42, 12, 19"</span></span>|<span data-ttu-id="9380d-2739">neue Char [] {',', ' '} (c#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2739">new Char[] {',', ' '} (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2740">Char() = {"," c "" C} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2740">Char() = {","c, " "c} (Visual Basic)</span></span>|<span data-ttu-id="9380d-2741">2</span><span class="sxs-lookup"><span data-stu-id="9380d-2741">2</span></span>|<span data-ttu-id="9380d-2742">{"42", " 12, 19"}</span><span class="sxs-lookup"><span data-stu-id="9380d-2742">{"42", " 12, 19"}</span></span>|  
|<span data-ttu-id="9380d-2743">"42..12..19"</span><span class="sxs-lookup"><span data-stu-id="9380d-2743">"42..12..19"</span></span>|<span data-ttu-id="9380d-2744">new Char[] {'.'}</span><span class="sxs-lookup"><span data-stu-id="9380d-2744">new Char[] {'.'}</span></span> <span data-ttu-id="9380d-2745">(C#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2745">(C#)</span></span><br /><br /> <span data-ttu-id="9380d-2746">Char() = {"." c} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2746">Char() = {"."c} (Visual Basic)</span></span>|<span data-ttu-id="9380d-2747">4</span><span class="sxs-lookup"><span data-stu-id="9380d-2747">4</span></span>|<span data-ttu-id="9380d-2748">{"42", "", "12", ".19"}</span><span class="sxs-lookup"><span data-stu-id="9380d-2748">{"42", "", "12", ".19"}</span></span>|  
|<span data-ttu-id="9380d-2749">"Banane"</span><span class="sxs-lookup"><span data-stu-id="9380d-2749">"Banana"</span></span>|<span data-ttu-id="9380d-2750">new Char[] {'.'}</span><span class="sxs-lookup"><span data-stu-id="9380d-2750">new Char[] {'.'}</span></span> <span data-ttu-id="9380d-2751">(C#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2751">(C#)</span></span><br /><br /> <span data-ttu-id="9380d-2752">Char() = {"." c} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2752">Char() = {"."c} (Visual Basic)</span></span>|<span data-ttu-id="9380d-2753">2</span><span class="sxs-lookup"><span data-stu-id="9380d-2753">2</span></span>|<span data-ttu-id="9380d-2754">{"Banana"}</span><span class="sxs-lookup"><span data-stu-id="9380d-2754">{"Banana"}</span></span>|  
|<span data-ttu-id="9380d-2755">"Darb\nSmarba" (c#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2755">"Darb\nSmarba" (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2756">"Darb", VbLf & "Smarba" (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2756">"Darb" & vbLf & "Smarba" (Visual Basic)</span></span>|<span data-ttu-id="9380d-2757">neue Char [] {} (c#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2757">new Char[] {} (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2758">Char() = {} (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2758">Char() = {} (Visual Basic)</span></span>|<span data-ttu-id="9380d-2759">1</span><span class="sxs-lookup"><span data-stu-id="9380d-2759">1</span></span>|<span data-ttu-id="9380d-2760">{"Darb\nSmarba"} (C#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2760">{"Darb\nSmarba"} (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2761">"Darb", VbLf & "Smarba" (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2761">"Darb" & vbLf & "Smarba" (Visual Basic)</span></span>|  
|<span data-ttu-id="9380d-2762">"Darb\nSmarba" (c#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2762">"Darb\nSmarba" (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2763">"Darb", VbLf & "Smarba" (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2763">"Darb" & vbLf & "Smarba" (Visual Basic)</span></span>|<span data-ttu-id="9380d-2764">neue Char [] null (c#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2764">new Char[] null (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2765">Char() = Nothing</span><span class="sxs-lookup"><span data-stu-id="9380d-2765">Char() = Nothing</span></span>|<span data-ttu-id="9380d-2766">2</span><span class="sxs-lookup"><span data-stu-id="9380d-2766">2</span></span>|<span data-ttu-id="9380d-2767">{"Darb", "Smarba"}</span><span class="sxs-lookup"><span data-stu-id="9380d-2767">{"Darb", "Smarba"}</span></span>|  
|<span data-ttu-id="9380d-2768">"Darb\nSmarba" (c#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2768">"Darb\nSmarba" (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2769">"Darb", VbLf & "Smarba" (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="9380d-2769">"Darb" & vbLf & "Smarba" (Visual Basic)</span></span>|<span data-ttu-id="9380d-2770">neue Char [] null (c#)</span><span class="sxs-lookup"><span data-stu-id="9380d-2770">new Char[] null (C#)</span></span><br /><br /> <span data-ttu-id="9380d-2771">Char() = Nothing</span><span class="sxs-lookup"><span data-stu-id="9380d-2771">Char() = Nothing</span></span>|<span data-ttu-id="9380d-2772">100</span><span class="sxs-lookup"><span data-stu-id="9380d-2772">100</span></span>|<span data-ttu-id="9380d-2773">{"Darb", "Smarba"}</span><span class="sxs-lookup"><span data-stu-id="9380d-2773">{"Darb", "Smarba"}</span></span>|  
  
## <a name="performance-considerations"></a><span data-ttu-id="9380d-2774">Überlegungen zur Leistung</span><span class="sxs-lookup"><span data-stu-id="9380d-2774">Performance Considerations</span></span>  
 <span data-ttu-id="9380d-2775">Die <xref:System.String.Split%2A> Methoden von Arbeitsspeicher für das zurückgegebene Arrayobjekt und <xref:System.String> -Objekt für jedes Arrayelement.</span><span class="sxs-lookup"><span data-stu-id="9380d-2775">The <xref:System.String.Split%2A> methods allocate memory for the returned array object and a <xref:System.String> object for each array element.</span></span> <span data-ttu-id="9380d-2776">Wenn Ihre Anwendung eine optimale Leistung erfordert oder wenn die Verwaltung von speicherbelegung in Ihre Anwendung von entscheidender Bedeutung ist, sollten Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> -Methode, und optional die <xref:System.String.Compare%2A> Methode, eine Teilzeichenfolge innerhalb einer Zeichenfolge suchen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2776">If your application requires optimal performance or if managing memory allocation is critical in your application, consider using the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method, and optionally the <xref:System.String.Compare%2A> method, to locate a substring within a string.</span></span>  
  
 <span data-ttu-id="9380d-2777">Wenn Sie eine Zeichenfolge an einem Trennzeichen teilen, verwenden Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode zum Suchen eines Trennzeichens in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2777">If you are splitting a string at a separator character, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate a separator character in the string.</span></span> <span data-ttu-id="9380d-2778">Wenn Sie eine Zeichenfolge an einem Trennzeichen teilen, verwenden Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode zum Suchen des ersten Zeichens der Zeichenfolge als Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2778">If you are splitting a string at a separator string, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate the first character of the separator string.</span></span> <span data-ttu-id="9380d-2779">Verwenden Sie dann die <xref:System.String.Compare%2A> Methode, um zu bestimmen, ob die Zeichen nach dem ersten Zeichen der verbleibenden Zeichen in der Trennzeichenfolge gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2779">Then use the <xref:System.String.Compare%2A> method to determine whether the characters after that first character are equal to the remaining characters of the separator string.</span></span>  
  
 <span data-ttu-id="9380d-2780">Darüber hinaus, wenn der gleiche Satz von Zeichen wird verwendet, um Zeichenfolgen in mehreren Teilen <xref:System.String.Split%2A> Methodenaufrufe, sollten Sie ein einzelnes Array erstellen, und klicken Sie in jedem Methodenaufruf darauf verweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2780">In addition, if the same set of characters is used to split strings in multiple <xref:System.String.Split%2A> method calls, consider creating a single array and referencing it in each method call.</span></span> <span data-ttu-id="9380d-2781">Dadurch wird erheblich reduziert, der zusätzliche Verarbeitungsaufwand von jedem Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="9380d-2781">This significantly reduces the additional overhead of each method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2782">Im folgende Beispiel wird veranschaulicht, wie `count` wirkt sich auf die Anzahl der Zeichenfolgen, die vom <xref:System.String.Split%2A>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2782">The following example demonstrates how `count` affects the number of strings returned by <xref:System.String.Split%2A>.</span></span>  
  
 [!code-csharp[StringSplit2#10](~/samples/snippets/csharp/VS_Snippets_CLR/StringSplit2/CS/StringSplit10.cs#10)]
 [!code-vb[StringSplit2#10](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringSplit2/VB/stringsplit10.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2783">
            <paramref name="count" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2783">
              <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2784">
            <para>In der [! Include[net_v35_short](~/Includes/NET-v35-Short-MD.MD)] und frühere Versionen, wenn die <see cref="M:System.String.Split(System.Char[])" /> -Methode übergeben eine <paramref name="separator" /> , <see langword="null" /> oder keine Zeichen enthält, die Methode verwendet einen etwas anderen Satz von Zeichen zum Aufteilen der eine Zeichenfolge als die <see cref="M:System.String.Trim(System.Char[])" /> Methode ist, um die Zeichenfolge gekürzt. In der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)], beide Methoden verwenden, einen identischen Satz von Unicode-Zeichen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2784">
              <para>In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, if the <see cref="M:System.String.Split(System.Char[])" /> method is passed a <paramref name="separator" /> that is <see langword="null" /> or contains no characters, the method uses a slightly different set of characters to split the string than the <see cref="M:System.String.Trim(System.Char[])" /> method does to trim the string. In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], both methods use an identical set of Unicode white-space characters.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Substring(System.Int32)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char[] separator, StringSplitOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char[] separator, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.Char[],System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char(), options As StringSplitOptions) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;char&gt; ^ separator, StringSplitOptions options);" />
      <MemberSignature Language="F#" Value="member this.Split : char[] * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char[]" />
        <Parameter Name="options" Type="System.StringSplitOptions" />
      </Parameters>
      <Docs>
        <param name="separator">
          <span data-ttu-id="9380d-2785">Ein Zeichenarray, das die Teilzeichenfolgen in dieser Zeichenfolge trennt, ein leeres Array ohne Trennzeichen oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2785">A character array that delimits the substrings in this string, an empty array that contains no delimiters, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9380d-2786">
            <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, wenn leere Arrayelemente aus dem zurückgegebenen Array ausgelassen werden sollen, oder <see cref="F:System.StringSplitOptions.None" />, wenn leere Arrayelemente in das zurückgegebene Array eingeschlossen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2786">
              <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> to omit empty array elements from the array returned; or <see cref="F:System.StringSplitOptions.None" /> to include empty array elements in the array returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2787">Unterteilt eine Zeichenfolge anhand der Zeichen in einem Array in Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2787">Splits a string into substrings based on the characters in an array.</span>
          </span>
          <span data-ttu-id="9380d-2788">Sie können angeben, ob die Teilzeichenfolgen auch leere Arrayelemente umfassen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2788">You can specify whether the substrings include empty array elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2789">Ein Array, dessen Elemente die Teilzeichenfolgen in dieser Zeichenfolge enthält, die durch ein oder mehr Zeichen aus <paramref name="separator" /> getrennt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2789">An array whose elements contain the substrings in this string that are delimited by one or more characters in <paramref name="separator" />.</span>
          </span>
          <span data-ttu-id="9380d-2790">Weitere Informationen finden Sie im Abschnitt "Hinweise".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2790">For more information, see the Remarks section.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="return-value-details"></a><span data-ttu-id="9380d-2791">Rückgabewert-details</span><span class="sxs-lookup"><span data-stu-id="9380d-2791">Return value details</span></span>  
 <span data-ttu-id="9380d-2792">Trennzeichen (die Zeichen in der `separator` Array) sind nicht in den Elementen des zurückgegebenen Arrays enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2792">Delimiter characters (the characters in the `separator` array) are not included in the elements of the returned array.</span></span> <span data-ttu-id="9380d-2793">Z. B. wenn die `separator` Array enthält das Zeichen "-" und der Wert der aktuellen Zeichenfolgeninstanz "aa-bb-cc", die Methode gibt ein Array, das drei Elemente enthält: "aa", "bb" und "cc".</span><span class="sxs-lookup"><span data-stu-id="9380d-2793">For example, if the `separator` array includes the character "-" and the value of the current string instance is "aa-bb-cc", the method returns an array that contains three elements: "aa", "bb", and "cc".</span></span>  
  
 <span data-ttu-id="9380d-2794">Wenn diese Instanz keine Zeichen enthält `separator`, das zurückgegebene Array besteht aus einem einzelnen Element, das diese Instanz enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-2794">If this instance does not contain any of the characters in `separator`, the returned array consists of a single element that contains this instance.</span></span>  
  
 <span data-ttu-id="9380d-2795">Wenn die `options` Parameter <xref:System.StringSplitOptions.RemoveEmptyEntries> und die Länge dieser Instanz ist 0 (null), die Methode ein leeres Array zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-2795">If the `options` parameter is <xref:System.StringSplitOptions.RemoveEmptyEntries> and the length of this instance is zero, the method returns an empty array.</span></span>  
  
 <span data-ttu-id="9380d-2796">Jedes Element der `separator` definiert ein separates Trennzeichen, das ein einzelnes Zeichen besteht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2796">Each element of `separator` defines a separate delimiter that consists of a single character.</span></span> <span data-ttu-id="9380d-2797">Wenn die `options` Argument <xref:System.StringSplitOptions.None>, und zwei Trennzeichen benachbarten oder am Anfang oder Ende dieser Instanz ein einzeln verwendetes Trennzeichen gefunden wird, enthält das entsprechende Arrayelement <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2797">If the `options` argument is <xref:System.StringSplitOptions.None>, and two delimiters are adjacent or a delimiter is found at the beginning or end of this instance, the corresponding array element contains <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-2798">Z. B. wenn `separator` enthält zwei Elemente, die "-" und "\_", ist der Wert der Zeichenfolgeninstanz "-\_aa -\_", und der Wert des der `options` Argument ist <xref:System.StringSplitOptions.None>, die Methode gibt ein Zeichenfolgenarray mit zurück. die folgenden fünf Elemente:</span><span class="sxs-lookup"><span data-stu-id="9380d-2798">For example, if `separator` includes  two elements, "-" and "\_", the value of the string instance is "-\_aa-\_", and the value of   the `options` argument is <xref:System.StringSplitOptions.None>, the method returns a string array with the following five elements:</span></span>  
  
1.  <span data-ttu-id="9380d-2799"><xref:System.String.Empty?displayProperty=nameWithType>, steht für die leere Zeichenfolge, die vor der "-"-Zeichen am Index 0.</span><span class="sxs-lookup"><span data-stu-id="9380d-2799"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string that precedes the "-" character at index 0.</span></span>  
  
2.  <span data-ttu-id="9380d-2800"><xref:System.String.Empty?displayProperty=nameWithType>, steht für die leere Zeichenfolge zwischen den "-"-Zeichen am Index 0 und das Zeichen "_" am Index 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-2800"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string between the "-" character at index 0 and the "_" character at index 1.</span></span>  
  
3.  <span data-ttu-id="9380d-2801">"aa",</span><span class="sxs-lookup"><span data-stu-id="9380d-2801">"aa",</span></span>  
  
4.  <span data-ttu-id="9380d-2802"><xref:System.String.Empty?displayProperty=nameWithType>, die die leere Zeichenfolge, die das Zeichen "_" am Index 4 folgt darstellt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2802"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string that follows the "_" character at index 4.</span></span>  
  
5.  <span data-ttu-id="9380d-2803"><xref:System.String.Empty?displayProperty=nameWithType>, steht für die leere Zeichenfolge, die folgt der "-"-Zeichen am Index 5.</span><span class="sxs-lookup"><span data-stu-id="9380d-2803"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string that follows the "-" character at index 5.</span></span>  
  
## <a name="the-separator-array"></a><span data-ttu-id="9380d-2804">Das Separator-array</span><span class="sxs-lookup"><span data-stu-id="9380d-2804">The separator array</span></span>  
 <span data-ttu-id="9380d-2805">Wenn die `separator` Parameter `null` oder keine Zeichen enthält, Leerzeichen werden als Trennzeichen angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2805">If the `separator` parameter is `null` or contains no characters, white-space characters are assumed to be the delimiters.</span></span> <span data-ttu-id="9380d-2806">Leerzeichen werden durch die Unicode-standard und return definiert `true` Wenn es sich bei der Übergabe an die <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2806">White-space characters are defined by the Unicode standard and return `true` if they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9380d-2807">Wenn die `separator` Parameter im Aufruf an die Überladung dieser Methode ist `null`, überladungsauflösung des Compiler ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2807">If the `separator` parameter in the call to this method overload is `null`, compiler overload resolution fails.</span></span> <span data-ttu-id="9380d-2808">Um die aufgerufene Methode eindeutig identifizieren zu können, muss Ihr Code Geben Sie den Typ des der `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2808">To unambiguously identify the called method, your code must indicate the type of the `null`.</span></span> <span data-ttu-id="9380d-2809">Das folgende Beispiel zeigt mehrere Möglichkeiten, diese Überladung eindeutig zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-2809">The following example shows several ways to unambiguously identify this overload.</span></span>  
  
 [!code-csharp[System.String.Split#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/split3.cs#5)]
 [!code-vb[System.String.Split#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/split3.vb#5)]  
  
## <a name="comparison-details"></a><span data-ttu-id="9380d-2810">Von Vergleichsdetails</span><span class="sxs-lookup"><span data-stu-id="9380d-2810">Comparison details</span></span>  
 <span data-ttu-id="9380d-2811">Die <xref:System.String.Split%2A> Methode extrahiert die Teilzeichenfolgen in dieser Zeichenfolge, die von einer oder mehreren Zeichen getrennt sind die `separator` -Parameter und gibt diese Teilzeichenfolgen als Elemente eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-2811">The <xref:System.String.Split%2A> method extracts the substrings in this string that are delimited by one or more of the characters in the `separator` parameter, and returns those substrings as elements of an array.</span></span>  
  
 <span data-ttu-id="9380d-2812">Die <xref:System.String.Split%2A> -Methode sucht nach Trennzeichen durch Durchführen von Vergleichen mit der Groß-/Kleinschreibung der ordinalen Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-2812">The <xref:System.String.Split%2A> method looks for delimiters by performing comparisons using case-sensitive ordinal sort rules.</span></span> <span data-ttu-id="9380d-2813">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter den <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-2813">For more information about word, string, and ordinal sorts, see the <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> enumeration.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="9380d-2814">Überlegungen zur Leistung</span><span class="sxs-lookup"><span data-stu-id="9380d-2814">Performance Considerations</span></span>  
 <span data-ttu-id="9380d-2815">Die <xref:System.String.Split%2A> Methoden von Arbeitsspeicher für das zurückgegebene Arrayobjekt und <xref:System.String> -Objekt für jedes Arrayelement.</span><span class="sxs-lookup"><span data-stu-id="9380d-2815">The <xref:System.String.Split%2A> methods allocate memory for the returned array object and a <xref:System.String> object for each array element.</span></span> <span data-ttu-id="9380d-2816">Wenn Ihre Anwendung eine optimale Leistung erfordert oder wenn die Verwaltung von speicherbelegung in Ihre Anwendung von entscheidender Bedeutung ist, sollten Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> -Methode, und optional die <xref:System.String.Compare%2A> Methode, eine Teilzeichenfolge innerhalb einer Zeichenfolge suchen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2816">If your application requires optimal performance or if managing memory allocation is critical in your application, consider using the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method, and optionally the <xref:System.String.Compare%2A> method, to locate a substring within a string.</span></span>  
  
 <span data-ttu-id="9380d-2817">Wenn Sie eine Zeichenfolge an einem Trennzeichen teilen, verwenden Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode zum Suchen eines Trennzeichens in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2817">If you are splitting a string at a separator character, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate a separator character in the string.</span></span> <span data-ttu-id="9380d-2818">Wenn Sie eine Zeichenfolge an einem Trennzeichen teilen, verwenden Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode zum Suchen des ersten Zeichens der Zeichenfolge als Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2818">If you are splitting a string at a separator string, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate the first character of the separator string.</span></span> <span data-ttu-id="9380d-2819">Verwenden Sie dann die <xref:System.String.Compare%2A> Methode, um zu bestimmen, ob die Zeichen nach dem ersten Zeichen der verbleibenden Zeichen in der Trennzeichenfolge gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2819">Then use the <xref:System.String.Compare%2A> method to determine whether the characters after that first character are equal to the remaining characters of the separator string.</span></span>  
  
 <span data-ttu-id="9380d-2820">Darüber hinaus, wenn der gleiche Satz von Zeichen wird verwendet, um Zeichenfolgen in mehreren Teilen <xref:System.String.Split%2A> Methodenaufrufe, sollten Sie ein einzelnes Array erstellen, und klicken Sie in jedem Methodenaufruf darauf verweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2820">In addition, if the same set of characters is used to split strings in multiple <xref:System.String.Split%2A> method calls, consider creating a single array and referencing it in each method call.</span></span> <span data-ttu-id="9380d-2821">Dadurch wird erheblich reduziert, der zusätzliche Verarbeitungsaufwand von jedem Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="9380d-2821">This significantly reduces the additional overhead of each method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2822">Im folgenden Beispiel wird die <xref:System.StringSplitOptions> Enumeration zum ein- bzw. Ausschließen von generierte Teilzeichenfolgen der <xref:System.String.Split%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2822">The following example uses the <xref:System.StringSplitOptions> enumeration to include or exclude substrings generated by the <xref:System.String.Split%2A> method.</span></span>  
  
 [!code-cpp[string.split3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.split3/CPP/omit.cpp#1)]
 [!code-csharp[string.split3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.split3/CS/omit.cs#1)]
 [!code-vb[string.split3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.split3/VB/omit.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2823">
            <paramref name="options" /> entspricht keinem der <see cref="T:System.StringSplitOptions" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2823">
              <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2824">
            <para>In der [! Include[net_v35_short](~/Includes/NET-v35-Short-MD.MD)] und frühere Versionen, wenn die <see cref="M:System.String.Split(System.Char[])" /> -Methode übergeben eine <paramref name="separator" /> , <see langword="null" /> oder keine Zeichen enthält, die Methode verwendet einen etwas anderen Satz von Zeichen zum Aufteilen der eine Zeichenfolge als die <see cref="M:System.String.Trim(System.Char[])" /> Methode ist, um die Zeichenfolge gekürzt. In der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)], beide Methoden verwenden, einen identischen Satz von Unicode-Zeichen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2824">
              <para>In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, if the <see cref="M:System.String.Split(System.Char[])" /> method is passed a <paramref name="separator" /> that is <see langword="null" /> or contains no characters, the method uses a slightly different set of characters to split the string than the <see cref="M:System.String.Trim(System.Char[])" /> method does to trim the string. In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], both methods use an identical set of Unicode white-space characters.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string separator, StringSplitOptions options = System.StringSplitOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string separator, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.String,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As String, Optional options As StringSplitOptions = System.StringSplitOptions.None) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : string * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="options" Type="System.StringSplitOptions" />
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string[] separator, StringSplitOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string[] separator, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.String[],System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As String(), options As StringSplitOptions) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;System::String ^&gt; ^ separator, StringSplitOptions options);" />
      <MemberSignature Language="F#" Value="member this.Split : string[] * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String[]" />
        <Parameter Name="options" Type="System.StringSplitOptions" />
      </Parameters>
      <Docs>
        <param name="separator">
          <span data-ttu-id="9380d-2825">Ein Array mit Zeichenfolgen, die die Teilzeichenfolgen in dieser Zeichenfolge trennen, ein leeres Array ohne Trennzeichen oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2825">A string array that delimits the substrings in this string, an empty array that contains no delimiters, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9380d-2826">
            <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, wenn leere Arrayelemente aus dem zurückgegebenen Array ausgelassen werden sollen, oder <see cref="F:System.StringSplitOptions.None" />, wenn leere Arrayelemente in das zurückgegebene Array eingeschlossen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2826">
              <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> to omit empty array elements from the array returned; or <see cref="F:System.StringSplitOptions.None" /> to include empty array elements in the array returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2827">Unterteilt eine Zeichenfolge anhand der Zeichenfolgen in einem Array in Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2827">Splits a string into substrings based on the strings in an array.</span>
          </span>
          <span data-ttu-id="9380d-2828">Sie können angeben, ob die Teilzeichenfolgen auch leere Arrayelemente umfassen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2828">You can specify whether the substrings include empty array elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2829">Ein Array, dessen Elemente die Teilzeichenfolgen in dieser Zeichenfolge enthält, die durch ein oder mehr Zeichenfolgen aus <paramref name="separator" /> getrennt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2829">An array whose elements contain the substrings in this string that are delimited by one or more strings in <paramref name="separator" />.</span>
          </span>
          <span data-ttu-id="9380d-2830">Weitere Informationen finden Sie im Abschnitt "Hinweise".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2830">For more information, see the Remarks section.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2831">Wenn eine Zeichenfolge, die von einem bekannten Satz von Zeichenfolgen getrennt sind, können Sie die <xref:System.String.Split%2A> Methode für die Trennung in Teilzeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2831">When a string is delimited by a known set of strings, you can use the <xref:System.String.Split%2A> method to separate it into substrings.</span></span>  
  
## <a name="return-value-details"></a><span data-ttu-id="9380d-2832">Rückgabewert-details</span><span class="sxs-lookup"><span data-stu-id="9380d-2832">Return value details</span></span>  
 <span data-ttu-id="9380d-2833">Trennzeichen-Zeichenfolgen sind nicht in den Elementen des zurückgegebenen Arrays enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2833">Delimiter strings are not included in the elements of the returned array.</span></span> <span data-ttu-id="9380d-2834">Z. B. wenn die `separator` Array enthält die Zeichenfolge "--" und der Wert der aktuellen Zeichenfolgeninstanz "aa - bb-cc", die Methode gibt ein Array, das drei Elemente enthält: "aa", "bb" und "cc".</span><span class="sxs-lookup"><span data-stu-id="9380d-2834">For example, if the `separator` array includes the string "--" and the value of the current string instance is "aa--bb-cc", the method returns an array that contains three elements: "aa", "bb", and "cc".</span></span>  
  
 <span data-ttu-id="9380d-2835">Wenn keine der Zeichenfolgen in dieser Instanz enthält `separator`, das zurückgegebene Array besteht aus einem einzelnen Element, das diese Instanz enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-2835">If this instance does not contain any of the strings in `separator`, the returned array consists of a single element that contains this instance.</span></span>  
  
 <span data-ttu-id="9380d-2836">Wenn die `options` Parameter <xref:System.StringSplitOptions.RemoveEmptyEntries> und die Länge dieser Instanz ist 0 (null), die Methode ein leeres Array zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-2836">If the `options` parameter is <xref:System.StringSplitOptions.RemoveEmptyEntries> and the length of this instance is zero, the method returns an empty array.</span></span>  
  
 <span data-ttu-id="9380d-2837">Jedes Element der `separator` definiert ein separates Trennzeichen, das ein oder mehrere Zeichen besteht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2837">Each element of `separator` defines a separate delimiter that consists of one or more characters.</span></span> <span data-ttu-id="9380d-2838">Wenn die `options` Argument <xref:System.StringSplitOptions.None>, und zwei Trennzeichen benachbarten oder am Anfang oder Ende dieser Instanz ein einzeln verwendetes Trennzeichen gefunden wird, enthält das entsprechende Arrayelement <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2838">If the `options` argument is <xref:System.StringSplitOptions.None>, and two delimiters are adjacent or a delimiter is found at the beginning or end of this instance, the corresponding array element contains <xref:System.String.Empty?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-2839">Z. B. wenn `separator` enthält zwei Elemente, die "-" und "_", der Wert der Zeichenfolgeninstanz "- _aa -\_", und der Wert von der `options` Argument ist <xref:System.StringSplitOptions.None>, die Methode gibt ein Zeichenfolgenarray mit den folgenden fünf Elementen:</span><span class="sxs-lookup"><span data-stu-id="9380d-2839">For example, if `separator` includes  two elements, "-" and "_", the value of the string instance is "-_aa-\_", and the value of   the `options` argument is <xref:System.StringSplitOptions.None>, the method returns a sting array with the following five elements:</span></span>  
  
1.  <span data-ttu-id="9380d-2840"><xref:System.String.Empty?displayProperty=nameWithType>, steht für die leere Zeichenfolge, die vor der "-" Teilzeichenfolge am Index 0.</span><span class="sxs-lookup"><span data-stu-id="9380d-2840"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string that precedes the "-" substring at index 0.</span></span>  
  
2.  <span data-ttu-id="9380d-2841"><xref:System.String.Empty?displayProperty=nameWithType>, steht für die leere Zeichenfolge zwischen den "-" Teilzeichenfolge am Index 0 und die Teilzeichenfolge "_" am Index 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-2841"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string between the "-" substring at index 0 and the "_" substring at index 1.</span></span>  
  
3.  <span data-ttu-id="9380d-2842">"aa",</span><span class="sxs-lookup"><span data-stu-id="9380d-2842">"aa",</span></span>  
  
4.  <span data-ttu-id="9380d-2843"><xref:System.String.Empty?displayProperty=nameWithType>, steht für die leere Zeichenfolge, die die Teilzeichenfolge "_" am Index 4 folgt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2843"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string that follows the "_" substring at index 4.</span></span>  
  
5.  <span data-ttu-id="9380d-2844"><xref:System.String.Empty?displayProperty=nameWithType>, steht für die leere Zeichenfolge, die folgt der "-" Teilzeichenfolge am Index 5.</span><span class="sxs-lookup"><span data-stu-id="9380d-2844"><xref:System.String.Empty?displayProperty=nameWithType>, which represents the empty string that follows the "-" substring at index 5.</span></span>  
  
## <a name="the-separator-array"></a><span data-ttu-id="9380d-2845">Das Separator-array</span><span class="sxs-lookup"><span data-stu-id="9380d-2845">The separator array</span></span>  
 <span data-ttu-id="9380d-2846">Wenn eines der Elemente im `separator` besteht aus mehreren Zeichen, wird die gesamte Teilzeichenfolge als ein Trennzeichen betrachtet.</span><span class="sxs-lookup"><span data-stu-id="9380d-2846">If any of the elements in `separator` consists of multiple characters, the entire substring is considered a delimiter.</span></span> <span data-ttu-id="9380d-2847">Angenommen, eine der Elemente im `separator` ist "10", es wird versucht, teilen die Zeichenfolge "This10is10a10string."</span><span class="sxs-lookup"><span data-stu-id="9380d-2847">For example, if one of the elements in `separator` is "10", attempting to split the string "This10is10a10string."</span></span> <span data-ttu-id="9380d-2848">Gibt das folgende Array mit vier Elementen: {"This", "ist", "a", "String".</span><span class="sxs-lookup"><span data-stu-id="9380d-2848">returns the following four-element array: { "This", "is", "a", "string."</span></span> <span data-ttu-id="9380d-2849">}.</span><span class="sxs-lookup"><span data-stu-id="9380d-2849">}.</span></span>  
  
 <span data-ttu-id="9380d-2850">Wenn die `separator` Parameter `null` oder keine Zeichen enthält, Leerzeichen werden als Trennzeichen angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2850">If the `separator` parameter is `null` or contains no characters, white-space characters are assumed to be the delimiters.</span></span> <span data-ttu-id="9380d-2851">Leerzeichen werden durch die Unicode-standard und return definiert `true` Wenn es sich bei der Übergabe an die <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2851">White-space characters are defined by the Unicode standard and return `true` if they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="9380d-2852">Wenn die `separator` Parameter im Aufruf an die Überladung dieser Methode ist `null`, überladungsauflösung des Compiler ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2852">If the `separator` parameter in the call to this method overload is `null`, compiler overload resolution fails.</span></span> <span data-ttu-id="9380d-2853">Um die aufgerufene Methode eindeutig identifizieren zu können, muss Ihr Code Geben Sie den Typ des der `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2853">To unambiguously identify the called method, your code must indicate the type of the `null`.</span></span> <span data-ttu-id="9380d-2854">Das folgende Beispiel zeigt mehrere Möglichkeiten, diese Überladung eindeutig zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-2854">The following example shows several ways to unambiguously identify this overload.</span></span>  
  
 [!code-csharp[System.String.Split#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/split3.cs#6)]
 [!code-vb[System.String.Split#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/split3.vb#6)]  
  
## <a name="comparison-details"></a><span data-ttu-id="9380d-2855">Von Vergleichsdetails</span><span class="sxs-lookup"><span data-stu-id="9380d-2855">Comparison details</span></span>  
 <span data-ttu-id="9380d-2856">Die <xref:System.String.Split%2A> -Methode extrahiert die Teilzeichenfolgen in dieser Zeichenfolge, die durch mindestens eine der Zeichenfolgen in getrennten der `separator` -Parameter und gibt diese Teilzeichenfolgen als Elemente eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-2856">The <xref:System.String.Split%2A> method extracts the substrings in this string that are delimited by one or more of the strings in the `separator` parameter, and returns those substrings as elements of an array.</span></span>  
  
 <span data-ttu-id="9380d-2857">Die <xref:System.String.Split%2A> -Methode sucht nach Trennzeichen durch Durchführen von Vergleichen mit der Groß-/Kleinschreibung der ordinalen Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-2857">The <xref:System.String.Split%2A> method looks for delimiters by performing comparisons using case-sensitive ordinal sort rules.</span></span> <span data-ttu-id="9380d-2858">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter den <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-2858">For more information about word, string, and ordinal sorts, see the <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> enumeration.</span></span>  
  
 <span data-ttu-id="9380d-2859">Die <xref:System.String.Split%2A> Methode ignoriert alle Elemente von `separator` , dessen Wert `null` oder eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="9380d-2859">The <xref:System.String.Split%2A> method ignores any element of `separator` whose value is `null` or the empty string ("").</span></span>  
  
 <span data-ttu-id="9380d-2860">Um mehrdeutige Ergebnisse zu vermeiden bei Zeichenfolgen im `separator` haben Zeichen gemeinsam, die <xref:System.String.Split%2A> Vorgang fortgesetzt wird vom Anfang bis zum Ende des Werts der Instanz, und entspricht dem ersten Element in `separator` gleich ein Trennzeichen in der -Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-2860">To avoid ambiguous results when strings in `separator` have characters in common, the <xref:System.String.Split%2A> operation proceeds from the beginning to the end of the value of the instance, and matches the first element in `separator` that is equal to a delimiter in the instance.</span></span> <span data-ttu-id="9380d-2861">Die Reihenfolge, in dem Teilzeichenfolgen in der Instanz, hat Vorrang vor der Reihenfolge der Elemente im `separator`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2861">The order in which substrings are encountered in the instance takes precedence over the order of elements in `separator`.</span></span>  
  
 <span data-ttu-id="9380d-2862">Betrachten Sie beispielsweise eine Instanz, deren Wert "Abcdef".</span><span class="sxs-lookup"><span data-stu-id="9380d-2862">For example, consider an instance whose value is "abcdef".</span></span> <span data-ttu-id="9380d-2863">Wenn das erste Element im `separator` wurde von "Ef" und das zweite Element "bcde", das Ergebnis des Split-Vorgangs wäre ein Zeichenfolgenarray, das zwei Elemente enthält, "a" und "f".</span><span class="sxs-lookup"><span data-stu-id="9380d-2863">If the first element in `separator` was "ef" and the second element was "bcde", the result of the split operation would be a string array that contains two elements, "a" and "f".</span></span> <span data-ttu-id="9380d-2864">Grund hierfür ist die Teilzeichenfolge in der Instanz "bcde" überein, festgestellt wird, und entspricht einem Element im `separator` vor die Teilzeichenfolge "f" gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2864">This is because the substring in the instance, "bcde", is encountered and matches an element in `separator` before the substring "f" is encountered.</span></span>  
  
 <span data-ttu-id="9380d-2865">Aber wenn das erste Element der `separator` wurde, wurde "bc", "bcd" und das zweite Element, das Ergebnis des Split-Vorgangs wäre ein Zeichenfolgenarray, das zwei Elemente enthält, "a" und "Ef".</span><span class="sxs-lookup"><span data-stu-id="9380d-2865">However, if the first element of `separator` was "bcd" and the second element was "bc", the result of the split operation would be a string array that contains two elements, "a" and "ef".</span></span> <span data-ttu-id="9380d-2866">Dies liegt daran "bcd" das erste Trennzeichen in `separator` , die ein Trennzeichen in der Instanz entspricht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2866">This is because "bcd" is the first delimiter in `separator` that matches a delimiter in the instance.</span></span> <span data-ttu-id="9380d-2867">Wenn die Reihenfolge der Trennzeichen umgekehrt wird, sodass das erste Element "bc" wurde und das zweite Element wurde "bcd", das Ergebnis wäre ein Zeichenfolgenarray, das zwei Elemente enthält, "a" und "Def".</span><span class="sxs-lookup"><span data-stu-id="9380d-2867">If the order of the separators was reversed so the first element was "bc" and the second element was "bcd", the result would be a string array that contains two elements,  "a" and "def".</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="9380d-2868">Überlegungen zur Leistung</span><span class="sxs-lookup"><span data-stu-id="9380d-2868">Performance considerations</span></span>  
 <span data-ttu-id="9380d-2869">Die <xref:System.String.Split%2A> Methoden von Arbeitsspeicher für das zurückgegebene Arrayobjekt und <xref:System.String> -Objekt für jedes Arrayelement.</span><span class="sxs-lookup"><span data-stu-id="9380d-2869">The <xref:System.String.Split%2A> methods allocate memory for the returned array object and a <xref:System.String> object for each array element.</span></span> <span data-ttu-id="9380d-2870">Wenn Ihre Anwendung eine optimale Leistung erfordert oder wenn die Verwaltung von speicherbelegung in Ihre Anwendung von entscheidender Bedeutung ist, sollten Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> -Methode, und optional die <xref:System.String.Compare%2A> Methode, eine Teilzeichenfolge innerhalb einer Zeichenfolge suchen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2870">If your application requires optimal performance or if managing memory allocation is critical in your application, consider using the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method, and optionally the <xref:System.String.Compare%2A> method, to locate a substring within a string.</span></span>  
  
 <span data-ttu-id="9380d-2871">Wenn Sie eine Zeichenfolge an einem Trennzeichen teilen, verwenden Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode zum Suchen eines Trennzeichens in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2871">If you are splitting a string at a separator character, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate a separator character in the string.</span></span> <span data-ttu-id="9380d-2872">Wenn Sie eine Zeichenfolge an einem Trennzeichen teilen, verwenden Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode zum Suchen des ersten Zeichens der Zeichenfolge als Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2872">If you are splitting a string at a separator string, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate the first character of the separator string.</span></span> <span data-ttu-id="9380d-2873">Verwenden Sie dann die <xref:System.String.Compare%2A> Methode, um zu bestimmen, ob die Zeichen nach dem ersten Zeichen der verbleibenden Zeichen in der Trennzeichenfolge gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2873">Then use the <xref:System.String.Compare%2A> method to determine whether the characters after that first character are equal to the remaining characters of the separator string.</span></span>  
  
 <span data-ttu-id="9380d-2874">Darüber hinaus, wenn der gleiche Satz von Zeichen wird verwendet, um Zeichenfolgen in mehreren Teilen <xref:System.String.Split%2A> Methodenaufrufe, sollten Sie ein einzelnes Array erstellen, und klicken Sie in jedem Methodenaufruf darauf verweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2874">In addition, if the same set of characters is used to split strings in multiple <xref:System.String.Split%2A> method calls, consider creating a single array and referencing it in each method call.</span></span> <span data-ttu-id="9380d-2875">Dadurch wird erheblich reduziert, der zusätzliche Verarbeitungsaufwand von jedem Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="9380d-2875">This significantly reduces the additional overhead of each method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2876">Das folgende Beispiel veranschaulicht den Unterschied in den Arrays zurückgegeben, indem einer Zeichenfolge <xref:System.String.Split%28System.String%5B%5D%2CSystem.StringSplitOptions%29?displayProperty=nameWithType> -Methode mit der `options` Parameter gleich <xref:System.StringSplitOptions.None?displayProperty=nameWithType> und <xref:System.StringSplitOptions.RemoveEmptyEntries?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2876">The following example illustrates the difference in the arrays returned by calling a string's <xref:System.String.Split%28System.String%5B%5D%2CSystem.StringSplitOptions%29?displayProperty=nameWithType> method with its `options` parameter equal to <xref:System.StringSplitOptions.None?displayProperty=nameWithType> and <xref:System.StringSplitOptions.RemoveEmptyEntries?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.String.Split#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/Split.cs#1)]
 [!code-vb[System.String.Split#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/Split.vb#1)]  
  
 <span data-ttu-id="9380d-2877">Das folgende Beispiel definiert ein Array von Trennzeichen, die Interpunktion und Leerzeichen enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2877">The following example defines an array of separators that include punctuation and white-space characters.</span></span> <span data-ttu-id="9380d-2878">Übergeben dieses Array zusammen mit einem Wert von <xref:System.StringSplitOptions.RemoveEmptyEntries?displayProperty=nameWithType> auf die <xref:System.String.Split%28System.String%5B%5D%2CSystem.StringSplitOptions%29> -Methode gibt ein Array, das die einzelnen Wörter, aus der Zeichenfolge besteht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2878">Passing this array along with a value of <xref:System.StringSplitOptions.RemoveEmptyEntries?displayProperty=nameWithType> to the <xref:System.String.Split%28System.String%5B%5D%2CSystem.StringSplitOptions%29> method returns an array that consists of the individual words from the string.</span></span>  
  
 [!code-csharp[System.String.Split#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/split7.cs#7)]
 [!code-vb[System.String.Split#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/split7.vb#7)]  
  
 <span data-ttu-id="9380d-2879">Beachten Sie, die die Methode aufgerufen wird, mit der `options` Argument festgelegt wird, um <xref:System.StringSplitOptions.RemoveEmptyEntries?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2879">Note that the method is called with the `options` argument set to <xref:System.StringSplitOptions.RemoveEmptyEntries?displayProperty=nameWithType>.</span></span> <span data-ttu-id="9380d-2880">Dadurch wird verhindert, dass das zurückgegebene Array einschließlich <xref:System.String.Empty?displayProperty=nameWithType> Werten, leeren Teilzeichenfolge Übereinstimmungen zwischen Satzzeichen und Leerzeichen darstellen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2880">This prevents the returned array from including <xref:System.String.Empty?displayProperty=nameWithType> values that represent empty substring matches between punctuation marks and white-space characters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2881">
            <paramref name="options" /> entspricht keinem der <see cref="T:System.StringSplitOptions" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2881">
              <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2882">
            <para>In der [! Include[net_v35_short](~/Includes/NET-v35-Short-MD.MD)] und frühere Versionen, wenn die <see cref="M:System.String.Split(System.Char[])" /> -Methode übergeben eine <paramref name="separator" /> , <see langword="null" /> oder keine Zeichen enthält, die Methode verwendet einen etwas anderen Satz von Zeichen zum Aufteilen der eine Zeichenfolge als die <see cref="M:System.String.Trim(System.Char[])" /> Methode ist, um die Zeichenfolge gekürzt. In der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)], beide Methoden verwenden, einen identischen Satz von Unicode-Zeichen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2882">
              <para>In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, if the <see cref="M:System.String.Split(System.Char[])" /> method is passed a <paramref name="separator" /> that is <see langword="null" /> or contains no characters, the method uses a slightly different set of characters to split the string than the <see cref="M:System.String.Trim(System.Char[])" /> method does to trim the string. In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], both methods use an identical set of Unicode white-space characters.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char separator, int count, StringSplitOptions options = System.StringSplitOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char separator, int32 count, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.Char,System.Int32,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char, count As Integer, Optional options As StringSplitOptions = System.StringSplitOptions.None) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : char * int * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.StringSplitOptions" />
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="count">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (char[] separator, int count, StringSplitOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(char[] separator, int32 count, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.Char[],System.Int32,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As Char(), count As Integer, options As StringSplitOptions) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;char&gt; ^ separator, int count, StringSplitOptions options);" />
      <MemberSignature Language="F#" Value="member this.Split : char[] * int * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.Char[]" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.StringSplitOptions" />
      </Parameters>
      <Docs>
        <param name="separator">
          <span data-ttu-id="9380d-2883">Ein Zeichenarray, das die Teilzeichenfolgen in dieser Zeichenfolge trennt, ein leeres Array ohne Trennzeichen oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2883">A character array that delimits the substrings in this string, an empty array that contains no delimiters, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-2884">Die maximale Anzahl der zurückzugebenden Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2884">The maximum number of substrings to return.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9380d-2885">
            <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, wenn leere Arrayelemente aus dem zurückgegebenen Array ausgelassen werden sollen, oder <see cref="F:System.StringSplitOptions.None" />, wenn leere Arrayelemente in das zurückgegebene Array eingeschlossen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2885">
              <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> to omit empty array elements from the array returned; or <see cref="F:System.StringSplitOptions.None" /> to include empty array elements in the array returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2886">Unterteilt eine Zeichenfolge anhand der Zeichen in einem Array in eine maximale Anzahl von Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2886">Splits a string into a maximum number of substrings based on the characters in an array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2887">Ein Array, dessen Elemente die Teilzeichenfolgen in dieser Zeichenfolge enthält, die durch ein oder mehr Zeichen aus <paramref name="separator" /> getrennt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2887">An array whose elements contain the substrings in this string that are delimited by one or more characters in <paramref name="separator" />.</span>
          </span>
          <span data-ttu-id="9380d-2888">Weitere Informationen finden Sie im Abschnitt "Hinweise".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2888">For more information, see the Remarks section.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2889">Trennzeichen sind nicht in den Elementen des zurückgegebenen Arrays enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2889">Delimiter characters are not included in the elements of the returned array.</span></span>  
  
 <span data-ttu-id="9380d-2890">Wenn diese Instanz keine Zeichen enthält `separator`, oder die `count` Parameter ist 1, das zurückgegebene Array besteht aus einem einzelnen Element, das diese Instanz enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-2890">If this instance does not contain any of the characters in `separator`, or the `count` parameter is 1, the returned array consists of a single element that contains this instance.</span></span> <span data-ttu-id="9380d-2891">Wenn die `separator` Parameter `null` oder keine Zeichen enthält, Leerzeichen werden als Trennzeichen angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2891">If the `separator` parameter is `null` or contains no characters, white-space characters are assumed to be the delimiters.</span></span> <span data-ttu-id="9380d-2892">Leerzeichen werden durch die Unicode-standard und return definiert `true` Wenn es sich bei der Übergabe an die <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2892">White-space characters are defined by the Unicode standard and return `true` if they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9380d-2893">Aber wenn die `separator` Parameter im Aufruf an die Überladung dieser Methode ist `null`, überladungsauflösung des Compiler ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2893">However, if the `separator` parameter in the call to this method overload is `null`, compiler overload resolution fails.</span></span> <span data-ttu-id="9380d-2894">Um die aufgerufene Methode eindeutig identifizieren zu können, muss Ihr Code den Typ der Null angeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-2894">To unambiguously identify the called method, your code must indicate the type of the null.</span></span> <span data-ttu-id="9380d-2895">Das folgende Beispiel zeigt mehrere Möglichkeiten, diese Überladung eindeutig zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-2895">The following example shows several ways to unambiguously identify this overload.</span></span>  
  
 [!code-csharp[System.String.Split#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/split3.cs#3)]
 [!code-vb[System.String.Split#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/split3.vb#3)]  
  
 <span data-ttu-id="9380d-2896">Wenn die `count` Parameter NULL ist, oder die `options` Parameter <xref:System.StringSplitOptions.RemoveEmptyEntries> und die Länge dieser Instanz ist 0 (null), wird ein leeres Array zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-2896">If the `count` parameter is zero, or the `options` parameter is <xref:System.StringSplitOptions.RemoveEmptyEntries> and the length of this instance is zero, an empty array is returned.</span></span>  
  
 <span data-ttu-id="9380d-2897">Jedes Element der `separator` ein separates Trennzeichen definiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-2897">Each element of `separator` defines a separate delimiter character.</span></span> <span data-ttu-id="9380d-2898">Wenn die `options` Parameter <xref:System.StringSplitOptions.None>, und zwei Trennzeichen benachbarten oder am Anfang oder Ende dieser Instanz ein einzeln verwendetes Trennzeichen gefunden wird, enthält das entsprechende Arrayelement <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2898">If the `options` parameter is <xref:System.StringSplitOptions.None>, and two delimiters are adjacent or a delimiter is found at the beginning or end of this instance, the corresponding array element contains <xref:System.String.Empty>.</span></span>  
  
 <span data-ttu-id="9380d-2899">Treten mehr als `count` Teilzeichenfolgen in dieser Instanz, die die erste `count` -1 Teilzeichenfolgen werden in der ersten zurückgegeben `count` minus 1 Elemente zurückgegeben, und die restlichen Zeichen in dieser Instanz werden in den letzten zurückgegeben Element des Rückgabewerts.</span><span class="sxs-lookup"><span data-stu-id="9380d-2899">If there are more than `count` substrings in this instance, the first `count` minus 1 substrings are returned in the first `count` minus 1 elements of the return value, and the remaining characters in this instance are returned in the last element of the return value.</span></span>  
  
 <span data-ttu-id="9380d-2900">Wenn `count` ist größer als die Anzahl von Teilzeichenfolgen auf, werden die verfügbaren Teilzeichenfolgen zurückgegeben und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2900">If `count` is greater than the number of substrings, the available substrings are returned and no exception is thrown.</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="9380d-2901">Überlegungen zur Leistung</span><span class="sxs-lookup"><span data-stu-id="9380d-2901">Performance Considerations</span></span>  
 <span data-ttu-id="9380d-2902">Die <xref:System.String.Split%2A> Methoden von Arbeitsspeicher für das zurückgegebene Arrayobjekt und <xref:System.String> -Objekt für jedes Arrayelement.</span><span class="sxs-lookup"><span data-stu-id="9380d-2902">The <xref:System.String.Split%2A> methods allocate memory for the returned array object and a <xref:System.String> object for each array element.</span></span> <span data-ttu-id="9380d-2903">Wenn Ihre Anwendung eine optimale Leistung erfordert oder wenn die Verwaltung von speicherbelegung in Ihre Anwendung von entscheidender Bedeutung ist, sollten Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> -Methode, und optional die <xref:System.String.Compare%2A> Methode, eine Teilzeichenfolge innerhalb einer Zeichenfolge suchen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2903">If your application requires optimal performance or if managing memory allocation is critical in your application, consider using the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method, and optionally the <xref:System.String.Compare%2A> method, to locate a substring within a string.</span></span>  
  
 <span data-ttu-id="9380d-2904">Wenn Sie eine Zeichenfolge an einem Trennzeichen teilen, verwenden Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode zum Suchen eines Trennzeichens in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2904">If you are splitting a string at a separator character, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate a separator character in the string.</span></span> <span data-ttu-id="9380d-2905">Wenn Sie eine Zeichenfolge an einem Trennzeichen teilen, verwenden Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode zum Suchen des ersten Zeichens der Zeichenfolge als Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2905">If you are splitting a string at a separator string, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate the first character of the separator string.</span></span> <span data-ttu-id="9380d-2906">Verwenden Sie dann die <xref:System.String.Compare%2A> Methode, um zu bestimmen, ob die Zeichen nach dem ersten Zeichen der verbleibenden Zeichen in der Trennzeichenfolge gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2906">Then use the <xref:System.String.Compare%2A> method to determine whether the characters after that first character are equal to the remaining characters of the separator string.</span></span>  
  
 <span data-ttu-id="9380d-2907">Darüber hinaus, wenn der gleiche Satz von Zeichen wird verwendet, um Zeichenfolgen in mehreren Teilen <xref:System.String.Split%2A> Methodenaufrufe, sollten Sie ein einzelnes Array erstellen, und klicken Sie in jedem Methodenaufruf darauf verweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2907">In addition, if the same set of characters is used to split strings in multiple <xref:System.String.Split%2A> method calls, consider creating a single array and referencing it in each method call.</span></span> <span data-ttu-id="9380d-2908">Dadurch wird erheblich reduziert, der zusätzliche Verarbeitungsaufwand von jedem Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="9380d-2908">This significantly reduces the additional overhead of each method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2909">Im folgenden Beispiel wird die <xref:System.StringSplitOptions> Enumeration zum ein- bzw. Ausschließen von generierte Teilzeichenfolgen der <xref:System.String.Split%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2909">The following example uses the <xref:System.StringSplitOptions> enumeration to include or exclude substrings generated by the <xref:System.String.Split%2A> method.</span></span>  
  
 [!code-cpp[string.split3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.split3/CPP/omit.cpp#1)]
 [!code-csharp[string.split3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.split3/CS/omit.cs#1)]
 [!code-vb[string.split3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.split3/VB/omit.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2910">
            <paramref name="count" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2910">
              <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2911">
            <paramref name="options" /> entspricht keinem der <see cref="T:System.StringSplitOptions" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2911">
              <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2912">
            <para>In der [! Include[net_v35_short](~/Includes/NET-v35-Short-MD.MD)] und frühere Versionen, wenn die <see cref="M:System.String.Split(System.Char[])" /> -Methode übergeben eine <paramref name="separator" /> , <see langword="null" /> oder keine Zeichen enthält, die Methode verwendet einen etwas anderen Satz von Zeichen zum Aufteilen der eine Zeichenfolge als die <see cref="M:System.String.Trim(System.Char[])" /> Methode ist, um die Zeichenfolge gekürzt. In der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)], beide Methoden verwenden, einen identischen Satz von Unicode-Zeichen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2912">
              <para>In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, if the <see cref="M:System.String.Split(System.Char[])" /> method is passed a <paramref name="separator" /> that is <see langword="null" /> or contains no characters, the method uses a slightly different set of characters to split the string than the <see cref="M:System.String.Trim(System.Char[])" /> method does to trim the string. In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], both methods use an identical set of Unicode white-space characters.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string separator, int count, StringSplitOptions options = System.StringSplitOptions.None);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string separator, int32 count, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.String,System.Int32,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As String, count As Integer, Optional options As StringSplitOptions = System.StringSplitOptions.None) As String()" />
      <MemberSignature Language="F#" Value="member this.Split : string * int * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.StringSplitOptions" />
      </Parameters>
      <Docs>
        <param name="separator">To be added.</param>
        <param name="count">To be added.</param>
        <param name="options">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Split">
      <MemberSignature Language="C#" Value="public string[] Split (string[] separator, int count, StringSplitOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] Split(string[] separator, int32 count, valuetype System.StringSplitOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Split(System.String[],System.Int32,System.StringSplitOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function Split (separator As String(), count As Integer, options As StringSplitOptions) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ Split(cli::array &lt;System::String ^&gt; ^ separator, int count, StringSplitOptions options);" />
      <MemberSignature Language="F#" Value="member this.Split : string[] * int * StringSplitOptions -&gt; string[]" Usage="string.Split (separator, count, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="separator" Type="System.String[]" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="options" Type="System.StringSplitOptions" />
      </Parameters>
      <Docs>
        <param name="separator">
          <span data-ttu-id="9380d-2913">Ein Array mit Zeichenfolgen, die die Teilzeichenfolgen in dieser Zeichenfolge trennen, ein leeres Array ohne Trennzeichen oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2913">A string array that delimits the substrings in this string, an empty array that contains no delimiters, or <see langword="null" />.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="9380d-2914">Die maximale Anzahl der zurückzugebenden Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2914">The maximum number of substrings to return.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="9380d-2915">
            <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" />, wenn leere Arrayelemente aus dem zurückgegebenen Array ausgelassen werden sollen, oder <see cref="F:System.StringSplitOptions.None" />, wenn leere Arrayelemente in das zurückgegebene Array eingeschlossen werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2915">
              <see cref="F:System.StringSplitOptions.RemoveEmptyEntries" /> to omit empty array elements from the array returned; or <see cref="F:System.StringSplitOptions.None" /> to include empty array elements in the array returned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2916">Unterteilt eine Zeichenfolge anhand der Zeichenfolgen in einem Array in eine maximale Anzahl von Teilzeichenfolgen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2916">Splits a string into a maximum number of substrings based on the strings in an array.</span>
          </span>
          <span data-ttu-id="9380d-2917">Sie können angeben, ob die Teilzeichenfolgen auch leere Arrayelemente umfassen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2917">You can specify whether the substrings include empty array elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2918">Ein Array, dessen Elemente die Teilzeichenfolgen in dieser Zeichenfolge enthält, die durch ein oder mehr Zeichenfolgen aus <paramref name="separator" /> getrennt sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2918">An array whose elements contain the substrings in this string that are delimited by one or more strings in <paramref name="separator" />.</span>
          </span>
          <span data-ttu-id="9380d-2919">Weitere Informationen finden Sie im Abschnitt "Hinweise".</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2919">For more information, see the Remarks section.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="return-value-details"></a><span data-ttu-id="9380d-2920">Rückgabewert-details</span><span class="sxs-lookup"><span data-stu-id="9380d-2920">Return value details</span></span>  
 <span data-ttu-id="9380d-2921">Trennzeichen-Zeichenfolgen sind nicht in den Elementen des zurückgegebenen Arrays enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-2921">Delimiter strings are not included in the elements of the returned array.</span></span>  
  
 <span data-ttu-id="9380d-2922">Wenn keine der Zeichenfolgen in dieser Instanz enthält `separator`, oder die `count` Parameter ist 1, das zurückgegebene Array besteht aus einem einzelnen Element, das diese Instanz enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-2922">If this instance does not contain any of the strings in `separator`, or the `count` parameter is 1, the returned array consists of a single element that contains this instance.</span></span> <span data-ttu-id="9380d-2923">Wenn die `separator` Parameter `null` oder keine Zeichen enthält, Leerzeichen werden als Trennzeichen angesehen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2923">If the `separator` parameter is `null` or contains no characters, white-space characters are assumed to be the delimiters.</span></span> <span data-ttu-id="9380d-2924">Leerzeichen werden durch die Unicode-standard und return definiert `true` Wenn es sich bei der Übergabe an die <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2924">White-space characters are defined by the Unicode standard and return `true` if they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9380d-2925">Aber wenn die `separator` Parameter im Aufruf an die Überladung dieser Methode ist `null`, überladungsauflösung des Compiler ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2925">However, if the `separator` parameter in the call to this method overload is `null`, compiler overload resolution fails.</span></span> <span data-ttu-id="9380d-2926">Um die aufgerufene Methode eindeutig identifizieren zu können, muss Ihr Code Geben Sie den Typ des der `null`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2926">To unambiguously identify the called method, your code must indicate the type of the `null`.</span></span> <span data-ttu-id="9380d-2927">Das folgende Beispiel zeigt mehrere Möglichkeiten, diese Überladung eindeutig zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-2927">The following example shows several ways to unambiguously identify this overload.</span></span>  
  
 [!code-csharp[System.String.Split#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Split/cs/split3.cs#4)]
 [!code-vb[System.String.Split#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Split/vb/split3.vb#4)]  
  
 <span data-ttu-id="9380d-2928">Wenn die `count` Parameter NULL ist, oder die `options` Parameter <xref:System.StringSplitOptions.RemoveEmptyEntries> und die Länge dieser Instanz ist 0 (null), wird ein leeres Array zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-2928">If the `count` parameter is zero, or the `options` parameter is <xref:System.StringSplitOptions.RemoveEmptyEntries> and the length of this instance is zero, an empty array is returned.</span></span>  
  
 <span data-ttu-id="9380d-2929">Jedes Element der `separator` definiert ein separates Trennzeichen, das ein oder mehrere Zeichen besteht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2929">Each element of `separator` defines a separate delimiter that consists of one or more characters.</span></span> <span data-ttu-id="9380d-2930">Wenn die `options` Parameter <xref:System.StringSplitOptions.None>, und zwei Trennzeichen benachbarten oder am Anfang oder Ende dieser Instanz ein einzeln verwendetes Trennzeichen gefunden wird, enthält das entsprechende Arrayelement <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="9380d-2930">If the `options` parameter is <xref:System.StringSplitOptions.None>, and two delimiters are adjacent or a delimiter is found at the beginning or end of this instance, the corresponding array element contains <xref:System.String.Empty>.</span></span>  
  
 <span data-ttu-id="9380d-2931">Treten mehr als `count` Teilzeichenfolgen in dieser Instanz, die die erste `count` -1 Teilzeichenfolgen werden in der ersten zurückgegeben `count` minus 1 Elemente zurückgegeben, und die restlichen Zeichen in dieser Instanz werden in den letzten zurückgegeben Element des Rückgabewerts.</span><span class="sxs-lookup"><span data-stu-id="9380d-2931">If there are more than `count` substrings in this instance, the first `count` minus 1 substrings are returned in the first `count` minus 1 elements of the return value, and the remaining characters in this instance are returned in the last element of the return value.</span></span>  
  
 <span data-ttu-id="9380d-2932">Wenn `count` ist größer als die Anzahl von Teilzeichenfolgen auf, werden die verfügbaren Teilzeichenfolgen zurückgegeben und keine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2932">If `count` is greater than the number of substrings, the available substrings are returned and no exception is thrown.</span></span>  
  
## <a name="the-separator-array"></a><span data-ttu-id="9380d-2933">Das Separator-array</span><span class="sxs-lookup"><span data-stu-id="9380d-2933">The separator array</span></span>  
 <span data-ttu-id="9380d-2934">Wenn eines der Elemente im `separator` besteht aus mehreren Zeichen, wird die gesamte Teilzeichenfolge als ein Trennzeichen betrachtet.</span><span class="sxs-lookup"><span data-stu-id="9380d-2934">If any of the elements in `separator` consists of multiple characters, the entire substring is considered a delimiter.</span></span> <span data-ttu-id="9380d-2935">Angenommen, eine der Elemente im `separator` ist "10", es wird versucht, teilen die Zeichenfolge "This10is10a10string."</span><span class="sxs-lookup"><span data-stu-id="9380d-2935">For example, if one of the elements in `separator` is "10", attempting to split the string "This10is10a10string."</span></span> <span data-ttu-id="9380d-2936">Dieses Array mit vier Elementen zurückgegeben: {"This", "ist", "a", "String".</span><span class="sxs-lookup"><span data-stu-id="9380d-2936">returns this four-element array: { "This", "is", "a", "string."</span></span> <span data-ttu-id="9380d-2937">}.</span><span class="sxs-lookup"><span data-stu-id="9380d-2937">}.</span></span>  
  
## <a name="comparison-details"></a><span data-ttu-id="9380d-2938">Von Vergleichsdetails</span><span class="sxs-lookup"><span data-stu-id="9380d-2938">Comparison details</span></span>  
 <span data-ttu-id="9380d-2939">Die <xref:System.String.Split%2A> -Methode extrahiert die Teilzeichenfolgen in dieser Zeichenfolge, die durch mindestens eine der Zeichenfolgen in getrennten der `separator` -Parameter und gibt diese Teilzeichenfolgen als Elemente eines Arrays zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-2939">The <xref:System.String.Split%2A> method extracts the substrings in this string that are delimited by one or more of the strings in the `separator` parameter, and returns those substrings as elements of an array.</span></span>  
  
 <span data-ttu-id="9380d-2940">Die <xref:System.String.Split%2A> -Methode sucht nach Trennzeichen durch Durchführen von Vergleichen mit der Groß-/Kleinschreibung der ordinalen Sortierregeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-2940">The <xref:System.String.Split%2A> method looks for delimiters by performing comparisons using case-sensitive ordinal sort rules.</span></span> <span data-ttu-id="9380d-2941">Weitere Informationen über Wort-, Zeichenfolgen- und ordinal sortiert, finden Sie unter den <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="9380d-2941">For more information about word, string, and ordinal sorts, see the <xref:System.Globalization.CompareOptions?displayProperty=nameWithType> enumeration.</span></span>  
  
 <span data-ttu-id="9380d-2942">Die <xref:System.String.Split%2A> Methode ignoriert alle Elemente von `separator` , dessen Wert `null` oder eine leere Zeichenfolge ("").</span><span class="sxs-lookup"><span data-stu-id="9380d-2942">The <xref:System.String.Split%2A> method ignores any element of `separator` whose value is `null` or the empty string ("").</span></span>  
  
 <span data-ttu-id="9380d-2943">Um mehrdeutige Ergebnisse zu vermeiden bei Zeichenfolgen im `separator` haben Zeichen gemeinsam, die <xref:System.String.Split%2A> Methode wird vom Anfang bis zum Ende des Werts der Instanz, und entspricht dem ersten Element in `separator` gleich ein Trennzeichen in der -Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-2943">To avoid ambiguous results when strings in `separator` have characters in common, the <xref:System.String.Split%2A> method proceeds from the beginning to the end of the value of the instance, and matches the first element in `separator` that is equal to a delimiter in the instance.</span></span> <span data-ttu-id="9380d-2944">Die Reihenfolge, in dem Teilzeichenfolgen in der Instanz, hat Vorrang vor der Reihenfolge der Elemente im `separator`.</span><span class="sxs-lookup"><span data-stu-id="9380d-2944">The order in which substrings are encountered in the instance takes precedence over the order of elements in `separator`.</span></span>  
  
 <span data-ttu-id="9380d-2945">Betrachten Sie beispielsweise eine Instanz, deren Wert "Abcdef".</span><span class="sxs-lookup"><span data-stu-id="9380d-2945">For example, consider an instance whose value is "abcdef".</span></span> <span data-ttu-id="9380d-2946">Wenn das erste Element im `separator` wurde von "Ef" und das zweite Element "bcde", das Ergebnis des Split-Vorgangs wäre "a" und "f".</span><span class="sxs-lookup"><span data-stu-id="9380d-2946">If the first element in `separator` was "ef" and the second element was "bcde", the result of the split operation would be "a" and "f".</span></span> <span data-ttu-id="9380d-2947">Grund hierfür ist die Teilzeichenfolge in der Instanz "bcde" überein, festgestellt wird, und entspricht einem Element im `separator` vor die Teilzeichenfolge "f" gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2947">This is because the substring in the instance, "bcde", is encountered and matches an element in `separator` before the substring "f" is encountered.</span></span>  
  
 <span data-ttu-id="9380d-2948">Aber wenn das erste Element der `separator` wurde, wurde "bc", "bcd" und das zweite Element, das Ergebnis des Split-Vorgangs wäre "a" und "Ef".</span><span class="sxs-lookup"><span data-stu-id="9380d-2948">However, if the first element of `separator` was "bcd" and the second element was "bc", the result of the split operation would be "a" and "ef".</span></span> <span data-ttu-id="9380d-2949">Dies liegt daran "bcd" das erste Trennzeichen in `separator` , die ein Trennzeichen in der Instanz entspricht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2949">This is because "bcd" is the first delimiter in `separator` that matches a delimiter in the instance.</span></span> <span data-ttu-id="9380d-2950">Wenn die Reihenfolge der Trennzeichen umgekehrt wird, sodass das erste Element "bc" wurde und das zweite Element wurde "bcd", das Ergebnis wäre "a" und "Def".</span><span class="sxs-lookup"><span data-stu-id="9380d-2950">If the order of the separators was reversed so the first element was "bc" and the second element was "bcd", the result would be "a" and "def".</span></span>  
  
## <a name="performance-considerations"></a><span data-ttu-id="9380d-2951">Überlegungen zur Leistung</span><span class="sxs-lookup"><span data-stu-id="9380d-2951">Performance considerations</span></span>  
 <span data-ttu-id="9380d-2952">Die <xref:System.String.Split%2A> Methoden von Arbeitsspeicher für das zurückgegebene Arrayobjekt und <xref:System.String> -Objekt für jedes Arrayelement.</span><span class="sxs-lookup"><span data-stu-id="9380d-2952">The <xref:System.String.Split%2A> methods allocate memory for the returned array object and a <xref:System.String> object for each array element.</span></span> <span data-ttu-id="9380d-2953">Wenn Ihre Anwendung eine optimale Leistung erfordert oder wenn die Verwaltung von speicherbelegung in Ihre Anwendung von entscheidender Bedeutung ist, sollten Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> -Methode, und optional die <xref:System.String.Compare%2A> Methode, eine Teilzeichenfolge innerhalb einer Zeichenfolge suchen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2953">If your application requires optimal performance or if managing memory allocation is critical in your application, consider using the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method, and optionally the <xref:System.String.Compare%2A> method, to locate a substring within a string.</span></span>  
  
 <span data-ttu-id="9380d-2954">Wenn Sie eine Zeichenfolge an einem Trennzeichen teilen, verwenden Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode zum Suchen eines Trennzeichens in der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-2954">If you are splitting a string at a separator character, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate a separator character in the string.</span></span> <span data-ttu-id="9380d-2955">Wenn Sie eine Zeichenfolge an einem Trennzeichen teilen, verwenden Sie die <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOfAny%2A> Methode zum Suchen des ersten Zeichens der Zeichenfolge als Trennzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2955">If you are splitting a string at a separator string, use the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOfAny%2A> method to locate the first character of the separator string.</span></span> <span data-ttu-id="9380d-2956">Verwenden Sie dann die <xref:System.String.Compare%2A> Methode, um zu bestimmen, ob die Zeichen nach dem ersten Zeichen der verbleibenden Zeichen in der Trennzeichenfolge gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2956">Then use the <xref:System.String.Compare%2A> method to determine whether the characters after that first character are equal to the remaining characters of the separator string.</span></span>  
  
 <span data-ttu-id="9380d-2957">Darüber hinaus, wenn der gleiche Satz von Zeichen wird verwendet, um Zeichenfolgen in mehreren Teilen <xref:System.String.Split%2A> Methodenaufrufe, sollten Sie ein einzelnes Array erstellen, und klicken Sie in jedem Methodenaufruf darauf verweisen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2957">In addition, if the same set of characters is used to split strings in multiple <xref:System.String.Split%2A> method calls, consider creating a single array and referencing it in each method call.</span></span> <span data-ttu-id="9380d-2958">Dadurch wird erheblich reduziert, der zusätzliche Verarbeitungsaufwand von jedem Methodenaufruf.</span><span class="sxs-lookup"><span data-stu-id="9380d-2958">This significantly reduces the additional overhead of each method call.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2959">Im folgenden Beispiel wird die <xref:System.StringSplitOptions> Enumeration zum ein- bzw. Ausschließen von generierte Teilzeichenfolgen der <xref:System.String.Split%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-2959">The following example uses the <xref:System.StringSplitOptions> enumeration to include or exclude substrings generated by the <xref:System.String.Split%2A> method.</span></span>  
  
 [!code-cpp[string.split3#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.split3/CPP/omit.cpp#1)]
 [!code-csharp[string.split3#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.split3/CS/omit.cs#1)]
 [!code-vb[string.split3#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.split3/VB/omit.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-2960">
            <paramref name="count" /> ist ein negativer Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2960">
              <paramref name="count" /> is negative.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2961">
            <paramref name="options" /> entspricht keinem der <see cref="T:System.StringSplitOptions" />-Werte.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2961">
              <paramref name="options" /> is not one of the <see cref="T:System.StringSplitOptions" /> values.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2962">
            <para>In der [! Include[net_v35_short](~/Includes/NET-v35-Short-MD.MD)] und frühere Versionen, wenn die <see cref="M:System.String.Split(System.Char[])" /> -Methode übergeben eine <paramref name="separator" /> , <see langword="null" /> oder keine Zeichen enthält, die Methode verwendet einen etwas anderen Satz von Zeichen zum Aufteilen der eine Zeichenfolge als die <see cref="M:System.String.Trim(System.Char[])" /> Methode ist, um die Zeichenfolge gekürzt. In der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)], beide Methoden verwenden, einen identischen Satz von Unicode-Zeichen.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2962">
              <para>In the [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] and earlier versions, if the <see cref="M:System.String.Split(System.Char[])" /> method is passed a <paramref name="separator" /> that is <see langword="null" /> or contains no characters, the method uses a slightly different set of characters to split the string than the <see cref="M:System.String.Trim(System.Char[])" /> method does to trim the string. In the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], both methods use an identical set of Unicode white-space characters.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <MemberGroup MemberName="StartsWith">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-2963">Bestimmt, ob der Anfang dieser Zeichenfolgeninstanz mit einer angegebenen Zeichenfolge übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2963">Determines whether the beginning of this string instance matches a specified string.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (char value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(char value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.StartsWith(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (value As Char) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(char value);" />
      <MemberSignature Language="F#" Value="member this.StartsWith : char -&gt; bool" Usage="string.StartsWith value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.StartsWith(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(System::String ^ value);" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string -&gt; bool" Usage="string.StartsWith value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2964">Die zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2964">The string to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2965">Bestimmt, ob der Anfang dieser Zeichenfolgeninstanz mit der angegebenen Zeichenfolge übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2965">Determines whether the beginning of this string instance matches the specified string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2966">
            <see langword="true" />, wenn <paramref name="value" /> mit dem Anfang dieser Zeichenfolge übereinstimmt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2966">
              <see langword="true" /> if <paramref name="value" /> matches the beginning of this string; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2967">Diese Methode vergleicht `value` mit der Teilzeichenfolge am Anfang dieser Instanz, die die gleiche Länge wie `value`, und gibt einen Wert zurück, ob diese gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2967">This method compares `value` to the substring at the beginning of this instance that is the same length as `value`, and returns an indication whether they are equal.</span></span> <span data-ttu-id="9380d-2968">Gleich, `value` muss eine leere Zeichenfolge (<xref:System.String.Empty?displayProperty=nameWithType>), muss ein Verweis auf die gleiche Instanz sein oder muss mit dem Anfang dieser Instanz übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2968">To be equal, `value` must be an empty string (<xref:System.String.Empty?displayProperty=nameWithType>), must be a reference to this same instance, or must match the beginning of this instance.</span></span>  
  
 <span data-ttu-id="9380d-2969">Diese Methode vergleicht Word (Groß-/Kleinschreibung beachtet und kulturabhängige) mit der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-2969">This method performs a word (case-sensitive and culture-sensitive) comparison using the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2970">Das folgende Beispiel definiert eine `StripStartTags` Methode, verwendet der <xref:System.String.StartsWith%28System.String%29> -Methode zum Entfernen von HTML Tags am Anfang einer Zeichenfolge beginnen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2970">The following example defines a `StripStartTags` method that uses the <xref:System.String.StartsWith%28System.String%29> method to remove HTML start tags from the beginning of a string.</span></span> <span data-ttu-id="9380d-2971">Beachten Sie, dass die `StripStartTags` Methode rekursiv aufgerufen, um sicherzustellen, dass mehrere HTML-Tags mit Beginn am Anfang der Zeile entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-2971">Note that the `StripStartTags` method is called recursively to ensure that multiple HTML start tags at the beginning of the line are removed.</span></span> <span data-ttu-id="9380d-2972">Im Beispiel werden keine HTML-Tags, eingebettet in einer Zeichenfolge entfernt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2972">The example does not remove HTML tags embedded in a string.</span></span>  
  
 [!code-cpp[stringstartswith#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringstartswith/CPP/stringstartswith.cpp#1)]
 [!code-csharp[stringstartswith#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringstartswith/CS/stringstartswith.cs#1)]
 [!code-vb[stringstartswith#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringstartswith/VB/stringstartswith.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2973">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2973">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-2974">
            <para>Wie unter [bewährte Methoden für Strings](~/docs/standard/base-types/best-practices-strings.md) verwenden, es wird empfohlen, dass Sie vermeiden, Aufrufen von Methoden zum Zeichenfolgenvergleich, die Standardwerte ersetzen, und rufen stattdessen die Methoden, die Parameter erfordern explizit angegeben. Aufrufen, um zu bestimmen, ob eine Zeichenfolge mit einer bestimmten Teilzeichenfolge beginnt, mithilfe der Regeln für Zeichenfolgenvergleiche der aktuellen Kultur, die <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" /> methodenüberladung mit einem Wert von <see cref="F:System.StringComparison.CurrentCulture" /> für seine <paramref name="comparisonType" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2974">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string comparison methods that substitute default values and instead call methods that require parameters to be explicitly specified. To determine whether a string begins with a particular substring by using the string comparison rules of the current culture, call the <see cref="M:System.String.StartsWith(System.String,System.StringComparison)" /> method overload with a value of <see cref="F:System.StringComparison.CurrentCulture" /> for its <paramref name="comparisonType" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.EndsWith(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (string value, StringComparison comparisonType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(string value, valuetype System.StringComparison comparisonType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.StartsWith(System.String,System.StringComparison)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (value As String, comparisonType As StringComparison) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(System::String ^ value, StringComparison comparisonType);" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string * StringComparison -&gt; bool" Usage="string.StartsWith (value, comparisonType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="comparisonType" Type="System.StringComparison" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2975">Die zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2975">The string to compare.</span>
          </span>
        </param>
        <param name="comparisonType">
          <span data-ttu-id="9380d-2976">Einer der Enumerationswerte, die bestimmen, wie diese Zeichenfolge und <c>value</c> verglichen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2976">One of the enumeration values that determines how this string and <c>value</c> are compared.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2977">Bestimmt, ob der Anfang dieser Zeichenfolgeninstanz bei einem Vergleich unter Verwendung der angegebenen Vergleichsoption mit der angegebenen Zeichenfolge übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2977">Determines whether the beginning of this string instance matches the specified string when compared using the specified comparison option.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2978">
            <see langword="true" />, wenn diese Instanz mit <paramref name="value" /> beginnt; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2978">
              <see langword="true" /> if this instance begins with <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2979">Die <xref:System.String.StartsWith%2A> -Methode vergleicht die `value` Parameter mit der Teilzeichenfolge am Anfang dieser Zeichenfolge und gibt einen Wert, der angibt, ob diese gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2979">The <xref:System.String.StartsWith%2A> method compares the `value` parameter to the substring at the beginning of this string and returns a value that indicates whether they are equal.</span></span> <span data-ttu-id="9380d-2980">Gleich, `value` ein Verweis auf die gleiche Zeichenfolge sein muss, muss die leere Zeichenfolge (""), oder mit den Anfang dieser Zeichenfolge übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2980">To be equal, `value` must be a reference to this same string, must be the empty string (""), or must match the beginning of this string.</span></span> <span data-ttu-id="9380d-2981">Den Typ des Vergleichs wurden und die <xref:System.String.StartsWith%2A> Methode hängt vom Wert von der `comparisonType` Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-2981">The type of comparison performed by the <xref:System.String.StartsWith%2A> method depends on the value of the `comparisonType` parameter.</span></span> <span data-ttu-id="9380d-2982">Der Vergleich können die Konventionen der aktuellen Kultur (<xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType> und <xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType>) oder der invarianten Kultur (<xref:System.StringComparison.InvariantCulture?displayProperty=nameWithType> und <xref:System.StringComparison.InvariantCultureIgnoreCase?displayProperty=nameWithType>), oder sie können besteht aus einem Zeichen für Zeichen Vergleich der Codepunkte (<xref:System.StringComparison.Ordinal?displayProperty=nameWithType> oder <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="9380d-2982">The comparison can use the conventions of the current culture (<xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType> and <xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType>) or the invariant culture (<xref:System.StringComparison.InvariantCulture?displayProperty=nameWithType> and <xref:System.StringComparison.InvariantCultureIgnoreCase?displayProperty=nameWithType>), or it can consist of a character-by-character comparison of code points (<xref:System.StringComparison.Ordinal?displayProperty=nameWithType> or <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>).</span></span> <span data-ttu-id="9380d-2983">Der Vergleich kann auch sein, Groß-/Kleinschreibung (<xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType>, <xref:System.StringComparison.InvariantCulture?displayProperty=nameWithType>, oder <xref:System.StringComparison.Ordinal?displayProperty=nameWithType>), oder sie können die Groß-/Kleinschreibung ignorieren (<xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType>, <xref:System.StringComparison.InvariantCultureIgnoreCase?displayProperty=nameWithType>, <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="9380d-2983">The comparison can also be case-sensitive (<xref:System.StringComparison.CurrentCulture?displayProperty=nameWithType>, <xref:System.StringComparison.InvariantCulture?displayProperty=nameWithType>, or <xref:System.StringComparison.Ordinal?displayProperty=nameWithType>), or it can ignore case (<xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType>, <xref:System.StringComparison.InvariantCultureIgnoreCase?displayProperty=nameWithType>, <xref:System.StringComparison.OrdinalIgnoreCase?displayProperty=nameWithType>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-2984">Das folgende Beispiel sucht nach der Zeichenfolge "the" am Anfang einer längeren Zeichenfolge, die mit dem Wort "The".</span><span class="sxs-lookup"><span data-stu-id="9380d-2984">The following example searches for the string "the" at the beginning of a longer string that begins with the word "The".</span></span> <span data-ttu-id="9380d-2985">Wie die Ausgabe des Beispiels zeigt, wird durch einen Aufruf der <xref:System.String.StartsWith%28System.String%2CSystem.StringComparison%29> -Methode, die eine kulturunabhängige jedoch die Groß-/Kleinschreibung Vergleich ein Fehler auftritt, mit die Zeichenfolge übereinstimmen, während ein Aufruf, der eine Kultur und Groß-insensitive Vergleich mit der Zeichenfolge übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2985">As the output from the example shows, a call to the <xref:System.String.StartsWith%28System.String%2CSystem.StringComparison%29> method that performs a culture-insensitive but case-sensitive comparison fails to match the string, while a call that performs a culture- and case-insensitive comparison matches the string.</span></span>  
  
 [!code-cpp[System.String.StartsWith#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.startswith/cpp/StartsWith2.cpp#2)]
 [!code-csharp[System.String.StartsWith#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.startswith/cs/StartsWith2.cs#2)]
 [!code-vb[System.String.StartsWith#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.startswith/vb/StartsWith2.vb#2)]  
  
 <span data-ttu-id="9380d-2986">Im folgenden Beispiel wird bestimmt, ob eine Zeichenfolge mit einer bestimmten Teilzeichenfolge beginnt.</span><span class="sxs-lookup"><span data-stu-id="9380d-2986">The following example determines whether a string starts with a particular substring.</span></span> <span data-ttu-id="9380d-2987">Ein zweidimensionales Zeichenfolgenarray initialisiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-2987">It initializes a two-dimensional string array.</span></span> <span data-ttu-id="9380d-2988">Das erste Element in der zweiten Dimension enthält eine Zeichenfolge, und das zweite Element enthält die Zeichenfolge, die am Anfang der ersten Zeichenfolge gesucht.</span><span class="sxs-lookup"><span data-stu-id="9380d-2988">The first element in the second dimension contains a string, and the second element contains the string to search for at the start of the first string.</span></span> <span data-ttu-id="9380d-2989">Die Ergebnisse sind betroffen, durch die Auswahl der Kultur, ob die Groß-/Kleinschreibung ignoriert wird und gibt an, ob ein ordinaler Vergleich ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-2989">The results are affected by the choice of culture, whether case is ignored, and whether an ordinal comparison is performed.</span></span> <span data-ttu-id="9380d-2990">Beachten Sie, wenn die Zeichenfolgeninstanz eine Ligatur enthält, kulturabhängigen vergleichen mit aufeinander folgenden Zeichen erfolgreich entsprechen.</span><span class="sxs-lookup"><span data-stu-id="9380d-2990">Note that when the string instance contains a ligature, culture-sensitive comparisons with its consecutive characters successfully match.</span></span>  
  
 [!code-cpp[System.String.StartsWith#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.string.startswith/cpp/startswith1.cpp#1)]
 [!code-csharp[System.String.StartsWith#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.startswith/cs/startswith1.cs#1)]
 [!code-vb[System.String.StartsWith#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.startswith/vb/startswith1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-2991">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2991">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="9380d-2992">
            <paramref name="comparisonType" /> ist kein <see cref="T:System.StringComparison" />-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2992">
              <paramref name="comparisonType" /> is not a <see cref="T:System.StringComparison" /> value.</span>
          </span>
        </exception>
        <altmember cref="T:System.StringComparison" />
      </Docs>
    </Member>
    <Member MemberName="StartsWith">
      <MemberSignature Language="C#" Value="public bool StartsWith (string value, bool ignoreCase, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool StartsWith(string value, bool ignoreCase, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.StartsWith(System.String,System.Boolean,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function StartsWith (value As String, ignoreCase As Boolean, culture As CultureInfo) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool StartsWith(System::String ^ value, bool ignoreCase, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.StartsWith : string * bool * System.Globalization.CultureInfo -&gt; bool" Usage="string.StartsWith (value, ignoreCase, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="9380d-2993">Die zu vergleichende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2993">The string to compare.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="9380d-2994">
            <see langword="true" />, wenn die Groß-/Kleinschreibung beim Vergleich ignoriert werden soll, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2994">
              <see langword="true" /> to ignore case during the comparison; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="9380d-2995">Kulturinformationen, die bestimmen, wie diese Instanz und <c>value</c> verglichen werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2995">Cultural information that determines how this string and <c>value</c> are compared.</span>
          </span>
          <span data-ttu-id="9380d-2996">Wenn <c>culture</c><see langword="null" /> ist, wird die aktuelle Kultur verwendet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2996">If <c>culture</c> is <see langword="null" />, the current culture is used.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-2997">Bestimmt, ob der Anfang dieser Zeichenfolgeninstanz bei einem Vergleich unter Verwendung der angegebenen Kultur mit der angegebenen Zeichenfolge übereinstimmt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2997">Determines whether the beginning of this string instance matches the specified string when compared using the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-2998">
            <see langword="true" />, wenn der <paramref name="value" />-Parameter mit dem Anfang dieser Zeichenfolge übereinstimmt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-2998">
              <see langword="true" /> if the <paramref name="value" /> parameter matches the beginning of this string; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-2999">Diese Methode vergleicht die `value` Parameter mit der Teilzeichenfolge am Anfang dieser Zeichenfolge, die gleiche Länge wie `value`, und gibt einen Wert, der angibt, ob diese gleich sind.</span><span class="sxs-lookup"><span data-stu-id="9380d-2999">This method compares the `value` parameter to the substring at the beginning of this string that is the same length as `value`, and returns a value that indicates whether they are equal.</span></span> <span data-ttu-id="9380d-3000">Gleich, `value` muss eine leere Zeichenfolge (<xref:System.String.Empty?displayProperty=nameWithType>), muss ein Verweis auf die gleiche Instanz sein oder muss mit dem Anfang dieser Instanz übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="9380d-3000">To be equal, `value` must be an empty string (<xref:System.String.Empty?displayProperty=nameWithType>), must be a reference to this same instance, or must match the beginning of this instance.</span></span>  
  
 <span data-ttu-id="9380d-3001">Diese Methode führt einen Vergleich mit der angegebenen Groß-/Kleinschreibung und der Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-3001">This method performs a comparison using the specified casing and culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3002">Im folgenden Beispiel wird bestimmt, ob eine Zeichenfolge am Anfang einer anderen Zeichenfolge auftritt.</span><span class="sxs-lookup"><span data-stu-id="9380d-3002">The following example determines whether a string occurs at the beginning of another string.</span></span> <span data-ttu-id="9380d-3003">Die <xref:System.String.StartsWith%2A> Methode wird aufgerufen, mehrmals mit Groß-/Kleinschreibung, Groß-/Kleinschreibung und andere Kulturen, die die Ergebnisse der Suche zu beeinflussen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3003">The <xref:System.String.StartsWith%2A> method is called several times using case sensitivity, case insensitivity, and different cultures that influence the results of the search.</span></span>  
  
 [!code-csharp[system.string.StartsWithCI#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.StartsWithCI/cs/swci.cs#1)]
 [!code-vb[system.string.StartsWithCI#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.StartsWithCI/vb/swci.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-3004">
            <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3004">
              <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Substring">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3005">Ruft eine Teilzeichenfolge dieser Instanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3005">Retrieves a substring from this instance.</span>
          </span>
          <span data-ttu-id="9380d-3006">Dieser Member wird überladen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3006">This member is overloaded.</span>
          </span>
          <span data-ttu-id="9380d-3007">Klicken Sie auf einen Namen in der Überladungsliste, um vollständige Informationen zu diesem Member sowie zu Syntax, Nutzung und Beispielen zu erhalten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3007">For complete information about this member, including syntax, usage, and examples, click a name in the overload list.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Substring(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (startIndex As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(int startIndex);" />
      <MemberSignature Language="F#" Value="member this.Substring : int -&gt; string" Usage="string.Substring startIndex" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="9380d-3008">Die nullbasierte Anfangsposition einer Teilzeichenfolge innerhalb dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3008">The zero-based starting character position of a substring in this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3009">Ruft eine Teilzeichenfolge dieser Instanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3009">Retrieves a substring from this instance.</span>
          </span>
          <span data-ttu-id="9380d-3010">Die untergeordnete Zeichenfolge beginnt in einer angegebenen Zeichenposition und wird an das Ende der Zeichenfolge fortgesetzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3010">The substring starts at a specified character position and continues to the end of the string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3011">Eine Zeichenfolge, die der Teilzeichenfolge ab <paramref name="startIndex" /> in dieser Instanz entspricht, oder <see cref="F:System.String.Empty" />, wenn <paramref name="startIndex" /> gleich der Länge dieser Instanz ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3011">A string that is equivalent to the substring that begins at <paramref name="startIndex" /> in this instance, or <see cref="F:System.String.Empty" /> if <paramref name="startIndex" /> is equal to the length of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3012">Rufen Sie die <xref:System.String.Substring%28System.Int32%29> Methode, um eine Unterzeichenfolge aus einer Zeichenfolge zu extrahieren, die an einer angegebenen Zeichenposition beginnt und am Ende der Zeichenfolge endet.</span><span class="sxs-lookup"><span data-stu-id="9380d-3012">You call the <xref:System.String.Substring%28System.Int32%29> method to extract a substring from a string that begins at a specified character position and ends at the end of the string.</span></span> <span data-ttu-id="9380d-3013">Die Position des ersten Zeichens ist ein nullbasierter; Das heißt, ist das erste Zeichen in der Zeichenfolge am Index 0 (null) nicht Index 1 ein.</span><span class="sxs-lookup"><span data-stu-id="9380d-3013">The starting character position is a zero-based; in other words, the first character in the string is at index 0, not index 1.</span></span> <span data-ttu-id="9380d-3014">Um eine Teilzeichenfolge, die an einer angegebenen Zeichenposition beginnt und endet vor am Ende der Zeichenfolge zu extrahieren, rufen Sie die <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3014">To extract a substring that begins at a specified character position and ends before to the end of the string, call the <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-3015">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-3015">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-3016">Stattdessen wird eine neue Zeichenfolge, die bei beginnt die `startIndex` Position in der aktuellen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-3016">Instead, it returns a new string that begins at the `startIndex` position in the current string.</span></span>  
  
 <span data-ttu-id="9380d-3017">Um eine untergeordnete Zeichenfolge zu extrahieren, die mit einem bestimmten Zeichen oder die Zeichenfolge beginnt, eine Methode aufrufen, wie z. B. <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOf%2A> den Wert der abzurufenden `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="9380d-3017">To extract a substring that begins with a particular character or character sequence, call a method such as  <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOf%2A> to get the value of `startIndex`.</span></span> <span data-ttu-id="9380d-3018">Das zweite Beispiel veranschaulicht dies; extrahiert einen Schlüssel-Wert, der eine Zeichenposition nach dem Zeichen "=" beginnt.</span><span class="sxs-lookup"><span data-stu-id="9380d-3018">The second example illustrates this; it extracts a key value that begins one character position after the "=" character.</span></span>  
  
 <span data-ttu-id="9380d-3019">Wenn `startIndex` ist gleich 0 (null), die Methode gibt zurück, die die ursprüngliche Zeichenfolge unverändert.</span><span class="sxs-lookup"><span data-stu-id="9380d-3019">If `startIndex` is equal to zero, the method returns the original string unchanged.</span></span>  
   
  
## Examples  
 <span data-ttu-id="9380d-3020">Das folgende Beispiel zeigt eine Teilzeichenfolge aus einer Zeichenfolge abrufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3020">The following example demonstrates obtaining a substring from a string.</span></span>  
  
 [!code-cpp[System.String.Substring#10](~/samples/snippets/cpp/VS_Snippets_CLR_System/System.String.Substring/cpp/Substring10.cpp#10)]
 [!code-csharp[System.String.Substring#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Substring/cs/Substring10.cs#10)]
 [!code-vb[System.String.Substring#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Substring/vb/Substring10.vb#10)]  
  
 <span data-ttu-id="9380d-3021">Im folgenden Beispiel wird die <xref:System.String.Substring%2A> Methode, um Schlüssel/Wert-Paare trennen, die durch ein Gleichheitszeichen getrennt sind ("=") Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3021">The following example uses the <xref:System.String.Substring%2A> method to separate key/value pairs that are delimited by an equals ("=") character.</span></span>  
  
 [!code-csharp[System.String.Substring#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Substring/cs/Substring1.cs#1)]
 [!code-vb[System.String.Substring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Substring/vb/Substring1.vb#1)]  
  
 <span data-ttu-id="9380d-3022">Die <xref:System.String.IndexOf%2A> Methode wird verwendet, um die Position des Zeichens gleich in der Zeichenfolge abzurufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3022">The <xref:System.String.IndexOf%2A> method is used to get the position of the equals character in the string.</span></span> <span data-ttu-id="9380d-3023">Der Aufruf der <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> -Methode extrahiert den Schlüsselnamen, der vom ersten Zeichen in der Zeichenfolge beginnt, und erweitern für die Anzahl der Zeichen zurückgegeben werden, durch den Aufruf der <xref:System.String.IndexOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3023">The call to the <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> method extracts the key name, which starts from the first character in the string and extends for the number of characters returned by the call to the <xref:System.String.IndexOf%2A> method.</span></span> <span data-ttu-id="9380d-3024">Der Aufruf der <xref:System.String.Substring%28System.Int32%29> Methode extrahiert dann den Wert auf den Schlüssel zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3024">The call to the <xref:System.String.Substring%28System.Int32%29> method then extracts the value assigned to the key.</span></span> <span data-ttu-id="9380d-3025">Es beginnt an einer Position des Zeichens hinter dem Gleichheitszeichen und reicht bis zum Ende der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-3025">It starts at one character position beyond the equals character and extends to the end of the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-3026">
            <paramref name="startIndex" /> ist kleiner als 0 (null) oder größer als die Länge dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3026">
              <paramref name="startIndex" /> is less than zero or greater than the length of this instance.</span>
          </span>
        </exception>
        <altmember cref="T:System.Int32" />
        <altmember cref="M:System.String.Concat(System.Object)" />
        <altmember cref="M:System.String.Insert(System.Int32,System.String)" />
        <altmember cref="M:System.String.Join(System.String,System.String[])" />
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Split(System.Char[])" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="Substring">
      <MemberSignature Language="C#" Value="public string Substring (int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Substring(int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Substring(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Substring (startIndex As Integer, length As Integer) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Substring(int startIndex, int length);" />
      <MemberSignature Language="F#" Value="member this.Substring : int * int -&gt; string" Usage="string.Substring (startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="9380d-3027">Die nullbasierte Anfangsposition einer Teilzeichenfolge innerhalb dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3027">The zero-based starting character position of a substring in this instance.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9380d-3028">Die Anzahl der Zeichen in der Teilzeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3028">The number of characters in the substring.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3029">Ruft eine Teilzeichenfolge dieser Instanz ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3029">Retrieves a substring from this instance.</span>
          </span>
          <span data-ttu-id="9380d-3030">Die Teilzeichenfolge beginnt an einer angegebenen Zeichenposition und hat eine angegebene Länge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3030">The substring starts at a specified character position and has a specified length.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3031">Eine Zeichenfolge, die der Teilzeichenfolge mit der Länge <paramref name="length" /> ab <paramref name="startIndex" /> in dieser Instanz entspricht, oder <see cref="F:System.String.Empty" />, wenn <paramref name="startIndex" /> gleich der Länge dieser Instanz und <paramref name="length" /> 0 (null) ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3031">A string that is equivalent to the substring of length <paramref name="length" /> that begins at <paramref name="startIndex" /> in this instance, or <see cref="F:System.String.Empty" /> if <paramref name="startIndex" /> is equal to the length of this instance and <paramref name="length" /> is zero.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3032">Rufen Sie die <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> Methode, um eine Unterzeichenfolge aus einer Zeichenfolge zu extrahieren, die an einer angegebenen Zeichenposition beginnt und vor dem Ende der Zeichenfolge endet.</span><span class="sxs-lookup"><span data-stu-id="9380d-3032">You call the <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> method to extract a substring from a string that begins at a specified character position and ends before the end of the string.</span></span> <span data-ttu-id="9380d-3033">Die Position des ersten Zeichens ist ein nullbasierter; Das heißt, ist das erste Zeichen in der Zeichenfolge am Index 0 (null) nicht Index 1 ein.</span><span class="sxs-lookup"><span data-stu-id="9380d-3033">The starting character position is a zero-based; in other words, the first character in the string is at index 0, not index 1.</span></span> <span data-ttu-id="9380d-3034">Um eine Teilzeichenfolge, die an einer angegebenen Zeichenposition beginnt und bis zum Ende der Zeichenfolge zu extrahieren, rufen Sie die <xref:System.String.Substring%28System.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3034">To extract a substring that begins at a specified character position and continues to the end of the string, call the <xref:System.String.Substring%28System.Int32%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-3035">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-3035">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-3036">Stattdessen wird eine neue Zeichenfolge mit `length` von Zeichen ab der der `startIndex` Position in der aktuellen Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-3036">Instead, it returns a new string with `length` characters starting from the `startIndex` position in the current string.</span></span>  
  
 <span data-ttu-id="9380d-3037">Die `length` Parameter stellt die Gesamtzahl der Zeichen, die aus der aktuellen Zeichenfolgeninstanz zu extrahieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-3037">The `length` parameter represents the total number of characters to extract from the current string instance.</span></span> <span data-ttu-id="9380d-3038">Dies schließt das erste Zeichen am Index gefunden `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="9380d-3038">This includes the starting character found at index  `startIndex`.</span></span>  <span data-ttu-id="9380d-3039">Das heißt, die <xref:System.String.Substring%2A> -Methode versucht, das Extrahieren von Zeichen aus dem Index `startIndex` Index `startIndex`  +  `length` - 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-3039">In other words, the <xref:System.String.Substring%2A> method attempts to extract characters from index `startIndex` to index `startIndex` + `length` - 1.</span></span>  
  
 <span data-ttu-id="9380d-3040">Um eine untergeordnete Zeichenfolge zu extrahieren, die mit einem bestimmten Zeichen oder die Zeichenfolge beginnt, eine Methode aufrufen, wie z. B. <xref:System.String.IndexOf%2A> oder <xref:System.String.LastIndexOf%2A> den Wert der abzurufenden `startIndex`.</span><span class="sxs-lookup"><span data-stu-id="9380d-3040">To extract a substring that begins with a particular character or character sequence, call a method such as  <xref:System.String.IndexOf%2A> or <xref:System.String.LastIndexOf%2A> to get the value of `startIndex`.</span></span>  
  
 <span data-ttu-id="9380d-3041">Wenn die Teilzeichenfolge vom erstreckt `startIndex` auf eine angegebene Zeichenfolge angegeben wird, können Sie z. B. eine Methode aufrufen <xref:System.String.IndexOf%2A> oder <xref:System.String.LastIndexOf%2A> um den Index, der das abschließende Zeichen oder die Zeichenfolge abzurufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3041">If the substring extends from `startIndex` to a specified character sequence, you can call a method such as  <xref:System.String.IndexOf%2A> or <xref:System.String.LastIndexOf%2A> to get the index of the ending character or character sequence.</span></span>  <span data-ttu-id="9380d-3042">Sie können dann wie folgt diesen Wert an eine Indexposition in der Zeichenfolge konvertieren:</span><span class="sxs-lookup"><span data-stu-id="9380d-3042">You can then convert that value to an index position in the string as follows:</span></span>  
  
-   <span data-ttu-id="9380d-3043">Wenn Sie ein einzelnes Zeichen gesucht haben, die zum Kennzeichnen der Teilzeichenfolge, die `length` entspricht `endIndex`  -  `startIndex` + 1, in denen `endIndex` ist der Rückgabewert von der <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOf%2A> -Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3043">If you've searched for a single character that is to mark the end of the substring, the `length` parameter equals  `endIndex` - `startIndex` + 1, where `endIndex` is the return value of the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOf%2A> method.</span></span> <span data-ttu-id="9380d-3044">Das folgende Beispiel extrahiert einen kontinuierlichen Speicherplatzblock "b"-Zeichen aus einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-3044">The following example extracts a continuous block of "b" characters from a string.</span></span>  
  
     [!code-csharp[System.String.Substring#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Substring/cs/Substring2.cs#2)]
     [!code-vb[System.String.Substring#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Substring/vb/Substring2.vb#2)]  
  
-   <span data-ttu-id="9380d-3045">Wenn Sie mehrere Zeichen gesucht haben, die zum Kennzeichnen der Teilzeichenfolge, die `length` entspricht `endIndex`  +  `endMatchLength`  -  `startIndex`, wobei `endIndex` ist der Rückgabewert von der <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOf%2A> -Methode. und `endMatchLength` ist die Länge der Zeichenfolge, die das Ende der Teilzeichenfolge markiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-3045">If you've searched for multiple characters that are to mark the end of the substring, the `length` parameter equals  `endIndex` + `endMatchLength` - `startIndex`, where `endIndex` is the return value of the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOf%2A> method., and `endMatchLength` is the length of the character sequence that marks the end of the substring.</span></span> <span data-ttu-id="9380d-3046">Das folgende Beispiel extrahiert einen Textblock, der eine XML-Code enthält `<definition>` Element.</span><span class="sxs-lookup"><span data-stu-id="9380d-3046">The following example extracts a block of text that contains an XML `<definition>` element.</span></span>  
  
     [!code-csharp[System.String.Substring#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Substring/cs/Substring3.cs#3)]
     [!code-vb[System.String.Substring#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Substring/vb/Substring3.vb#3)]  
  
-   <span data-ttu-id="9380d-3047">Wenn das Zeichen oder die Zeichenfolge am Ende der Teilzeichenfolge, nicht enthalten ist das `length` entspricht `endIndex`  -  `startIndex`, wobei `endIndex` ist der Rückgabewert von der <xref:System.String.IndexOf%2A> oder <xref:System.String.IndexOf%2A> -Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3047">If the character or character sequence is not included in the end of the substring, the `length` parameter equals `endIndex` - `startIndex`, where `endIndex` is the return value of the <xref:System.String.IndexOf%2A> or <xref:System.String.IndexOf%2A> method.</span></span>  
  
 <span data-ttu-id="9380d-3048">Wenn `startIndex` gleich 0 (null) und ist gleich der Länge der aktuellen Zeichenfolge, die Methode gibt die ursprüngliche Zeichenfolge unverändert zurück.</span><span class="sxs-lookup"><span data-stu-id="9380d-3048">If `startIndex` is equal to zero and  equals the length of the current string, the method returns the original string unchanged.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3049">Das folgende Beispiel veranschaulicht einen einfachen Aufruf der <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> -Methode, die zwei Zeichen aus einer Zeichenfolge, die beginnend ab der sechsten Zeichenposition extrahiert (d. h. am index 5).</span><span class="sxs-lookup"><span data-stu-id="9380d-3049">The following example illustrates a simple call to the <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> method that extracts two characters from a string starting at the sixth character position (that is, at index five).</span></span>  
  
 [!code-csharp[System.String.Substring#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Substring/cs/Substring4.cs#4)]
 [!code-vb[System.String.Substring#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Substring/vb/Substring4.vb#4)]  
  
 <span data-ttu-id="9380d-3050">Im folgenden Beispiel wird die <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> -Methode in der folgenden drei Fälle aus, um Teilzeichenfolgen in einer Zeichenfolge zu isolieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-3050">The following example uses the <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> method in the following three cases to isolate substrings within a string.</span></span> <span data-ttu-id="9380d-3051">In beiden Fällen werden die Teilzeichenfolgen in Vergleichen verwendet, und klicken Sie in den dritten Fall wird eine Ausnahme ausgelöst, weil ungültige Parameter angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-3051">In two cases the substrings are used in comparisons, and in the third case an exception is thrown because invalid parameters are specified.</span></span>  
  
-   <span data-ttu-id="9380d-3052">Er extrahiert das einzelne Zeichen und der dritten Position in der Zeichenfolge (am Index 2) und vergleicht sie mit der ein "c".</span><span class="sxs-lookup"><span data-stu-id="9380d-3052">It extracts the single character and the third position in the string (at index 2) and compares it with a "c".</span></span> <span data-ttu-id="9380d-3053">Dieser Vergleich gibt `true`.</span><span class="sxs-lookup"><span data-stu-id="9380d-3053">This comparison returns `true`.</span></span>  
  
-   <span data-ttu-id="9380d-3054">Es werden keine Zeichen beginnend an der vierten Position in der Zeichenfolge (am Index 3) extrahiert und übergibt es an der <xref:System.String.IsNullOrEmpty%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3054">It extracts zero characters starting at the fourth position in the string (at index 3) and passes it to the <xref:System.String.IsNullOrEmpty%2A> method.</span></span> <span data-ttu-id="9380d-3055">Dies gibt true zurück, da der Aufruf der <xref:System.String.Substring%2A> Methodenrückgabe <xref:System.String.Empty?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-3055">This returns true because the call to the <xref:System.String.Substring%2A> method returns <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
-   <span data-ttu-id="9380d-3056">Es wird versucht, ein Zeichen, beginnend an der vierten Position in der Zeichenfolge zu extrahieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-3056">It attempts to extract one character starting at the fourth position in the string.</span></span> <span data-ttu-id="9380d-3057">Da Sie an dieser Position kein Zeichen vorhanden ist, löst der Methodenaufruf eine <xref:System.ArgumentOutOfRangeException> Ausnahme.</span><span class="sxs-lookup"><span data-stu-id="9380d-3057">Because there is no character at that position, the method call throws an <xref:System.ArgumentOutOfRangeException> exception.</span></span>  
  
 [!code-csharp[Classic String.Substring1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic String.Substring1 Example/CS/source.cs#1)]
 [!code-vb[Classic String.Substring1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic String.Substring1 Example/VB/source.vb#1)]  
  
 <span data-ttu-id="9380d-3058">Im folgenden Beispiel wird die <xref:System.String.Substring%2A> Methode, um Schlüssel/Wert-Paare trennen, die durch ein Gleichheitszeichen getrennt sind ("=") Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3058">The following example uses the <xref:System.String.Substring%2A> method to separate key/value pairs that are delimited by an equals ("=") character.</span></span>  
  
 [!code-csharp[System.String.Substring#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.String.Substring/cs/Substring1.cs#1)]
 [!code-vb[System.String.Substring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.String.Substring/vb/Substring1.vb#1)]  
  
 <span data-ttu-id="9380d-3059">Die <xref:System.String.IndexOf%2A> Methode wird verwendet, um die Position des Zeichens gleich in der Zeichenfolge abzurufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3059">The <xref:System.String.IndexOf%2A> method is used to get the position of the equals character in the string.</span></span> <span data-ttu-id="9380d-3060">Der Aufruf der <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> -Methode extrahiert den Schlüsselnamen, der vom ersten Zeichen in der Zeichenfolge beginnt, und erweitern für die Anzahl der Zeichen zurückgegeben werden, durch den Aufruf der <xref:System.String.IndexOf%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3060">The call to the <xref:System.String.Substring%28System.Int32%2CSystem.Int32%29> method extracts the key name, which starts from the first character in the string and extends for the number of characters returned by the call to the <xref:System.String.IndexOf%2A> method.</span></span> <span data-ttu-id="9380d-3061">Der Aufruf der <xref:System.String.Substring%28System.Int32%29> Methode extrahiert dann den Wert auf den Schlüssel zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3061">The call to the <xref:System.String.Substring%28System.Int32%29> method then extracts the value assigned to the key.</span></span> <span data-ttu-id="9380d-3062">Es beginnt an einer Position des Zeichens hinter dem Gleichheitszeichen und reicht bis zum Ende der Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-3062">It starts at one character position beyond the equals character and extends to the end of the string.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-3063">
            <paramref name="startIndex" /> plus <paramref name="length" /> gibt eine Position außerhalb dieser Instanz an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3063">
              <paramref name="startIndex" /> plus <paramref name="length" /> indicates a position not within this instance.</span>
          </span>
          <span data-ttu-id="9380d-3064">Oder:  <paramref name="startIndex" /> oder <paramref name="length" /> ist kleiner als 0 (null).</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3064">-or-  <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.Remove(System.Int32,System.Int32)" />
        <altmember cref="M:System.String.Replace(System.Char,System.Char)" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Char&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;char&gt; IEnumerable&lt;char&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;char&gt; System.Collections.Generic.IEnumerable&lt;char&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#Collections#Generic#IEnumerable&lt;char&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of Char) Implements IEnumerable(Of Char).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;char&gt; ^ System.Collections.Generic.IEnumerable&lt;char&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;char&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3065">Gibt einen Enumerator zurück, der das aktuelle <see cref="T:System.String" />-Objekt durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3065">Returns an enumerator that iterates through the current <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3066">Ein stark typisierter Enumerator, der zum Durchlaufen des aktuellen <see cref="T:System.String" />-Objekts verwendet werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3066">A strongly-typed enumerator that can be used to iterate through the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3067">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3067">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3068">Kann verwendet werden nur dann, wenn die <xref:System.String> Instanz der Umwandlung in eine <xref:System.Collections.Generic.IEnumerable%601> Schnittstellenobjekt.</span><span class="sxs-lookup"><span data-stu-id="9380d-3068">It can be used only when the <xref:System.String> instance is cast to an <xref:System.Collections.Generic.IEnumerable%601> interface object.</span></span> <span data-ttu-id="9380d-3069">Weitere Informationen finden Sie unter der Methode <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>.</span><span class="sxs-lookup"><span data-stu-id="9380d-3069">For more information, see the <xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3070">Gibt einen Enumerator zurück, der das aktuelle <see cref="T:System.String" />-Objekt durchläuft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3070">Returns an enumerator that iterates through the current <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3071">Ein Enumerator, mit dem die Elemente in der aktuellen Zeichenfolge durchlaufen werden können.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3071">An enumerator that can be used to iterate through the current string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3072">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3072">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3073">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.Collections.IEnumerable>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3073">It can be used only when the <xref:System.String> instance is cast to an <xref:System.Collections.IEnumerable> interface.</span></span> <span data-ttu-id="9380d-3074">Weitere Informationen finden Sie unter der Methode <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="9380d-3074">For more information, see the <xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3075">Dieser Parameter wird ignoriert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3075">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3076">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3076">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3077">
            <see langword="true" />, wenn der Wert der aktuellen Zeichenfolge <see cref="F:System.Boolean.TrueString" /> ist. <see langword="false" />, wenn der Wert der aktuellen Zeichenfolge <see cref="F:System.Boolean.FalseString" /> ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3077">
              <see langword="true" /> if the value of the current string is <see cref="F:System.Boolean.TrueString" />; <see langword="false" /> if the value of the current string is <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3078">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3078">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3079">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3079">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3080">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3080">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-3081">Der Wert der aktuellen Zeichenfolge lautet nicht <see cref="F:System.Boolean.TrueString" /> oder <see cref="F:System.Boolean.FalseString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3081">The value of the current string is not <see cref="F:System.Boolean.TrueString" /> or <see cref="F:System.Boolean.FalseString" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3082">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3082">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3083">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3083">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3084">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3084">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3085">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3085">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3086">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3086">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3087">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3087">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-3088">Der Wert des aktuellen <see cref="T:System.String" />-Objekts kann nicht analysiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3088">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="9380d-3089">Der Wert des aktuellen <see cref="T:System.String" />-Objekts ist eine Zahl größer als <see cref="F:System.Byte.MaxValue" /> oder kleiner als <see cref="F:System.Byte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3089">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.Byte.MaxValue" /> or less than <see cref="F:System.Byte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3090">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3090">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3091">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3091">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3092">Das Zeichen am Index 0 im aktuellen <see cref="T:System.String" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3092">The character at index 0 in the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3093">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3093">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3094">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3094">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3095">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToChar%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3095">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3096">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3096">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3097">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToDateTime(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3097">For a description of this member, see <see cref="M:System.IConvertible.ToDateTime(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3098">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3098">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3099">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3099">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3100">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3100">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3101">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToDateTime%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3101">The recommended alternative is to call the <xref:System.Convert.ToDateTime%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3102">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3102">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3103">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3103">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3104">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3104">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3105">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3105">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3106">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3106">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3107">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToDecimal%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3107">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-3108">Der Wert des aktuellen <see cref="T:System.String" />-Objekts kann nicht analysiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3108">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="9380d-3109">Der Wert des aktuellen <see cref="T:System.String" />-Objekts ist eine Zahl kleiner als <see cref="F:System.Decimal.MinValue" /> oder größer als <see cref="F:System.Decimal.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3109">The value of the current <see cref="T:System.String" /> object is a number less than <see cref="F:System.Decimal.MinValue" /> or than <see cref="F:System.Decimal.MaxValue" /> greater.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3110">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3110">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3111">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3111">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3112">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3112">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3113">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3113">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3114">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3114">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3115">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToDouble%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3115">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-3116">Der Wert des aktuellen <see cref="T:System.String" />-Objekts kann nicht analysiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3116">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="9380d-3117">Der Wert des aktuellen <see cref="T:System.String" />-Objekts ist eine Zahl kleiner als <see cref="F:System.Double.MinValue" /> oder größer als <see cref="F:System.Double.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3117">The value of the current <see cref="T:System.String" /> object is a number less than <see cref="F:System.Double.MinValue" /> or greater than <see cref="F:System.Double.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3118">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3118">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3119">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3119">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3120">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3120">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3121">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3121">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3122">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3122">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3123">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToInt16%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3123">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-3124">Der Wert des aktuellen <see cref="T:System.String" />-Objekts kann nicht analysiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3124">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="9380d-3125">Der Wert des aktuellen <see cref="T:System.String" />-Objekts ist eine Zahl größer als <see cref="F:System.Int16.MaxValue" /> oder kleiner als <see cref="F:System.Int16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3125">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.Int16.MaxValue" /> or less than <see cref="F:System.Int16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3126">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3126">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3127">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3127">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3128">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3128">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3129">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3129">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3130">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3130">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3131">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToInt32%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3131">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3132">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3132">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3133">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3133">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3134">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3134">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3135">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3135">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3136">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3136">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3137">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToInt64%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3137">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3138">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3138">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3139">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3139">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3140">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3140">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3141">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3141">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3142">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3142">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3143">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToSByte%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3143">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-3144">Der Wert des aktuellen <see cref="T:System.String" />-Objekts kann nicht analysiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3144">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="9380d-3145">Der Wert des aktuellen <see cref="T:System.String" />-Objekts ist eine Zahl größer als <see cref="F:System.SByte.MaxValue" /> oder kleiner als <see cref="F:System.SByte.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3145">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.SByte.MaxValue" /> or less than <see cref="F:System.SByte.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3146">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3146">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3147">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3147">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3148">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3148">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3149">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3149">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3150">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3150">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3151">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToSingle%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3151">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="9380d-3152">Der Typ des zurückgegebenen Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3152">The type of the returned object.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="9380d-3153">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3153">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3154">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3154">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3155">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3155">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3156">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3156">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3157">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3157">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3158">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ChangeType%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3158">The recommended alternative is to call the <xref:System.Convert.ChangeType%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-3159">
            <paramref name="type" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3159">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="9380d-3160">Der Wert des aktuellen <see cref="T:System.String" />-Objekts kann nicht in den durch den <paramref name="type" />-Parameter angegebenen Typ konvertiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3160">The value of the current <see cref="T:System.String" /> object cannot be converted to the type specified by the <paramref name="type" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3161">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3161">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3162">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3162">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3163">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3163">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3164">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3164">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3165">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3165">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3166">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToUInt16%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3166">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-3167">Der Wert des aktuellen <see cref="T:System.String" />-Objekts kann nicht analysiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3167">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="9380d-3168">Der Wert des aktuellen <see cref="T:System.String" />-Objekts ist eine Zahl größer als <see cref="F:System.UInt16.MaxValue" /> oder kleiner als <see cref="F:System.UInt16.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3168">The value of the current <see cref="T:System.String" /> object is a number greater than <see cref="F:System.UInt16.MaxValue" /> or less than <see cref="F:System.UInt16.MinValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3169">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3169">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3170">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3170">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3171">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3171">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3172">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3172">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3173">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3173">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3174">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToUInt32%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3174">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="9380d-3175">Der Wert des aktuellen <see cref="T:System.String" />-Objekts kann nicht analysiert werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3175">The value of the current <see cref="T:System.String" /> object cannot be parsed.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="9380d-3176">Der Wert des aktuellen <see cref="T:System.String" />-Objekts ist eine Zahl größer als <see cref="F:System.UInt32.MaxValue" /> oder kleiner als <see cref="F:System.UInt32.MinValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3176">The value of the current <see cref="T:System.String" /> object is a number greater <see cref="F:System.UInt32.MaxValue" /> or less than <see cref="F:System.UInt32.MinValue" /></span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3177">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3177">An object that provides culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3178">Eine Beschreibung dieses Elements finden Sie unter <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3178">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3179">Der konvertierte Wert des aktuellen <see cref="T:System.String" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3179">The converted value of the current <see cref="T:System.String" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3180">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3180">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="9380d-3181">Er kann nur verwendet werden, wenn die <xref:System.String>-Instanz in eine <xref:System.IConvertible>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3181">It can be used only when the <xref:System.String> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="9380d-3182">Die empfohlene Alternative ist das Aufrufen der <xref:System.Convert.ToUInt64%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3182">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToCharArray">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3183">Kopiert die Zeichen dieser Instanz in ein Array von Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3183">Copies the characters in this instance to a Unicode character array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToCharArray">
      <MemberSignature Language="C#" Value="public char[] ToCharArray ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char[] ToCharArray() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToCharArray" />
      <MemberSignature Language="VB.NET" Value="Public Function ToCharArray () As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;char&gt; ^ ToCharArray();" />
      <MemberSignature Language="F#" Value="member this.ToCharArray : unit -&gt; char[]" Usage="string.ToCharArray " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3184">Kopiert die Zeichen dieser Instanz in ein Array von Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3184">Copies the characters in this instance to a Unicode character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3185">Ein Array von Unicode-Zeichen, dessen Elemente die einzelnen Zeichen dieser Instanz darstellen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3185">A Unicode character array whose elements are the individual characters of this instance.</span>
          </span>
          <span data-ttu-id="9380d-3186">Wenn diese Instanz eine leere Zeichenfolge ist, ist das zurückgegebene Array leer und hat die Länge 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3186">If this instance is an empty string, the returned array is empty and has a zero length.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3187">Diese Methode kopiert jedes Zeichen (d. h. jede <xref:System.Char> Objekt) in einer Zeichenfolge in ein Array von Zeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3187">This method copies each character (that is, each <xref:System.Char> object) in a string to a character array.</span></span> <span data-ttu-id="9380d-3188">Das erste Zeichen kopiert befindet sich am Index 0 (null) im Zeichenarray zurückgegebenen. das letzte Zeichen am Index ist <xref:System.Array.Length%2A?displayProperty=nameWithType> – 1.</span><span class="sxs-lookup"><span data-stu-id="9380d-3188">The first character copied is at index zero of the returned character array; the last character copied is at index <xref:System.Array.Length%2A?displayProperty=nameWithType> – 1.</span></span>  
  
 <span data-ttu-id="9380d-3189">Um eine Zeichenfolge aus den Zeichen in einem Zeichenarray zu erstellen, rufen die <xref:System.String.%23ctor%28System.Char%5B%5D%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="9380d-3189">To create a string from the characters in a character array, call the <xref:System.String.%23ctor%28System.Char%5B%5D%29> constructor.</span></span>  
  
 <span data-ttu-id="9380d-3190">Um ein Byte-Array zu erstellen, die den codierten Zeichen in einer Zeichenfolge enthält, instanziieren Sie das entsprechende <xref:System.Text.Encoding> Objekt, und rufen die <xref:System.Text.Encoding.GetBytes%28System.String%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3190">To create a byte array that contains the encoded characters in a string, instantiate the appropriate <xref:System.Text.Encoding> object and call its <xref:System.Text.Encoding.GetBytes%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="9380d-3191">Die folgenden sind einige der standard in .NET Framework verfügbaren Codierungen:</span><span class="sxs-lookup"><span data-stu-id="9380d-3191">Some of the standard encodings available in the .NET Framework include the following:</span></span>  
  
|<span data-ttu-id="9380d-3192">Codierung</span><span class="sxs-lookup"><span data-stu-id="9380d-3192">Encoding</span></span>|<span data-ttu-id="9380d-3193">Object</span><span class="sxs-lookup"><span data-stu-id="9380d-3193">Object</span></span>|  
|--------------|------------|  
|<span data-ttu-id="9380d-3194">ASCII</span><span class="sxs-lookup"><span data-stu-id="9380d-3194">ASCII</span></span>|<xref:System.Text.ASCIIEncoding>|  
|<span data-ttu-id="9380d-3195">UTF-7</span><span class="sxs-lookup"><span data-stu-id="9380d-3195">UTF-7</span></span>|<xref:System.Text.UTF7Encoding>|  
|<span data-ttu-id="9380d-3196">UTF-8</span><span class="sxs-lookup"><span data-stu-id="9380d-3196">UTF-8</span></span>|<xref:System.Text.UTF8Encoding>|  
|<span data-ttu-id="9380d-3197">UTF-16</span><span class="sxs-lookup"><span data-stu-id="9380d-3197">UTF-16</span></span>|<xref:System.Text.UnicodeEncoding>|  
|<span data-ttu-id="9380d-3198">UTF-32</span><span class="sxs-lookup"><span data-stu-id="9380d-3198">UTF-32</span></span>|<xref:System.Text.UTF32Encoding>|  
  
 <span data-ttu-id="9380d-3199">Weitere Informationen finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-3199">For more information, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3200">Im folgenden Beispiel wird die <xref:System.String.ToCharArray%2A> Methode, um die Zeichen in einer Zeichenfolge in ein Zeichenarray zu extrahieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-3200">The following example calls the <xref:System.String.ToCharArray%2A> method to extract the characters in a string to a character array.</span></span> <span data-ttu-id="9380d-3201">Es zeigt dann die ursprüngliche Zeichenfolge und die Elemente im Array.</span><span class="sxs-lookup"><span data-stu-id="9380d-3201">It then displays the original string and the elements in the array.</span></span>  
  
 [!code-csharp[System.String.ToCharArray#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.tochararray/cs/ToCharArray1.cs#1)]
 [!code-vb[System.String.ToCharArray#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.tochararray/vb/ToCharArray1.vb#1)]  
  
 <span data-ttu-id="9380d-3202">Das folgende Beispiel definiert eine Zeichenfolge, die mit den Zeichen, das als Trennzeichen in eine Zeichenfolge mit Trennzeichen fungieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-3202">The following example defines a string containing the characters that serve as delimiters in a delimited string.</span></span> <span data-ttu-id="9380d-3203">Es ruft dann die <xref:System.String.ToCharArray%2A> Methode, um ein Array von Zeichen, die übergeben werden kann, erstellen die <xref:System.String.Split%28System.Char%5B%5D%29> Methode, die durch Trennzeichen getrennte Zeichenfolge in die einzelnen Teilzeichenfolgen zu trennen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3203">It then calls the <xref:System.String.ToCharArray%2A> method to create a character array that can be passed to the <xref:System.String.Split%28System.Char%5B%5D%29> method to separate the delimited string into its individual substrings.</span></span>  
  
 [!code-cpp[StringSplit2#1](~/samples/snippets/cpp/VS_Snippets_CLR/StringSplit2/CPP/stringsplit2.cpp#1)] 
 [!code-csharp[StringSplit2#1](~/samples/snippets/csharp/VS_Snippets_CLR/StringSplit2/CS/stringsplit2.cs#1)] 
 [!code-vb[StringSplit2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/StringSplit2/VB/stringsplit2.vb#1)]   
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Array" />
      </Docs>
    </Member>
    <Member MemberName="ToCharArray">
      <MemberSignature Language="C#" Value="public char[] ToCharArray (int startIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance char[] ToCharArray(int32 startIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToCharArray(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToCharArray (startIndex As Integer, length As Integer) As Char()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;char&gt; ^ ToCharArray(int startIndex, int length);" />
      <MemberSignature Language="F#" Value="member this.ToCharArray : int * int -&gt; char[]" Usage="string.ToCharArray (startIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="startIndex">
          <span data-ttu-id="9380d-3204">Die Anfangsposition einer Teilzeichenfolge innerhalb dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3204">The starting position of a substring in this instance.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="9380d-3205">Die Länge einer Teilzeichenfolge innerhalb dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3205">The length of the substring in this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3206">Kopiert die Zeichen einer angegebenen Teilzeichenfolge dieser Instanz in ein Array von Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3206">Copies the characters in a specified substring in this instance to a Unicode character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3207">Ein Array von Unicode-Zeichen, dessen Elemente die <paramref name="length" />-Zeichen dieser Instanz ab Zeichenposition <paramref name="startIndex" /> sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3207">A Unicode character array whose elements are the <paramref name="length" /> number of characters in this instance starting from character position <paramref name="startIndex" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3208">Diese Methode kopiert die Zeichen in einem Abschnitt einer Zeichenfolge in ein Zeichenarray.</span><span class="sxs-lookup"><span data-stu-id="9380d-3208">This method copies the characters in a portion of a string to a character array.</span></span> <span data-ttu-id="9380d-3209">Rufen Sie zum Erstellen einer Zeichenfolge aus einem Bereich von Zeichen in ein Array von Zeichen der <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="9380d-3209">To create a string from a range of characters in a character array, call the  <xref:System.String.%23ctor%28System.Char%5B%5D%2CSystem.Int32%2CSystem.Int32%29> constructor.</span></span>  
  
 <span data-ttu-id="9380d-3210">Die `startIndex` Parameter ist nullbasiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-3210">The `startIndex` parameter is zero-based.</span></span> <span data-ttu-id="9380d-3211">Der Index des ersten Zeichens in der Zeichenfolgeninstanz ist 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-3211">That is, the index of the first character in the string instance is zero.</span></span>  
  
 <span data-ttu-id="9380d-3212">Wenn `length` 0 (null), ist das zurückgegebene Array leer ist, und weist eine Länge von 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-3212">If `length` is zero, the returned array is empty and has a zero length.</span></span> <span data-ttu-id="9380d-3213">Wenn diese Instanz ist `null` oder eine leere Zeichenfolge (""), das zurückgegebene Array leer ist, und weist eine Länge von 0 (null).</span><span class="sxs-lookup"><span data-stu-id="9380d-3213">If this instance is `null` or an empty string (""), the returned array is empty and has a zero length.</span></span>  
  
 <span data-ttu-id="9380d-3214">Um ein Byte-Array zu erstellen, die den codierten Zeichen in einem Abschnitt einer Zeichenfolge enthält, instanziieren Sie das entsprechende <xref:System.Text.Encoding> Objekt, und rufen die <xref:System.Text.Encoding.GetBytes%28System.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Byte%5B%5D%2CSystem.Int32%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3214">To create a byte array that contains the encoded characters in a portion of a string, instantiate the appropriate <xref:System.Text.Encoding> object and call its <xref:System.Text.Encoding.GetBytes%28System.String%2CSystem.Int32%2CSystem.Int32%2CSystem.Byte%5B%5D%2CSystem.Int32%29> method.</span></span> <span data-ttu-id="9380d-3215">Die folgenden sind einige der standard in .NET Framework verfügbaren Codierungen:</span><span class="sxs-lookup"><span data-stu-id="9380d-3215">Some of the standard encodings available in the .NET Framework include the following:</span></span>  
  
|<span data-ttu-id="9380d-3216">Codierung</span><span class="sxs-lookup"><span data-stu-id="9380d-3216">Encoding</span></span>|<span data-ttu-id="9380d-3217">Object</span><span class="sxs-lookup"><span data-stu-id="9380d-3217">Object</span></span>|  
|--------------|------------|  
|<span data-ttu-id="9380d-3218">ASCII</span><span class="sxs-lookup"><span data-stu-id="9380d-3218">ASCII</span></span>|<xref:System.Text.ASCIIEncoding>|  
|<span data-ttu-id="9380d-3219">UTF-7</span><span class="sxs-lookup"><span data-stu-id="9380d-3219">UTF-7</span></span>|<xref:System.Text.UTF7Encoding>|  
|<span data-ttu-id="9380d-3220">UTF-8</span><span class="sxs-lookup"><span data-stu-id="9380d-3220">UTF-8</span></span>|<xref:System.Text.UTF8Encoding>|  
|<span data-ttu-id="9380d-3221">UTF-16</span><span class="sxs-lookup"><span data-stu-id="9380d-3221">UTF-16</span></span>|<xref:System.Text.UnicodeEncoding>|  
|<span data-ttu-id="9380d-3222">UTF-32</span><span class="sxs-lookup"><span data-stu-id="9380d-3222">UTF-32</span></span>|<xref:System.Text.UTF32Encoding>|  
  
 <span data-ttu-id="9380d-3223">Weitere Informationen finden Sie unter [Zeichencodierung in .NET Framework](~/docs/standard/base-types/character-encoding.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-3223">For more information, see [Character Encoding in the .NET Framework](~/docs/standard/base-types/character-encoding.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3224">Im folgenden Beispiel wird eine Teilzeichenfolge innerhalb einer Zeichenfolge in ein Array von Zeichen, konvertiert und dann listet auf und zeigt die Elemente des Arrays.</span><span class="sxs-lookup"><span data-stu-id="9380d-3224">The following example converts a substring within a string to an array of characters, then enumerates and displays the elements of the array.</span></span>  
  
 [!code-cpp[string.tochararray1#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.ToCharArray1/CPP/tocharry1.cpp#1)]
 [!code-csharp[string.tochararray1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.ToCharArray1/CS/tocharry1.cs#1)]
 [!code-vb[string.tochararray1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.ToCharArray1/VB/tocharry1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="9380d-3225">
            <paramref name="startIndex" /> oder <paramref name="length" /> ist kleiner als 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3225">
              <paramref name="startIndex" /> or <paramref name="length" /> is less than zero.</span>
          </span>
          <span data-ttu-id="9380d-3226">Oder:  <paramref name="startIndex" />+<paramref name="length" /> ist größer als die Länge dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3226">-or-  <paramref name="startIndex" /> plus <paramref name="length" /> is greater than the length of this instance.</span>
          </span>
        </exception>
        <altmember cref="T:System.Array" />
        <altmember cref="T:System.Char" />
        <altmember cref="T:System.Int32" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToLower">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3227">Gibt eine in Kleinbuchstaben konvertierte Kopie dieser Zeichenfolge zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3227">Returns a copy of this string converted to lowercase.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public string ToLower ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLower() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToLower" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLower () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLower();" />
      <MemberSignature Language="F#" Value="member this.ToLower : unit -&gt; string" Usage="string.ToLower " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3228">Gibt eine in Kleinbuchstaben konvertierte Kopie dieser Zeichenfolge zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3228">Returns a copy of this string converted to lowercase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3229">Eine Zeichenfolge aus Kleinbuchstaben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3229">A string in lowercase.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3230">Diese Methode berücksichtigt die Regeln der Groß-und Kleinschreibung der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-3230">This method takes into account the casing rules of the current culture.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-3231">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-3231">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-3232">Stattdessen wird eine neue Zeichenfolge, die in der alle Zeichen in der aktuellen Instanz in Kleinbuchstaben konvertiert wurden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-3232">Instead, it returns a new string in which all characters in the current instance are converted to lowercase.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="9380d-3233">Sicherheitsüberlegungen</span><span class="sxs-lookup"><span data-stu-id="9380d-3233">Security Considerations</span></span>  
 <span data-ttu-id="9380d-3234">Der Schreibweise-Vorgang, der aus den Aufrufen resultiert die <xref:System.String.ToLower> Methode berücksichtigt die Groß-/ Kleinschreibungskonventionen der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-3234">The casing operation that results from calling the <xref:System.String.ToLower> method takes the casing conventions of the current culture into account.</span></span> <span data-ttu-id="9380d-3235">Bei Bedarf die klein- oder Großbuchstabe Version eines Betriebssystems Bezeichners steht, z. B. einen Dateinamen ein, mit dem Namen Pipe oder einen Registrierungsschlüssel verwenden die <xref:System.String.ToLowerInvariant%2A> oder <xref:System.String.ToUpperInvariant%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="9380d-3235">If you need the lowercase or uppercase version of an operating system identifier, such as a file name, named pipe, or registry key, use the <xref:System.String.ToLowerInvariant%2A> or <xref:System.String.ToUpperInvariant%2A> methods.</span></span> <span data-ttu-id="9380d-3236">Dies erzeugt das gleiche Ergebnis in jeder Kultur (im Gegensatz zu den <xref:System.String.ToLower> Methode) und effizienter ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-3236">This produces the same result in every culture (unlike the <xref:System.String.ToLower> method) and performs more efficiently.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3237">Im folgende Beispiel konvertiert mehrere Zeichenfolgen, die gemischte Groß-/Kleinschreibung in Kleinbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="9380d-3237">The following example converts several mixed case strings to lowercase.</span></span>  
  
 [!code-cpp[stringlowerupper#1](~/samples/snippets/cpp/VS_Snippets_CLR/stringlowerupper/CPP/stringtolower.cpp#1)]
 [!code-csharp[stringlowerupper#1](~/samples/snippets/csharp/VS_Snippets_CLR/stringlowerupper/CS/stringtolower.cs#1)]
 [!code-vb[stringlowerupper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/stringlowerupper/VB/stringtolower.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-3238">
            <para>Wie unter [bewährte Methoden für Strings](~/docs/standard/base-types/best-practices-strings.md) verwenden, es wird empfohlen, dass Sie vermeiden, Aufrufmethoden Zeichenfolge Groß-/Kleinschreibung, die Standardwerte ersetzen, und rufen stattdessen die Methoden, die Parameter erfordern explizit angegeben. Um ein Zeichen, das mit die Groß-/ Kleinschreibungskonventionen der aktuellen Kultur in Kleinbuchstaben zu konvertieren, rufen die <see cref="M:System.String.ToLower(System.Globalization.CultureInfo)" /> methodenüberladung mit einem Wert von <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> für seine <paramref name="culture" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3238">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string casing methods that substitute default values and instead call methods that require parameters to be explicitly specified. To convert a character to lowercase by using the casing conventions of the current culture, call the <see cref="M:System.String.ToLower(System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToLowerInvariant" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="M:System.String.ToUpperInvariant" />
      </Docs>
    </Member>
    <Member MemberName="ToLower">
      <MemberSignature Language="C#" Value="public string ToLower (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLower(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToLower(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLower (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLower(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.ToLower : System.Globalization.CultureInfo -&gt; string" Usage="string.ToLower culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="9380d-3239">Ein Objekt, das kulturspezifische Regeln zur Groß- und Kleinschreibung bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3239">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3240">Gibt eine in Kleinbuchstaben konvertierte Kopie dieser Zeichenfolge zurück, wobei die Regeln der Groß- und Kleinschreibung der angegebenen Kultur verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3240">Returns a copy of this string converted to lowercase, using the casing rules of the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3241">Die Entsprechung der aktuellen Zeichenfolge in Kleinbuchstaben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3241">The lowercase equivalent of the current string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3242">Der Groß-/ Kleinschreibregeln der Kultur angegeben werden, indem die `culture` Parameter zu bestimmen, wie im Fall von der Zeichenfolge geändert wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3242">The casing rules of the culture specified by the `culture` parameter determine the way the case of the string is changed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-3243">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-3243">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-3244">Stattdessen wird eine neue Zeichenfolge, die in der alle Zeichen in der aktuellen Instanz in Kleinbuchstaben konvertiert wurden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-3244">Instead, it returns a new string in which all characters in the current instance are converted to lowercase.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="9380d-3245">Sicherheitsüberlegungen</span><span class="sxs-lookup"><span data-stu-id="9380d-3245">Security Considerations</span></span>  
 <span data-ttu-id="9380d-3246">Übergeben der <xref:System.String.ToLower%28System.Globalization.CultureInfo%29> Methode eine <xref:System.Globalization.CultureInfo> Objekt außer <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>, der Vorgang zur Groß-und Kleinschreibung wird berücksichtigt kulturspezifischen Regeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-3246">If you pass the <xref:System.String.ToLower%28System.Globalization.CultureInfo%29> method a <xref:System.Globalization.CultureInfo> object other than <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>, the casing operation will take culture-specific rules into account.</span></span> <span data-ttu-id="9380d-3247">Bei Bedarf die klein- oder Großbuchstabe Version eines Betriebssystems Bezeichners steht, z. B. einen Dateinamen ein, mit dem Namen Pipe oder einen Registrierungsschlüssel verwenden die <xref:System.String.ToLowerInvariant%2A> oder <xref:System.String.ToUpperInvariant%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3247">If you need the lowercase or uppercase version of an operating system identifier, such as a file name, named pipe, or registry key, use the <xref:System.String.ToLowerInvariant%2A> or <xref:System.String.ToUpperInvariant%2A> method.</span></span> <span data-ttu-id="9380d-3248">Dies führt zum gleichen Ergebnis in jeder Kultur und effizienter ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-3248">This produces the same result in every culture and performs more efficiently.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3249">Im folgende Beispiel konvertiert die beiden Zeichenfolgen von Großbuchstaben in Kleinbuchstaben unter Verwendung der Kulturen Englisch-USA und Türkisch-Türkei, und klicken Sie dann Kleinbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="9380d-3249">The following example converts two strings of uppercase characters to lowercase characters using the English-United States and Turkish-Turkey cultures, then compares the lowercase strings.</span></span> <span data-ttu-id="9380d-3250">Die Zeichenfolgen in Großbuchstaben sind identisch, außer dass bei jeder Instanz des Unicode-LATIN CAPITAL LETTER I in einer Zeichenfolge, die andere Zeichenfolge LATIN CAPITAL LETTER I mit Punkt oben enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-3250">The uppercase strings are identical except that for each occurrence of the Unicode LATIN CAPITAL LETTER I in one string, the other string contains LATIN CAPITAL LETTER I WITH DOT ABOVE.</span></span>  
  
 [!code-cpp[string.tolower1#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.tolower1/CPP/tolower.cpp#1)]
 [!code-csharp[string.tolower1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.tolower1/CS/tolower.cs#1)]
 [!code-vb[string.tolower1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.tolower1/VB/tolower.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-3251">
            <paramref name="culture" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3251">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="M:System.String.ToUpper" />
      </Docs>
    </Member>
    <Member MemberName="ToLowerInvariant">
      <MemberSignature Language="C#" Value="public string ToLowerInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToLowerInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToLowerInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Function ToLowerInvariant () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToLowerInvariant();" />
      <MemberSignature Language="F#" Value="member this.ToLowerInvariant : unit -&gt; string" Usage="string.ToLowerInvariant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3252">Gibt eine in Kleinbuchstaben konvertierte Kopie dieses <see cref="T:System.String" />-Objekts zurück, wobei die Regeln der Groß- und Kleinschreibung der invarianten Kultur verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3252">Returns a copy of this <see cref="T:System.String" /> object converted to lowercase using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3253">Die Entsprechung der aktuellen Zeichenfolge in Kleinbuchstaben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3253">The lowercase equivalent of the current string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3254">Die invariante Kultur darstellt, eine Kultur, die kulturunabhängig ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-3254">The invariant culture represents a culture that is culture-insensitive.</span></span> <span data-ttu-id="9380d-3255">Es ist verknüpft mit der englischen Sprache jedoch nicht mit einem bestimmten Land oder Region.</span><span class="sxs-lookup"><span data-stu-id="9380d-3255">It is associated with the English language but not with a specific country or region.</span></span> <span data-ttu-id="9380d-3256">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9380d-3256">For more information, see the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="9380d-3257">Wenn Ihre Anwendung abhängt, auf eine Zeichenfolge, die Änderung in einer vorhersagbaren Weise, die von der aktuellen Kultur, verwenden nicht beeinträchtigt wird die Groß-/Kleinschreibung der <xref:System.String.ToLowerInvariant%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3257">If your application depends on the case of a string changing in a predictable way that is unaffected by the current culture, use the <xref:System.String.ToLowerInvariant%2A> method.</span></span> <span data-ttu-id="9380d-3258">Die <xref:System.String.ToLowerInvariant%2A> Methode entspricht dem `ToLower(CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="9380d-3258">The <xref:System.String.ToLowerInvariant%2A> method is equivalent to `ToLower(CultureInfo.InvariantCulture)`.</span></span> <span data-ttu-id="9380d-3259">Die Methode wird empfohlen, wenn eine Auflistung von Zeichenfolgen, die in einer vorhersagbaren Reihenfolge in einem Steuerelement der Benutzeroberfläche angezeigt werden muss.</span><span class="sxs-lookup"><span data-stu-id="9380d-3259">The method is recommended when a collection of strings must appear in a predictable order in a user interface control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-3260">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-3260">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-3261">Stattdessen wird eine neue Zeichenfolge, die in der alle Zeichen in der aktuellen Instanz in Kleinbuchstaben konvertiert wurden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-3261">Instead, it returns a new string in which all characters in the current instance are converted to lowercase.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="9380d-3262">Sicherheitsüberlegungen</span><span class="sxs-lookup"><span data-stu-id="9380d-3262">Security Considerations</span></span>  
 <span data-ttu-id="9380d-3263">Bei Bedarf die klein- oder Großbuchstabe Version eines Betriebssystems Bezeichners steht, z. B. einen Dateinamen ein, mit dem Namen Pipe oder einen Registrierungsschlüssel verwenden die <xref:System.String.ToLowerInvariant%2A> oder <xref:System.String.ToUpperInvariant%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="9380d-3263">If you need the lowercase or uppercase version of an operating system identifier, such as a file name, named pipe, or registry key, use the <xref:System.String.ToLowerInvariant%2A> or <xref:System.String.ToUpperInvariant%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3264">Das folgende Beispiel definiert ein Zeichenfolgenarray, das ein einzelnes Wort in einer Reihe von Sprachen enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-3264">The following example defines a string array that contains a single word in a number of languages.</span></span> <span data-ttu-id="9380d-3265">Die <xref:System.String.ToLowerInvariant%2A> Methode wird verwendet, um die Elemente der parallelen Arrays durch die Groß-/Kleinschreibung einzelnen Word-Version zu füllen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3265">The <xref:System.String.ToLowerInvariant%2A> method is used to populate the elements of a parallel array with the case-insensitive version of each word.</span></span> <span data-ttu-id="9380d-3266">Die <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> Methode wird verwendet, um die Groß-/Kleinschreibung beachtet, entsprechend der Reihenfolge der Elemente im Array stellen Sie sicher, dass Elemente in der gleichen Reihenfolge unabhängig von der Sprache Kleinbuchstaben Array zu sortieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-3266">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> method is used to sort the case-sensitive array based on the order of elements in the lowercase array to ensure that elements appear in the same order regardless of language.</span></span>  
  
 [!code-csharp[System.String.ToLowerInvariant#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.tolowerinvariant/cs/tolowerinvariant.cs#1)]
 [!code-vb[System.String.ToLowerInvariant#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.tolowerinvariant/vb/tolowerinvariant.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToUpperInvariant" />
        <altmember cref="M:System.String.ToLower(System.Globalization.CultureInfo)" />
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3267">Konvertiert den Wert dieser Instanz in einen <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3267">Converts the value of this instance to a <see cref="T:System.String" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="string.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3268">Gibt diese Instanz von <see cref="T:System.String" /> zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3268">Returns this instance of <see cref="T:System.String" />; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3269">Die aktuelle Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3269">The current string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3270">Da diese Methode einfach mit die aktuelle Zeichenfolge unverändert zurückgibt, besteht keine Notwendigkeit, sie direkt aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3270">Because this method simply returns the current string unchanged, there is no need to call it directly.</span></span> <span data-ttu-id="9380d-3271">In der Regel wird es implizit in eine zur kombinierten Formatierung-Operation, wie im Beispiel gezeigt aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3271">It is usually called implicitly in a composite formatting operation, as the example shows.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3272">Das folgende Beispiel zeigt die <xref:System.String.ToString%2A> Methode. Beachten Sie, die im Beispiel nicht explizit aufrufen, wird die <xref:System.String.ToString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3272">The following example demonstrates the <xref:System.String.ToString%2A> method.Note that the example does not explicitly call the <xref:System.String.ToString%2A> method.</span></span> <span data-ttu-id="9380d-3273">Stattdessen die Methode wird aufgerufen, implizit von der [kombinierte Formatierung](~/docs/standard/base-types/composite-formatting.md) Feature.</span><span class="sxs-lookup"><span data-stu-id="9380d-3273">Instead, the method is called implicitly by the [composite formatting](~/docs/standard/base-types/composite-formatting.md) feature.</span></span>  
  
 [!code-cpp[string.tostring#1](~/samples/snippets/cpp/VS_Snippets_CLR/string.tostring/CPP/string.tostring.cpp#1)]
 [!code-csharp[string.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.tostring/CS/string.tostring.cs#1)]
 [!code-vb[string.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.tostring/VB/string.tostring.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.Clone" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="string.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="9380d-3274">(Reserviert) Ein Objekt, das kulturabhängige Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3274">(Reserved) An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3275">Gibt diese Instanz von <see cref="T:System.String" /> zurück. Es wird keine wirkliche Konvertierung durchgeführt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3275">Returns this instance of <see cref="T:System.String" />; no actual conversion is performed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3276">Die aktuelle Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3276">The current string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3277">`provider` ist reserviert und derzeit nicht bei diesem Vorgang beteiligt.</span><span class="sxs-lookup"><span data-stu-id="9380d-3277">`provider` is reserved, and does not currently participate in this operation.</span></span>  
  
 <span data-ttu-id="9380d-3278">Da diese Methode einfach mit die aktuelle Zeichenfolge unverändert zurückgibt, besteht keine Notwendigkeit, sie direkt aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3278">Because this method simply returns the current string unchanged, there is no need to call it directly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToUpper">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3279">Gibt eine in Großbuchstaben konvertierte Kopie dieser Zeichenfolge zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3279">Returns a copy of this string converted to uppercase.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public string ToUpper ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToUpper() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToUpper" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUpper () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToUpper();" />
      <MemberSignature Language="F#" Value="member this.ToUpper : unit -&gt; string" Usage="string.ToUpper " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3280">Gibt eine in Großbuchstaben konvertierte Kopie dieser Zeichenfolge zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3280">Returns a copy of this string converted to uppercase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3281">Die Entsprechung der aktuellen Zeichenfolge in Großbuchstaben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3281">The uppercase equivalent of the current string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3282">Diese Methode verwendet die Regeln der Groß-und Kleinschreibung der aktuellen Kultur, um jedes Zeichen in der aktuellen Instanz in dessen Entsprechung in Großbuchstaben zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-3282">This method uses the casing rules of the current culture to convert each character in the current instance to its uppercase equivalent.</span></span> <span data-ttu-id="9380d-3283">Wenn ein Zeichen keine Groß geschriebene Variante verfügbar sein, wird es unverändert in die zurückgegebene Zeichenfolge eingefügt.</span><span class="sxs-lookup"><span data-stu-id="9380d-3283">If a character does not have an uppercase equivalent, it is included unchanged in the returned string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-3284">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-3284">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-3285">Stattdessen wird eine neue Zeichenfolge, die in der alle Zeichen in der aktuellen Instanz in Großbuchstaben konvertiert wurden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-3285">Instead, it returns a new string in which all characters in the current instance are converted to uppercase.</span></span>  
  
 <span data-ttu-id="9380d-3286">Die <xref:System.String.ToUpper%2A> Methode wird häufig verwendet, um eine Zeichenfolge in Großbuchstaben zu konvertieren, sodass sie in einem Vergleich Groß-/Kleinschreibung verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="9380d-3286">The <xref:System.String.ToUpper%2A> method is often used to convert a string to uppercase so that it can be used in a case-insensitive comparison.</span></span> <span data-ttu-id="9380d-3287">Eine bessere Methode zum Ausführen von Groß-/Kleinschreibung Vergleich wird eine Methode zum Zeichenfolgenvergleich aufzurufen, die eine <xref:System.StringComparison> Parameter, dessen Wert Sie, um festlegen <xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType> einen Vergleich Kultur, Unterscheidung nach Groß-/Kleinschreibung.</span><span class="sxs-lookup"><span data-stu-id="9380d-3287">A better method to perform case-insensitive comparison is to call a string comparison method that has a <xref:System.StringComparison> parameter whose value you set to <xref:System.StringComparison.CurrentCultureIgnoreCase?displayProperty=nameWithType> for a culture-sensitive, case-insensitive comparison.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="9380d-3288">Sicherheitsüberlegungen</span><span class="sxs-lookup"><span data-stu-id="9380d-3288">Security Considerations</span></span>  
 <span data-ttu-id="9380d-3289">Der Schreibweise-Vorgang, der aus den Aufrufen resultiert die <xref:System.String.ToUpper> Methode berücksichtigt die Groß-/ Kleinschreibungskonventionen der aktuellen Kultur.</span><span class="sxs-lookup"><span data-stu-id="9380d-3289">The casing operation that results from calling the <xref:System.String.ToUpper> method takes the casing conventions of the current culture into account.</span></span> <span data-ttu-id="9380d-3290">Bei Bedarf die klein- oder Großbuchstabe Version eines Betriebssystems Bezeichners steht, z. B. einen Dateinamen ein, mit dem Namen Pipe oder einen Registrierungsschlüssel verwenden die <xref:System.String.ToLowerInvariant%2A> oder <xref:System.String.ToUpperInvariant%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3290">If you need the lowercase or uppercase version of an operating system identifier, such as a file name, named pipe, or registry key, use the <xref:System.String.ToLowerInvariant%2A> or <xref:System.String.ToUpperInvariant%2A> method.</span></span> <span data-ttu-id="9380d-3291">Dies erzeugt das gleiche Ergebnis in jeder Kultur (im Gegensatz zu den <xref:System.String.ToUpper> Methode) und effizienter ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-3291">This produces the same result in every culture (unlike the <xref:System.String.ToUpper> method) and performs more efficiently.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3292">Im folgenden Beispiel wird die <xref:System.String.ToUpper%2A> Methode, um eine Reihe von einem Zeichen von Zeichenfolgen zu konvertieren, die jedes Zeichen in die grundlegenden lateinischen, Lateinisch-1, Ergänzung und Latin Extended-A-Zeichensätze enthalten.</span><span class="sxs-lookup"><span data-stu-id="9380d-3292">The following example calls the <xref:System.String.ToUpper%2A> method to convert a series of one-character strings that contain each character in the Basic Latin, Latin-1 Supplement, and Latin Extended-A character sets.</span></span> <span data-ttu-id="9380d-3293">Anschließend wird jede Zeichenfolge, deren Großbuchstaben von seinem Kleinbuchstaben unterscheidet, angezeigt.</span><span class="sxs-lookup"><span data-stu-id="9380d-3293">It then displays each string whose uppercase character is different from its lowercase character.</span></span>  
  
 [!code-cpp[System.String.ToUpper#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.ToUpper/cpp/ToUpperEx.cpp#1)]
 [!code-csharp[System.String.ToUpper#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.ToUpper/cs/ToUpperEx.cs#1)]
 [!code-vb[System.String.ToUpper#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.ToUpper/vb/ToUpperEx.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-3294">
            <para>Wie unter [bewährte Methoden für Strings](~/docs/standard/base-types/best-practices-strings.md) verwenden, es wird empfohlen, dass Sie vermeiden, Aufrufmethoden Zeichenfolge Groß-/Kleinschreibung, die Standardwerte ersetzen, und rufen stattdessen die Methoden, die Parameter erfordern explizit angegeben. Um eine Zeichenfolge, die mit die Groß-/ Kleinschreibungskonventionen der aktuellen Kultur in Großbuchstaben zu konvertieren, rufen die <see cref="M:System.String.ToUpper(System.Globalization.CultureInfo)" /> methodenüberladung mit einem Wert von <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> für seine <paramref name="culture" /> Parameter.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3294">
              <para>As explained in [Best Practices for Using Strings](~/docs/standard/base-types/best-practices-strings.md), we recommend that you avoid calling string casing methods that substitute default values and instead call methods that require parameters to be explicitly specified. To convert a string to uppercase by using the casing conventions of the current culture, call the <see cref="M:System.String.ToUpper(System.Globalization.CultureInfo)" /> method overload with a value of <see cref="P:System.Globalization.CultureInfo.CurrentCulture" /> for its <paramref name="culture" /> parameter.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.String.ToLowerInvariant" />
        <altmember cref="M:System.String.ToUpperInvariant" />
      </Docs>
    </Member>
    <Member MemberName="ToUpper">
      <MemberSignature Language="C#" Value="public string ToUpper (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToUpper(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToUpper(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUpper (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToUpper(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.ToUpper : System.Globalization.CultureInfo -&gt; string" Usage="string.ToUpper culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="9380d-3295">Ein Objekt, das kulturspezifische Regeln zur Groß- und Kleinschreibung bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3295">An object that supplies culture-specific casing rules.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3296">Gibt eine in Großbuchstaben konvertierte Kopie dieser Zeichenfolge zurück, wobei die Regeln der Groß- und Kleinschreibung der angegebenen Kultur verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3296">Returns a copy of this string converted to uppercase, using the casing rules of the specified culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3297">Die Entsprechung der aktuellen Zeichenfolge in Großbuchstaben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3297">The uppercase equivalent of the current string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3298">Der Groß-/ Kleinschreibregeln der Kultur angegeben werden, indem die `culture` Parameter zu bestimmen, wie die Groß-/Kleinschreibung einer Zeichenfolge geändert wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3298">The casing rules of the culture specified by the `culture` parameter determine the way the case of a string is changed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-3299">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-3299">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-3300">Stattdessen wird eine neue Zeichenfolge, die in der alle Zeichen in der aktuellen Instanz in Großbuchstaben konvertiert wurden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-3300">Instead, it returns a new string in which all characters in the current instance are converted to uppercase.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="9380d-3301">Sicherheitsüberlegungen</span><span class="sxs-lookup"><span data-stu-id="9380d-3301">Security Considerations</span></span>  
 <span data-ttu-id="9380d-3302">Übergeben der <xref:System.String.ToUpper%28System.Globalization.CultureInfo%29> Methode eine <xref:System.Globalization.CultureInfo> Objekt außer <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>, der Vorgang zur Groß-und Kleinschreibung wird berücksichtigt kulturspezifischen Regeln.</span><span class="sxs-lookup"><span data-stu-id="9380d-3302">If you pass the <xref:System.String.ToUpper%28System.Globalization.CultureInfo%29> method a <xref:System.Globalization.CultureInfo> object other than <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>, the casing operation will take culture-specific rules into account.</span></span> <span data-ttu-id="9380d-3303">Bei Bedarf die klein- oder Großbuchstabe Version eines Betriebssystems Bezeichners steht, z. B. einen Dateinamen ein, mit dem Namen Pipe oder einen Registrierungsschlüssel verwenden die <xref:System.String.ToLowerInvariant%2A> oder <xref:System.String.ToUpperInvariant%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3303">If you need the lowercase or uppercase version of an operating system identifier, such as a file name, named pipe, or registry key, use the <xref:System.String.ToLowerInvariant%2A> or <xref:System.String.ToUpperInvariant%2A> method.</span></span> <span data-ttu-id="9380d-3304">Dies führt zum gleichen Ergebnis in jeder Kultur und effizienter ausgeführt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-3304">This produces the same result in every culture and performs more efficiently.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3305">Im folgenden Beispiel wird eine Zeichenfolge von Kleinbuchstaben in zwei Zeichenfolgen unter Verwendung der Kulturen Englisch-USA und Türkisch-Türkei Zeichen in Großschreibung konvertiert, und vergleicht dann die Zeichenfolgen in Großbuchstaben.</span><span class="sxs-lookup"><span data-stu-id="9380d-3305">The following example converts a string of lowercase characters to two strings of uppercase characters using the English-United States and Turkish-Turkey cultures, then compares the uppercase strings.</span></span> <span data-ttu-id="9380d-3306">Die Zeichenfolgen in Großbuchstaben sind identisch, außer dass bei jeder Instanz des Unicode-LATIN CAPITAL LETTER I in einer Zeichenfolge, die andere Zeichenfolge LATIN CAPITAL LETTER I mit Punkt oben enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-3306">The uppercase strings are identical except that for each occurrence of the Unicode LATIN CAPITAL LETTER I in one string, the other string contains LATIN CAPITAL LETTER I WITH DOT ABOVE.</span></span>  
  
 [!code-csharp[string.toupper1#1](~/samples/snippets/csharp/VS_Snippets_CLR/string.toupper1/CS/toupper.cs#1)]
 [!code-vb[string.toupper1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/string.toupper1/VB/toupper.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="9380d-3307">
            <paramref name="culture" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3307">
              <paramref name="culture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.String.ToLower" />
        <altmember cref="M:System.String.ToLowerInvariant" />
        <altmember cref="M:System.String.ToUpperInvariant" />
      </Docs>
    </Member>
    <Member MemberName="ToUpperInvariant">
      <MemberSignature Language="C#" Value="public string ToUpperInvariant ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToUpperInvariant() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.ToUpperInvariant" />
      <MemberSignature Language="VB.NET" Value="Public Function ToUpperInvariant () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToUpperInvariant();" />
      <MemberSignature Language="F#" Value="member this.ToUpperInvariant : unit -&gt; string" Usage="string.ToUpperInvariant " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3308">Gibt eine in Großbuchstaben konvertierte Kopie dieses <see cref="T:System.String" />-Objekts zurück, wobei die Regeln der Groß- und Kleinschreibung der invarianten Kultur verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3308">Returns a copy of this <see cref="T:System.String" /> object converted to uppercase using the casing rules of the invariant culture.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3309">Die Entsprechung der aktuellen Zeichenfolge in Großbuchstaben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3309">The uppercase equivalent of the current string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3310">Die invariante Kultur darstellt, eine Kultur, die kulturunabhängig ist.</span><span class="sxs-lookup"><span data-stu-id="9380d-3310">The invariant culture represents a culture that is culture-insensitive.</span></span> <span data-ttu-id="9380d-3311">Es ist verknüpft mit der englischen Sprache jedoch nicht mit einem bestimmten Land oder Region.</span><span class="sxs-lookup"><span data-stu-id="9380d-3311">It is associated with the English language but not with a specific country or region.</span></span> <span data-ttu-id="9380d-3312">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType>-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="9380d-3312">For more information, see the <xref:System.Globalization.CultureInfo.InvariantCulture%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="9380d-3313">Wenn Ihre Anwendung abhängt, auf eine Zeichenfolge, die Änderung in einer vorhersagbaren Weise, die von der aktuellen Kultur, verwenden nicht beeinträchtigt wird die Groß-/Kleinschreibung der <xref:System.String.ToUpperInvariant%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3313">If your application depends on the case of a string changing in a predictable way that is unaffected by the current culture, use the <xref:System.String.ToUpperInvariant%2A> method.</span></span> <span data-ttu-id="9380d-3314">Die <xref:System.String.ToUpperInvariant%2A> Methode entspricht dem `ToUpper(CultureInfo.InvariantCulture)`.</span><span class="sxs-lookup"><span data-stu-id="9380d-3314">The <xref:System.String.ToUpperInvariant%2A> method is equivalent to `ToUpper(CultureInfo.InvariantCulture)`.</span></span> <span data-ttu-id="9380d-3315">Die Methode wird empfohlen, wenn eine Auflistung von Zeichenfolgen, die in einer vorhersagbaren Reihenfolge in einem Steuerelement der Benutzeroberfläche angezeigt werden muss.</span><span class="sxs-lookup"><span data-stu-id="9380d-3315">The method is recommended when a collection of strings must appear in a predictable order in a user interface control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-3316">Diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-3316">This method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-3317">Stattdessen wird eine neue Zeichenfolge, die in der alle Zeichen in der aktuellen Instanz in Großbuchstaben konvertiert wurden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-3317">Instead, it returns a new string in which all characters in the current instance are converted to uppercase.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="9380d-3318">Sicherheitsüberlegungen</span><span class="sxs-lookup"><span data-stu-id="9380d-3318">Security Considerations</span></span>  
 <span data-ttu-id="9380d-3319">Bei Bedarf die klein- oder Großbuchstabe Version eines Betriebssystems Bezeichners steht, z. B. einen Dateinamen ein, mit dem Namen Pipe oder einen Registrierungsschlüssel verwenden die <xref:System.String.ToLowerInvariant%2A> oder <xref:System.String.ToUpperInvariant%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="9380d-3319">If you need the lowercase or uppercase version of an operating system identifier, such as a file name, named pipe, or registry key, use the <xref:System.String.ToLowerInvariant%2A> or <xref:System.String.ToUpperInvariant%2A> methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3320">Das folgende Beispiel definiert ein Zeichenfolgenarray, das ein einzelnes Wort in einer Reihe von Sprachen enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-3320">The following example defines a string array that contains a single word in a number of languages.</span></span> <span data-ttu-id="9380d-3321">Die <xref:System.String.ToUpperInvariant%2A> Methode wird verwendet, um die Elemente der parallelen Arrays durch die Groß-/Kleinschreibung einzelnen Word-Version zu füllen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3321">The <xref:System.String.ToUpperInvariant%2A> method is used to populate the elements of a parallel array with the case-insensitive version of each word.</span></span> <span data-ttu-id="9380d-3322">Die <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> Methode wird verwendet, um die Groß-/Kleinschreibung beachtet, entsprechend der Reihenfolge der Elemente im Array in Großbuchstaben, stellen Sie sicher, dass Elemente in der gleichen Reihenfolge unabhängig von der Sprache Array zu sortieren.</span><span class="sxs-lookup"><span data-stu-id="9380d-3322">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29?displayProperty=nameWithType> method is used to sort the case-sensitive array based on the order of elements in the uppercase array to ensure that elements appear in the same order regardless of language.</span></span>  
  
 [!code-csharp[System.String.ToUpperInvariant#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.string.toupperinvariant/cs/toupperinvariant.cs#1)]
 [!code-vb[System.String.ToUpperInvariant#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.string.toupperinvariant/vb/toupperinvariant.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.String.ToLowerInvariant" />
        <altmember cref="M:System.String.ToUpper" />
        <altmember cref="P:System.Globalization.CultureInfo.InvariantCulture" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Trim">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3323">Gibt eine neue Zeichenfolge zurück, in der alle führenden und nachgestellten Vorkommen eines Satzes von angegebenen Zeichen aus dem aktuellen <see cref="T:System.String" />-Objekt entfernt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3323">Returns a new string in which all leading and trailing occurrences of a set of specified characters from the current <see cref="T:System.String" /> object are removed.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public string Trim ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Trim() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Trim" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Trim();" />
      <MemberSignature Language="F#" Value="member this.Trim : unit -&gt; string" Usage="string.Trim " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="9380d-3324">Entfernt alle führenden und nachgestellten Leerraumzeichen aus dem aktuellen <see cref="T:System.String" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3324">Removes all leading and trailing white-space characters from the current <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3325">Die resultierende Zeichenfolge nach dem Entfernen alle Leerraumzeichen am Anfang und Ende der aktuellen Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3325">The string that remains after all white-space characters are removed from the start and end of the current string.</span>
          </span>
          <span data-ttu-id="9380d-3326">Wenn keine Zeichen in der aktuellen Instanz gekürzt werden können, gibt die Methode die aktuelle Instanz unverändert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3326">If no characters can be trimmed from the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3327">Die <xref:System.String.Trim%2A> Methode wird aus der aktuellen Zeichenfolge entfernt, alle führende und nachgestellte Leerraumzeichen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3327">The <xref:System.String.Trim%2A> method removes from the current string all leading and trailing white-space characters.</span></span> <span data-ttu-id="9380d-3328">Jede führenden und nachfolgenden Vorgang wird beendet, wenn eine nicht-Leerzeichen erkannt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3328">Each leading and trailing trim operation stops when a non-white-space character is encountered.</span></span> <span data-ttu-id="9380d-3329">Wenn die aktuelle Zeichenfolge "Abc Xyz" wird z. B. die <xref:System.String.Trim%2A> Methodenrückgabe "Xyz" Abc ".</span><span class="sxs-lookup"><span data-stu-id="9380d-3329">For example, if the current string is "   abc   xyz   ", the <xref:System.String.Trim%2A> method returns "abc   xyz".</span></span> <span data-ttu-id="9380d-3330">Verwenden Sie zum Entfernen von Leerzeichen zwischen Wörtern in einer Zeichenfolge einen [reguläre Ausdrücke von .NET Framework](~/docs/standard/base-types/regular-expressions.md).</span><span class="sxs-lookup"><span data-stu-id="9380d-3330">To remove white-space characters between words in a string, use a [.NET Framework Regular Expressions](~/docs/standard/base-types/regular-expressions.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-3331">Wenn die <xref:System.String.Trim%2A> -Methode entfernt alle Zeichen aus der aktuellen Instanz, die diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-3331">If the <xref:System.String.Trim%2A> method removes any characters from the current instance, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-3332">Stattdessen wird eine neue Zeichenfolge, die in der alle führenden und nachgestellten Leerraumzeichen finden Sie in der aktuellen Instanz entfernt werden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-3332">Instead, it returns a new string in which all leading and trailing white space characters found in the current instance are removed.</span></span>  
  
 <span data-ttu-id="9380d-3333">Wenn die aktuelle Zeichenfolge entspricht <xref:System.String.Empty> oder alle Zeichen in der aktuellen Instanz bestehen von Leerzeichen ab, der Methodenrückgabe <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="9380d-3333">If the current string equals <xref:System.String.Empty> or all the characters in the current instance consist of white-space characters, the method returns <xref:System.String.Empty>.</span></span>  
  
 <span data-ttu-id="9380d-3334">Leerzeichen werden durch den Unicode-Standard definiert.</span><span class="sxs-lookup"><span data-stu-id="9380d-3334">White-space characters are defined by the Unicode standard.</span></span> <span data-ttu-id="9380d-3335">Die <xref:System.String.Trim> -Methode entfernt alle führenden und nachgestellten Zeichen, die der Rückgabewert erzeugen `true` sie werden beim übergeben, um die <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="9380d-3335">The <xref:System.String.Trim> method removes any leading and trailing characters that produce a return value of `true` when they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3336">Im folgenden Beispiel wird die <xref:System.String.Trim?displayProperty=nameWithType> Methode, um zusätzliche Leerzeichen in Zeichenfolgen, die vom Benutzer eingegeben werden vor der Verkettung zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3336">The following example uses the <xref:System.String.Trim?displayProperty=nameWithType> method to remove any extra white space from strings entered by the user before concatenating them.</span></span>  
  
 [!code-cpp[System.String.Trim#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Trim/cpp/trim2.cpp#2)]
 [!code-csharp[System.String.Trim#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Trim/cs/Trim2.cs#2)]
 [!code-vb[System.String.Trim#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Trim/vb/Trim2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-3337">
            <para>Der [! Include[net_v35SP1_short](~/Includes/NET-v35sp1-Short-MD.MD)] und frühere Versionen behalten eine interne Liste von Leerzeichen, die diese Methode entfernt. Beginnend mit der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)], die Methode entfernt alle Leerzeichen-Unicode-Zeichen (d. h. Zeichen, erzeugen einen <see langword="true" /> Wert zurückgeben, wenn es sich bei der Übergabe an die <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> Methode). Aufgrund dieser Änderung der <see cref="M:System.String.Trim" /> -Methode in der [! Include[net_v35SP1_short](~/Includes/NET-v35sp1-Short-MD.MD)] und frühere Versionen werden zwei Zeichen, NULLBREITE (U + 200 b) und 0 (null) Breite geschütztes Leerzeichen (U + FEFF), entfernt, die die <see cref="M:System.String.Trim" /> -Methode in der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)] und höhere Versionen werden nicht entfernt. Darüber hinaus die <see cref="M:System.String.Trim" /> -Methode in der [! Include[net_v35SP1_short](~/Includes/NET-v35sp1-Short-MD.MD)] und frühere Versionen nicht abtrennt drei Unicode-Leerzeichen: MONGOLISCHE VOKALTRENNZEICHEN (U + 180E), SCHMALEN geschütztes Leerzeichen (U + 202F) und Mittel MATHEMATISCHE Leerzeichen (U + 205F).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3337">
              <para>The [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions maintain an internal list of white-space characters that this method trims. Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], the method trims all Unicode white-space characters (that is, characters that produce a <see langword="true" /> return value when they are passed to the <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> method). Because of this change, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions removes two characters, ZERO WIDTH SPACE (U+200B) and ZERO WIDTH NO-BREAK SPACE (U+FEFF), that the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]and later versions does not remove. In addition, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions does not trim three Unicode white-space characters: MONGOLIAN VOWEL SEPARATOR (U+180E), NARROW NO-BREAK SPACE (U+202F), and MEDIUM MATHEMATICAL SPACE (U+205F).</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.String.TrimEnd(System.Char[])" />
        <altmember cref="M:System.String.TrimStart(System.Char[])" />
        <altmember cref="M:System.Char.IsWhiteSpace(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public string Trim (char trimChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Trim(char trimChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Trim(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (trimChar As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Trim(char trimChar);" />
      <MemberSignature Language="F#" Value="member this.Trim : char -&gt; string" Usage="string.Trim trimChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="trimChar">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Trim">
      <MemberSignature Language="C#" Value="public string Trim (params char[] trimChars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string Trim(char[] trimChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.Trim(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Trim (ParamArray trimChars As Char()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ Trim(... cli::array &lt;char&gt; ^ trimChars);" />
      <MemberSignature Language="F#" Value="member this.Trim : char[] -&gt; string" Usage="string.Trim trimChars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChars" Type="System.Char[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trimChars">
          <span data-ttu-id="9380d-3338">Ein Array mit den zu entfernenden Unicode-Zeichen oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3338">An array of Unicode characters to remove, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3339">Entfernt alle führenden und nachgestellten Vorkommen der Zeichen im angegebenen Array aus dem aktuellen <see cref="T:System.String" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3339">Removes all leading and trailing occurrences of a set of characters specified in an array from the current <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3340">Die resultierende Zeichenfolge, nachdem alle im <paramref name="trimChars" />-Parameter übergebenen Zeichen am Anfang und Ende der aktuellen Zeichenfolge entfernt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3340">The string that remains after all occurrences of the characters in the <paramref name="trimChars" /> parameter are removed from the start and end of the current string.</span>
          </span>
          <span data-ttu-id="9380d-3341">Wenn <paramref name="trimChars" /><see langword="null" /> oder ein leeres Array ist, werden stattdessen Leerzeichen entfernt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3341">If <paramref name="trimChars" /> is <see langword="null" /> or an empty array, white-space characters are removed instead.</span>
          </span>
          <span data-ttu-id="9380d-3342">Wenn keine Zeichen in der aktuellen Instanz gekürzt werden können, gibt die Methode die aktuelle Instanz unverändert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3342">If no characters can be trimmed from the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3343">Die <xref:System.String.Trim%2A> Methode wird aus der aktuellen Zeichenfolge entfernt, alle führende und nachgestellte Zeichen in der `trimChars` Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-3343">The <xref:System.String.Trim%2A> method removes from the current string all leading and trailing characters that are in the `trimChars` parameter.</span></span> <span data-ttu-id="9380d-3344">Jede führende und nachfolgende trim-Vorgang wird beendet, wenn ein Zeichen, das nicht `trimChars` festgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3344">Each leading and trailing trim operation stops when a character that is not in `trimChars` is encountered.</span></span> <span data-ttu-id="9380d-3345">Wenn die aktuelle Zeichenfolge "123abc456xyz789" lautet z. B. und `trimChars` die Ziffern von "1" bis "9", enthält die <xref:System.String.Trim%2A> Methodenrückgabe "abc456xyz".</span><span class="sxs-lookup"><span data-stu-id="9380d-3345">For example, if the current string is "123abc456xyz789" and `trimChars` contains the digits from "1" through "9", the <xref:System.String.Trim%2A> method returns "abc456xyz".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-3346">Wenn die <xref:System.String.Trim%2A> -Methode entfernt alle Zeichen aus der aktuellen Instanz, die diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-3346">If the <xref:System.String.Trim%2A> method removes any characters from the current instance, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-3347">Stattdessen wird eine neue Zeichenfolge zurückgegeben, in dem alle führenden und nachfolgenden `trimChars` Zeichen, die in der aktuellen Instanz gefunden werden entfernt.</span><span class="sxs-lookup"><span data-stu-id="9380d-3347">Instead, it returns a new string in which all leading and trailing `trimChars` characters found in the current instance are removed.</span></span>  
  
 <span data-ttu-id="9380d-3348">Gleich die aktuelle Zeichenfolge <xref:System.String.Empty> oder alle Zeichen in der aktuellen Instanz von Zeichen in der `trimChars` array, der Methodenrückgabe <xref:System.String.Empty>.</span><span class="sxs-lookup"><span data-stu-id="9380d-3348">If the current string equals <xref:System.String.Empty> or all the characters in the current instance consist of characters in the `trimChars` array, the method returns <xref:System.String.Empty>.</span></span>  
  
 <span data-ttu-id="9380d-3349">Wenn `trimChars` ist `null` oder ein leeres Array, das diese Methode entfernt alle führenden oder nachgestellten Zeichen, die in der Methode zurückgeben zu `true` sie werden beim übergeben, um die <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> -Methode</span><span class="sxs-lookup"><span data-stu-id="9380d-3349">If `trimChars` is `null` or an empty array, this method removes any leading or trailing characters that result in the method returning `true` when they are passed to the <xref:System.Char.IsWhiteSpace%2A?displayProperty=nameWithType> method,</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3350">Im folgenden Beispiel wird die <xref:System.String.Trim%28System.Char%5B%5D%29?displayProperty=nameWithType> Methode, um Speicherplatz, Sternchen (\*) und Apostroph (')-Zeichen aus einer Zeichenfolge zu entfernen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3350">The following example uses the <xref:System.String.Trim%28System.Char%5B%5D%29?displayProperty=nameWithType> method to remove space, asterisk (\*), and apostrophe (') characters from a string.</span></span>  
  
 [!code-cpp[System.String.Trim#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.String.Trim/cpp/trim1.cpp#1)]
 [!code-csharp[System.String.Trim#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Trim/cs/Trim1.cs#1)]
 [!code-vb[System.String.Trim#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Trim/vb/Trim1.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-3351">
            <para>Der [! Include[net_v35SP1_short](~/Includes/NET-v35sp1-Short-MD.MD)] und frühere Versionen verwaltet eine interne Liste von Leerzeichen, die diese Methode entfernt, wenn <paramref name="trimChars" /> ist <see langword="null" /> oder ein leeres Array. Beginnend mit der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)], wenn <paramref name="trimChars" /> ist <see langword="null" /> oder ein leeres Array, der die Methode entfernt alle Leerzeichen-Unicode-Zeichen (d. h. Zeichen, erzeugen einen <see langword="true" /> Wert zurückgeben, wenn es sich bei der Übergabe an die <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> Methode). Aufgrund dieser Änderung der <see cref="M:System.String.Trim" /> -Methode in der [! Include[net_v35SP1_short](~/Includes/NET-v35sp1-Short-MD.MD)] und frühere Versionen werden zwei Zeichen, NULLBREITE (U + 200 b) und 0 (null) Breite geschütztes Leerzeichen (U + FEFF), entfernt, die die <see cref="M:System.String.Trim" /> -Methode in der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)] und höhere Versionen werden nicht entfernt. Darüber hinaus die <see cref="M:System.String.Trim" /> -Methode in der [! Include[net_v35SP1_short](~/Includes/NET-v35sp1-Short-MD.MD)] und frühere Versionen nicht abtrennt drei Unicode-Leerzeichen: MONGOLISCHE VOKALTRENNZEICHEN (U + 180E), SCHMALEN geschütztes Leerzeichen (U + 202F) und Mittel MATHEMATISCHE Leerzeichen (U + 205F).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3351">
              <para>The [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions maintains an internal list of white-space characters that this method trims if <paramref name="trimChars" /> is <see langword="null" /> or an empty array. Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], if <paramref name="trimChars" /> is <see langword="null" /> or an empty array, the method trims all Unicode white-space characters (that is, characters that produce a <see langword="true" /> return value when they are passed to the <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> method). Because of this change, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions removes two characters, ZERO WIDTH SPACE (U+200B) and ZERO WIDTH NO-BREAK SPACE (U+FEFF), that the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]and later versions does not remove. In addition, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions does not trim three Unicode white-space characters: MONGOLIAN VOWEL SEPARATOR (U+180E), NARROW NO-BREAK SPACE (U+202F), and MEDIUM MATHEMATICAL SPACE (U+205F).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.TrimEnd(System.Char[])" />
        <altmember cref="M:System.String.TrimStart(System.Char[])" />
        <altmember cref="M:System.Char.IsWhiteSpace(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public string TrimEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.TrimEnd" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimEnd () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimEnd();" />
      <MemberSignature Language="F#" Value="member this.TrimEnd : unit -&gt; string" Usage="string.TrimEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public string TrimEnd (char trimChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimEnd(char trimChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.TrimEnd(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimEnd (trimChar As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimEnd(char trimChar);" />
      <MemberSignature Language="F#" Value="member this.TrimEnd : char -&gt; string" Usage="string.TrimEnd trimChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="trimChar">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimEnd">
      <MemberSignature Language="C#" Value="public string TrimEnd (params char[] trimChars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimEnd(char[] trimChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.TrimEnd(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimEnd (ParamArray trimChars As Char()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimEnd(... cli::array &lt;char&gt; ^ trimChars);" />
      <MemberSignature Language="F#" Value="member this.TrimEnd : char[] -&gt; string" Usage="string.TrimEnd trimChars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChars" Type="System.Char[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trimChars">
          <span data-ttu-id="9380d-3352">Ein Array mit den zu entfernenden Unicode-Zeichen oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3352">An array of Unicode characters to remove, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3353">Entfernt alle nachgestellten Vorkommen der Zeichen im angegebenen Array aus dem aktuellen <see cref="T:System.String" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3353">Removes all trailing occurrences of a set of characters specified in an array from the current <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3354">Die resultierende Zeichenfolge, nachdem alle im <paramref name="trimChars" />-Parameter übergebenen Zeichen am Ende der aktuellen Zeichenfolge entfernt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3354">The string that remains after all occurrences of the characters in the <paramref name="trimChars" /> parameter are removed from the end of the current string.</span>
          </span>
          <span data-ttu-id="9380d-3355">Wenn <paramref name="trimChars" /><see langword="null" /> oder ein leeres Array ist, werden stattdessen Leerzeichen entfernt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3355">If <paramref name="trimChars" /> is <see langword="null" /> or an empty array, Unicode white-space characters are removed instead.</span>
          </span>
          <span data-ttu-id="9380d-3356">Wenn keine Zeichen in der aktuellen Instanz gekürzt werden können, gibt die Methode die aktuelle Instanz unverändert zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3356">If no characters can be trimmed from the current instance, the method returns the current instance unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3357">Die <xref:System.String.TrimEnd%2A> Methode wird aus der aktuellen Zeichenfolge entfernt, alle nachgestellte Zeichen in der `trimChars` Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-3357">The <xref:System.String.TrimEnd%2A> method removes from the current string all trailing characters that are in the `trimChars` parameter.</span></span> <span data-ttu-id="9380d-3358">Der Vorgang wird beendet, wenn das erste Zeichen, die nicht in `trimChars` am Ende der Zeichenfolge auftritt.</span><span class="sxs-lookup"><span data-stu-id="9380d-3358">The trim operation stops when the first character that is not in `trimChars` is encountered at the end of the string.</span></span> <span data-ttu-id="9380d-3359">Wenn die aktuelle Zeichenfolge "123abc456xyz789" lautet z. B. und `trimChars` die Ziffern von "1" bis "9", enthält die <xref:System.String.TrimEnd%2A> Methodenrückgabe "123abc456xyz zurück".</span><span class="sxs-lookup"><span data-stu-id="9380d-3359">For example, if the current string is "123abc456xyz789" and `trimChars` contains the digits from "1" through "9", the <xref:System.String.TrimEnd%2A> method returns "123abc456xyz".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-3360">Wenn die <xref:System.String.TrimEnd%2A> -Methode entfernt alle Zeichen aus der aktuellen Instanz, die diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-3360">If the <xref:System.String.TrimEnd%2A> method removes any characters from the current instance, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-3361">Stattdessen wird eine neue Zeichenfolge zurückgegeben, in der alle Zeichen finden Sie unter `trimChars` aus der aktuellen Zeichenfolge entfernt werden.</span><span class="sxs-lookup"><span data-stu-id="9380d-3361">Instead, it returns a new string in which all trailing characters found in `trimChars` are removed from the current string.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3362">Das folgende Beispiel zeigt Informationen zur Verwendung der <xref:System.String.TrimEnd%28System.Char%5B%5D%29> Methode zum Kürzen von Leerzeichen oder Satzzeichen vom Ende einer Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="9380d-3362">The following example demonstrates how you can use the <xref:System.String.TrimEnd%28System.Char%5B%5D%29> method to trim white space or punctuation marks from the end of a string.</span></span>  
  
 [!code-csharp[System.String.TrimEnd#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.TrimEnd/cs/sample2.cs#2)]
 [!code-vb[System.String.TrimEnd#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.TrimEnd/vb/Sample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-3363">
            <para>Der [! Include[net_v35SP1_short](~/Includes/NET-v35sp1-Short-MD.MD)] und frühere Versionen verwaltet eine interne Liste von Leerzeichen, die diese Methode entfernt, wenn <paramref name="trimChars" /> ist <see langword="null" /> oder ein leeres Array. Beginnend mit der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)], wenn <paramref name="trimChars" /> ist <see langword="null" /> oder ein leeres Array, der die Methode entfernt alle Leerzeichen-Unicode-Zeichen (d. h. Zeichen, erzeugen einen <see langword="true" /> Wert zurückgeben, wenn es sich bei der Übergabe an die <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> Methode). Aufgrund dieser Änderung der <see cref="M:System.String.Trim" /> -Methode in der [! Include[net_v35SP1_short](~/Includes/NET-v35sp1-Short-MD.MD)] und frühere Versionen werden zwei Zeichen, NULLBREITE (U + 200 b) und 0 (null) Breite geschütztes Leerzeichen (U + FEFF), entfernt, die die <see cref="M:System.String.Trim" /> -Methode in der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)] und höhere Versionen werden nicht entfernt. Darüber hinaus die <see cref="M:System.String.Trim" /> -Methode in der [! Include[net_v35SP1_short](~/Includes/NET-v35sp1-Short-MD.MD)] und frühere Versionen nicht abtrennt drei Unicode-Leerzeichen: MONGOLISCHE VOKALTRENNZEICHEN (U + 180E), SCHMALEN geschütztes Leerzeichen (U + 202F) und Mittel MATHEMATISCHE Leerzeichen (U + 205F).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3363">
              <para>The [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions maintains an internal list of white-space characters that this method trims if <paramref name="trimChars" /> is <see langword="null" /> or an empty array. Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], if <paramref name="trimChars" /> is <see langword="null" /> or an empty array, the method trims all Unicode white-space characters (that is, characters that produce a <see langword="true" /> return value when they are passed to the <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> method). Because of this change, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions removes two characters, ZERO WIDTH SPACE (U+200B) and ZERO WIDTH NO-BREAK SPACE (U+FEFF), that the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and later versions does not remove. In addition, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions does not trim three Unicode white-space characters: MONGOLIAN VOWEL SEPARATOR (U+180E), NARROW NO-BREAK SPACE (U+202F), and MEDIUM MATHEMATICAL SPACE (U+205F).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
        <altmember cref="M:System.String.TrimStart(System.Char[])" />
        <altmember cref="M:System.Char.IsWhiteSpace(System.Char)" />
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public string TrimStart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimStart() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.TrimStart" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimStart () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimStart();" />
      <MemberSignature Language="F#" Value="member this.TrimStart : unit -&gt; string" Usage="string.TrimStart " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public string TrimStart (char trimChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimStart(char trimChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.TrimStart(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimStart (trimChar As Char) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimStart(char trimChar);" />
      <MemberSignature Language="F#" Value="member this.TrimStart : char -&gt; string" Usage="string.TrimStart trimChar" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="trimChar">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimStart">
      <MemberSignature Language="C#" Value="public string TrimStart (params char[] trimChars);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string TrimStart(char[] trimChars) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.String.TrimStart(System.Char[])" />
      <MemberSignature Language="VB.NET" Value="Public Function TrimStart (ParamArray trimChars As Char()) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ TrimStart(... cli::array &lt;char&gt; ^ trimChars);" />
      <MemberSignature Language="F#" Value="member this.TrimStart : char[] -&gt; string" Usage="string.TrimStart trimChars" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="trimChars" Type="System.Char[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="trimChars">
          <span data-ttu-id="9380d-3364">Ein Array mit den zu entfernenden Unicode-Zeichen oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3364">An array of Unicode characters to remove, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="9380d-3365">Entfernt alle nachgestellten Vorkommen der Zeichen im angegebenen Array aus dem aktuellen <see cref="T:System.String" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3365">Removes all leading occurrences of a set of characters specified in an array from the current <see cref="T:System.String" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="9380d-3366">Die resultierende Zeichenfolge, nachdem alle im <paramref name="trimChars" />-Parameter übergebenen Zeichen am Anfang der aktuellen Zeichenfolge entfernt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3366">The string that remains after all occurrences of characters in the <paramref name="trimChars" /> parameter are removed from the start of the current string.</span>
          </span>
          <span data-ttu-id="9380d-3367">Wenn <paramref name="trimChars" /><see langword="null" /> oder ein leeres Array ist, werden stattdessen Leerzeichen entfernt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3367">If <paramref name="trimChars" /> is <see langword="null" /> or an empty array, white-space characters are removed instead.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9380d-3368">Die <xref:System.String.TrimStart%2A> Methode wird aus der aktuellen Zeichenfolge entfernt, alle führende Zeichen in der `trimChars` Parameter.</span><span class="sxs-lookup"><span data-stu-id="9380d-3368">The <xref:System.String.TrimStart%2A> method removes from the current string all leading characters that are in the `trimChars` parameter.</span></span> <span data-ttu-id="9380d-3369">Der Vorgang wird beendet, wenn eine Zeichen-, der nicht `trimChars` festgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="9380d-3369">The trim operation stops when a character that is not in `trimChars` is encountered.</span></span> <span data-ttu-id="9380d-3370">Wenn die aktuelle Zeichenfolge "123abc456xyz789" lautet z. B. und `trimChars` die Ziffern von "1" bis "9", enthält die <xref:System.String.TrimStart%2A> Methodenrückgabe "abc456xyz789".</span><span class="sxs-lookup"><span data-stu-id="9380d-3370">For example, if the current string is "123abc456xyz789" and `trimChars` contains the digits from "1" through "9", the <xref:System.String.TrimStart%2A> method returns "abc456xyz789".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="9380d-3371">Wenn die <xref:System.String.TrimStart%2A> -Methode entfernt alle Zeichen aus der aktuellen Instanz, die diese Methode ändert nicht den Wert der aktuellen Instanz.</span><span class="sxs-lookup"><span data-stu-id="9380d-3371">If the <xref:System.String.TrimStart%2A> method removes any characters from the current instance, this method does not modify the value of the current instance.</span></span> <span data-ttu-id="9380d-3372">Stattdessen wird eine neue Zeichenfolge, die in der alle führenden Leerzeichen in der aktuellen Instanz gefunden entfernt wurden zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="9380d-3372">Instead, it returns a new string in which all leading white space characters found in the current instance are removed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9380d-3373">Im folgenden Beispiel wird die <xref:System.String.TrimStart%2A> Methode, um das Kürzen von Leerzeichen und die kommentierungszeichen von Quellcodezeilen.</span><span class="sxs-lookup"><span data-stu-id="9380d-3373">The following example uses the <xref:System.String.TrimStart%2A> method to trim white space and comment characters from lines of source code.</span></span> <span data-ttu-id="9380d-3374">Die `StripComments` Methode umschließt einen Aufruf von <xref:System.String.TrimStart%2A> und übergibt ein Array von Zeichen, die ein Leerzeichen und die Kommentarzeichen, die ein Apostroph (') ist in Visual Basic und Schrägstrich (/) in C# -Code enthält.</span><span class="sxs-lookup"><span data-stu-id="9380d-3374">The `StripComments` method wraps a call to <xref:System.String.TrimStart%2A> and passes it a character array that contains a space and the comment character, which is an apostrophe ( ' ) in Visual Basic and a slash ( / ) in C#.</span></span> <span data-ttu-id="9380d-3375">Die <xref:System.String.TrimStart%2A> Methode auch aufgerufen, um die führendes Leerzeichen zu entfernen, bei der Auswertung, ob eine Zeichenfolge einen Kommentar.</span><span class="sxs-lookup"><span data-stu-id="9380d-3375">The <xref:System.String.TrimStart%2A> method is also called to remove leading white space when evaluating whether a string is a comment.</span></span>  
  
 [!code-csharp[System.String.TrimStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.TrimStart/cs/sample.cs#1)]
 [!code-vb[System.String.TrimStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.TrimStart/vb/sample.vb#1)]  
  
 <span data-ttu-id="9380d-3376">Im folgenden Beispiel wird ein Aufruf der `StripComments`-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="9380d-3376">The following example then illustrates a call to the `StripComments` method.</span></span>  
  
 [!code-csharp[System.String.TrimStart#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.TrimStart/cs/sample.cs#2)]
 [!code-vb[System.String.TrimStart#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.TrimStart/vb/sample.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="9380d-3377">
            <para>Der [! Include[net_v35SP1_short](~/Includes/NET-v35sp1-Short-MD.MD)] und frühere Versionen verwaltet eine interne Liste von Leerzeichen, die diese Methode entfernt, wenn <paramref name="trimChars" /> ist <see langword="null" /> oder ein leeres Array. Beginnend mit der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)], wenn <paramref name="trimChars" /> ist <see langword="null" /> oder ein leeres Array, der die Methode entfernt alle Leerzeichen-Unicode-Zeichen (d. h. Zeichen, erzeugen einen <see langword="true" /> Wert zurückgeben, wenn es sich bei der Übergabe an die <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> Methode). Aufgrund dieser Änderung der <see cref="M:System.String.Trim" /> -Methode in der [! Include[net_v35SP1_short](~/Includes/NET-v35sp1-Short-MD.MD)] und frühere Versionen werden zwei Zeichen, NULLBREITE (U + 200 b) und 0 (null) Breite geschütztes Leerzeichen (U + FEFF), entfernt, die die <see cref="M:System.String.Trim" /> -Methode in der [! Include[net_v40_short](~/Includes/NET-V40-Short-MD.MD)] und höhere Versionen werden nicht entfernt. Darüber hinaus die <see cref="M:System.String.Trim" /> -Methode in der [! Include[net_v35SP1_short](~/Includes/NET-v35sp1-Short-MD.MD)] und frühere Versionen nicht abtrennt drei Unicode-Leerzeichen: MONGOLISCHE VOKALTRENNZEICHEN (U + 180E), SCHMALEN geschütztes Leerzeichen (U + 202F) und Mittel MATHEMATISCHE Leerzeichen (U + 205F).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="9380d-3377">
              <para>The [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions maintains an internal list of white-space characters that this method trims if <paramref name="trimChars" /> is <see langword="null" /> or an empty array. Starting with the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], if <paramref name="trimChars" /> is <see langword="null" /> or an empty array, the method trims all Unicode white-space characters (that is, characters that produce a <see langword="true" /> return value when they are passed to the <see cref="M:System.Char.IsWhiteSpace(System.Char)" /> method). Because of this change, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions removes two characters, ZERO WIDTH SPACE (U+200B) and ZERO WIDTH NO-BREAK SPACE (U+FEFF), that the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] and later versions does not remove. In addition, the <see cref="M:System.String.Trim" /> method in the [!INCLUDE[net_v35SP1_short](~/includes/net-v35sp1-short-md.md)] and earlier versions does not trim three Unicode white-space characters: MONGOLIAN VOWEL SEPARATOR (U+180E), NARROW NO-BREAK SPACE (U+202F), and MEDIUM MATHEMATICAL SPACE (U+205F).</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Char" />
        <altmember cref="M:System.String.Trim(System.Char[])" />
        <altmember cref="M:System.String.TrimEnd(System.Char[])" />
        <altmember cref="M:System.Char.IsWhiteSpace(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>