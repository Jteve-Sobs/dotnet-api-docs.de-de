<Type Name="IComparable&lt;T&gt;" FullName="System.IComparable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a5d49fe2c8452766a981fd02a0241cd10e4f63bf" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73399957" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IComparable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="ad0bc-101">Der Typ der zu vergleichenden Objekte.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-101">The type of object to compare.</span></span></typeparam>
    <summary><span data-ttu-id="ad0bc-102">Definiert eine allgemeine Vergleichsmethode, die von einem Werttyp oder einer Klasse für die Erstellung einer typspezifischen Vergleichsmethode zum Ordnen oder Sortieren von Instanzen implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-102">Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0bc-103">Diese Schnittstelle wird von Typen implementiert, deren Werte sortiert oder sortiert werden können, und bietet eine stark typisierte Vergleichsmethode zum Sortieren von Membern eines generischen Auflistungs Objekts.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-103">This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="ad0bc-104">Beispielsweise kann eine Zahl größer als eine zweite Zahl sein, und eine Zeichenfolge kann in alphabetischer Reihenfolge vor einer anderen Zeichenfolge erscheinen.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-104">For example, one number can be larger than a second number, and one string can appear in alphabetical order before another.</span></span> <span data-ttu-id="ad0bc-105">Es erfordert, dass implementierende Typen eine einzige Methode definieren, <xref:System.IComparable%601.CompareTo%28%600%29>, die angibt, ob die Position der aktuellen Instanz in der Sortierreihenfolge vor, nach oder mit einem zweiten Objekt desselben Typs ist.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-105">It requires that implementing types define a single method, <xref:System.IComparable%601.CompareTo%28%600%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="ad0bc-106">In der Regel wird die-Methode nicht direkt aus dem Entwickler Code aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-106">Typically, the method is not called directly from developer code.</span></span> <span data-ttu-id="ad0bc-107">Stattdessen wird Sie automatisch durch Methoden wie <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> und <xref:System.Collections.Generic.SortedList%602.Add%2A>aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-107">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="ad0bc-108">Typen, die eine <xref:System.IComparable%601> Implementierung bereitstellen, implementieren in der Regel auch die <xref:System.IEquatable%601>-Schnittstelle.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-108">Typically, types that provide an <xref:System.IComparable%601> implementation also implement the <xref:System.IEquatable%601> interface.</span></span> <span data-ttu-id="ad0bc-109">Die <xref:System.IEquatable%601>-Schnittstelle definiert die <xref:System.IEquatable%601.Equals%2A>-Methode, die die Gleichheit von Instanzen des implementierenden Typs bestimmt.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-109">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="ad0bc-110">Die Implementierung der <xref:System.IComparable%601.CompareTo%28%600%29>-Methode muss eine <xref:System.Int32> zurückgeben, die einen von drei Werten hat, wie in der folgenden Tabelle dargestellt.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-110">The implementation of the <xref:System.IComparable%601.CompareTo%28%600%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="ad0bc-111">Wert</span><span class="sxs-lookup"><span data-stu-id="ad0bc-111">Value</span></span>|<span data-ttu-id="ad0bc-112">Bedeutung</span><span class="sxs-lookup"><span data-stu-id="ad0bc-112">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="ad0bc-113">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="ad0bc-113">Less than zero</span></span>|<span data-ttu-id="ad0bc-114">Dieses Objekt befindet sich vor dem Objekt, das durch die <xref:System.IComparable%601.CompareTo%2A>-Methode in der Sortierreihenfolge angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-114">This object precedes the object specified by the <xref:System.IComparable%601.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="ad0bc-115">Zero</span><span class="sxs-lookup"><span data-stu-id="ad0bc-115">Zero</span></span>|<span data-ttu-id="ad0bc-116">Diese aktuelle Instanz tritt in der Sortierreihenfolge an der gleichen Position wie das Objekt auf, das durch das <xref:System.IComparable%601.CompareTo%2A>-Methoden Argument angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-116">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument.</span></span>|  
|<span data-ttu-id="ad0bc-117">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="ad0bc-117">Greater than zero</span></span>|<span data-ttu-id="ad0bc-118">Diese aktuelle Instanz folgt dem Objekt, das durch das <xref:System.IComparable%601.CompareTo%2A>-Methoden Argument in der Sortierreihenfolge angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-118">This current instance follows the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument in the sort order.</span></span>|  
  
 <span data-ttu-id="ad0bc-119">Alle numerischen Typen (z. b. <xref:System.Int32> und <xref:System.Double>) implementieren <xref:System.IComparable%601>, wie <xref:System.String>, <xref:System.Char>und <xref:System.DateTime>.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-119">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable%601>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="ad0bc-120">Benutzerdefinierte Typen sollten auch Ihre eigene Implementierung von <xref:System.IComparable%601> bereitstellen, um das Sortieren oder Sortieren von Objektinstanzen zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-120">Custom types should also provide their own implementation of <xref:System.IComparable%601> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0bc-121">Das folgende Beispiel veranschaulicht die Implementierung von <xref:System.IComparable%601> für ein einfaches `Temperature`-Objekt.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-121">The following example illustrates the implementation of <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="ad0bc-122">Im Beispiel wird eine <xref:System.Collections.Generic.SortedList%602> Auflistung von Zeichen folgen mit `Temperature` Objekt Schlüsseln erstellt und der Liste einige Paare von Temperatur und Zeichen folgen außerhalb der Reihenfolge hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-122">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="ad0bc-123">Beim Abrufen der <xref:System.Collections.Generic.SortedList%602.Add%2A>-Methode verwendet die <xref:System.Collections.Generic.SortedList%602> Auflistung die <xref:System.IComparable%601>-Implementierung, um die Listeneinträge zu sortieren, die dann in der Reihenfolge der zunehmenden Temperatur angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-123">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para><span data-ttu-id="ad0bc-124">Ersetzen Sie den Typparameter der <see cref="T:System.IComparable`1" />-Schnittstelle durch den Typ, der diese Schnittstelle implementiert.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-124">Replace the type parameter of the <see cref="T:System.IComparable`1" /> interface with the type that is implementing this interface.</span></span>  
  
<span data-ttu-id="ad0bc-125">Wenn Sie <see cref="T:System.IComparable`1" />implementieren, sollten Sie die Operatoren "<see langword="op_GreaterThan" />", "<see langword="op_GreaterThanOrEqual" />", "<see langword="op_LessThan" />" und "<see langword="op_LessThanOrEqual" />" überladen, um mit <see cref="M:System.IComparable`1.CompareTo(`0)" />konsistente Werte zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-125">If you implement <see cref="T:System.IComparable`1" />, you should overload the <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" />, and <see langword="op_LessThanOrEqual" /> operators to return values that are consistent with <see cref="M:System.IComparable`1.CompareTo(`0)" />.</span></span> <span data-ttu-id="ad0bc-126">Außerdem sollten Sie <see cref="T:System.IEquatable`1" />implementieren.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-126">In addition, you should also implement <see cref="T:System.IEquatable`1" />.</span></span> <span data-ttu-id="ad0bc-127">Ausführliche Informationen finden Sie im <see cref="T:System.IEquatable`1" /> Artikel.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-127">See the <see cref="T:System.IEquatable`1" /> article for complete information.</span></span></para></block>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable`1.CompareTo(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : 'T -&gt; int" Usage="iComparable.CompareTo other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(T other);" FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="ad0bc-128">Ein Objekt, das mit dieser Instanz verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-128">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="ad0bc-129">Vergleicht die aktuelle Instanz mit einem anderen Objekt vom selben Typ und gibt eine ganze Zahl zurück, die angibt, ob die aktuelle Instanz in der Sortierreihenfolge vor oder nach dem anderen Objekt oder an derselben Position auftritt.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-129">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="ad0bc-130">Ein Wert, der die relative Reihenfolge der verglichenen Objekte angibt.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-130">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="ad0bc-131">Der Rückgabewert hat folgende Bedeutung:</span><span class="sxs-lookup"><span data-stu-id="ad0bc-131">The return value has these meanings:</span></span> 
 <list type="table"><listheader><term> <span data-ttu-id="ad0bc-132">Wert</span><span class="sxs-lookup"><span data-stu-id="ad0bc-132">Value</span></span> 
 </term><description> <span data-ttu-id="ad0bc-133">Bedeutung</span><span class="sxs-lookup"><span data-stu-id="ad0bc-133">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ad0bc-134">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="ad0bc-134">Less than zero</span></span> 
 </term><description> <span data-ttu-id="ad0bc-135">Diese Instanz befindet sich in der Sortierreihenfolge vor <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-135">This instance precedes <paramref name="other" /> in the sort order.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ad0bc-136">Zero</span><span class="sxs-lookup"><span data-stu-id="ad0bc-136">Zero</span></span> 
 </term><description> <span data-ttu-id="ad0bc-137">Diese Instanz tritt in der Sortierreihenfolge an der gleichen Position wie <paramref name="other" /> auf.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-137">This instance occurs in the same position in the sort order as <paramref name="other" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ad0bc-138">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="ad0bc-138">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="ad0bc-139">Diese Instanz folgt in der Sortierreihenfolge auf <paramref name="other" />.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-139">This instance follows <paramref name="other" /> in the sort order.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ad0bc-140"><xref:System.IComparable%601.CompareTo%2A> bietet eine stark typisierte Vergleichsmethode zum Anordnen von Membern eines generischen Auflistungs Objekts.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-140"><xref:System.IComparable%601.CompareTo%2A> provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="ad0bc-141">Daher wird Sie in der Regel nicht direkt aus dem Entwickler Code aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-141">Because of this, it is usually not called directly from developer code.</span></span> <span data-ttu-id="ad0bc-142">Stattdessen wird Sie automatisch durch Methoden wie <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> und <xref:System.Collections.Generic.SortedList%602.Add%2A>aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-142">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="ad0bc-143">Diese Methode ist nur eine Definition und muss von einer bestimmten Klasse oder einem Werttyp implementiert werden, damit Sie wirksam werden.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-143">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="ad0bc-144">Die Bedeutung der im Abschnitt "Rückgabewerte" angegebenen Vergleiche ("vor", "wird an derselben Position wie" und "folgt" angezeigt) hängt von der jeweiligen Implementierung ab.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-144">The meaning of the comparisons specified in the Return Values section ("precedes", "occurs in the same position as", and "follows) depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="ad0bc-145">Definitionsgemäß vergleichen alle Objekte größer als `null`, und zwei NULL-Verweise vergleichen einander.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-145">By definition, any object compares greater than `null`, and two null references compare equal to each other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ad0bc-146">Im folgenden Codebeispiel wird die Implementierung von <xref:System.IComparable%601> für ein einfaches `Temperature`-Objekt veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-146">The following code example illustrates the implementation of <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="ad0bc-147">Im Beispiel wird eine <xref:System.Collections.Generic.SortedList%602> Auflistung von Zeichen folgen mit `Temperature` Objekt Schlüsseln erstellt und der Liste einige Paare von Temperatur und Zeichen folgen außerhalb der Reihenfolge hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-147">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="ad0bc-148">Beim Abrufen der <xref:System.Collections.Generic.SortedList%602.Add%2A>-Methode verwendet die <xref:System.Collections.Generic.SortedList%602> Auflistung die <xref:System.IComparable%601>-Implementierung, um die Listeneinträge zu sortieren, die dann in der Reihenfolge der zunehmenden Temperatur angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-148">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="ad0bc-149">Für die Objekte A, B und C muss Folgendes zutreffen:</span><span class="sxs-lookup"><span data-stu-id="ad0bc-149">For objects A, B, and C, the following must be true:</span></span> 
 <span data-ttu-id="ad0bc-150"><c>A. CompareTo (a)</c> muss NULL zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-150"><c>A.CompareTo(A)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="ad0bc-151">Wenn <c>a. CompareTo (B) 0 (null)</c> zurückgibt, muss <c>B. CompareTo (a) 0 (null)</c> zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-151">If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="ad0bc-152">Wenn <c>a. CompareTo (B) 0 (null)</c> zurückgibt und <c>B. CompareTo (c) 0 (</c> null) zurückgibt, muss <c>A. CompareTo (c) 0 (null)</c> zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-152">If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> is required to return zero.</span></span>  
  
<span data-ttu-id="ad0bc-153">Wenn <c>eine. CompareTo (B)</c> einen anderen Wert als 0 (null) zurückgibt, wird <c>B. CompareTo (a)</c> benötigt, um einen Wert des umgekehrten Zeichens zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-153">If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> is required to return a value of the opposite sign.</span></span>  
  
<span data-ttu-id="ad0bc-154">Wenn <c>eine. CompareTo (B)</c> einen Wert zurückgibt <paramref name="x" /> der ungleich 0 (null) ist, und <c>B. CompareTo (c)</c> einen Wert <paramref name="y" /> desselben Zeichens <paramref name="x" />zurückgibt, ist <c>a. CompareTo (c)</c> erforderlich, um einen Wert desselben Zeichens wie <paramref name="x" /> und @no__t _7_ .<paramref name="y" /></span><span class="sxs-lookup"><span data-stu-id="ad0bc-154">If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> that is not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> is required to return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="ad0bc-155">Verwenden Sie die <see cref="M:System.IComparable`1.CompareTo(`0)" />-Methode, um die Reihenfolge der Instanzen einer Klasse zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="ad0bc-155">Use the <see cref="M:System.IComparable`1.CompareTo(`0)" /> method to determine the ordering of instances of a class.</span></span></para></block>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
  </Members>
</Type>
