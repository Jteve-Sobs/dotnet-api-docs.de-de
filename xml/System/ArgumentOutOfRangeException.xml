<Type Name="ArgumentOutOfRangeException" FullName="System.ArgumentOutOfRangeException">
  <Metadata><Meta Name="ms.openlocfilehash" Value="91780250edf28d4efe95c8edcbe5c2a7b92532d6" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75043857" /></Metadata><TypeSignature Language="C#" Value="public class ArgumentOutOfRangeException : ArgumentException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ArgumentOutOfRangeException extends System.ArgumentException implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.ArgumentOutOfRangeException" />
  <TypeSignature Language="VB.NET" Value="Public Class ArgumentOutOfRangeException&#xA;Inherits ArgumentException" />
  <TypeSignature Language="C++ CLI" Value="public ref class ArgumentOutOfRangeException : ArgumentException" />
  <TypeSignature Language="F#" Value="type ArgumentOutOfRangeException = class&#xA;    inherit ArgumentException&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ArgumentException</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Die Ausnahme, die ausgelöst wird, wenn der Wert eines Arguments außerhalb des zulässigen Bereichs von Werten liegt, der von der aufgerufenen Methode definiert wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks

Eine <xref:System.ArgumentOutOfRangeException> Ausnahme wird ausgelöst, wenn eine Methode aufgerufen wird und mindestens eines der an die Methode über gebenden Argumente nicht `null` ist und einen ungültigen Wert enthält, der kein Member der Werte ist, die für das Argument erwartet werden. Die <xref:System.ArgumentException.ParamName%2A>-Eigenschaft identifiziert das ungültige Argument, und die <xref:System.ArgumentOutOfRangeException.ActualValue%2A>-Eigenschaft identifiziert den ungültigen Wert, wenn ein Wert vorhanden ist.  
  
In der Regel wird ein <xref:System.ArgumentOutOfRangeException> Ergebnisse aus dem Entwickler Fehler ausgegeben. Anstatt die Ausnahme in einem `try`/`catch`-Block zu behandeln, sollten Sie die Ursache der Ausnahme vermeiden oder, wenn das-Argument von einem Methoden Aufrufwert oder vom Benutzer zurückgegeben wird, bevor es an die Methode übergeben wird, die die Ausnahme auslöst, Argumente validieren, bevor Sie an die-Methode übergeben werden.  
  
<xref:System.ArgumentOutOfRangeException> wird ausgiebig verwendet von:  
  
- Klassen in den <xref:System.Collections>-und <xref:System.IO>-Namespaces.  
  
- Der <xref:System.Array>-Klasse.  
  
- Methoden zur Zeichen folgen Bearbeitung in der <xref:System.String>-Klasse.  
  
Zu den Bedingungen, unter denen eine <xref:System.ArgumentOutOfRangeException> Ausnahme ausgelöst wird, gehören die folgenden:  
  
- Der Member einer Auflistung wird anhand seiner Indexnummer abgerufen, und die Indexnummer ist ungültig.  

   Dies ist die häufigste Ursache für eine <xref:System.ArgumentOutOfRangeException> Ausnahme. In der Regel ist die Indexnummer aus vier Gründen ungültig:  
  
   1. Die Auflistung enthält keine Member, und Ihr Code geht davon aus, dass dies der Fall ist. Im folgenden Beispiel wird versucht, das erste Element einer Auflistung abzurufen, das über keine Elemente verfügt:  
  
      [!code-csharp[System.ArgumentOutOfRangeException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#4)]
      [!code-vb[System.ArgumentOutOfRangeException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#4)]  
  
      Um die Ausnahme zu verhindern, überprüfen Sie, ob die `Count`-Eigenschaft der Auflistung größer als 0 (null) ist, bevor Sie versuchen, Elemente abzurufen, wie das folgende Code Fragment bewirkt.  
  
      [!code-csharp[System.ArgumentOutOfRangeException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements.cs#5)]
      [!code-vb[System.ArgumentOutOfRangeException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements.vb#5)]  
  
   2. In einigen Fällen kann die Ausnahme auftreten, weil Sie versuchen, einer Auflistung ein Element hinzuzufügen, indem Sie einen Index verwenden, der nicht vorhanden ist, und nicht durch Aufrufen der-Methode, wie z. b. `Add`, die zu diesem Zweck vorhanden ist.  Im folgenden Beispiel wird versucht, ein Element zu einer Auflistung hinzuzufügen, indem ein nicht vorhandener Index verwendet wird, anstatt die <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType> Methode aufzurufende.  
  
      [!code-csharp[System.ArgumentOutOfRangeException#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#13)]
      [!code-vb[System.ArgumentOutOfRangeException#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#13)]  
  
      Mit dem folgenden Code Fragment wird dieser Fehler korrigiert:  
  
      [!code-csharp[System.ArgumentOutOfRangeException#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoElements2.cs#14)]
      [!code-vb[System.ArgumentOutOfRangeException#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoElements2.vb#14)]  
  
   3. Sie versuchen, ein Element abzurufen, dessen Index negativ ist. Dies tritt normalerweise auf, weil Sie eine Auflistung nach dem Index eines bestimmten Elements durchsucht haben und irrtümlich angenommen haben, dass die Suche erfolgreich war. Im folgenden Beispiel kann der <xref:System.Collections.Generic.List%601.FindIndex%28System.Predicate%7B%600%7D%29?displayProperty=nameWithType>-Methode keine Zeichenfolge mit dem Wert "Z" finden, und gibt-1 zurück. Dies ist jedoch ein ungültiger Indexwert.  
  
      [!code-csharp[System.ArgumentOutOfRangeException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#6)]
      [!code-vb[System.ArgumentOutOfRangeException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#6)]  
  
      Um die Ausnahme zu verhindern, überprüfen Sie, ob die Suche erfolgreich ist, indem Sie sicherstellen, dass der zurückgegebene Index größer oder gleich 0 (null) ist, bevor Sie versuchen, das Element aus der Auflistung abzurufen, wie im folgenden Code Fragment zu sehen.  
  
      [!code-csharp[System.ArgumentOutOfRangeException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/BadSearch.cs#7)]
      [!code-vb[System.ArgumentOutOfRangeException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/BadSearch.vb#7)]  
  
   4. Sie versuchen, ein Element abzurufen, dessen Index gleich dem Wert der `Count`-Eigenschaft der Auflistung ist, wie im folgenden Beispiel veranschaulicht.  
  
      [!code-csharp[System.ArgumentOutOfRangeException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#8)]
      [!code-vb[System.ArgumentOutOfRangeException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#8)]  
  
      Da Auflistungen in .net eine Null basierte Indizierung verwenden, liegt das erste Element der Auflistung bei Index 0 und das letzte Element bei Index `Count`-1. Sie können den Fehler vermeiden, indem Sie sicherstellen, dass Sie auf das letzte Element bei Index `Count`-1 zugreifen, wie im folgenden Code zu sehen ist.  
  
      [!code-csharp[System.ArgumentOutOfRangeException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR2.cs#9)]
      [!code-vb[System.ArgumentOutOfRangeException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR2.vb#9)]  
  
- Sie versuchen, einen Zeichen folgen Vorgang durch Aufrufen einer Zeichen folgen-Manipulations Methode auszuführen, und der Start Index ist nicht in der Zeichenfolge vorhanden.

   Über Ladungen von Methoden wie z. b. <xref:System.String.Compare%2A?displayProperty=nameWithType>, <xref:System.String.CompareOrdinal%2A?displayProperty=nameWithType>, <xref:System.String.IndexOf%2A?displayProperty=nameWithType>, <xref:System.String.IndexOfAny%2A>, <xref:System.String.Insert%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOf%2A?displayProperty=nameWithType>, <xref:System.String.LastIndexOfAny%2A?displayProperty=nameWithType>, <xref:System.String.Remove%2A>oder <xref:System.String.Substring%2A?displayProperty=nameWithType>, die es Ihnen ermöglichen, den Start Index des Vorgangs anzugeben, erfordern, dass der Index eine gültige Position innerhalb der Zeichenfolge ist. Gültige Indizes reichen von 0 bis <xref:System.String.Length%2A?displayProperty=nameWithType>-1.  
  
   Diese <xref:System.ArgumentOutOfRangeException> Ausnahme hat vier Häufige Gründe:

   1. Sie arbeiten mit einer leeren Zeichenfolge oder <xref:System.String.Empty?displayProperty=nameWithType>. Da die <xref:System.String.Length%2A?displayProperty=nameWithType>-Eigenschaft 0 zurückgibt, wird bei jedem Versuch, Sie durch einen Index zu bearbeiten, eine <xref:System.ArgumentOutOfRangeException> Ausnahme ausgelöst. Im folgenden Beispiel wird eine `GetFirstCharacter`-Methode definiert, die das erste Zeichen einer Zeichenfolge zurückgibt. Wenn die Zeichenfolge leer ist, löst die Methode eine <xref:System.ArgumentOutOfRangeException> Ausnahme aus, da die endgültige Zeichenfolge, die an die-Methode übermittelt wird, ist.  
  
      [!code-csharp[System.ArgumentOutOfRangeException#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#15)]
      [!code-vb[System.ArgumentOutOfRangeException#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#15)]  
  
      Sie können die Ausnahme eliminieren, indem Sie überprüfen, ob die <xref:System.String.Length%2A?displayProperty=nameWithType> der Zeichenfolge größer als NULL ist, oder indem Sie die <xref:System.String.IsNullOrEmpty%2A>-Methode aufrufen, um sicherzustellen, dass die Zeichenfolge nicht `null` oder leer ist Das folgende Code Fragment führt Letzteres aus. Wenn in diesem Fall die Zeichenfolge `null` oder leer ist, gibt die `GetFirstCharacter`-Methode U + 0000 zurück.  
  
      [!code-csharp[System.ArgumentOutOfRangeException#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/EmptyString1.cs#16)]
      [!code-vb[System.ArgumentOutOfRangeException#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/EmptyString1.vb#16)]  
  
   2. Sie bearbeiten eine Zeichenfolge basierend auf der Position einer Teil Zeichenfolge innerhalb dieser Zeichenfolge, und Sie konnten nicht feststellen, ob die Teil Zeichenfolge tatsächlich gefunden wurde.  
  
      Im folgenden Beispiel wird das zweite Wort eines zwei-Wort-Ausdrucks extrahiert. Sie löst eine <xref:System.ArgumentOutOfRangeException> Ausnahme aus, wenn der Ausdruck nur aus einem Wort besteht und daher kein eingebettetes Leerzeichen enthält.  Dies liegt daran, dass der Rückruf der <xref:System.String.IndexOf%28System.String%29?displayProperty=nameWithType>-Methode-1 zurückgibt, um anzugeben, dass die Suche fehlgeschlagen ist, und dieser ungültige Wert dann an die <xref:System.String.Substring%28System.Int32%29?displayProperty=nameWithType>-Methode weitergegeben wird.  
  
      [!code-csharp[System.ArgumentOutOfRangeException#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind1.cs#17)]
      [!code-vb[System.ArgumentOutOfRangeException#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind1.vb#17)]  
  
      Um die Ausnahme zu vermeiden, überprüfen Sie den Wert, der von der Zeichen folgen-Suchmethode zurückgegeben wurde, bevor Sie die Zeichen folgen  
  
      [!code-csharp[System.ArgumentOutOfRangeException#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/NoFind2.cs#18)]
      [!code-vb[System.ArgumentOutOfRangeException#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/NoFind2.vb#18)]  
  
   3. Sie haben versucht, eine Teil Zeichenfolge zu extrahieren, die außerhalb des Bereichs der aktuellen Zeichenfolge liegt.  
 
      Die Methoden, die Teil Zeichenfolgen extrahieren, erfordern, dass Sie die Anfangsposition der Teil Zeichenfolge und für Teil Zeichenfolgen, die nicht am Ende der Zeichenfolge fortgesetzt werden, die Anzahl der Zeichen in der Teil Zeichenfolge angeben. Beachten Sie, dass es sich hierbei nicht um den *Index* des letzten Zeichens in der Teil Zeichenfolge handelt.  
  
      In der Regel wird in diesem Fall eine <xref:System.ArgumentOutOfRangeException> Ausnahme ausgelöst, da Sie die Anzahl der Zeichen in der Teil Zeichenfolge falsch berechnet haben.  Wenn Sie eine Suchmethode wie <xref:System.String.IndexOf%2A?displayProperty=nameWithType> verwenden, um die Anfangs-und Endpositionen einer Teil Zeichenfolge zu identifizieren:  
  
      - Wenn das von <xref:System.String.IndexOf%2A?displayProperty=nameWithType> zurückgegebene Zeichen in der Teil Zeichenfolge eingeschlossen werden soll, wird die Endposition der Teil Zeichenfolge von der Formel angegeben.  
  
         ```  
         endIndex - startIndex + 1  
         ```  
  
      - Wenn das Zeichen in der von <xref:System.String.IndexOf%2A?displayProperty=nameWithType> zurückgegebenen Endposition aus der Teil Zeichenfolge ausgeschlossen werden soll, wird die Endposition der Teil Zeichenfolge von der Formel angegeben.  
  
         ```
         endIndex - startIndex   
         ```  

         Im folgenden Beispiel wird eine `FindWords`-Methode definiert, die die <xref:System.String.IndexOfAny%28System.Char%5B%5D%2CSystem.Int32%29?displayProperty=nameWithType>-Methode verwendet, um Leerzeichen und Satzzeichen in einer Zeichenfolge zu identifizieren und ein Array zurückzugeben, das die in der Zeichenfolge gefundenen Wörter enthält.  
  
         [!code-csharp[System.ArgumentOutOfRangeException#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/FindWords1.cs#19)]
         [!code-vb[System.ArgumentOutOfRangeException#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/FindWords1.vb#19)]  
  
- Sie haben eine negative Zahl an eine Methode mit einem Argument übermittelt, das nur positive Zahlen und NULL erfordert, oder Sie haben entweder eine negative Zahl oder NULL an eine Methode mit einem Argument übermittelt, das nur positive Zahlen erfordert.  
 
   Die <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%2CSystem.Int32%2CSystem.Int32%29?displayProperty=nameWithType>-Methode erfordert beispielsweise, dass Sie die Anzahl der Elemente in jeder Dimension eines zweidimensionalen Arrays angeben. gültige Werte für jede Dimension können zwischen 0 und <xref:System.Int32.MaxValue?displayProperty=nameWithType>liegen. Da das Dimensions Argument im folgenden Beispiel einen negativen Wert aufweist, löst die Methode eine <xref:System.ArgumentOutOfRangeException> Ausnahme aus.  
  
   [!code-csharp[System.ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#1)]
   [!code-vb[System.ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#1)]  
  
   Stellen Sie sicher, dass der Wert des ungültigen Arguments nicht negativ ist, um den Fehler zu beheben. Hierfür können Sie einen gültigen Wert angeben, wie im folgenden Code Fragment zu sehen ist.  
  
   [!code-csharp[System.ArgumentOutOfRangeException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#2)]
   [!code-vb[System.ArgumentOutOfRangeException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#2)]  
  
   Sie können auch die Eingabe überprüfen und, wenn Sie ungültig ist, einige Aktionen ausführen. Das folgende Code Fragment zeigt eine Fehlermeldung an, anstatt die-Methode abzurufen.  
  
   [!code-csharp[System.ArgumentOutOfRangeException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/OOR1.cs#3)] 
   [!code-vb[System.ArgumentOutOfRangeException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/OOR1.vb#3)]  
  
- Eine Racebedingung ist in einer app vorhanden, die Multithread ist oder über Aufgaben verfügt, die asynchron ausgeführt werden und ein Array oder eine Auflistung aktualisieren.  

  Im folgenden Beispiel wird ein <xref:System.Collections.Generic.List%601> Objekt verwendet, um eine Auflistung von `Continent`-Objekten aufzufüllen. Es wird eine <xref:System.ArgumentOutOfRangeException> ausgelöst, wenn das Beispiel versucht, die sieben Elemente in der Auflistung anzuzeigen, bevor die Auflistung vollständig aufgefüllt wird.  
  
  [!code-csharp[System.ArgumentOutOfRangeException#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race1.cs#11)]
  [!code-vb[System.ArgumentOutOfRangeException#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race1.vb#11)]  
  
  In diesem Fall erfolgt der Zugriff auf zwei Ressourcen über mehrere Threads:  
  
  - Die `continents`-Auflistung. Die <xref:System.Collections.Generic.List%601.Add%2A?displayProperty=nameWithType>-Methode wird von mehreren Threads aufgerufen. Außerdem wird von dem Haupt-oder primär Thread angenommen, dass die Auflistung beim Durchlaufen der Member vollständig mit sieben Elementen gefüllt ist.  
  
  - Die `msg` Zeichenfolge, die von mehreren Threads verkettet wird.  
  
  Um den Fehler zu beheben, stellen Sie sicher, dass der Zugriff auf den freigegebenen Zustand wie folgt auf Thread sichere Weise erfolgt.  

  - Wenn Ihre APP ein Array-oder Auflistungs Objekt verwendet, sollten Sie eine Thread sichere Auflistungs Klasse verwenden, wie z. b. die Typen im <xref:System.Collections.Concurrent>-Namespace oder die <xref:System.Collections.Immutable> out-of-Band-Version.  
  
  - Stellen Sie sicher, dass auf den gemeinsamen Zustand (d. h. Ressourcen, auf die von mehreren Threads zugegriffen werden kann) auf Thread sichere Weise zugegriffen wird, sodass jeweils nur ein Thread exklusiven Zugriff auf die Ressourcen hat. Eine große Anzahl von Klassen, z. b. <xref:System.Threading.CountdownEvent>, <xref:System.Threading.Interlocked>, <xref:System.Threading.Monitor>und <xref:System.Threading.Mutex>, sind zum Synchronisieren des Zugriffs auf Ressourcen verfügbar. Weitere Informationen finden Sie unter [Threading](~/docs/standard/threading/index.md). Außerdem ist die Sprachunterstützung über die [Lock](~/docs/csharp/language-reference/keywords/lock-statement.md) -Anweisung in C# und das [SyncLock](~/docs/visual-basic/language-reference/statements/synclock-statement.md) -Konstrukt in Visual Basic verfügbar.  
  
  Im folgenden Beispiel werden die <xref:System.ArgumentOutOfRangeException> und die anderen Probleme aus dem vorherigen Beispiel behandelt. Er ersetzt das <xref:System.Collections.Generic.List%601> Objekt durch ein <xref:System.Collections.Concurrent.ConcurrentBag%601> Objekt, um sicherzustellen, dass der Zugriff auf die Auflistung Thread sicher ist, verwendet ein <xref:System.Threading.CountdownEvent>-Objekt, um sicherzustellen, dass der Anwendungs Thread erst nach der Ausführung anderer Threads fortgesetzt wird, und verwendet eine Sperre, um sicherzustellen, dass jeweils nur ein Thread auf die `msg` Variable zugreifen kann.  
  
  [!code-csharp[System.ArgumentOutOfRangeException#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/cs/Race2.cs#12)]
  [!code-vb[System.ArgumentOutOfRangeException#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.ArgumentOutOfRangeException/vb/Race2.vb#12)]  
  
<xref:System.ArgumentOutOfRangeException> verwendet die HRESULT-COR_E_ARGUMENTOUTOFRANGE mit dem Wert 0x80131502.  
  
Eine Liste der anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.ArgumentOutOfRangeException>, finden Sie unter den <xref:System.ArgumentOutOfRangeException> Konstruktoren.  
  
## Examples

Im folgenden Beispiel wird eine-Klasse definiert, die Informationen zu einem eingeladenen Gast enthält. Wenn der Gast jünger als 21 ist, wird eine <xref:System.ArgumentOutOfRangeException> Ausnahme ausgelöst.  
  
 [!code-csharp[ArgumentOutOfRangeException#1](~/samples/snippets/csharp/VS_Snippets_CLR/ArgumentOutOfRangeException/CS/program.cs#1)]
 [!code-vb[ArgumentOutOfRangeException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/ArgumentOutOfRangeException/VB/program.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentOutOfRangeException" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentOutOfRangeException" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die <xref:System.ArgumentException.Message%2A>-Eigenschaft der neuen Instanz mit einer vom System bereitgestellten Meldung, die den Fehler beschreibt, z. b. "nicht negative Zahl erforderlich". Diese Meldung berücksichtigt die aktuelle Systemkultur.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.ArgumentOutOfRangeException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Ein NULL-Verweis (`Nothing` in Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Die Zeichenfolge der lokalisierten Fehlermeldung.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException paramName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Der Name des Parameters, der die Ausnahme verursacht hat.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentOutOfRangeException" />-Klasse mit dem Namen des Parameters, der diese Ausnahme auslöst.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die <xref:System.ArgumentException.Message%2A>-Eigenschaft der neuen Instanz mit einer vom System bereitgestellten Meldung, die den Fehler beschreibt, z. b. "nicht negative Zahl erforderlich". Diese Meldung berücksichtigt die aktuelle Systemkultur.  
  
 Dieser Konstruktor initialisiert die <xref:System.ArgumentException.ParamName%2A>-Eigenschaft der neuen Instanz unter Verwendung des `paramName`-Parameters. Der Inhalt der `paramName` soll in verständlicher Sprache gehalten sein.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.ArgumentOutOfRangeException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Ein NULL-Verweis (`Nothing` in Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Die leere Zeichenfolge ("").|  
|<xref:System.ArgumentException.ParamName%2A>|Die Zeichenfolge für den Parameternamen.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ArgumentOutOfRangeException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ArgumentOutOfRangeException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info">Das Objekt, das die serialisierten Objektdaten enthält.</param>
        <param name="context">Ein Objekt, das die Quelle oder das Ziel der serialisierten Daten beschreibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentOutOfRangeException" />-Klasse mit serialisierten Daten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird während der Deserialisierung aufgerufen, um das über einen Datenstrom übertragene Ausnahmeobjekt wieder zusammenzusetzen. Weitere Informationen finden Sie unter [XML- und SOAP-Serialisierung](~/docs/standard/serialization/xml-and-soap-serialization.md).  
  
 ]]></format>
        </remarks>
        <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML- und SOAP-Serialisierung</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * Exception -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="innerException" Type="System.Exception" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="message">Die Fehlermeldung, in der die Ursache dieser Ausnahme erklärt wird.</param>
        <param name="innerException">Die Ausnahme, die die aktuelle Ausnahme verursacht hat, oder ein Nullverweis (<see langword="Nothing" /> in Visual Basic), wenn keine innere Ausnahme angegeben ist.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentOutOfRangeException" />-Klasse mit einer angegebenen Fehlermeldung und der Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (paramName, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Der Name des Parameters, der die Ausnahme verursacht hat.</param>
        <param name="message">Die Meldung, die den Fehler beschreibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentOutOfRangeException" />-Klasse mit dem Namen des Parameters, der die Ausnahme auslöst und einer angegebenen Fehlermeldung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die <xref:System.ArgumentOutOfRangeException.Message%2A>-Eigenschaft der neuen Instanz unter Verwendung des Werts des `message`-Parameters. Der Inhalt des `message`-Parameters sollte für Personen verständlich sein. Der Aufrufer dieses Konstruktors ist erforderlich, um sicherzustellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.  
  
 Dieser Konstruktor initialisiert die <xref:System.ArgumentException.ParamName%2A>-Eigenschaft der neuen Instanz unter Verwendung des `paramName`-Parameters. Der Inhalt der `paramName` soll in verständlicher Sprache gehalten sein.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.ArgumentOutOfRangeException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|`null`.|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Die Zeichenfolge der Fehlermeldung.|  
|<xref:System.ArgumentException.ParamName%2A>|Die Zeichenfolge für den Parameternamen.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ArgumentOutOfRangeException (string paramName, object actualValue, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string paramName, object actualValue, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.#ctor(System.String,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (paramName As String, actualValue As Object, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ArgumentOutOfRangeException(System::String ^ paramName, System::Object ^ actualValue, System::String ^ message);" />
      <MemberSignature Language="F#" Value="new ArgumentOutOfRangeException : string * obj * string -&gt; ArgumentOutOfRangeException" Usage="new System.ArgumentOutOfRangeException (paramName, actualValue, message)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="paramName" Type="System.String" />
        <Parameter Name="actualValue" Type="System.Object" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="paramName">Der Name des Parameters, der die Ausnahme verursacht hat.</param>
        <param name="actualValue">Der Wert des Arguments, das diese Ausnahme auslöst.</param>
        <param name="message">Die Meldung, die den Fehler beschreibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.ArgumentOutOfRangeException" />-Klasse mit einer angegebenen Fehlermeldung, dem Namen des Parameters und dem Wert des Arguments und einer angegebenen Fehlermeldung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die <xref:System.ArgumentException.ParamName%2A>-Eigenschaft der neuen Instanz unter Verwendung des `paramName`-Parameters, der <xref:System.ArgumentOutOfRangeException.ActualValue%2A>-Eigenschaft unter Verwendung des `actualValue`-Parameters und der <xref:System.ArgumentException.Message%2A>-Eigenschaft mithilfe des `message`-Parameters. Der Inhalt der Parameter "`paramName`" und "`message`" soll von Menschen verstanden werden. Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichen folgen für die aktuelle System Kultur lokalisiert wurden.  
  
 Der `actualValue`-Parameter wird in der .NET Framework-Klassenbibliothek nicht verwendet. Allerdings wird die <xref:System.ArgumentOutOfRangeException.ActualValue%2A>-Eigenschaft bereitgestellt, sodass Anwendungen den Wert des verfügbaren Arguments verwenden können.  
  
 Der `actualValue`-Parameter enthält einen ungültigen Wert, der an die-Methode übergeben wird und bewirkt, dass diese Ausnahme ausgelöst wird. Dieser Wert wird in der <xref:System.ArgumentOutOfRangeException.ActualValue%2A>-Eigenschaft gespeichert, und die zugehörige Zeichen folgen Darstellung wird an die in der <xref:System.ArgumentOutOfRangeException.Message%2A>-Eigenschaft enthaltene Meldungs Zeichenfolge angehängt.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.ArgumentOutOfRangeException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.ArgumentOutOfRangeException.ActualValue%2A>|Der Argumentwert.|  
|<xref:System.Exception.InnerException%2A>|Der NULL-Verweis (`Nothing` in Visual Basic).|  
|<xref:System.ArgumentOutOfRangeException.Message%2A>|Die Zeichenfolge der Fehlermeldung.|  
|<xref:System.ArgumentException.ParamName%2A>|Die Zeichenfolge für den Parameternamen.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualValue">
      <MemberSignature Language="C#" Value="public virtual object ActualValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ActualValue" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.ActualValue" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ActualValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ ActualValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActualValue : obj" Usage="System.ArgumentOutOfRangeException.ActualValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Argumentwert ab, der die Ausnahme auslöst.</summary>
        <value>Ein <see langword="Object" />, das den Wert des Parameters enthält, der die aktuelle <see cref="T:System.Exception" /> verursacht hat.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um das ungültige Argument abzurufen.  
  
 Die `ActualValue`-Eigenschaft gibt denselben Wert zurück, der an den Konstruktor übergeben wurde, oder `null`, wenn kein Wert angegeben wurde.  
  
 Der <xref:System.ArgumentOutOfRangeException.ActualValue%2A>-Eigenschaft wird zum Zeitpunkt der Objekt Erstellung ein Wert zugewiesen. Wenn der <xref:System.ArgumentOutOfRangeException.ActualValue%2A>-Eigenschafts Wert nicht `null`ist, wird eine Zeichen folgen Darstellung des Werts an die Meldungs Zeichenfolge angehängt, die von der <xref:System.ArgumentOutOfRangeException.Message%2A>-Eigenschaft gehalten wird.  
  
 Die <xref:System.ArgumentOutOfRangeException.ActualValue%2A>-Eigenschaft wird in der .NET Framework-Klassenbibliothek nicht verwendet. Sie enthält einen NULL-Wert in allen <xref:System.ArgumentOutOfRangeException> Objekten, die von der .NET Framework-Klassenbibliothek ausgelöst werden. Die <xref:System.ArgumentOutOfRangeException.ActualValue%2A>-Eigenschaft wird bereitgestellt, sodass Anwendungen den Wert des verfügbaren Arguments verwenden können.  
  
 Diese Eigenschaft ist schreibgeschützt und sollte nur überschrieben werden, um den Inhalt oder das Format des Werts anzupassen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ArgumentOutOfRangeException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="argumentOutOfRangeException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1" />
      </Parameters>
      <Docs>
        <param name="info">Das Objekt, das die serialisierten Objektdaten enthält.</param>
        <param name="context">Ein Objekt, das die Quelle oder das Ziel der serialisierten Daten beschreibt.</param>
        <summary>Legt das <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit dem ungültigen Argumentwert und zusätzlichen Informationen über die Ausnahme fest.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ArgumentOutOfRangeException.GetObjectData%2A> ein <xref:System.Runtime.Serialization.SerializationInfo>-Objekt mit allen für die Serialisierung vorgesehenen Ausnahme Objektdaten festlegt. Während der Deserialisierung wird das Ausnahme Objekt aus der über den Stream übertragenen <xref:System.Runtime.Serialization.SerializationInfo> wieder hergestellt.  
  
 Weitere Informationen finden Sie unter <xref:System.Runtime.Serialization.SerializationInfo>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Das <paramref name="info" />-Objekt ist <see langword="null" />.</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">zum Bereitstellen von Serialisierungsdiensten. Zugehörige Enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.LinkDemand" /></permission>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.ArgumentOutOfRangeException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.ArgumentOutOfRangeException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Fehlermeldung und die Zeichenfolgendarstellung des ungültigen Argumentwerts oder nur die Fehlermeldung ab, wenn der Argumentwert Null ist.</summary>
        <value>Die Textmeldung für die Ausnahme. Der Wert dieser Eigenschaft liegt in einer der beiden folgenden Formen vor:  
  
 <list type="table"><listheader><term> Bedingung 
 </term><description> Wert 
 </description></listheader><item><term> <paramref name="actualValue" /> ist <see langword="null" />.  
  
 </term><description> Die an den Konstruktor übergebene <paramref name="message" />-Zeichenfolge.  
  
 </description></item><item><term> <paramref name="actualValue" /> ist nicht <see langword="null" />.  
  
 </term><description> Die <paramref name="message" />-Zeichenfolge, der die Zeichenfolgendarstellung des ungültigen Argumentwerts angefügt ist.  
  
 </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft überschreibt <xref:System.ArgumentException.Message%2A>.  
  
 In der Fehlermeldung sollten die erwarteten Werte des Parameters beschrieben werden, der diese Ausnahme auslöst. Die Fehlermeldung sollte lokalisiert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
