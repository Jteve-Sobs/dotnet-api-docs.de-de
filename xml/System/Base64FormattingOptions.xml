<Type Name="Base64FormattingOptions" FullName="System.Base64FormattingOptions">
  <TypeSignature Language="C#" Value="public enum Base64FormattingOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Base64FormattingOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Base64FormattingOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum Base64FormattingOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class Base64FormattingOptions" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Extensions</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d5536-101">Gibt an, ob die relevante <see cref="Overload:System.Convert.ToBase64CharArray" />-Methode und die relevante <see cref="Overload:System.Convert.ToBase64String" />-Methode Zeilenumbrüche in die Ausgabe einfügen.</span><span class="sxs-lookup"><span data-stu-id="d5536-101">Specifies whether relevant <see cref="Overload:System.Convert.ToBase64CharArray" /> and <see cref="Overload:System.Convert.ToBase64String" /> methods insert line breaks in their output.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5536-102">Die <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType> und <xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType> Methoden konvertieren Sie den Wert eines Arrays von 8-Bit-Ganzzahlen ohne Vorzeichen in eine entsprechende Zeichenfolgendarstellung, die aus base-64-Ziffern besteht.</span><span class="sxs-lookup"><span data-stu-id="d5536-102">The <xref:System.Convert.ToBase64CharArray%2A?displayProperty=nameWithType> and <xref:System.Convert.ToBase64String%2A?displayProperty=nameWithType> methods convert the value of an array of 8-bit unsigned integers to an equivalent string representation that consists of base 64 digits.</span></span> <span data-ttu-id="d5536-103">Zeichenfolgendarstellung ein enthalten kann, oder weitere Zeilenumbrüche, wobei ein Zeilenumbruch als ein Wagenrücklaufzeichen definiert wird zurückgeben Zeichen (U + 000D) gefolgt von einem Zeilenvorschubzeichen (U + 000A).</span><span class="sxs-lookup"><span data-stu-id="d5536-103">The string representation can contain one or more line breaks, where a line break is defined as a carriage return character (U+000D) followed by a line feed character (U+000A).</span></span> <span data-ttu-id="d5536-104">Da Zeilenumbrüche Leerzeichen in einer Base64-Codierung betrachtet werden, werden sie ignoriert, wenn konvertieren eine Base64-Zeichenfolge zurück in ein Bytearray codiert.</span><span class="sxs-lookup"><span data-stu-id="d5536-104">Because line breaks are considered whitespace characters in a base-64 encoding, they are ignored when converting a base-64 encoded string back to a byte array.</span></span> <span data-ttu-id="d5536-105">Die Zeilenumbrüche sind einfach praktisch, wenn die codierte Zeichenfolge an ein Steuerelement oder ein Gerät, z. B. einem Konsolenfenster angezeigt.</span><span class="sxs-lookup"><span data-stu-id="d5536-105">The line breaks are simply convenient when displaying the encoded string to a control or a device such as a console window.</span></span>  
  
 <span data-ttu-id="d5536-106">Die None und InsertLineBreaks Werte schließen sich gegenseitig.</span><span class="sxs-lookup"><span data-stu-id="d5536-106">The None and InsertLineBreaks values are mutually exclusive.</span></span> <span data-ttu-id="d5536-107">Aus diesem Grund zwar die <xref:System.Base64FormattingOptions.None?displayProperty=nameWithType> Enumeration wird gekennzeichnet, mit der <xref:System.FlagsAttribute> Attribut macht es keinen Sinn, an die eine bitweise Kombination dieser beiden Werte ausführen.</span><span class="sxs-lookup"><span data-stu-id="d5536-107">Therefore, although the <xref:System.Base64FormattingOptions.None?displayProperty=nameWithType> enumeration is marked with the <xref:System.FlagsAttribute> attribute, it makes no sense to perform a bitwise combination of these two values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d5536-108">Im folgenden Beispiel wird die <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> mit einem InsertLineBreaks unterbricht Argument einzufügende Zeile in der Zeichenfolge, die beim Codieren einer 100 Elementen bestehendes Bytearray erzeugt wird.</span><span class="sxs-lookup"><span data-stu-id="d5536-108">The following example calls the <xref:System.Convert.ToBase64String%28System.Byte%5B%5D%2CSystem.Base64FormattingOptions%29?displayProperty=nameWithType> with a InsertLineBreaks argument to insert line breaks in the string that is produced by encoding a 100-element byte array.</span></span>  
  
 [!code-csharp[System.Convert.ToBase64String#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Convert.ToBase64String/cs/ToBase64String3.cs#3)]
 [!code-vb[System.Convert.ToBase64String#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Convert.ToBase64String/vb/ToBase64String3.vb#3)]  
  
 <span data-ttu-id="d5536-109">Wie die Ausgabe im Beispiel gezeigt die <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> erfolgreich ausgeführt wird, bei der Wiederherstellung der ursprünglichen Bytearray; die Zeilenumbruchzeichen werden bei der Konvertierung ignoriert.</span><span class="sxs-lookup"><span data-stu-id="d5536-109">As the output from the example shows, the <xref:System.Convert.FromBase64String%2A?displayProperty=nameWithType> succeeds in restoring the original byte array; the line break characters are ignored during the conversion.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="InsertLineBreaks">
      <MemberSignature Language="C#" Value="InsertLineBreaks" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Base64FormattingOptions InsertLineBreaks = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Base64FormattingOptions.InsertLineBreaks" />
      <MemberSignature Language="VB.NET" Value="InsertLineBreaks" />
      <MemberSignature Language="C++ CLI" Value="InsertLineBreaks" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Base64FormattingOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d5536-110">Fügt nach je 76 Zeichen in der Zeichenfolgendarstellung Zeilenumbrüche ein.</span><span class="sxs-lookup"><span data-stu-id="d5536-110">Inserts line breaks after every 76 characters in the string representation.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Base64FormattingOptions None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Base64FormattingOptions.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Extensions</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Base64FormattingOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d5536-111">Fügt nach je 76 Zeichen in der Zeichenfolgendarstellung keine Zeilenumbrüche ein.</span><span class="sxs-lookup"><span data-stu-id="d5536-111">Does not insert line breaks after every 76 characters in the string representation.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>