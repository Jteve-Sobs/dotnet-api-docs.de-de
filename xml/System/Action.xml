<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Action.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f102b48542720505b62a9fc8aca11935323d2011.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f102b48542720505b62a9fc8aca11935323d2011</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Action">
          <source>Encapsulates a method that has no parameters and does not return a value.</source>
          <target state="translated">Kapselt eine Methode, die über keinen Parameter verfügt und keinen Wert zurückgibt.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>You can use this delegate to pass a method as a parameter without explicitly declaring a custom delegate.</source>
          <target state="translated">Sie können dieser Delegat verwenden, um eine Methode als Parameter übergeben, ohne explizit einen benutzerdefinierten Delegaten zu deklarieren.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>The encapsulated method must correspond to the method signature that is defined by this delegate.</source>
          <target state="translated">Die gekapselte Methode muss der Methodensignatur entsprechen, die von diesem Delegaten definiert ist.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>This means that the encapsulated method must have no parameters and no return value.</source>
          <target state="translated">Dies bedeutet, dass die gekapselte Methode keine Parameter und keinen Rückgabewert haben muss.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>(In C#, the method must return <ph id="ph1">`void`</ph>.</source>
          <target state="translated">(In c# muss die Methode zurückgeben <ph id="ph1">`void`</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>In Visual Basic, it must be defined by the <ph id="ph1">`Sub`</ph>…<ph id="ph2">`End Sub`</ph></source>
          <target state="translated">In Visual Basic müssen Sie durch definiert die <ph id="ph1">`Sub`</ph>...<ph id="ph2">`End Sub`</ph></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>construct.</source>
          <target state="translated">erstellen.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</source>
          <target state="translated">Sie können auch eine Methode, die einen Wert zurückgibt, der ignoriert wird, sein.) In der Regel wird eine solche Methode zum Ausführen eines Vorgangs verwendet.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>To reference a method that has no parameters and returns a value, use the generic <ph id="ph1">&lt;xref:System.Func%601&gt;</ph> delegate instead.</source>
          <target state="translated">Um eine Methode zu verweisen, die über keine Parameter verfügt und einen Wert zurückgibt, verwenden Sie die generische <ph id="ph1">&lt;xref:System.Func%601&gt;</ph> stattdessen delegieren.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>When you use the <ph id="ph1">&lt;xref:System.Action&gt;</ph> delegate, you do not have to explicitly define a delegate that encapsulates a parameterless procedure.</source>
          <target state="translated">Bei Verwendung der <ph id="ph1">&lt;xref:System.Action&gt;</ph> Delegaten, Sie müssen nicht explizit einen Delegaten definieren, der eine parameterlose Prozedur kapselt.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>For example, the following code explicitly declares a delegate named <ph id="ph1">`ShowValue`</ph> and assigns a reference to the <ph id="ph2">`Name.DisplayToWindow`</ph> instance method to its delegate instance.</source>
          <target state="translated">Der folgende Code deklariert z. B. explizit einen Delegaten, mit dem Namen <ph id="ph1">`ShowValue`</ph> und weist einen Verweis auf die <ph id="ph2">`Name.DisplayToWindow`</ph> -Instanzmethode zu seiner Delegatinstanz.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>The following example simplifies this code by instantiating the <ph id="ph1">&lt;xref:System.Action&gt;</ph> delegate instead of explicitly defining a new delegate and assigning a named method to it.</source>
          <target state="translated">Im folgende Beispiel wird dieser Code vereinfacht, durch die Instanziierung der <ph id="ph1">&lt;xref:System.Action&gt;</ph> Delegaten explizit einen neuen Delegaten definieren und eine benannte Methode zuweisen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Action&gt;</ph> delegate with anonymous methods in C#, as the following example illustrates.</source>
          <target state="translated">Sie können auch die <ph id="ph1">&lt;xref:System.Action&gt;</ph> delegieren mit anonymen Methoden in C# geschrieben, wie im folgenden Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>(For an introduction to anonymous methods, see <bpt id="p1">[</bpt>Anonymous Methods<ept id="p1">](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md)</ept>.)</source>
          <target state="translated">(Eine Einführung für anonyme Methoden finden Sie unter <bpt id="p1">[</bpt>anonyme Methoden<ept id="p1">](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md)</ept>.)</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>You can also assign a lambda expression to an <ph id="ph1">&lt;xref:System.Action&gt;</ph> delegate instance, as the following example illustrates.</source>
          <target state="translated">Sie können auch einen Lambda-Ausdruck zum Zuweisen einer <ph id="ph1">&lt;xref:System.Action&gt;</ph> delegieren Instanz, wie im folgenden Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Action">
          <source>(For an introduction to lambda expressions, see <bpt id="p1">[</bpt>Lambda Expressions<ept id="p1">](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md)</ept>.)</source>
          <target state="translated">(Eine Einführung in Lambda-Ausdrücke finden Sie unter <bpt id="p1">[</bpt>Lambda-Ausdrücke<ept id="p1">](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md)</ept>.)</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>