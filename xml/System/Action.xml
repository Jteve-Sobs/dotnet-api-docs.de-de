<Type Name="Action" FullName="System.Action">
  <TypeSignature Language="C#" Value="public delegate void Action();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Action extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Action" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub Action()" />
  <TypeSignature Language="C++ CLI" Value="public delegate void Action();" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <summary><span data-ttu-id="85adb-101">Kapselt eine Methode, die über keinen Parameter verfügt und keinen Wert zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="85adb-101">Encapsulates a method that has no parameters and does not return a value.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="85adb-102">Sie können dieser Delegat verwenden, um eine Methode als Parameter übergeben, ohne explizit einen benutzerdefinierten Delegaten zu deklarieren.</span><span class="sxs-lookup"><span data-stu-id="85adb-102">You can use this delegate to pass a method as a parameter without explicitly declaring a custom delegate.</span></span> <span data-ttu-id="85adb-103">Die gekapselte Methode muss der Methodensignatur entsprechen, die von diesem Delegaten definiert ist.</span><span class="sxs-lookup"><span data-stu-id="85adb-103">The encapsulated method must correspond to the method signature that is defined by this delegate.</span></span> <span data-ttu-id="85adb-104">Dies bedeutet, dass die gekapselte Methode keine Parameter und keinen Rückgabewert haben muss.</span><span class="sxs-lookup"><span data-stu-id="85adb-104">This means that the encapsulated method must have no parameters and no return value.</span></span> <span data-ttu-id="85adb-105">(In c# muss die Methode zurückgeben `void`.</span><span class="sxs-lookup"><span data-stu-id="85adb-105">(In C#, the method must return `void`.</span></span> <span data-ttu-id="85adb-106">In Visual Basic müssen Sie durch definiert die `Sub`...`End Sub`</span><span class="sxs-lookup"><span data-stu-id="85adb-106">In Visual Basic, it must be defined by the `Sub`…`End Sub`</span></span> <span data-ttu-id="85adb-107">erstellen.</span><span class="sxs-lookup"><span data-stu-id="85adb-107">construct.</span></span> <span data-ttu-id="85adb-108">Sie können auch eine Methode, die einen Wert zurückgibt, der ignoriert wird, sein.) In der Regel wird eine solche Methode zum Ausführen eines Vorgangs verwendet.</span><span class="sxs-lookup"><span data-stu-id="85adb-108">It can also be a method that returns a value that is ignored.) Typically, such a method is used to perform an operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="85adb-109">Um eine Methode zu verweisen, die über keine Parameter verfügt und einen Wert zurückgibt, verwenden Sie die generische <xref:System.Func%601> stattdessen delegieren.</span><span class="sxs-lookup"><span data-stu-id="85adb-109">To reference a method that has no parameters and returns a value, use the generic <xref:System.Func%601> delegate instead.</span></span>  
  
 <span data-ttu-id="85adb-110">Bei Verwendung der <xref:System.Action> Delegaten, Sie müssen nicht explizit einen Delegaten definieren, der eine parameterlose Prozedur kapselt.</span><span class="sxs-lookup"><span data-stu-id="85adb-110">When you use the <xref:System.Action> delegate, you do not have to explicitly define a delegate that encapsulates a parameterless procedure.</span></span> <span data-ttu-id="85adb-111">Der folgende Code deklariert z. B. explizit einen Delegaten, mit dem Namen `ShowValue` und weist einen Verweis auf die `Name.DisplayToWindow` -Instanzmethode zu seiner Delegatinstanz.</span><span class="sxs-lookup"><span data-stu-id="85adb-111">For example, the following code explicitly declares a delegate named `ShowValue` and assigns a reference to the `Name.DisplayToWindow` instance method to its delegate instance.</span></span>  
  
 [!code-cpp[System.Action.Delegate#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.action.delegate/cpp/delegate.cpp#1)]
 [!code-csharp[System.Action.Delegate#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.action.delegate/cs/delegate.cs#1)]
 [!code-vb[System.Action.Delegate#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.action.delegate/vb/delegate.vb#1)]  
  
 <span data-ttu-id="85adb-112">Im folgende Beispiel wird dieser Code vereinfacht, durch die Instanziierung der <xref:System.Action> Delegaten explizit einen neuen Delegaten definieren und eine benannte Methode zuweisen.</span><span class="sxs-lookup"><span data-stu-id="85adb-112">The following example simplifies this code by instantiating the <xref:System.Action> delegate instead of explicitly defining a new delegate and assigning a named method to it.</span></span>  
  
 [!code-cpp[System.Action#2](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Action/cpp/action.cpp#2)]
 [!code-csharp[System.Action#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action/cs/Action.cs#2)]
 [!code-vb[System.Action#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action/vb/Action.vb#2)]  
  
 <span data-ttu-id="85adb-113">Sie können auch die <xref:System.Action> delegieren mit anonymen Methoden in C# geschrieben, wie im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="85adb-113">You can also use the <xref:System.Action> delegate with anonymous methods in C#, as the following example illustrates.</span></span> <span data-ttu-id="85adb-114">(Eine Einführung für anonyme Methoden finden Sie unter [anonyme Methoden](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span><span class="sxs-lookup"><span data-stu-id="85adb-114">(For an introduction to anonymous methods, see [Anonymous Methods](~/docs/csharp/programming-guide/statements-expressions-operators/anonymous-methods.md).)</span></span>  
  
 [!code-csharp[System.Action#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action/cs/Anon.cs#3)]  
  
 <span data-ttu-id="85adb-115">Sie können auch einen Lambda-Ausdruck zum Zuweisen einer <xref:System.Action> delegieren Instanz, wie im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="85adb-115">You can also assign a lambda expression to an <xref:System.Action> delegate instance, as the following example illustrates.</span></span> <span data-ttu-id="85adb-116">(Eine Einführung in Lambda-Ausdrücke finden Sie unter [Lambda-Ausdrücke](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span><span class="sxs-lookup"><span data-stu-id="85adb-116">(For an introduction to lambda expressions, see [Lambda Expressions](~/docs/csharp/programming-guide/statements-expressions-operators/lambda-expressions.md).)</span></span>  
  
 [!code-csharp[System.Action#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Action/cs/Lambda.cs#4)]
 [!code-vb[System.Action#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Action/vb/lambda.vb#4)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Func`1" />
  </Docs>
</Type>