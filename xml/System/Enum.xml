<Type Name="Enum" FullName="System.Enum">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a7995bda685683a6b1f6531d79467db9104073cf" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86688053" /></Metadata><TypeSignature Language="C#" Value="public abstract class Enum : ValueType, IComparable, IConvertible, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Enum extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.Enum" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Enum&#xA;Inherits ValueType&#xA;Implements IComparable, IConvertible, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C++ CLI" Value="public ref class Enum abstract : ValueType, IComparable, IConvertible, IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Enum = class&#xA;    inherit ValueType&#xA;    interface IComparable&#xA;    interface IConvertible&#xA;    interface IFormattable" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Enum extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type Enum = class&#xA;    inherit ValueType&#xA;    interface IComparable&#xA;    interface IFormattable&#xA;    interface IConvertible" FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="C#" Value="public abstract class Enum : ValueType, IComparable, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Enum extends System.ValueType implements class System.IComparable, class System.IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Enum&#xA;Inherits ValueType&#xA;Implements IComparable, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="C++ CLI" Value="public ref class Enum abstract : ValueType, IComparable, IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <TypeSignature Language="F#" Value="type Enum = class&#xA;    inherit ValueType&#xA;    interface IComparable&#xA;    interface IFormattable" FrameworkAlternate="netstandard-1.0;netstandard-1.1;netstandard-1.2" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="mscorlib" FromVersion="4.0.0.0" To="System.Runtime" ToVersion="0.0.0.0" FrameworkAlternate="dotnet-uwp-10.0" />
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Runtime" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="28f22-101">Stellt die Basisklasse für Enumerationen bereit.</span><span class="sxs-lookup"><span data-stu-id="28f22-101">Provides the base class for enumerations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-102">Eine Enumeration ist ein Satz von benannten Konstanten, deren zugrunde liegender Typ ein beliebiger ganzzahliger Typ ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-102">An enumeration is a set of named constants whose underlying type is any integral type.</span></span> <span data-ttu-id="28f22-103">Wenn kein zugrunde liegender Typ explizit deklariert wird, <xref:System.Int32> wird verwendet.</span><span class="sxs-lookup"><span data-stu-id="28f22-103">If no underlying type is explicitly declared, <xref:System.Int32> is used.</span></span> <span data-ttu-id="28f22-104"><xref:System.Enum> ist die Basisklasse für alle Enumerationen in der .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="28f22-104"><xref:System.Enum> is the base class for all enumerations in the .NET Framework.</span></span> <span data-ttu-id="28f22-105">Enumerationstypen werden durch das `enum` -Schlüsselwort in c# und das `Enum` ...- `End Enum` Konstrukt in Visual Basic definiert.</span><span class="sxs-lookup"><span data-stu-id="28f22-105">Enumeration types are defined by the `enum` keyword in C# and the `Enum`...`End Enum` construct in Visual Basic.</span></span>  
  
 <span data-ttu-id="28f22-106"><xref:System.Enum> stellt Methoden zum Vergleichen von Instanzen dieser Klasse, zum Umrechnen des Werts einer Instanz in die entsprechende Zeichen folgen Darstellung, zum umrechnen der Zeichen folgen Darstellung einer Zahl in eine Instanz dieser Klasse und zum Erstellen einer Instanz einer angegebenen Enumeration und eines Werts bereit.</span><span class="sxs-lookup"><span data-stu-id="28f22-106"><xref:System.Enum> provides methods for comparing instances of this class, converting the value of an instance to its string representation, converting the string representation of a number to an instance of this class, and creating an instance of a specified enumeration and value.</span></span>  
  
 <span data-ttu-id="28f22-107">Sie können auch eine Enumeration als Bitfeld behandeln.</span><span class="sxs-lookup"><span data-stu-id="28f22-107">You can also treat an enumeration as a bit field.</span></span> <span data-ttu-id="28f22-108">Weitere Informationen finden Sie im Abschnitt [nicht exklusive Member und Flags-Attribut](#Flags) und im <xref:System.FlagsAttribute> Thema.</span><span class="sxs-lookup"><span data-stu-id="28f22-108">For more information, see the [Non-Exclusive Members and the Flags Attribute](#Flags) section and the <xref:System.FlagsAttribute> topic.</span></span>  
  
 <span data-ttu-id="28f22-109">Inhalte dieses Themas:</span><span class="sxs-lookup"><span data-stu-id="28f22-109">In this topic:</span></span>  
  
 <span data-ttu-id="28f22-110">[Erstellen eines Enumerationstyps](#Creating) </span><span class="sxs-lookup"><span data-stu-id="28f22-110">[Creating an enumeration type](#Creating) </span></span>  
 <span data-ttu-id="28f22-111">[Instanziieren eines Enumerationstyps](#Instantiating) </span><span class="sxs-lookup"><span data-stu-id="28f22-111">[Instantiating an enumeration type](#Instantiating) </span></span>  
 <span data-ttu-id="28f22-112">[Bewährte Methoden für die Enumeration](#BestPractices) </span><span class="sxs-lookup"><span data-stu-id="28f22-112">[Enumeration best practices](#BestPractices) </span></span>  
 <span data-ttu-id="28f22-113">[Ausführen von Vorgängen mit Enumerationen](#Operations) </span><span class="sxs-lookup"><span data-stu-id="28f22-113">[Performing operations with enumerations](#Operations) </span></span>  
 [<span data-ttu-id="28f22-114">Ausführen von Konvertierungen</span><span class="sxs-lookup"><span data-stu-id="28f22-114">Performing conversions</span></span>](#conversions)  
 [<span data-ttu-id="28f22-115">Auswerten von Enumerationswerten</span><span class="sxs-lookup"><span data-stu-id="28f22-115">Parsing enumeration values</span></span>](#parsing)  
 [<span data-ttu-id="28f22-116">Formatieren von Enumerationswerten</span><span class="sxs-lookup"><span data-stu-id="28f22-116">Formatting enumeration values</span></span>](#formatting)  
[<span data-ttu-id="28f22-117">Iteration von Enumerationsmembern</span><span class="sxs-lookup"><span data-stu-id="28f22-117">Iterating enumeration members</span></span>](#iterating)  
[<span data-ttu-id="28f22-118">Nicht exklusive Member und das Flags-Attribut</span><span class="sxs-lookup"><span data-stu-id="28f22-118">Non-exclusive members and the Flags attribute</span></span>](#Flags)  
[<span data-ttu-id="28f22-119">Hinzufügen von Enumerationsmethoden</span><span class="sxs-lookup"><span data-stu-id="28f22-119">Adding enumeration methods</span></span>](#Methods)  
  
<a name="Creating"></a>   
## <a name="creating-an-enumeration-type"></a><span data-ttu-id="28f22-120">Erstellen eines Enumerationstyps</span><span class="sxs-lookup"><span data-stu-id="28f22-120">Creating an enumeration type</span></span>  
 <span data-ttu-id="28f22-121">Programmiersprachen stellen in der Regel eine Syntax zum Deklarieren einer Enumeration bereit, die aus einem Satz benannter Konstanten und deren Werten besteht.</span><span class="sxs-lookup"><span data-stu-id="28f22-121">Programming languages typically provide syntax to declare an enumeration that consists of a set of named constants and their values.</span></span> <span data-ttu-id="28f22-122">Das folgende Beispiel veranschaulicht die Syntax, die von c# verwendet wird, und Visual Basic, um eine Enumeration zu definieren.</span><span class="sxs-lookup"><span data-stu-id="28f22-122">The following example illustrates the syntax used by C# and Visual Basic to define an enumeration.</span></span> <span data-ttu-id="28f22-123">Er erstellt eine Enumeration mit `ArrivalStatus` dem Namen, die drei Member hat: `ArrivalStatus.Early` , `ArrivalStatus.OnTime` und `ArrivalStatus.Late` .</span><span class="sxs-lookup"><span data-stu-id="28f22-123">It creates an enumeration named `ArrivalStatus` that has three members: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, and `ArrivalStatus.Late`.</span></span> <span data-ttu-id="28f22-124">Beachten Sie, dass in beiden Fällen die-Enumeration nicht explizit von erbt <xref:System.Enum> ; die Vererbungs Beziehung wird implizit vom Compiler behandelt.</span><span class="sxs-lookup"><span data-stu-id="28f22-124">Note that in both cases, the enumeration does not explicitly inherit from <xref:System.Enum>; the inheritance relationship is handled implicitly by the compiler.</span></span>  
  
 [!code-csharp[System.Enum.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#1)]
 [!code-vb[System.Enum.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#1)]  
  
> [!WARNING]
>  <span data-ttu-id="28f22-125">Sie sollten nie einen Enumerationstyp erstellen, dessen zugrunde liegender Typ nicht ganzzahlig oder ist <xref:System.Char> .</span><span class="sxs-lookup"><span data-stu-id="28f22-125">You should never create an enumeration type whose underlying type is non-integral or <xref:System.Char>.</span></span> <span data-ttu-id="28f22-126">Obwohl Sie einen solchen Enumerationstyp mithilfe von Reflektion erstellen können, sind Methodenaufrufe, die den resultierenden Typ verwenden, unzuverlässig und können auch zusätzliche Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="28f22-126">Although you can create such an enumeration type by using reflection, method calls that use the resulting type are unreliable and may also throw additional exceptions.</span></span>  
  
<a name="Instantiating"></a>   
## <a name="instantiating-an-enumeration-type"></a><span data-ttu-id="28f22-127">Instanziieren eines Enumerationstyps</span><span class="sxs-lookup"><span data-stu-id="28f22-127">Instantiating an enumeration type</span></span>  
 <span data-ttu-id="28f22-128">Sie können einen Enumerationstyp genau so instanziieren, wie Sie einen anderen Werttyp instanziieren: durch Deklarieren einer Variablen und Zuweisen einer der Konstanten der Enumeration.</span><span class="sxs-lookup"><span data-stu-id="28f22-128">You can instantiate an enumeration type just as you instantiate any other value type: by declaring a variable and assigning one of the enumeration's constants to it.</span></span> <span data-ttu-id="28f22-129">Im folgenden Beispiel wird ein-Wert instanziiert, `ArrivalStatus` dessen Wert ist `ArrivalStatus.OnTime` .</span><span class="sxs-lookup"><span data-stu-id="28f22-129">The following example instantiates an `ArrivalStatus` whose value is `ArrivalStatus.OnTime`.</span></span>  
  
 [!code-csharp[System.Enum.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#2)]
 [!code-vb[System.Enum.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#2)]  
  
 <span data-ttu-id="28f22-130">Sie können einen Enumerationswert auch auf folgende Weise instanziieren:</span><span class="sxs-lookup"><span data-stu-id="28f22-130">You can also instantiate an enumeration value in the following ways:</span></span>  
  
-   <span data-ttu-id="28f22-131">Mithilfe der Funktionen einer bestimmten Programmiersprache zum umwandeln (wie in c#) oder Konvertieren eines ganzzahligen Werts (wie in Visual Basic) in einen Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="28f22-131">By using a particular programming language's features to cast (as in C#) or convert (as in Visual Basic) an integer value to an enumeration value.</span></span> <span data-ttu-id="28f22-132">Im folgenden Beispiel wird ein-Objekt erstellt, `ArrivalStatus` dessen Wert `ArrivalStatus.Early` auf diese Weise ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-132">The following example creates an `ArrivalStatus` object whose value is `ArrivalStatus.Early` in this way.</span></span>  
  
     [!code-csharp[System.Enum.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#4)]
     [!code-vb[System.Enum.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#4)]  
  
-   <span data-ttu-id="28f22-133">Durch Aufrufen des impliziten Parameter losen Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="28f22-133">By calling its implicit parameterless constructor.</span></span> <span data-ttu-id="28f22-134">Wie im folgenden Beispiel gezeigt, ist in diesem Fall der zugrunde liegende Wert der Enumerationsinstanz 0 (null).</span><span class="sxs-lookup"><span data-stu-id="28f22-134">As the following example shows, in this case the underlying value of the enumeration instance is 0.</span></span> <span data-ttu-id="28f22-135">Dies ist jedoch nicht notwendigerweise der Wert einer gültigen Konstante in der-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="28f22-135">However, this is not necessarily the value of a valid constant in the enumeration.</span></span>  
  
     [!code-csharp[System.Enum.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#3)]
     [!code-vb[System.Enum.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#3)]  
  
-   <span data-ttu-id="28f22-136">Durch Aufrufen der- <xref:System.Enum.Parse%2A> Methode oder der- <xref:System.Enum.TryParse%2A> Methode, um eine Zeichenfolge zu analysieren, die den Namen einer Konstanten in der-Enumeration enthält.</span><span class="sxs-lookup"><span data-stu-id="28f22-136">By calling the <xref:System.Enum.Parse%2A> or <xref:System.Enum.TryParse%2A> method to parse a string that contains the name of a constant in the enumeration.</span></span> <span data-ttu-id="28f22-137">Weitere Informationen finden Sie im Abschnitt zum Auswerten von [Enumerationswerten](#parsing) .</span><span class="sxs-lookup"><span data-stu-id="28f22-137">For more information, see the [Parsing Enumeration Values](#parsing) section.</span></span>  
  
-   <span data-ttu-id="28f22-138">Durch Aufrufen der- <xref:System.Enum.ToObject%2A> Methode, um einen ganzzahligen Wert in einen Enumerationstyp zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="28f22-138">By calling the <xref:System.Enum.ToObject%2A> method to convert an integral value to an enumeration type.</span></span> <span data-ttu-id="28f22-139">Weitere Informationen finden Sie im Abschnitt [Durchführen von Konvertierungen](#conversions) .</span><span class="sxs-lookup"><span data-stu-id="28f22-139">For more information, see the [Performing Conversions](#conversions) section.</span></span>  
  
<a name="BestPractices"></a>   
## <a name="enumeration-best-practices"></a><span data-ttu-id="28f22-140">Bewährte Methoden für die Enumeration</span><span class="sxs-lookup"><span data-stu-id="28f22-140">Enumeration best practices</span></span>  
 <span data-ttu-id="28f22-141">Es wird empfohlen, beim Definieren von Enumerationstypen die folgenden bewährten Methoden zu verwenden:</span><span class="sxs-lookup"><span data-stu-id="28f22-141">We recommend that you use the following best practices when you define enumeration types:</span></span>  
  
-   <span data-ttu-id="28f22-142">Wenn Sie keinen Enumerationsmember definiert haben, dessen Wert 0 ist, sollten Sie eine `None` Enumerationskonstante erstellen.</span><span class="sxs-lookup"><span data-stu-id="28f22-142">If you have not defined an enumeration member whose value is 0, consider creating a `None` enumerated constant.</span></span> <span data-ttu-id="28f22-143">Standardmäßig wird der Arbeitsspeicher, der für die-Enumeration verwendet wird, vom Common Language Runtime mit 0 (null) initialisiert.</span><span class="sxs-lookup"><span data-stu-id="28f22-143">By default, the memory used for the enumeration is initialized to zero by the common language runtime.</span></span> <span data-ttu-id="28f22-144">Wenn Sie daher keine Konstante definieren, deren Wert 0 (null) ist, enthält die Enumeration bei der Erstellung einen ungültigen Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-144">Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.</span></span>  
  
-   <span data-ttu-id="28f22-145">Wenn ein offensichtlicher Standardfall vorliegt, den die Anwendung darstellen muss, sollten Sie eine enumerierte Konstante verwenden, deren Wert 0 (null) ist, um Sie darzustellen.</span><span class="sxs-lookup"><span data-stu-id="28f22-145">If there is an obvious default case that your application has to represent, consider using an enumerated constant whose value is zero to represent it.</span></span> <span data-ttu-id="28f22-146">Wenn kein Standardfall vorhanden ist, sollten Sie eine Enumerationskonstante verwenden, deren Wert 0 (null) ist, um den Fall anzugeben, der nicht durch eine der anderen Enumerationskonstanten repräsentiert wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-146">If there is no default case, consider using an enumerated constant whose value is zero to specify the case that is not represented by any of the other enumerated constants.</span></span>  
  
-   <span data-ttu-id="28f22-147">Geben Sie keine Enumerationskonstanten an, die für die zukünftige Verwendung reserviert sind.</span><span class="sxs-lookup"><span data-stu-id="28f22-147">Do not specify enumerated constants that are reserved for future use.</span></span>  
  
-   <span data-ttu-id="28f22-148">Wenn Sie eine Methode oder Eigenschaft definieren, die eine Enumerationskonstante als Wert annimmt, sollten Sie den Wert validieren.</span><span class="sxs-lookup"><span data-stu-id="28f22-148">When you define a method or property that takes an enumerated constant as a value, consider validating the value.</span></span> <span data-ttu-id="28f22-149">Der Grund hierfür ist, dass Sie einen numerischen Wert in den Enumerationstyp umwandeln können, auch wenn dieser numerische Wert nicht in der-Enumeration definiert ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-149">The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.</span></span>  
  
 <span data-ttu-id="28f22-150">Weitere bewährte Methoden für Enumerationstypen, deren Konstanten Bitfelder sind, sind im Abschnitt [nicht exklusive Member und im Flags-Attribut](#Flags) aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="28f22-150">Additional best practices for enumeration types whose constants are bit fields are listed in the [Non-Exclusive Members and the Flags Attribute](#Flags) section.</span></span>  
  
<a name="Operations"></a>   
## <a name="performing-operations-with-enumerations"></a><span data-ttu-id="28f22-151">Ausführen von Vorgängen mit Enumerationen</span><span class="sxs-lookup"><span data-stu-id="28f22-151">Performing operations with enumerations</span></span>  
 <span data-ttu-id="28f22-152">Sie können keine neuen Methoden definieren, wenn Sie eine Enumeration erstellen.</span><span class="sxs-lookup"><span data-stu-id="28f22-152">You cannot define new methods when you are creating an enumeration.</span></span> <span data-ttu-id="28f22-153">Ein Enumerationstyp erbt jedoch einen kompletten Satz statischer Methoden und Instanzmethoden von der- <xref:System.Enum> Klasse.</span><span class="sxs-lookup"><span data-stu-id="28f22-153">However, an enumeration type inherits a complete set of static and instance methods from the <xref:System.Enum> class.</span></span> <span data-ttu-id="28f22-154">In den folgenden Abschnitten werden die meisten dieser Methoden sowie einige andere Methoden behandelt, die häufig beim Arbeiten mit Enumerationswerten verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="28f22-154">The following sections survey most of these methods, in addition to several other methods that are commonly used when working with enumeration values.</span></span>  
  
<a name="conversions"></a>   
### <a name="performing-conversions"></a><span data-ttu-id="28f22-155">Ausführen von Konvertierungen</span><span class="sxs-lookup"><span data-stu-id="28f22-155">Performing conversions</span></span>  
 <span data-ttu-id="28f22-156">Sie können mithilfe eines Umwandlungs-(in c#) oder eines Konvertierungs Operators (in Visual Basic) zwischen einem Enumerationsmember und dessen zugrunde liegendem Typ konvertieren.</span><span class="sxs-lookup"><span data-stu-id="28f22-156">You can convert between an enumeration member and its underlying type by using a casting (in C#) or conversion (in Visual Basic) operator.</span></span> <span data-ttu-id="28f22-157">Im folgenden Beispiel werden Umwandlungs-oder Konvertierungs Operatoren verwendet, um sowohl von einer Ganzzahl in einen Enumerationswert als auch von einem Enumerationswert in eine ganze Zahl konvertiert werden</span><span class="sxs-lookup"><span data-stu-id="28f22-157">The following example uses casting or conversion operators to perform conversions both from an integer to an enumeration value and from an enumeration value to an integer.</span></span>  
  
 [!code-csharp[System.Enum.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#5)]
 [!code-vb[System.Enum.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#5)]  
  
 <span data-ttu-id="28f22-158">Die- <xref:System.Enum> Klasse enthält auch eine- <xref:System.Enum.ToObject%2A> Methode, die einen Wert eines beliebigen ganzzahligen Typs in einen Enumerationswert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="28f22-158">The <xref:System.Enum> class also includes a <xref:System.Enum.ToObject%2A> method that converts a value of any integral type to an enumeration value.</span></span> <span data-ttu-id="28f22-159">Im folgenden Beispiel wird die- <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> Methode verwendet, um eine <xref:System.Int32> in einen-Wert zu konvertieren `ArrivalStatus` .</span><span class="sxs-lookup"><span data-stu-id="28f22-159">The following example uses the <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method to convert an <xref:System.Int32> to an `ArrivalStatus` value.</span></span> <span data-ttu-id="28f22-160">Beachten Sie, dass, da der <xref:System.Enum.ToObject%2A> einen Wert des Typs zurückgibt <xref:System.Object> , die Verwendung eines Umwandlungs-oder Konvertierungs Operators möglicherweise trotzdem notwendig ist, um das Objekt in den Enumerationstyp umzuwandeln.</span><span class="sxs-lookup"><span data-stu-id="28f22-160">Note that, because the <xref:System.Enum.ToObject%2A> returns a value of type <xref:System.Object>, the use of a casting or conversion operator may still be necessary to cast the object to the enumeration type.</span></span>  
  
 [!code-csharp[System.Enum.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#6)]
 [!code-vb[System.Enum.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#6)]  
  
 <span data-ttu-id="28f22-161">Wenn eine Ganzzahl in einen Enumerationswert umgerechnet wird, ist es möglich, einen Wert zuzuweisen, der eigentlich kein Member der-Enumeration ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-161">When converting an integer to an enumeration value, it is possible to assign a value that is not actually a member of the enumeration.</span></span> <span data-ttu-id="28f22-162">Um dies zu verhindern, können Sie die ganze Zahl an die-Methode übergeben, <xref:System.Enum.IsDefined%2A> bevor Sie die Konvertierung durchführen.</span><span class="sxs-lookup"><span data-stu-id="28f22-162">To prevent this, you can pass the integer to the <xref:System.Enum.IsDefined%2A> method before performing the conversion.</span></span> <span data-ttu-id="28f22-163">Im folgenden Beispiel wird diese Methode verwendet, um zu bestimmen, ob die Elemente in einem Array von ganzzahligen Werten in-Werte konvertiert werden können `ArrivalStatus` .</span><span class="sxs-lookup"><span data-stu-id="28f22-163">The following example uses this method to determine whether the elements in an array of integer values can be converted to `ArrivalStatus` values.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion1.cs" interactive="try-dotnet" id="Snippet7":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion1.vb" id="Snippet7"::: 
  
 <span data-ttu-id="28f22-164">Obwohl die- <xref:System.Enum> Klasse explizite Schnittstellen Implementierungen der- <xref:System.IConvertible> Schnittstelle zum Konvertieren von einem Enumerationswert in einen ganzzahligen Typ bereitstellt, sollten Sie die Methoden der- <xref:System.Convert> Klasse, wie z <xref:System.Convert.ToInt32%2A> . b., verwenden, um diese Konvertierungen auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28f22-164">Although the <xref:System.Enum> class provides explicit interface implementations of the <xref:System.IConvertible> interface for converting from an enumeration value to an integral type, you should use the methods of the <xref:System.Convert> class, such as <xref:System.Convert.ToInt32%2A>, to perform these conversions.</span></span> <span data-ttu-id="28f22-165">Im folgenden Beispiel wird veranschaulicht, wie Sie die- <xref:System.Enum.GetUnderlyingType%2A> Methode zusammen mit der-Methode verwenden können <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> , um einen Enumerationswert in den zugrunde liegenden Typ zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="28f22-165">The following example illustrates how you can use the <xref:System.Enum.GetUnderlyingType%2A> method along with the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method to convert an enumeration value to its underlying type.</span></span> <span data-ttu-id="28f22-166">Beachten Sie, dass dieses Beispiel nicht erfordert, dass der zugrunde liegende Typ der Enumeration zur Kompilierzeit bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-166">Note that this example does not require the underlying type of the enumeration to be known at compile time.</span></span>  
  
 [!code-csharp[System.Enum.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion2.cs#8)]
 [!code-vb[System.Enum.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion2.vb#8)]  
  
<a name="parsing"></a>   
### <a name="parsing-enumeration-values"></a><span data-ttu-id="28f22-167">Auswerten von Enumerationswerten</span><span class="sxs-lookup"><span data-stu-id="28f22-167">Parsing enumeration values</span></span>  
 <span data-ttu-id="28f22-168">Die <xref:System.Enum.Parse%2A> -Methode und die- <xref:System.Enum.TryParse%2A> Methode ermöglichen es Ihnen, die Zeichen folgen Darstellung eines Enumerationswerts in diesen Wert zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="28f22-168">The <xref:System.Enum.Parse%2A> and <xref:System.Enum.TryParse%2A> methods allow you to convert the string representation of an enumeration value to that value.</span></span> <span data-ttu-id="28f22-169">Die Zeichen folgen Darstellung kann entweder der Name oder der zugrunde liegende Wert einer Enumerationskonstante sein.</span><span class="sxs-lookup"><span data-stu-id="28f22-169">The string representation can be either the name or the underlying value of an enumeration constant.</span></span> <span data-ttu-id="28f22-170">Beachten Sie, dass die-Methoden zur Verarbeitung von Zeichen folgen Darstellungen von Zahlen, die keine Member einer bestimmten Enumeration sind, erfolgreich konvertieren können, wenn die Zeichen folgen in einen Wert des zugrunde liegenden Typs der Enumeration konvertiert werden können.</span><span class="sxs-lookup"><span data-stu-id="28f22-170">Note that the parsing methods will successfully convert string representations of numbers that are not members of a particular enumeration if the strings can be converted to a value of the enumeration's underlying type.</span></span> <span data-ttu-id="28f22-171">Um dies zu verhindern, <xref:System.Enum.IsDefined%2A> kann die-Methode aufgerufen werden, um sicherzustellen, dass das Ergebnis der-Methode für die-Methode ein gültiger-Enumerationswert ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-171">To prevent this, the <xref:System.Enum.IsDefined%2A> method can be called to ensure that the result of the parsing method is a valid enumeration value.</span></span> <span data-ttu-id="28f22-172">Dieses Verfahren wird in diesem Beispiel veranschaulicht und zeigt Aufrufe der <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> -Methode und der- <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="28f22-172">The example illustrates this approach and demonstrates calls to both the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> and <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="28f22-173">Beachten Sie, dass die nicht generische-Methode ein-Objekt zurückgibt, das Sie möglicherweise umwandeln (in c#) oder (in Visual Basic) in den entsprechenden Enumerationstyp konvertieren müssen.</span><span class="sxs-lookup"><span data-stu-id="28f22-173">Note that the non-generic parsing method returns an object that you may have to cast (in C#) or convert (in Visual Basic) to the appropriate enumeration type.</span></span>  
  
 [!code-csharp[System.Enum.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classparse1.cs#9)]
 [!code-vb[System.Enum.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classparse1.vb#9)]  
  
<a name="formatting"></a>   
### <a name="formatting-enumeration-values"></a><span data-ttu-id="28f22-174">Formatieren von Enumerationswerten</span><span class="sxs-lookup"><span data-stu-id="28f22-174">Formatting enumeration values</span></span>  
 <span data-ttu-id="28f22-175">Sie können Enumerationswerte in ihre Zeichen folgen Darstellungen konvertieren, indem Sie die statische- <xref:System.Enum.Format%2A> Methode sowie die über Ladungen der <xref:System.Enum.ToString%2A> Instanzmethode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="28f22-175">You can convert enumeration values to their string representations by calling the static <xref:System.Enum.Format%2A> method, as well as the overloads of the instance <xref:System.Enum.ToString%2A> method.</span></span> <span data-ttu-id="28f22-176">Sie können eine Format Zeichenfolge verwenden, um die exakte Art und Weise zu steuern, in der ein Enumerationswert als Zeichenfolge dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-176">You can use a format string to control the precise way in which an enumeration value is represented as a string.</span></span> <span data-ttu-id="28f22-177">Weitere Informationen finden Sie unter [Enumerationsformatzeichenfolgen](/dotnet/standard/base-types/enumeration-format-strings).</span><span class="sxs-lookup"><span data-stu-id="28f22-177">For more information, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span> <span data-ttu-id="28f22-178">Im folgenden Beispiel wird jede der unterstützten Enumerationsformatzeichenfolgen ("g" oder "g", "d" oder "d", "x" oder "x", "f" oder "f") verwendet, um einen Member der- `ArrivalStatus` Enumeration in seine Zeichen folgen Darstellungen zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="28f22-178">The following example uses each of the supported enumeration format strings ("G" or "g", "D" or "d", "X" or "x", and "F" or "f" ) to convert a member of the `ArrivalStatus` enumeration to its string representations.</span></span>  
  
 [!code-csharp[System.Enum.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classformat1.cs#10)]
 [!code-vb[System.Enum.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classformat1.vb#10)]  
  
<a name="iterating"></a>   
### <a name="iterating-enumeration-members"></a><span data-ttu-id="28f22-179">Iteration von Enumerationsmembern</span><span class="sxs-lookup"><span data-stu-id="28f22-179">Iterating enumeration members</span></span>  
 <span data-ttu-id="28f22-180">Der- <xref:System.Enum> Typ implementiert nicht die- <xref:System.Collections.IEnumerable> oder- <xref:System.Collections.Generic.IEnumerable%601> Schnittstelle, die es Ihnen ermöglicht, Member einer Auflistung zu durchlaufen, indem Sie ein- `foreach` Konstrukt (in c#) oder ein- `For Each` Konstrukt (in Visual Basic) verwenden.</span><span class="sxs-lookup"><span data-stu-id="28f22-180">The <xref:System.Enum> type does not implement the <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601> interface, which would enable you to iterate members of a collection by using a `foreach` (in C#) or `For Each` (in Visual Basic) construct.</span></span> <span data-ttu-id="28f22-181">Allerdings können Sie Member auf zwei Arten auflisten.</span><span class="sxs-lookup"><span data-stu-id="28f22-181">However, you can enumerate members in either of two ways.</span></span>  
  
-   <span data-ttu-id="28f22-182">Sie können die- <xref:System.Enum.GetNames%2A> Methode aufrufen, um ein Zeichen folgen Array mit den Namen der Enumerationsmember abzurufen.</span><span class="sxs-lookup"><span data-stu-id="28f22-182">You can call the <xref:System.Enum.GetNames%2A> method to retrieve a string array containing the names of the enumeration members.</span></span> <span data-ttu-id="28f22-183">Als nächstes können Sie für jedes Element des Zeichen folgen Arrays die- <xref:System.Enum.Parse%2A> Methode zum Konvertieren der Zeichenfolge in den entsprechenden-Enumerationswert aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="28f22-183">Next, for each element of the string array, you can call the <xref:System.Enum.Parse%2A> method to convert the string to its equivalent enumeration value.</span></span> <span data-ttu-id="28f22-184">Dieser Ansatz wird anhand des folgenden Beispiels veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="28f22-184">The following example illustrates this approach.</span></span>  
  
     [!code-csharp[System.Enum.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#11)]
     [!code-vb[System.Enum.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#11)]  
  
-   <span data-ttu-id="28f22-185">Sie können die- <xref:System.Enum.GetValues%2A> Methode aufrufen, um ein Array abzurufen, das die zugrunde liegenden Werte in der-Enumeration enthält.</span><span class="sxs-lookup"><span data-stu-id="28f22-185">You can call the <xref:System.Enum.GetValues%2A> method to retrieve an array that contains the underlying values in the enumeration.</span></span> <span data-ttu-id="28f22-186">Als nächstes können Sie für jedes Element des Arrays die- <xref:System.Enum.ToObject%2A> Methode zum Konvertieren der Ganzzahl in den entsprechenden-Enumerationswert aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="28f22-186">Next, for each element of the array, you can call the <xref:System.Enum.ToObject%2A> method to convert the integer to its equivalent enumeration value.</span></span> <span data-ttu-id="28f22-187">Dieser Ansatz wird anhand des folgenden Beispiels veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="28f22-187">The following example illustrates this approach.</span></span>  
  
     [!code-csharp[System.Enum.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#12)]
     [!code-vb[System.Enum.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#12)]  
  
<a name="Flags"></a>   
## <a name="non-exclusive-members-and-the-flags-attribute"></a><span data-ttu-id="28f22-188">Nicht exklusive Member und das Flags-Attribut</span><span class="sxs-lookup"><span data-stu-id="28f22-188">Non-exclusive members and the Flags attribute</span></span>  
 <span data-ttu-id="28f22-189">Eine Enumeration wird häufig verwendet, um einen Satz von sich gegenseitig ausschließenden Werten darzustellen.</span><span class="sxs-lookup"><span data-stu-id="28f22-189">One common use of an enumeration is to represent a set of mutually exclusive values.</span></span> <span data-ttu-id="28f22-190">Beispielsweise kann eine `ArrivalStatus` Instanz den Wert `Early` , `OnTime` oder haben `Late` .</span><span class="sxs-lookup"><span data-stu-id="28f22-190">For example, an `ArrivalStatus` instance can have a value of `Early`, `OnTime`, or `Late`.</span></span> <span data-ttu-id="28f22-191">Es ist nicht sinnvoll, dass der Wert einer `ArrivalStatus` Instanz mehr als eine Enumerationskonstante widerspiegelt.</span><span class="sxs-lookup"><span data-stu-id="28f22-191">It makes no sense for the value of an `ArrivalStatus` instance to reflect more than one enumeration constant.</span></span>  
  
 <span data-ttu-id="28f22-192">In anderen Fällen kann der Wert eines Enumerationsobjekt jedoch mehrere Enumerationsmember enthalten, und jedes Element stellt ein Bitfeld im Enumerationswert dar.</span><span class="sxs-lookup"><span data-stu-id="28f22-192">In other cases, however, the value of an enumeration object can include multiple enumeration members, and each member represents a bit field in the enumeration value.</span></span> <span data-ttu-id="28f22-193">Das- <xref:System.FlagsAttribute> Attribut kann verwendet werden, um anzugeben, dass die Enumeration aus Bitfeldern besteht.</span><span class="sxs-lookup"><span data-stu-id="28f22-193">The <xref:System.FlagsAttribute> attribute can be used to indicate that the enumeration consists of bit fields.</span></span> <span data-ttu-id="28f22-194">Beispielsweise kann eine Enumeration `Pets` mit dem Namen verwendet werden, um die Arten der Haustiere in einem Haushalt anzugeben.</span><span class="sxs-lookup"><span data-stu-id="28f22-194">For example, an enumeration named `Pets` might be used to indicate the kinds of pets in a household.</span></span> <span data-ttu-id="28f22-195">Sie kann wie folgt definiert werden.</span><span class="sxs-lookup"><span data-stu-id="28f22-195">It can be defined as follows.</span></span>  
  
 [!code-csharp[System.Enum.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#13)]
 [!code-vb[System.Enum.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#13)]  
  
 <span data-ttu-id="28f22-196">Die- `Pets` Enumeration kann dann wie im folgenden Beispiel gezeigt verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="28f22-196">The `Pets` enumeration can then be used as shown in the following example.</span></span>  
  
 [!code-csharp[System.Enum.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#14)]
 [!code-vb[System.Enum.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#14)]  
  
 <span data-ttu-id="28f22-197">Die folgenden bewährten Methoden sollten beim Definieren einer bitweisen Enumeration und Anwenden des- <xref:System.FlagsAttribute> Attributs verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="28f22-197">The following best practices should be used when defining a bitwise enumeration and applying the <xref:System.FlagsAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="28f22-198">Verwenden <xref:System.FlagsAttribute> Sie das benutzerdefinierte-Attribut nur für eine Enumeration, wenn eine bitweise-Operation (and, or, Exclusive oder) für einen numerischen Wert ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-198">Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.</span></span>  
  
-   <span data-ttu-id="28f22-199">Definieren von Enumerationskonstanten in den zwei Mächten, d. h. 1, 2, 4, 8 usw.</span><span class="sxs-lookup"><span data-stu-id="28f22-199">Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on.</span></span> <span data-ttu-id="28f22-200">Dies bedeutet, dass sich die einzelnen Flags in kombinierten Enumerationskonstanten nicht überlappen.</span><span class="sxs-lookup"><span data-stu-id="28f22-200">This means the individual flags in combined enumeration constants do not overlap.</span></span>  
  
-   <span data-ttu-id="28f22-201">Erstellen Sie ggf. eine Enumerationskonstante für häufig verwendete Flag-Kombinationen.</span><span class="sxs-lookup"><span data-stu-id="28f22-201">Consider creating an enumerated constant for commonly used flag combinations.</span></span> <span data-ttu-id="28f22-202">Wenn Sie z. b. eine Enumeration für Datei-e/a-Vorgänge verwenden, die die Enumerationskonstanten `Read = 1` und enthält `Write = 2` , sollten Sie die Enumerationskonstante erstellen `ReadWrite = Read OR Write` , die die `Read` -und- `Write` Flags kombiniert.</span><span class="sxs-lookup"><span data-stu-id="28f22-202">For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags.</span></span> <span data-ttu-id="28f22-203">Außerdem kann der bitweise OR-Vorgang, der zum Kombinieren der Flags verwendet wird, in einigen Fällen als erweitertes Konzept angesehen werden, die für einfache Aufgaben nicht erforderlich sein sollten.</span><span class="sxs-lookup"><span data-stu-id="28f22-203">In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.</span></span>  
  
-   <span data-ttu-id="28f22-204">Gehen Sie vorsichtig vor, wenn Sie eine negative Zahl als Flag-Enumerationskonstante definieren, da viele Flagpositionen auf 1 festgelegt werden können, was den Code verwirrend machen und Codierungsfehler fördern kann.</span><span class="sxs-lookup"><span data-stu-id="28f22-204">Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.</span></span>  
  
-   <span data-ttu-id="28f22-205">Eine bequeme Methode, um zu testen, ob ein Flag in einem numerischen Wert festgelegt ist, ist das aufzurufen der <xref:System.Enum.HasFlag%2A> Instanzmethode, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="28f22-205">A convenient way to test whether a flag is set in a numeric value is to call the instance <xref:System.Enum.HasFlag%2A> method, as shown in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#15)]
     [!code-vb[System.Enum.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#15)]  
  
     <span data-ttu-id="28f22-206">Dies entspricht der Durchführung einer bitweisen and-Operation zwischen dem numerischen Wert und der-Flag-Enumerationskonstante, die alle Bits im numerischen Wert auf 0 (null) festlegt, die nicht dem-Flag entsprechen, und dann testet, ob das Ergebnis dieses Vorgangs gleich der-Flag-Enumerationskonstante ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-206">It is equivalent to performing a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, and then testing whether the result of that operation is equal to the flag enumerated constant.</span></span> <span data-ttu-id="28f22-207">Dies wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="28f22-207">This is illustrated in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#16)]
     [!code-vb[System.Enum.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#16)]  
  
-   <span data-ttu-id="28f22-208">Verwenden Sie `None` als Namen der-Flag-Enumerationskonstante, deren Wert 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-208">Use `None` as the name of the flag enumerated constant whose value is zero.</span></span> <span data-ttu-id="28f22-209">Sie können die `None` Enumerationskonstante nicht in einer bitweisen and-Operation verwenden, um auf ein Flag zu testen, da das Ergebnis immer 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-209">You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero.</span></span> <span data-ttu-id="28f22-210">Sie können jedoch einen logischen, nicht einen bitweisen Vergleich zwischen dem numerischen Wert und der `None` Enumerationskonstante ausführen, um zu bestimmen, ob Bits im numerischen Wert festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="28f22-210">However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set.</span></span> <span data-ttu-id="28f22-211">Dies wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="28f22-211">This is illustrated in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#17)]
     [!code-vb[System.Enum.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#17)]  
  
-   <span data-ttu-id="28f22-212">Definieren Sie keinen Enumerationswert ausschließlich so, dass er den Status der Enumeration widerspiegelt.</span><span class="sxs-lookup"><span data-stu-id="28f22-212">Do not define an enumeration value solely to mirror the state of the enumeration itself.</span></span> <span data-ttu-id="28f22-213">Definieren Sie z. b. keine Enumerationskonstante, die nur das Ende der Enumeration kennzeichnet.</span><span class="sxs-lookup"><span data-stu-id="28f22-213">For example, do not define an enumerated constant that merely marks the end of the enumeration.</span></span> <span data-ttu-id="28f22-214">Wenn Sie den letzten Wert der Enumeration ermitteln müssen, überprüfen Sie diesen Wert explizit.</span><span class="sxs-lookup"><span data-stu-id="28f22-214">If you need to determine the last value of the enumeration, check for that value explicitly.</span></span> <span data-ttu-id="28f22-215">Außerdem können Sie eine Bereichs Überprüfung für die erste und letzte Enumerationskonstante ausführen, wenn alle Werte innerhalb des Bereichs gültig sind.</span><span class="sxs-lookup"><span data-stu-id="28f22-215">In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.</span></span>  
  
<a name="Methods"></a>   
## <a name="adding-enumeration-methods"></a><span data-ttu-id="28f22-216">Hinzufügen von Enumerationsmethoden</span><span class="sxs-lookup"><span data-stu-id="28f22-216">Adding enumeration methods</span></span>  
 <span data-ttu-id="28f22-217">Da Enumerationstypen durch Sprachstrukturen definiert werden, wie z. b `enum` . (c#) und `Enum` (Visual Basic), können Sie keine benutzerdefinierten Methoden für einen Enumerationstyp definieren, der nicht von der-Klasse geerbt wurde <xref:System.Enum> .</span><span class="sxs-lookup"><span data-stu-id="28f22-217">Because enumeration types are defined by language structures, such as `enum` (C#) and `Enum` (Visual Basic), you cannot define custom methods for an enumeration type other than those methods inherited from the <xref:System.Enum> class.</span></span>  <span data-ttu-id="28f22-218">Sie können jedoch Erweiterungs Methoden verwenden, um einem bestimmten Enumerationstyp Funktionalität hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="28f22-218">However, you can use extension methods to add functionality to a particular enumeration type.</span></span>  
  
 <span data-ttu-id="28f22-219">Im folgenden Beispiel stellt die `Grades`-Enumeration die möglichen Noten in Buchstaben dar, die ein Schüler im Unterricht erhalten kann.</span><span class="sxs-lookup"><span data-stu-id="28f22-219">In the following example, the `Grades` enumeration represents the possible letter grades that a student may receive in a class.</span></span> <span data-ttu-id="28f22-220">Eine Erweiterungsmethode mit dem Namen `Passing` wird dem `Grades`-Typ hinzugefügt, sodass jede Instanz dieses Typs nun „weiß“, ob sie eine Note darstellt, mit der der Schüler bestanden hat.</span><span class="sxs-lookup"><span data-stu-id="28f22-220">An extension method named `Passing` is added to the `Grades` type so that each instance of that type now "knows" whether it represents a passing grade or not.</span></span>       <span data-ttu-id="28f22-221">Die- `Extensions` Klasse enthält auch eine statische Variable mit Lese-/Schreibzugriff, die die minimale Übergabe Qualität definiert.</span><span class="sxs-lookup"><span data-stu-id="28f22-221">The `Extensions` class also contains a static read-write variable that defines the minimum passing grade.</span></span> <span data-ttu-id="28f22-222">Der Rückgabewert der `Passing` Erweiterungsmethode gibt den aktuellen Wert dieser Variablen an.</span><span class="sxs-lookup"><span data-stu-id="28f22-222">The return value of the `Passing` extension method reflects the current value of that variable.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/Extensions.cs" interactive="try-dotnet" id="Snippet18":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/Extensions.vb" id="Snippet18"::: 
  
   
  
## Examples  
 <span data-ttu-id="28f22-223">Das folgende Beispiel veranschaulicht die Verwendung einer Enumeration zur Darstellung benannter Werte und eine weitere Enumeration zur Darstellung benannter Bitfelder.</span><span class="sxs-lookup"><span data-stu-id="28f22-223">The following example demonstrates using an enumeration to represent named values and another enumeration to represent named bit fields.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/enummain/CPP/EnumMain.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/enummain/CS/EnumMain.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/enummain/VB/EnumMain.vb" id="Snippet1":::
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="28f22-224">Dieser Typ ist threadsicher.</span><span class="sxs-lookup"><span data-stu-id="28f22-224">This type is thread safe.</span></span></threadsafe>
    <altmember cref="T:System.ValueType" />
    <altmember cref="T:System.FlagsAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Enum ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Enum();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28f22-225">Initialisiert eine neue Instanz der <see cref="T:System.Enum" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="28f22-225">Initializes a new instance of the <see cref="T:System.Enum" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (target As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="enum.CompareTo target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="28f22-226">Ein Vergleichsobjekt oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-226">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="28f22-227">Vergleicht diese Instanz mit einem angegebenen Objekt und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</span><span class="sxs-lookup"><span data-stu-id="28f22-227">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="28f22-228">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und dem Wert von <paramref name="target" /> angibt.</span><span class="sxs-lookup"><span data-stu-id="28f22-228">A signed number that indicates the relative values of this instance and <paramref name="target" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="28f22-229">Wert</span><span class="sxs-lookup"><span data-stu-id="28f22-229">Value</span></span> 
 </term><description> <span data-ttu-id="28f22-230">Bedeutung</span><span class="sxs-lookup"><span data-stu-id="28f22-230">Meaning</span></span> 
 </description></listheader><item><term> <span data-ttu-id="28f22-231">Kleiner als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="28f22-231">Less than zero</span></span> 
 </term><description> <span data-ttu-id="28f22-232">Der Wert dieser Instanz ist kleiner als der Wert von <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-232">The value of this instance is less than the value of <paramref name="target" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="28f22-233">Zero</span><span class="sxs-lookup"><span data-stu-id="28f22-233">Zero</span></span> 
 </term><description> <span data-ttu-id="28f22-234">Der Wert dieser Instanz ist gleich dem Wert von <paramref name="target" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-234">The value of this instance is equal to the value of <paramref name="target" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="28f22-235">Größer als 0 (null)</span><span class="sxs-lookup"><span data-stu-id="28f22-235">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="28f22-236">Der Wert dieser Instanz ist größer als der Wert von <paramref name="target" /> , oder <paramref name="target" /> ist <see langword="null" /> .</span><span class="sxs-lookup"><span data-stu-id="28f22-236">The value of this instance is greater than the value of <paramref name="target" />, or <paramref name="target" /> is <see langword="null" />.</span></span></description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="28f22-237">Im folgenden Beispiel wird die Verwendung von `CompareTo` im Kontext von veranschaulicht `Enum` .</span><span class="sxs-lookup"><span data-stu-id="28f22-237">The following example illustrates the use of `CompareTo` in the context of `Enum`.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/enumcompareto/CPP/EnumCompareTo.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/enumcompareto/CS/EnumCompareTo.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/enumcompareto/VB/EnumCompareTo.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-238"><paramref name="target" /> und diese Instanz weisen nicht den gleichen Typ auf.</span><span class="sxs-lookup"><span data-stu-id="28f22-238"><paramref name="target" /> and this instance are not the same type.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28f22-239">Diese Instanz ist nicht vom Typ <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" /> oder <see cref="T:System.UInt64" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-239">This instance is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />.</span></span></exception>
        <altmember cref="M:System.Enum.Equals(System.Object)" />
        <exception cref="T:System.NullReferenceException"><span data-ttu-id="28f22-240">Diese Instanz ist NULL.</span><span class="sxs-lookup"><span data-stu-id="28f22-240">This instance is null.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="enum.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="28f22-241">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-241">An object to compare with this instance, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="28f22-242">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-242">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="28f22-243"><see langword="true" />, wenn <paramref name="obj" /> ein Enumerationswert des gleichen Typs und mit dem gleichen zugrunde liegenden Wert wie diese Instanz ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-243"><see langword="true" /> if <paramref name="obj" /> is an enumeration value of the same type and with the same underlying value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-244">Die- <xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType> Methode überschreibt <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> , um zu definieren, wie Enumerationsmember auf Gleichheit ausgewertet werden.</span><span class="sxs-lookup"><span data-stu-id="28f22-244">The <xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType> method overrides <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> to define how enumeration members are evaluated for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28f22-245">Im folgenden Beispiel wird die Verwendung der <xref:System.Enum.Equals%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="28f22-245">The following example illustrates the use of the <xref:System.Enum.Equals%2A> method.</span></span>  
  
 [!code-cpp[enumequals#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumequals/CPP/EnumEquals.cpp#1)]
 [!code-csharp[enumequals#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumequals/CS/EnumEquals.cs#1)]
 [!code-vb[enumequals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumequals/VB/EnumEquals.vb#1)]  
  
 <span data-ttu-id="28f22-246">Im folgenden Beispiel werden zwei Enumerationstypen definiert: `SledDog` und `WorkDog` .</span><span class="sxs-lookup"><span data-stu-id="28f22-246">The following example defines two enumeration types, `SledDog` and `WorkDog`.</span></span> <span data-ttu-id="28f22-247">Die `SledDog` -Enumeration verfügt über zwei Member, `SledDog.AlaskanMalamute` und `SledDog.Malamute` , die über denselben zugrunde liegenden Wert verfügen.</span><span class="sxs-lookup"><span data-stu-id="28f22-247">The `SledDog` enumeration has two members, `SledDog.AlaskanMalamute` and `SledDog.Malamute`, that have the same underlying value.</span></span> <span data-ttu-id="28f22-248">Der-Methodenaufrufe <xref:System.Enum.Equals%2A> gibt an, dass diese Werte gleich sind, da die zugrunde liegenden Werte identisch sind.</span><span class="sxs-lookup"><span data-stu-id="28f22-248">The call to the <xref:System.Enum.Equals%2A> method indicates that these values are equal because their underlying values are the same.</span></span> <span data-ttu-id="28f22-249">Die `SledDog.Malamute` -und-Member `WorkDog.Newfoundland` haben denselben zugrunde liegenden Wert, obwohl Sie verschiedene Enumerationstypen darstellen.</span><span class="sxs-lookup"><span data-stu-id="28f22-249">The `SledDog.Malamute` and `WorkDog.Newfoundland` members have the same underlying value, although they represent different enumeration types.</span></span> <span data-ttu-id="28f22-250">Ein Aufrufder- <xref:System.Enum.Equals%2A> Methode gibt an, dass diese Werte nicht gleich sind.</span><span class="sxs-lookup"><span data-stu-id="28f22-250">A call to the <xref:System.Enum.Equals%2A> method indicates that these values are not equal.</span></span>  
  
 [!code-csharp[System.Enum.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.equals/cs/enumequals.cs#1)]
 [!code-vb[System.Enum.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.equals/vb/enumequals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Enum.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (Type enumType, object value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.Type enumType, object value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Format(System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (enumType As Type, value As Object, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(Type ^ enumType, System::Object ^ value, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Format : Type * obj * string -&gt; string" Usage="System.Enum.Format (enumType, value, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-251">Der Enumerationstyp des zu konvertierenden Werts.</span><span class="sxs-lookup"><span data-stu-id="28f22-251">The enumeration type of the value to convert.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-252">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-252">The value to convert.</span></span></param>
        <param name="format"><span data-ttu-id="28f22-253">Das zu verwendende Ausgabeformat.</span><span class="sxs-lookup"><span data-stu-id="28f22-253">The output format to use.</span></span></param>
        <summary><span data-ttu-id="28f22-254">Konvertiert den angegebenen Wert eines angegebenen Enumerationstyps unter Berücksichtigung des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="28f22-254">Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.</span></span></summary>
        <returns><span data-ttu-id="28f22-255">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-255">A string representation of <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-256">In der folgenden Tabelle werden die gültigen Werte für den- `format` Parameter angezeigt.</span><span class="sxs-lookup"><span data-stu-id="28f22-256">The following table shows the valid values for the `format` parameter.</span></span>  
  
|<span data-ttu-id="28f22-257">Format</span><span class="sxs-lookup"><span data-stu-id="28f22-257">Format</span></span>|<span data-ttu-id="28f22-258">BESCHREIBUNG</span><span class="sxs-lookup"><span data-stu-id="28f22-258">Description</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="28f22-259">"G" oder "g"</span><span class="sxs-lookup"><span data-stu-id="28f22-259">"G" or "g"</span></span>|<span data-ttu-id="28f22-260">Wenn `value` gleich einer benannten Enumerationskonstante ist, wird der Name dieser Konstante zurückgegeben; andernfalls wird die Dezimal Entsprechung von `value` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="28f22-260">If `value` is equal to a named enumerated constant, the name of that constant is returned; otherwise, the decimal equivalent of `value` is returned.</span></span><br /><br /> <span data-ttu-id="28f22-261">Angenommen, die einzige Enumerationskonstante hat den Namen "Red", und der Wert ist "1".</span><span class="sxs-lookup"><span data-stu-id="28f22-261">For example, suppose the only enumerated constant is named Red, and its value is 1.</span></span> <span data-ttu-id="28f22-262">Wenn `value` als 1 angegeben wird, gibt dieses Format "Red" zurück.</span><span class="sxs-lookup"><span data-stu-id="28f22-262">If `value` is specified as 1, this format returns "Red".</span></span> <span data-ttu-id="28f22-263">Wenn jedoch `value` als 2 angegeben wird, gibt dieses Format "2" zurück.</span><span class="sxs-lookup"><span data-stu-id="28f22-263">However, if `value` is specified as 2, this format returns "2".</span></span><br /><br /> <span data-ttu-id="28f22-264">- oder -</span><span class="sxs-lookup"><span data-stu-id="28f22-264">-or-</span></span><br /><br /> <span data-ttu-id="28f22-265">Wenn das <xref:System.FlagsAttribute> benutzerdefinierte Attribut auf die-Enumeration angewendet wird, `value` wird als Bitfeld behandelt, das ein oder mehrere Flags enthält, die aus einem oder mehreren Bits bestehen.</span><span class="sxs-lookup"><span data-stu-id="28f22-265">If the <xref:System.FlagsAttribute> custom attribute is applied to the enumeration, `value` is treated as a bit field that contains one or more flags that consist of one or more bits.</span></span><br /><br /> <span data-ttu-id="28f22-266">Wenn `value` gleich einer Kombination aus benannten Enumerationskonstanten ist, wird eine durch Trennzeichen getrennte Liste der Namen dieser Konstanten zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="28f22-266">If `value` is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned.</span></span> <span data-ttu-id="28f22-267">`value` wird nach Flags durchsucht, wobei das Flag mit dem größten Wert auf den kleinsten Wert folgt.</span><span class="sxs-lookup"><span data-stu-id="28f22-267">`value` is searched for flags, going from the flag with the largest value to the smallest value.</span></span> <span data-ttu-id="28f22-268">Für jedes Flag, das einem Bitfeld in entspricht `value` , wird der Name der Konstante mit der durch Trennzeichen getrennten Liste verkettet.</span><span class="sxs-lookup"><span data-stu-id="28f22-268">For each flag that corresponds to a bit field in `value`, the name of the constant is concatenated to the delimiter-separated list.</span></span> <span data-ttu-id="28f22-269">Der Wert dieses Flags wird dann von der weiteren Überlegung ausgeschlossen, und die Suche wird für das nächste Flag fortgesetzt.</span><span class="sxs-lookup"><span data-stu-id="28f22-269">The value of that flag is then excluded from further consideration, and the search continues for the next flag.</span></span><br /><br /> <span data-ttu-id="28f22-270">Wenn `value` nicht mit einer Kombination von benannten Enumerationskonstanten identisch ist, wird die Decimal-Entsprechung von `value` zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="28f22-270">If `value` is not equal to a combination of named enumerated constants, the decimal equivalent of `value` is returned.</span></span>|  
|<span data-ttu-id="28f22-271">"X" oder "x"</span><span class="sxs-lookup"><span data-stu-id="28f22-271">"X" or "x"</span></span>|<span data-ttu-id="28f22-272">Stellt `value` im Hexadezimal Format ohne führendes "0x" dar.</span><span class="sxs-lookup"><span data-stu-id="28f22-272">Represents `value` in hexadecimal format without a leading "0x".</span></span>|  
|<span data-ttu-id="28f22-273">"D" oder "d"</span><span class="sxs-lookup"><span data-stu-id="28f22-273">"D" or "d"</span></span>|<span data-ttu-id="28f22-274">Stellt `value` in Dezimalform dar.</span><span class="sxs-lookup"><span data-stu-id="28f22-274">Represents `value` in decimal form.</span></span>|  
|<span data-ttu-id="28f22-275">"F" oder "f"</span><span class="sxs-lookup"><span data-stu-id="28f22-275">"F" or "f"</span></span>|<span data-ttu-id="28f22-276">Verhält sich identisch mit "g" oder "g", mit dem Unterschied, dass in <xref:System.FlagsAttribute> der Deklaration nicht vorhanden sein muss <xref:System.Enum> .</span><span class="sxs-lookup"><span data-stu-id="28f22-276">Behaves identically to "G" or "g", except that the <xref:System.FlagsAttribute> is not required to be present on the <xref:System.Enum> declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="28f22-277">Im folgenden Beispiel wird die Verwendung von `Format` im Kontext von veranschaulicht `Enum` .</span><span class="sxs-lookup"><span data-stu-id="28f22-277">The following example illustrates the use of `Format` in the context of `Enum`.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/enumformat/CPP/EnumFormat.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/enumformat/CS/EnumFormat.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/enumformat/VB/EnumFormat.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-278">Der Parameter <paramref name="enumType" />, <paramref name="value" /> oder <paramref name="format" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-278">The <paramref name="enumType" />, <paramref name="value" />, or <paramref name="format" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-279">Der <paramref name="enumType" />-Parameter ist kein <see cref="T:System.Enum" />-Typ.</span><span class="sxs-lookup"><span data-stu-id="28f22-279">The <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" /> type.</span></span>  
  
<span data-ttu-id="28f22-280">- oder -</span><span class="sxs-lookup"><span data-stu-id="28f22-280">-or-</span></span> 
<span data-ttu-id="28f22-281"><paramref name="value" /> stammt aus einer Enumeration, die sich beim Typ von <paramref name="enumType" /> unterscheidet.</span><span class="sxs-lookup"><span data-stu-id="28f22-281">The <paramref name="value" /> is from an enumeration that differs in type from <paramref name="enumType" />.</span></span>  
  
<span data-ttu-id="28f22-282">- oder -</span><span class="sxs-lookup"><span data-stu-id="28f22-282">-or-</span></span> 
<span data-ttu-id="28f22-283">Der Typ von <paramref name="value" /> ist kein zugrunde liegender Typ von <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-283">The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="28f22-284">Der <paramref name="format" />-Parameter enthält einen ungültigen Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-284">The <paramref name="format" /> parameter contains an invalid value.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28f22-285"><paramref name="format" /> entspricht „X“, aber der Enumerationstyp ist unbekannt.</span><span class="sxs-lookup"><span data-stu-id="28f22-285"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
        <altmember cref="M:System.Enum.ToString(System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="28f22-286">Formatieren von Typen in .NET</span><span class="sxs-lookup"><span data-stu-id="28f22-286">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/enumeration-format-strings"><span data-ttu-id="28f22-287">Enumerationsformatzeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="28f22-287">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="enum.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28f22-288">Gibt den Hashcode für den Wert dieser Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="28f22-288">Returns the hash code for the value of this instance.</span></span></summary>
        <returns><span data-ttu-id="28f22-289">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="28f22-289">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type enumType, object value);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetName(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (enumType As Type, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member GetName : Type * obj -&gt; string" Usage="System.Enum.GetName (enumType, value)" />
      <MemberSignature Language="C#" Value="public static string? GetName (Type enumType, object value);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-290">Ein Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-290">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-291">Der Wert einer bestimmten Enumerationskonstanten als deren zugrunde liegender Typ.</span><span class="sxs-lookup"><span data-stu-id="28f22-291">The value of a particular enumerated constant in terms of its underlying type.</span></span></param>
        <summary><span data-ttu-id="28f22-292">Ruft den Namen der Konstanten in der angegebenen Enumeration mit dem angegebenen Wert ab.</span><span class="sxs-lookup"><span data-stu-id="28f22-292">Retrieves the name of the constant in the specified enumeration that has the specified value.</span></span></summary>
        <returns><span data-ttu-id="28f22-293">Eine Zeichenfolge mit dem Namen der Enumerationskonstanten aus <paramref name="enumType" />, die den Wert <paramref name="value" /> hat, oder <see langword="null" />, wenn eine solche Konstante nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="28f22-293">A string containing the name of the enumerated constant in <paramref name="enumType" /> whose value is <paramref name="value" />; or <see langword="null" /> if no such constant is found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-294">Wenn mehrere Enumerationsmember denselben zugrunde liegenden Wert aufweisen, stellt die- <xref:System.Enum.GetName%2A> Methode sicher, dass der Name eines dieser Enumerationsmember zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-294">If multiple enumeration members have the same underlying value, the <xref:System.Enum.GetName%2A> method guarantees that it will return the name of one of those enumeration members.</span></span> <span data-ttu-id="28f22-295">Es ist jedoch nicht sicherzustellen, dass immer der Name desselben Enumerationsmembers zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-295">However, it does not guarantee that it will always return the name of the same enumeration member.</span></span> <span data-ttu-id="28f22-296">Wenn mehrere Enumerationsmember denselben Wert aufweisen, sollte der Anwendungscode daher nie von der Methode abhängen, die den Namen eines bestimmten Members zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="28f22-296">As a result, when multiple enumeration members have the same value, your application code should never depend on the method returning a particular member's name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28f22-297">Im folgenden Beispiel wird die Verwendung von veranschaulicht `GetName` .</span><span class="sxs-lookup"><span data-stu-id="28f22-297">The following example illustrates the use of `GetName`.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/enumgetname/CPP/EnumGetName.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/enumgetname/CS/EnumGetName.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetname/VB/EnumGetName.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-298"><paramref name="enumType" /> oder <paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-298"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-299"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-299"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="28f22-300">- oder -</span><span class="sxs-lookup"><span data-stu-id="28f22-300">-or-</span></span> 
 <span data-ttu-id="28f22-301"><paramref name="value" /> ist nicht vom Typ <paramref name="enumType" /> und weist auch nicht den gleichen zugrunde liegenden Typ wie <paramref name="enumType" /> auf.</span><span class="sxs-lookup"><span data-stu-id="28f22-301"><paramref name="value" /> is neither of type <paramref name="enumType" /> nor does it have the same underlying type as <paramref name="enumType" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetNames">
      <MemberSignature Language="C#" Value="public static string[] GetNames (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetNames(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetNames(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNames (enumType As Type) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetNames(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetNames : Type -&gt; string[]" Usage="System.Enum.GetNames enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-302">Ein Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-302">An enumeration type.</span></span></param>
        <summary><span data-ttu-id="28f22-303">Ruft ein Array mit den Namen der Konstanten in einer angegebenen Enumeration ab.</span><span class="sxs-lookup"><span data-stu-id="28f22-303">Retrieves an array of the names of the constants in a specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="28f22-304">Ein Zeichenfolgenarray mit den Namen der Konstanten in <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-304">A string array of the names of the constants in <paramref name="enumType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-305">Die Elemente des Rückgabewert Arrays werden nach den binären Werten der Enumerationskonstanten sortiert (d. h. nach ihrer Größe ohne Vorzeichen).</span><span class="sxs-lookup"><span data-stu-id="28f22-305">The elements of the return value array are sorted by the binary values of the enumerated constants (that is, by their unsigned magnitude).</span></span> <span data-ttu-id="28f22-306">Im folgenden Beispiel werden Informationen über das Array angezeigt, das von der- <xref:System.Enum.GetNames%2A> Methode für eine Enumeration zurückgegeben wurde, die einen negativen, einen NULL-Wert und einen positiven Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="28f22-306">The following example provides displays information about the array returned by the <xref:System.Enum.GetNames%2A> method for an enumeration that includes a negative, zero, and a positive value.</span></span>  
  
 [!code-csharp[System.Enum.GetNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getnames/cs/getnames1.cs#1)]
 [!code-vb[System.Enum.GetNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getnames/vb/getnames1.vb#1)]  
  
 <span data-ttu-id="28f22-307">Wenn Enumerationskonstanten mit gleichem Wert vorhanden sind, ist die Reihenfolge ihrer entsprechenden Namen nicht angegeben.</span><span class="sxs-lookup"><span data-stu-id="28f22-307">If there are enumerated constants with same value, the order of their corresponding names is unspecified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28f22-308">Im folgenden Beispiel wird die Verwendung der <xref:System.Enum.GetNames%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="28f22-308">The following example illustrates the use of the <xref:System.Enum.GetNames%2A> method.</span></span>  
  
 [!code-cpp[enumgetnames#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetnames/CPP/EnumGetNames.cpp#1)]
 [!code-csharp[enumgetnames#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetnames/CS/EnumGetNames.cs#1)]
 [!code-vb[enumgetnames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetnames/VB/EnumGetNames.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-309"><paramref name="enumType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-309"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-310">Der <paramref name="enumType" />-Parameter ist kein <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-310"><paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="enum.GetTypeCode " FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TypeCode GetTypeCode() cil managed" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TypeCode GetTypeCode();" FrameworkAlternate="netcore-2.0" />
      <MemberSignature Language="F#" Value="member this.GetTypeCode : unit -&gt; TypeCode" Usage="enum.GetTypeCode " FrameworkAlternate="netcore-2.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember FrameworkAlternate="net-5.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28f22-311">Gibt den Typcode des zugrunde liegenden Typs dieses Enumerationsmembers zurück.</span><span class="sxs-lookup"><span data-stu-id="28f22-311">Returns the type code of the underlying type of this enumeration member.</span></span></summary>
        <returns><span data-ttu-id="28f22-312">Der Typcode des zugrunde liegenden Typs dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="28f22-312">The type code of the underlying type of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28f22-313">Der Enumerationstyp ist unbekannt.</span><span class="sxs-lookup"><span data-stu-id="28f22-313">The enumeration type is unknown.</span></span></exception>
        <altmember cref="M:System.Enum.GetUnderlyingType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnderlyingType">
      <MemberSignature Language="C#" Value="public static Type GetUnderlyingType (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetUnderlyingType(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetUnderlyingType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnderlyingType (enumType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetUnderlyingType(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetUnderlyingType : Type -&gt; Type" Usage="System.Enum.GetUnderlyingType enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-314">Die Enumeration, deren zugrunde liegender Typ abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-314">The enumeration whose underlying type will be retrieved.</span></span></param>
        <summary><span data-ttu-id="28f22-315">Gibt den zugrunde liegenden Typ der angegebenen Enumeration zurück.</span><span class="sxs-lookup"><span data-stu-id="28f22-315">Returns the underlying type of the specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="28f22-316">Der zugrunde liegende Typ von <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-316">The underlying type of <paramref name="enumType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-317">Die- <xref:System.Enum> Struktur ermöglicht die Darstellung von Werten als benannte Konstanten.</span><span class="sxs-lookup"><span data-stu-id="28f22-317">The <xref:System.Enum> structure enables values to be represented as named constants.</span></span> <span data-ttu-id="28f22-318">Der Datentyp der Enumerationswerte wird als zugrunde liegender Typ bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="28f22-318">The data type of the enumeration's values is known as its underlying type.</span></span> <span data-ttu-id="28f22-319">Beispielsweise ist der zugrunde liegende Typ der <xref:System.DayOfWeek> Enumeration, der aus Konstanten besteht, die die einzelnen Wochentage darstellen ( <xref:System.DayOfWeek.Monday?displayProperty=nameWithType> , <xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType> usw.), <xref:System.Int32> .</span><span class="sxs-lookup"><span data-stu-id="28f22-319">For example, the underlying type of the <xref:System.DayOfWeek> enumeration, which consists of constants that represent each day of the week (<xref:System.DayOfWeek.Monday?displayProperty=nameWithType>, <xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType>, and so on), is <xref:System.Int32>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28f22-320">Im folgenden Beispiel wird die- <xref:System.Enum.GetUnderlyingType%2A> Methode aufgerufen, um den zugrunde liegenden Typ einiger Enumerationsmember anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="28f22-320">The following example calls the <xref:System.Enum.GetUnderlyingType%2A> method to display the underlying type of some enumeration members.</span></span>  
  
 [!code-csharp[System.Enum.GetUnderlyingType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getunderlyingtype/cs/getunderlyingtype1.cs#1)]
 [!code-vb[System.Enum.GetUnderlyingType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getunderlyingtype/vb/getunderlyingtype1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-321"><paramref name="enumType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-321"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-322"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-322"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.GetTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public static Array GetValues (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array GetValues(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetValues(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValues (enumType As Type) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ GetValues(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetValues : Type -&gt; Array" Usage="System.Enum.GetValues enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-323">Ein Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-323">An enumeration type.</span></span></param>
        <summary><span data-ttu-id="28f22-324">Ruft ein Array mit den Werten der Konstanten in einer angegebenen Enumeration ab.</span><span class="sxs-lookup"><span data-stu-id="28f22-324">Retrieves an array of the values of the constants in a specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="28f22-325">Ein Array, das die Werte der Konstanten in <paramref name="enumType" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="28f22-325">An array that contains the values of the constants in <paramref name="enumType" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-326">Die Elemente des Arrays werden nach den binären Werten der Enumerationskonstanten sortiert (d. h. nach ihrer Größe ohne Vorzeichen).</span><span class="sxs-lookup"><span data-stu-id="28f22-326">The elements of the array are sorted by the binary values of the enumeration constants (that is, by their unsigned magnitude).</span></span> <span data-ttu-id="28f22-327">Im folgenden Beispiel werden Informationen zu dem Array angezeigt, das von der- <xref:System.Enum.GetValues%2A> Methode für eine Enumeration zurückgegeben wurde, die einen negativen Wert, 0 (null) und einen positiven Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="28f22-327">The following example displays information about the array returned by the <xref:System.Enum.GetValues%2A> method for an enumeration that includes a negative value, zero, and a positive value.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues1.vb" id="Snippet1":::
  
 <span data-ttu-id="28f22-328">Die- <xref:System.Enum.GetValues%2A> Methode gibt ein Array zurück, das einen Wert für jeden Member der- `enumType` Enumeration enthält.</span><span class="sxs-lookup"><span data-stu-id="28f22-328">The <xref:System.Enum.GetValues%2A> method returns an array that contains a value for each member of the `enumType` enumeration.</span></span> <span data-ttu-id="28f22-329">Wenn mehrere Member denselben Wert aufweisen, enthält das zurückgegebene Array doppelte Werte.</span><span class="sxs-lookup"><span data-stu-id="28f22-329">If multiple members have the same value, the returned array includes duplicate values.</span></span> <span data-ttu-id="28f22-330">Wenn in diesem Fall die- <xref:System.Enum.GetName%2A> Methode mit jedem Wert im zurückgegebenen Array aufgerufen wird, werden die eindeutigen Namen, die Membern mit doppelten Werten zugewiesen sind, nicht wieder hergestellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-330">In this case, calling the <xref:System.Enum.GetName%2A> method with each value in the returned array does not restore the unique names assigned to members that have duplicate values.</span></span> <span data-ttu-id="28f22-331">Um alle Namen von Enumerationsmembern erfolgreich abzurufen, rufen Sie die- <xref:System.Enum.GetNames%2A> Methode auf.</span><span class="sxs-lookup"><span data-stu-id="28f22-331">To retrieve all the names of enumeration members successfully, call the <xref:System.Enum.GetNames%2A> method.</span></span>  
  
 <span data-ttu-id="28f22-332">Die <xref:System.Enum.GetValues%2A> -Methode kann nicht aufgerufen werden, indem Reflektion in einem Reflektionskontext verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-332">The <xref:System.Enum.GetValues%2A> method cannot be invoked by using reflection in a reflection-only context.</span></span> <span data-ttu-id="28f22-333">Stattdessen können Sie den Wert aller Enumerationsmember abrufen, indem Sie die- <xref:System.Type.GetFields%2A?displayProperty=nameWithType> Methode verwenden, um ein Array von- <xref:System.Reflection.FieldInfo> Objekten abzurufen, die Enumerationsmember darstellen, und dann die- <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType> Methode für jedes Element des Arrays aufrufen.</span><span class="sxs-lookup"><span data-stu-id="28f22-333">Instead, you can retrieve the value of all enumeration members by using the <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method to get an array of <xref:System.Reflection.FieldInfo> objects that represent enumeration members and then call the <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType> method on each element of the array.</span></span> <span data-ttu-id="28f22-334">Dieses Verfahren wird im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="28f22-334">The following example illustrates this technique.</span></span> <span data-ttu-id="28f22-335">Es erfordert, dass Sie die folgende Enumeration in einer Assembly mit dem Namen Enumerations.dll definieren:</span><span class="sxs-lookup"><span data-stu-id="28f22-335">It requires that you define the following enumeration in an assembly named Enumerations.dll:</span></span>  
  
 [!code-csharp[System.Enum.GetValues#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#2)]
 [!code-vb[System.Enum.GetValues#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#2)]  
  
 <span data-ttu-id="28f22-336">Die Assembly wird in einen reflektionsbasierten Kontext geladen, ein- <xref:System.Type> Objekt, das die- `Pets` Enumeration darstellt, wird instanziiert, ein Array von <xref:System.Reflection.FieldInfo> -Objekten wird abgerufen, und die Feldwerte werden in der Konsole angezeigt.</span><span class="sxs-lookup"><span data-stu-id="28f22-336">The assembly is loaded in a reflection-only context, a <xref:System.Type> object that represents the `Pets` enumeration is instantiated, an array of <xref:System.Reflection.FieldInfo> objects is retrieved, and the field values are displayed to the console.</span></span>  
  
 [!code-csharp[System.Enum.GetValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#3)]
 [!code-vb[System.Enum.GetValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="28f22-337">Im folgenden Beispiel wird die Verwendung von veranschaulicht <xref:System.Enum.GetValues%2A> .</span><span class="sxs-lookup"><span data-stu-id="28f22-337">The following example illustrates the use of <xref:System.Enum.GetValues%2A>.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/enumgetvalues/CPP/EnumGetValues.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/enumgetvalues/CS/EnumGetValues.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetvalues/VB/EnumGetValues.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-338"><paramref name="enumType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-338"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-339"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-339"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28f22-340">Die Methode wird durch Reflektion in einem reflektionsbezogenen Kontext aufgerufen,</span><span class="sxs-lookup"><span data-stu-id="28f22-340">The method is invoked by reflection in a reflection-only context,</span></span> 
<span data-ttu-id="28f22-341">- oder -</span><span class="sxs-lookup"><span data-stu-id="28f22-341">-or-</span></span> 
 <span data-ttu-id="28f22-342"><paramref name="enumType" /> ist ein Typ aus einer Assembly, die in einen reflektionsbezogenen Kontext geladen wurden.</span><span class="sxs-lookup"><span data-stu-id="28f22-342"><paramref name="enumType" /> is a type from an assembly loaded in a reflection-only context.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="HasFlag">
      <MemberSignature Language="C#" Value="public bool HasFlag (Enum flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasFlag(class System.Enum flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.HasFlag(System.Enum)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFlag (flag As Enum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFlag(Enum ^ flag);" />
      <MemberSignature Language="F#" Value="member this.HasFlag : Enum -&gt; bool" Usage="enum.HasFlag flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Enum" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="flag"><span data-ttu-id="28f22-343">Ein Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="28f22-343">An enumeration value.</span></span></param>
        <summary><span data-ttu-id="28f22-344">Bestimmt, ob ein oder mehrere Bitfelder in der aktuellen Instanz festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="28f22-344">Determines whether one or more bit fields are set in the current instance.</span></span></summary>
        <returns><span data-ttu-id="28f22-345"><see langword="true" />, wenn das in <paramref name="flag" /> festgelegte Bitfeld bzw. die Bitfelder auch in der aktuellen Instanz festgelegt werden, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-345"><see langword="true" /> if the bit field or bit fields that are set in <paramref name="flag" /> are also set in the current instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-346">Die- <xref:System.Enum.HasFlag%2A> Methode gibt das Ergebnis des folgenden booleschen Ausdrucks zurück.</span><span class="sxs-lookup"><span data-stu-id="28f22-346">The <xref:System.Enum.HasFlag%2A> method returns the result of the following Boolean expression.</span></span>  
  
```  
thisInstance And flag = flag   
```  
  
 <span data-ttu-id="28f22-347">Wenn der zugrunde liegende Wert von `flag` 0 (null) ist, gibt die Methode zurück `true` .</span><span class="sxs-lookup"><span data-stu-id="28f22-347">If the underlying value of `flag` is zero, the method returns `true`.</span></span> <span data-ttu-id="28f22-348">Wenn dieses Verhalten nicht erwünscht ist, können Sie die <xref:System.Enum.Equals%2A> -Methode verwenden, um auf Gleichheit mit NULL zu prüfen und nur dann aufzurufen, <xref:System.Enum.HasFlag%2A> Wenn der zugrunde liegende Wert von ungleich `flag` 0 (null) ist, wie im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="28f22-348">If this behavior is not desirable, you can use the <xref:System.Enum.Equals%2A> method to test for equality with zero and call <xref:System.Enum.HasFlag%2A> only if the underlying value of `flag` is non-zero, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Enum.HasFlag#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag0.cs#1)]
 [!code-vb[System.Enum.HasFlag#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag0.vb#1)]  
  
 <span data-ttu-id="28f22-349">Die <xref:System.Enum.HasFlag%2A> -Methode ist für die Verwendung mit Enumerationstypen konzipiert, die mit dem-Attribut markiert sind, <xref:System.FlagsAttribute> und kann verwendet werden, um zu bestimmen, ob mehrere Bitfelder festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="28f22-349">The <xref:System.Enum.HasFlag%2A> method is designed to be used with enumeration types that are marked with the <xref:System.FlagsAttribute> attribute and can be used to determine whether multiple bit fields are set.</span></span> <span data-ttu-id="28f22-350">Für Enumerationstypen, die nicht mit dem-Attribut markiert sind <xref:System.FlagsAttribute> , wird entweder die- <xref:System.Enum.Equals%2A> Methode oder die- <xref:System.Enum.CompareTo%2A> Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="28f22-350">For enumeration types that are not marked with the <xref:System.FlagsAttribute> attribute, call either the <xref:System.Enum.Equals%2A> method or the <xref:System.Enum.CompareTo%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28f22-351">Im folgenden Beispiel wird eine `ItemsOrdered` Enumeration definiert, die Kategorien von Elementen widerspiegelt, die ein Kunde in einem Restaurant bestellen kann.</span><span class="sxs-lookup"><span data-stu-id="28f22-351">The following example defines an `ItemsOrdered` enumeration that reflects categories of items that a customer can order in a restaurant.</span></span> <span data-ttu-id="28f22-352">Im Beispiel wird getestet, ob der Kunde sowohl eine Entrée als auch ein Getränk bestellt hat.</span><span class="sxs-lookup"><span data-stu-id="28f22-352">The example tests whether the customer has ordered both an entrée and a beverage.</span></span>  
  
 [!code-csharp[System.Enum.HasFlag#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag1.cs#2)]
 [!code-vb[System.Enum.HasFlag#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-353"><paramref name="flag" /> weist einen anderen Typ als die aktuelle Instanz auf.</span><span class="sxs-lookup"><span data-stu-id="28f22-353"><paramref name="flag" /> is a different type than the current instance.</span></span></exception>
        <altmember cref="T:System.FlagsAttribute" />
        <altmember cref="M:System.Enum.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.IsDefined(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (enumType As Type, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IsDefined : Type * obj -&gt; bool" Usage="System.Enum.IsDefined (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-354">Ein Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-354">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-355">Der Wert oder Name einer Konstanten in <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-355">The value or name of a constant in <paramref name="enumType" />.</span></span></param>
        <summary><span data-ttu-id="28f22-356">Gibt einen booleschen Wert zurück, der angibt, ob ein angegebener Integralwert (oder dessen Name als Zeichenfolge) in einer angegebenen Enumeration vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-356">Returns a Boolean telling whether a given integral value, or its name as a string, exists in a specified enumeration.</span></span></summary>
        <returns><span data-ttu-id="28f22-357"><see langword="true" />, wenn eine Konstante in <paramref name="enumType" /> den Wert <paramref name="value" /> hat, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-357"><see langword="true" /> if a constant in <paramref name="enumType" /> has a value equal to <paramref name="value" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-358">Der- `value` Parameter kann eine der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="28f22-358">The `value` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="28f22-359">Ein beliebiger Member des Typs `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-359">Any member of type `enumType`.</span></span>  
  
-   <span data-ttu-id="28f22-360">Eine Variable, deren Wert ein Enumerationsmember vom Typ ist `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-360">A variable whose value is an enumeration member of type `enumType`.</span></span>  
  
-   <span data-ttu-id="28f22-361">Die Zeichen folgen Darstellung des Namens eines Enumerationsmembers.</span><span class="sxs-lookup"><span data-stu-id="28f22-361">The string representation of the name of an enumeration member.</span></span> <span data-ttu-id="28f22-362">Die Zeichen in der Zeichenfolge müssen dieselbe Groß-/Kleinschreibung aufweisen wie der Name des Enumerationsmembers.</span><span class="sxs-lookup"><span data-stu-id="28f22-362">The characters in the string must have the same case as the enumeration member name.</span></span>  
  
-   <span data-ttu-id="28f22-363">Ein Wert des zugrunde liegenden Typs von `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-363">A value of the underlying type of `enumType`.</span></span>  
  
 <span data-ttu-id="28f22-364">Wenn die Konstanten in `enumType` einen Satz von Bitfeldern definieren und `value` die Werte, Namen oder zugrunde liegenden Werte mehrerer Bitfelder enthalten, gibt die <xref:System.Enum.IsDefined%2A> Methode zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="28f22-364">If the constants in `enumType` define a set of bit fields and `value` contains the values, names, or underlying values of multiple bit fields, the <xref:System.Enum.IsDefined%2A> method returns `false`.</span></span> <span data-ttu-id="28f22-365">Anders ausgedrückt: für Enumerationen, die einen Satz von Bitfeldern definieren, bestimmt die-Methode nur, ob ein einzelnes Bitfeld zur-Enumeration gehört.</span><span class="sxs-lookup"><span data-stu-id="28f22-365">In other words, for enumerations that define a set of bit fields, the method determines only whether a single bit field belongs to the enumeration.</span></span> <span data-ttu-id="28f22-366">Um zu ermitteln, ob mehrere Bitfelder in einem Enumerationstyp festgelegt sind, der mit dem-Attribut markiert ist <xref:System.FlagsAttribute> , können Sie die-Methode aufzurufen <xref:System.Enum.HasFlag%2A> .</span><span class="sxs-lookup"><span data-stu-id="28f22-366">To determine whether multiple bit fields are set in an enumeration type that is tagged with the <xref:System.FlagsAttribute> attribute, you can call the <xref:System.Enum.HasFlag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28f22-367">Im folgenden Beispiel wird eine Enumeration mit dem Namen definiert `PetType` , die aus einzelnen Bitfeldern besteht.</span><span class="sxs-lookup"><span data-stu-id="28f22-367">The following example defines an enumeration named `PetType` that consists of individual bit fields.</span></span> <span data-ttu-id="28f22-368">Anschließend wird die- <xref:System.Enum.IsDefined%2A> Methode mit möglichen zugrunde liegenden Enumerationswerten, Zeichen folgen Namen und zusammengesetzten Werten aufgerufen, die aus dem Festlegen mehrerer Bitfelder resultieren.</span><span class="sxs-lookup"><span data-stu-id="28f22-368">It then calls the <xref:System.Enum.IsDefined%2A> method with possible underlying enumeration values, string names, and composite values that result from setting multiple bit fields.</span></span>  
  
 [!code-csharp[System.Enum.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined1.cs#1)]
 [!code-vb[System.Enum.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/IsDefined1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-369"><paramref name="enumType" /> oder <paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-369"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-370"><paramref name="enumType" /> ist keine <see langword="Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-370"><paramref name="enumType" /> is not an <see langword="Enum" />.</span></span>  
  
<span data-ttu-id="28f22-371">- oder -</span><span class="sxs-lookup"><span data-stu-id="28f22-371">-or-</span></span> 
<span data-ttu-id="28f22-372">Der Typ von <paramref name="value" /> ist eine Enumeration, dabei handelt es sich jedoch nicht um eine Enumeration vom Typ <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-372">The type of <paramref name="value" /> is an enumeration, but it is not an enumeration of type <paramref name="enumType" />.</span></span>  
  
<span data-ttu-id="28f22-373">- oder -</span><span class="sxs-lookup"><span data-stu-id="28f22-373">-or-</span></span> 
<span data-ttu-id="28f22-374">Der Typ von <paramref name="value" /> ist kein zugrunde liegender Typ von <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-374">The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28f22-375"><paramref name="value" /> ist nicht vom Typ <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, <see cref="T:System.UInt64" /> oder <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-375"><paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />, or <see cref="T:System.String" />.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="28f22-376">Wenn <paramref name="enumType" /> eine Enumeration ist, die mithilfe des- <see cref="T:System.FlagsAttribute" /> Attributs definiert wird, gibt die Methode zurück, <see langword="false" /> Wenn mehrere Bitfelder in <paramref name="value" /> festgelegt sind <paramref name="value" /> , aber nicht einem zusammengesetzten Enumerationswert entsprechen, oder wenn <paramref name="value" /> eine Zeichen folgen Verkettung der Namen mehrerer Bitflags ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-376">If <paramref name="enumType" /> is an enumeration that is defined by using the <see cref="T:System.FlagsAttribute" /> attribute, the method returns <see langword="false" /> if multiple bit fields in <paramref name="value" /> are set but <paramref name="value" /> does not correspond to a composite enumeration value, or if <paramref name="value" /> is a string concatenation of the names of multiple bit flags.</span></span> <span data-ttu-id="28f22-377">Im folgenden Beispiel wird eine <c>Pets</c> -Enumeration mit dem- <see cref="T:System.FlagsAttribute" /> Attribut definiert.</span><span class="sxs-lookup"><span data-stu-id="28f22-377">In the following example, a <c>Pets</c> enumeration is defined with the <see cref="T:System.FlagsAttribute" /> attribute.</span></span> <span data-ttu-id="28f22-378">Die <see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /> -Methode gibt zurück <see langword="false" /> , wenn Sie Ihr einen Enumerationswert übergeben, der zwei Bitfelder (<c>pets. Dog</c> und <c>pets.cat</c>) aufweist, und wenn Sie die Zeichen folgen Darstellung dieses Enumerationswerts ("Dog, Cat") übergeben.</span><span class="sxs-lookup"><span data-stu-id="28f22-378">The <see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /> method returns <see langword="false" /> when you pass it an enumeration value that has two bit fields (<c>Pets.Dog</c> and <c>Pets.Cat</c>) set, and when you pass it the string representation of that enumeration value ("Dog, Cat").</span></span>  
  
<span data-ttu-id="28f22-379">[! Code-csharp[System. Aufzählung. IsDefined # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined2.cs#2)] [! Code-vb[System. endum. IsDefined # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/isdefined2.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="28f22-379">[!code-csharp[System.Enum.IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined2.cs#2)] [!code-vb[System.Enum.IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/isdefined2.vb#2)]</span></span> 
<span data-ttu-id="28f22-380">Sie können bestimmen, ob mehrere Bitfelder durch Aufrufen der-Methode festgelegt werden <see cref="M:System.Enum.HasFlag(System.Enum)" /> .</span><span class="sxs-lookup"><span data-stu-id="28f22-380">You can determine whether multiple bit fields are set by calling the <see cref="M:System.Enum.HasFlag(System.Enum)" /> method.</span></span></para></block>
        <altmember cref="M:System.Enum.GetName(System.Type,System.Object)" />
        <altmember cref="M:System.Enum.GetNames(System.Type)" />
        <altmember cref="M:System.Enum.GetValues(System.Type)" />
        <altmember cref="M:System.Enum.HasFlag(System.Enum)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28f22-381">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="28f22-381">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span></summary>
        <altmember cref="M:System.Enum.TryParse``1(System.String,``0@)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (Type enumType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(class System.Type enumType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (enumType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(Type ^ enumType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : Type * string -&gt; obj" Usage="System.Enum.Parse (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-382">Ein Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-382">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-383">Eine Zeichenfolge mit dem zu konvertierenden Namen oder Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-383">A string containing the name or value to convert.</span></span></param>
        <summary><span data-ttu-id="28f22-384">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="28f22-384">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span></summary>
        <returns><span data-ttu-id="28f22-385">Ein Objekt vom Typ <paramref name="enumType" />, dessen Wert durch <paramref name="value" /> dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-385">An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-386">Der `value` -Parameter enthält die Zeichen folgen Darstellung des zugrunde liegenden Werts oder der benannten Konstante eines Enumerationsmembers oder eine Liste benannter Konstanten, die durch Kommas (,) getrennt sind.</span><span class="sxs-lookup"><span data-stu-id="28f22-386">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</span></span> <span data-ttu-id="28f22-387">Ein oder mehrere Leerzeichen können dem Wert, dem Namen oder dem Komma in vorangestellt sein oder folgen `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-387">One or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="28f22-388">Wenn `value` eine Liste ist, ist der Rückgabewert der Wert der angegebenen Namen, kombiniert mit einer bitweisen `OR` Operation.</span><span class="sxs-lookup"><span data-stu-id="28f22-388">If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.</span></span>  
  
 <span data-ttu-id="28f22-389">Wenn `value` ein Name ist, der keiner benannten Konstante von entspricht, löst `enumType` die Methode eine aus <xref:System.ArgumentException> .</span><span class="sxs-lookup"><span data-stu-id="28f22-389">If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="28f22-390">Wenn `value` die Zeichen folgen Darstellung einer ganzen Zahl ist, die keinen zugrunde liegenden Wert der- `enumType` Enumeration darstellt, gibt die Methode einen Enumerationsmember zurück, dessen zugrunde liegender Wert in einen ganzzahligen `value` Typ konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-390">If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="28f22-391">Wenn dieses Verhalten nicht erwünscht ist, wird die-Methode aufgerufen, <xref:System.Enum.IsDefined%2A> um sicherzustellen, dass eine bestimmte Zeichen folgen Darstellung einer ganzen Zahl tatsächlich ein Member von ist `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-391">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`.</span></span> <span data-ttu-id="28f22-392">Im folgenden Beispiel wird eine- `Colors` Enumeration definiert, die-Methode aufgerufen, um Zeichen folgen <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> in die entsprechenden-Enumerationswerte zu konvertieren, und die-Methode wird aufgerufen, <xref:System.Enum.IsDefined%2A> um sicherzustellen, dass bestimmte ganzzahlige Werte in der- `Colors` Enumeration</span><span class="sxs-lookup"><span data-stu-id="28f22-392">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample1.vb" id="Snippet1":::
  
 <span data-ttu-id="28f22-393">Bei diesem Vorgang wird die Groß-/Kleinschreibung beachtet.</span><span class="sxs-lookup"><span data-stu-id="28f22-393">This operation is case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28f22-394">Im folgenden Beispiel wird die- <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> Methode verwendet, um ein Array von Zeichen folgen zu analysieren, die durch Aufrufen der-Methode erstellt werden <xref:System.Enum.GetNames%2A> .</span><span class="sxs-lookup"><span data-stu-id="28f22-394">The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method.</span></span> <span data-ttu-id="28f22-395">Außerdem wird die- <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> Methode verwendet, um einen Enumerationswert zu analysieren, der aus einem Bitfeld besteht.</span><span class="sxs-lookup"><span data-stu-id="28f22-395">It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/enumparse/CPP/EnumParse.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/enumparse/CS/EnumParse.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/enumparse/VB/EnumParse.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-396"><paramref name="enumType" /> oder <paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-396"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-397"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-397"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="28f22-398">- oder -</span><span class="sxs-lookup"><span data-stu-id="28f22-398">-or-</span></span> 
 <span data-ttu-id="28f22-399"><paramref name="value" /> ist entweder eine leere Zeichenfolge ("") oder enthält nur Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="28f22-399"><paramref name="value" /> is either an empty string or only contains white space.</span></span>  
  
<span data-ttu-id="28f22-400">- oder -</span><span class="sxs-lookup"><span data-stu-id="28f22-400">-or-</span></span> 
 <span data-ttu-id="28f22-401"><paramref name="value" /> ist ein Name, aber keiner der benannten Konstanten, die für die Enumeration definiert sind.</span><span class="sxs-lookup"><span data-stu-id="28f22-401"><paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="28f22-402"><paramref name="value" /> liegt außerhalb des Bereichs des zugrunde liegenden Typs von <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-402"><paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (Type enumType, string value, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(class System.Type enumType, string value, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (enumType As Type, value As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(Type ^ enumType, System::String ^ value, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Parse : Type * string * bool -&gt; obj" Usage="System.Enum.Parse (enumType, value, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-403">Ein Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-403">An enumeration type.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-404">Eine Zeichenfolge mit dem zu konvertierenden Namen oder Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-404">A string containing the name or value to convert.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="28f22-405"><see langword="true" />, wenn die Groß-/Kleinschreibung nicht beachtet wird. <see langword="false" />, wenn die Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-405"><see langword="true" /> to ignore case; <see langword="false" /> to regard case.</span></span></param>
        <summary><span data-ttu-id="28f22-406">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="28f22-406">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="28f22-407">Ein Parameter gibt an, ob beim Vorgang die Groß-/Kleinschreibung nicht beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-407">A parameter specifies whether the operation is case-insensitive.</span></span></summary>
        <returns><span data-ttu-id="28f22-408">Ein Objekt vom Typ <paramref name="enumType" />, dessen Wert durch <paramref name="value" /> dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-408">An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-409">Der `value` -Parameter enthält die Zeichen folgen Darstellung des zugrunde liegenden Werts oder der benannten Konstante eines Enumerationsmembers oder eine Liste benannter Konstanten, die durch Kommas (,) getrennt sind.</span><span class="sxs-lookup"><span data-stu-id="28f22-409">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</span></span> <span data-ttu-id="28f22-410">Ein oder mehrere Leerzeichen können dem Wert, dem Namen oder dem Komma in vorangestellt sein oder folgen `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-410">One or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="28f22-411">Wenn `value` eine Liste ist, ist der Rückgabewert der Wert der angegebenen Namen, kombiniert mit einer bitweisen `OR` Operation.</span><span class="sxs-lookup"><span data-stu-id="28f22-411">If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.</span></span>  
  
 <span data-ttu-id="28f22-412">Wenn `value` ein Name ist, der keiner benannten Konstante von entspricht, löst `enumType` die Methode eine aus <xref:System.ArgumentException> .</span><span class="sxs-lookup"><span data-stu-id="28f22-412">If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="28f22-413">Wenn `value` die Zeichen folgen Darstellung einer ganzen Zahl ist, die keinen zugrunde liegenden Wert der- `enumType` Enumeration darstellt, gibt die Methode einen Enumerationsmember zurück, dessen zugrunde liegender Wert in einen ganzzahligen `value` Typ konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-413">If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="28f22-414">Wenn dieses Verhalten nicht erwünscht ist, wird die-Methode aufgerufen, <xref:System.Enum.IsDefined%2A> um sicherzustellen, dass eine bestimmte Zeichen folgen Darstellung einer ganzen Zahl tatsächlich ein Member von ist `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-414">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`.</span></span> <span data-ttu-id="28f22-415">Im folgenden Beispiel wird eine- `Colors` Enumeration definiert, die-Methode aufgerufen, um Zeichen folgen <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> in die entsprechenden-Enumerationswerte zu konvertieren, und die-Methode wird aufgerufen, <xref:System.Enum.IsDefined%2A> um sicherzustellen, dass bestimmte ganzzahlige Werte in der- `Colors` Enumeration</span><span class="sxs-lookup"><span data-stu-id="28f22-415">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 <span data-ttu-id="28f22-416">Der- `ignoreCase` Parameter gibt an, ob beim Vorgang die Groß-/Kleinschreibung beachtet</span><span class="sxs-lookup"><span data-stu-id="28f22-416">The `ignoreCase` parameter specifies whether this operation is case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28f22-417">Im folgenden Beispiel wird die- <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> Methode verwendet, um ein Array von Zeichen folgen zu analysieren, die durch Aufrufen der-Methode erstellt werden <xref:System.Enum.GetNames%2A> .</span><span class="sxs-lookup"><span data-stu-id="28f22-417">The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method.</span></span> <span data-ttu-id="28f22-418">Außerdem wird die- <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> Methode verwendet, um einen Enumerationswert zu analysieren, der aus einem Bitfeld besteht.</span><span class="sxs-lookup"><span data-stu-id="28f22-418">It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb" id="Snippet2":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-419"><paramref name="enumType" /> oder <paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-419"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-420"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-420"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="28f22-421">- oder -</span><span class="sxs-lookup"><span data-stu-id="28f22-421">-or-</span></span> 
 <span data-ttu-id="28f22-422"><paramref name="value" /> ist entweder eine leere Zeichenfolge ("") oder enthält nur Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="28f22-422"><paramref name="value" /> is either an empty string ("") or only contains white space.</span></span>  
  
<span data-ttu-id="28f22-423">- oder -</span><span class="sxs-lookup"><span data-stu-id="28f22-423">-or-</span></span> 
 <span data-ttu-id="28f22-424"><paramref name="value" /> ist ein Name, aber keiner der benannten Konstanten, die für die Enumeration definiert sind.</span><span class="sxs-lookup"><span data-stu-id="28f22-424"><paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="28f22-425"><paramref name="value" /> liegt außerhalb des Bereichs des zugrunde liegenden Typs von <paramref name="enumType" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-425"><paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string? value) where TEnum : struct;" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TEnum Parse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse(Of TEnum As Structure) (value As String) As TEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static TEnum Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; 'Enum (requires 'Enum : struct)" Usage="System.Enum.Parse value" />
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string value) where TEnum : struct;" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEnum</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><span data-ttu-id="28f22-426">Ein Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-426">An enumeration type.</span></span></typeparam>
        <param name="value"><span data-ttu-id="28f22-427">Eine Zeichenfolge mit dem zu konvertierenden Namen oder Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-427">A string containing the name or value to convert.</span></span></param>
        <summary><span data-ttu-id="28f22-428">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts mindestens einer von <typeparamref name="TEnum" /> angegebenen Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="28f22-428">Converts the string representation of the name or numeric value of one or more enumerated constants specified by <typeparamref name="TEnum" /> to an equivalent enumerated object.</span></span></summary>
        <returns><span data-ttu-id="28f22-429">Ein Objekt vom Typ <paramref name="TEnum" />, dessen Wert durch <paramref name="value" /> dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-429">An object of type <paramref name="TEnum" /> whose value is represented by <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-430"><typeparamref name="TEnum" /> weist nicht den <see cref="T:System.Enum" />-Typ auf.</span><span class="sxs-lookup"><span data-stu-id="28f22-430"><typeparamref name="TEnum" /> is not an <see cref="T:System.Enum" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-431"><paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-431"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-432"><paramref name="value" /> enthält keine Informationen zur Enumeration.</span><span class="sxs-lookup"><span data-stu-id="28f22-432"><paramref name="value" /> does not contain enumeration information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string? value, bool ignoreCase) where TEnum : struct;" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TEnum Parse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse``1(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse(Of TEnum As Structure) (value As String, ignoreCase As Boolean) As TEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static TEnum Parse(System::String ^ value, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Parse : string * bool -&gt; 'Enum (requires 'Enum : struct)" Usage="System.Enum.Parse (value, ignoreCase)" />
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string value, bool ignoreCase) where TEnum : struct;" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEnum</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><span data-ttu-id="28f22-433">Ein Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-433">An enumeration type.</span></span></typeparam>
        <param name="value"><span data-ttu-id="28f22-434">Eine Zeichenfolge mit dem zu konvertierenden Namen oder Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-434">A string containing the name or value to convert.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="28f22-435"><see langword="true" />, wenn die Groß-/Kleinschreibung nicht beachtet wird. <see langword="false" />, wenn die Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-435"><see langword="true" /> to ignore case; <see langword="false" /> to regard case.</span></span></param>
        <summary><span data-ttu-id="28f22-436">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts mindestens einer von <typeparamref name="TEnum" /> angegebenen Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="28f22-436">Converts the string representation of the name or numeric value of one or more enumerated constants specified by <typeparamref name="TEnum" /> to an equivalent enumerated object.</span></span> <span data-ttu-id="28f22-437">Ein Parameter gibt an, ob beim Vorgang die Groß-/Kleinschreibung nicht beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-437">A parameter specifies whether the operation is case-insensitive.</span></span></summary>
        <returns><span data-ttu-id="28f22-438">Ein Objekt vom Typ <paramref name="TEnum" />, dessen Wert durch <paramref name="value" /> dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-438">An object of type <paramref name="TEnum" /> whose value is represented by <paramref name="value" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-439"><typeparamref name="TEnum" /> weist nicht den <see cref="T:System.Enum" />-Typ auf.</span><span class="sxs-lookup"><span data-stu-id="28f22-439"><typeparamref name="TEnum" /> is not an <see cref="T:System.Enum" /> type.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-440"><paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-440"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-441"><paramref name="value" /> enthält keine Informationen zur Enumeration.</span><span class="sxs-lookup"><span data-stu-id="28f22-441"><paramref name="value" /> does not contain enumeration information.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.GetTypeCode : unit -&gt; TypeCode&#xA;override this.System.IConvertible.GetTypeCode : unit -&gt; TypeCode" Usage="enum.System.IConvertible.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28f22-442">Gibt den Typcode dieser <see cref="T:System.Enum" />-Instanz zurück.</span><span class="sxs-lookup"><span data-stu-id="28f22-442">Returns the type code of this <see cref="T:System.Enum" /> instance.</span></span></summary>
        <returns><span data-ttu-id="28f22-443">Ein Enumerationswert, der den Typcode dieser <see cref="T:System.Enum" />-Instanz beschreibt.</span><span class="sxs-lookup"><span data-stu-id="28f22-443">An enumeration value that describes the type code of this <see cref="T:System.Enum" /> instance.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28f22-444">Der Enumerationstyp ist unbekannt.</span><span class="sxs-lookup"><span data-stu-id="28f22-444">The enum type is unknown.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToBoolean : IFormatProvider -&gt; bool&#xA;override this.System.IConvertible.ToBoolean : IFormatProvider -&gt; bool" Usage="enum.System.IConvertible.ToBoolean provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-445">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-445">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-446">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in einen booleschen Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-446">Converts the current value to a Boolean value based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-447">Dieser Member löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="28f22-447">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-448">Derzeit nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="28f22-448">Currently not implemented.</span></span> <span data-ttu-id="28f22-449">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="28f22-449">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="28f22-450">In allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="28f22-450">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToByte : IFormatProvider -&gt; byte&#xA;override this.System.IConvertible.ToByte : IFormatProvider -&gt; byte" Usage="enum.System.IConvertible.ToByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-451">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-451">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-452">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 8-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="28f22-452">Converts the current value to an 8-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-453">Der konvertierte Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-453">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-454">Verwendet <xref:System.Convert> , um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28f22-454">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToChar : IFormatProvider -&gt; char&#xA;override this.System.IConvertible.ToChar : IFormatProvider -&gt; char" Usage="enum.System.IConvertible.ToChar provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-455">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-455">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-456">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in ein Unicode-Zeichen.</span><span class="sxs-lookup"><span data-stu-id="28f22-456">Converts the current value to a Unicode character based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-457">Dieser Member löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="28f22-457">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-458">Derzeit nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="28f22-458">Currently not implemented.</span></span> <span data-ttu-id="28f22-459">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="28f22-459">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="28f22-460">In allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="28f22-460">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime&#xA;override this.System.IConvertible.ToDateTime : IFormatProvider -&gt; DateTime" Usage="enum.System.IConvertible.ToDateTime provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-461">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-461">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-462">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine <see cref="T:System.DateTime" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-462">Converts the current value to a <see cref="T:System.DateTime" /> based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-463">Dieser Member löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="28f22-463">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-464">Derzeit nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="28f22-464">Currently not implemented.</span></span> <span data-ttu-id="28f22-465">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="28f22-465">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="28f22-466">In allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="28f22-466">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal&#xA;override this.System.IConvertible.ToDecimal : IFormatProvider -&gt; decimal" Usage="enum.System.IConvertible.ToDecimal provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-467">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-467">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-468">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine <see cref="T:System.Decimal" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-468">Converts the current value to a <see cref="T:System.Decimal" /> based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-469">Dieser Member löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="28f22-469">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-470">Derzeit nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="28f22-470">Currently not implemented.</span></span> <span data-ttu-id="28f22-471">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="28f22-471">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="28f22-472">In allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="28f22-472">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToDouble : IFormatProvider -&gt; double&#xA;override this.System.IConvertible.ToDouble : IFormatProvider -&gt; double" Usage="enum.System.IConvertible.ToDouble provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-473">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-473">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-474">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine Gleitkommazahl mit doppelter Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="28f22-474">Converts the current value to a double-precision floating point number based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-475">Dieser Member löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="28f22-475">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-476">Derzeit nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="28f22-476">Currently not implemented.</span></span> <span data-ttu-id="28f22-477">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="28f22-477">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="28f22-478">In allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="28f22-478">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt16 : IFormatProvider -&gt; int16&#xA;override this.System.IConvertible.ToInt16 : IFormatProvider -&gt; int16" Usage="enum.System.IConvertible.ToInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-479">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-479">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-480">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 16-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="28f22-480">Converts the current value to a 16-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-481">Der konvertierte Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-481">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-482">Verwendet <xref:System.Convert> , um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28f22-482">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt32 : IFormatProvider -&gt; int&#xA;override this.System.IConvertible.ToInt32 : IFormatProvider -&gt; int" Usage="enum.System.IConvertible.ToInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-483">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-483">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-484">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 32-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="28f22-484">Converts the current value to a 32-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-485">Der konvertierte Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-485">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-486">Verwendet <xref:System.Convert> , um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28f22-486">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToInt64 : IFormatProvider -&gt; int64&#xA;override this.System.IConvertible.ToInt64 : IFormatProvider -&gt; int64" Usage="enum.System.IConvertible.ToInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-487">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-487">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-488">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 64-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="28f22-488">Converts the current value to a 64-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-489">Der konvertierte Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-489">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-490">Verwendet <xref:System.Convert> , um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28f22-490">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte&#xA;override this.System.IConvertible.ToSByte : IFormatProvider -&gt; sbyte" Usage="enum.System.IConvertible.ToSByte provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-491">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-491">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-492">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 8-Bit-Ganzzahl mit Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="28f22-492">Converts the current value to an 8-bit signed integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-493">Der konvertierte Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-493">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-494">Verwendet <xref:System.Convert> , um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28f22-494">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToSingle : IFormatProvider -&gt; single&#xA;override this.System.IConvertible.ToSingle : IFormatProvider -&gt; single" Usage="enum.System.IConvertible.ToSingle provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-495">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-495">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-496">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine Gleitkommazahl mit einfacher Genauigkeit.</span><span class="sxs-lookup"><span data-stu-id="28f22-496">Converts the current value to a single-precision floating-point number based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-497">Dieser Member löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="28f22-497">This member always throws an exception.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-498">Derzeit nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="28f22-498">Currently not implemented.</span></span> <span data-ttu-id="28f22-499">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="28f22-499">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="28f22-500">In allen Fällen.</span><span class="sxs-lookup"><span data-stu-id="28f22-500">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToString : IFormatProvider -&gt; string&#xA;override this.System.IConvertible.ToString : IFormatProvider -&gt; string" Usage="enum.System.IConvertible.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName Language="C#">[System.Obsolete("The provider argument is not used. Please use ToString().")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The provider argument is not used. Please use ToString().")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-501">Eine <see cref="T:System.IFormatProvider" />-Implementierung, die kulturspezifische Informationen zum Format des zurückgegebenen Werts bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-501">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span> <span data-ttu-id="28f22-502">Dieses Argument wird nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="28f22-502">This argument is not used.</span></span></param>
        <summary><span data-ttu-id="28f22-503">Diese Methodenüberladung ist veraltet. Verwenden Sie stattdessen <see cref="M:System.Enum.ToString" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-503">This method overload is obsolete; use <see cref="M:System.Enum.ToString" /> instead.</span></span></summary>
        <returns><span data-ttu-id="28f22-504">Die Zeichenfolgendarstellung des Werts dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="28f22-504">The string representation of the value of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToType (type As Type, provider As IFormatProvider) As Object Implements IConvertible.ToType" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToType : Type * IFormatProvider -&gt; obj&#xA;override this.System.IConvertible.ToType : Type * IFormatProvider -&gt; obj" Usage="enum.System.IConvertible.ToType (type, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="28f22-505">Der Typ, in den konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-505">The type to convert to.</span></span></param>
        <param name="provider"><span data-ttu-id="28f22-506">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-506">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-507">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in einen angegebenen Typ.</span><span class="sxs-lookup"><span data-stu-id="28f22-507">Converts the current value to a specified type based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-508">Der konvertierte Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-508">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-509">Verwendet <xref:System.Convert> , um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28f22-509">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16&#xA;override this.System.IConvertible.ToUInt16 : IFormatProvider -&gt; uint16" Usage="enum.System.IConvertible.ToUInt16 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-510">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-510">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-511">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="28f22-511">Converts the current value to a 16-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-512">Der konvertierte Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-512">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-513">Verwendet <xref:System.Convert> , um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28f22-513">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32&#xA;override this.System.IConvertible.ToUInt32 : IFormatProvider -&gt; uint32" Usage="enum.System.IConvertible.ToUInt32 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-514">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-514">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-515">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 32-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="28f22-515">Converts the current value to a 32-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-516">Der konvertierte Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-516">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-517">Verwendet <xref:System.Convert> , um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28f22-517">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberSignature Language="F#" Value="abstract member System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64&#xA;override this.System.IConvertible.ToUInt64 : IFormatProvider -&gt; uint64" Usage="enum.System.IConvertible.ToUInt64 provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-518">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-518">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="28f22-519">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 64-Bit-Ganzzahl ohne Vorzeichen.</span><span class="sxs-lookup"><span data-stu-id="28f22-519">Converts the current value to a 64-bit unsigned integer based on the underlying type.</span></span></summary>
        <returns><span data-ttu-id="28f22-520">Der konvertierte Wert.</span><span class="sxs-lookup"><span data-stu-id="28f22-520">The converted value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-521">Verwendet <xref:System.Convert> , um die Konvertierung auszuführen.</span><span class="sxs-lookup"><span data-stu-id="28f22-521">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberSignature Language="F#" Value="abstract member System.IFormattable.ToString : string * IFormatProvider -&gt; string&#xA;override this.System.IFormattable.ToString : string * IFormatProvider -&gt; string" Usage="enum.System.IFormattable.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6">
          <AttributeName Language="C#">[System.Obsolete("The provider argument is not used. Please use ToString(String).")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The provider argument is not used. Please use ToString(String).")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="28f22-522">Eine Formatangabe.</span><span class="sxs-lookup"><span data-stu-id="28f22-522">A format specification.</span></span></param>
        <param name="provider"><span data-ttu-id="28f22-523">Eine <see cref="T:System.IFormatProvider" />-Implementierung, die kulturspezifische Informationen zum Format des zurückgegebenen Werts bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-523">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span> <span data-ttu-id="28f22-524">Dieses Argument wird nicht verwendet.</span><span class="sxs-lookup"><span data-stu-id="28f22-524">This argument is not used.</span></span></param>
        <summary><span data-ttu-id="28f22-525">Diese Methodenüberladung ist veraltet. Verwenden Sie <see cref="M:System.Enum.ToString(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-525">This method overload is obsolete; use <see cref="M:System.Enum.ToString(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="28f22-526">Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-526">The string representation of the value of this instance, as specified by <paramref name="format" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="28f22-527"><paramref name="format" /> enthält keine gültige Formatangabe.</span><span class="sxs-lookup"><span data-stu-id="28f22-527"><paramref name="format" /> does not contain a valid format specification.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28f22-528"><paramref name="format" /> entspricht „X“, aber der Enumerationstyp ist unbekannt.</span><span class="sxs-lookup"><span data-stu-id="28f22-528"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28f22-529">Konvertiert einen angegebenen Ganzzahlwert in einen Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="28f22-529">Converts a specified integer value to an enumeration member.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Byte) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * byte -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Byte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-530">Der zurückzugebende Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-530">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-531">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-531">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="28f22-532">Konvertiert die angegebene 8-Bit-Ganzzahl ohne Vorzeichen in einen Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="28f22-532">Converts the specified 8-bit unsigned integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="28f22-533">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-533">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-534">Die- <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> Methode konvertiert `value` in einen Enumerationsmember, dessen zugrunde liegender Wert ist `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-534">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="28f22-535">Beachten Sie, dass die Konvertierung auch dann erfolgreich ist, wenn der Wert außerhalb der Grenzen der Member liegt `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-535">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="28f22-536">Um sicherzustellen, dass `value` ein gültiger zugrunde liegender Wert der- `enumType` Enumeration ist, übergeben Sie ihn an die- <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="28f22-536">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="28f22-537">Diese Konvertierungsmethode gibt einen Wert vom Typ zurück <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="28f22-537">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="28f22-538">Sie können Sie dann umwandeln oder in ein Objekt des Typs konvertieren `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-538">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-539"><paramref name="enumType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-539"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-540"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-540"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, short value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int16 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Int16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-541">Der zurückzugebende Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-541">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-542">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-542">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="28f22-543">Konvertiert die angegebene 16-Bit-Ganzzahl mit Vorzeichen in einen Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="28f22-543">Converts the specified 16-bit signed integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="28f22-544">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-544">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-545">Die- <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> Methode konvertiert `value` in einen Enumerationsmember, dessen zugrunde liegender Wert ist `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-545">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="28f22-546">Beachten Sie, dass die Konvertierung auch dann erfolgreich ist, wenn der Wert außerhalb der Grenzen der Member liegt `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-546">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="28f22-547">Um sicherzustellen, dass `value` ein gültiger zugrunde liegender Wert der- `enumType` Enumeration ist, übergeben Sie ihn an die- <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="28f22-547">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="28f22-548">Diese Konvertierungsmethode gibt einen Wert vom Typ zurück <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="28f22-548">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="28f22-549">Sie können Sie dann umwandeln oder in ein Objekt des Typs konvertieren `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-549">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-550"><paramref name="enumType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-550"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-551"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-551"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, int value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-552">Der zurückzugebende Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-552">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-553">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-553">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="28f22-554">Konvertiert die angegebene 32-Bit-Ganzzahl mit Vorzeichen in einen Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="28f22-554">Converts the specified 32-bit signed integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="28f22-555">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-555">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-556">Die- <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> Methode konvertiert `value` in einen Enumerationsmember, dessen zugrunde liegender Wert ist `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-556">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="28f22-557">Beachten Sie, dass die Konvertierung auch dann erfolgreich ist, wenn der Wert außerhalb der Grenzen der Member liegt `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-557">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="28f22-558">Um sicherzustellen, dass `value` ein gültiger zugrunde liegender Wert der- `enumType` Enumeration ist, übergeben Sie ihn an die- <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="28f22-558">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="28f22-559">Diese Konvertierungsmethode gibt einen Wert vom Typ zurück <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="28f22-559">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="28f22-560">Sie können Sie dann umwandeln oder in ein Objekt des Typs konvertieren `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-560">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-561"><paramref name="enumType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-561"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-562"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-562"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, long value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int64 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.Int64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-563">Der zurückzugebende Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-563">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-564">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-564">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="28f22-565">Konvertiert die angegebene 64-Bit-Ganzzahl mit Vorzeichen in einen Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="28f22-565">Converts the specified 64-bit signed integer to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="28f22-566">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-566">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-567">Die- <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> Methode konvertiert `value` in einen Enumerationsmember, dessen zugrunde liegender Wert ist `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-567">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="28f22-568">Beachten Sie, dass die Konvertierung auch dann erfolgreich ist, wenn der Wert außerhalb der Grenzen der Member liegt `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-568">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="28f22-569">Um sicherzustellen, dass `value` ein gültiger zugrunde liegender Wert der- `enumType` Enumeration ist, übergeben Sie ihn an die- <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="28f22-569">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="28f22-570">Diese Konvertierungsmethode gibt einen Wert vom Typ zurück <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="28f22-570">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="28f22-571">Sie können Sie dann umwandeln oder in ein Objekt des Typs konvertieren `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-571">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-572"><paramref name="enumType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-572"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-573"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-573"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * obj -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-574">Der zurückzugebende Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-574">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-575">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-575">The value convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="28f22-576">Konvertiert das angegebene Objekt mit einem ganzzahligen Wert in einen Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="28f22-576">Converts the specified object with an integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="28f22-577">Ein Enumerationsobjekt mit dem Wert <paramref name="value" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-577">An enumeration object whose value is <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-578">Die- <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> Methode konvertiert den `value` ganzzahligen Wert in einen Enumerationsmember, dessen zugrunde liegender Wert ist `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-578">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> method converts the integral value `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="28f22-579">Beachten Sie, dass die Konvertierung auch dann erfolgreich ist, wenn der Wert außerhalb der Grenzen der Member liegt `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-579">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="28f22-580">Um sicherzustellen, dass `value` ein gültiger zugrunde liegender Wert der- `enumType` Enumeration ist, übergeben Sie ihn an die- <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="28f22-580">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="28f22-581">Diese Konvertierungsmethode gibt einen Wert vom Typ zurück <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="28f22-581">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="28f22-582">Sie können Sie dann umwandeln oder in ein Objekt des Typs konvertieren `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-582">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-583"><paramref name="enumType" /> oder <paramref name="value" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-583"><paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-584"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-584"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span>  
  
<span data-ttu-id="28f22-585">- oder -</span><span class="sxs-lookup"><span data-stu-id="28f22-585">-or-</span></span> 
 <span data-ttu-id="28f22-586"><paramref name="value" /> hat nicht den Typ <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" /> oder <see cref="T:System.UInt64" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-586"><paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As SByte) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * sbyte -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.SByte" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-587">Der zurückzugebende Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-587">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-588">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-588">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="28f22-589">Konvertiert den angegebenen Wert einer 8-Bit-Ganzzahl mit Vorzeichen in einen Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="28f22-589">Converts the specified 8-bit signed integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="28f22-590">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-590">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-591">Die- <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> Methode konvertiert `value` in einen Enumerationsmember, dessen zugrunde liegender Wert ist `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-591">The <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="28f22-592">Beachten Sie, dass die Konvertierung auch dann erfolgreich ist, wenn der Wert außerhalb der Grenzen der Member liegt `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-592">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="28f22-593">Um sicherzustellen, dass `value` ein gültiger zugrunde liegender Wert der- `enumType` Enumeration ist, übergeben Sie ihn an die- <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="28f22-593">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="28f22-594">Diese Konvertierungsmethode gibt einen Wert vom Typ zurück <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="28f22-594">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="28f22-595">Sie können Sie dann umwandeln oder in ein Objekt des Typs konvertieren `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-595">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-596"><paramref name="enumType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-596"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-597"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-597"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As UShort) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint16 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.UInt16" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-598">Der zurückzugebende Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-598">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-599">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-599">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="28f22-600">Konvertiert den angegebenen Wert einer 16-Bit-Ganzzahl ohne Vorzeichen in einen Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="28f22-600">Converts the specified 16-bit unsigned integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="28f22-601">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-601">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-602">Die- <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> Methode konvertiert `value` in einen Enumerationsmember, dessen zugrunde liegender Wert ist `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-602">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="28f22-603">Beachten Sie, dass die Konvertierung auch dann erfolgreich ist, wenn der Wert außerhalb der Grenzen der Member liegt `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-603">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="28f22-604">Um sicherzustellen, dass `value` ein gültiger zugrunde liegender Wert der- `enumType` Enumeration ist, übergeben Sie ihn an die- <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="28f22-604">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="28f22-605">Diese Konvertierungsmethode gibt einen Wert vom Typ zurück <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="28f22-605">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="28f22-606">Sie können Sie dann umwandeln oder in ein Objekt des Typs konvertieren `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-606">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-607"><paramref name="enumType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-607"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-608"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-608"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As UInteger) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint32 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.UInt32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-609">Der zurückzugebende Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-609">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-610">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-610">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="28f22-611">Konvertiert den angegebenen Wert einer 32-Bit-Ganzzahl ohne Vorzeichen in einen Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="28f22-611">Converts the specified 32-bit unsigned integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="28f22-612">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-612">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-613">Die- <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> Methode konvertiert `value` in einen Enumerationsmember, dessen zugrunde liegender Wert ist `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-613">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="28f22-614">Beachten Sie, dass die Konvertierung auch dann erfolgreich ist, wenn der Wert außerhalb der Grenzen der Member liegt `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-614">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="28f22-615">Um sicherzustellen, dass `value` ein gültiger zugrunde liegender Wert der- `enumType` Enumeration ist, übergeben Sie ihn an die- <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="28f22-615">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="28f22-616">Diese Konvertierungsmethode gibt einen Wert vom Typ zurück <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="28f22-616">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="28f22-617">Sie können Sie dann umwandeln oder in ein Objekt des Typs konvertieren `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-617">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-618"><paramref name="enumType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-618"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-619"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-619"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As ULong) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint64 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.CLSCompliant(false)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.CLSCompliant(false)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Runtime.InteropServices.ComVisible(true)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.InteropServices.ComVisible(true)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.UInt64" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-620">Der zurückzugebende Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-620">The enumeration type to return.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-621">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-621">The value to convert to an enumeration member.</span></span></param>
        <summary><span data-ttu-id="28f22-622">Konvertiert den angegebenen Wert einer 64-Bit-Ganzzahl ohne Vorzeichen in einen Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="28f22-622">Converts the specified 64-bit unsigned integer value to an enumeration member.</span></span></summary>
        <returns><span data-ttu-id="28f22-623">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-623">An instance of the enumeration set to <paramref name="value" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-624">Die- <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> Methode konvertiert `value` in einen Enumerationsmember, dessen zugrunde liegender Wert ist `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-624">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="28f22-625">Beachten Sie, dass die Konvertierung auch dann erfolgreich ist, wenn der Wert außerhalb der Grenzen der Member liegt `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-625">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="28f22-626">Um sicherzustellen, dass `value` ein gültiger zugrunde liegender Wert der- `enumType` Enumeration ist, übergeben Sie ihn an die- <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="28f22-626">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="28f22-627">Diese Konvertierungsmethode gibt einen Wert vom Typ zurück <xref:System.Object> .</span><span class="sxs-lookup"><span data-stu-id="28f22-627">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="28f22-628">Sie können Sie dann umwandeln oder in ein Objekt des Typs konvertieren `enumType` .</span><span class="sxs-lookup"><span data-stu-id="28f22-628">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="28f22-629"><paramref name="enumType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-629"><paramref name="enumType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-630"><paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-630"><paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span></span></exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28f22-631">Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="28f22-631">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <related type="Article" href="/dotnet/standard/base-types/enumeration-format-strings"><span data-ttu-id="28f22-632">Enumerationsformatzeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="28f22-632">Enumeration Format Strings</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="enum.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="28f22-633">Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="28f22-633">Converts the value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="28f22-634">Die Zeichenfolgendarstellung des Werts dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="28f22-634">The string representation of the value of this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-635">Der Rückgabewert ist mit dem allgemeinen Format Bezeichner ("G") formatiert.</span><span class="sxs-lookup"><span data-stu-id="28f22-635">The return value is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="28f22-636">Das heißt, wenn der <xref:System.FlagsAttribute> nicht auf diesen enumerierten Typ angewendet wird und eine benannte Konstante gleich dem Wert dieser Instanz ist, ist der Rückgabewert eine Zeichenfolge, die den Namen der Konstante enthält.</span><span class="sxs-lookup"><span data-stu-id="28f22-636">That is, if the <xref:System.FlagsAttribute> is not applied to this enumerated type and there is a named constant equal to the value of this instance, then the return value is a string containing the name of the constant.</span></span> <span data-ttu-id="28f22-637">Wenn <xref:System.FlagsAttribute> angewendet wird und eine Kombination aus einer oder mehreren benannten Konstanten gleich dem Wert dieser Instanz ist, ist der Rückgabewert eine Zeichenfolge, die eine durch Trennzeichen getrennte Liste mit den Namen der Konstanten enthält.</span><span class="sxs-lookup"><span data-stu-id="28f22-637">If the <xref:System.FlagsAttribute> is applied and there is a combination of one or more named constants equal to the value of this instance, then the return value is a string containing a delimiter-separated list of the names of the constants.</span></span> <span data-ttu-id="28f22-638">Andernfalls ist der Rückgabewert die Zeichen folgen Darstellung des numerischen Werts dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="28f22-638">Otherwise, the return value is the string representation of the numeric value of this instance.</span></span> <span data-ttu-id="28f22-639">Weitere Informationen zum Formatieren von Enumerationswerten finden Sie unter [Enumerationsformatzeichenfolgen](/dotnet/standard/base-types/enumeration-format-strings).</span><span class="sxs-lookup"><span data-stu-id="28f22-639">For more information about formatting enumeration values, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span> <span data-ttu-id="28f22-640">Weitere Informationen zur allgemeinen Formatierung finden Sie unter [Formatieren von Typen](/dotnet/standard/base-types/formatting-types).</span><span class="sxs-lookup"><span data-stu-id="28f22-640">For more information about formatting in general, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28f22-641">Im folgenden Beispiel wird veranschaulicht, wie ein Enumerationswert in eine Zeichenfolge umgerechnet wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-641">The following example demonstrates converting an enumerated value to a string.</span></span>  

 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CPP/source.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CS/source.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/VB/source.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="28f22-642">Wenn mehrere Enumerationsmember denselben zugrunde liegenden Wert aufweisen und Sie versuchen, die Zeichen folgen Darstellung des Namens eines Enumerationsmembers basierend auf dem zugrunde liegenden Wert abzurufen, sollte der Code keine Annahmen darüber treffen, welcher Name von der Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-642">If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return.</span></span> <span data-ttu-id="28f22-643">Die folgende Enumeration definiert z. b. zwei Member, <c>schattiert. grau</c> und <c>Schattierung. Grey</c>, die den gleichen zugrunde liegenden Wert aufweisen.</span><span class="sxs-lookup"><span data-stu-id="28f22-643">For example, the following enumeration defines two members, <c>Shade.Gray</c> and <c>Shade.Grey</c>, that have the same underlying value.</span></span>  
  
<span data-ttu-id="28f22-644">[! Code-csharp[System. Enum.-Zeichenfolge Nr. 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [! Code-vb[System. Enum.-Zeichenfolge Nr. 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="28f22-644">[!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span></span> 
<span data-ttu-id="28f22-645">Der folgende Methoden Aufrufversuch versucht, den Namen eines Members der <c>Schattierung</c> abzurufen, dessen zugrunde liegender Wert 1 ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-645">The following method call attempts to retrieve the name of a member of the <c>Shade</c> enumeration whose underlying value is 1.</span></span> <span data-ttu-id="28f22-646">Die Methode kann entweder "Gray" oder "Grey" zurückgeben, und Ihr Code sollte keine Annahmen darüber treffen, welche Zeichenfolge zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-646">The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.</span></span>  
  
<span data-ttu-id="28f22-647">[! Code-csharp[System. Enum.-Zeichenfolge # 2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#2)] [! Code-vb[System. Enum. destring # 2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#2)]</span><span class="sxs-lookup"><span data-stu-id="28f22-647">[!code-csharp[System.Enum.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#2)] [!code-vb[System.Enum.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#2)]</span></span></para></block>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider? provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="enum.ToString provider" />
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The provider argument is not used. Please use ToString().")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The provider argument is not used. Please use ToString().")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="28f22-648">(Veraltet)</span><span class="sxs-lookup"><span data-stu-id="28f22-648">(obsolete)</span></span></param>
        <summary><span data-ttu-id="28f22-649">Diese Methodenüberladung ist veraltet. Verwenden Sie <see cref="M:System.Enum.ToString" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-649">This method overload is obsolete; use <see cref="M:System.Enum.ToString" />.</span></span></summary>
        <returns><span data-ttu-id="28f22-650">Die Zeichenfolgendarstellung des Werts dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="28f22-650">The string representation of the value of this instance.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="enum.ToString format" />
      <MemberSignature Language="C#" Value="public string ToString (string? format);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="28f22-651">Eine Formatzeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="28f22-651">A format string.</span></span></param>
        <summary><span data-ttu-id="28f22-652">Konvertiert den Wert dieser Instanz anhand des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</span><span class="sxs-lookup"><span data-stu-id="28f22-652">Converts the value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="28f22-653">Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-653">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-654">Der `format` Parameter kann eine der folgenden Format Zeichenfolgen sein: "g" oder "g", "d" oder "d", "x" oder "x" und "f" oder "f" (bei der Format Zeichenfolge wird die Groß-/Kleinschreibung nicht beachtet).</span><span class="sxs-lookup"><span data-stu-id="28f22-654">The `format` parameter can be one of the following format strings: "G" or "g", "D" or "d", "X" or "x", and "F" or "f" (the format string is not case-sensitive).</span></span> <span data-ttu-id="28f22-655">Wenn `format` `null` oder eine leere Zeichenfolge ("") ist, wird der allgemeine Format Bezeichner ("G") verwendet.</span><span class="sxs-lookup"><span data-stu-id="28f22-655">If `format` is `null` or an empty string (""), the general format specifier ("G") is used.</span></span> <span data-ttu-id="28f22-656">Weitere Informationen zu Enumerationsformatzeichenfolgen und Formatierungen von Enumerationswerten finden Sie unter [Enumerationsformatzeichenfolgen](/dotnet/standard/base-types/enumeration-format-strings).</span><span class="sxs-lookup"><span data-stu-id="28f22-656">For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span> <span data-ttu-id="28f22-657">Weitere Informationen zur allgemeinen Formatierung finden Sie unter [Formatieren von Typen](/dotnet/standard/base-types/formatting-types).</span><span class="sxs-lookup"><span data-stu-id="28f22-657">For more information about formatting in general, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28f22-658">Im folgenden Beispiel wird veranschaulicht, wie ein Enumerationswert in eine Zeichenfolge konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-658">The following example demonstrates how to convert an enumerated value to a string.</span></span>  
  
 :::code language="cpp" source="~/samples/snippets/cpp/VS_Snippets_CLR/enum.tostring/CPP/tostr.cpp" id="Snippet1":::
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR/enum.tostring/CS/tostr.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR/enum.tostring/VB/tostr.vb" id="Snippet1":::

 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="28f22-659"><paramref name="format" /> enthält eine ungültige Angabe.</span><span class="sxs-lookup"><span data-stu-id="28f22-659"><paramref name="format" /> contains an invalid specification.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28f22-660"><paramref name="format" /> entspricht „X“, aber der Enumerationstyp ist unbekannt.</span><span class="sxs-lookup"><span data-stu-id="28f22-660"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="28f22-661">Wenn mehrere Enumerationsmember denselben zugrunde liegenden Wert aufweisen und Sie versuchen, die Zeichen folgen Darstellung des Namens eines Enumerationsmembers basierend auf dem zugrunde liegenden Wert abzurufen, sollte der Code keine Annahmen darüber treffen, welcher Name von der Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-661">If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return.</span></span> <span data-ttu-id="28f22-662">Die folgende Enumeration definiert z. b. zwei Member, <c>schattiert. grau</c> und <c>Schattierung. Grey</c>, die den gleichen zugrunde liegenden Wert aufweisen.</span><span class="sxs-lookup"><span data-stu-id="28f22-662">For example, the following enumeration defines two members, <c>Shade.Gray</c> and <c>Shade.Grey</c>, that have the same underlying value.</span></span>  
  
<span data-ttu-id="28f22-663">[! Code-csharp[System. Enum.-Zeichenfolge Nr. 1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [! Code-vb[System. Enum.-Zeichenfolge Nr. 1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="28f22-663">[!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]</span></span> 
<span data-ttu-id="28f22-664">Der folgende Methoden Aufrufversuch versucht, den Namen eines Members der <c>Schattierung</c> abzurufen, dessen zugrunde liegender Wert 1 ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-664">The following method call attempts to retrieve the name of a member of the <c>Shade</c> enumeration whose underlying value is 1.</span></span> <span data-ttu-id="28f22-665">Die Methode kann entweder "Gray" oder "Grey" zurückgeben, und Ihr Code sollte keine Annahmen darüber treffen, welche Zeichenfolge zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-665">The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.</span></span>  
  
<span data-ttu-id="28f22-666">[! Code-csharp[System. Enum.-Zeichenfolge Nr. 3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#3)] [! Code-vb[System. Enum.-Zeichenfolge Nr. 3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#3)]</span><span class="sxs-lookup"><span data-stu-id="28f22-666">[!code-csharp[System.Enum.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#3)] [!code-vb[System.Enum.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#3)]</span></span></para></block>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
        <altmember cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="28f22-667">Formatieren von Typen in .NET</span><span class="sxs-lookup"><span data-stu-id="28f22-667">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/enumeration-format-strings"><span data-ttu-id="28f22-668">Enumerationsformatzeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="28f22-668">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string? ToString (string format, IFormatProvider provider);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="enum.ToString (format, provider)" />
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName Language="C#">[System.Obsolete("The provider argument is not used. Please use ToString(String).")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Obsolete("The provider argument is not used. Please use ToString(String).")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="28f22-669">Eine Formatangabe.</span><span class="sxs-lookup"><span data-stu-id="28f22-669">A format specification.</span></span></param>
        <param name="provider"><span data-ttu-id="28f22-670">(Veraltet)</span><span class="sxs-lookup"><span data-stu-id="28f22-670">(Obsolete.)</span></span></param>
        <summary><span data-ttu-id="28f22-671">Diese Methodenüberladung ist veraltet. Verwenden Sie <see cref="M:System.Enum.ToString(System.String)" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-671">This method overload is obsolete; use <see cref="M:System.Enum.ToString(System.String)" />.</span></span></summary>
        <returns><span data-ttu-id="28f22-672">Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-672">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-673">Der `format` Parameter kann eine der folgenden Format Zeichenfolgen sein: "g" oder "g", "d" oder "d", "x" oder "x" und "f" oder "f" (bei der Format Zeichenfolge wird die Groß-/Kleinschreibung nicht beachtet).</span><span class="sxs-lookup"><span data-stu-id="28f22-673">The `format` parameter can be one of the following format strings: "G" or "g", "D" or "d", "X" or "x", and "F" or "f" (the format string is not case-sensitive).</span></span> <span data-ttu-id="28f22-674">Wenn `format` `null` oder eine leere Zeichenfolge ("") ist, wird der allgemeine Format Bezeichner ("G") verwendet.</span><span class="sxs-lookup"><span data-stu-id="28f22-674">If `format` is `null` or an empty string (""), the general format specifier ("G") is used.</span></span> <span data-ttu-id="28f22-675">Weitere Informationen zu Enumerationsformatzeichenfolgen und Formatierungen von Enumerationswerten finden Sie unter [Enumerationsformatzeichenfolgen](/dotnet/standard/base-types/enumeration-format-strings).</span><span class="sxs-lookup"><span data-stu-id="28f22-675">For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](/dotnet/standard/base-types/enumeration-format-strings).</span></span> <span data-ttu-id="28f22-676">Weitere Informationen zur allgemeinen Formatierung finden Sie unter [Formatieren von Typen](/dotnet/standard/base-types/formatting-types).</span><span class="sxs-lookup"><span data-stu-id="28f22-676">For more information about formatting in general, see [Formatting Types](/dotnet/standard/base-types/formatting-types).</span></span>  
  
 <span data-ttu-id="28f22-677">Geben Sie nur an `format` . der- `provider` Parameter ist veraltet.</span><span class="sxs-lookup"><span data-stu-id="28f22-677">Specify only `format`; the `provider` parameter is obsolete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="28f22-678"><paramref name="format" /> enthält keine gültige Formatangabe.</span><span class="sxs-lookup"><span data-stu-id="28f22-678"><paramref name="format" /> does not contain a valid format specification.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="28f22-679"><paramref name="format" /> entspricht „X“, aber der Enumerationstyp ist unbekannt.</span><span class="sxs-lookup"><span data-stu-id="28f22-679"><paramref name="format" /> equals "X", but the enumeration type is unknown.</span></span></exception>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <related type="Article" href="/dotnet/standard/base-types/formatting-types"><span data-ttu-id="28f22-680">Formatieren von Typen in .NET</span><span class="sxs-lookup"><span data-stu-id="28f22-680">Formatting Types in .NET</span></span></related>
        <related type="Article" href="/dotnet/standard/base-types/enumeration-format-strings"><span data-ttu-id="28f22-681">Enumerationsformatzeichenfolgen</span><span class="sxs-lookup"><span data-stu-id="28f22-681">Enumeration Format Strings</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="28f22-682">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="28f22-682">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="28f22-683">Der Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="28f22-683">The return value indicates whether the conversion succeeded.</span></span></summary>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Type? enumType, string value, out object result);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class System.Type enumType, string value, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse(System.Type,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (enumType As Type, value As String, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Type ^ enumType, System::String ^ value, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : Type * string * obj -&gt; bool" Usage="System.Enum.TryParse (enumType, value, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (Type enumType, string value, out object result);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Object" RefType="out" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-684">Der für die Analyse zu verwendende Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-684">The enum type to use for parsing.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-685">Die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten.</span><span class="sxs-lookup"><span data-stu-id="28f22-685">The string representation of the name or numeric value of one or more enumerated constants.</span></span></param>
        <param name="result"><span data-ttu-id="28f22-686">Wenn diese Methode <see langword="true" /> zurückgibt, ein Objekt, das eine Enumerationskonstante enthält, die den analysierten Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-686">When this method returns <see langword="true" />, an object containing an enumeration constant representing the parsed value.</span></span></param>
        <summary><span data-ttu-id="28f22-687">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="28f22-687">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span></summary>
        <returns><span data-ttu-id="28f22-688"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-688"><see langword="true" /> if the conversion succeeded; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Type? enumType, string value, bool ignoreCase, out object result);" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class System.Type enumType, string value, bool ignoreCase, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse(System.Type,System.String,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (enumType As Type, value As String, ignoreCase As Boolean, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Type ^ enumType, System::String ^ value, bool ignoreCase, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : Type * string * bool * obj -&gt; bool" Usage="System.Enum.TryParse (enumType, value, ignoreCase, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse (Type enumType, string value, bool ignoreCase, out object result);" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="value" Type="System.String" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
        <Parameter Name="result" Type="System.Object" RefType="out" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0" />
      </Parameters>
      <Docs>
        <param name="enumType"><span data-ttu-id="28f22-689">Der für die Analyse zu verwendende Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-689">The enum type to use for parsing.</span></span></param>
        <param name="value"><span data-ttu-id="28f22-690">Die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten.</span><span class="sxs-lookup"><span data-stu-id="28f22-690">The string representation of the name or numeric value of one or more enumerated constants.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="28f22-691"><see langword="true" />, um <paramref name="value" /> im Modus ohne Berücksichtigung von Groß-/Kleinschreibung zu lesen; <see langword="false" />, um <paramref name="value" /> im Modus mit Berücksichtigung von Groß-/Kleinschreibung zu lesen.</span><span class="sxs-lookup"><span data-stu-id="28f22-691"><see langword="true" /> to read <paramref name="value" /> in case insensitive mode; <see langword="false" /> to read <paramref name="value" /> in case sensitive mode.</span></span></param>
        <param name="result"><span data-ttu-id="28f22-692">Wenn diese Methode <see langword="true" /> zurückgibt, ein Objekt, das eine Enumerationskonstante enthält, die den analysierten Wert darstellt.</span><span class="sxs-lookup"><span data-stu-id="28f22-692">When this method returns <see langword="true" />, an object containing an enumeration constant representing the parsed value.</span></span></param>
        <summary><span data-ttu-id="28f22-693">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="28f22-693">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span></summary>
        <returns><span data-ttu-id="28f22-694"><see langword="true" />, wenn die Konvertierung erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-694"><see langword="true" /> if the conversion succeeded; <see langword="false" /> otherwise.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string value, out TEnum result) where TEnum : struct;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, [out] !!TEnum&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse(Of TEnum As Structure) (value As String, ByRef result As TEnum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] TEnum % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * 'Enum -&gt; bool (requires 'Enum : struct)" Usage="System.Enum.TryParse (value, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string? value, out TEnum result) where TEnum : struct;" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="TEnum" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><span data-ttu-id="28f22-695">Der Enumerationstyp, in den <paramref name="value" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-695">The enumeration type to which to convert <paramref name="value" />.</span></span></typeparam>
        <param name="value"><span data-ttu-id="28f22-696">Die Zeichenfolgendarstellung des Enumerationsnamens oder zugrunde liegenden Werts, der konvertiert werden soll. Dabei muss die Groß- und Kleinschreibung beachtet werden.</span><span class="sxs-lookup"><span data-stu-id="28f22-696">The case-sensitive string representation of the enumeration name or underlying value to convert.</span></span></param>
        <param name="result"><span data-ttu-id="28f22-697">Bei Rückgabe dieser Methode enthält <paramref name="result" /> ein Objekt des Typs <c>TEnum</c>, dessen Wert durch <paramref name="value" /> dargestellt wird, wenn der Analysevorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-697">When this method returns, <paramref name="result" /> contains an object of type <c>TEnum</c> whose value is represented by <paramref name="value" /> if the parse operation succeeds.</span></span> <span data-ttu-id="28f22-698">Wenn der Analysevorgang fehlschlägt, enthält <paramref name="result" /> den Standardwert des zugrunde liegenden Typs von <c>TEnum</c>.</span><span class="sxs-lookup"><span data-stu-id="28f22-698">If the parse operation fails, <paramref name="result" /> contains the default value of the underlying type of <c>TEnum</c>.</span></span> <span data-ttu-id="28f22-699">Beachten Sie, dass dieser Wert kein Mitglied der <c>TEnum</c>-Enumeration sein muss.</span><span class="sxs-lookup"><span data-stu-id="28f22-699">Note that this value need not be a member of the <c>TEnum</c> enumeration.</span></span> <span data-ttu-id="28f22-700">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="28f22-700">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="28f22-701">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="28f22-701">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="28f22-702">Der Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="28f22-702">The return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="28f22-703"><see langword="true" />, wenn der <paramref name="value" />-Parameter erfolgreich konvertiert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-703"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-704"><xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> ist identisch mit der- <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> Methode, mit der Ausnahme, dass anstelle einer-Ausnahme zurückgegeben wird, `false` Wenn die Konvertierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="28f22-704"><xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails.</span></span> <span data-ttu-id="28f22-705">Bei der Verarbeitung der Zeichen folgen Darstellung eines Enumerationswerts entfällt die Notwendigkeit der Ausnahmebehandlung.</span><span class="sxs-lookup"><span data-stu-id="28f22-705">It eliminates the need for exception handling when parsing the string representation of an enumeration value.</span></span>  
  
 <span data-ttu-id="28f22-706">Der `value` -Parameter enthält die Zeichen folgen Darstellung des zugrunde liegenden Werts oder der benannten Konstante eines Enumerationsmembers bzw. eine Liste benannter Konstanten oder zugrunde liegender Werte, die durch Kommas (,) getrennt sind.</span><span class="sxs-lookup"><span data-stu-id="28f22-706">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</span></span> <span data-ttu-id="28f22-707">Wenn `value` mehrere benannte Konstanten oder Werte enthält, kann ein oder mehrere Leerzeichen dem Wert, dem Namen oder dem Komma in vorangestellt sein oder folgen `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-707">If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="28f22-708">Wenn `value` eine Liste ist, gibt `result` den Wert der angegebenen Namen oder zugrunde liegenden Werte in Kombination mit einer bitweisen `OR` Operation wieder.</span><span class="sxs-lookup"><span data-stu-id="28f22-708">If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation.</span></span> <span data-ttu-id="28f22-709">Wenn `value` die Zeichen folgen Darstellung des Namens eines Enumerationswerts ist, wird beim Vergleich von `value` mit Enumerationsnamen die Groß-/Kleinschreibung beachtet.</span><span class="sxs-lookup"><span data-stu-id="28f22-709">If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names is case-sensitive.</span></span>  
  
 <span data-ttu-id="28f22-710">Wenn `value` ein Name ist, der keiner benannten Konstante von entspricht `TEnum` , gibt die Methode zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="28f22-710">If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`.</span></span> <span data-ttu-id="28f22-711">Wenn `value` die Zeichen folgen Darstellung einer ganzen Zahl ist, die keinen zugrunde liegenden Wert der- `TEnum` Enumeration darstellt, gibt die Methode einen Enumerationsmember zurück, dessen zugrunde liegender Wert in einen ganzzahligen `value` Typ konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-711">If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="28f22-712">Wenn dieses Verhalten nicht erwünscht ist, wird die-Methode aufgerufen, <xref:System.Enum.IsDefined%2A> um sicherzustellen, dass eine bestimmte Zeichen folgen Darstellung einer ganzen Zahl tatsächlich ein Member von ist `TEnum` .</span><span class="sxs-lookup"><span data-stu-id="28f22-712">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28f22-713">Im folgenden Beispiel wird eine- `Colors` Enumeration definiert, die-Methode aufgerufen, um Zeichen folgen <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> in die entsprechenden-Enumerationswerte zu konvertieren, und die-Methode wird aufgerufen, <xref:System.Enum.IsDefined%2A> um sicherzustellen, dass bestimmte ganzzahlige Werte in der- `Colors` Enumeration</span><span class="sxs-lookup"><span data-stu-id="28f22-713">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse1.cs" interactive="try-dotnet" id="Snippet1":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse1.vb" id="Snippet1":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-714"><paramref name="TEnum" /> ist kein Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-714"><paramref name="TEnum" /> is not an enumeration type.</span></span></exception>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string value, bool ignoreCase, out TEnum result) where TEnum : struct;" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, bool ignoreCase, [out] !!TEnum&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse(Of TEnum As Structure) (value As String, ignoreCase As Boolean, ByRef result As TEnum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static bool TryParse(System::String ^ value, bool ignoreCase, [Runtime::InteropServices::Out] TEnum % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * bool * 'Enum -&gt; bool (requires 'Enum : struct)" Usage="System.Enum.TryParse (value, ignoreCase, result)" />
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string? value, bool ignoreCase, out TEnum result) where TEnum : struct;" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Security.SecuritySafeCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecuritySafeCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="ignoreCase" Type="System.Boolean" Index="1" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="TEnum" RefType="out" Index="2" FrameworkAlternate="dotnet-uwp-10.0;net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum"><span data-ttu-id="28f22-715">Der Enumerationstyp, in den <paramref name="value" /> konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-715">The enumeration type to which to convert <paramref name="value" />.</span></span></typeparam>
        <param name="value"><span data-ttu-id="28f22-716">Die Zeichenfolgendarstellung des Enumerationsnamens oder zugrunde liegenden Werts, der konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="28f22-716">The string representation of the enumeration name or underlying value to convert.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="28f22-717"><see langword="true" />, wenn Groß-/Kleinschreibung nicht beachtet wird. <see langword="false" />, wenn Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-717"><see langword="true" /> to ignore case; <see langword="false" /> to consider case.</span></span></param>
        <param name="result"><span data-ttu-id="28f22-718">Bei Rückgabe dieser Methode enthält <paramref name="result" /> ein Objekt des Typs <c>TEnum</c>, dessen Wert durch <paramref name="value" /> dargestellt wird, wenn der Analysevorgang erfolgreich ist.</span><span class="sxs-lookup"><span data-stu-id="28f22-718">When this method returns, <paramref name="result" /> contains an object of type <c>TEnum</c> whose value is represented by <paramref name="value" /> if the parse operation succeeds.</span></span> <span data-ttu-id="28f22-719">Wenn der Analysevorgang fehlschlägt, enthält <paramref name="result" /> den Standardwert des zugrunde liegenden Typs von <c>TEnum</c>.</span><span class="sxs-lookup"><span data-stu-id="28f22-719">If the parse operation fails, <paramref name="result" /> contains the default value of the underlying type of <c>TEnum</c>.</span></span> <span data-ttu-id="28f22-720">Beachten Sie, dass dieser Wert kein Mitglied der <c>TEnum</c>-Enumeration sein muss.</span><span class="sxs-lookup"><span data-stu-id="28f22-720">Note that this value need not be a member of the <c>TEnum</c> enumeration.</span></span> <span data-ttu-id="28f22-721">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="28f22-721">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="28f22-722">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span><span class="sxs-lookup"><span data-stu-id="28f22-722">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span></span> <span data-ttu-id="28f22-723">Ein Parameter gibt an, ob beim Vorgang die Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-723">A parameter specifies whether the operation is case-sensitive.</span></span> <span data-ttu-id="28f22-724">Der Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="28f22-724">The return value indicates whether the conversion succeeded.</span></span></summary>
        <returns><span data-ttu-id="28f22-725"><see langword="true" />, wenn der <paramref name="value" />-Parameter erfolgreich konvertiert wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="28f22-725"><see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="28f22-726"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> ist identisch mit der- <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> Methode, mit der Ausnahme, dass anstelle einer-Ausnahme zurückgegeben wird, `false` Wenn die Konvertierung fehlschlägt.</span><span class="sxs-lookup"><span data-stu-id="28f22-726"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails.</span></span> <span data-ttu-id="28f22-727">Bei der Verarbeitung der Zeichen folgen Darstellung eines Enumerationswerts entfällt die Notwendigkeit der Ausnahmebehandlung.</span><span class="sxs-lookup"><span data-stu-id="28f22-727">It eliminates the need for exception handling when parsing the string representation of an enumeration value.</span></span>  
  
 <span data-ttu-id="28f22-728">Der `value` -Parameter enthält die Zeichen folgen Darstellung des zugrunde liegenden Werts oder der benannten Konstante eines Enumerationsmembers bzw. eine Liste benannter Konstanten oder zugrunde liegender Werte, die durch Kommas (,) getrennt sind.</span><span class="sxs-lookup"><span data-stu-id="28f22-728">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</span></span> <span data-ttu-id="28f22-729">Wenn `value` mehrere benannte Konstanten oder Werte enthält, kann ein oder mehrere Leerzeichen dem Wert, dem Namen oder dem Komma in vorangestellt sein oder folgen `value` .</span><span class="sxs-lookup"><span data-stu-id="28f22-729">If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="28f22-730">Wenn `value` eine Liste ist, gibt `result` den Wert der angegebenen Namen oder zugrunde liegenden Werte in Kombination mit einer bitweisen `OR` Operation wieder.</span><span class="sxs-lookup"><span data-stu-id="28f22-730">If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation.</span></span> <span data-ttu-id="28f22-731">Wenn `value` die Zeichen folgen Darstellung des Namens eines Enumerationswerts ist, hängt der Vergleich von `value` mit Enumerationsnamen vom- `ignoreCase` Parameter ab.</span><span class="sxs-lookup"><span data-stu-id="28f22-731">If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names depends on the `ignoreCase` parameter.</span></span> <span data-ttu-id="28f22-732">Wenn `true` der Wert ist, wird beim Vergleich die Groß-/Kleinschreibung nicht beachtet `false`</span><span class="sxs-lookup"><span data-stu-id="28f22-732">If `true`, the comparison is case-insensitive; if `false`, it is case-sensitive.</span></span>  
  
 <span data-ttu-id="28f22-733">Wenn `value` ein Name ist, der keiner benannten Konstante von entspricht `TEnum` , gibt die Methode zurück `false` .</span><span class="sxs-lookup"><span data-stu-id="28f22-733">If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`.</span></span> <span data-ttu-id="28f22-734">Wenn `value` die Zeichen folgen Darstellung einer ganzen Zahl ist, die keinen zugrunde liegenden Wert der- `TEnum` Enumeration darstellt, gibt die Methode einen Enumerationsmember zurück, dessen zugrunde liegender Wert in einen ganzzahligen `value` Typ konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="28f22-734">If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="28f22-735">Wenn dieses Verhalten nicht erwünscht ist, wird die-Methode aufgerufen, <xref:System.Enum.IsDefined%2A> um sicherzustellen, dass eine bestimmte Zeichen folgen Darstellung einer ganzen Zahl tatsächlich ein Member von ist `TEnum` .</span><span class="sxs-lookup"><span data-stu-id="28f22-735">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="28f22-736">Im folgenden Beispiel wird eine- `Colors` Enumeration definiert, die-Methode aufgerufen, um Zeichen folgen <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> in die entsprechenden-Enumerationswerte zu konvertieren, und die-Methode wird aufgerufen, <xref:System.Enum.IsDefined%2A> um sicherzustellen, dass bestimmte ganzzahlige Werte in der- `Colors` Enumeration</span><span class="sxs-lookup"><span data-stu-id="28f22-736">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span> <span data-ttu-id="28f22-737">Die <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> -Methode verwendet Vergleiche ohne Berücksichtigung der Groß-/Kleinschreibung beim Konvertieren der Zeichen folgen Darstellungen von benannten Konstanten in ihre entsprechenden Enumerationswerte.</span><span class="sxs-lookup"><span data-stu-id="28f22-737">The <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method uses case-insensitive comparison when trying to convert the string representations of named constants to their equivalent enumeration values.</span></span>  
  
 :::code language="csharp" source="~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse2.cs" interactive="try-dotnet" id="Snippet2":::
 :::code language="vb" source="~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse2.vb" id="Snippet2":::
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="28f22-738"><paramref name="TEnum" /> ist kein Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="28f22-738"><paramref name="TEnum" /> is not an enumeration type.</span></span></exception>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String,System.Boolean)" />
      </Docs>
    </Member>
  </Members>
</Type>
