<Type Name="Enum" FullName="System.Enum">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99f214e1b0b59cd98cb95ac14df6352797e1f4ec" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36432384" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Enum : ValueType, IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Enum extends System.ValueType implements class System.IComparable, class System.IConvertible, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Enum" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Enum&#xA;Inherits ValueType&#xA;Implements IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Enum abstract : ValueType, IComparable, IConvertible, IFormattable" />
  <TypeSignature Language="F#" Value="type Enum = class&#xA;    inherit ValueType&#xA;    interface IComparable&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="a0fd0-101">Stellt die Basisklasse für Enumerationen bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0fd0-101">Provides the base class for enumerations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-102">Eine Enumeration ist ein Satz von benannten Konstanten, deren zugrunde liegenden Typ jedes beliebigen ganzzahligen Typs ist.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-102">An enumeration is a set of named constants whose underlying type is any integral type.</span></span> <span data-ttu-id="a0fd0-103">Wenn kein zugrunde liegender Typ explizit deklariert wird, <xref:System.Int32> verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-103">If no underlying type is explicitly declared, <xref:System.Int32> is used.</span></span> <span data-ttu-id="a0fd0-104"><xref:System.Enum> ist die Basisklasse für alle Enumerationen in .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-104"><xref:System.Enum> is the base class for all enumerations in the .NET Framework.</span></span> <span data-ttu-id="a0fd0-105">Enumerationstypen werden definiert, indem Sie die `enum` -Schlüsselwort in c# und die `Enum`... `End Enum` in Visual Basic erstellen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-105">Enumeration types are defined by the `enum` keyword in C# and the `Enum`...`End Enum` construct in Visual Basic.</span></span>  
  
 <span data-ttu-id="a0fd0-106"><xref:System.Enum> Stellt Methoden zum Vergleichen von Instanzen dieser Klasse, Konvertieren des Werts einer Instanz in die Zeichenfolgendarstellung, konvertieren die angegebene Zeichenfolgendarstellung einer Zahl in eine Instanz dieser Klasse, und erstellen eine Instanz einer angegebenen Enumeration und Wert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-106"><xref:System.Enum> provides methods for comparing instances of this class, converting the value of an instance to its string representation, converting the string representation of a number to an instance of this class, and creating an instance of a specified enumeration and value.</span></span>  
  
 <span data-ttu-id="a0fd0-107">Sie können auch eine Enumeration als Bitfeld behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-107">You can also treat an enumeration as a bit field.</span></span> <span data-ttu-id="a0fd0-108">Weitere Informationen finden Sie unter der [Nichtexklusiv Mitglieder und das Attribut Flags](#Flags) Abschnitt und der <xref:System.FlagsAttribute> Thema.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-108">For more information, see the [Non-Exclusive Members and the Flags Attribute](#Flags) section and the <xref:System.FlagsAttribute> topic.</span></span>  
  
 <span data-ttu-id="a0fd0-109">In diesem Thema:</span><span class="sxs-lookup"><span data-stu-id="a0fd0-109">In this topic:</span></span>  
  
 <span data-ttu-id="a0fd0-110">[Erstellen einen Enumerationstyp](#Creating) </span><span class="sxs-lookup"><span data-stu-id="a0fd0-110">[Creating an enumeration type](#Creating) </span></span>  
 <span data-ttu-id="a0fd0-111">[Instanziieren einen Enumerationstyp](#Instantiating) </span><span class="sxs-lookup"><span data-stu-id="a0fd0-111">[Instantiating an enumeration type](#Instantiating) </span></span>  
 <span data-ttu-id="a0fd0-112">[Enumeration bewährte Methoden](#BestPractices) </span><span class="sxs-lookup"><span data-stu-id="a0fd0-112">[Enumeration best practices](#BestPractices) </span></span>  
 <span data-ttu-id="a0fd0-113">[Ausführen von Vorgängen mit Enumerationen](#Operations) </span><span class="sxs-lookup"><span data-stu-id="a0fd0-113">[Performing operations with enumerations](#Operations) </span></span>  
 [<span data-ttu-id="a0fd0-114">Durchführen von Konvertierungen</span><span class="sxs-lookup"><span data-stu-id="a0fd0-114">Performing conversions</span></span>](#conversions)  
 [<span data-ttu-id="a0fd0-115">Analysieren von Enumerationswerte</span><span class="sxs-lookup"><span data-stu-id="a0fd0-115">Parsing enumeration values</span></span>](#parsing)  
 [<span data-ttu-id="a0fd0-116">Formatieren von Enumerationswerten</span><span class="sxs-lookup"><span data-stu-id="a0fd0-116">Formatting enumeration values</span></span>](#formatting)  
[<span data-ttu-id="a0fd0-117">Durchlaufen von Enumerationsmembern</span><span class="sxs-lookup"><span data-stu-id="a0fd0-117">Iterating enumeration members</span></span>](#iterating)  
[<span data-ttu-id="a0fd0-118">Nichtexklusiv Member und den Flags-Attribut</span><span class="sxs-lookup"><span data-stu-id="a0fd0-118">Non-exclusive members and the Flags attribute</span></span>](#Flags)  
[<span data-ttu-id="a0fd0-119">Hinzufügen von Enumerationsmethoden</span><span class="sxs-lookup"><span data-stu-id="a0fd0-119">Adding enumeration methods</span></span>](#methods)  
  
<a name="Creating"></a>   
## <a name="creating-an-enumeration-type"></a><span data-ttu-id="a0fd0-120">Erstellen einen Enumerationstyp</span><span class="sxs-lookup"><span data-stu-id="a0fd0-120">Creating an enumeration type</span></span>  
 <span data-ttu-id="a0fd0-121">Programmiersprachen bieten in der Regel die Syntax zum Deklarieren einer Enumeration, die der einen Satz von benannten Konstanten und deren Werten besteht.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-121">Programming languages typically provide syntax to declare an enumeration that consists of a set of named constants and their values.</span></span> <span data-ttu-id="a0fd0-122">Das folgende Beispiel veranschaulicht die Syntax von c# und Visual Basic verwendet werden, um eine Enumeration zu definieren.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-122">The following example illustrates the syntax used by C# and Visual Basic to define an enumeration.</span></span> <span data-ttu-id="a0fd0-123">Erstellt eine Enumeration namens `ArrivalStatus` , besitzt drei Member: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, und `ArrivalStatus.Late`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-123">It creates an enumeration named `ArrivalStatus` that has three members: `ArrivalStatus.Early`, `ArrivalStatus.OnTime`, and `ArrivalStatus.Late`.</span></span> <span data-ttu-id="a0fd0-124">Beachten Sie, dass in beiden Fällen wird die Enumeration nicht explizit von erbt <xref:System.Enum>; die vererbungsbeziehung wird vom Compiler implizit behandelt.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-124">Note that in both cases, the enumeration does not explicitly inherit from <xref:System.Enum>; the inheritance relationship is handled implicitly by the compiler.</span></span>  
  
 [!code-csharp[System.Enum.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#1)]
 [!code-vb[System.Enum.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#1)]  
  
> [!WARNING]
>  <span data-ttu-id="a0fd0-125">Erstellen Sie nie einen Enumerationstyp, dessen zugrunde liegender Typ nicht ganzzahligen ist, oder <xref:System.Char>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-125">You should never create an enumeration type whose underlying type is non-integral or <xref:System.Char>.</span></span> <span data-ttu-id="a0fd0-126">Obwohl solche einen Enumerationstyp mithilfe der Reflektion erstellt werden kann, wird Methodenaufrufe, die den resultierenden Typ zu verwenden sind unzuverlässig und möglicherweise auch zusätzliche Ausnahmen auslösen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-126">Although you can create such an enumeration type by using reflection, method calls that use the resulting type are unreliable and may also throw additional exceptions.</span></span>  
  
<a name="Instantiating"></a>   
## <a name="instantiating-an-enumeration-type"></a><span data-ttu-id="a0fd0-127">Instanziieren einen Enumerationstyp</span><span class="sxs-lookup"><span data-stu-id="a0fd0-127">Instantiating an enumeration type</span></span>  
 <span data-ttu-id="a0fd0-128">Sie können einen Enumerationstyp instanziieren, so wie Sie einem beliebigen anderen Werttyp instanziieren: durch Deklarieren einer Variablen und eine der Konstanten für die Enumeration zuweisen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-128">You can instantiate an enumeration type just as you instantiate any other value type: by declaring a variable and assigning one of the enumeration's constants to it.</span></span> <span data-ttu-id="a0fd0-129">Im folgenden Beispiel wird ein `ArrivalStatus` , dessen Wert `ArrivalStatus.OnTime`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-129">The following example instantiates an `ArrivalStatus` whose value is `ArrivalStatus.OnTime`.</span></span>  
  
 [!code-csharp[System.Enum.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class1.cs#2)]
 [!code-vb[System.Enum.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class1.vb#2)]  
  
 <span data-ttu-id="a0fd0-130">Sie können auch einen Enumerationswert auf folgende Weise instanziieren:</span><span class="sxs-lookup"><span data-stu-id="a0fd0-130">You can also instantiate an enumeration value in the following ways:</span></span>  
  
-   <span data-ttu-id="a0fd0-131">Mithilfe von einer bestimmten Programmiersprache Funktionen umgewandelt (in c#) oder konvertieren Sie einen ganzzahligen Wert (wie in Visual Basic) aus, in einem Enumerationswert entspricht.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-131">By using a particular programming language's features to cast (as in C#) or convert (as in Visual Basic) an integer value to an enumeration value.</span></span> <span data-ttu-id="a0fd0-132">Das folgende Beispiel erstellt eine `ArrivalStatus` Objekt, dessen Wert `ArrivalStatus.Early` auf diese Weise.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-132">The following example creates an `ArrivalStatus` object whose value is `ArrivalStatus.Early` in this way.</span></span>  
  
     [!code-csharp[System.Enum.Class#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#4)]
     [!code-vb[System.Enum.Class#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#4)]  
  
-   <span data-ttu-id="a0fd0-133">Durch Aufrufen seiner impliziten Standardkonstruktor.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-133">By calling its implicit default constructor.</span></span> <span data-ttu-id="a0fd0-134">Wie im folgenden Beispiel wird gezeigt, ist in diesem Fall der zugrunde liegenden Wert der Enumerationsinstanz 0.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-134">As the following example shows, in this case the underlying value of the enumeration instance is 0.</span></span> <span data-ttu-id="a0fd0-135">Dies ist jedoch nicht unbedingt den Wert einer gültigen Konstante in der Enumeration.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-135">However, this is not necessarily the value of a valid constant in the enumeration.</span></span>  
  
     [!code-csharp[System.Enum.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#3)]
     [!code-vb[System.Enum.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#3)]  
  
-   <span data-ttu-id="a0fd0-136">Durch Aufrufen der <xref:System.Enum.Parse%2A> oder <xref:System.Enum.TryParse%2A> Methode, um eine Zeichenfolge zu analysieren, die den Namen einer Konstante in der Enumeration enthält.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-136">By calling the <xref:System.Enum.Parse%2A> or <xref:System.Enum.TryParse%2A> method to parse a string that contains the name of a constant in the enumeration.</span></span> <span data-ttu-id="a0fd0-137">Weitere Informationen finden Sie unter der [Enumerationswerte Analyse](#parsing) Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-137">For more information, see the [Parsing Enumeration Values](#parsing) section.</span></span>  
  
-   <span data-ttu-id="a0fd0-138">Durch Aufrufen der <xref:System.Enum.ToObject%2A> Methode, um einen ganzzahligen Wert in einen Enumerationstyp konvertieren.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-138">By calling the <xref:System.Enum.ToObject%2A> method to convert an integral value to an enumeration type.</span></span> <span data-ttu-id="a0fd0-139">Weitere Informationen finden Sie unter der [Konvertierungen ausführen](#conversions) Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-139">For more information, see the [Performing Conversions](#conversions) section.</span></span>  
  
<a name="BestPractices"></a>   
## <a name="enumeration-best-practices"></a><span data-ttu-id="a0fd0-140">Enumeration bewährte Methoden</span><span class="sxs-lookup"><span data-stu-id="a0fd0-140">Enumeration best practices</span></span>  
 <span data-ttu-id="a0fd0-141">Es wird empfohlen, dass Sie die folgenden bewährten Methoden verwenden, wenn Sie Enumerationstypen definieren:</span><span class="sxs-lookup"><span data-stu-id="a0fd0-141">We recommend that you use the following best practices when you define enumeration types:</span></span>  
  
-   <span data-ttu-id="a0fd0-142">Wenn Sie kein Member einer Enumeration definiert haben, dessen Wert 0 ist, sollten Sie erstellen eine `None` Enumerationskonstante.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-142">If you have not defined an enumeration member whose value is 0, consider creating a `None` enumerated constant.</span></span> <span data-ttu-id="a0fd0-143">Standardmäßig wird der für die Enumeration verwendete Speicher mit 0 (null) initialisiert von der common Language Runtime.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-143">By default, the memory used for the enumeration is initialized to zero by the common language runtime.</span></span> <span data-ttu-id="a0fd0-144">Daher, wenn Sie keine Konstante definieren, deren Wert 0 (null) ist, die Enumeration einen unzulässigen Wert enthält während der Erstellung.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-144">Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.</span></span>  
  
-   <span data-ttu-id="a0fd0-145">Es ist ein offensichtliche Standardfall, die Ihre Anwendung darstellen, sollten eine Enumerationskonstante ist konstant, deren Wert 0 (null) für die Darstellung.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-145">If there is an obvious default case that your application has to represent, consider using an enumerated constant whose value is zero to represent it.</span></span> <span data-ttu-id="a0fd0-146">Wenn es keine Standardfall ist, sollten erwägen Sie, eine Enumerationskonstante, dessen Wert 0 (null) ist, um die Groß-/Kleinschreibung angeben, der nicht, von einer anderen Enumerationskonstanten zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-146">If there is no default case, consider using an enumerated constant whose value is zero to specify the case that is not represented by any of the other enumerated constants.</span></span>  
  
-   <span data-ttu-id="a0fd0-147">Geben Sie keine Enumerationskonstanten, die für die zukünftige Verwendung reserviert sind.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-147">Do not specify enumerated constants that are reserved for future use.</span></span>  
  
-   <span data-ttu-id="a0fd0-148">Wenn Sie definieren eine Methode oder Eigenschaft, die eine Enumerationskonstante als Wert akzeptiert, sollten Sie überprüfen des Werts.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-148">When you define a method or property that takes an enumerated constant as a value, consider validating the value.</span></span> <span data-ttu-id="a0fd0-149">Der Grund ist, dass Sie einen numerischen Wert in den Enumerationstyp umwandeln können, selbst wenn diese numerische Wert in der Enumeration nicht definiert ist.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-149">The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.</span></span>  
  
 <span data-ttu-id="a0fd0-150">Best Practices für Enumerationstypen, deren Konstanten Bitfelder sind werden aufgeführt, der [Nichtexklusiv Member und den Flags-Attribut](#Flags) Abschnitt.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-150">Additional best practices for enumeration types whose constants are bit fields are listed in the [Non-Exclusive Members and the Flags Attribute](#Flags) section.</span></span>  
  
<a name="Operations"></a>   
## <a name="performing-operations-with-enumerations"></a><span data-ttu-id="a0fd0-151">Ausführen von Vorgängen mit Enumerationen</span><span class="sxs-lookup"><span data-stu-id="a0fd0-151">Performing operations with enumerations</span></span>  
 <span data-ttu-id="a0fd0-152">Sie können keine neue Methoden definieren, bei der Erstellung einer Enumeration.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-152">You cannot define new methods when you are creating an enumeration.</span></span> <span data-ttu-id="a0fd0-153">Ein Enumerationstyp allerdings erbt, einen vollständigen Satz von statischen Methoden und Instanzenmethoden von der <xref:System.Enum> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-153">However, an enumeration type inherits a complete set of static and instance methods from the <xref:System.Enum> class.</span></span> <span data-ttu-id="a0fd0-154">In den folgenden Abschnitten Umfrage die meisten dieser Methoden, zusätzlich zu anderen Methoden, die beim Arbeiten mit Enumerationswerten häufig verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-154">The following sections survey most of these methods, in addition to several other methods that are commonly used when working with enumeration values.</span></span>  
  
<a name="conversions"></a>   
### <a name="performing-conversions"></a><span data-ttu-id="a0fd0-155">Durchführen von Konvertierungen</span><span class="sxs-lookup"><span data-stu-id="a0fd0-155">Performing conversions</span></span>  
 <span data-ttu-id="a0fd0-156">Sie können mithilfe einer Umwandlung (in c#) oder einen Konvertierungsoperator (in Visual Basic) zwischen Enumerationsmember und dessen zugrunde liegendem Typ konvertieren.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-156">You can convert between an enumeration member and its underlying type by using a casting (in C#) or conversion (in Visual Basic) operator.</span></span> <span data-ttu-id="a0fd0-157">Im folgenden Beispiel wird die Umwandlung oder Konvertierung Operatoren zum Durchführen von Konvertierungen aus eine ganze Zahl und einem Enumerationswert entspricht und aus einem Enumerationswert entspricht, eine ganze Zahl.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-157">The following example uses casting or conversion operators to perform conversions both from an integer to an enumeration value and from an enumeration value to an integer.</span></span>  
  
 [!code-csharp[System.Enum.Class#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#5)]
 [!code-vb[System.Enum.Class#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#5)]  
  
 <span data-ttu-id="a0fd0-158">Die <xref:System.Enum> Klasse enthält auch eine <xref:System.Enum.ToObject%2A> Methode, die einen Wert jedes beliebigen ganzzahligen Typs in einen Enumerationswert konvertiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-158">The <xref:System.Enum> class also includes a <xref:System.Enum.ToObject%2A> method that converts a value of any integral type to an enumeration value.</span></span> <span data-ttu-id="a0fd0-159">Im folgenden Beispiel wird die <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> -Methode zum Konvertieren einer <xref:System.Int32> auf eine `ArrivalStatus` Wert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-159">The following example uses the <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method to convert an <xref:System.Int32> to an `ArrivalStatus` value.</span></span> <span data-ttu-id="a0fd0-160">Beachten Sie Folgendes: Da die <xref:System.Enum.ToObject%2A> gibt einen Wert vom Typ <xref:System.Object>, die Verwendung eines Operators Umwandlung oder Konvertierung kann dennoch erforderlich sein, das Objekt in den Enumerationstyp umgewandelt.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-160">Note that, because the <xref:System.Enum.ToObject%2A> returns a value of type <xref:System.Object>, the use of a casting or conversion operator may still be necessary to cast the object to the enumeration type.</span></span>  
  
 [!code-csharp[System.Enum.Class#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/class2.cs#6)]
 [!code-vb[System.Enum.Class#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/class2.vb#6)]  
  
 <span data-ttu-id="a0fd0-161">Wenn eine ganze Zahl in einen Enumerationswert konvertiert wird, ist es möglich, einen Wert zuzuweisen, der nicht tatsächlich ein Member der Enumeration ist.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-161">When converting an integer to an enumeration value, it is possible to assign a value that is not actually a member of the enumeration.</span></span> <span data-ttu-id="a0fd0-162">Um dies zu verhindern, können Sie die ganze Zahl, übergeben die <xref:System.Enum.IsDefined%2A> Methode vor der Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-162">To prevent this, you can pass the integer to the <xref:System.Enum.IsDefined%2A> method before performing the conversion.</span></span> <span data-ttu-id="a0fd0-163">Im folgenden Beispiel wird diese Methode, um zu bestimmen, ob die Elemente in einem Array von ganzzahligen Werten in konvertiert werden können `ArrivalStatus` Werte.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-163">The following example uses this method to determine whether the elements in an array of integer values can be converted to `ArrivalStatus` values.</span></span>  
  
 [!code-csharp[System.Enum.Class#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion1.cs#7)]
 [!code-vb[System.Enum.Class#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion1.vb#7)]  
  
 <span data-ttu-id="a0fd0-164">Obwohl die <xref:System.Enum> Klasse bietet explizite Implementierungen von der <xref:System.IConvertible> Schnittstelle zu einem Enumerationswert entspricht zu einem ganzzahligen Typ konvertieren, verwenden Sie die Methoden der der <xref:System.Convert> Klasse, z. B. <xref:System.Convert.ToInt32%2A>in Führen Sie diese Konvertierungen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-164">Although the <xref:System.Enum> class provides explicit interface implementations of the <xref:System.IConvertible> interface for converting from an enumeration value to an integral type, you should use the methods of the <xref:System.Convert> class, such as <xref:System.Convert.ToInt32%2A>, to perform these conversions.</span></span> <span data-ttu-id="a0fd0-165">Im folgende Beispiel wird veranschaulicht, wie Sie die <xref:System.Enum.GetUnderlyingType%2A> Methode zusammen mit der <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> Methode, um einem Enumerationswert entspricht, dessen zugrunde liegendem Typ zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-165">The following example illustrates how you can use the <xref:System.Enum.GetUnderlyingType%2A> method along with the <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method to convert an enumeration value to its underlying type.</span></span> <span data-ttu-id="a0fd0-166">Beachten Sie, dass in diesem Beispiel wird den zugrunde liegende Typ der Enumeration zum Zeitpunkt der Kompilierung bekannt sein nicht erforderlich ist.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-166">Note that this example does not require the underlying type of the enumeration to be known at compile time.</span></span>  
  
 [!code-csharp[System.Enum.Class#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classconversion2.cs#8)]
 [!code-vb[System.Enum.Class#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classconversion2.vb#8)]  
  
<a name="parsing"></a>   
### <a name="parsing-enumeration-values"></a><span data-ttu-id="a0fd0-167">Analysieren von Enumerationswerte</span><span class="sxs-lookup"><span data-stu-id="a0fd0-167">Parsing enumeration values</span></span>  
 <span data-ttu-id="a0fd0-168">Die <xref:System.Enum.Parse%2A> und <xref:System.Enum.TryParse%2A> Methoden ermöglichen es Ihnen, die Zeichenfolgendarstellung eines Enumerationswerts in diesen Wert zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-168">The <xref:System.Enum.Parse%2A> and <xref:System.Enum.TryParse%2A> methods allow you to convert the string representation of an enumeration value to that value.</span></span> <span data-ttu-id="a0fd0-169">Die Zeichenfolgendarstellung für möglich den Namen oder den zugrunde liegenden Wert einer Enumerationskonstante.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-169">The string representation can be either the name or the underlying value of an enumeration constant.</span></span> <span data-ttu-id="a0fd0-170">Beachten Sie, dass es sich bei die Analysemethoden erfolgreich zeichenfolgendarstellungen Zahlen konvertiert, die nicht Mitglieder einer bestimmten Enumeration sind, wenn die Zeichenfolgen in einen Wert des zugrunde liegenden Enumerationstyp konvertiert werden können.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-170">Note that the parsing methods will successfully convert string representations of numbers that are not members of a particular enumeration if the strings can be converted to a value of the enumeration's underlying type.</span></span> <span data-ttu-id="a0fd0-171">Damit dies verhindert die <xref:System.Enum.IsDefined%2A> Methode kann aufgerufen werden, um sicherzustellen, dass das Ergebnis als Analysemethode gültiger Enumerationswert ist.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-171">To prevent this, the <xref:System.Enum.IsDefined%2A> method can be called to ensure that the result of the parsing method is a valid enumeration value.</span></span> <span data-ttu-id="a0fd0-172">Im Beispiel veranschaulicht diese Vorgehensweise und veranschaulicht beide Aufrufe der <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> und <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType> Methoden.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-172">The example illustrates this approach and demonstrates calls to both the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> and <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType> methods.</span></span> <span data-ttu-id="a0fd0-173">Beachten Sie, dass die Analysemethode nichtgenerischen ein Objekt, die Sie möglicherweise umgewandelt (in c#) oder zurückgibt (in Visual Basic) in den entsprechenden Enumerationstyp konvertieren.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-173">Note that the non-generic parsing method returns an object that you may have to cast (in C#) or convert (in Visual Basic) to the appropriate enumeration type.</span></span>  
  
 [!code-csharp[System.Enum.Class#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classparse1.cs#9)]
 [!code-vb[System.Enum.Class#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classparse1.vb#9)]  
  
<a name="formatting"></a>   
### <a name="formatting-enumeration-values"></a><span data-ttu-id="a0fd0-174">Formatieren von Enumerationswerten</span><span class="sxs-lookup"><span data-stu-id="a0fd0-174">Formatting enumeration values</span></span>  
 <span data-ttu-id="a0fd0-175">Sie können ihre zeichenfolgendarstellungen Enumerationswerte konvertieren, durch Aufrufen der statischen <xref:System.Enum.Format%2A> Methode als auch die Überladungen der Instanz <xref:System.Enum.ToString%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-175">You can convert enumeration values to their string representations by calling the static <xref:System.Enum.Format%2A> method, as well as the overloads of the instance <xref:System.Enum.ToString%2A> method.</span></span> <span data-ttu-id="a0fd0-176">Sie können eine Formatzeichenfolge verwenden, um genau zu steuern, in der ein Enumerationswert als Zeichenfolge dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-176">You can use a format string to control the precise way in which an enumeration value is represented as a string.</span></span> <span data-ttu-id="a0fd0-177">Weitere Informationen finden Sie unter [Enumerationsformatzeichenfolgen](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a0fd0-177">For more information, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="a0fd0-178">Im folgenden Beispiel wird jeweils die unterstützten Enumerationsformatzeichenfolgen ("G" oder "g", "D" oder "d", "X" oder "X", und "F" oder "f"), konvertieren Sie ein Mitglied der `ArrivalStatus` die zeichenfolgendarstellungen-Enumeration.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-178">The following example uses each of the supported enumeration format strings ("G" or "g", "D" or "d", "X" or "x", and "F" or "f" ) to convert a member of the `ArrivalStatus` enumeration to its string representations.</span></span>  
  
 [!code-csharp[System.Enum.Class#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classformat1.cs#10)]
 [!code-vb[System.Enum.Class#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classformat1.vb#10)]  
  
<a name="iterating"></a>   
### <a name="iterating-enumeration-members"></a><span data-ttu-id="a0fd0-179">Durchlaufen von Enumerationsmembern</span><span class="sxs-lookup"><span data-stu-id="a0fd0-179">Iterating enumeration members</span></span>  
 <span data-ttu-id="a0fd0-180">Die <xref:System.Enum> Typ implementiert nicht die <xref:System.Collections.IEnumerable> oder <xref:System.Collections.Generic.IEnumerable%601> -Schnittstelle, die Mitglieder einer Sammlung mit durchlaufen ermöglichen würden eine `foreach` (in c#) oder `For Each` (in Visual Basic) zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-180">The <xref:System.Enum> type does not implement the <xref:System.Collections.IEnumerable> or <xref:System.Collections.Generic.IEnumerable%601> interface, which would enable you to iterate members of a collection by using a `foreach` (in C#) or `For Each` (in Visual Basic) construct.</span></span> <span data-ttu-id="a0fd0-181">Allerdings können Sie Elemente in zwei Arten aufzählen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-181">However, you can enumerate members in either of two ways.</span></span>  
  
-   <span data-ttu-id="a0fd0-182">Sie erreichen die <xref:System.Enum.GetNames%2A> Methode, um ein Zeichenfolgenarray mit den Namen der Enumerationsmember abzurufen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-182">You can call the <xref:System.Enum.GetNames%2A> method to retrieve a string array containing the names of the enumeration members.</span></span> <span data-ttu-id="a0fd0-183">Für jedes Element des Zeichenfolgenarrays, Sie können rufen Sie als Nächstes die <xref:System.Enum.Parse%2A> Methode zum Konvertieren der Zeichenfolge in den entsprechenden Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-183">Next, for each element of the string array, you can call the <xref:System.Enum.Parse%2A> method to convert the string to its equivalent enumeration value.</span></span> <span data-ttu-id="a0fd0-184">Dieser Ansatz wird anhand des folgenden Beispiels veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-184">The following example illustrates this approach.</span></span>  
  
     [!code-csharp[System.Enum.Class#11](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#11)]
     [!code-vb[System.Enum.Class#11](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#11)]  
  
-   <span data-ttu-id="a0fd0-185">Sie erreichen die <xref:System.Enum.GetValues%2A> Methode zum Abrufen eines Arrays, die die zugrunde liegende enthält Werte in der Enumeration.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-185">You can call the <xref:System.Enum.GetValues%2A> method to retrieve an array that contains the underlying values in the enumeration.</span></span> <span data-ttu-id="a0fd0-186">Für jedes Element des Arrays, Sie können rufen Sie als Nächstes die <xref:System.Enum.ToObject%2A> Methode, die ganze Zahl in den entsprechenden Enumerationswert zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-186">Next, for each element of the array, you can call the <xref:System.Enum.ToObject%2A> method to convert the integer to its equivalent enumeration value.</span></span> <span data-ttu-id="a0fd0-187">Dieser Ansatz wird anhand des folgenden Beispiels veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-187">The following example illustrates this approach.</span></span>  
  
     [!code-csharp[System.Enum.Class#12](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classiterate.cs#12)]
     [!code-vb[System.Enum.Class#12](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classiterate.vb#12)]  
  
<a name="Flags"></a>   
## <a name="non-exclusive-members-and-the-flags-attribute"></a><span data-ttu-id="a0fd0-188">Nichtexklusiv Member und den Flags-Attribut</span><span class="sxs-lookup"><span data-stu-id="a0fd0-188">Non-exclusive members and the Flags attribute</span></span>  
 <span data-ttu-id="a0fd0-189">Eine übliche Verwendung einer Enumeration ist einen Satz von sich gegenseitig ausschließende Werte darzustellen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-189">One common use of an enumeration is to represent a set of mutually exclusive values.</span></span> <span data-ttu-id="a0fd0-190">Angenommen, ein `ArrivalStatus` Instanz kann den Wert des haben `Early`, `OnTime`, oder `Late`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-190">For example, an `ArrivalStatus` instance can have a value of `Early`, `OnTime`, or `Late`.</span></span> <span data-ttu-id="a0fd0-191">Es ist nicht sinnvoll, für den Wert des ein `ArrivalStatus` Instanz mehrere-Enumerationskonstante widerspiegeln.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-191">It makes no sense for the value of an `ArrivalStatus` instance to reflect more than one enumeration constant.</span></span>  
  
 <span data-ttu-id="a0fd0-192">In anderen Fällen sollten Sie allerdings den Wert eines Enumerationsobjekts kann mehrere Enumerationsmember einzuschließen und jedes Element stellt ein Bitfeld in die Enumerationswert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-192">In other cases, however, the value of an enumeration object can include multiple enumeration members, and each member represents a bit field in the enumeration value.</span></span> <span data-ttu-id="a0fd0-193">Die <xref:System.FlagsAttribute> Attribut kann verwendet werden, um anzugeben, dass die Enumeration von Bitfeldern besteht aus.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-193">The <xref:System.FlagsAttribute> attribute can be used to indicate that the enumeration consists of bit fields.</span></span> <span data-ttu-id="a0fd0-194">Angenommen, eine Enumeration, die mit dem Namen `Pets` kann verwendet werden, um die Arten von Haustieren an, in einen Kundenhaushalt angeben.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-194">For example, an enumeration named `Pets` might be used to indicate the kinds of pets in a household.</span></span> <span data-ttu-id="a0fd0-195">Sie können wie folgt definiert werden.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-195">It can be defined as follows.</span></span>  
  
 [!code-csharp[System.Enum.Class#13](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#13)]
 [!code-vb[System.Enum.Class#13](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#13)]  
  
 <span data-ttu-id="a0fd0-196">Die `Pets` Enumeration kann dann verwendet werden, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-196">The `Pets` enumeration can then be used as shown in the following example.</span></span>  
  
 [!code-csharp[System.Enum.Class#14](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#14)]
 [!code-vb[System.Enum.Class#14](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#14)]  
  
 <span data-ttu-id="a0fd0-197">Die folgenden bewährten Methoden sollte verwendet werden, wenn Sie ein bitweises definieren Enumeration und Anwenden der <xref:System.FlagsAttribute> Attribut.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-197">The following best practices should be used when defining a bitwise enumeration and applying the <xref:System.FlagsAttribute> attribute.</span></span>  
  
-   <span data-ttu-id="a0fd0-198">Verwenden der <xref:System.FlagsAttribute> benutzerdefiniertes Attribut für eine Enumeration, die nur, wenn eine bitweise Operation (AND, OR, exklusive oder) für einen numerischen Wert ausgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-198">Use the <xref:System.FlagsAttribute> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.</span></span>  
  
-   <span data-ttu-id="a0fd0-199">Definieren Sie Enumerationskonstanten in Potenzen von 2, d. h. 1, 2, 4, 8 und So weiter.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-199">Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on.</span></span> <span data-ttu-id="a0fd0-200">Dies bedeutet, dass die einzelnen Flags in kombinierten Enumerationskonstanten nicht überschneiden.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-200">This means the individual flags in combined enumeration constants do not overlap.</span></span>  
  
-   <span data-ttu-id="a0fd0-201">Estellen Sie eine Enumerationskonstante für häufig verwendete Flagkombinationen aus.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-201">Consider creating an enumerated constant for commonly used flag combinations.</span></span> <span data-ttu-id="a0fd0-202">Beispielsweise ist eine Enumeration für-e/a-Dateivorgänge verwendet, enthält der Enumerationskonstanten `Read = 1` und `Write = 2`, sollten Sie die Enumerationskonstante erstellen `ReadWrite = Read OR Write`, kombiniert die `Read` und `Write` Flags.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-202">For example, if you have an enumeration used for file I/O operations that contains the enumerated constants `Read = 1` and `Write = 2`, consider creating the enumerated constant `ReadWrite = Read OR Write`, which combines the `Read` and `Write` flags.</span></span> <span data-ttu-id="a0fd0-203">Darüber hinaus kann die bitweise OR-Operation zum Kombinieren der Flags einen erweiterten Ansatz in einigen Fällen als angesehen werden, die nicht bei einfachen Aufgaben erforderlich sein sollte.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-203">In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.</span></span>  
  
-   <span data-ttu-id="a0fd0-204">Verwenden Sie vorsichtig vor, wenn Sie eine negative Zahl als eine Flagenumerationskonstante definieren, da viele Flagpositionen auf 1 festgelegt werden möglicherweise die Lesbarkeit Ihres Codes erschweren verwirrend und empfehlen Codierungsfehler.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-204">Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.</span></span>  
  
-   <span data-ttu-id="a0fd0-205">Eine einfache Möglichkeit zum Überprüfen, ob ein Flag in einen numerischen Wert festgelegt ist, rufen Sie die Instanz ist <xref:System.Enum.HasFlag%2A> Methode, wie im folgenden Beispiel gezeigt.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-205">A convenient way to test whether a flag is set in a numeric value is to call the instance <xref:System.Enum.HasFlag%2A> method, as shown in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#15](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#15)]
     [!code-vb[System.Enum.Class#15](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#15)]  
  
     <span data-ttu-id="a0fd0-206">Dies ist äquivalent zum Ausführen einer bitweisen AND-Operation zwischen den numerischen Wert und die Kennzeichen Enumerationskonstante, die legt alle Bits in den numerischen Wert 0 (null), die das Flag nicht entsprechen, und klicken Sie dann testen, ob das Ergebnis dieses Vorgangs entspricht der Flag-Enumerationskonstante.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-206">It is equivalent to performing a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, and then testing whether the result of that operation is equal to the flag enumerated constant.</span></span> <span data-ttu-id="a0fd0-207">Dies wird im folgenden Beispiel illustriert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-207">This is illustrated in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#16](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#16)]
     [!code-vb[System.Enum.Class#16](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#16)]  
  
-   <span data-ttu-id="a0fd0-208">Verwendung `None` wie der Namen des Flags Konstante aufgelistet, deren Wert 0 (null wird).</span><span class="sxs-lookup"><span data-stu-id="a0fd0-208">Use `None` as the name of the flag enumerated constant whose value is zero.</span></span> <span data-ttu-id="a0fd0-209">Sie können keine der `None` Enumerationskonstante in eine bitweise AND-Operation für ein Flag zu testen, da das Ergebnis immer 0 (null) ist.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-209">You cannot use the `None` enumerated constant in a bitwise AND operation to test for a flag because the result is always zero.</span></span> <span data-ttu-id="a0fd0-210">Allerdings können Sie ein logisches ausführen keinen bitweisen Vergleich zwischen den numerischen Wert und die `None` Enumerationskonstante, um zu bestimmen, ob alle Bits in den numerischen Wert festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-210">However, you can perform a logical, not a bitwise, comparison between the numeric value and the `None` enumerated constant to determine whether any bits in the numeric value are set.</span></span> <span data-ttu-id="a0fd0-211">Dies wird im folgenden Beispiel illustriert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-211">This is illustrated in the following example.</span></span>  
  
     [!code-csharp[System.Enum.Class#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/classbitwise1.cs#17)]
     [!code-vb[System.Enum.Class#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/classbitwise1.vb#17)]  
  
-   <span data-ttu-id="a0fd0-212">Definieren Sie einen Enumerationswert ausschließlich, um den Status der Enumeration selbst spiegeln nicht.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-212">Do not define an enumeration value solely to mirror the state of the enumeration itself.</span></span> <span data-ttu-id="a0fd0-213">Definieren Sie z. B. keine Enumerationskonstante, die lediglich das Ende der Enumeration markiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-213">For example, do not define an enumerated constant that merely marks the end of the enumeration.</span></span> <span data-ttu-id="a0fd0-214">Wenn Sie den letzten Wert der Enumeration bestimmen müssen, suchen Sie nach diesem Wert explizit.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-214">If you need to determine the last value of the enumeration, check for that value explicitly.</span></span> <span data-ttu-id="a0fd0-215">Darüber hinaus können Sie eine bereichsüberprüfung für die erste und letzte Enumerationskonstante ausführen, wenn alle Werte innerhalb des Bereichs gültig sind.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-215">In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.</span></span>  
  
<a name="methods"></a>   
## <a name="adding-enumeration-methods"></a><span data-ttu-id="a0fd0-216">Hinzufügen von Enumerationsmethoden</span><span class="sxs-lookup"><span data-stu-id="a0fd0-216">Adding enumeration methods</span></span>  
 <span data-ttu-id="a0fd0-217">Da Enumerationstypen von Sprachstrukturen, z. B. definiert werden `enum` (c#) und `Enum` (Visual Basic), keine benutzerdefinierte Methoden für einen Enumerationstyp als von geerbten Methoden definieren die <xref:System.Enum> Klasse.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-217">Because enumeration types are defined by language structures, such as `enum` (C#) and `Enum` (Visual Basic), you cannot define custom methods for an enumeration type other than those methods inherited from the <xref:System.Enum> class.</span></span>  <span data-ttu-id="a0fd0-218">Allerdings können Sie Erweiterungsmethoden [c#], Hinzufügen von Funktionen zu einer bestimmten Enumerationstyp.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-218">However, you can use extension methods to add functionality to a particular enumeration type.</span></span>  
  
 <span data-ttu-id="a0fd0-219">Im folgenden Beispiel stellt die `Grades`-Enumeration die möglichen Noten in Buchstaben dar, die ein Schüler im Unterricht erhalten kann.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-219">In the following example, the `Grades` enumeration represents the possible letter grades that a student may receive in a class.</span></span> <span data-ttu-id="a0fd0-220">Eine Erweiterungsmethode mit dem Namen `Passing` wird dem `Grades`-Typ hinzugefügt, sodass jede Instanz dieses Typs nun „weiß“, ob sie eine Note darstellt, mit der der Schüler bestanden hat.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-220">An extension method named `Passing` is added to the `Grades` type so that each instance of that type now "knows" whether it represents a passing grade or not.</span></span>       <span data-ttu-id="a0fd0-221">Die `Extensions` -Klasse enthält auch eine statische Variable Lese-/ Schreibzugriff, die die minimale übergeben Grade definiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-221">The `Extensions` class also contains a static read-write variable that defines the minimum passing grade.</span></span> <span data-ttu-id="a0fd0-222">Der Rückgabewert der `Passing` Erweiterungsmethode gibt den aktuellen Wert der Variablen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-222">The return value of the `Passing` extension method reflects the current value of that variable.</span></span>  
  
 [!code-csharp[System.Enum.Class#18](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.class/cs/Extensions.cs#18)]
 [!code-vb[System.Enum.Class#18](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.class/vb/Extensions.vb#18)]  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-223">Im folgende Beispiel veranschaulicht die Verwendung einer Enumeration zum Darstellen von benannter Werte und einer anderen Aufzählung benannte Bitfelder darstellen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-223">The following example demonstrates using an enumeration to represent named values and another enumeration to represent named bit fields.</span></span>  
  
 [!code-cpp[enummain#1](~/samples/snippets/cpp/VS_Snippets_CLR/enummain/CPP/EnumMain.cpp#1)]
 [!code-csharp[enummain#1](~/samples/snippets/csharp/VS_Snippets_CLR/enummain/CS/EnumMain.cs#1)]
 [!code-vb[enummain#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enummain/VB/EnumMain.vb#1)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="a0fd0-224">Dieser Typ ist threadsicher.</span>
      <span class="sxs-lookup">
        <span data-stu-id="a0fd0-224">This type is thread safe.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.ValueType" />
    <altmember cref="T:System.FlagsAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Enum ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Enum();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0fd0-225">Initialisiert eine neue Instanz der <see cref="T:System.Enum" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-225">Initializes a new instance of the <see cref="T:System.Enum" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (target As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ target);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="enum.CompareTo target" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="a0fd0-226">Ein Vergleichsobjekt oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-226">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-227">Vergleicht diese Instanz mit einem angegebenen Objekt und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-227">Compares this instance to a specified object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-228">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und dem Wert von <paramref name="target" /> angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-228">A signed number that indicates the relative values of this instance and <paramref name="target" />.</span>
          </span>
          <span data-ttu-id="a0fd0-229">
            <list type="table">
              <listheader>
                <term> Rückgabewert  </term>
                <description> Bedeutung  </description>
              </listheader>
              <item>
                <term> Kleiner als 0 (null)  </term>
                <description> Der Wert dieser Instanz ist kleiner als der von <paramref name="target" />.  </description>
              </item>
              <item>
                <term> 0 (null)  </term>
                <description> Der Wert dieser Instanz ist gleich dem Wert von <paramref name="target" />.  </description>
              </item>
              <item>
                <term> Größer als 0 (null)  </term>
                <description> Der Wert dieser Instanz ist größer als der Wert von <paramref name="target" />.  Oder:  <paramref name="target" /> ist <see langword="null" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-229">
              <list type="table">
                <listheader>
                  <term> Value  </term>
                  <description> Meaning  </description>
                </listheader>
                <item>
                  <term> Less than zero  </term>
                  <description> The value of this instance is less than the value of <paramref name="target" />.  </description>
                </item>
                <item>
                  <term> Zero  </term>
                  <description> The value of this instance is equal to the value of <paramref name="target" />.  </description>
                </item>
                <item>
                  <term> Greater than zero  </term>
                  <description> The value of this instance is greater than the value of <paramref name="target" />.  -or-  <paramref name="target" /> is <see langword="null" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a0fd0-230">Das folgende Beispiel veranschaulicht die Verwendung von `CompareTo` im Kontext des `Enum`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-230">The following example illustrates the use of `CompareTo` in the context of `Enum`.</span></span>  
  
 [!code-cpp[enumcompareto#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumcompareto/CPP/EnumCompareTo.cpp#1)]
 [!code-csharp[enumcompareto#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumcompareto/CS/EnumCompareTo.cs#1)]
 [!code-vb[enumcompareto#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumcompareto/VB/EnumCompareTo.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-231">
            <paramref name="target" /> hat nicht denselben Typ wie diese Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-231">
              <paramref name="target" /> and this instance are not the same type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0fd0-232">Diese Instanz ist nicht vom Typ <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" /> oder <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-232">This instance is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="enum.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="a0fd0-233">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-233">An object to compare with this instance, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-234">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-234">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-235">
            <see langword="true" />, wenn <paramref name="obj" /> ein Enumerationswert des gleichen Typs und mit dem gleichen zugrunde liegenden Wert wie diese Instanz ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-235">
              <see langword="true" /> if <paramref name="obj" /> is an enumeration value of the same type and with the same underlying value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-236">Die <xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType> methodenüberschreibungen <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> definieren, wie Enumerationsmember Gleichheit ausgewertet werden.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-236">The <xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType> method overrides <xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType> to define how enumeration members are evaluated for equality.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-237">Im folgenden Beispiel wird die Verwendung der <xref:System.Enum.Equals%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-237">The following example illustrates the use of the <xref:System.Enum.Equals%2A> method.</span></span>  
  
 [!code-cpp[enumequals#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumequals/CPP/EnumEquals.cpp#1)]
 [!code-csharp[enumequals#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumequals/CS/EnumEquals.cs#1)]
 [!code-vb[enumequals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumequals/VB/EnumEquals.vb#1)]  
  
 <span data-ttu-id="a0fd0-238">Das folgende Beispiel definiert zwei Enumerationstypen, `SledDog` und `WorkDog`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-238">The following example defines two enumeration types, `SledDog` and `WorkDog`.</span></span> <span data-ttu-id="a0fd0-239">Die `SledDog` Enumeration verfügt über zwei Member `SledDog.AlaskanMalamute` und `SledDog.Malamute`, die über den gleichen zugrunde liegenden Wert verfügen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-239">The `SledDog` enumeration has two members, `SledDog.AlaskanMalamute` and `SledDog.Malamute`, that have the same underlying value.</span></span> <span data-ttu-id="a0fd0-240">Der Aufruf der <xref:System.Enum.Equals%2A> Methode gibt an, dass diese Werte gleich sind, da die zugrunde liegenden Werte identisch sind.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-240">The call to the <xref:System.Enum.Equals%2A> method indicates that these values are equal because their underlying values are the same.</span></span> <span data-ttu-id="a0fd0-241">Die `SledDog.Malamute` und `WorkDog.Newfoundland` Mitglieder besitzen den gleichen zugrunde liegenden Wert aus, obwohl sie verschiedene Enumerationstypen darstellen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-241">The `SledDog.Malamute` and `WorkDog.Newfoundland` members have the same underlying value, although they represent different enumeration types.</span></span> <span data-ttu-id="a0fd0-242">Ein Aufruf der <xref:System.Enum.Equals%2A> Methode gibt an, dass diese Werte nicht gleich sind.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-242">A call to the <xref:System.Enum.Equals%2A> method indicates that these values are not equal.</span></span>  
  
 [!code-csharp[System.Enum.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.equals/cs/enumequals.cs#1)]
 [!code-vb[System.Enum.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.equals/vb/enumequals.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Enum.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Format">
      <MemberSignature Language="C#" Value="public static string Format (Type enumType, object value, string format);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Format(class System.Type enumType, object value, string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Format(System.Type,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Format (enumType As Type, value As Object, format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ Format(Type ^ enumType, System::Object ^ value, System::String ^ format);" />
      <MemberSignature Language="F#" Value="static member Format : Type * obj * string -&gt; string" Usage="System.Enum.Format (enumType, value, format)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-243">Der Enumerationstyp des zu konvertierenden Werts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-243">The enumeration type of the value to convert.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-244">Der zu konvertierende Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-244">The value to convert.</span>
          </span>
        </param>
        <param name="format">
          <span data-ttu-id="a0fd0-245">Das zu verwendende Ausgabeformat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-245">The output format to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-246">Konvertiert den angegebenen Wert eines angegebenen Enumerationstyps unter Berücksichtigung des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-246">Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-247">Eine Zeichenfolgendarstellung von <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-247">A string representation of <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-248">Die folgende Tabelle zeigt die gültigen Werte für die `format` Parameter.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-248">The following table shows the valid values for the `format` parameter.</span></span>  
  
|<span data-ttu-id="a0fd0-249">Format</span><span class="sxs-lookup"><span data-stu-id="a0fd0-249">Format</span></span>|<span data-ttu-id="a0fd0-250">Beschreibung </span><span class="sxs-lookup"><span data-stu-id="a0fd0-250">Description</span></span>|  
|------------|-----------------|  
|<span data-ttu-id="a0fd0-251">"G" oder "g"</span><span class="sxs-lookup"><span data-stu-id="a0fd0-251">"G" or "g"</span></span>|<span data-ttu-id="a0fd0-252">Wenn `value` ist gleich ist eine benannte Enumerationskonstante, der Namen der Konstanten wird zurückgegeben, andernfalls die Dezimalzahl `value` zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-252">If `value` is equal to a named enumerated constant, the name of that constant is returned; otherwise, the decimal equivalent of `value` is returned.</span></span><br /><br /> <span data-ttu-id="a0fd0-253">Nehmen Sie beispielsweise an die einzige Enumerationskonstante heißt Rot, und ihr Wert ist 1.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-253">For example, suppose the only enumerated constant is named Red, and its value is 1.</span></span> <span data-ttu-id="a0fd0-254">Wenn `value` 1 angegeben wird, gibt dieses Format "Red" zurück.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-254">If `value` is specified as 1, this format returns "Red".</span></span> <span data-ttu-id="a0fd0-255">Jedoch wenn `value` 2 angegeben wird, gibt dieses Format "2" zurück.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-255">However, if `value` is specified as 2, this format returns "2".</span></span><br /><br /> <span data-ttu-id="a0fd0-256">- oder - </span><span class="sxs-lookup"><span data-stu-id="a0fd0-256">-or-</span></span><br /><br /> <span data-ttu-id="a0fd0-257">Wenn die <xref:System.FlagsAttribute> benutzerdefinierte Attribut angewendet wird, auf die Enumeration `value` so behandelt, als ein Bitfeld, das eine oder mehrere Flags enthält, die aus einem oder mehreren Bits bestehen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-257">If the <xref:System.FlagsAttribute> custom attribute is applied to the enumeration, `value` is treated as a bit field that contains one or more flags that consist of one or more bits.</span></span><br /><br /> <span data-ttu-id="a0fd0-258">Wenn `value` heißt, das eine Kombination von entspricht Enumerationskonstanten, eine durch Trennzeichen getrennte Liste der Namen dieser Konstanten wird zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-258">If `value` is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned.</span></span> <span data-ttu-id="a0fd0-259">`value` Flags, die für den Wechsel von das Flag mit dem größten Wert zum kleinsten Wert wird gesucht werden.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-259">`value` is searched for flags, going from the flag with the largest value to the smallest value.</span></span> <span data-ttu-id="a0fd0-260">Für jedes Flag, das kein Bitfeld in entspricht `value`, der Namen der Konstanten, die durch Trennzeichen getrennte Liste verkettet ist.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-260">For each flag that corresponds to a bit field in `value`, the name of the constant is concatenated to the delimiter-separated list.</span></span> <span data-ttu-id="a0fd0-261">Der Wert des Flags klicken Sie dann weitere Zielmodell ausgeschlossen wird, und die Suche wird fortgesetzt, für das nächste Flag.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-261">The value of that flag is then excluded from further consideration, and the search continues for the next flag.</span></span><br /><br /> <span data-ttu-id="a0fd0-262">Wenn `value` stimmt nicht mit einer Kombination von benannten Enumerationskonstanten, die Dezimalzahl `value` zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-262">If `value` is not equal to a combination of named enumerated constants, the decimal equivalent of `value` is returned.</span></span>|  
|<span data-ttu-id="a0fd0-263">"X" oder "x"</span><span class="sxs-lookup"><span data-stu-id="a0fd0-263">"X" or "x"</span></span>|<span data-ttu-id="a0fd0-264">Stellt `value` im hexadezimalen Format ohne Präfix "0 X".</span><span class="sxs-lookup"><span data-stu-id="a0fd0-264">Represents `value` in hexadecimal format without a leading "0x".</span></span>|  
|<span data-ttu-id="a0fd0-265">"D" oder "d"</span><span class="sxs-lookup"><span data-stu-id="a0fd0-265">"D" or "d"</span></span>|<span data-ttu-id="a0fd0-266">Stellt `value` Dezimalformat.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-266">Represents `value` in decimal form.</span></span>|  
|<span data-ttu-id="a0fd0-267">"F" oder "f"</span><span class="sxs-lookup"><span data-stu-id="a0fd0-267">"F" or "f"</span></span>|<span data-ttu-id="a0fd0-268">Verhält sich ebenso wie "G" oder "g", mit dem Unterschied, dass die <xref:System.FlagsAttribute> muss nicht auf vorhanden sein, die <xref:System.Enum> Deklaration.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-268">Behaves identically to "G" or "g", except that the <xref:System.FlagsAttribute> is not required to be present on the <xref:System.Enum> declaration.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-269">Das folgende Beispiel veranschaulicht die Verwendung von `Format` im Kontext des `Enum`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-269">The following example illustrates the use of `Format` in the context of `Enum`.</span></span>  
  
 [!code-cpp[enumformat#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumformat/CPP/EnumFormat.cpp#1)]
 [!code-csharp[enumformat#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumformat/CS/EnumFormat.cs#1)]
 [!code-vb[enumformat#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumformat/VB/EnumFormat.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-270">Der <paramref name="enumType" />-Parameter, <paramref name="value" />-Parameter oder <paramref name="format" />-Parameter ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-270">The <paramref name="enumType" />, <paramref name="value" />, or <paramref name="format" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-271">Der <paramref name="enumType" />-Parameter ist kein <see cref="T:System.Enum" />-Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-271">The <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" /> type.</span>
          </span>
          <span data-ttu-id="a0fd0-272">Oder:  <paramref name="value" /> stammt aus einer Enumeration, die sich im Typ von <paramref name="enumType" /> unterscheidet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-272">-or-  The <paramref name="value" /> is from an enumeration that differs in type from <paramref name="enumType" />.</span>
          </span>
          <span data-ttu-id="a0fd0-273">Oder:  Der Typ von <paramref name="value" /> ist nicht der zugrunde liegende Typ von <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-273">-or-  The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="a0fd0-274">Der <paramref name="format" />-Parameter hat einen ungültigen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-274">The <paramref name="format" /> parameter contains an invalid value.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0fd0-275">
            <paramref name="format" /> ist gleich "X", der Enumerationstyp ist jedoch unbekannt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-275">
              <paramref name="format" /> equals "X", but the enumeration type is unknown.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.ToString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="enum.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0fd0-276">Gibt den Hashcode für den Wert dieser Instanz zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-276">Returns the hash code for the value of this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-277">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-277">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetName">
      <MemberSignature Language="C#" Value="public static string GetName (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetName(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetName(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetName (enumType As Type, value As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetName(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member GetName : Type * obj -&gt; string" Usage="System.Enum.GetName (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-278">Ein Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-278">An enumeration type.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-279">Der Wert einer bestimmten Enumerationskonstanten als deren zugrunde liegender Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-279">The value of a particular enumerated constant in terms of its underlying type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-280">Ruft den Namen der Konstanten in der angegebenen Enumeration mit dem angegebenen Wert ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-280">Retrieves the name of the constant in the specified enumeration that has the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-281">Eine Zeichenfolge mit dem Namen der Enumerationskonstanten aus <paramref name="enumType" />, die den Wert <paramref name="value" /> hat, oder <see langword="null" />, wenn eine solche Konstante nicht gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-281">A string containing the name of the enumerated constant in <paramref name="enumType" /> whose value is <paramref name="value" />; or <see langword="null" /> if no such constant is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-282">Wenn mehrere Enumerationsmember über den gleichen zugrunde liegenden Wert müssen die <xref:System.Enum.GetName%2A> Methode stellt sicher, dass es den Namen eines dieser Elemente Enumeration zurück.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-282">If multiple enumeration members have the same underlying value, the <xref:System.Enum.GetName%2A> method guarantees that it will return the name of one of those enumeration members.</span></span> <span data-ttu-id="a0fd0-283">Allerdings garantiert es nicht, dass es immer den Namen des gleichen Enumerationsmembers zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-283">However, it does not guarantee that it will always return the name of the same enumeration member.</span></span> <span data-ttu-id="a0fd0-284">Wenn mehrere Enumerationsmember denselben Wert haben, sollte der Anwendungscode daher nie auf die Methode zurückgeben eines bestimmten Elements namens abhängen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-284">As a result, when multiple enumeration members have the same value, your application code should never depend on the method returning a particular member's name.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-285">Das folgende Beispiel veranschaulicht die Verwendung von `GetName`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-285">The following example illustrates the use of `GetName`.</span></span>  
  
 [!code-cpp[enumgetname#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetname/CPP/EnumGetName.cpp#1)]
 [!code-csharp[enumgetname#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetname/CS/EnumGetName.cs#1)]
 [!code-vb[enumgetname#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetname/VB/EnumGetName.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-286">
            <paramref name="enumType" /> oder <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-286">
              <paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-287">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-287">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
          <span data-ttu-id="a0fd0-288">Oder:  <paramref name="value" /> ist nicht vom Typ <paramref name="enumType" /> und weist auch nicht den gleichen zugrunde liegenden Typ wie <paramref name="enumType" /> auf.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-288">-or-  <paramref name="value" /> is neither of type <paramref name="enumType" /> nor does it have the same underlying type as <paramref name="enumType" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetNames">
      <MemberSignature Language="C#" Value="public static string[] GetNames (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string[] GetNames(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetNames(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetNames (enumType As Type) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static cli::array &lt;System::String ^&gt; ^ GetNames(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetNames : Type -&gt; string[]" Usage="System.Enum.GetNames enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-289">Ein Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-289">An enumeration type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-290">Ruft ein Array mit den Namen der Konstanten in einer angegebenen Enumeration ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-290">Retrieves an array of the names of the constants in a specified enumeration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-291">Ein Zeichenfolgenarray mit den Namen der Konstanten in <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-291">A string array of the names of the constants in <paramref name="enumType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-292">Die Elemente des Arrays Rückgabewert sind nach den Binärwerten der Enumerationskonstanten sortiert (d. h. durch ihre Größe ohne Vorzeichen).</span><span class="sxs-lookup"><span data-stu-id="a0fd0-292">The elements of the return value array are sorted by the binary values of the enumerated constants (that is, by their unsigned magnitude).</span></span> <span data-ttu-id="a0fd0-293">Das folgende Beispiel veranschaulicht zeigt Informationen über das zurückgegebene Array die <xref:System.Enum.GetNames%2A> Methode für eine Enumeration, die eine Negative 0 (null) und einen positiven Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-293">The following example provides displays information about the array returned by the <xref:System.Enum.GetNames%2A> method for an enumeration that includes a negative, zero, and a positive value.</span></span>  
  
 [!code-csharp[System.Enum.GetNames#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getnames/cs/getnames1.cs#1)]
 [!code-vb[System.Enum.GetNames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getnames/vb/getnames1.vb#1)]  
  
 <span data-ttu-id="a0fd0-294">Wenn Sie Enumerationskonstanten mit demselben Wert sind, ist die Reihenfolge der entsprechenden Namen nicht angegeben.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-294">If there are enumerated constants with same value, the order of their corresponding names is unspecified.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-295">Im folgenden Beispiel wird die Verwendung der <xref:System.Enum.GetNames%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-295">The following example illustrates the use of the <xref:System.Enum.GetNames%2A> method.</span></span>  
  
 [!code-cpp[enumgetnames#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetnames/CPP/EnumGetNames.cpp#1)]
 [!code-csharp[enumgetnames#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetnames/CS/EnumGetNames.cs#1)]
 [!code-vb[enumgetnames#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetnames/VB/EnumGetNames.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-296">
            <paramref name="enumType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-296">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-297">Der <paramref name="enumType" />-Parameter ist kein <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-297">
              <paramref name="enumType" /> parameter is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="enum.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0fd0-298">Gibt den Typcode des zugrunde liegenden Typs dieses Enumerationsmembers zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-298">Returns the type code of the underlying type of this enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-299">Der Typcode des zugrunde liegenden Typs dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-299">The type code of the underlying type of this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0fd0-300">Der Enumerationstyp ist unbekannt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-300">The enumeration type is unknown.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.GetUnderlyingType(System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="GetUnderlyingType">
      <MemberSignature Language="C#" Value="public static Type GetUnderlyingType (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Type GetUnderlyingType(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetUnderlyingType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetUnderlyingType (enumType As Type) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Type ^ GetUnderlyingType(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetUnderlyingType : Type -&gt; Type" Usage="System.Enum.GetUnderlyingType enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-301">Die Enumeration, deren zugrunde liegender Typ abgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-301">The enumeration whose underlying type will be retrieved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-302">Gibt den zugrunde liegenden Typ der angegebenen Enumeration zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-302">Returns the underlying type of the specified enumeration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-303">Der zugrunde liegende Typ <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-303">The underlying type of <paramref name="enumType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-304">Die <xref:System.Enum> Struktur ermöglicht Werte als benannte Konstanten dargestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-304">The <xref:System.Enum> structure enables values to be represented as named constants.</span></span> <span data-ttu-id="a0fd0-305">Der Datentyp der Werte der Enumeration wird als dessen zugrunde liegendem Typ bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-305">The data type of the enumeration's values is known as its underlying type.</span></span> <span data-ttu-id="a0fd0-306">Z. B. der zugrunde liegende Typ der <xref:System.DayOfWeek> -Enumeration, die Konstanten besteht, die jeden Tag der Woche darstellen (<xref:System.DayOfWeek.Monday?displayProperty=nameWithType>, <xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType>usw.), ist <xref:System.Int32>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-306">For example, the underlying type of the <xref:System.DayOfWeek> enumeration, which consists of constants that represent each day of the week (<xref:System.DayOfWeek.Monday?displayProperty=nameWithType>, <xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType>, and so on), is <xref:System.Int32>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-307">Im folgenden Beispiel wird die <xref:System.Enum.GetUnderlyingType%2A> Methode, um den zugrunde liegenden Typ, der einige Enumerationsmember anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-307">The following example calls the <xref:System.Enum.GetUnderlyingType%2A> method to display the underlying type of some enumeration members.</span></span>  
  
 [!code-csharp[System.Enum.GetUnderlyingType#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getunderlyingtype/cs/getunderlyingtype1.cs#1)]
 [!code-vb[System.Enum.GetUnderlyingType#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getunderlyingtype/vb/getunderlyingtype1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-308">
            <paramref name="enumType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-308">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-309">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-309">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.GetTypeCode" />
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public static Array GetValues (Type enumType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array GetValues(class System.Type enumType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.GetValues(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetValues (enumType As Type) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ GetValues(Type ^ enumType);" />
      <MemberSignature Language="F#" Value="static member GetValues : Type -&gt; Array" Usage="System.Enum.GetValues enumType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-310">Ein Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-310">An enumeration type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-311">Ruft ein Array mit den Werten der Konstanten in einer angegebenen Enumeration ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-311">Retrieves an array of the values of the constants in a specified enumeration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-312">Ein Array, das die Werte der Konstanten in <paramref name="enumType" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-312">An array that contains the values of the constants in <paramref name="enumType" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-313">Die Elemente des Arrays sind nach den Binärwerten der Enumerationskonstanten sortiert (d. h. durch ihre Größe ohne Vorzeichen).</span><span class="sxs-lookup"><span data-stu-id="a0fd0-313">The elements of the array are sorted by the binary values of the enumeration constants (that is, by their unsigned magnitude).</span></span> <span data-ttu-id="a0fd0-314">Das folgende Beispiel zeigt Informationen über das zurückgegebene Array die <xref:System.Enum.GetValues%2A> Methode für eine Enumeration, die einen negativen Wert 0 (null) und einen positiven Wert enthält.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-314">The following example displays information about the array returned by the <xref:System.Enum.GetValues%2A> method for an enumeration that includes a negative value, zero, and a positive value.</span></span>  
  
 [!code-csharp[System.Enum.GetValues#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues1.cs#1)]
 [!code-vb[System.Enum.GetValues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues1.vb#1)]  
  
 <span data-ttu-id="a0fd0-315">Die <xref:System.Enum.GetValues%2A> Methode gibt ein Array, das einen Wert für jedes Element enthält die `enumType` Enumeration.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-315">The <xref:System.Enum.GetValues%2A> method returns an array that contains a value for each member of the `enumType` enumeration.</span></span> <span data-ttu-id="a0fd0-316">Wenn mehrere Elemente den gleichen Wert haben, enthält das zurückgegebene Array doppelte Werte.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-316">If multiple members have the same value, the returned array includes duplicate values.</span></span> <span data-ttu-id="a0fd0-317">In diesem Fall Aufrufen der <xref:System.Enum.GetName%2A> Methode bei den einzelnen Werten im zurückgegebenen Array wird nicht wiederhergestellt, die eindeutigen Namen zugewiesene Elemente, die doppelte Werte enthalten.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-317">In this case, calling the <xref:System.Enum.GetName%2A> method with each value in the returned array does not restore the unique names assigned to members that have duplicate values.</span></span> <span data-ttu-id="a0fd0-318">Um alle Namen von Enumerationsmembern erfolgreich abzurufen, rufen Sie die <xref:System.Enum.GetNames%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-318">To retrieve all the names of enumeration members successfully, call the <xref:System.Enum.GetNames%2A> method.</span></span>  
  
 <span data-ttu-id="a0fd0-319">Die <xref:System.Enum.GetValues%2A> Methode kann nicht mithilfe der Reflektion in einem reflektionsbezogenen Kontext aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-319">The <xref:System.Enum.GetValues%2A> method cannot be invoked by using reflection in a reflection-only context.</span></span> <span data-ttu-id="a0fd0-320">Stattdessen können Sie den Wert der alle Enumerationsmember abrufen, mithilfe der <xref:System.Type.GetFields%2A?displayProperty=nameWithType> ein Array der abzurufenden Methode <xref:System.Reflection.FieldInfo> Objekte, die Enumerationsmember darstellen, und rufen Sie anschließend die <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType> Methode für jedes Element des Arrays.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-320">Instead, you can retrieve the value of all enumeration members by using the <xref:System.Type.GetFields%2A?displayProperty=nameWithType> method to get an array of <xref:System.Reflection.FieldInfo> objects that represent enumeration members and then call the <xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType> method on each element of the array.</span></span> <span data-ttu-id="a0fd0-321">Das folgende Beispiel veranschaulicht dieses Verfahren.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-321">The following example illustrates this technique.</span></span> <span data-ttu-id="a0fd0-322">Es erfordert, dass Sie die folgende Enumeration in einer Assembly mit dem Namen Enumerations.dll definieren:</span><span class="sxs-lookup"><span data-stu-id="a0fd0-322">It requires that you define the following enumeration in an assembly named Enumerations.dll:</span></span>  
  
 [!code-csharp[System.Enum.GetValues#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#2)]
 [!code-vb[System.Enum.GetValues#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#2)]  
  
 <span data-ttu-id="a0fd0-323">Die Assembly im reflektionsbezogenen Kontext geladen wird eine <xref:System.Type> Objekt, das darstellt der `Pets` Enumeration instanziiert wird, ein Array von <xref:System.Reflection.FieldInfo> Objekten wird abgerufen, und die Feldwerte in der Konsole angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-323">The assembly is loaded in a reflection-only context, a <xref:System.Type> object that represents the `Pets` enumeration is instantiated, an array of <xref:System.Reflection.FieldInfo> objects is retrieved, and the field values are displayed to the console.</span></span>  
  
 [!code-csharp[System.Enum.GetValues#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.getvalues/cs/getvalues_reflectiononly.cs#3)]
 [!code-vb[System.Enum.GetValues#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.getvalues/vb/getvalues_reflectiononly.vb#3)]  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-324">Das folgende Beispiel veranschaulicht die Verwendung von <xref:System.Enum.GetValues%2A>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-324">The following example illustrates the use of <xref:System.Enum.GetValues%2A>.</span></span>  
  
 [!code-cpp[enumgetvalues#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumgetvalues/CPP/EnumGetValues.cpp#1)]
 [!code-csharp[enumgetvalues#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumgetvalues/CS/EnumGetValues.cs#1)]
 [!code-vb[enumgetvalues#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumgetvalues/VB/EnumGetValues.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-325">
            <paramref name="enumType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-325">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-326">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-326">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0fd0-327">Die Methode wird mithilfe einer Reflektion in einem reflektionsbezogenen Kontext aufgerufen.  Oder:  <paramref name="enumType" /> ist ein Typ aus einer Assembly, die in einem reflektionsbezogenen Kontext geladen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-327">The method is invoked by reflection in a reflection-only context,  -or-  <paramref name="enumType" /> is a type from an assembly loaded in a reflection-only context.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HasFlag">
      <MemberSignature Language="C#" Value="public bool HasFlag (Enum flag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool HasFlag(class System.Enum flag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.HasFlag(System.Enum)" />
      <MemberSignature Language="VB.NET" Value="Public Function HasFlag (flag As Enum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool HasFlag(Enum ^ flag);" />
      <MemberSignature Language="F#" Value="member this.HasFlag : Enum -&gt; bool" Usage="enum.HasFlag flag" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="flag" Type="System.Enum" />
      </Parameters>
      <Docs>
        <param name="flag">
          <span data-ttu-id="a0fd0-328">Ein Enumerationswert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-328">An enumeration value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-329">Bestimmt, ob ein oder mehrere Bitfelder in der aktuellen Instanz festgelegt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-329">Determines whether one or more bit fields are set in the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-330">
            <see langword="true" />, wenn das in <paramref name="flag" /> festgelegte Bitfeld bzw. die Bitfelder auch in der aktuellen Instanz festgelegt werden, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-330">
              <see langword="true" /> if the bit field or bit fields that are set in <paramref name="flag" /> are also set in the current instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-331">Die <xref:System.Enum.HasFlag%2A> Methode gibt das Ergebnis des folgenden booleschen Ausdrucks zurück.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-331">The <xref:System.Enum.HasFlag%2A> method returns the result of the following Boolean expression.</span></span>  
  
```  
thisInstance And flag = flag   
```  
  
 <span data-ttu-id="a0fd0-332">Wenn die zugrunde liegenden Wert des `flag` ist 0 (null), gibt die Methode `true`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-332">If the underlying value of `flag` is zero, the method returns `true`.</span></span> <span data-ttu-id="a0fd0-333">Wenn dieses Verhalten nicht erwünscht ist, können Sie mithilfe der <xref:System.Enum.Equals%2A> Methode auf Gleichheit mit 0 (null) und rufen <xref:System.Enum.HasFlag%2A> nur, wenn der zugrundeliegende Wert des `flag` ist ungleich NULL ist, wie im folgenden Beispiel veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-333">If this behavior is not desirable, you can use the <xref:System.Enum.Equals%2A> method to test for equality with zero and call <xref:System.Enum.HasFlag%2A> only if the underlying value of `flag` is non-zero, as the following example illustrates.</span></span>  
  
 [!code-csharp[System.Enum.HasFlag#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag0.cs#1)]
 [!code-vb[System.Enum.HasFlag#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag0.vb#1)]  
  
 <span data-ttu-id="a0fd0-334">Die <xref:System.Enum.HasFlag%2A> -Methode entwickelt, um mit Enumerationstypen verwendet werden, die mit markiert sind die <xref:System.FlagsAttribute> Attribut, und kann verwendet werden, um zu bestimmen, ob mehrere Bitfelder festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-334">The <xref:System.Enum.HasFlag%2A> method is designed to be used with enumeration types that are marked with the <xref:System.FlagsAttribute> attribute and can be used to determine whether multiple bit fields are set.</span></span> <span data-ttu-id="a0fd0-335">Für Enumerationstypen, die nicht mit markiert sind die <xref:System.FlagsAttribute> -Attribut, rufen Sie entweder die <xref:System.Enum.Equals%2A> Methode oder die <xref:System.Enum.CompareTo%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-335">For enumeration types that are not marked with the <xref:System.FlagsAttribute> attribute, call either the <xref:System.Enum.Equals%2A> method or the <xref:System.Enum.CompareTo%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-336">Das folgende Beispiel definiert eine `ItemsOrdered` -Enumeration, die Kategorien der Elemente angibt, die ein Kunde in einem Restaurant sortieren kann.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-336">The following example defines an `ItemsOrdered` enumeration that reflects categories of items that a customer can order in a restaurant.</span></span> <span data-ttu-id="a0fd0-337">Im Beispiel wird getestet, ob der Kunde ein Hauptgericht und Getränke aufgegeben hat.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-337">The example tests whether the customer has ordered both an entrée and a beverage.</span></span>  
  
 [!code-csharp[System.Enum.HasFlag#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.hasflag/cs/hasflag1.cs#2)]
 [!code-vb[System.Enum.HasFlag#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.hasflag/vb/hasflag1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-338">
            <paramref name="flag" /> besitzt einen anderen Typ als die aktuelle Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-338">
              <paramref name="flag" /> is a different type than the current instance.</span>
          </span>
        </exception>
        <altmember cref="T:System.FlagsAttribute" />
        <altmember cref="M:System.Enum.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="IsDefined">
      <MemberSignature Language="C#" Value="public static bool IsDefined (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDefined(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.IsDefined(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDefined (enumType As Type, value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDefined(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IsDefined : Type * obj -&gt; bool" Usage="System.Enum.IsDefined (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-339">Ein Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-339">An enumeration type.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-340">Der Wert oder Name einer Konstanten in <c>enumType</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-340">The value or name of a constant in <c>enumType</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-341">Gibt einen booleschen Wert zurück, der angibt, ob ein angegebener Integralwert (oder dessen Name als Zeichenfolge) in einer angegebenen Enumeration vorhanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-341">Returns a Boolean telling whether a given integral value, or its name as a string, exists in a specified enumeration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-342">
            <see langword="true" />, wenn eine Konstante von <paramref name="enumType" /> den Wert <paramref name="value" /> hat, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-342">
              <see langword="true" /> if a constant in <paramref name="enumType" /> has a value equal to <paramref name="value" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-343">Die `value` Parameter kann eine der folgenden sein:</span><span class="sxs-lookup"><span data-stu-id="a0fd0-343">The `value` parameter can be any of the following:</span></span>  
  
-   <span data-ttu-id="a0fd0-344">Alle Member des Typs `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-344">Any member of type `enumType`.</span></span>  
  
-   <span data-ttu-id="a0fd0-345">Eine Variable, deren Wert ein Enumerationsmember vom Typ `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-345">A variable whose value is an enumeration member of type `enumType`.</span></span>  
  
-   <span data-ttu-id="a0fd0-346">Die Zeichenfolgendarstellung des Namens des einen Enumerationsmember.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-346">The string representation of the name of an enumeration member.</span></span> <span data-ttu-id="a0fd0-347">Die Zeichen in der Zeichenfolge müssen die gleiche Groß-/Kleinschreibung als Enumeration Elementnamen ein.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-347">The characters in the string must have the same case as the enumeration member name.</span></span>  
  
-   <span data-ttu-id="a0fd0-348">Ein Wert des zugrunde liegenden Typs von `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-348">A value of the underlying type of `enumType`.</span></span>  
  
 <span data-ttu-id="a0fd0-349">Wenn die Konstanten in `enumType` definieren einen Satz von Bitfeldern und `value` enthält die Werte, die Namen oder die zugrunde liegenden mehrere Bitfelder, die <xref:System.Enum.IsDefined%2A> -Methode zurückkehrt `false`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-349">If the constants in `enumType` define a set of bit fields and `value` contains the values, names, or underlying values of multiple bit fields, the <xref:System.Enum.IsDefined%2A> method returns `false`.</span></span> <span data-ttu-id="a0fd0-350">Das heißt, ermittelt für Enumerationen, die einen Satz von Bitfeldern definieren, die Methode nur, ob ein einzelnes Bit-Feld der Enumeration gehört.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-350">In other words, for enumerations that define a set of bit fields, the method determines only whether a single bit field belongs to the enumeration.</span></span> <span data-ttu-id="a0fd0-351">Um festzustellen, ob mehrere Bitfelder in einem Enumerationstyp festgelegt werden, das mit gekennzeichnet ist die <xref:System.FlagsAttribute> -Attribut, rufen Sie die <xref:System.Enum.HasFlag%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-351">To determine whether multiple bit fields are set in an enumeration type that is tagged with the <xref:System.FlagsAttribute> attribute, you can call the <xref:System.Enum.HasFlag%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-352">Das folgende Beispiel definiert eine Enumeration namens `PetType` , einzelne Bitfelder besteht.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-352">The following example defines an enumeration named `PetType` that consists of individual bit fields.</span></span> <span data-ttu-id="a0fd0-353">Er ruft dann die <xref:System.Enum.IsDefined%2A> Methode mit möglichen zugrunde liegenden Enumerationswerten, Zeichenfolgennamen und zusammengesetzten Werte, die aus mehreren Bitfelder festlegen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-353">It then calls the <xref:System.Enum.IsDefined%2A> method with possible underlying enumeration values, string names, and composite values that result from setting multiple bit fields.</span></span>  
  
 [!code-csharp[System.Enum.IsDefined#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined1.cs#1)]
 [!code-vb[System.Enum.IsDefined#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/IsDefined1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-354">
            <paramref name="enumType" /> oder <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-354">
              <paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-355">
            <paramref name="enumType" /> ist keine <see langword="Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-355">
              <paramref name="enumType" /> is not an <see langword="Enum" />.</span>
          </span>
          <span data-ttu-id="a0fd0-356">Oder:  Der Typ von <paramref name="value" /> ist eine Enumeration, dabei handelt es sich jedoch nicht um eine Enumeration vom Typ <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-356">-or-  The type of <paramref name="value" /> is an enumeration, but it is not an enumeration of type <paramref name="enumType" />.</span>
          </span>
          <span data-ttu-id="a0fd0-357">Oder:  Der Typ von <paramref name="value" /> ist nicht der zugrunde liegende Typ von <paramref name="enumType" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-357">-or-  The type of <paramref name="value" /> is not an underlying type of <paramref name="enumType" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0fd0-358">
            <paramref name="value" /> ist nicht vom Typ <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, <see cref="T:System.UInt64" /> oder <see cref="T:System.String" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-358">
              <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />, or <see cref="T:System.String" />.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="a0fd0-359">
            <para>Wenn <paramref name="enumType" /> ist eine Enumeration, die mit definiert ist die <see cref="T:System.FlagsAttribute" /> -Attribut gibt die Methode zurück <see langword="false" /> Wenn Felder mehrere Bit in <paramref name="value" /> festgelegt sind, aber <paramref name="value" /> entspricht einer zusammengesetzten Enumerationswert oder, wenn <paramref name="value" /> besteht aus einer zeichenfolgenverkettung der Namen von mehreren Bitflags. Im folgenden Beispiel ein <c>Haustieren an</c> Enumeration definiert ist, mit der <see cref="T:System.FlagsAttribute" /> Attribut. Die <see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /> -Methode zurückkehrt <see langword="false" /> , wenn Sie übergeben sie einen Enumerationswert, der zwei Bitfelder (<c>Pets.Dog</c> und <c>Pets.Cat</c>) festgelegt, und wenn Sie übergeben die Zeichenfolgendarstellung, Ein Enumerationswert ("Dog, Cat").  [! Code Csharp [System.Enum.IsDefined#2] (~/samples/snippets/csharp/VS_Snippets_CLR_System-System. Enum.IsDefined/cs/isdefined2.cs#2)] [! Code Vb [System.Enum.IsDefined#2] (~/samples/snippets/visualbasic/VS_Snippets_CLR_System-System. Enum.IsDefined/vb/isdefined2.vb#2)] Sie können bestimmen, ob mehrere Bitfelder, durch Aufrufen festgelegt werden der <see cref="M:System.Enum.HasFlag(System.Enum)" /> Methode.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-359">
              <para>If <paramref name="enumType" /> is an enumeration that is defined by using the <see cref="T:System.FlagsAttribute" /> attribute, the method returns <see langword="false" /> if multiple bit fields in <paramref name="value" /> are set but <paramref name="value" /> does not correspond to a composite enumeration value, or if <paramref name="value" /> is a string concatenation of the names of multiple bit flags. In the following example, a <c>Pets</c> enumeration is defined with the <see cref="T:System.FlagsAttribute" /> attribute. The <see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /> method returns <see langword="false" /> when you pass it an enumeration value that has two bit fields (<c>Pets.Dog</c> and <c>Pets.Cat</c>) set, and when you pass it the string representation of that enumeration value ("Dog, Cat").  [!code-csharp[System.Enum.IsDefined#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.IsDefined/cs/isdefined2.cs#2)] [!code-vb[System.Enum.IsDefined#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.IsDefined/vb/isdefined2.vb#2)]  You can determine whether multiple bit fields are set by calling the <see cref="M:System.Enum.HasFlag(System.Enum)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Enum.GetName(System.Type,System.Object)" />
        <altmember cref="M:System.Enum.GetNames(System.Type)" />
        <altmember cref="M:System.Enum.GetValues(System.Type)" />
        <altmember cref="M:System.Enum.HasFlag(System.Enum)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a0fd0-360">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-360">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span>
          </span>
        </summary>
        <altmember cref="M:System.Enum.TryParse``1(System.String,``0@)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (Type enumType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(class System.Type enumType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (enumType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(Type ^ enumType, System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : Type * string -&gt; obj" Usage="System.Enum.Parse (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-361">Ein Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-361">An enumeration type.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-362">Eine Zeichenfolge mit dem zu konvertierenden Namen oder Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-362">A string containing the name or value to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-363">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-363">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-364">Ein Objekt vom Typ <paramref name="enumType" />, dessen Wert durch <paramref name="value" /> dargestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-364">An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-365">Die `value` Parameter enthält eine Zeichenfolgendarstellung des zugrunde liegenden Wert oder eine benannte Konstante eines Enumerationsmembers oder eine Liste von benannten Konstanten, die durch ein Komma (,) getrennt.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-365">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</span></span> <span data-ttu-id="a0fd0-366">Eine oder mehrere Leerzeichen vor oder nach jeder Wert, den Namen oder den Komma in `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-366">One or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="a0fd0-367">Wenn `value` ist eine Liste der Rückgabewert ist der Wert der angegebenen Namen, die mit einer bitweisen Kombination `OR` Vorgang.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-367">If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.</span></span>  
  
 <span data-ttu-id="a0fd0-368">Wenn `value` ist ein Name, die nicht mit einer benannten Konstante der entsprechen `enumType`, löst die Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-368">If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a0fd0-369">Wenn `value` die Darstellung der Zeichenfolge eine ganze Zahl, die nicht von einen zugrunde liegenden Wert darstellt der `enumType` -Enumeration, der Methodenrückgabe Enumerationsmember, deren zugrunde liegenden Wert `value` in einen ganzzahligen Typ konvertiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-369">If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="a0fd0-370">Wenn dieses Verhalten nicht erwünscht ist, rufen Sie die <xref:System.Enum.IsDefined%2A> Methode, um sicherzustellen, dass eine bestimmte Zeichenfolge-Darstellung einer ganzen Zahl tatsächlich ein Mitglied ist `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-370">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`.</span></span> <span data-ttu-id="a0fd0-371">Das folgende Beispiel definiert eine `Colors` -Enumeration, ruft der <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> -Methode zum Konvertieren von Zeichenfolgen in ihre entsprechenden Enumerationswerte und ruft die <xref:System.Enum.IsDefined%2A> Methode, um sicherzustellen, dass bestimmte ganzzahlige Werte zugrunde liegt, werden Werte in die `Colors` Enumeration.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-371">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample1.cs#1)]
 [!code-vb[System.Enum.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample1.vb#1)]  
  
 <span data-ttu-id="a0fd0-372">Dieser Vorgang wird Groß-/Kleinschreibung beachtet.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-372">This operation is case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-373">Im folgenden Beispiel wird die <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> Methode ein Array von Zeichenfolgen, die durch den Aufruf erstellt werden, analysiert der <xref:System.Enum.GetNames%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-373">The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method.</span></span> <span data-ttu-id="a0fd0-374">Darüber hinaus verwendet die <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> Methode, um ein Enumerationswert analysiert, der ein Bitfeld besteht.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-374">It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.</span></span>  
  
 [!code-cpp[enumparse#1](~/samples/snippets/cpp/VS_Snippets_CLR/enumparse/CPP/EnumParse.cpp#1)]
 [!code-csharp[enumparse#1](~/samples/snippets/csharp/VS_Snippets_CLR/enumparse/CS/EnumParse.cs#1)]
 [!code-vb[enumparse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enumparse/VB/EnumParse.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-375">
            <paramref name="enumType" /> oder <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-375">
              <paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-376">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-376">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
          <span data-ttu-id="a0fd0-377">Oder:  <paramref name="value" /> ist entweder eine leere Zeichenfolge oder enthält nur Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-377">-or-  <paramref name="value" /> is either an empty string or only contains white space.</span>
          </span>
          <span data-ttu-id="a0fd0-378">Oder:  <paramref name="value" /> ist ein Name, aber keiner der benannten Konstanten, die für die Enumeration definiert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-378">-or-  <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a0fd0-379">
            <paramref name="value" /> liegt außerhalb des Bereichs des <paramref name="enumType" /> zugrunde liegenden Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-379">
              <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static object Parse (Type enumType, string value, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Parse(class System.Type enumType, string value, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse(System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (enumType As Type, value As String, ignoreCase As Boolean) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ Parse(Type ^ enumType, System::String ^ value, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Parse : Type * string * bool -&gt; obj" Usage="System.Enum.Parse (enumType, value, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-380">Ein Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-380">An enumeration type.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-381">Eine Zeichenfolge mit dem zu konvertierenden Namen oder Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-381">A string containing the name or value to convert.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="a0fd0-382">
            <see langword="true" />, wenn die Groß- und Kleinschreibung nicht berücksichtigt wird. <see langword="false" />, wenn die Groß- und Kleinschreibung berücksichtigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-382">
              <see langword="true" /> to ignore case; <see langword="false" /> to regard case.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-383">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-383">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span>
          </span>
          <span data-ttu-id="a0fd0-384">Ein Parameter gibt an, ob beim Vorgang die Groß-/Kleinschreibung nicht beachtet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-384">A parameter specifies whether the operation is case-insensitive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-385">Ein Objekt vom Typ <paramref name="enumType" />, dessen Wert durch <paramref name="value" /> dargestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-385">An object of type <paramref name="enumType" /> whose value is represented by <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-386">Die `value` Parameter enthält eine Zeichenfolgendarstellung des zugrunde liegenden Wert oder eine benannte Konstante eines Enumerationsmembers oder eine Liste von benannten Konstanten, die durch ein Komma (,) getrennt.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-386">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</span></span> <span data-ttu-id="a0fd0-387">Eine oder mehrere Leerzeichen vor oder nach jeder Wert, den Namen oder den Komma in `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-387">One or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="a0fd0-388">Wenn `value` ist eine Liste der Rückgabewert ist der Wert der angegebenen Namen, die mit einer bitweisen Kombination `OR` Vorgang.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-388">If `value` is a list, the return value is the value of the specified names combined with a bitwise `OR` operation.</span></span>  
  
 <span data-ttu-id="a0fd0-389">Wenn `value` ist ein Name, die nicht mit einer benannten Konstante der entsprechen `enumType`, löst die Methode eine <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-389">If `value` is a name that does not correspond to a named constant of `enumType`, the method throws an <xref:System.ArgumentException>.</span></span> <span data-ttu-id="a0fd0-390">Wenn `value` die Darstellung der Zeichenfolge eine ganze Zahl, die nicht von einen zugrunde liegenden Wert darstellt der `enumType` -Enumeration, der Methodenrückgabe Enumerationsmember, deren zugrunde liegenden Wert `value` in einen ganzzahligen Typ konvertiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-390">If `value` is the string representation of an integer that does not represent an underlying value of the `enumType` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="a0fd0-391">Wenn dieses Verhalten nicht erwünscht ist, rufen Sie die <xref:System.Enum.IsDefined%2A> Methode, um sicherzustellen, dass eine bestimmte Zeichenfolge-Darstellung einer ganzen Zahl tatsächlich ein Mitglied ist `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-391">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `enumType`.</span></span> <span data-ttu-id="a0fd0-392">Das folgende Beispiel definiert eine `Colors` -Enumeration, ruft der <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> -Methode zum Konvertieren von Zeichenfolgen in ihre entsprechenden Enumerationswerte und ruft die <xref:System.Enum.IsDefined%2A> Methode, um sicherzustellen, dass bestimmte ganzzahlige Werte zugrunde liegt, werden Werte in die `Colors` Enumeration.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-392">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]
 [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]  
  
 <span data-ttu-id="a0fd0-393">Die `ignoreCase` Parameter gibt an, ob dieser Vorgang die Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-393">The `ignoreCase` parameter specifies whether this operation is case-sensitive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-394">Im folgenden Beispiel wird die <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> Methode ein Array von Zeichenfolgen, die durch den Aufruf erstellt werden, analysiert der <xref:System.Enum.GetNames%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-394">The following example uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method to parse an array of strings that are created by calling the <xref:System.Enum.GetNames%2A> method.</span></span> <span data-ttu-id="a0fd0-395">Darüber hinaus verwendet die <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> Methode, um ein Enumerationswert analysiert, der ein Bitfeld besteht.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-395">It also uses the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method to parse an enumeration value that consists of a bit field.</span></span>  
  
 [!code-csharp[System.Enum.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Enum.Parse/cs/ParseExample2.cs#2)]
 [!code-vb[System.Enum.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Enum.Parse/vb/ParseExample2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-396">
            <paramref name="enumType" /> oder <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-396">
              <paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-397">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-397">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
          <span data-ttu-id="a0fd0-398">Oder:  <paramref name="value" /> ist entweder eine leere Zeichenfolge ("") oder enthält nur Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-398">-or-  <paramref name="value" /> is either an empty string ("") or only contains white space.</span>
          </span>
          <span data-ttu-id="a0fd0-399">Oder:  <paramref name="value" /> ist ein Name, aber keiner der benannten Konstanten, die für die Enumeration definiert sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-399">-or-  <paramref name="value" /> is a name, but not one of the named constants defined for the enumeration.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="a0fd0-400">
            <paramref name="value" /> liegt außerhalb des Bereichs des <paramref name="enumType" /> zugrunde liegenden Typs.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-400">
              <paramref name="value" /> is outside the range of the underlying type of <paramref name="enumType" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Parse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string value) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TEnum Parse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse``1(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse(Of TEnum As Structure) (value As String) As TEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static TEnum Parse(System::String ^ value);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; 'Enum (requires 'Enum : struct)" Usage="System.Enum.Parse value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEnum</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">To be added.</typeparam>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static TEnum Parse&lt;TEnum&gt; (string value, bool ignoreCase) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TEnum Parse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.Parse``1(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse(Of TEnum As Structure) (value As String, ignoreCase As Boolean) As TEnum" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static TEnum Parse(System::String ^ value, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member Parse : string * bool -&gt; 'Enum (requires 'Enum : struct)" Usage="System.Enum.Parse (value, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TEnum</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">To be added.</typeparam>
        <param name="value">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-401">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-401">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-402">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in einen booleschen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-402">Converts the current value to a Boolean value based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-403">Dieser Member löst immer eine Ausnahme aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-403">This member always throws an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-404">Derzeit nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-404">Currently not implemented.</span></span> <span data-ttu-id="a0fd0-405">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-405">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a0fd0-406">In allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-406">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-407">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-407">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-408">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 8-Bit-Ganzzahl ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-408">Converts the current value to an 8-bit unsigned integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-409">Der konvertierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-409">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-410">Verwendet <xref:System.Convert> zum Durchführen der Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-410">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-411">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-411">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-412">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in ein Unicode-Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-412">Converts the current value to a Unicode character based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-413">Dieser Member löst immer eine Ausnahme aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-413">This member always throws an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-414">Derzeit nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-414">Currently not implemented.</span></span> <span data-ttu-id="a0fd0-415">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-415">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a0fd0-416">In allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-416">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-417">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-417">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-418">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine <see cref="T:System.DateTime" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-418">Converts the current value to a <see cref="T:System.DateTime" /> based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-419">Dieser Member löst immer eine Ausnahme aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-419">This member always throws an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-420">Derzeit nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-420">Currently not implemented.</span></span> <span data-ttu-id="a0fd0-421">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-421">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a0fd0-422">In allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-422">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-423">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-423">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-424">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine <see cref="T:System.Decimal" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-424">Converts the current value to a <see cref="T:System.Decimal" /> based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-425">Dieser Member löst immer eine Ausnahme aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-425">This member always throws an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-426">Derzeit nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-426">Currently not implemented.</span></span> <span data-ttu-id="a0fd0-427">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-427">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a0fd0-428">In allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-428">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-429">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-429">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-430">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine Gleitkommazahl mit doppelter Genauigkeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-430">Converts the current value to a double-precision floating point number based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-431">Dieser Member löst immer eine Ausnahme aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-431">This member always throws an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-432">Derzeit nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-432">Currently not implemented.</span></span> <span data-ttu-id="a0fd0-433">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-433">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a0fd0-434">In allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-434">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-435">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-435">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-436">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 16-Bit-Ganzzahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-436">Converts the current value to a 16-bit signed integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-437">Der konvertierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-437">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-438">Verwendet <xref:System.Convert> zum Durchführen der Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-438">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-439">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-439">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-440">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 32-Bit-Ganzzahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-440">Converts the current value to a 32-bit signed integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-441">Der konvertierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-441">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-442">Verwendet <xref:System.Convert> zum Durchführen der Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-442">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-443">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-443">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-444">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 64-Bit-Ganzzahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-444">Converts the current value to a 64-bit signed integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-445">Der konvertierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-445">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-446">Verwendet <xref:System.Convert> zum Durchführen der Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-446">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-447">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-447">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-448">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 8-Bit-Ganzzahl mit Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-448">Converts the current value to an 8-bit signed integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-449">Der konvertierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-449">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-450">Verwendet <xref:System.Convert> zum Durchführen der Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-450">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-451">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-451">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-452">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine Gleitkommazahl mit einfacher Genauigkeit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-452">Converts the current value to a single-precision floating-point number based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-453">Dieser Member löst immer eine Ausnahme aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-453">This member always throws an exception.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-454">Derzeit nicht implementiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-454">Currently not implemented.</span></span> <span data-ttu-id="a0fd0-455">Löst immer eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-455">Always throws an exception.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="a0fd0-456">In allen Fällen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-456">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToString">
      <MemberSignature Language="C#" Value="string IConvertible.ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IConvertible.ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (provider As IFormatProvider) As String Implements IConvertible.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IConvertible.ToString(IFormatProvider ^ provider) = IConvertible::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString().")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="a0fd0-457">Der Typ, in den konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-457">The type to convert to.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="a0fd0-458">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-458">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-459">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in einen angegebenen Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-459">Converts the current value to a specified type based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-460">Der konvertierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-460">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-461">Verwendet <xref:System.Convert> zum Durchführen der Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-461">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-462">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-462">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-463">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 16-Bit-Ganzzahl ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-463">Converts the current value to a 16-bit unsigned integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-464">Der konvertierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-464">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-465">Verwendet <xref:System.Convert> zum Durchführen der Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-465">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-466">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-466">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-467">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 32-Bit-Ganzzahl ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-467">Converts the current value to a 32-bit unsigned integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-468">Der konvertierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-468">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-469">Verwendet <xref:System.Convert> zum Durchführen der Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-469">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-470">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-470">An object that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-471">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 64-Bit-Ganzzahl ohne Vorzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-471">Converts the current value to a 64-bit unsigned integer based on the underlying type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-472">Der konvertierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-472">The converted value.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-473">Verwendet <xref:System.Convert> zum Durchführen der Konvertierung.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-473">Uses <xref:System.Convert> to perform the conversion.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IFormattable.ToString">
      <MemberSignature Language="C#" Value="string IFormattable.ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.IFormattable.ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.System#IFormattable#ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToString (format As String, provider As IFormatProvider) As String Implements IFormattable.ToString" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.IFormattable.ToString(System::String ^ format, IFormatProvider ^ provider) = IFormattable::ToString;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToObject">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a0fd0-474">Konvertiert einen angegebenen Ganzzahlwert in einen Enumerationsmember.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-474">Converts a specified integer value to an enumeration member.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, byte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Byte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Byte) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::Byte value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * byte -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Byte" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-475">Der zurückzugebende Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-475">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-476">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-476">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-477">Konvertiert die angegebene 8-Bit-Ganzzahl ohne Vorzeichen in einen Enumerationsmember.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-477">Converts the specified 8-bit unsigned integer to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-478">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-478">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-479">Die <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> -Methode konvertiert `value` in einen Enumerationsmember, deren zugrunde liegenden Wert `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-479">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="a0fd0-480">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt `enumType` Elemente.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-480">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="a0fd0-481">Um sicherzustellen, dass `value` ist ein gültiger zugrunde liegenden Wert von der `enumType` -Enumeration, übergeben Sie sie an der <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-481">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="a0fd0-482">Diese Konvertierungsmethode gibt einen Wert vom Typ <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-482">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="a0fd0-483">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-483">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-484">
            <paramref name="enumType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-484">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-485">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-485">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, short value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Short) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, short value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int16 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Int16" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-486">Der zurückzugebende Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-486">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-487">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-487">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-488">Konvertiert die angegebene 16-Bit-Ganzzahl mit Vorzeichen in einen Enumerationsmember.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-488">Converts the specified 16-bit signed integer to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-489">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-489">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-490">Die <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> -Methode konvertiert `value` in einen Enumerationsmember, deren zugrunde liegenden Wert `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-490">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="a0fd0-491">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt `enumType` Elemente.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-491">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="a0fd0-492">Um sicherzustellen, dass `value` ist ein gültiger zugrunde liegenden Wert von der `enumType` -Enumeration, übergeben Sie sie an der <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-492">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="a0fd0-493">Diese Konvertierungsmethode gibt einen Wert vom Typ <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-493">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="a0fd0-494">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-494">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-495">
            <paramref name="enumType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-495">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-496">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-496">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, int value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, int value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-497">Der zurückzugebende Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-497">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-498">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-498">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-499">Konvertiert die angegebene 32-Bit-Ganzzahl mit Vorzeichen in einen Enumerationsmember.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-499">Converts the specified 32-bit signed integer to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-500">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-500">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-501">Die <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> -Methode konvertiert `value` in einen Enumerationsmember, deren zugrunde liegenden Wert `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-501">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="a0fd0-502">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt `enumType` Elemente.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-502">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="a0fd0-503">Um sicherzustellen, dass `value` ist ein gültiger zugrunde liegenden Wert von der `enumType` -Enumeration, übergeben Sie sie an der <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-503">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="a0fd0-504">Diese Konvertierungsmethode gibt einen Wert vom Typ <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-504">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="a0fd0-505">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-505">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-506">
            <paramref name="enumType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-506">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-507">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-507">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, long value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, long value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * int64 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-508">Der zurückzugebende Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-508">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-509">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-509">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-510">Konvertiert die angegebene 64-Bit-Ganzzahl mit Vorzeichen in einen Enumerationsmember.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-510">Converts the specified 64-bit signed integer to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-511">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-511">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-512">Die <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> -Methode konvertiert `value` in einen Enumerationsmember, deren zugrunde liegenden Wert `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-512">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="a0fd0-513">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt `enumType` Elemente.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-513">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="a0fd0-514">Um sicherzustellen, dass `value` ist ein gültiger zugrunde liegenden Wert von der `enumType` -Enumeration, übergeben Sie sie an der <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-514">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="a0fd0-515">Diese Konvertierungsmethode gibt einen Wert vom Typ <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-515">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="a0fd0-516">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-516">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-517">
            <paramref name="enumType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-517">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-518">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-518">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * obj -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-519">Der zurückzugebende Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-519">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-520">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-520">The value convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-521">Konvertiert das angegebene Objekt mit einem ganzzahligen Wert in einen Enumerationsmember.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-521">Converts the specified object with an integer value to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-522">Ein Enumerationsobjekt mit dem Wert <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-522">An enumeration object whose value is <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-523">Die <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> -Methode konvertiert den ganzzahligen Wert `value` in einen Enumerationsmember, deren zugrunde liegenden Wert `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-523">The <xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29> method converts the integral value `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="a0fd0-524">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt `enumType` Elemente.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-524">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="a0fd0-525">Um sicherzustellen, dass `value` ist ein gültiger zugrunde liegenden Wert von der `enumType` -Enumeration, übergeben Sie sie an der <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-525">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="a0fd0-526">Diese Konvertierungsmethode gibt einen Wert vom Typ <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-526">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="a0fd0-527">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-527">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-528">
            <paramref name="enumType" /> oder <paramref name="value" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-528">
              <paramref name="enumType" /> or <paramref name="value" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-529">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-529">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
          <span data-ttu-id="a0fd0-530">Oder:  <paramref name="value" /> ist nicht vom Typ <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" /> oder <see cref="T:System.UInt64" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-530">-or-  <paramref name="value" /> is not type <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.Int32" />, <see cref="T:System.Int64" />, <see cref="T:System.Byte" />, <see cref="T:System.UInt16" />, <see cref="T:System.UInt32" />, or <see cref="T:System.UInt64" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, sbyte value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, int8 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.SByte)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As SByte) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::SByte value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * sbyte -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.SByte" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-531">Der zurückzugebende Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-531">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-532">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-532">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-533">Konvertiert den angegebenen Wert einer 8-Bit-Ganzzahl mit Vorzeichen in einen Enumerationsmember.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-533">Converts the specified 8-bit signed integer value to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-534">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-534">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-535">Die <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> -Methode konvertiert `value` in einen Enumerationsmember, deren zugrunde liegenden Wert `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-535">The <xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="a0fd0-536">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt `enumType` Elemente.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-536">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="a0fd0-537">Um sicherzustellen, dass `value` ist ein gültiger zugrunde liegenden Wert von der `enumType` -Enumeration, übergeben Sie sie an der <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-537">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="a0fd0-538">Diese Konvertierungsmethode gibt einen Wert vom Typ <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-538">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="a0fd0-539">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-539">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-540">
            <paramref name="enumType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-540">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-541">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-541">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, ushort value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int16 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt16)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As UShort) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt16 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint16 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.UInt16" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-542">Der zurückzugebende Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-542">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-543">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-543">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-544">Konvertiert den angegebenen Wert einer 16-Bit-Ganzzahl ohne Vorzeichen in einen Enumerationsmember.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-544">Converts the specified 16-bit unsigned integer value to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-545">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-545">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-546">Die <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> -Methode konvertiert `value` in einen Enumerationsmember, deren zugrunde liegenden Wert `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-546">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="a0fd0-547">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt `enumType` Elemente.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-547">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="a0fd0-548">Um sicherzustellen, dass `value` ist ein gültiger zugrunde liegenden Wert von der `enumType` -Enumeration, übergeben Sie sie an der <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-548">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="a0fd0-549">Diese Konvertierungsmethode gibt einen Wert vom Typ <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-549">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="a0fd0-550">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-550">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-551">
            <paramref name="enumType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-551">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-552">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-552">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As UInteger) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt32 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint32 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-553">Der zurückzugebende Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-553">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-554">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-554">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-555">Konvertiert den angegebenen Wert einer 32-Bit-Ganzzahl ohne Vorzeichen in einen Enumerationsmember.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-555">Converts the specified 32-bit unsigned integer value to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-556">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-556">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-557">Die <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> -Methode konvertiert `value` in einen Enumerationsmember, deren zugrunde liegenden Wert `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-557">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="a0fd0-558">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt `enumType` Elemente.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-558">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="a0fd0-559">Um sicherzustellen, dass `value` ist ein gültiger zugrunde liegenden Wert von der `enumType` -Enumeration, übergeben Sie sie an der <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-559">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="a0fd0-560">Diese Konvertierungsmethode gibt einen Wert vom Typ <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-560">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="a0fd0-561">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-561">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-562">
            <paramref name="enumType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-562">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-563">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-563">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ToObject">
      <MemberSignature Language="C#" Value="public static object ToObject (Type enumType, ulong value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ToObject(class System.Type enumType, unsigned int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToObject(System.Type,System.UInt64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ToObject (enumType As Type, value As ULong) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ToObject(Type ^ enumType, System::UInt64 value);" />
      <MemberSignature Language="F#" Value="static member ToObject : Type * uint64 -&gt; obj" Usage="System.Enum.ToObject (enumType, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.UInt64" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <span data-ttu-id="a0fd0-564">Der zurückzugebende Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-564">The enumeration type to return.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="a0fd0-565">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-565">The value to convert to an enumeration member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-566">Konvertiert den angegebenen Wert einer 64-Bit-Ganzzahl ohne Vorzeichen in einen Enumerationsmember.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-566">Converts the specified 64-bit unsigned integer value to an enumeration member.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-567">Eine Instanz der Enumeration, die auf <paramref name="value" /> festgelegt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-567">An instance of the enumeration set to <paramref name="value" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-568">Die <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> -Methode konvertiert `value` in einen Enumerationsmember, deren zugrunde liegenden Wert `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-568">The <xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29> method converts `value` to an enumeration member whose underlying value is `value`.</span></span> <span data-ttu-id="a0fd0-569">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt `enumType` Elemente.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-569">Note that the conversion succeeds even if value is outside the bounds of `enumType` members.</span></span> <span data-ttu-id="a0fd0-570">Um sicherzustellen, dass `value` ist ein gültiger zugrunde liegenden Wert von der `enumType` -Enumeration, übergeben Sie sie an der <xref:System.Enum.IsDefined%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-570">To ensure that `value` is a valid underlying value of the `enumType` enumeration, pass it to the <xref:System.Enum.IsDefined%2A> method.</span></span>  
  
 <span data-ttu-id="a0fd0-571">Diese Konvertierungsmethode gibt einen Wert vom Typ <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-571">This conversion method returns a value of type <xref:System.Object>.</span></span> <span data-ttu-id="a0fd0-572">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs `enumType`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-572">You can then cast it or convert it to an object of type `enumType`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a0fd0-573">
            <paramref name="enumType" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-573">
              <paramref name="enumType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-574">
            <paramref name="enumType" /> ist keine <see cref="T:System.Enum" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-574">
              <paramref name="enumType" /> is not an <see cref="T:System.Enum" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.IsDefined(System.Type,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a0fd0-575">Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-575">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="enum.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="a0fd0-576">Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-576">Converts the value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-577">Die Zeichenfolgendarstellung des Werts dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-577">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-578">Der Rückgabewert wird mit dem allgemeinen Formatbezeichner ("G") formatiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-578">The return value is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="a0fd0-579">D. h., wenn die <xref:System.FlagsAttribute> gilt nicht für diesen Enumerationstyp eine benannte Konstante mit dem Wert dieser Instanz vorhanden ist, und der Rückgabewert ist eine Zeichenfolge, die mit dem Namen der Konstanten.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-579">That is, if the <xref:System.FlagsAttribute> is not applied to this enumerated type and there is a named constant equal to the value of this instance, then the return value is a string containing the name of the constant.</span></span> <span data-ttu-id="a0fd0-580">Wenn die <xref:System.FlagsAttribute> wird angewendet, es ist eine Kombination aus ein oder mehrere benannte Konstanten gleich dem Wert dieser Instanz, und der Rückgabewert ist eine Zeichenfolge mit einer durch Trennzeichen getrennte Liste der Namen der Konstanten.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-580">If the <xref:System.FlagsAttribute> is applied and there is a combination of one or more named constants equal to the value of this instance, then the return value is a string containing a delimiter-separated list of the names of the constants.</span></span> <span data-ttu-id="a0fd0-581">Andernfalls ist der Rückgabewert eine Zeichenfolgendarstellung des numerischen Werts dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-581">Otherwise, the return value is the string representation of the numeric value of this instance.</span></span> <span data-ttu-id="a0fd0-582">Weitere Informationen zur Formatierung von Enumerationswerten finden Sie unter [Enumerationsformatzeichenfolgen](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a0fd0-582">For more information about formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="a0fd0-583">Weitere Informationen zur Formatierung im Allgemeinen finden Sie unter [Formatierung von Typen](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="a0fd0-583">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-584">Das folgende Beispiel zeigt einen aufgezählten Wert in eine Zeichenfolge konvertieren.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-584">The following example demonstrates converting an enumerated value to a string.</span></span>  
  
 [!code-cpp[Classic Enum.ToString2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Enum.ToString2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/CS/source.cs#1)]
 [!code-vb[Classic Enum.ToString2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Enum.ToString2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <span data-ttu-id="a0fd0-585">
            <para>Wenn mehrere Enumerationsmember den gleichen zugrunde liegenden Wert müssen aus, und Sie versuchen, die Zeichenfolgendarstellung für einen Enumerationsmember Namen basierend auf seinem zugrunde liegenden Wert abzurufen, sollten Ihren Code keine Annahmen vornehmen, deren, die Name die Methode zurückgegeben wird. Die folgende Enumeration definiert z. B. zwei Member <c>Shade.Gray</c> und <c>Shade.Grey</c>, die über den gleichen zugrunde liegenden Wert verfügen.  [! code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [! code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]  Der folgende Methodenaufruf versucht, den Namen eines Elements der abzurufenden der <c>Schattierung</c> Enumeration, deren zugrunde liegenden Wert 1 ist. Die Methode kann entweder "Gray" oder "Grey" zurückgeben, und Code sollten keine Annahmen darüber, welche Zeichenfolge zurückgegeben wird.  [! code-csharp[System.Enum.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#2)] [! code-vb[System.Enum.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#2)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-585">
              <para>If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return. For example, the following enumeration defines two members, <c>Shade.Gray</c> and <c>Shade.Grey</c>, that have the same underlying value.  [!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]  The following method call attempts to retrieve the name of a member of the <c>Shade</c> enumeration whose underlying value is 1. The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.  [!code-csharp[System.Enum.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#2)] [!code-vb[System.Enum.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#2)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="enum.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString().")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="a0fd0-586">(Veraltet)</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-586">(obsolete)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-587">Diese Methodenüberladung ist veraltet. Verwenden Sie <see cref="M:System.Enum.ToString" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-587">This method overload is obsolete; use <see cref="M:System.Enum.ToString" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-588">Die Zeichenfolgendarstellung des Werts dieser Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-588">The string representation of the value of this instance.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="enum.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="a0fd0-589">Eine Formatzeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-589">A format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-590">Konvertiert den Wert dieser Instanz anhand des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-590">Converts the value of this instance to its equivalent string representation using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-591">Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-591">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-592">Die `format` kann Parameter enthalten, die "G" oder "g", "D" oder "d", "X" oder "X" und "F" oder "f" Formatzeichenfolgen (die Formatzeichenfolge ist nicht Groß-/Kleinschreibung).</span><span class="sxs-lookup"><span data-stu-id="a0fd0-592">The `format` parameter can contain the "G" or "g", "D" or "d", "X" or "x", and "F" or "f" format strings (the format string is not case-sensitive).</span></span> <span data-ttu-id="a0fd0-593">Wenn `format` ist `null` oder eine leere Zeichenfolge (""), wird der allgemeine Formatbezeichner ("G") verwendet.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-593">If `format` is `null` or an empty string (""), the general format specifier ("G") is used.</span></span> <span data-ttu-id="a0fd0-594">Weitere Informationen zu den Enumerationsformatzeichenfolgen und Formatierung von Enumerationswerten finden Sie unter [Enumerationsformatzeichenfolgen](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a0fd0-594">For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="a0fd0-595">Weitere Informationen zur Formatierung im Allgemeinen finden Sie unter [Formatierung von Typen](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="a0fd0-595">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-596">Im folgenden Beispiel wird veranschaulicht, wie einen aufgezählten Wert in eine Zeichenfolge konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-596">The following example demonstrates how to convert an enumerated value to a string.</span></span>  
  
 [!code-cpp[enum.tostring#1](~/samples/snippets/cpp/VS_Snippets_CLR/enum.tostring/CPP/tostr.cpp#1)]
 [!code-csharp[enum.tostring#1](~/samples/snippets/csharp/VS_Snippets_CLR/enum.tostring/CS/tostr.cs#1)]
 [!code-vb[enum.tostring#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/enum.tostring/VB/tostr.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="a0fd0-597">
            <paramref name="format" /> enthält eine ungültige Angabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-597">
              <paramref name="format" /> contains an invalid specification.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0fd0-598">
            <paramref name="format" /> ist gleich "X", der Enumerationstyp ist jedoch unbekannt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-598">
              <paramref name="format" /> equals "X", but the enumeration type is unknown.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="a0fd0-599">
            <para>Wenn mehrere Enumerationsmember den gleichen zugrunde liegenden Wert müssen aus, und Sie versuchen, die Zeichenfolgendarstellung für einen Enumerationsmember Namen basierend auf seinem zugrunde liegenden Wert abzurufen, sollten Ihren Code keine Annahmen vornehmen, deren, die Name die Methode zurückgegeben wird. Die folgende Enumeration definiert z. B. zwei Member <c>Shade.Gray</c> und <c>Shade.Grey</c>, die über den gleichen zugrunde liegenden Wert verfügen.  [! code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [! code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]  Der folgende Methodenaufruf versucht, den Namen eines Elements der abzurufenden der <c>Schattierung</c> Enumeration, deren zugrunde liegenden Wert 1 ist. Die Methode kann entweder "Gray" oder "Grey" zurückgeben, und Code sollten keine Annahmen darüber, welche Zeichenfolge zurückgegeben wird.  [! code-csharp[System.Enum.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#3)] [! code-vb[System.Enum.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#3)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-599">
              <para>If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return. For example, the following enumeration defines two members, <c>Shade.Gray</c> and <c>Shade.Grey</c>, that have the same underlying value.  [!code-csharp[System.Enum.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#1)] [!code-vb[System.Enum.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#1)]  The following method call attempts to retrieve the name of a member of the <c>Shade</c> enumeration whose underlying value is 1. The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.  [!code-csharp[System.Enum.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tostring/cs/tostringbyvalue1.cs#3)] [!code-vb[System.Enum.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tostring/vb/tostringbyvalue1.vb#3)]</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
        <altmember cref="M:System.IFormattable.ToString(System.String,System.IFormatProvider)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="enum.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The provider argument is not used. Please use ToString(String).")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="a0fd0-600">Eine Formatangabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-600">A format specification.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="a0fd0-601">(Veraltet)</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-601">(Obsolete.)</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-602">Diese Methodenüberladung ist veraltet. Verwenden Sie <see cref="M:System.Enum.ToString(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-602">This method overload is obsolete; use <see cref="M:System.Enum.ToString(System.String)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-603">Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <paramref name="format" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-603">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-604">Die `format` kann Parameter enthalten, die "G" oder "g", "D" oder "d", "X" oder "X" und "F" oder "f" Formatzeichenfolgen (die Formatzeichenfolge ist nicht Groß-/Kleinschreibung).</span><span class="sxs-lookup"><span data-stu-id="a0fd0-604">The `format` parameter can contain the "G" or "g", "D" or "d", "X" or "x", and "F" or "f" format strings (the format string is not case-sensitive).</span></span> <span data-ttu-id="a0fd0-605">Wenn `format` ist `null` oder eine leere Zeichenfolge (""), wird der allgemeine Formatbezeichner ("G") verwendet.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-605">If `format` is `null` or an empty string (""), the general format specifier ("G") is used.</span></span> <span data-ttu-id="a0fd0-606">Weitere Informationen zu den Enumerationsformatzeichenfolgen und Formatierung von Enumerationswerten finden Sie unter [Enumerationsformatzeichenfolgen](~/docs/standard/base-types/enumeration-format-strings.md).</span><span class="sxs-lookup"><span data-stu-id="a0fd0-606">For more information about the enumeration format strings and formatting enumeration values, see [Enumeration Format Strings](~/docs/standard/base-types/enumeration-format-strings.md).</span></span> <span data-ttu-id="a0fd0-607">Weitere Informationen zur Formatierung im Allgemeinen finden Sie unter [Formatierung von Typen](~/docs/standard/base-types/formatting-types.md).</span><span class="sxs-lookup"><span data-stu-id="a0fd0-607">For more information about formatting in general, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="a0fd0-608">Geben Sie nur `format`; das `provider` Parameter ist veraltet.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-608">Specify only `format`; the `provider` parameter is obsolete.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="a0fd0-609">
            <paramref name="format" /> enthält keine gültige Formatangabe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-609">
              <paramref name="format" /> does not contain a valid format specification.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="a0fd0-610">
            <paramref name="format" /> ist gleich "X", der Enumerationstyp ist jedoch unbekannt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-610">
              <paramref name="format" /> equals "X", but the enumeration type is unknown.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="a0fd0-611">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-611">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span>
          </span>
          <span data-ttu-id="a0fd0-612">Der Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-612">The return value indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Type enumType, string value, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class System.Type enumType, string value, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse(System.Type,System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (enumType As Type, value As String, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Type ^ enumType, System::String ^ value, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : Type * string *  -&gt; bool" Usage="System.Enum.TryParse (enumType, value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumType">To be added.</param>
        <param name="value">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (Type enumType, string value, bool ignoreCase, out object result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(class System.Type enumType, string value, bool ignoreCase, [out] object&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse(System.Type,System.String,System.Boolean,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (enumType As Type, value As String, ignoreCase As Boolean, ByRef result As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(Type ^ enumType, System::String ^ value, bool ignoreCase, [Runtime::InteropServices::Out] System::Object ^ % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : Type * string * bool *  -&gt; bool" Usage="System.Enum.TryParse (enumType, value, ignoreCase, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="result" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="enumType">To be added.</param>
        <param name="value">To be added.</param>
        <param name="ignoreCase">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string value, out TEnum result) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, [out] !!TEnum&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse``1(System.String,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse(Of TEnum As Structure) (value As String, ByRef result As TEnum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static bool TryParse(System::String ^ value, [Runtime::InteropServices::Out] TEnum % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool (requires 'Enum : struct)" Usage="System.Enum.TryParse (value, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="result" Type="TEnum&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">
          <span data-ttu-id="a0fd0-613">Der Enumerationstyp, der zu konvertierende <c>Wert</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-613">The enumeration type to which to convert <c>value</c>.</span>
          </span>
        </typeparam>
        <param name="value">
          <span data-ttu-id="a0fd0-614">Die Zeichenfolgendarstellung des Enumerationsnamens oder zugrunde liegenden Werts, der konvertiert werden soll. Dabei muss die Groß- und Kleinschreibung beachtet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-614">The case-sensitive string representation of the enumeration name or underlying value to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="a0fd0-615">Wenn diese Methode zurückgibt, enthält <c>result</c> ein Objekt des Typs <c>TEnum</c>, dessen Wert durch <c>value</c> dargestellt wird, wenn der Analysevorgang erfolgreich ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-615">When this method returns, <c>result</c> contains an object of type <c>TEnum</c> whose value is represented by <c>value</c> if the parse operation succeeds.</span>
          </span>
          <span data-ttu-id="a0fd0-616">Wenn der Analysevorgang misslingt, enthält <c>result</c> den Standardwert des zugrunde liegenden Typs von <c>TEnum</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-616">If the parse operation fails, <c>result</c> contains the default value of the underlying type of <c>TEnum</c>.</span>
          </span>
          <span data-ttu-id="a0fd0-617">Beachten Sie, dass dieser Wert kein Mitglied der <c>TEnum</c>-Enumeration sein muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-617">Note that this value need not be a member of the <c>TEnum</c> enumeration.</span>
          </span>
          <span data-ttu-id="a0fd0-618">Dieser Parameter wird nicht initialisiert übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-618">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-619">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-619">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span>
          </span>
          <span data-ttu-id="a0fd0-620">Der Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-620">The return value indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-621">
            <see langword="true" />, wenn der <paramref name="value" />-Parameter erfolgreich konvertiert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-621">
              <see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-622"><xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> ist identisch mit der <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> -Methode, außer dass eine Ausnahme auszulösen, es gibt `false` , wenn die Konvertierung schlägt fehl.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-622"><xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails.</span></span> <span data-ttu-id="a0fd0-623">Er wird für die Ausnahmebehandlung beim Analysieren der Zeichenfolgendarstellung eines Enumerationswerts überflüssig.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-623">It eliminates the need for exception handling when parsing the string representation of an enumeration value.</span></span>  
  
 <span data-ttu-id="a0fd0-624">Die `value` Parameter enthält eine Zeichenfolgendarstellung des zugrunde liegenden Wert oder eine benannte Konstante eines Enumerationsmembers oder eine Liste von benannten Konstanten oder zugrunde liegenden Werte durch Kommas (,) getrennt.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-624">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</span></span> <span data-ttu-id="a0fd0-625">Wenn `value` enthält mehrere benannte Konstanten oder Werte, eine oder mehrere Leerzeichen vor oder nach einem einzelnen Wert, den Namen oder den Komma in `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-625">If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="a0fd0-626">Wenn `value` ist eine Liste, `result` reflektiert den Wert der angegebenen Namen oder die zugrunde liegenden Werte, die mit einer bitweisen Kombination `OR` Vorgang.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-626">If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation.</span></span> <span data-ttu-id="a0fd0-627">Wenn `value` ist die Zeichenfolgendarstellung des Namens der einem Enumerationswert entspricht, beim Vergleich von `value` mit Enumeration Namen Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-627">If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names is case-sensitive.</span></span>  
  
 <span data-ttu-id="a0fd0-628">Wenn `value` ist ein Name, die nicht mit einer benannten Konstante der entsprechen `TEnum`, gibt die Methode `false`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-628">If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`.</span></span> <span data-ttu-id="a0fd0-629">Wenn `value` die Darstellung der Zeichenfolge eine ganze Zahl, die nicht von einen zugrunde liegenden Wert darstellt der `TEnum` -Enumeration, der Methodenrückgabe Enumerationsmember, deren zugrunde liegenden Wert `value` in einen ganzzahligen Typ konvertiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-629">If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="a0fd0-630">Wenn dieses Verhalten nicht erwünscht ist, rufen Sie die <xref:System.Enum.IsDefined%2A> Methode, um sicherzustellen, dass eine bestimmte Zeichenfolge-Darstellung einer ganzen Zahl tatsächlich ein Mitglied ist `TEnum`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-630">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-631">Das folgende Beispiel definiert eine `Colors` -Enumeration, ruft der <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> -Methode zum Konvertieren von Zeichenfolgen in ihre entsprechenden Enumerationswerte und ruft die <xref:System.Enum.IsDefined%2A> Methode, um sicherzustellen, dass bestimmte ganzzahlige Werte zugrunde liegt, werden Werte in die `Colors` Enumeration.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-631">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span>  
  
 [!code-csharp[System.Enum.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.Enum.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-632">
            <paramref name="TEnum" /> ist kein Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-632">
              <paramref name="TEnum" /> is not an enumeration type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryParse&lt;TEnum&gt;">
      <MemberSignature Language="C#" Value="public static bool TryParse&lt;TEnum&gt; (string value, bool ignoreCase, out TEnum result) where TEnum : struct;" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse&lt;struct .ctor (class System.ValueType) TEnum&gt;(string value, bool ignoreCase, [out] !!TEnum&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse(Of TEnum As Structure) (value As String, ignoreCase As Boolean, ByRef result As TEnum) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEnum&gt;&#xA; where TEnum : value class static bool TryParse(System::String ^ value, bool ignoreCase, [Runtime::InteropServices::Out] TEnum % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * bool *  -&gt; bool (requires 'Enum : struct)" Usage="System.Enum.TryParse (value, ignoreCase, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEnum">
          <Constraints>
            <ParameterAttribute>DefaultConstructorConstraint</ParameterAttribute>
            <ParameterAttribute>NotNullableValueTypeConstraint</ParameterAttribute>
            <BaseTypeName>System.ValueType</BaseTypeName>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="result" Type="TEnum&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="TEnum">
          <span data-ttu-id="a0fd0-633">Der Enumerationstyp, der zu konvertierende <c>Wert</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-633">The enumeration type to which to convert <c>value</c>.</span>
          </span>
        </typeparam>
        <param name="value">
          <span data-ttu-id="a0fd0-634">Die Zeichenfolgendarstellung des Enumerationsnamens oder zugrunde liegenden Werts, der konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-634">The string representation of the enumeration name or underlying value to convert.</span>
          </span>
        </param>
        <param name="ignoreCase">
          <span data-ttu-id="a0fd0-635">
            <see langword="true" />, wenn die Groß- und Kleinschreibung nicht berücksichtigt wird. <see langword="false" />, wenn die Groß- und Kleinschreibung berücksichtigt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-635">
              <see langword="true" /> to ignore case; <see langword="false" /> to consider case.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="a0fd0-636">Wenn diese Methode zurückgibt, enthält <c>result</c> ein Objekt des Typs <c>TEnum</c>, dessen Wert durch <c>value</c> dargestellt wird, wenn der Analysevorgang erfolgreich ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-636">When this method returns, <c>result</c> contains an object of type <c>TEnum</c> whose value is represented by <c>value</c> if the parse operation succeeds.</span>
          </span>
          <span data-ttu-id="a0fd0-637">Wenn der Analysevorgang misslingt, enthält <c>result</c> den Standardwert des zugrunde liegenden Typs von <c>TEnum</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-637">If the parse operation fails, <c>result</c> contains the default value of the underlying type of <c>TEnum</c>.</span>
          </span>
          <span data-ttu-id="a0fd0-638">Beachten Sie, dass dieser Wert kein Mitglied der <c>TEnum</c>-Enumeration sein muss.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-638">Note that this value need not be a member of the <c>TEnum</c> enumeration.</span>
          </span>
          <span data-ttu-id="a0fd0-639">Dieser Parameter wird nicht initialisiert übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-639">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="a0fd0-640">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-640">Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</span>
          </span>
          <span data-ttu-id="a0fd0-641">Ein Parameter gibt an, ob beim Vorgang die Groß-/Kleinschreibung beachtet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-641">A parameter specifies whether the operation is case-sensitive.</span>
          </span>
          <span data-ttu-id="a0fd0-642">Der Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-642">The return value indicates whether the conversion succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="a0fd0-643">
            <see langword="true" />, wenn der <paramref name="value" />-Parameter erfolgreich konvertiert wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-643">
              <see langword="true" /> if the <paramref name="value" /> parameter was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a0fd0-644"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> ist identisch mit der <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> -Methode, außer dass eine Ausnahme auszulösen, es gibt `false` , wenn die Konvertierung schlägt fehl.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-644"><xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> is identical to the <xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29> method, except that instead of throwing an exception, it returns `false` if the conversion fails.</span></span> <span data-ttu-id="a0fd0-645">Er wird für die Ausnahmebehandlung beim Analysieren der Zeichenfolgendarstellung eines Enumerationswerts überflüssig.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-645">It eliminates the need for exception handling when parsing the string representation of an enumeration value.</span></span>  
  
 <span data-ttu-id="a0fd0-646">Die `value` Parameter enthält eine Zeichenfolgendarstellung des zugrunde liegenden Wert oder eine benannte Konstante eines Enumerationsmembers oder eine Liste von benannten Konstanten oder zugrunde liegenden Werte durch Kommas (,) getrennt.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-646">The `value` parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</span></span> <span data-ttu-id="a0fd0-647">Wenn `value` enthält mehrere benannte Konstanten oder Werte, eine oder mehrere Leerzeichen vor oder nach einem einzelnen Wert, den Namen oder den Komma in `value`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-647">If `value` includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in `value`.</span></span> <span data-ttu-id="a0fd0-648">Wenn `value` ist eine Liste, `result` reflektiert den Wert der angegebenen Namen oder die zugrunde liegenden Werte, die mit einer bitweisen Kombination `OR` Vorgang.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-648">If `value` is a list, `result` reflects the value of the specified names or underlying values combined with a bitwise `OR` operation.</span></span> <span data-ttu-id="a0fd0-649">Wenn `value` ist die Zeichenfolgendarstellung des Namens der einem Enumerationswert entspricht, beim Vergleich von `value` mit Enumeration Namen richtet sich nach der `ignoreCase` Parameter.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-649">If `value` is the string representation of the name of an enumeration value, the comparison of `value` with enumeration names depends on the `ignoreCase` parameter.</span></span> <span data-ttu-id="a0fd0-650">Wenn `true`, beim Vergleich wird die Groß-/Kleinschreibung; Wenn `false`, Groß-/Kleinschreibung beachtet wird.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-650">If `true`, the comparison is case-insensitive; if `false`, it is case-sensitive.</span></span>  
  
 <span data-ttu-id="a0fd0-651">Wenn `value` ist ein Name, die nicht mit einer benannten Konstante der entsprechen `TEnum`, gibt die Methode `false`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-651">If `value` is a name that does not correspond to a named constant of `TEnum`, the method returns `false`.</span></span> <span data-ttu-id="a0fd0-652">Wenn `value` die Darstellung der Zeichenfolge eine ganze Zahl, die nicht von einen zugrunde liegenden Wert darstellt der `TEnum` -Enumeration, der Methodenrückgabe Enumerationsmember, deren zugrunde liegenden Wert `value` in einen ganzzahligen Typ konvertiert.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-652">If `value` is the string representation of an integer that does not represent an underlying value of the `TEnum` enumeration, the method returns an enumeration member whose underlying value is `value` converted to an integral type.</span></span> <span data-ttu-id="a0fd0-653">Wenn dieses Verhalten nicht erwünscht ist, rufen Sie die <xref:System.Enum.IsDefined%2A> Methode, um sicherzustellen, dass eine bestimmte Zeichenfolge-Darstellung einer ganzen Zahl tatsächlich ein Mitglied ist `TEnum`.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-653">If this behavior is undesirable, call the <xref:System.Enum.IsDefined%2A> method to ensure that a particular string representation of an integer is actually a member of `TEnum`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a0fd0-654">Das folgende Beispiel definiert eine `Colors` -Enumeration, ruft der <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> -Methode zum Konvertieren von Zeichenfolgen in ihre entsprechenden Enumerationswerte und ruft die <xref:System.Enum.IsDefined%2A> Methode, um sicherzustellen, dass bestimmte ganzzahlige Werte zugrunde liegt, werden Werte in die `Colors` Enumeration.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-654">The following example defines a `Colors` enumeration, calls the <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method to convert strings to their corresponding enumeration values, and calls the <xref:System.Enum.IsDefined%2A> method to ensure that particular integral values are underlying values in the `Colors` enumeration.</span></span> <span data-ttu-id="a0fd0-655">Die <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> Methode verwendet die Groß-und Kleinschreibung unterschieden beim konvertiert der zeichenfolgendarstellungen der Konstanten, mit denen ihre entsprechenden Enumerationswerte mit dem Namen.</span><span class="sxs-lookup"><span data-stu-id="a0fd0-655">The <xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29> method uses case-insensitive comparison when trying to convert the string representations of named constants to their equivalent enumeration values.</span></span>  
  
 [!code-csharp[System.Enum.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.enum.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.Enum.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.enum.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a0fd0-656">
            <paramref name="TEnum" /> ist kein Enumerationstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="a0fd0-656">
              <paramref name="TEnum" /> is not an enumeration type.</span>
          </span>
        </exception>
        <altmember cref="M:System.Enum.Parse(System.Type,System.String,System.Boolean)" />
      </Docs>
    </Member>
  </Members>
</Type>