<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Enum.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">73cd4428-9abd-4836-b1ef-ba70fe2e0b72035968e68df0e7ddb34a41fa7d0b2ad1858c6289.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">035968e68df0e7ddb34a41fa7d0b2ad1858c6289</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Enum">
          <source>Provides the base class for enumerations.</source>
          <target state="translated">Stellt die Basisklasse für Enumerationen bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>An enumeration is a set of named constants whose underlying type is any integral type.</source>
          <target state="translated">Eine Enumeration ist ein Satz von benannten Konstanten, deren zugrunde liegenden Typ jedes beliebigen ganzzahligen Typs ist.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>If no underlying type is explicitly declared, <ph id="ph1">&lt;xref:System.Int32&gt;</ph> is used.</source>
          <target state="translated">Wenn kein zugrunde liegender Typ explizit deklariert wird, <ph id="ph1">&lt;xref:System.Int32&gt;</ph> verwendet wird.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source><ph id="ph1">&lt;xref:System.Enum&gt;</ph> is the base class for all enumerations in the .NET Framework.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Enum&gt;</ph> ist die Basisklasse für alle Enumerationen in .NET Framework.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Enumeration types are defined by the <ph id="ph1">`enum`</ph> keyword in C# and the <ph id="ph2">`Enum`</ph>...<ph id="ph3">`End Enum`</ph> construct in Visual Basic.</source>
          <target state="translated">Enumerationstypen werden definiert, indem Sie die <ph id="ph1">`enum`</ph> -Schlüsselwort in c# und die <ph id="ph2">`Enum`</ph>... <ph id="ph3">`End Enum`</ph> in Visual Basic erstellen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source><ph id="ph1">&lt;xref:System.Enum&gt;</ph> provides methods for comparing instances of this class, converting the value of an instance to its string representation, converting the string representation of a number to an instance of this class, and creating an instance of a specified enumeration and value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Enum&gt;</ph> Stellt Methoden zum Vergleichen von Instanzen dieser Klasse, Konvertieren des Werts einer Instanz in die Zeichenfolgendarstellung, konvertieren die angegebene Zeichenfolgendarstellung einer Zahl in eine Instanz dieser Klasse, und erstellen eine Instanz einer angegebenen Enumeration und Wert.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>You can also treat an enumeration as a bit field.</source>
          <target state="translated">Sie können auch eine Enumeration als Bitfeld behandelt werden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>For more information, see the <bpt id="p1">[</bpt>Non-Exclusive Members and the Flags Attribute<ept id="p1">](#Flags)</ept> section and the <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> topic.</source>
          <target state="translated">Weitere Informationen finden Sie unter der <bpt id="p1">[</bpt>Nichtexklusiv Mitglieder und das Attribut Flags<ept id="p1">](#Flags)</ept> Abschnitt und der <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> Thema.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>In this topic:</source>
          <target state="translated">In diesem Thema:</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source><bpt id="p1">[</bpt>Creating an enumeration type<ept id="p1">](#Creating)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Erstellen einen Enumerationstyp<ept id="p1">](#Creating)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source><bpt id="p1">[</bpt>Instantiating an enumeration type<ept id="p1">](#Instantiating)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Instanziieren einen Enumerationstyp<ept id="p1">](#Instantiating)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source><bpt id="p1">[</bpt>Enumeration best practices<ept id="p1">](#BestPractices)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Enumeration bewährte Methoden<ept id="p1">](#BestPractices)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source><bpt id="p1">[</bpt>Performing operations with enumerations<ept id="p1">](#Operations)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Ausführen von Vorgängen mit Enumerationen<ept id="p1">](#Operations)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source><bpt id="p1">[</bpt>Performing conversions<ept id="p1">](#conversions)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Durchführen von Konvertierungen<ept id="p1">](#conversions)</ept></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source><bpt id="p1">[</bpt>Parsing enumeration values<ept id="p1">](#parsing)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Analysieren von Enumerationswerte<ept id="p1">](#parsing)</ept></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source><bpt id="p1">[</bpt>Formatting enumeration values<ept id="p1">](#formatting)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Formatieren von Enumerationswerten<ept id="p1">](#formatting)</ept></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source><bpt id="p1">[</bpt>Iterating enumeration members<ept id="p1">](#iterating)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Durchlaufen von Enumerationsmembern<ept id="p1">](#iterating)</ept></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source><bpt id="p1">[</bpt>Non-exclusive members and the Flags attribute<ept id="p1">](#Flags)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Nichtexklusiv Member und den Flags-Attribut<ept id="p1">](#Flags)</ept></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source><bpt id="p1">[</bpt>Adding enumeration methods<ept id="p1">](#methods)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Hinzufügen von Enumerationsmethoden<ept id="p1">](#methods)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Creating an enumeration type</source>
          <target state="translated">Erstellen einen Enumerationstyp</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Programming languages typically provide syntax to declare an enumeration that consists of a set of named constants and their values.</source>
          <target state="translated">Programmiersprachen bieten in der Regel die Syntax zum Deklarieren einer Enumeration, die der einen Satz von benannten Konstanten und deren Werten besteht.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following example illustrates the syntax used by C# and Visual Basic to define an enumeration.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Syntax von c# und Visual Basic verwendet werden, um eine Enumeration zu definieren.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>It creates an enumeration named <ph id="ph1">`ArrivalStatus`</ph> that has three members: <ph id="ph2">`ArrivalStatus.Early`</ph>, <ph id="ph3">`ArrivalStatus.OnTime`</ph>, and <ph id="ph4">`ArrivalStatus.Late`</ph>.</source>
          <target state="translated">Erstellt eine Enumeration namens <ph id="ph1">`ArrivalStatus`</ph> , besitzt drei Member: <ph id="ph2">`ArrivalStatus.Early`</ph>, <ph id="ph3">`ArrivalStatus.OnTime`</ph>, und <ph id="ph4">`ArrivalStatus.Late`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Note that in both cases, the enumeration does not explicitly inherit from <ph id="ph1">&lt;xref:System.Enum&gt;</ph>; the inheritance relationship is handled implicitly by the compiler.</source>
          <target state="translated">Beachten Sie, dass in beiden Fällen wird die Enumeration nicht explizit von erbt <ph id="ph1">&lt;xref:System.Enum&gt;</ph>; die vererbungsbeziehung wird vom Compiler implizit behandelt.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>You should never create an enumeration type whose underlying type is non-integral or <ph id="ph1">&lt;xref:System.Char&gt;</ph>.</source>
          <target state="translated">Erstellen Sie nie einen Enumerationstyp, dessen zugrunde liegender Typ nicht ganzzahligen ist, oder <ph id="ph1">&lt;xref:System.Char&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Although you can create such an enumeration type by using reflection, method calls that use the resulting type are unreliable and may also throw additional exceptions.</source>
          <target state="translated">Obwohl solche einen Enumerationstyp mithilfe der Reflektion erstellt werden kann, wird Methodenaufrufe, die den resultierenden Typ zu verwenden sind unzuverlässig und möglicherweise auch zusätzliche Ausnahmen auslösen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Instantiating an enumeration type</source>
          <target state="translated">Instanziieren einen Enumerationstyp</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>You can instantiate an enumeration type just as you instantiate any other value type: by declaring a variable and assigning one of the enumeration's constants to it.</source>
          <target state="translated">Sie können einen Enumerationstyp instanziieren, so wie Sie einem beliebigen anderen Werttyp instanziieren: durch Deklarieren einer Variablen und eine der Konstanten für die Enumeration zuweisen.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following example instantiates an <ph id="ph1">`ArrivalStatus`</ph> whose value is <ph id="ph2">`ArrivalStatus.OnTime`</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird ein <ph id="ph1">`ArrivalStatus`</ph> , dessen Wert <ph id="ph2">`ArrivalStatus.OnTime`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>You can also instantiate an enumeration value in the following ways:</source>
          <target state="translated">Sie können auch einen Enumerationswert auf folgende Weise instanziieren:</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>By using a particular programming language's features to cast (as in C#) or convert (as in Visual Basic) an integer value to an enumeration value.</source>
          <target state="translated">Mithilfe von einer bestimmten Programmiersprache Funktionen umgewandelt (in c#) oder konvertieren Sie einen ganzzahligen Wert (wie in Visual Basic) aus, in einem Enumerationswert entspricht.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following example creates an <ph id="ph1">`ArrivalStatus`</ph> object whose value is <ph id="ph2">`ArrivalStatus.Early`</ph> in this way.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">`ArrivalStatus`</ph> Objekt, dessen Wert <ph id="ph2">`ArrivalStatus.Early`</ph> auf diese Weise.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>By calling its implicit default constructor.</source>
          <target state="translated">Durch Aufrufen seiner impliziten Standardkonstruktor.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>As the following example shows, in this case the underlying value of the enumeration instance is 0.</source>
          <target state="translated">Wie im folgenden Beispiel wird gezeigt, ist in diesem Fall der zugrunde liegenden Wert der Enumerationsinstanz 0.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>However, this is not necessarily the value of a valid constant in the enumeration.</source>
          <target state="translated">Dies ist jedoch nicht unbedingt den Wert einer gültigen Konstante in der Enumeration.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>By calling the <ph id="ph1">&lt;xref:System.Enum.Parse%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Enum.TryParse%2A&gt;</ph> method to parse a string that contains the name of a constant in the enumeration.</source>
          <target state="translated">Durch Aufrufen der <ph id="ph1">&lt;xref:System.Enum.Parse%2A&gt;</ph> oder <ph id="ph2">&lt;xref:System.Enum.TryParse%2A&gt;</ph> Methode, um eine Zeichenfolge zu analysieren, die den Namen einer Konstante in der Enumeration enthält.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>For more information, see the <bpt id="p1">[</bpt>Parsing Enumeration Values<ept id="p1">](#parsing)</ept> section.</source>
          <target state="translated">Weitere Informationen finden Sie unter der <bpt id="p1">[</bpt>Enumerationswerte Analyse<ept id="p1">](#parsing)</ept> Abschnitt.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>By calling the <ph id="ph1">&lt;xref:System.Enum.ToObject%2A&gt;</ph> method to convert an integral value to an enumeration type.</source>
          <target state="translated">Durch Aufrufen der <ph id="ph1">&lt;xref:System.Enum.ToObject%2A&gt;</ph> Methode, um einen ganzzahligen Wert in einen Enumerationstyp konvertieren.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>For more information, see the <bpt id="p1">[</bpt>Performing Conversions<ept id="p1">](#conversions)</ept> section.</source>
          <target state="translated">Weitere Informationen finden Sie unter der <bpt id="p1">[</bpt>Konvertierungen ausführen<ept id="p1">](#conversions)</ept> Abschnitt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Enumeration best practices</source>
          <target state="translated">Enumeration bewährte Methoden</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>We recommend that you use the following best practices when you define enumeration types:</source>
          <target state="translated">Es wird empfohlen, dass Sie die folgenden bewährten Methoden verwenden, wenn Sie Enumerationstypen definieren:</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>If you have not defined an enumeration member whose value is 0, consider creating a <ph id="ph1">`None`</ph> enumerated constant.</source>
          <target state="translated">Wenn Sie kein Member einer Enumeration definiert haben, dessen Wert 0 ist, sollten Sie erstellen eine <ph id="ph1">`None`</ph> Enumerationskonstante.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>By default, the memory used for the enumeration is initialized to zero by the common language runtime.</source>
          <target state="translated">Standardmäßig wird der für die Enumeration verwendete Speicher mit 0 (null) initialisiert von der common Language Runtime.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Consequently, if you do not define a constant whose value is zero, the enumeration will contain an illegal value when it is created.</source>
          <target state="translated">Daher, wenn Sie keine Konstante definieren, deren Wert 0 (null) ist, die Enumeration einen unzulässigen Wert enthält während der Erstellung.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>If there is an obvious default case that your application has to represent, consider using an enumerated constant whose value is zero to represent it.</source>
          <target state="translated">Es ist ein offensichtliche Standardfall, die Ihre Anwendung darstellen, sollten eine Enumerationskonstante ist konstant, deren Wert 0 (null) für die Darstellung.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>If there is no default case, consider using an enumerated constant whose value is zero to specify the case that is not represented by any of the other enumerated constants.</source>
          <target state="translated">Wenn es keine Standardfall ist, sollten erwägen Sie, eine Enumerationskonstante, dessen Wert 0 (null) ist, um die Groß-/Kleinschreibung angeben, der nicht, von einer anderen Enumerationskonstanten zu verwenden.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Do not specify enumerated constants that are reserved for future use.</source>
          <target state="translated">Geben Sie keine Enumerationskonstanten, die für die zukünftige Verwendung reserviert sind.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>When you define a method or property that takes an enumerated constant as a value, consider validating the value.</source>
          <target state="translated">Wenn Sie definieren eine Methode oder Eigenschaft, die eine Enumerationskonstante als Wert akzeptiert, sollten Sie überprüfen des Werts.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The reason is that you can cast a numeric value to the enumeration type even if that numeric value is not defined in the enumeration.</source>
          <target state="translated">Der Grund ist, dass Sie einen numerischen Wert in den Enumerationstyp umwandeln können, selbst wenn diese numerische Wert in der Enumeration nicht definiert ist.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Additional best practices for enumeration types whose constants are bit fields are listed in the <bpt id="p1">[</bpt>Non-Exclusive Members and the Flags Attribute<ept id="p1">](#Flags)</ept> section.</source>
          <target state="translated">Best Practices für Enumerationstypen, deren Konstanten Bitfelder sind werden aufgeführt, der <bpt id="p1">[</bpt>Nichtexklusiv Member und den Flags-Attribut<ept id="p1">](#Flags)</ept> Abschnitt.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Performing operations with enumerations</source>
          <target state="translated">Ausführen von Vorgängen mit Enumerationen</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>You cannot define new methods when you are creating an enumeration.</source>
          <target state="translated">Sie können keine neue Methoden definieren, bei der Erstellung einer Enumeration.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>However, an enumeration type inherits a complete set of static and instance methods from the <ph id="ph1">&lt;xref:System.Enum&gt;</ph> class.</source>
          <target state="translated">Ein Enumerationstyp allerdings erbt, einen vollständigen Satz von statischen Methoden und Instanzenmethoden von der <ph id="ph1">&lt;xref:System.Enum&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following sections survey most of these methods, in addition to several other methods that are commonly used when working with enumeration values.</source>
          <target state="translated">In den folgenden Abschnitten Umfrage die meisten dieser Methoden, zusätzlich zu anderen Methoden, die beim Arbeiten mit Enumerationswerten häufig verwendet werden.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Performing conversions</source>
          <target state="translated">Durchführen von Konvertierungen</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>You can convert between an enumeration member and its underlying type by using a casting (in C#) or conversion (in Visual Basic) operator.</source>
          <target state="translated">Sie können mithilfe einer Umwandlung (in c#) oder einen Konvertierungsoperator (in Visual Basic) zwischen Enumerationsmember und dessen zugrunde liegendem Typ konvertieren.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following example uses casting or conversion operators to perform conversions both from an integer to an enumeration value and from an enumeration value to an integer.</source>
          <target state="translated">Im folgenden Beispiel wird die Umwandlung oder Konvertierung Operatoren zum Durchführen von Konvertierungen aus eine ganze Zahl und einem Enumerationswert entspricht und aus einem Enumerationswert entspricht, eine ganze Zahl.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The <ph id="ph1">&lt;xref:System.Enum&gt;</ph> class also includes a <ph id="ph2">&lt;xref:System.Enum.ToObject%2A&gt;</ph> method that converts a value of any integral type to an enumeration value.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum&gt;</ph> Klasse enthält auch eine <ph id="ph2">&lt;xref:System.Enum.ToObject%2A&gt;</ph> Methode, die einen Wert jedes beliebigen ganzzahligen Typs in einen Enumerationswert konvertiert.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29&gt;</ph> method to convert an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> to an <ph id="ph3">`ArrivalStatus`</ph> value.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29&gt;</ph> -Methode zum Konvertieren einer <ph id="ph2">&lt;xref:System.Int32&gt;</ph> auf eine <ph id="ph3">`ArrivalStatus`</ph> Wert.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Note that, because the <ph id="ph1">&lt;xref:System.Enum.ToObject%2A&gt;</ph> returns a value of type <ph id="ph2">&lt;xref:System.Object&gt;</ph>, the use of a casting or conversion operator may still be necessary to cast the object to the enumeration type.</source>
          <target state="translated">Beachten Sie Folgendes: Da die <ph id="ph1">&lt;xref:System.Enum.ToObject%2A&gt;</ph> gibt einen Wert vom Typ <ph id="ph2">&lt;xref:System.Object&gt;</ph>, die Verwendung eines Operators Umwandlung oder Konvertierung kann dennoch erforderlich sein, das Objekt in den Enumerationstyp umgewandelt.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>When converting an integer to an enumeration value, it is possible to assign a value that is not actually a member of the enumeration.</source>
          <target state="translated">Wenn eine ganze Zahl in einen Enumerationswert konvertiert wird, ist es möglich, einen Wert zuzuweisen, der nicht tatsächlich ein Member der Enumeration ist.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>To prevent this, you can pass the integer to the <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method before performing the conversion.</source>
          <target state="translated">Um dies zu verhindern, können Sie die ganze Zahl, übergeben die <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode vor der Konvertierung.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following example uses this method to determine whether the elements in an array of integer values can be converted to <ph id="ph1">`ArrivalStatus`</ph> values.</source>
          <target state="translated">Im folgenden Beispiel wird diese Methode, um zu bestimmen, ob die Elemente in einem Array von ganzzahligen Werten in konvertiert werden können <ph id="ph1">`ArrivalStatus`</ph> Werte.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Although the <ph id="ph1">&lt;xref:System.Enum&gt;</ph> class provides explicit interface implementations of the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface for converting from an enumeration value to an integral type, you should use the methods of the <ph id="ph3">&lt;xref:System.Convert&gt;</ph> class, such as <ph id="ph4">&lt;xref:System.Convert.ToInt32%2A&gt;</ph>, to perform these conversions.</source>
          <target state="translated">Obwohl die <ph id="ph1">&lt;xref:System.Enum&gt;</ph> Klasse bietet explizite Implementierungen von der <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> Schnittstelle zu einem Enumerationswert entspricht zu einem ganzzahligen Typ konvertieren, verwenden Sie die Methoden der der <ph id="ph3">&lt;xref:System.Convert&gt;</ph> Klasse, z. B. <ph id="ph4">&lt;xref:System.Convert.ToInt32%2A&gt;</ph>in Führen Sie diese Konvertierungen.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following example illustrates how you can use the <ph id="ph1">&lt;xref:System.Enum.GetUnderlyingType%2A&gt;</ph> method along with the <ph id="ph2">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method to convert an enumeration value to its underlying type.</source>
          <target state="translated">Im folgende Beispiel wird veranschaulicht, wie Sie die <ph id="ph1">&lt;xref:System.Enum.GetUnderlyingType%2A&gt;</ph> Methode zusammen mit der <ph id="ph2">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> Methode, um einem Enumerationswert entspricht, dessen zugrunde liegendem Typ zu konvertieren.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Note that this example does not require the underlying type of the enumeration to be known at compile time.</source>
          <target state="translated">Beachten Sie, dass in diesem Beispiel wird den zugrunde liegende Typ der Enumeration zum Zeitpunkt der Kompilierung bekannt sein nicht erforderlich ist.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Parsing enumeration values</source>
          <target state="translated">Analysieren von Enumerationswerte</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The <ph id="ph1">&lt;xref:System.Enum.Parse%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Enum.TryParse%2A&gt;</ph> methods allow you to convert the string representation of an enumeration value to that value.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.Parse%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Enum.TryParse%2A&gt;</ph> Methoden ermöglichen es Ihnen, die Zeichenfolgendarstellung eines Enumerationswerts in diesen Wert zu konvertieren.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The string representation can be either the name or the underlying value of an enumeration constant.</source>
          <target state="translated">Die Zeichenfolgendarstellung für möglich den Namen oder den zugrunde liegenden Wert einer Enumerationskonstante.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Note that the parsing methods will successfully convert string representations of numbers that are not members of a particular enumeration if the strings can be converted to a value of the enumeration's underlying type.</source>
          <target state="translated">Beachten Sie, dass es sich bei die Analysemethoden erfolgreich zeichenfolgendarstellungen Zahlen konvertiert, die nicht Mitglieder einer bestimmten Enumeration sind, wenn die Zeichenfolgen in einen Wert des zugrunde liegenden Enumerationstyp konvertiert werden können.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>To prevent this, the <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method can be called to ensure that the result of the parsing method is a valid enumeration value.</source>
          <target state="translated">Damit dies verhindert die <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode kann aufgerufen werden, um sicherzustellen, dass das Ergebnis als Analysemethode gültiger Enumerationswert ist.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The example illustrates this approach and demonstrates calls to both the <ph id="ph1">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> and <ph id="ph2">&lt;xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType&gt;</ph> methods.</source>
          <target state="translated">Im Beispiel veranschaulicht diese Vorgehensweise und veranschaulicht beide Aufrufe der <ph id="ph1">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> und <ph id="ph2">&lt;xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29?displayProperty=nameWithType&gt;</ph> Methoden.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Note that the non-generic parsing method returns an object that you may have to cast (in C#) or convert (in Visual Basic) to the appropriate enumeration type.</source>
          <target state="translated">Beachten Sie, dass die Analysemethode nichtgenerischen ein Objekt, die Sie möglicherweise umgewandelt (in c#) oder zurückgibt (in Visual Basic) in den entsprechenden Enumerationstyp konvertieren.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Formatting enumeration values</source>
          <target state="translated">Formatieren von Enumerationswerten</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>You can convert enumeration values to their string representations by calling the static <ph id="ph1">&lt;xref:System.Enum.Format%2A&gt;</ph> method, as well as the overloads of the instance <ph id="ph2">&lt;xref:System.Enum.ToString%2A&gt;</ph> method.</source>
          <target state="translated">Sie können ihre zeichenfolgendarstellungen Enumerationswerte konvertieren, durch Aufrufen der statischen <ph id="ph1">&lt;xref:System.Enum.Format%2A&gt;</ph> Methode als auch die Überladungen der Instanz <ph id="ph2">&lt;xref:System.Enum.ToString%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>You can use a format string to control the precise way in which an enumeration value is represented as a string.</source>
          <target state="translated">Sie können eine Formatzeichenfolge verwenden, um genau zu steuern, in der ein Enumerationswert als Zeichenfolge dargestellt wird.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>For more information, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following example uses each of the supported enumeration format strings ("G" or "g", "D" or "d", "X" or "x", and "F" or "f" ) to convert a member of the <ph id="ph1">`ArrivalStatus`</ph> enumeration to its string representations.</source>
          <target state="translated">Im folgenden Beispiel wird jeweils die unterstützten Enumerationsformatzeichenfolgen ("G" oder "g", "D" oder "d", "X" oder "X", und "F" oder "f"), konvertieren Sie ein Mitglied der <ph id="ph1">`ArrivalStatus`</ph> die zeichenfolgendarstellungen-Enumeration.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Iterating enumeration members</source>
          <target state="translated">Durchlaufen von Enumerationsmembern</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The <ph id="ph1">&lt;xref:System.Enum&gt;</ph> type does not implement the <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> or <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> interface, which would enable you to iterate members of a collection by using a <ph id="ph4">`foreach`</ph> (in C#) or <ph id="ph5">`For Each`</ph> (in Visual Basic) construct.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum&gt;</ph> Typ implementiert nicht die <ph id="ph2">&lt;xref:System.Collections.IEnumerable&gt;</ph> oder <ph id="ph3">&lt;xref:System.Collections.Generic.IEnumerable%601&gt;</ph> -Schnittstelle, die Mitglieder einer Sammlung mit durchlaufen ermöglichen würden eine <ph id="ph4">`foreach`</ph> (in c#) oder <ph id="ph5">`For Each`</ph> (in Visual Basic) zu erstellen.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>However, you can enumerate members in either of two ways.</source>
          <target state="translated">Allerdings können Sie Elemente in zwei Arten aufzählen.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>You can call the <ph id="ph1">&lt;xref:System.Enum.GetNames%2A&gt;</ph> method to retrieve a string array containing the names of the enumeration members.</source>
          <target state="translated">Sie erreichen die <ph id="ph1">&lt;xref:System.Enum.GetNames%2A&gt;</ph> Methode, um ein Zeichenfolgenarray mit den Namen der Enumerationsmember abzurufen.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Next, for each element of the string array, you can call the <ph id="ph1">&lt;xref:System.Enum.Parse%2A&gt;</ph> method to convert the string to its equivalent enumeration value.</source>
          <target state="translated">Für jedes Element des Zeichenfolgenarrays, Sie können rufen Sie als Nächstes die <ph id="ph1">&lt;xref:System.Enum.Parse%2A&gt;</ph> Methode zum Konvertieren der Zeichenfolge in den entsprechenden Enumerationswert.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following example illustrates this approach.</source>
          <target state="translated">Dieser Ansatz wird anhand des folgenden Beispiels veranschaulicht.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>You can call the <ph id="ph1">&lt;xref:System.Enum.GetValues%2A&gt;</ph> method to retrieve an array that contains the underlying values in the enumeration.</source>
          <target state="translated">Sie erreichen die <ph id="ph1">&lt;xref:System.Enum.GetValues%2A&gt;</ph> Methode zum Abrufen eines Arrays, die die zugrunde liegende enthält Werte in der Enumeration.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Next, for each element of the array, you can call the <ph id="ph1">&lt;xref:System.Enum.ToObject%2A&gt;</ph> method to convert the integer to its equivalent enumeration value.</source>
          <target state="translated">Für jedes Element des Arrays, Sie können rufen Sie als Nächstes die <ph id="ph1">&lt;xref:System.Enum.ToObject%2A&gt;</ph> Methode, die ganze Zahl in den entsprechenden Enumerationswert zu konvertieren.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following example illustrates this approach.</source>
          <target state="translated">Dieser Ansatz wird anhand des folgenden Beispiels veranschaulicht.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Non-exclusive members and the Flags attribute</source>
          <target state="translated">Nichtexklusiv Member und den Flags-Attribut</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>One common use of an enumeration is to represent a set of mutually exclusive values.</source>
          <target state="translated">Eine übliche Verwendung einer Enumeration ist einen Satz von sich gegenseitig ausschließende Werte darzustellen.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>For example, an <ph id="ph1">`ArrivalStatus`</ph> instance can have a value of <ph id="ph2">`Early`</ph>, <ph id="ph3">`OnTime`</ph>, or <ph id="ph4">`Late`</ph>.</source>
          <target state="translated">Angenommen, ein <ph id="ph1">`ArrivalStatus`</ph> Instanz kann den Wert des haben <ph id="ph2">`Early`</ph>, <ph id="ph3">`OnTime`</ph>, oder <ph id="ph4">`Late`</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>It makes no sense for the value of an <ph id="ph1">`ArrivalStatus`</ph> instance to reflect more than one enumeration constant.</source>
          <target state="translated">Es ist nicht sinnvoll, für den Wert des ein <ph id="ph1">`ArrivalStatus`</ph> Instanz mehrere-Enumerationskonstante widerspiegeln.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>In other cases, however, the value of an enumeration object can include multiple enumeration members, and each member represents a bit field in the enumeration value.</source>
          <target state="translated">In anderen Fällen sollten Sie allerdings den Wert eines Enumerationsobjekts kann mehrere Enumerationsmember einzuschließen und jedes Element stellt ein Bitfeld in die Enumerationswert.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> attribute can be used to indicate that the enumeration consists of bit fields.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> Attribut kann verwendet werden, um anzugeben, dass die Enumeration von Bitfeldern besteht aus.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>For example, an enumeration named <ph id="ph1">`Pets`</ph> might be used to indicate the kinds of pets in a household.</source>
          <target state="translated">Angenommen, eine Enumeration, die mit dem Namen <ph id="ph1">`Pets`</ph> kann verwendet werden, um die Arten von Haustieren an, in einen Kundenhaushalt angeben.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>It can be defined as follows.</source>
          <target state="translated">Sie können wie folgt definiert werden.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The <ph id="ph1">`Pets`</ph> enumeration can then be used as shown in the following example.</source>
          <target state="translated">Die <ph id="ph1">`Pets`</ph> Enumeration kann dann verwendet werden, wie im folgenden Beispiel gezeigt.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following best practices should be used when defining a bitwise enumeration and applying the <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> attribute.</source>
          <target state="translated">Die folgenden bewährten Methoden sollte verwendet werden, wenn Sie ein bitweises definieren Enumeration und Anwenden der <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> Attribut.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Use the <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> custom attribute for an enumeration only if a bitwise operation (AND, OR, EXCLUSIVE OR) is to be performed on a numeric value.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> benutzerdefiniertes Attribut für eine Enumeration, die nur, wenn eine bitweise Operation (AND, OR, exklusive oder) für einen numerischen Wert ausgeführt werden soll.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Define enumeration constants in powers of two, that is, 1, 2, 4, 8, and so on.</source>
          <target state="translated">Definieren Sie Enumerationskonstanten in Potenzen von 2, d. h. 1, 2, 4, 8 und So weiter.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>This means the individual flags in combined enumeration constants do not overlap.</source>
          <target state="translated">Dies bedeutet, dass die einzelnen Flags in kombinierten Enumerationskonstanten nicht überschneiden.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Consider creating an enumerated constant for commonly used flag combinations.</source>
          <target state="translated">Estellen Sie eine Enumerationskonstante für häufig verwendete Flagkombinationen aus.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>For example, if you have an enumeration used for file I/O operations that contains the enumerated constants <ph id="ph1">`Read = 1`</ph> and <ph id="ph2">`Write = 2`</ph>, consider creating the enumerated constant <ph id="ph3">`ReadWrite = Read OR Write`</ph>, which combines the <ph id="ph4">`Read`</ph> and <ph id="ph5">`Write`</ph> flags.</source>
          <target state="translated">Beispielsweise ist eine Enumeration für-e/a-Dateivorgänge verwendet, enthält der Enumerationskonstanten <ph id="ph1">`Read = 1`</ph> und <ph id="ph2">`Write = 2`</ph>, sollten Sie die Enumerationskonstante erstellen <ph id="ph3">`ReadWrite = Read OR Write`</ph>, kombiniert die <ph id="ph4">`Read`</ph> und <ph id="ph5">`Write`</ph> Flags.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>In addition, the bitwise OR operation used to combine the flags might be considered an advanced concept in some circumstances that should not be required for simple tasks.</source>
          <target state="translated">Darüber hinaus kann die bitweise OR-Operation zum Kombinieren der Flags einen erweiterten Ansatz in einigen Fällen als angesehen werden, die nicht bei einfachen Aufgaben erforderlich sein sollte.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Use caution if you define a negative number as a flag enumerated constant because many flag positions might be set to 1, which might make your code confusing and encourage coding errors.</source>
          <target state="translated">Verwenden Sie vorsichtig vor, wenn Sie eine negative Zahl als eine Flagenumerationskonstante definieren, da viele Flagpositionen auf 1 festgelegt werden möglicherweise die Lesbarkeit Ihres Codes erschweren verwirrend und empfehlen Codierungsfehler.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>A convenient way to test whether a flag is set in a numeric value is to call the instance <ph id="ph1">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> method, as shown in the following example.</source>
          <target state="translated">Eine einfache Möglichkeit zum Überprüfen, ob ein Flag in einen numerischen Wert festgelegt ist, rufen Sie die Instanz ist <ph id="ph1">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> Methode, wie im folgenden Beispiel gezeigt.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>It is equivalent to performing a bitwise AND operation between the numeric value and the flag enumerated constant, which sets all bits in the numeric value to zero that do not correspond to the flag, and then testing whether the result of that operation is equal to the flag enumerated constant.</source>
          <target state="translated">Dies ist äquivalent zum Ausführen einer bitweisen AND-Operation zwischen den numerischen Wert und die Kennzeichen Enumerationskonstante, die legt alle Bits in den numerischen Wert 0 (null), die das Flag nicht entsprechen, und klicken Sie dann testen, ob das Ergebnis dieses Vorgangs entspricht der Flag-Enumerationskonstante.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>This is illustrated in the following example.</source>
          <target state="translated">Dies wird im folgenden Beispiel illustriert.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Use <ph id="ph1">`None`</ph> as the name of the flag enumerated constant whose value is zero.</source>
          <target state="translated">Verwendung <ph id="ph1">`None`</ph> wie der Namen des Flags Konstante aufgelistet, deren Wert 0 (null wird).</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>You cannot use the <ph id="ph1">`None`</ph> enumerated constant in a bitwise AND operation to test for a flag because the result is always zero.</source>
          <target state="translated">Sie können keine der <ph id="ph1">`None`</ph> Enumerationskonstante in eine bitweise AND-Operation für ein Flag zu testen, da das Ergebnis immer 0 (null) ist.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>However, you can perform a logical, not a bitwise, comparison between the numeric value and the <ph id="ph1">`None`</ph> enumerated constant to determine whether any bits in the numeric value are set.</source>
          <target state="translated">Allerdings können Sie ein logisches ausführen keinen bitweisen Vergleich zwischen den numerischen Wert und die <ph id="ph1">`None`</ph> Enumerationskonstante, um zu bestimmen, ob alle Bits in den numerischen Wert festgelegt werden.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>This is illustrated in the following example.</source>
          <target state="translated">Dies wird im folgenden Beispiel illustriert.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Do not define an enumeration value solely to mirror the state of the enumeration itself.</source>
          <target state="translated">Definieren Sie einen Enumerationswert ausschließlich, um den Status der Enumeration selbst spiegeln nicht.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>For example, do not define an enumerated constant that merely marks the end of the enumeration.</source>
          <target state="translated">Definieren Sie z. B. keine Enumerationskonstante, die lediglich das Ende der Enumeration markiert.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>If you need to determine the last value of the enumeration, check for that value explicitly.</source>
          <target state="translated">Wenn Sie den letzten Wert der Enumeration bestimmen müssen, suchen Sie nach diesem Wert explizit.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>In addition, you can perform a range check for the first and last enumerated constant if all values within the range are valid.</source>
          <target state="translated">Darüber hinaus können Sie eine bereichsüberprüfung für die erste und letzte Enumerationskonstante ausführen, wenn alle Werte innerhalb des Bereichs gültig sind.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Adding enumeration methods</source>
          <target state="translated">Hinzufügen von Enumerationsmethoden</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>Because enumeration types are defined by language structures, such as <ph id="ph1">`enum`</ph> (C#) and <ph id="ph2">`Enum`</ph> (Visual Basic), you cannot define custom methods for an enumeration type other than those methods inherited from the <ph id="ph3">&lt;xref:System.Enum&gt;</ph> class.</source>
          <target state="translated">Da Enumerationstypen von Sprachstrukturen, z. B. definiert werden <ph id="ph1">`enum`</ph> (c#) und <ph id="ph2">`Enum`</ph> (Visual Basic), keine benutzerdefinierte Methoden für einen Enumerationstyp als von geerbten Methoden definieren die <ph id="ph3">&lt;xref:System.Enum&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>However, you can use extension methods to add functionality to a particular enumeration type.</source>
          <target state="translated">Allerdings können Sie Erweiterungsmethoden [c#], Hinzufügen von Funktionen zu einer bestimmten Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>In the following example, the <ph id="ph1">`Grades`</ph> enumeration represents the possible letter grades that a student may receive in a class.</source>
          <target state="translated">Im folgenden Beispiel stellt die <ph id="ph1">`Grades`</ph>-Enumeration die möglichen Noten in Buchstaben dar, die ein Schüler im Unterricht erhalten kann.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>An extension method named <ph id="ph1">`Passing`</ph> is added to the <ph id="ph2">`Grades`</ph> type so that each instance of that type now "knows" whether it represents a passing grade or not.</source>
          <target state="translated">Eine Erweiterungsmethode mit dem Namen <ph id="ph1">`Passing`</ph> wird dem <ph id="ph2">`Grades`</ph>-Typ hinzugefügt, sodass jede Instanz dieses Typs nun „weiß“, ob sie eine Note darstellt, mit der der Schüler bestanden hat.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The <ph id="ph1">`Extensions`</ph> class also contains a static read-write variable that defines the minimum passing grade.</source>
          <target state="translated">Die <ph id="ph1">`Extensions`</ph> -Klasse enthält auch eine statische Variable Lese-/ Schreibzugriff, die die minimale übergeben Grade definiert.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The return value of the <ph id="ph1">`Passing`</ph> extension method reflects the current value of that variable.</source>
          <target state="translated">Der Rückgabewert der <ph id="ph1">`Passing`</ph> Erweiterungsmethode gibt den aktuellen Wert der Variablen.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>The following example demonstrates using an enumeration to represent named values and another enumeration to represent named bit fields.</source>
          <target state="translated">Im folgende Beispiel veranschaulicht die Verwendung einer Enumeration zum Darstellen von benannter Werte und einer anderen Aufzählung benannte Bitfelder darstellen.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Enum">
          <source>This type is thread safe.</source>
          <target state="translated">Dieser Typ ist threadsicher.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Enum.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Enum" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Enum" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source>An object to compare, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein Vergleichsobjekt oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an indication of their relative values.</source>
          <target state="translated">Vergleicht diese Instanz mit einem angegebenen Objekt und gibt eine Angabe über das Verhältnis der entsprechenden Werte zurück.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source>A signed number that indicates the relative values of this instance and <ph id="ph1">&lt;paramref name="target" /&gt;</ph>.</source>
          <target state="translated">Eine Zahl mit Vorzeichen, die das Verhältnis zwischen dem Wert dieser Instanz und dem Wert von <ph id="ph1">&lt;paramref name="target" /&gt;</ph> angibt.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Wert</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Bedeutung</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Kleiner als 0 (null)</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The value of this instance is less than the value of <ph id="ph3">&lt;paramref name="target" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Der Wert dieser Instanz ist kleiner als der Wert von <ph id="ph3">&lt;paramref name="target" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 (null)</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The value of this instance is equal to the value of <ph id="ph3">&lt;paramref name="target" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Der Wert dieser Instanz ist gleich dem Wert von <ph id="ph3">&lt;paramref name="target" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Größer als 0 (null)</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> The value of this instance is greater than the value of <ph id="ph3">&lt;paramref name="target" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Der Wert dieser Instanz ist größer als der Wert von <ph id="ph3">&lt;paramref name="target" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.CompareTo(System.Object)">
          <source>The following example illustrates the use of <ph id="ph1">`CompareTo`</ph> in the context of <ph id="ph2">`Enum`</ph>.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung von <ph id="ph1">`CompareTo`</ph> im Kontext des <ph id="ph2">`Enum`</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="target" /&gt;</ph> and this instance are not the same type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="target" /&gt;</ph> hat nicht denselben Typ wie diese Instanz.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Enum.CompareTo(System.Object)">
          <source>This instance is not type <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.Int64" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph6">&lt;see cref="T:System.UInt16" /&gt;</ph>, <ph id="ph7">&lt;see cref="T:System.UInt32" /&gt;</ph>, or <ph id="ph8">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated">Diese Instanz ist nicht vom Typ <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Int32" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.Int64" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph6">&lt;see cref="T:System.UInt16" /&gt;</ph>, <ph id="ph7">&lt;see cref="T:System.UInt32" /&gt;</ph> oder <ph id="ph8">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Enum.Equals(System.Object)">
          <source>An object to compare with this instance, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Ein Objekt, das mit dieser Instanz verglichen werden soll, oder <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Enum.Equals(System.Object)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">Gibt einen Wert zurück, der angibt, ob diese Instanz gleich einem angegebenen Objekt ist.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Enum.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is an enumeration value of the same type and with the same underlying value as this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> ein Enumerationswert des gleichen Typs und mit dem gleichen zugrunde liegenden Wert wie diese Instanz ist, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> method overrides <ph id="ph2">&lt;xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> to define how enumeration members are evaluated for equality.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> methodenüberschreibungen <ph id="ph2">&lt;xref:System.ValueType.Equals%28System.Object%29?displayProperty=nameWithType&gt;</ph> definieren, wie Enumerationsmember Gleichheit ausgewertet werden.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Equals(System.Object)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Enum.Equals%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">&lt;xref:System.Enum.Equals%2A&gt;</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Equals(System.Object)">
          <source>The following example defines two enumeration types, <ph id="ph1">`SledDog`</ph> and <ph id="ph2">`WorkDog`</ph>.</source>
          <target state="translated">Das folgende Beispiel definiert zwei Enumerationstypen, <ph id="ph1">`SledDog`</ph> und <ph id="ph2">`WorkDog`</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Equals(System.Object)">
          <source>The <ph id="ph1">`SledDog`</ph> enumeration has two members, <ph id="ph2">`SledDog.AlaskanMalamute`</ph> and <ph id="ph3">`SledDog.Malamute`</ph>, that have the same underlying value.</source>
          <target state="translated">Die <ph id="ph1">`SledDog`</ph> Enumeration verfügt über zwei Member <ph id="ph2">`SledDog.AlaskanMalamute`</ph> und <ph id="ph3">`SledDog.Malamute`</ph>, die über den gleichen zugrunde liegenden Wert verfügen.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Equals(System.Object)">
          <source>The call to the <ph id="ph1">&lt;xref:System.Enum.Equals%2A&gt;</ph> method indicates that these values are equal because their underlying values are the same.</source>
          <target state="translated">Der Aufruf der <ph id="ph1">&lt;xref:System.Enum.Equals%2A&gt;</ph> Methode gibt an, dass diese Werte gleich sind, da die zugrunde liegenden Werte identisch sind.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Equals(System.Object)">
          <source>The <ph id="ph1">`SledDog.Malamute`</ph> and <ph id="ph2">`WorkDog.Newfoundland`</ph> members have the same underlying value, although they represent different enumeration types.</source>
          <target state="translated">Die <ph id="ph1">`SledDog.Malamute`</ph> und <ph id="ph2">`WorkDog.Newfoundland`</ph> Mitglieder besitzen den gleichen zugrunde liegenden Wert aus, obwohl sie verschiedene Enumerationstypen darstellen.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Equals(System.Object)">
          <source>A call to the <ph id="ph1">&lt;xref:System.Enum.Equals%2A&gt;</ph> method indicates that these values are not equal.</source>
          <target state="translated">Ein Aufruf der <ph id="ph1">&lt;xref:System.Enum.Equals%2A&gt;</ph> Methode gibt an, dass diese Werte nicht gleich sind.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>The enumeration type of the value to convert.</source>
          <target state="translated">Der Enumerationstyp des zu konvertierenden Werts.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>The value to convert.</source>
          <target state="translated">Der zu konvertierende Wert.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>The output format to use.</source>
          <target state="translated">Das zu verwendende Ausgabeformat.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>Converts the specified value of a specified enumerated type to its equivalent string representation according to the specified format.</source>
          <target state="translated">Konvertiert den angegebenen Wert eines angegebenen Enumerationstyps unter Berücksichtigung des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>A string representation of <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Eine Zeichenfolgendarstellung von <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>The following table shows the valid values for the <ph id="ph1">`format`</ph> parameter.</source>
          <target state="translated">Die folgende Tabelle zeigt die gültigen Werte für die <ph id="ph1">`format`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>Format</source>
          <target state="translated">Format</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>Description</source>
          <target state="translated">Beschreibung </target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>"G" or "g"</source>
          <target state="translated">"G" oder "g"</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>If <ph id="ph1">`value`</ph> is equal to a named enumerated constant, the name of that constant is returned; otherwise, the decimal equivalent of <ph id="ph2">`value`</ph> is returned.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> ist gleich ist eine benannte Enumerationskonstante, der Namen der Konstanten wird zurückgegeben, andernfalls die Dezimalzahl <ph id="ph2">`value`</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>For example, suppose the only enumerated constant is named Red, and its value is 1.</source>
          <target state="translated">Nehmen Sie beispielsweise an die einzige Enumerationskonstante heißt Rot, und ihr Wert ist 1.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>If <ph id="ph1">`value`</ph> is specified as 1, this format returns "Red".</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> 1 angegeben wird, gibt dieses Format "Red" zurück.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>However, if <ph id="ph1">`value`</ph> is specified as 2, this format returns "2".</source>
          <target state="translated">Jedoch wenn <ph id="ph1">`value`</ph> 2 angegeben wird, gibt dieses Format "2" zurück.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>If the <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> custom attribute is applied to the enumeration, <ph id="ph2">`value`</ph> is treated as a bit field that contains one or more flags that consist of one or more bits.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> benutzerdefinierte Attribut angewendet wird, auf die Enumeration <ph id="ph2">`value`</ph> so behandelt, als ein Bitfeld, das eine oder mehrere Flags enthält, die aus einem oder mehreren Bits bestehen.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>If <ph id="ph1">`value`</ph> is equal to a combination of named enumerated constants, a delimiter-separated list of the names of those constants is returned.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> heißt, das eine Kombination von entspricht Enumerationskonstanten, eine durch Trennzeichen getrennte Liste der Namen dieser Konstanten wird zurückgegeben.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source><ph id="ph1">`value`</ph> is searched for flags, going from the flag with the largest value to the smallest value.</source>
          <target state="translated"><ph id="ph1">`value`</ph> Flags, die für den Wechsel von das Flag mit dem größten Wert zum kleinsten Wert wird gesucht werden.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>For each flag that corresponds to a bit field in <ph id="ph1">`value`</ph>, the name of the constant is concatenated to the delimiter-separated list.</source>
          <target state="translated">Für jedes Flag, das kein Bitfeld in entspricht <ph id="ph1">`value`</ph>, der Namen der Konstanten, die durch Trennzeichen getrennte Liste verkettet ist.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>The value of that flag is then excluded from further consideration, and the search continues for the next flag.</source>
          <target state="translated">Der Wert des Flags klicken Sie dann weitere Zielmodell ausgeschlossen wird, und die Suche wird fortgesetzt, für das nächste Flag.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>If <ph id="ph1">`value`</ph> is not equal to a combination of named enumerated constants, the decimal equivalent of <ph id="ph2">`value`</ph> is returned.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> stimmt nicht mit einer Kombination von benannten Enumerationskonstanten, die Dezimalzahl <ph id="ph2">`value`</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>"X" or "x"</source>
          <target state="translated">"X" oder "x"</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>Represents <ph id="ph1">`value`</ph> in hexadecimal format without a leading "0x".</source>
          <target state="translated">Stellt <ph id="ph1">`value`</ph> im hexadezimalen Format ohne Präfix "0 X".</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>"D" or "d"</source>
          <target state="translated">"D" oder "d"</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>Represents <ph id="ph1">`value`</ph> in decimal form.</source>
          <target state="translated">Stellt <ph id="ph1">`value`</ph> Dezimalformat.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>"F" or "f"</source>
          <target state="translated">"F" oder "f"</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>Behaves identically to "G" or "g", except that the <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> is not required to be present on the <ph id="ph2">&lt;xref:System.Enum&gt;</ph> declaration.</source>
          <target state="translated">Verhält sich ebenso wie "G" oder "g", mit dem Unterschied, dass die <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> muss nicht auf vorhanden sein, die <ph id="ph2">&lt;xref:System.Enum&gt;</ph> Deklaration.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>The following example illustrates the use of <ph id="ph1">`Format`</ph> in the context of <ph id="ph2">`Enum`</ph>.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung von <ph id="ph1">`Format`</ph> im Kontext des <ph id="ph2">`Enum`</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph>, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>, or <ph id="ph3">&lt;paramref name="format" /&gt;</ph> parameter is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph>-Parameter, <ph id="ph2">&lt;paramref name="value" /&gt;</ph>-Parameter oder <ph id="ph3">&lt;paramref name="format" /&gt;</ph>-Parameter ist <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> parameter is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph> type.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph>-Parameter ist kein <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>-Typ.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is from an enumeration that differs in type from <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> stammt aus einer Enumeration, die von einem anderen Typ als <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph> ist.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>The type of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not an underlying type of <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="value" /&gt;</ph>-Typ ist kein <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph> zugrunde liegender Typ.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source>The <ph id="ph1">&lt;paramref name="format" /&gt;</ph> parameter contains an invalid value.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="format" /&gt;</ph>-Parameter hat einen ungültigen Wert.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Enum.Format(System.Type,System.Object,System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> equals "X", but the enumeration type is unknown.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist gleich "X", der Enumerationstyp ist jedoch unbekannt.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Enum.GetHashCode">
          <source>Returns the hash code for the value of this instance.</source>
          <target state="translated">Gibt den Hashcode für den Wert dieser Instanz zurück.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Enum.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">Ein 32-Bit-Hashcode als ganze Zahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Enum.GetName(System.Type,System.Object)">
          <source>An enumeration type.</source>
          <target state="translated">Ein Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Enum.GetName(System.Type,System.Object)">
          <source>The value of a particular enumerated constant in terms of its underlying type.</source>
          <target state="translated">Der Wert einer bestimmten Enumerationskonstanten als deren zugrunde liegender Typ.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Enum.GetName(System.Type,System.Object)">
          <source>Retrieves the name of the constant in the specified enumeration that has the specified value.</source>
          <target state="translated">Ruft den Namen der Konstanten in der angegebenen Enumeration mit dem angegebenen Wert ab.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Enum.GetName(System.Type,System.Object)">
          <source>A string containing the name of the enumerated constant in <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> whose value is <ph id="ph2">&lt;paramref name="value" /&gt;</ph>; or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if no such constant is found.</source>
          <target state="translated">Eine Zeichenfolge mit dem Namen der Enumerationskonstanten aus <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph>, die den Wert <ph id="ph2">&lt;paramref name="value" /&gt;</ph> hat, oder <ph id="ph3">&lt;see langword="null" /&gt;</ph>, wenn eine solche Konstante nicht gefunden wurde.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetName(System.Type,System.Object)">
          <source>If multiple enumeration members have the same underlying value, the <ph id="ph1">&lt;xref:System.Enum.GetName%2A&gt;</ph> method guarantees that it will return the name of one of those enumeration members.</source>
          <target state="translated">Wenn mehrere Enumerationsmember über den gleichen zugrunde liegenden Wert müssen die <ph id="ph1">&lt;xref:System.Enum.GetName%2A&gt;</ph> Methode stellt sicher, dass es den Namen eines dieser Elemente Enumeration zurück.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetName(System.Type,System.Object)">
          <source>However, it does not guarantee that it will always return the name of the same enumeration member.</source>
          <target state="translated">Allerdings garantiert es nicht, dass es immer den Namen des gleichen Enumerationsmembers zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetName(System.Type,System.Object)">
          <source>As a result, when multiple enumeration members have the same value, your application code should never depend on the method returning a particular member's name.</source>
          <target state="translated">Wenn mehrere Enumerationsmember denselben Wert haben, sollte der Anwendungscode daher nie auf die Methode zurückgeben eines bestimmten Elements namens abhängen.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetName(System.Type,System.Object)">
          <source>The following example illustrates the use of <ph id="ph1">`GetName`</ph>.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung von <ph id="ph1">`GetName`</ph>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Enum.GetName(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="value" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Enum.GetName(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Enum.GetName(System.Type,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Enum.GetName(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is neither of type <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph> nor does it have the same underlying type as <ph id="ph3">&lt;paramref name="enumType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist weder vom Typ <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph> noch liegt ihm derselbe Typ wie <ph id="ph3">&lt;paramref name="enumType" /&gt;</ph> zugrunde.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Enum.GetNames(System.Type)">
          <source>An enumeration type.</source>
          <target state="translated">Ein Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Enum.GetNames(System.Type)">
          <source>Retrieves an array of the names of the constants in a specified enumeration.</source>
          <target state="translated">Ruft ein Array mit den Namen der Konstanten in einer angegebenen Enumeration ab.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Enum.GetNames(System.Type)">
          <source>A string array of the names of the constants in <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph>.</source>
          <target state="translated">Ein Zeichenfolgenarray mit den Namen der Konstanten in <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetNames(System.Type)">
          <source>The elements of the return value array are sorted by the binary values of the enumerated constants (that is, by their unsigned magnitude).</source>
          <target state="translated">Die Elemente des Arrays Rückgabewert sind nach den Binärwerten der Enumerationskonstanten sortiert (d. h. durch ihre Größe ohne Vorzeichen).</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetNames(System.Type)">
          <source>The following example provides displays information about the array returned by the <ph id="ph1">&lt;xref:System.Enum.GetNames%2A&gt;</ph> method for an enumeration that includes a negative, zero, and a positive value.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht zeigt Informationen über das zurückgegebene Array die <ph id="ph1">&lt;xref:System.Enum.GetNames%2A&gt;</ph> Methode für eine Enumeration, die eine Negative 0 (null) und einen positiven Wert enthält.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetNames(System.Type)">
          <source>If there are enumerated constants with same value, the order of their corresponding names is unspecified.</source>
          <target state="translated">Wenn Sie Enumerationskonstanten mit demselben Wert sind, ist die Reihenfolge der entsprechenden Namen nicht angegeben.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetNames(System.Type)">
          <source>The following example illustrates the use of the <ph id="ph1">&lt;xref:System.Enum.GetNames%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die Verwendung der <ph id="ph1">&lt;xref:System.Enum.GetNames%2A&gt;</ph>-Methode veranschaulicht.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Enum.GetNames(System.Type)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="M:System.Enum.GetNames(System.Type)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> parameter is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph>-Parameter ist kein <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Enum.GetTypeCode">
          <source>Returns the type code of the underlying type of this enumeration member.</source>
          <target state="translated">Gibt den Typcode des zugrunde liegenden Typs dieses Enumerationsmembers zurück.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Enum.GetTypeCode">
          <source>The type code of the underlying type of this instance.</source>
          <target state="translated">Der Typcode des zugrunde liegenden Typs dieser Instanz.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Enum.GetTypeCode">
          <source>The enumeration type is unknown.</source>
          <target state="translated">Der Enumerationstyp ist unbekannt.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Enum.GetUnderlyingType(System.Type)">
          <source>The enumeration whose underlying type will be retrieved.</source>
          <target state="translated">Die Enumeration, deren zugrunde liegender Typ abgerufen wird.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Enum.GetUnderlyingType(System.Type)">
          <source>Returns the underlying type of the specified enumeration.</source>
          <target state="translated">Gibt den zugrunde liegenden Typ der angegebenen Enumeration zurück.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Enum.GetUnderlyingType(System.Type)">
          <source>The underlying type of <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph>.</source>
          <target state="translated">Der zugrunde liegende Typ <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetUnderlyingType(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Enum&gt;</ph> structure enables values to be represented as named constants.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum&gt;</ph> Struktur ermöglicht Werte als benannte Konstanten dargestellt werden soll.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetUnderlyingType(System.Type)">
          <source>The data type of the enumeration's values is known as its underlying type.</source>
          <target state="translated">Der Datentyp der Werte der Enumeration wird als dessen zugrunde liegendem Typ bezeichnet.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetUnderlyingType(System.Type)">
          <source>For example, the underlying type of the <ph id="ph1">&lt;xref:System.DayOfWeek&gt;</ph> enumeration, which consists of constants that represent each day of the week (<ph id="ph2">&lt;xref:System.DayOfWeek.Monday?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType&gt;</ph>, and so on), is <ph id="ph4">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">Z. B. der zugrunde liegende Typ der <ph id="ph1">&lt;xref:System.DayOfWeek&gt;</ph> -Enumeration, die Konstanten besteht, die jeden Tag der Woche darstellen (<ph id="ph2">&lt;xref:System.DayOfWeek.Monday?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.DayOfWeek.Tuesday?displayProperty=nameWithType&gt;</ph>usw.), ist <ph id="ph4">&lt;xref:System.Int32&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetUnderlyingType(System.Type)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Enum.GetUnderlyingType%2A&gt;</ph> method to display the underlying type of some enumeration members.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Enum.GetUnderlyingType%2A&gt;</ph> Methode, um den zugrunde liegenden Typ, der einige Enumerationsmember anzuzeigen.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Enum.GetUnderlyingType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Enum.GetUnderlyingType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Enum.GetValues(System.Type)">
          <source>An enumeration type.</source>
          <target state="translated">Ein Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Enum.GetValues(System.Type)">
          <source>Retrieves an array of the values of the constants in a specified enumeration.</source>
          <target state="translated">Ruft ein Array mit den Werten der Konstanten in einer angegebenen Enumeration ab.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Enum.GetValues(System.Type)">
          <source>An array that contains the values of the constants in <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph>.</source>
          <target state="translated">Ein Array, das die Werte der Konstanten in <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> enthält.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetValues(System.Type)">
          <source>The elements of the array are sorted by the binary values of the enumeration constants (that is, by their unsigned magnitude).</source>
          <target state="translated">Die Elemente des Arrays sind nach den Binärwerten der Enumerationskonstanten sortiert (d. h. durch ihre Größe ohne Vorzeichen).</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetValues(System.Type)">
          <source>The following example displays information about the array returned by the <ph id="ph1">&lt;xref:System.Enum.GetValues%2A&gt;</ph> method for an enumeration that includes a negative value, zero, and a positive value.</source>
          <target state="translated">Das folgende Beispiel zeigt Informationen über das zurückgegebene Array die <ph id="ph1">&lt;xref:System.Enum.GetValues%2A&gt;</ph> Methode für eine Enumeration, die einen negativen Wert 0 (null) und einen positiven Wert enthält.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetValues(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.GetValues%2A&gt;</ph> method returns an array that contains a value for each member of the <ph id="ph2">`enumType`</ph> enumeration.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.GetValues%2A&gt;</ph> Methode gibt ein Array, das einen Wert für jedes Element enthält die <ph id="ph2">`enumType`</ph> Enumeration.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetValues(System.Type)">
          <source>If multiple members have the same value, the returned array includes duplicate values.</source>
          <target state="translated">Wenn mehrere Elemente den gleichen Wert haben, enthält das zurückgegebene Array doppelte Werte.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetValues(System.Type)">
          <source>In this case, calling the <ph id="ph1">&lt;xref:System.Enum.GetName%2A&gt;</ph> method with each value in the returned array does not restore the unique names assigned to members that have duplicate values.</source>
          <target state="translated">In diesem Fall Aufrufen der <ph id="ph1">&lt;xref:System.Enum.GetName%2A&gt;</ph> Methode bei den einzelnen Werten im zurückgegebenen Array wird nicht wiederhergestellt, die eindeutigen Namen zugewiesene Elemente, die doppelte Werte enthalten.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetValues(System.Type)">
          <source>To retrieve all the names of enumeration members successfully, call the <ph id="ph1">&lt;xref:System.Enum.GetNames%2A&gt;</ph> method.</source>
          <target state="translated">Um alle Namen von Enumerationsmembern erfolgreich abzurufen, rufen Sie die <ph id="ph1">&lt;xref:System.Enum.GetNames%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetValues(System.Type)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.GetValues%2A&gt;</ph> method cannot be invoked by using reflection in a reflection-only context.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.GetValues%2A&gt;</ph> Methode kann nicht mithilfe der Reflektion in einem reflektionsbezogenen Kontext aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetValues(System.Type)">
          <source>Instead, you can retrieve the value of all enumeration members by using the <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> method to get an array of <ph id="ph2">&lt;xref:System.Reflection.FieldInfo&gt;</ph> objects that represent enumeration members and then call the <ph id="ph3">&lt;xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType&gt;</ph> method on each element of the array.</source>
          <target state="translated">Stattdessen können Sie den Wert der alle Enumerationsmember abrufen, mithilfe der <ph id="ph1">&lt;xref:System.Type.GetFields%2A?displayProperty=nameWithType&gt;</ph> ein Array der abzurufenden Methode <ph id="ph2">&lt;xref:System.Reflection.FieldInfo&gt;</ph> Objekte, die Enumerationsmember darstellen, und rufen Sie anschließend die <ph id="ph3">&lt;xref:System.Reflection.FieldInfo.GetRawConstantValue%2A?displayProperty=nameWithType&gt;</ph> Methode für jedes Element des Arrays.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetValues(System.Type)">
          <source>The following example illustrates this technique.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht dieses Verfahren.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetValues(System.Type)">
          <source>It requires that you define the following enumeration in an assembly named Enumerations.dll:</source>
          <target state="translated">Es erfordert, dass Sie die folgende Enumeration in einer Assembly mit dem Namen Enumerations.dll definieren:</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetValues(System.Type)">
          <source>The assembly is loaded in a reflection-only context, a <ph id="ph1">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph2">`Pets`</ph> enumeration is instantiated, an array of <ph id="ph3">&lt;xref:System.Reflection.FieldInfo&gt;</ph> objects is retrieved, and the field values are displayed to the console.</source>
          <target state="translated">Die Assembly im reflektionsbezogenen Kontext geladen wird eine <ph id="ph1">&lt;xref:System.Type&gt;</ph> Objekt, das darstellt der <ph id="ph2">`Pets`</ph> Enumeration instanziiert wird, ein Array von <ph id="ph3">&lt;xref:System.Reflection.FieldInfo&gt;</ph> Objekten wird abgerufen, und die Feldwerte in der Konsole angezeigt werden.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.GetValues(System.Type)">
          <source>The following example illustrates the use of <ph id="ph1">&lt;xref:System.Enum.GetValues%2A&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung von <ph id="ph1">&lt;xref:System.Enum.GetValues%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Enum.GetValues(System.Type)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Enum.GetValues(System.Type)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="M:System.Enum.GetValues(System.Type)">
          <source>The method is invoked by reflection in a reflection-only context,</source>
          <target state="translated">Die Methode wird durch Reflektion in einem reflektionsbezogenen Kontext aufgerufen,</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" uid="M:System.Enum.GetValues(System.Type)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" uid="M:System.Enum.GetValues(System.Type)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is a type from an assembly loaded in a reflection-only context.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist ein Typ von einer Assembly, die in einem reflektionsbezogenen Kontext geladen wird.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" uid="M:System.Enum.HasFlag(System.Enum)">
          <source>An enumeration value.</source>
          <target state="translated">Ein Enumerationswert.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Enum.HasFlag(System.Enum)">
          <source>Determines whether one or more bit fields are set in the current instance.</source>
          <target state="translated">Bestimmt, ob ein oder mehrere Bitfelder in der aktuellen Instanz festgelegt werden.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Enum.HasFlag(System.Enum)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the bit field or bit fields that are set in <ph id="ph2">&lt;paramref name="flag" /&gt;</ph> are also set in the current instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das in <ph id="ph2">&lt;paramref name="flag" /&gt;</ph> festgelegte Bitfeld bzw. die Bitfelder auch in der aktuellen Instanz festgelegt werden, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.HasFlag(System.Enum)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> method returns the result of the following Boolean expression.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> Methode gibt das Ergebnis des folgenden booleschen Ausdrucks zurück.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.HasFlag(System.Enum)">
          <source>If the underlying value of <ph id="ph1">`flag`</ph> is zero, the method returns <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Wenn die zugrunde liegenden Wert des <ph id="ph1">`flag`</ph> ist 0 (null), gibt die Methode <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.HasFlag(System.Enum)">
          <source>If this behavior is not desirable, you can use the <ph id="ph1">&lt;xref:System.Enum.Equals%2A&gt;</ph> method to test for equality with zero and call <ph id="ph2">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> only if the underlying value of <ph id="ph3">`flag`</ph> is non-zero, as the following example illustrates.</source>
          <target state="translated">Wenn dieses Verhalten nicht erwünscht ist, können Sie mithilfe der <ph id="ph1">&lt;xref:System.Enum.Equals%2A&gt;</ph> Methode auf Gleichheit mit 0 (null) und rufen <ph id="ph2">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> nur, wenn der zugrundeliegende Wert des <ph id="ph3">`flag`</ph> ist ungleich NULL ist, wie im folgenden Beispiel veranschaulicht.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.HasFlag(System.Enum)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> method is designed to be used with enumeration types that are marked with the <ph id="ph2">&lt;xref:System.FlagsAttribute&gt;</ph> attribute and can be used to determine whether multiple bit fields are set.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> -Methode entwickelt, um mit Enumerationstypen verwendet werden, die mit markiert sind die <ph id="ph2">&lt;xref:System.FlagsAttribute&gt;</ph> Attribut, und kann verwendet werden, um zu bestimmen, ob mehrere Bitfelder festgelegt werden.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.HasFlag(System.Enum)">
          <source>For enumeration types that are not marked with the <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> attribute, call either the <ph id="ph2">&lt;xref:System.Enum.Equals%2A&gt;</ph> method or the <ph id="ph3">&lt;xref:System.Enum.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">Für Enumerationstypen, die nicht mit markiert sind die <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> -Attribut, rufen Sie entweder die <ph id="ph2">&lt;xref:System.Enum.Equals%2A&gt;</ph> Methode oder die <ph id="ph3">&lt;xref:System.Enum.CompareTo%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.HasFlag(System.Enum)">
          <source>The following example defines an <ph id="ph1">`ItemsOrdered`</ph> enumeration that reflects categories of items that a customer can order in a restaurant.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`ItemsOrdered`</ph> -Enumeration, die Kategorien der Elemente angibt, die ein Kunde in einem Restaurant sortieren kann.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.HasFlag(System.Enum)">
          <source>The example tests whether the customer has ordered both an entrée and a beverage.</source>
          <target state="translated">Im Beispiel wird getestet, ob der Kunde ein Hauptgericht und Getränke aufgegeben hat.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Enum.HasFlag(System.Enum)">
          <source><ph id="ph1">&lt;paramref name="flag" /&gt;</ph> is a different type than the current instance.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="flag" /&gt;</ph> besitzt einen anderen Typ als die aktuelle Instanz.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>An enumeration type.</source>
          <target state="translated">Ein Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>The value or name of a constant in <bpt id="p1">&lt;c&gt;</bpt>enumType<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Wert oder Name einer Konstanten in <bpt id="p1">&lt;c&gt;</bpt>enumType<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>Returns a Boolean telling whether a given integral value, or its name as a string, exists in a specified enumeration.</source>
          <target state="translated">Gibt einen booleschen Wert zurück, der angibt, ob ein angegebener Integralwert (oder dessen Name als Zeichenfolge) in einer angegebenen Enumeration vorhanden ist.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a constant in <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph> has a value equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn eine Konstante von <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph> den Wert <ph id="ph3">&lt;paramref name="value" /&gt;</ph> hat, andernfalls <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter can be any of the following:</source>
          <target state="translated">Die <ph id="ph1">`value`</ph> Parameter kann eine der folgenden sein:</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>Any member of type <ph id="ph1">`enumType`</ph>.</source>
          <target state="translated">Alle Member des Typs <ph id="ph1">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>A variable whose value is an enumeration member of type <ph id="ph1">`enumType`</ph>.</source>
          <target state="translated">Eine Variable, deren Wert ein Enumerationsmember vom Typ <ph id="ph1">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>The string representation of the name of an enumeration member.</source>
          <target state="translated">Die Zeichenfolgendarstellung des Namens des einen Enumerationsmember.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>The characters in the string must have the same case as the enumeration member name.</source>
          <target state="translated">Die Zeichen in der Zeichenfolge müssen die gleiche Groß-/Kleinschreibung als Enumeration Elementnamen ein.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>A value of the underlying type of <ph id="ph1">`enumType`</ph>.</source>
          <target state="translated">Ein Wert des zugrunde liegenden Typs von <ph id="ph1">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>If the constants in <ph id="ph1">`enumType`</ph> define a set of bit fields and <ph id="ph2">`value`</ph> contains the values, names, or underlying values of multiple bit fields, the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method returns <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Wenn die Konstanten in <ph id="ph1">`enumType`</ph> definieren einen Satz von Bitfeldern und <ph id="ph2">`value`</ph> enthält die Werte, die Namen oder die zugrunde liegenden mehrere Bitfelder, die <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> -Methode zurückkehrt <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>In other words, for enumerations that define a set of bit fields, the method determines only whether a single bit field belongs to the enumeration.</source>
          <target state="translated">Das heißt, ermittelt für Enumerationen, die einen Satz von Bitfeldern definieren, die Methode nur, ob ein einzelnes Bit-Feld der Enumeration gehört.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>To determine whether multiple bit fields are set in an enumeration type that is tagged with the <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> attribute, you can call the <ph id="ph2">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> method.</source>
          <target state="translated">Um festzustellen, ob mehrere Bitfelder in einem Enumerationstyp festgelegt werden, das mit gekennzeichnet ist die <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> -Attribut, rufen Sie die <ph id="ph2">&lt;xref:System.Enum.HasFlag%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>The following example defines an enumeration named <ph id="ph1">`PetType`</ph> that consists of individual bit fields.</source>
          <target state="translated">Das folgende Beispiel definiert eine Enumeration namens <ph id="ph1">`PetType`</ph> , einzelne Bitfelder besteht.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>It then calls the <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method with possible underlying enumeration values, string names, and composite values that result from setting multiple bit fields.</source>
          <target state="translated">Er ruft dann die <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode mit möglichen zugrunde liegenden Enumerationswerten, Zeichenfolgennamen und zusammengesetzten Werte, die aus mehreren Bitfelder festlegen.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="value" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see langword="Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see langword="Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>The type of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is an enumeration, but it is not an enumeration of type <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph>.</source>
          <target state="translated">Der Typ von <ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist eine Enumeration, aber keine Enumeration vom Typ <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>The type of <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not an underlying type of <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="value" /&gt;</ph>-Typ ist kein <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph> zugrunde liegender Typ.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not type <ph id="ph2">&lt;see cref="T:System.SByte" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.Int32" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Int64" /&gt;</ph>, <ph id="ph6">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph7">&lt;see cref="T:System.UInt16" /&gt;</ph>, <ph id="ph8">&lt;see cref="T:System.UInt32" /&gt;</ph>, or <ph id="ph9">&lt;see cref="T:System.UInt64" /&gt;</ph>, or <ph id="ph10">&lt;see cref="T:System.String" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist nicht vom Typ <ph id="ph2">&lt;see cref="T:System.SByte" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.Int32" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Int64" /&gt;</ph>, <ph id="ph6">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph7">&lt;see cref="T:System.UInt16" /&gt;</ph>, <ph id="ph8">&lt;see cref="T:System.UInt32" /&gt;</ph>, <ph id="ph9">&lt;see cref="T:System.UInt64" /&gt;</ph> oder <ph id="ph10">&lt;see cref="T:System.String" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>If <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is an enumeration that is defined by using the <ph id="ph2">&lt;see cref="T:System.FlagsAttribute" /&gt;</ph> attribute, the method returns <ph id="ph3">&lt;see langword="false" /&gt;</ph> if multiple bit fields in <ph id="ph4">&lt;paramref name="value" /&gt;</ph> are set but <ph id="ph5">&lt;paramref name="value" /&gt;</ph> does not correspond to a composite enumeration value, or if <ph id="ph6">&lt;paramref name="value" /&gt;</ph> is a string concatenation of the names of multiple bit flags.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist eine Enumeration, die mit definiert ist die <ph id="ph2">&lt;see cref="T:System.FlagsAttribute" /&gt;</ph> -Attribut gibt die Methode zurück <ph id="ph3">&lt;see langword="false" /&gt;</ph> Wenn Felder mehrere Bit in <ph id="ph4">&lt;paramref name="value" /&gt;</ph> festgelegt sind, aber <ph id="ph5">&lt;paramref name="value" /&gt;</ph> entspricht einer zusammengesetzten Enumerationswert oder, wenn <ph id="ph6">&lt;paramref name="value" /&gt;</ph> besteht aus einer zeichenfolgenverkettung der Namen von mehreren Bitflags.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>In the following example, a <bpt id="p1">&lt;c&gt;</bpt>Pets<ept id="p1">&lt;/c&gt;</ept> enumeration is defined with the <ph id="ph1">&lt;see cref="T:System.FlagsAttribute" /&gt;</ph> attribute.</source>
          <target state="translated">Im folgenden Beispiel ein <bpt id="p1">&lt;c&gt;</bpt>Haustieren an<ept id="p1">&lt;/c&gt;</ept> Enumeration definiert ist, mit der <ph id="ph1">&lt;see cref="T:System.FlagsAttribute" /&gt;</ph> Attribut.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /&gt;</ph> method returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> when you pass it an enumeration value that has two bit fields (<bpt id="p1">&lt;c&gt;</bpt>Pets.Dog<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>Pets.Cat<ept id="p2">&lt;/c&gt;</ept>) set, and when you pass it the string representation of that enumeration value ("Dog, Cat").</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="M:System.Enum.IsDefined(System.Type,System.Object)" /&gt;</ph> -Methode zurückkehrt <ph id="ph2">&lt;see langword="false" /&gt;</ph> , wenn Sie übergeben sie einen Enumerationswert, der zwei Bitfelder (<bpt id="p1">&lt;c&gt;</bpt>Pets.Dog<ept id="p1">&lt;/c&gt;</ept> und <bpt id="p2">&lt;c&gt;</bpt>Pets.Cat<ept id="p2">&lt;/c&gt;</ept>) festgelegt, und wenn Sie übergeben die Zeichenfolgendarstellung, Ein Enumerationswert ("Dog, Cat").</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.IsDefined(System.Type,System.Object)">
          <source>You can determine whether multiple bit fields are set by calling the <ph id="ph1">&lt;see cref="M:System.Enum.HasFlag(System.Enum)" /&gt;</ph> method.</source>
          <target state="translated">Sie können bestimmen, ob mehrere Bitfelder, durch Aufrufen festgelegt werden der <ph id="ph1">&lt;see cref="M:System.Enum.HasFlag(System.Enum)" /&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="T:System.Enum">
          <source>Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</source>
          <target state="translated">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>An enumeration type.</source>
          <target state="translated">Ein Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>A string containing the name or value to convert.</source>
          <target state="translated">Eine Zeichenfolge mit dem zu konvertierenden Namen oder Wert.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</source>
          <target state="translated">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>An object of type <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> whose value is represented by <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Ein Objekt vom Typ <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph>, dessen Wert durch <ph id="ph2">&lt;paramref name="value" /&gt;</ph> dargestellt wird.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>The <ph id="ph1">`value`</ph> parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</source>
          <target state="translated">Die <ph id="ph1">`value`</ph> Parameter enthält eine Zeichenfolgendarstellung des zugrunde liegenden Wert oder eine benannte Konstante eines Enumerationsmembers oder eine Liste von benannten Konstanten, die durch ein Komma (,) getrennt.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>One or more blank spaces can precede or follow each value, name, or comma in <ph id="ph1">`value`</ph>.</source>
          <target state="translated">Eine oder mehrere Leerzeichen vor oder nach jeder Wert, den Namen oder den Komma in <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>If <ph id="ph1">`value`</ph> is a list, the return value is the value of the specified names combined with a bitwise <ph id="ph2">`OR`</ph> operation.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> ist eine Liste der Rückgabewert ist der Wert der angegebenen Namen, die mit einer bitweisen Kombination <ph id="ph2">`OR`</ph> Vorgang.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>If <ph id="ph1">`value`</ph> is a name that does not correspond to a named constant of <ph id="ph2">`enumType`</ph>, the method throws an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> ist ein Name, die nicht mit einer benannten Konstante der entsprechen <ph id="ph2">`enumType`</ph>, löst die Methode eine <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of an integer that does not represent an underlying value of the <ph id="ph2">`enumType`</ph> enumeration, the method returns an enumeration member whose underlying value is <ph id="ph3">`value`</ph> converted to an integral type.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> die Darstellung der Zeichenfolge eine ganze Zahl, die nicht von einen zugrunde liegenden Wert darstellt der <ph id="ph2">`enumType`</ph> -Enumeration, der Methodenrückgabe Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph> in einen ganzzahligen Typ konvertiert.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>If this behavior is undesirable, call the <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that a particular string representation of an integer is actually a member of <ph id="ph2">`enumType`</ph>.</source>
          <target state="translated">Wenn dieses Verhalten nicht erwünscht ist, rufen Sie die <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode, um sicherzustellen, dass eine bestimmte Zeichenfolge-Darstellung einer ganzen Zahl tatsächlich ein Mitglied ist <ph id="ph2">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>The following example defines a <ph id="ph1">`Colors`</ph> enumeration, calls the <ph id="ph2">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> method to convert strings to their corresponding enumeration values, and calls the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that particular integral values are underlying values in the <ph id="ph4">`Colors`</ph> enumeration.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`Colors`</ph> -Enumeration, ruft der <ph id="ph2">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> -Methode zum Konvertieren von Zeichenfolgen in ihre entsprechenden Enumerationswerte und ruft die <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode, um sicherzustellen, dass bestimmte ganzzahlige Werte zugrunde liegt, werden Werte in die <ph id="ph4">`Colors`</ph> Enumeration.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>This operation is case-sensitive.</source>
          <target state="translated">Dieser Vorgang wird Groß-/Kleinschreibung beachtet.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> method to parse an array of strings that are created by calling the <ph id="ph2">&lt;xref:System.Enum.GetNames%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> Methode ein Array von Zeichenfolgen, die durch den Aufruf erstellt werden, analysiert der <ph id="ph2">&lt;xref:System.Enum.GetNames%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>It also uses the <ph id="ph1">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> method to parse an enumeration value that consists of a bit field.</source>
          <target state="translated">Darüber hinaus verwendet die <ph id="ph1">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> Methode, um ein Enumerationswert analysiert, der ein Bitfeld besteht.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="value" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is either an empty string or only contains white space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist entweder eine leere Zeichenfolge oder eine Zeichenfolge, die nur Leerraum enthält.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is a name, but not one of the named constants defined for the enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist ein Name, aber nicht der Name einer der für die Enumeration definierten benannten Konstanten.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is outside the range of the underlying type of <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> liegt außerhalb des Bereichs des <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph> zugrunde liegenden Typs.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>An enumeration type.</source>
          <target state="translated">Ein Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>A string containing the name or value to convert.</source>
          <target state="translated">Eine Zeichenfolge mit dem zu konvertierenden Namen oder Wert.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore case; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to regard case.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Groß- und Kleinschreibung nicht berücksichtigt wird. <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn die Groß- und Kleinschreibung berücksichtigt wird.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</source>
          <target state="translated">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>A parameter specifies whether the operation is case-insensitive.</source>
          <target state="translated">Ein Parameter gibt an, ob beim Vorgang die Groß-/Kleinschreibung nicht beachtet wird.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>An object of type <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> whose value is represented by <ph id="ph2">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Ein Objekt vom Typ <ph id="ph1">&lt;paramref name="enumType" /&gt;</ph>, dessen Wert durch <ph id="ph2">&lt;paramref name="value" /&gt;</ph> dargestellt wird.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>The <ph id="ph1">`value`</ph> parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants delimited by commas (,).</source>
          <target state="translated">Die <ph id="ph1">`value`</ph> Parameter enthält eine Zeichenfolgendarstellung des zugrunde liegenden Wert oder eine benannte Konstante eines Enumerationsmembers oder eine Liste von benannten Konstanten, die durch ein Komma (,) getrennt.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>One or more blank spaces can precede or follow each value, name, or comma in <ph id="ph1">`value`</ph>.</source>
          <target state="translated">Eine oder mehrere Leerzeichen vor oder nach jeder Wert, den Namen oder den Komma in <ph id="ph1">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>If <ph id="ph1">`value`</ph> is a list, the return value is the value of the specified names combined with a bitwise <ph id="ph2">`OR`</ph> operation.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> ist eine Liste der Rückgabewert ist der Wert der angegebenen Namen, die mit einer bitweisen Kombination <ph id="ph2">`OR`</ph> Vorgang.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>If <ph id="ph1">`value`</ph> is a name that does not correspond to a named constant of <ph id="ph2">`enumType`</ph>, the method throws an <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> ist ein Name, die nicht mit einer benannten Konstante der entsprechen <ph id="ph2">`enumType`</ph>, löst die Methode eine <ph id="ph3">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of an integer that does not represent an underlying value of the <ph id="ph2">`enumType`</ph> enumeration, the method returns an enumeration member whose underlying value is <ph id="ph3">`value`</ph> converted to an integral type.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> die Darstellung der Zeichenfolge eine ganze Zahl, die nicht von einen zugrunde liegenden Wert darstellt der <ph id="ph2">`enumType`</ph> -Enumeration, der Methodenrückgabe Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph> in einen ganzzahligen Typ konvertiert.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>If this behavior is undesirable, call the <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that a particular string representation of an integer is actually a member of <ph id="ph2">`enumType`</ph>.</source>
          <target state="translated">Wenn dieses Verhalten nicht erwünscht ist, rufen Sie die <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode, um sicherzustellen, dass eine bestimmte Zeichenfolge-Darstellung einer ganzen Zahl tatsächlich ein Mitglied ist <ph id="ph2">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>The following example defines a <ph id="ph1">`Colors`</ph> enumeration, calls the <ph id="ph2">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to convert strings to their corresponding enumeration values, and calls the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that particular integral values are underlying values in the <ph id="ph4">`Colors`</ph> enumeration.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`Colors`</ph> -Enumeration, ruft der <ph id="ph2">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29&gt;</ph> -Methode zum Konvertieren von Zeichenfolgen in ihre entsprechenden Enumerationswerte und ruft die <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode, um sicherzustellen, dass bestimmte ganzzahlige Werte zugrunde liegt, werden Werte in die <ph id="ph4">`Colors`</ph> Enumeration.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>The <ph id="ph1">`ignoreCase`</ph> parameter specifies whether this operation is case-sensitive.</source>
          <target state="translated">Die <ph id="ph1">`ignoreCase`</ph> Parameter gibt an, ob dieser Vorgang die Groß-/Kleinschreibung beachtet wird.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method to parse an array of strings that are created by calling the <ph id="ph2">&lt;xref:System.Enum.GetNames%2A&gt;</ph> method.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29&gt;</ph> Methode ein Array von Zeichenfolgen, die durch den Aufruf erstellt werden, analysiert der <ph id="ph2">&lt;xref:System.Enum.GetNames%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>It also uses the <ph id="ph1">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> method to parse an enumeration value that consists of a bit field.</source>
          <target state="translated">Darüber hinaus verwendet die <ph id="ph1">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> Methode, um ein Enumerationswert analysiert, der ein Bitfeld besteht.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="value" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is either an empty string ("") or only contains white space.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist entweder eine leere Zeichenfolge ("") oder eine Zeichenfolge, die nur Leerraum enthält.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is a name, but not one of the named constants defined for the enumeration.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist ein Name, aber nicht der Name einer der für die Enumeration definierten benannten Konstanten.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Enum.Parse(System.Type,System.String,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is outside the range of the underlying type of <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> liegt außerhalb des Bereichs des <ph id="ph2">&lt;paramref name="enumType" /&gt;</ph> zugrunde liegenden Typs.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>Converts the current value to a Boolean value based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in einen booleschen Wert.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This member always throws an exception.</source>
          <target state="translated">Dieser Member löst immer eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>Currently not implemented.</source>
          <target state="translated">Derzeit nicht implementiert.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>Always throws an exception.</source>
          <target state="translated">Löst immer eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">In allen Fällen.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>Converts the current value to an 8-bit unsigned integer based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 8-Bit-Ganzzahl ohne Vorzeichen.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The converted value.</source>
          <target state="translated">Der konvertierte Wert.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>Uses <ph id="ph1">&lt;xref:System.Convert&gt;</ph> to perform the conversion.</source>
          <target state="translated">Verwendet <ph id="ph1">&lt;xref:System.Convert&gt;</ph> zum Durchführen der Konvertierung.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>Converts the current value to a Unicode character based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in ein Unicode-Zeichen.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This member always throws an exception.</source>
          <target state="translated">Dieser Member löst immer eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>Currently not implemented.</source>
          <target state="translated">Derzeit nicht implementiert.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>Always throws an exception.</source>
          <target state="translated">Löst immer eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">In allen Fällen.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Converts the current value to a <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph> based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine <ph id="ph1">&lt;see cref="T:System.DateTime" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This member always throws an exception.</source>
          <target state="translated">Dieser Member löst immer eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Currently not implemented.</source>
          <target state="translated">Derzeit nicht implementiert.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Always throws an exception.</source>
          <target state="translated">Löst immer eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">In allen Fällen.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>Converts the current value to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This member always throws an exception.</source>
          <target state="translated">Dieser Member löst immer eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>Currently not implemented.</source>
          <target state="translated">Derzeit nicht implementiert.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>Always throws an exception.</source>
          <target state="translated">Löst immer eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">In allen Fällen.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>Converts the current value to a double-precision floating point number based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine Gleitkommazahl mit doppelter Genauigkeit.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This member always throws an exception.</source>
          <target state="translated">Dieser Member löst immer eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>Currently not implemented.</source>
          <target state="translated">Derzeit nicht implementiert.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>Always throws an exception.</source>
          <target state="translated">Löst immer eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">In allen Fällen.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>Converts the current value to a 16-bit signed integer based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 16-Bit-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The converted value.</source>
          <target state="translated">Der konvertierte Wert.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>Uses <ph id="ph1">&lt;xref:System.Convert&gt;</ph> to perform the conversion.</source>
          <target state="translated">Verwendet <ph id="ph1">&lt;xref:System.Convert&gt;</ph> zum Durchführen der Konvertierung.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>Converts the current value to a 32-bit signed integer based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 32-Bit-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The converted value.</source>
          <target state="translated">Der konvertierte Wert.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>Uses <ph id="ph1">&lt;xref:System.Convert&gt;</ph> to perform the conversion.</source>
          <target state="translated">Verwendet <ph id="ph1">&lt;xref:System.Convert&gt;</ph> zum Durchführen der Konvertierung.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>Converts the current value to a 64-bit signed integer based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 64-Bit-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The converted value.</source>
          <target state="translated">Der konvertierte Wert.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>Uses <ph id="ph1">&lt;xref:System.Convert&gt;</ph> to perform the conversion.</source>
          <target state="translated">Verwendet <ph id="ph1">&lt;xref:System.Convert&gt;</ph> zum Durchführen der Konvertierung.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>Converts the current value to an 8-bit signed integer based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 8-Bit-Ganzzahl mit Vorzeichen.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The converted value.</source>
          <target state="translated">Der konvertierte Wert.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>Uses <ph id="ph1">&lt;xref:System.Convert&gt;</ph> to perform the conversion.</source>
          <target state="translated">Verwendet <ph id="ph1">&lt;xref:System.Convert&gt;</ph> zum Durchführen der Konvertierung.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>Converts the current value to a single-precision floating-point number based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine Gleitkommazahl mit einfacher Genauigkeit.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This member always throws an exception.</source>
          <target state="translated">Dieser Member löst immer eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>Currently not implemented.</source>
          <target state="translated">Derzeit nicht implementiert.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>Always throws an exception.</source>
          <target state="translated">Löst immer eine Ausnahme aus.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">In allen Fällen.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The type to convert to.</source>
          <target state="translated">Der Typ, in den konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>Converts the current value to a specified type based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in einen angegebenen Typ.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The converted value.</source>
          <target state="translated">Der konvertierte Wert.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>Uses <ph id="ph1">&lt;xref:System.Convert&gt;</ph> to perform the conversion.</source>
          <target state="translated">Verwendet <ph id="ph1">&lt;xref:System.Convert&gt;</ph> zum Durchführen der Konvertierung.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>Converts the current value to a 16-bit unsigned integer based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 16-Bit-Ganzzahl ohne Vorzeichen.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The converted value.</source>
          <target state="translated">Der konvertierte Wert.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>Uses <ph id="ph1">&lt;xref:System.Convert&gt;</ph> to perform the conversion.</source>
          <target state="translated">Verwendet <ph id="ph1">&lt;xref:System.Convert&gt;</ph> zum Durchführen der Konvertierung.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>Converts the current value to a 32-bit unsigned integer based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 32-Bit-Ganzzahl ohne Vorzeichen.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The converted value.</source>
          <target state="translated">Der konvertierte Wert.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>Uses <ph id="ph1">&lt;xref:System.Convert&gt;</ph> to perform the conversion.</source>
          <target state="translated">Verwendet <ph id="ph1">&lt;xref:System.Convert&gt;</ph> zum Durchführen der Konvertierung.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">Ein Objekt, das kulturspezifische Formatierungsinformationen bereitstellt.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>Converts the current value to a 64-bit unsigned integer based on the underlying type.</source>
          <target state="translated">Konvertiert den aktuellen Wert auf Grundlage des zugrunde liegenden Typs in eine 64-Bit-Ganzzahl ohne Vorzeichen.</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The converted value.</source>
          <target state="translated">Der konvertierte Wert.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>Uses <ph id="ph1">&lt;xref:System.Convert&gt;</ph> to perform the conversion.</source>
          <target state="translated">Verwendet <ph id="ph1">&lt;xref:System.Convert&gt;</ph> zum Durchführen der Konvertierung.</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="T:System.Enum">
          <source>Converts a specified integer value to an enumeration member.</source>
          <target state="translated">Konvertiert einen angegebenen Ganzzahlwert in einen Enumerationsmember.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Byte)">
          <source>The enumeration type to return.</source>
          <target state="translated">Der zurückzugebende Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Byte)">
          <source>The value to convert to an enumeration member.</source>
          <target state="translated">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Byte)">
          <source>Converts the specified 8-bit unsigned integer to an enumeration member.</source>
          <target state="translated">Konvertiert die angegebene 8-Bit-Ganzzahl ohne Vorzeichen in einen Enumerationsmember.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Byte)">
          <source>An instance of the enumeration set to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Eine Instanz der Enumeration, die auf <ph id="ph1">&lt;paramref name="value" /&gt;</ph> festgelegt ist.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Byte)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29&gt;</ph> method converts <ph id="ph2">`value`</ph> to an enumeration member whose underlying value is <ph id="ph3">`value`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Byte%29&gt;</ph> -Methode konvertiert <ph id="ph2">`value`</ph> in einen Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Byte)">
          <source>Note that the conversion succeeds even if value is outside the bounds of <ph id="ph1">`enumType`</ph> members.</source>
          <target state="translated">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt <ph id="ph1">`enumType`</ph> Elemente.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Byte)">
          <source>To ensure that <ph id="ph1">`value`</ph> is a valid underlying value of the <ph id="ph2">`enumType`</ph> enumeration, pass it to the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.</source>
          <target state="translated">Um sicherzustellen, dass <ph id="ph1">`value`</ph> ist ein gültiger zugrunde liegenden Wert von der <ph id="ph2">`enumType`</ph> -Enumeration, übergeben Sie sie an der <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Byte)">
          <source>This conversion method returns a value of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Diese Konvertierungsmethode gibt einen Wert vom Typ <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Byte)">
          <source>You can then cast it or convert it to an object of type <ph id="ph1">`enumType`</ph>.</source>
          <target state="translated">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs <ph id="ph1">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Byte)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Byte)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int16)">
          <source>The enumeration type to return.</source>
          <target state="translated">Der zurückzugebende Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int16)">
          <source>The value to convert to an enumeration member.</source>
          <target state="translated">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int16)">
          <source>Converts the specified 16-bit signed integer to an enumeration member.</source>
          <target state="translated">Konvertiert die angegebene 16-Bit-Ganzzahl mit Vorzeichen in einen Enumerationsmember.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int16)">
          <source>An instance of the enumeration set to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Eine Instanz der Enumeration, die auf <ph id="ph1">&lt;paramref name="value" /&gt;</ph> festgelegt ist.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int16)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29&gt;</ph> method converts <ph id="ph2">`value`</ph> to an enumeration member whose underlying value is <ph id="ph3">`value`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Int16%29&gt;</ph> -Methode konvertiert <ph id="ph2">`value`</ph> in einen Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int16)">
          <source>Note that the conversion succeeds even if value is outside the bounds of <ph id="ph1">`enumType`</ph> members.</source>
          <target state="translated">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt <ph id="ph1">`enumType`</ph> Elemente.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int16)">
          <source>To ensure that <ph id="ph1">`value`</ph> is a valid underlying value of the <ph id="ph2">`enumType`</ph> enumeration, pass it to the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.</source>
          <target state="translated">Um sicherzustellen, dass <ph id="ph1">`value`</ph> ist ein gültiger zugrunde liegenden Wert von der <ph id="ph2">`enumType`</ph> -Enumeration, übergeben Sie sie an der <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int16)">
          <source>This conversion method returns a value of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Diese Konvertierungsmethode gibt einen Wert vom Typ <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int16)">
          <source>You can then cast it or convert it to an object of type <ph id="ph1">`enumType`</ph>.</source>
          <target state="translated">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs <ph id="ph1">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int16)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int16)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int32)">
          <source>The enumeration type to return.</source>
          <target state="translated">Der zurückzugebende Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int32)">
          <source>The value to convert to an enumeration member.</source>
          <target state="translated">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int32)">
          <source>Converts the specified 32-bit signed integer to an enumeration member.</source>
          <target state="translated">Konvertiert die angegebene 32-Bit-Ganzzahl mit Vorzeichen in einen Enumerationsmember.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int32)">
          <source>An instance of the enumeration set to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Eine Instanz der Enumeration, die auf <ph id="ph1">&lt;paramref name="value" /&gt;</ph> festgelegt ist.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29&gt;</ph> method converts <ph id="ph2">`value`</ph> to an enumeration member whose underlying value is <ph id="ph3">`value`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Int32%29&gt;</ph> -Methode konvertiert <ph id="ph2">`value`</ph> in einen Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int32)">
          <source>Note that the conversion succeeds even if value is outside the bounds of <ph id="ph1">`enumType`</ph> members.</source>
          <target state="translated">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt <ph id="ph1">`enumType`</ph> Elemente.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int32)">
          <source>To ensure that <ph id="ph1">`value`</ph> is a valid underlying value of the <ph id="ph2">`enumType`</ph> enumeration, pass it to the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.</source>
          <target state="translated">Um sicherzustellen, dass <ph id="ph1">`value`</ph> ist ein gültiger zugrunde liegenden Wert von der <ph id="ph2">`enumType`</ph> -Enumeration, übergeben Sie sie an der <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int32)">
          <source>This conversion method returns a value of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Diese Konvertierungsmethode gibt einen Wert vom Typ <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int32)">
          <source>You can then cast it or convert it to an object of type <ph id="ph1">`enumType`</ph>.</source>
          <target state="translated">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs <ph id="ph1">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int64)">
          <source>The enumeration type to return.</source>
          <target state="translated">Der zurückzugebende Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int64)">
          <source>The value to convert to an enumeration member.</source>
          <target state="translated">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int64)">
          <source>Converts the specified 64-bit signed integer to an enumeration member.</source>
          <target state="translated">Konvertiert die angegebene 64-Bit-Ganzzahl mit Vorzeichen in einen Enumerationsmember.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int64)">
          <source>An instance of the enumeration set to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Eine Instanz der Enumeration, die auf <ph id="ph1">&lt;paramref name="value" /&gt;</ph> festgelegt ist.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int64)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29&gt;</ph> method converts <ph id="ph2">`value`</ph> to an enumeration member whose underlying value is <ph id="ph3">`value`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Int64%29&gt;</ph> -Methode konvertiert <ph id="ph2">`value`</ph> in einen Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int64)">
          <source>Note that the conversion succeeds even if value is outside the bounds of <ph id="ph1">`enumType`</ph> members.</source>
          <target state="translated">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt <ph id="ph1">`enumType`</ph> Elemente.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int64)">
          <source>To ensure that <ph id="ph1">`value`</ph> is a valid underlying value of the <ph id="ph2">`enumType`</ph> enumeration, pass it to the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.</source>
          <target state="translated">Um sicherzustellen, dass <ph id="ph1">`value`</ph> ist ein gültiger zugrunde liegenden Wert von der <ph id="ph2">`enumType`</ph> -Enumeration, übergeben Sie sie an der <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int64)">
          <source>This conversion method returns a value of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Diese Konvertierungsmethode gibt einen Wert vom Typ <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Int64)">
          <source>You can then cast it or convert it to an object of type <ph id="ph1">`enumType`</ph>.</source>
          <target state="translated">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs <ph id="ph1">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Int64)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source>The enumeration type to return.</source>
          <target state="translated">Der zurückzugebende Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source>The value convert to an enumeration member.</source>
          <target state="translated">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source>Converts the specified object with an integer value to an enumeration member.</source>
          <target state="translated">Konvertiert das angegebene Objekt mit einem ganzzahligen Wert in einen Enumerationsmember.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source>An enumeration object whose value is <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Ein Enumerationsobjekt mit dem Wert <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29&gt;</ph> method converts the integral value <ph id="ph2">`value`</ph> to an enumeration member whose underlying value is <ph id="ph3">`value`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.Object%29&gt;</ph> -Methode konvertiert den ganzzahligen Wert <ph id="ph2">`value`</ph> in einen Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source>Note that the conversion succeeds even if value is outside the bounds of <ph id="ph1">`enumType`</ph> members.</source>
          <target state="translated">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt <ph id="ph1">`enumType`</ph> Elemente.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source>To ensure that <ph id="ph1">`value`</ph> is a valid underlying value of the <ph id="ph2">`enumType`</ph> enumeration, pass it to the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.</source>
          <target state="translated">Um sicherzustellen, dass <ph id="ph1">`value`</ph> ist ein gültiger zugrunde liegenden Wert von der <ph id="ph2">`enumType`</ph> -Enumeration, übergeben Sie sie an der <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source>This conversion method returns a value of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Diese Konvertierungsmethode gibt einen Wert vom Typ <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source>You can then cast it or convert it to an object of type <ph id="ph1">`enumType`</ph>.</source>
          <target state="translated">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs <ph id="ph1">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> or <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="value" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not type <ph id="ph2">&lt;see cref="T:System.SByte" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.Int32" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Int64" /&gt;</ph>, <ph id="ph6">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph7">&lt;see cref="T:System.UInt16" /&gt;</ph>, <ph id="ph8">&lt;see cref="T:System.UInt32" /&gt;</ph>, or <ph id="ph9">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> ist nicht vom Typ <ph id="ph2">&lt;see cref="T:System.SByte" /&gt;</ph>, <ph id="ph3">&lt;see cref="T:System.Int16" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.Int32" /&gt;</ph>, <ph id="ph5">&lt;see cref="T:System.Int64" /&gt;</ph>, <ph id="ph6">&lt;see cref="T:System.Byte" /&gt;</ph>, <ph id="ph7">&lt;see cref="T:System.UInt16" /&gt;</ph>, <ph id="ph8">&lt;see cref="T:System.UInt32" /&gt;</ph> oder <ph id="ph9">&lt;see cref="T:System.UInt64" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.SByte)">
          <source>The enumeration type to return.</source>
          <target state="translated">Der zurückzugebende Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.SByte)">
          <source>The value to convert to an enumeration member.</source>
          <target state="translated">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.SByte)">
          <source>Converts the specified 8-bit signed integer value to an enumeration member.</source>
          <target state="translated">Konvertiert den angegebenen Wert einer 8-Bit-Ganzzahl mit Vorzeichen in einen Enumerationsmember.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.SByte)">
          <source>An instance of the enumeration set to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Eine Instanz der Enumeration, die auf <ph id="ph1">&lt;paramref name="value" /&gt;</ph> festgelegt ist.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.SByte)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29&gt;</ph> method converts <ph id="ph2">`value`</ph> to an enumeration member whose underlying value is <ph id="ph3">`value`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.SByte%29&gt;</ph> -Methode konvertiert <ph id="ph2">`value`</ph> in einen Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.SByte)">
          <source>Note that the conversion succeeds even if value is outside the bounds of <ph id="ph1">`enumType`</ph> members.</source>
          <target state="translated">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt <ph id="ph1">`enumType`</ph> Elemente.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.SByte)">
          <source>To ensure that <ph id="ph1">`value`</ph> is a valid underlying value of the <ph id="ph2">`enumType`</ph> enumeration, pass it to the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.</source>
          <target state="translated">Um sicherzustellen, dass <ph id="ph1">`value`</ph> ist ein gültiger zugrunde liegenden Wert von der <ph id="ph2">`enumType`</ph> -Enumeration, übergeben Sie sie an der <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.SByte)">
          <source>This conversion method returns a value of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Diese Konvertierungsmethode gibt einen Wert vom Typ <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.SByte)">
          <source>You can then cast it or convert it to an object of type <ph id="ph1">`enumType`</ph>.</source>
          <target state="translated">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs <ph id="ph1">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.SByte)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.SByte)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt16)">
          <source>The enumeration type to return.</source>
          <target state="translated">Der zurückzugebende Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt16)">
          <source>The value to convert to an enumeration member.</source>
          <target state="translated">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt16)">
          <source>Converts the specified 16-bit unsigned integer value to an enumeration member.</source>
          <target state="translated">Konvertiert den angegebenen Wert einer 16-Bit-Ganzzahl ohne Vorzeichen in einen Enumerationsmember.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt16)">
          <source>An instance of the enumeration set to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Eine Instanz der Enumeration, die auf <ph id="ph1">&lt;paramref name="value" /&gt;</ph> festgelegt ist.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt16)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29&gt;</ph> method converts <ph id="ph2">`value`</ph> to an enumeration member whose underlying value is <ph id="ph3">`value`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.UInt16%29&gt;</ph> -Methode konvertiert <ph id="ph2">`value`</ph> in einen Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt16)">
          <source>Note that the conversion succeeds even if value is outside the bounds of <ph id="ph1">`enumType`</ph> members.</source>
          <target state="translated">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt <ph id="ph1">`enumType`</ph> Elemente.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt16)">
          <source>To ensure that <ph id="ph1">`value`</ph> is a valid underlying value of the <ph id="ph2">`enumType`</ph> enumeration, pass it to the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.</source>
          <target state="translated">Um sicherzustellen, dass <ph id="ph1">`value`</ph> ist ein gültiger zugrunde liegenden Wert von der <ph id="ph2">`enumType`</ph> -Enumeration, übergeben Sie sie an der <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt16)">
          <source>This conversion method returns a value of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Diese Konvertierungsmethode gibt einen Wert vom Typ <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt16)">
          <source>You can then cast it or convert it to an object of type <ph id="ph1">`enumType`</ph>.</source>
          <target state="translated">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs <ph id="ph1">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt16)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt16)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt32)">
          <source>The enumeration type to return.</source>
          <target state="translated">Der zurückzugebende Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt32)">
          <source>The value to convert to an enumeration member.</source>
          <target state="translated">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt32)">
          <source>Converts the specified 32-bit unsigned integer value to an enumeration member.</source>
          <target state="translated">Konvertiert den angegebenen Wert einer 32-Bit-Ganzzahl ohne Vorzeichen in einen Enumerationsmember.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt32)">
          <source>An instance of the enumeration set to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Eine Instanz der Enumeration, die auf <ph id="ph1">&lt;paramref name="value" /&gt;</ph> festgelegt ist.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt32)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29&gt;</ph> method converts <ph id="ph2">`value`</ph> to an enumeration member whose underlying value is <ph id="ph3">`value`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.UInt32%29&gt;</ph> -Methode konvertiert <ph id="ph2">`value`</ph> in einen Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt32)">
          <source>Note that the conversion succeeds even if value is outside the bounds of <ph id="ph1">`enumType`</ph> members.</source>
          <target state="translated">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt <ph id="ph1">`enumType`</ph> Elemente.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt32)">
          <source>To ensure that <ph id="ph1">`value`</ph> is a valid underlying value of the <ph id="ph2">`enumType`</ph> enumeration, pass it to the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.</source>
          <target state="translated">Um sicherzustellen, dass <ph id="ph1">`value`</ph> ist ein gültiger zugrunde liegenden Wert von der <ph id="ph2">`enumType`</ph> -Enumeration, übergeben Sie sie an der <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt32)">
          <source>This conversion method returns a value of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Diese Konvertierungsmethode gibt einen Wert vom Typ <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt32)">
          <source>You can then cast it or convert it to an object of type <ph id="ph1">`enumType`</ph>.</source>
          <target state="translated">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs <ph id="ph1">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt32)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt64)">
          <source>The enumeration type to return.</source>
          <target state="translated">Der zurückzugebende Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt64)">
          <source>The value to convert to an enumeration member.</source>
          <target state="translated">Der Wert, der in einen Enumerationsmember konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt64)">
          <source>Converts the specified 64-bit unsigned integer value to an enumeration member.</source>
          <target state="translated">Konvertiert den angegebenen Wert einer 64-Bit-Ganzzahl ohne Vorzeichen in einen Enumerationsmember.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt64)">
          <source>An instance of the enumeration set to <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">Eine Instanz der Enumeration, die auf <ph id="ph1">&lt;paramref name="value" /&gt;</ph> festgelegt ist.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt64)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29&gt;</ph> method converts <ph id="ph2">`value`</ph> to an enumeration member whose underlying value is <ph id="ph3">`value`</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.ToObject%28System.Type%2CSystem.UInt64%29&gt;</ph> -Methode konvertiert <ph id="ph2">`value`</ph> in einen Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt64)">
          <source>Note that the conversion succeeds even if value is outside the bounds of <ph id="ph1">`enumType`</ph> members.</source>
          <target state="translated">Beachten Sie, die die Konvertierung erfolgreich ist, auch wenn außerhalb des liegt <ph id="ph1">`enumType`</ph> Elemente.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt64)">
          <source>To ensure that <ph id="ph1">`value`</ph> is a valid underlying value of the <ph id="ph2">`enumType`</ph> enumeration, pass it to the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method.</source>
          <target state="translated">Um sicherzustellen, dass <ph id="ph1">`value`</ph> ist ein gültiger zugrunde liegenden Wert von der <ph id="ph2">`enumType`</ph> -Enumeration, übergeben Sie sie an der <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt64)">
          <source>This conversion method returns a value of type <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Diese Konvertierungsmethode gibt einen Wert vom Typ <ph id="ph1">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToObject(System.Type,System.UInt64)">
          <source>You can then cast it or convert it to an object of type <ph id="ph1">`enumType`</ph>.</source>
          <target state="translated">Sie können es umwandeln oder konvertieren Sie ihn in ein Objekt des Typs <ph id="ph1">`enumType`</ph>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" uid="M:System.Enum.ToObject(System.Type,System.UInt64)">
          <source><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> is not an <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="enumType" /&gt;</ph> ist keine <ph id="ph2">&lt;see cref="T:System.Enum" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="T:System.Enum">
          <source>Converts the value of this instance to its equivalent string representation.</source>
          <target state="translated">Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString">
          <source>Converts the value of this instance to its equivalent string representation.</source>
          <target state="translated">Konvertiert den Wert dieser Instanz in die entsprechende Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString">
          <source>The string representation of the value of this instance.</source>
          <target state="translated">Die Zeichenfolgendarstellung des Werts dieser Instanz.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString">
          <source>The return value is formatted with the general format specifier ("G").</source>
          <target state="translated">Der Rückgabewert wird mit dem allgemeinen Formatbezeichner ("G") formatiert.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString">
          <source>That is, if the <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> is not applied to this enumerated type and there is a named constant equal to the value of this instance, then the return value is a string containing the name of the constant.</source>
          <target state="translated">D. h., wenn die <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> gilt nicht für diesen Enumerationstyp eine benannte Konstante mit dem Wert dieser Instanz vorhanden ist, und der Rückgabewert ist eine Zeichenfolge, die mit dem Namen der Konstanten.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString">
          <source>If the <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> is applied and there is a combination of one or more named constants equal to the value of this instance, then the return value is a string containing a delimiter-separated list of the names of the constants.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.FlagsAttribute&gt;</ph> wird angewendet, es ist eine Kombination aus ein oder mehrere benannte Konstanten gleich dem Wert dieser Instanz, und der Rückgabewert ist eine Zeichenfolge mit einer durch Trennzeichen getrennte Liste der Namen der Konstanten.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString">
          <source>Otherwise, the return value is the string representation of the numeric value of this instance.</source>
          <target state="translated">Andernfalls ist der Rückgabewert eine Zeichenfolgendarstellung des numerischen Werts dieser Instanz.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString">
          <source>For more information about formatting enumeration values, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung von Enumerationswerten finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString">
          <source>For more information about formatting in general, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung im Allgemeinen finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString">
          <source>The following example demonstrates converting an enumerated value to a string.</source>
          <target state="translated">Das folgende Beispiel zeigt einen aufgezählten Wert in eine Zeichenfolge konvertieren.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString">
          <source>If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return.</source>
          <target state="translated">Wenn mehrere Enumerationsmember den gleichen zugrunde liegenden Wert müssen aus, und Sie versuchen, die Zeichenfolgendarstellung für einen Enumerationsmember Namen basierend auf seinem zugrunde liegenden Wert abzurufen, sollten Ihren Code keine Annahmen vornehmen, deren, die Name die Methode zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString">
          <source>For example, the following enumeration defines two members, <bpt id="p1">&lt;c&gt;</bpt>Shade.Gray<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>Shade.Grey<ept id="p2">&lt;/c&gt;</ept>, that have the same underlying value.</source>
          <target state="translated">Die folgende Enumeration definiert z. B. zwei Member <bpt id="p1">&lt;c&gt;</bpt>Shade.Gray<ept id="p1">&lt;/c&gt;</ept> und <bpt id="p2">&lt;c&gt;</bpt>Shade.Grey<ept id="p2">&lt;/c&gt;</ept>, die über den gleichen zugrunde liegenden Wert verfügen.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString">
          <source>The following method call attempts to retrieve the name of a member of the <bpt id="p1">&lt;c&gt;</bpt>Shade<ept id="p1">&lt;/c&gt;</ept> enumeration whose underlying value is 1.</source>
          <target state="translated">Der folgende Methodenaufruf versucht, den Namen eines Elements der abzurufenden der <bpt id="p1">&lt;c&gt;</bpt>Schattierung<ept id="p1">&lt;/c&gt;</ept> Enumeration, deren zugrunde liegenden Wert 1 ist.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString">
          <source>The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.</source>
          <target state="translated">Die Methode kann entweder "Gray" oder "Grey" zurückgeben, und Code sollten keine Annahmen darüber, welche Zeichenfolge zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.IFormatProvider)">
          <source>(obsolete)</source>
          <target state="translated">(Veraltet)</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.IFormatProvider)">
          <source>This method overload is obsolete; use <ph id="ph1">&lt;see cref="M:System.Enum.ToString" /&gt;</ph>.</source>
          <target state="translated">Diese Methodenüberladung ist veraltet. Verwenden Sie <ph id="ph1">&lt;see cref="M:System.Enum.ToString" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.IFormatProvider)">
          <source>The string representation of the value of this instance.</source>
          <target state="translated">Die Zeichenfolgendarstellung des Werts dieser Instanz.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.String)">
          <source>A format string.</source>
          <target state="translated">Eine Formatzeichenfolge.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.String)">
          <source>Converts the value of this instance to its equivalent string representation using the specified format.</source>
          <target state="translated">Konvertiert den Wert dieser Instanz anhand des angegebenen Formats in die entsprechende Zeichenfolgendarstellung.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.String)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <ph id="ph1">&lt;paramref name="format" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can contain the "G" or "g", "D" or "d", "X" or "x", and "F" or "f" format strings (the format string is not case-sensitive).</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> kann Parameter enthalten, die "G" oder "g", "D" oder "d", "X" oder "X" und "F" oder "f" Formatzeichenfolgen (die Formatzeichenfolge ist nicht Groß-/Kleinschreibung).</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), the general format specifier ("G") is used.</source>
          <target state="translated">Wenn <ph id="ph1">`format`</ph> ist <ph id="ph2">`null`</ph> oder eine leere Zeichenfolge (""), wird der allgemeine Formatbezeichner ("G") verwendet.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String)">
          <source>For more information about the enumeration format strings and formatting enumeration values, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu den Enumerationsformatzeichenfolgen und Formatierung von Enumerationswerten finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String)">
          <source>For more information about formatting in general, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung im Allgemeinen finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String)">
          <source>The following example demonstrates how to convert an enumerated value to a string.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie einen aufgezählten Wert in eine Zeichenfolge konvertiert wird.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> contains an invalid specification.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> enthält eine ungültige Angabe.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> equals "X", but the enumeration type is unknown.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist gleich "X", der Enumerationstyp ist jedoch unbekannt.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String)">
          <source>If multiple enumeration members have the same underlying value and you attempt to retrieve the string representation of an enumeration member's name based on its underlying value, your code should not make any assumptions about which name the method will return.</source>
          <target state="translated">Wenn mehrere Enumerationsmember den gleichen zugrunde liegenden Wert müssen aus, und Sie versuchen, die Zeichenfolgendarstellung für einen Enumerationsmember Namen basierend auf seinem zugrunde liegenden Wert abzurufen, sollten Ihren Code keine Annahmen vornehmen, deren, die Name die Methode zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String)">
          <source>For example, the following enumeration defines two members, <bpt id="p1">&lt;c&gt;</bpt>Shade.Gray<ept id="p1">&lt;/c&gt;</ept> and <bpt id="p2">&lt;c&gt;</bpt>Shade.Grey<ept id="p2">&lt;/c&gt;</ept>, that have the same underlying value.</source>
          <target state="translated">Die folgende Enumeration definiert z. B. zwei Member <bpt id="p1">&lt;c&gt;</bpt>Shade.Gray<ept id="p1">&lt;/c&gt;</ept> und <bpt id="p2">&lt;c&gt;</bpt>Shade.Grey<ept id="p2">&lt;/c&gt;</ept>, die über den gleichen zugrunde liegenden Wert verfügen.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String)">
          <source>The following method call attempts to retrieve the name of a member of the <bpt id="p1">&lt;c&gt;</bpt>Shade<ept id="p1">&lt;/c&gt;</ept> enumeration whose underlying value is 1.</source>
          <target state="translated">Der folgende Methodenaufruf versucht, den Namen eines Elements der abzurufenden der <bpt id="p1">&lt;c&gt;</bpt>Schattierung<ept id="p1">&lt;/c&gt;</ept> Enumeration, deren zugrunde liegenden Wert 1 ist.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String)">
          <source>The method can return either "Gray" or "Grey", and your code should not make any assumptions about which string will be returned.</source>
          <target state="translated">Die Methode kann entweder "Gray" oder "Grey" zurückgeben, und Code sollten keine Annahmen darüber, welche Zeichenfolge zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.String,System.IFormatProvider)">
          <source>A format specification.</source>
          <target state="translated">Eine Formatangabe.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.String,System.IFormatProvider)">
          <source>(Obsolete.)</source>
          <target state="translated">(Veraltet)</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.String,System.IFormatProvider)">
          <source>This method overload is obsolete; use <ph id="ph1">&lt;see cref="M:System.Enum.ToString(System.String)" /&gt;</ph>.</source>
          <target state="translated">Diese Methodenüberladung ist veraltet. Verwenden Sie <ph id="ph1">&lt;see cref="M:System.Enum.ToString(System.String)" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph>.</source>
          <target state="translated">Die Zeichenfolgendarstellung des Werts dieser Instanz entsprechend den Angaben von <ph id="ph1">&lt;paramref name="format" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can contain the "G" or "g", "D" or "d", "X" or "x", and "F" or "f" format strings (the format string is not case-sensitive).</source>
          <target state="translated">Die <ph id="ph1">`format`</ph> kann Parameter enthalten, die "G" oder "g", "D" oder "d", "X" oder "X" und "F" oder "f" Formatzeichenfolgen (die Formatzeichenfolge ist nicht Groß-/Kleinschreibung).</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string (""), the general format specifier ("G") is used.</source>
          <target state="translated">Wenn <ph id="ph1">`format`</ph> ist <ph id="ph2">`null`</ph> oder eine leere Zeichenfolge (""), wird der allgemeine Formatbezeichner ("G") verwendet.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String,System.IFormatProvider)">
          <source>For more information about the enumeration format strings and formatting enumeration values, see <bpt id="p1">[</bpt>Enumeration Format Strings<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu den Enumerationsformatzeichenfolgen und Formatierung von Enumerationswerten finden Sie unter <bpt id="p1">[</bpt>Enumerationsformatzeichenfolgen<ept id="p1">](~/docs/standard/base-types/enumeration-format-strings.md)</ept>.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting in general, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Formatierung im Allgemeinen finden Sie unter <bpt id="p1">[</bpt>Formatierung von Typen<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.ToString(System.String,System.IFormatProvider)">
          <source>Specify only <ph id="ph1">`format`</ph>; the <ph id="ph2">`provider`</ph> parameter is obsolete.</source>
          <target state="translated">Geben Sie nur <ph id="ph1">`format`</ph>; das <ph id="ph2">`provider`</ph> Parameter ist veraltet.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> does not contain a valid format specification.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> enthält keine gültige Formatangabe.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Enum.ToString(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> equals "X", but the enumeration type is unknown.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> ist gleich "X", der Enumerationstyp ist jedoch unbekannt.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="T:System.Enum">
          <source>Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</source>
          <target state="translated">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="T:System.Enum">
          <source>The return value indicates whether the conversion succeeded.</source>
          <target state="translated">Der Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>The enumeration type to which to convert <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Enumerationstyp, der zu konvertierende <bpt id="p1">&lt;c&gt;</bpt>Wert<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>The string representation of the enumeration name or underlying value to convert.</source>
          <target state="translated">Die Zeichenfolgendarstellung des Enumerationsnamens oder zugrunde liegenden Werts, der konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>When this method returns, <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> contains an object of type <bpt id="p2">&lt;c&gt;</bpt>TEnum<ept id="p2">&lt;/c&gt;</ept> whose value is represented by <bpt id="p3">&lt;c&gt;</bpt>value<ept id="p3">&lt;/c&gt;</ept> if the parse operation succeeds.</source>
          <target state="translated">Wenn diese Methode zurückgibt, enthält <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> ein Objekt des Typs <bpt id="p2">&lt;c&gt;</bpt>TEnum<ept id="p2">&lt;/c&gt;</ept>, dessen Wert durch <bpt id="p3">&lt;c&gt;</bpt>value<ept id="p3">&lt;/c&gt;</ept> dargestellt wird, wenn der Analysevorgang erfolgreich ist.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>If the parse operation fails, <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> contains the default value of the underlying type of <bpt id="p2">&lt;c&gt;</bpt>TEnum<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Wenn der Analysevorgang misslingt, enthält <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> den Standardwert des zugrunde liegenden Typs von <bpt id="p2">&lt;c&gt;</bpt>TEnum<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>Note that this value need not be a member of the <bpt id="p1">&lt;c&gt;</bpt>TEnum<ept id="p1">&lt;/c&gt;</ept> enumeration.</source>
          <target state="translated">Beachten Sie, dass dieser Wert kein Mitglied der <bpt id="p1">&lt;c&gt;</bpt>TEnum<ept id="p1">&lt;/c&gt;</ept>-Enumeration sein muss.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Dieser Parameter wird nicht initialisiert übergeben.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</source>
          <target state="translated">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>The return value indicates whether the conversion succeeded.</source>
          <target state="translated">Der Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der <ph id="ph2">&lt;paramref name="value" /&gt;</ph>-Parameter erfolgreich konvertiert wurde, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source><ph id="ph1">&lt;xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29&gt;</ph> is identical to the <ph id="ph2">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> method, except that instead of throwing an exception, it returns <ph id="ph3">`false`</ph> if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29&gt;</ph> ist identisch mit der <ph id="ph2">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%29&gt;</ph> -Methode, außer dass eine Ausnahme auszulösen, es gibt <ph id="ph3">`false`</ph> , wenn die Konvertierung schlägt fehl.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>It eliminates the need for exception handling when parsing the string representation of an enumeration value.</source>
          <target state="translated">Er wird für die Ausnahmebehandlung beim Analysieren der Zeichenfolgendarstellung eines Enumerationswerts überflüssig.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>The <ph id="ph1">`value`</ph> parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</source>
          <target state="translated">Die <ph id="ph1">`value`</ph> Parameter enthält eine Zeichenfolgendarstellung des zugrunde liegenden Wert oder eine benannte Konstante eines Enumerationsmembers oder eine Liste von benannten Konstanten oder zugrunde liegenden Werte durch Kommas (,) getrennt.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>If <ph id="ph1">`value`</ph> includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in <ph id="ph2">`value`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> enthält mehrere benannte Konstanten oder Werte, eine oder mehrere Leerzeichen vor oder nach einem einzelnen Wert, den Namen oder den Komma in <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>If <ph id="ph1">`value`</ph> is a list, <ph id="ph2">`result`</ph> reflects the value of the specified names or underlying values combined with a bitwise <ph id="ph3">`OR`</ph> operation.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> ist eine Liste, <ph id="ph2">`result`</ph> reflektiert den Wert der angegebenen Namen oder die zugrunde liegenden Werte, die mit einer bitweisen Kombination <ph id="ph3">`OR`</ph> Vorgang.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of the name of an enumeration value, the comparison of <ph id="ph2">`value`</ph> with enumeration names is case-sensitive.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> ist die Zeichenfolgendarstellung des Namens der einem Enumerationswert entspricht, beim Vergleich von <ph id="ph2">`value`</ph> mit Enumeration Namen Groß-/Kleinschreibung beachtet wird.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>If <ph id="ph1">`value`</ph> is a name that does not correspond to a named constant of <ph id="ph2">`TEnum`</ph>, the method returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> ist ein Name, die nicht mit einer benannten Konstante der entsprechen <ph id="ph2">`TEnum`</ph>, gibt die Methode <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of an integer that does not represent an underlying value of the <ph id="ph2">`TEnum`</ph> enumeration, the method returns an enumeration member whose underlying value is <ph id="ph3">`value`</ph> converted to an integral type.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> die Darstellung der Zeichenfolge eine ganze Zahl, die nicht von einen zugrunde liegenden Wert darstellt der <ph id="ph2">`TEnum`</ph> -Enumeration, der Methodenrückgabe Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph> in einen ganzzahligen Typ konvertiert.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>If this behavior is undesirable, call the <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that a particular string representation of an integer is actually a member of <ph id="ph2">`TEnum`</ph>.</source>
          <target state="translated">Wenn dieses Verhalten nicht erwünscht ist, rufen Sie die <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode, um sicherzustellen, dass eine bestimmte Zeichenfolge-Darstellung einer ganzen Zahl tatsächlich ein Mitglied ist <ph id="ph2">`TEnum`</ph>.</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source>The following example defines a <ph id="ph1">`Colors`</ph> enumeration, calls the <ph id="ph2">&lt;xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29&gt;</ph> method to convert strings to their corresponding enumeration values, and calls the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that particular integral values are underlying values in the <ph id="ph4">`Colors`</ph> enumeration.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`Colors`</ph> -Enumeration, ruft der <ph id="ph2">&lt;xref:System.Enum.TryParse%60%601%28System.String%2C%60%600%40%29&gt;</ph> -Methode zum Konvertieren von Zeichenfolgen in ihre entsprechenden Enumerationswerte und ruft die <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode, um sicherzustellen, dass bestimmte ganzzahlige Werte zugrunde liegt, werden Werte in die <ph id="ph4">`Colors`</ph> Enumeration.</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,``0@)">
          <source><ph id="ph1">&lt;paramref name="TEnum" /&gt;</ph> is not an enumeration type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TEnum" /&gt;</ph> ist kein Enumerationstyp.</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>The enumeration type to which to convert <bpt id="p1">&lt;c&gt;</bpt>value<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Enumerationstyp, der zu konvertierende <bpt id="p1">&lt;c&gt;</bpt>Wert<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>The string representation of the enumeration name or underlying value to convert.</source>
          <target state="translated">Die Zeichenfolgendarstellung des Enumerationsnamens oder zugrunde liegenden Werts, der konvertiert werden soll.</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to ignore case; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to consider case.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Groß- und Kleinschreibung nicht berücksichtigt wird. <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn die Groß- und Kleinschreibung berücksichtigt wird.</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>When this method returns, <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> contains an object of type <bpt id="p2">&lt;c&gt;</bpt>TEnum<ept id="p2">&lt;/c&gt;</ept> whose value is represented by <bpt id="p3">&lt;c&gt;</bpt>value<ept id="p3">&lt;/c&gt;</ept> if the parse operation succeeds.</source>
          <target state="translated">Wenn diese Methode zurückgibt, enthält <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> ein Objekt des Typs <bpt id="p2">&lt;c&gt;</bpt>TEnum<ept id="p2">&lt;/c&gt;</ept>, dessen Wert durch <bpt id="p3">&lt;c&gt;</bpt>value<ept id="p3">&lt;/c&gt;</ept> dargestellt wird, wenn der Analysevorgang erfolgreich ist.</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>If the parse operation fails, <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> contains the default value of the underlying type of <bpt id="p2">&lt;c&gt;</bpt>TEnum<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated">Wenn der Analysevorgang misslingt, enthält <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> den Standardwert des zugrunde liegenden Typs von <bpt id="p2">&lt;c&gt;</bpt>TEnum<ept id="p2">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>Note that this value need not be a member of the <bpt id="p1">&lt;c&gt;</bpt>TEnum<ept id="p1">&lt;/c&gt;</ept> enumeration.</source>
          <target state="translated">Beachten Sie, dass dieser Wert kein Mitglied der <bpt id="p1">&lt;c&gt;</bpt>TEnum<ept id="p1">&lt;/c&gt;</ept>-Enumeration sein muss.</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>This parameter is passed uninitialized.</source>
          <target state="translated">Dieser Parameter wird nicht initialisiert übergeben.</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>Converts the string representation of the name or numeric value of one or more enumerated constants to an equivalent enumerated object.</source>
          <target state="translated">Konvertiert die Zeichenfolgendarstellung des Namens oder des numerischen Werts einer oder mehrerer Enumerationskonstanten in ein entsprechendes Enumerationsobjekt.</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>A parameter specifies whether the operation is case-sensitive.</source>
          <target state="translated">Ein Parameter gibt an, ob beim Vorgang die Groß-/Kleinschreibung beachtet wird.</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>The return value indicates whether the conversion succeeded.</source>
          <target state="translated">Der Rückgabewert gibt an, ob die Konvertierung erfolgreich abgeschlossen wurde.</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;paramref name="value" /&gt;</ph> parameter was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der <ph id="ph2">&lt;paramref name="value" /&gt;</ph>-Parameter erfolgreich konvertiert wurde, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source><ph id="ph1">&lt;xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29&gt;</ph> is identical to the <ph id="ph2">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29&gt;</ph> method, except that instead of throwing an exception, it returns <ph id="ph3">`false`</ph> if the conversion fails.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29&gt;</ph> ist identisch mit der <ph id="ph2">&lt;xref:System.Enum.Parse%28System.Type%2CSystem.String%2CSystem.Boolean%29&gt;</ph> -Methode, außer dass eine Ausnahme auszulösen, es gibt <ph id="ph3">`false`</ph> , wenn die Konvertierung schlägt fehl.</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>It eliminates the need for exception handling when parsing the string representation of an enumeration value.</source>
          <target state="translated">Er wird für die Ausnahmebehandlung beim Analysieren der Zeichenfolgendarstellung eines Enumerationswerts überflüssig.</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>The <ph id="ph1">`value`</ph> parameter contains the string representation of an enumeration member's underlying value or named constant, or a list of named constants or underlying values delimited by commas (,).</source>
          <target state="translated">Die <ph id="ph1">`value`</ph> Parameter enthält eine Zeichenfolgendarstellung des zugrunde liegenden Wert oder eine benannte Konstante eines Enumerationsmembers oder eine Liste von benannten Konstanten oder zugrunde liegenden Werte durch Kommas (,) getrennt.</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>If <ph id="ph1">`value`</ph> includes multiple named constants or values, one or more blank spaces can precede or follow each value, name, or comma in <ph id="ph2">`value`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> enthält mehrere benannte Konstanten oder Werte, eine oder mehrere Leerzeichen vor oder nach einem einzelnen Wert, den Namen oder den Komma in <ph id="ph2">`value`</ph>.</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>If <ph id="ph1">`value`</ph> is a list, <ph id="ph2">`result`</ph> reflects the value of the specified names or underlying values combined with a bitwise <ph id="ph3">`OR`</ph> operation.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> ist eine Liste, <ph id="ph2">`result`</ph> reflektiert den Wert der angegebenen Namen oder die zugrunde liegenden Werte, die mit einer bitweisen Kombination <ph id="ph3">`OR`</ph> Vorgang.</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of the name of an enumeration value, the comparison of <ph id="ph2">`value`</ph> with enumeration names depends on the <ph id="ph3">`ignoreCase`</ph> parameter.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> ist die Zeichenfolgendarstellung des Namens der einem Enumerationswert entspricht, beim Vergleich von <ph id="ph2">`value`</ph> mit Enumeration Namen richtet sich nach der <ph id="ph3">`ignoreCase`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>If <ph id="ph1">`true`</ph>, the comparison is case-insensitive; if <ph id="ph2">`false`</ph>, it is case-sensitive.</source>
          <target state="translated">Wenn <ph id="ph1">`true`</ph>, beim Vergleich wird die Groß-/Kleinschreibung; Wenn <ph id="ph2">`false`</ph>, Groß-/Kleinschreibung beachtet wird.</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>If <ph id="ph1">`value`</ph> is a name that does not correspond to a named constant of <ph id="ph2">`TEnum`</ph>, the method returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> ist ein Name, die nicht mit einer benannten Konstante der entsprechen <ph id="ph2">`TEnum`</ph>, gibt die Methode <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>If <ph id="ph1">`value`</ph> is the string representation of an integer that does not represent an underlying value of the <ph id="ph2">`TEnum`</ph> enumeration, the method returns an enumeration member whose underlying value is <ph id="ph3">`value`</ph> converted to an integral type.</source>
          <target state="translated">Wenn <ph id="ph1">`value`</ph> die Darstellung der Zeichenfolge eine ganze Zahl, die nicht von einen zugrunde liegenden Wert darstellt der <ph id="ph2">`TEnum`</ph> -Enumeration, der Methodenrückgabe Enumerationsmember, deren zugrunde liegenden Wert <ph id="ph3">`value`</ph> in einen ganzzahligen Typ konvertiert.</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>If this behavior is undesirable, call the <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that a particular string representation of an integer is actually a member of <ph id="ph2">`TEnum`</ph>.</source>
          <target state="translated">Wenn dieses Verhalten nicht erwünscht ist, rufen Sie die <ph id="ph1">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode, um sicherzustellen, dass eine bestimmte Zeichenfolge-Darstellung einer ganzen Zahl tatsächlich ein Mitglied ist <ph id="ph2">`TEnum`</ph>.</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>The following example defines a <ph id="ph1">`Colors`</ph> enumeration, calls the <ph id="ph2">&lt;xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29&gt;</ph> method to convert strings to their corresponding enumeration values, and calls the <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> method to ensure that particular integral values are underlying values in the <ph id="ph4">`Colors`</ph> enumeration.</source>
          <target state="translated">Das folgende Beispiel definiert eine <ph id="ph1">`Colors`</ph> -Enumeration, ruft der <ph id="ph2">&lt;xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29&gt;</ph> -Methode zum Konvertieren von Zeichenfolgen in ihre entsprechenden Enumerationswerte und ruft die <ph id="ph3">&lt;xref:System.Enum.IsDefined%2A&gt;</ph> Methode, um sicherzustellen, dass bestimmte ganzzahlige Werte zugrunde liegt, werden Werte in die <ph id="ph4">`Colors`</ph> Enumeration.</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source>The <ph id="ph1">&lt;xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29&gt;</ph> method uses case-insensitive comparison when trying to convert the string representations of named constants to their equivalent enumeration values.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Enum.TryParse%60%601%28System.String%2CSystem.Boolean%2C%60%600%40%29&gt;</ph> Methode verwendet die Groß-und Kleinschreibung unterschieden beim konvertiert der zeichenfolgendarstellungen der Konstanten, mit denen ihre entsprechenden Enumerationswerte mit dem Namen.</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" uid="M:System.Enum.TryParse``1(System.String,System.Boolean,``0@)">
          <source><ph id="ph1">&lt;paramref name="TEnum" /&gt;</ph> is not an enumeration type.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="TEnum" /&gt;</ph> ist kein Enumerationstyp.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>