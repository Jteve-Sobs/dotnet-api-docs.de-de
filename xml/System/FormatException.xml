<Type Name="FormatException" FullName="System.FormatException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0564cf5aa029ae4b753cc3f0d41a0d008454102b" />
    <Meta Name="ms.sourcegitcommit" Value="840fd2a3bbdce4224fcbae5a3cea9a7a89e685f5" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/24/2018" />
    <Meta Name="ms.locfileid" Value="49961629" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormatException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit FormatException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.FormatException" />
  <TypeSignature Language="VB.NET" Value="Public Class FormatException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormatException : SystemException" />
  <TypeSignature Language="F#" Value="type FormatException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-4.5">System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Die Ausnahme, die ausgelöst wird, wenn das Format eines Arguments ungültig ist, oder wenn eine <see href="https://docs.microsoft.com/dotnet/standard/base-types/composite-formatting">kombinierte Formatierungszeichenfolge</see> nicht wohlgeformt ist.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein <xref:System.FormatException> Ausnahme kann ausgelöst werden, für eine der folgenden Gründe:  
  
-   In einem Aufruf an eine Methode, die eine Zeichenfolge in einen anderen Datentyp konvertiert werden soll, übereinstimmen nicht die Zeichenfolge mit dem erforderlichen Muster. Diese Situation kommt üblicherweise beim Aufrufen von einigen Methoden zur der <xref:System.Convert> Klasse und die `Parse` und `ParseExact` Methoden einiger Typen.  
  
     In den meisten Fällen, insbesondere dann, wenn die Zeichenfolge, die Sie konvertieren, indem Sie einen Benutzer geben oder aus einer Datei lesen, Sie sollten verwenden eine `try/catch` blockieren und behandeln die <xref:System.FormatException> -Ausnahme aus, wenn die Konvertierung erfolgreich ist. Sie können auch den Aufruf der Methode zum Konvertieren von ersetzen, mit einem Aufruf von einem `TryParse` oder `TryParseExact` -Methode, sofern eine vorhanden ist. Allerdings eine <xref:System.FormatException> Ausnahme wird ausgelöst, wenn Sie versuchen, eine vordefinierte oder hartcodierten Zeichenfolge gibt an, einen Programmfehler. In diesem Fall sollten Sie den Fehler zu beheben anstatt die Ausnahme behandeln.  
  
     Die Konvertierung einer Zeichenfolge in der folgenden Typen in der <xref:System> Namespace Auslösen einer <xref:System.FormatException> Ausnahme:  
  
    -   <xref:System.Boolean>. Die <xref:System.Boolean.Parse%28System.String%29?displayProperty=nameWithType> und <xref:System.Convert.ToBoolean%28System.String%29?displayProperty=nameWithType> Methoden erfordern, die Zeichenfolge, die konvertiert werden, als "True", "true", "False" oder "false". Jeder andere Wert löst eine <xref:System.FormatException> Ausnahme.  
  
    -   <xref:System.DateTime> und <xref:System.DateTimeOffset>. Alle Daten für Datum und Uhrzeit interpretiert die Formatierungskonventionen einer bestimmten Kultur abhängig: entweder die aktuelle Threadkultur (oder in einigen Fällen die aktuelle Kultur der Anwendung Domäne), die invariante Kultur oder einer angegebenen Kultur. Beim Aufruf der <xref:System.DateTime.ParseExact%28System.String%2CSystem.String%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> und <xref:System.DateTimeOffset.ParseExact%28System.String%2CSystem.String%5B%5D%2CSystem.IFormatProvider%2CSystem.Globalization.DateTimeStyles%29?displayProperty=nameWithType> Methoden, Datums-und Uhrzeitdaten muss auch entsprechen *genau* auf ein Muster, die durch eine oder mehrere angegebene [Standardformatzeichenfolgen](~/docs/standard/base-types/standard-date-and-time-format-strings.md) oder [benutzerdefinierte Formatzeichenfolgen](~/docs/standard/base-types/custom-date-and-time-format-strings.md) , die als Argumente im Aufruf Methode bereitgestellt werden. Wenn sie von einem erwarteten Muster für die kulturspezifische entsprechen keine <xref:System.FormatException> Ausnahme ausgelöst. Dies bedeutet, dass Datum und Uhrzeit-Daten, die in einem kulturspezifischen Format gespeichert wird, auf einem System auf einem anderen System erfolgreich nicht analysieren können.  
  
         Weitere Informationen zum Analysieren von Datumsangaben und Uhrzeiten, finden Sie unter [Analysieren von Zeichenfolgen für Datum und Uhrzeit](~/docs/standard/base-types/parsing-datetime.md) und in der Dokumentation für die Methode, die die Ausnahme ausgelöst hat.  
  
    -   **GUIDs.** Die angegebene Zeichenfolgendarstellung einer GUID muss aus 32 Hexadezimalziffern (0-F) bestehen und muss in einem der fünf Formate Ausgabe durch die <xref:System.Guid.ToString%2A?displayProperty=nameWithType> Methode. Weitere Informationen finden Sie unter der Methode <xref:System.Guid.Parse%2A?displayProperty=nameWithType>.  
  
    -   **Numerische Typen, einschließlich aller signierten Ganzzahlen, ganze Zahlen ohne Vorzeichen und Gleitkomma-Datentypen.** Die zu analysierende Zeichenfolge muss die lateinischen Ziffern 0-9 enthalten. Ein positiven oder negativen Vorzeichen, Dezimaltrennzeichen, Gruppentrennzeichen und Währungssymbol können auch zugelassen werden. Versuch, eine Zeichenfolge zu analysieren, die andere enthält Zeichen immer löst eine <xref:System.FormatException> Ausnahme.  
  
         Alle numerische Zeichenfolgen basierend auf die Formatierungskonventionen einer bestimmten Kultur interpretiert werden: die aktuelle Threadkultur (oder in einigen Fällen die aktuelle Kultur der Anwendung Domäne), die invariante Kultur oder einer angegebenen Kultur. Daher kann die numerische Zeichenfolge, die analysiert wird, mithilfe der Konventionen der Kultur eine Kultur bei Verwendung von den Konventionen einer anderen fehlschlagen.  
  
         Weitere Informationen zur Analyse numerischer Zeichenfolgen finden Sie unter [analysieren numerischer Zeichenfolgen](~/docs/standard/base-types/parsing-numeric.md) und in der Dokumentation für die spezifische Methode, die die Ausnahme ausgelöst hat.  
  
    -   **Zeitintervalle.** Die Zeichenfolge, die analysiert werden muss, entweder in festen kulturunabhängiges Format oder in einem kulturabhängigen Format definiert, durch die aktuelle Threadkultur (oder in einigen Fällen die aktuelle Kultur der Anwendung Domäne), die invariante Kultur oder einer angegebenen Kultur. Wenn die Zeichenfolge ist nicht in ein geeignetes Format oder, wenn, auf das Minimum der Tage, Stunden, Minuten Komponenten des Zeitintervalls nicht vorhanden sind, löst der Analysemethode eine <xref:System.FormatException> Ausnahme. Weitere Informationen finden Sie in der Dokumentation für die <xref:System.TimeSpan> Analysemethode, die die Ausnahme ausgelöst hat.  
  
-   Ein Typ implementiert die <xref:System.IFormattable> -Schnittstelle, die Formatzeichenfolgen, die definieren, wie ein Objekt in seine Zeichenfolgendarstellung konvertiert wird unterstützt, und eine ungültige Formatzeichenfolge dient. Dies ist die am häufigsten in einem Formatierungsvorgang. Im folgenden Beispiel wird die standardmäßigen Formatzeichenfolge "Q" in einer zusammengesetzten Formatzeichenfolge zum Formatieren einer Zahl verwendet. "Q" ist jedoch kein gültiger [Standardformatzeichenfolge](~/docs/standard/base-types/standard-numeric-format-strings.md).  
  
     [!code-csharp[System.FormatException#7](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable1.cs#7)]
     [!code-vb[System.FormatException#7](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable1.vb#7)]  
  
     Diese Ausnahme ergibt sich aus einem Codefehler. Um den Fehler zu beheben, entfernen Sie die Formatzeichenfolge oder Ersetzen Sie einen gültigen. Im folgende Beispiel behebt den Fehler durch Ersetzen der ungültige Formatzeichenfolge, mit der Formatzeichenfolge "C" (Währung).  
  
     [!code-csharp[System.FormatException#8](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable2.cs#8)]
     [!code-vb[System.FormatException#8](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable2.vb#8)]  
  
     Ein <xref:System.FormatException> Ausnahme kann auch ausgelöst werden, durch Analysemethoden, z.B. <xref:System.DateTime.ParseExact%2A?displayProperty=nameWithType> und <xref:System.Guid.ParseExact%2A?displayProperty=nameWithType>, erfordern die Zeichenfolge, die analysiert werden, um das Muster, angegeben durch eine Formatzeichenfolge im genau entsprechen. Im folgenden Beispiel wird die angegebene Zeichenfolgendarstellung einer GUID erwartet, die von der standardmäßigen Formatzeichenfolge "G" angegebenen Muster entsprechen. Allerdings die <xref:System.Guid> -Struktur-Implementierung von <xref:System.IFormattable> die Formatzeichenfolge "G" wird nicht unterstützt.  
  
     [!code-csharp[System.FormatException#9](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable3.cs#9)]
     [!code-vb[System.FormatException#9](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable3.vb#9)]  
  
     Diese Ausnahme führt auch aus einem Codefehler. Um es zu beheben, rufen Sie eine Analysemethode, die einem präzisen Format z. B. erfordern keine <xref:System.DateTime.Parse%2A?displayProperty=nameWithType> oder <xref:System.Guid.Parse%2A?displayProperty=nameWithType>, oder Ersetzen eine gültigen Formatzeichenfolge. Im folgende Beispiel wird den Fehler korrigiert, durch Aufrufen der <xref:System.Guid.Parse%2A?displayProperty=nameWithType> Methode.  
  
     [!code-csharp[System.FormatException#10](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/iformattable4.cs#10)]
     [!code-vb[System.FormatException#10](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/iformattable4.vb#10)]  
  
-   Eine oder mehrere der Indizes der die Formatelemente in einer [kombinierte Formatzeichenfolge](~/docs/standard/base-types/composite-formatting.md) ist größer als die Indizes der Elemente im Objektarray Liste oder des Parameters. Im folgenden Beispiel ist der größte Index eines Formatelements in der Formatzeichenfolge 3. Da die Indizes der Elemente in der Objektliste nullbasiert sind, müssten diese Formatzeichenfolge die Objektliste mit vier Elementen haben. Stattdessen ist es nur drei `dat`, `temp`, und `scale`, sodass der Code führt eine <xref:System.FormatException> -Ausnahme zur Laufzeit:.  
  
     [!code-csharp[System.FormatException#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example1.cs#1)]
     [!code-vb[System.FormatException#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example1.vb#1)]  
  
     In diesem Fall die <xref:System.FormatException> Ausnahme ist das Ergebnis der Entwicklerfehler. Es sollten korrigiert, anstatt in behandelt eine `try/catch` blockieren, indem Sie sicherstellen, dass jedes Element in der Liste auf den Index eines Formatelements entspricht. Um dieses Beispiel zu korrigieren, ändern Sie den Index, der das zweite Formatelement zum Verweisen auf die `dat` Variable, und Verringern der Index des von einem einzelnen nachfolgenden Elemente.  
  
     [!code-csharp[System.FormatException#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example2.cs#2)]
     [!code-vb[System.FormatException#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example2.vb#2)]  
  
-   Die zusammengesetzte Formatzeichenfolge nicht wohlgeformt ist. In diesem Fall die <xref:System.FormatException> Ausnahme ist immer das Ergebnis der Entwicklerfehler. Es sollten korrigiert, anstatt in behandelt eine `try/catch` Block.  
  
     Versucht, das Literale geschweifte Klammern in einer Zeichenfolge enthalten, wie im folgenden Beispiel wird, wird die Ausnahme ausgelöst.  
  
     [!code-csharp[System.String.Format#23](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#23)]
     [!code-vb[System.String.Format#23](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#23)]  
  
     Das empfohlene Verfahren zum Einschließen von literaler geschweiften Klammern in einer kombinierten Formatzeichenfolge werden von aufzunehmen in der Objektliste und Formatelementen zum Einfügen in die Ergebniszeichenfolge ab. Beispielsweise können Sie die vorherigen zusammengesetzte Formatzeichenfolge ändern, wie hier gezeigt.  
  
     [!code-csharp[System.String.Format#24](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.String.Format/cs/qa3.cs#24)]
     [!code-vb[System.String.Format#24](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.String.Format/vb/qa3.vb#24)]  
  
     Die Ausnahme wird auch ausgelöst, wenn die Formatzeichenfolge einen Tippfehler enthält. Der folgende Aufruf von der <xref:System.String.Format%2A?displayProperty=nameWithType> Methode lässt eine schließende geschweifte Klammer und öffnende geschweifte Klammer mit einer schließenden Klammer-Paaren.  
  
     [!code-csharp[System.FormatException#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example3.cs#3)]
     [!code-vb[System.FormatException#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example3.vb#3)]  
  
     Um den Fehler zu beheben, stellen Sie sicher, dass alle öffnende und schließende Klammern entsprechen.  
  
     [!code-csharp[System.FormatException#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/example3.cs#4)]
     [!code-vb[System.FormatException#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/example3.vb#4)]  
  
-   Sie haben angegeben, die Liste in eine Methode zur kombinierten Formatierung als Array stark typisierter Parameter und die <xref:System.FormatException> Ausnahme gibt an, dass der Index des einen oder mehrere Formatelemente, die Anzahl der Argumente in der Objektliste überschreitet. Dies tritt auf, da keine explizite Konvertierung zwischen Arraytypen vorhanden stattdessen der Compiler behandelt das Array als ein einzelnes Argument und nicht als ein Parameterarray ist, ist. Beispielsweise der folgende Aufruf von der <xref:System.Console.WriteLine%28System.String%2CSystem.Object%5B%5D%29?displayProperty=nameWithType> -Methode löst eine <xref:System.FormatException> Ausnahme zwar der höchste Index, der die Formatelemente 3 und das Parameterarray vom Typ <xref:System.Int32> hat vier Elemente.  
  
     [!code-csharp[System.FormatException#5](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/qa1.cs#5)]
     [!code-vb[System.FormatException#5](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/qa1.vb#5)]  
  
     Statt diese Ausnahme wird verarbeitet, sollten die Ursache entfernt werden. Da weder Visual Basic oder c# ein Array von Ganzzahlen in ein Objektarray konvertieren kann, müssen Sie die Konvertierung, die sich vor dem Aufrufen der Methode zur kombinierten Formatierung durchführen. Im folgenden Beispiel wird eine Implementierung.  
  
     [!code-csharp[System.FormatException#6](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.formatexception/cs/qa2.cs#6)]
     [!code-vb[System.FormatException#6](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.formatexception/vb/qa2.vb#6)]  
  
 <xref:System.FormatException> HRESULT COR_E_FORMAT, den Wert 0 x 80131537 wird verwendet.  
  
 Die <xref:System.FormatException> Klasse leitet sich von <xref:System.Exception> und fügt keine speziellen Elemente. Eine Liste der anfänglichen Eigenschaftswerte für eine Instanz von <xref:System.FormatException>, finden Sie unter den <xref:System.FormatException.%23ctor%2A> Konstruktoren.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Exception" />
    <related type="Article" href="~/docs/standard/exceptions/index.md">Behandeln und Auslösen von Ausnahmen</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.FormatException" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.FormatException" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die <xref:System.Exception.Message%2A> -Eigenschaft der neuen Instanz auf eine vom System bereitgestellten Meldung, die beschreibt, die Fehler, wie z. B. "Ungültiges Format." Diese Meldung berücksichtigt die aktuelle Systemkultur.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.FormatException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Ein NULL-Verweis (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|Die lokalisierte Zeichenfolge mit der Fehlermeldung.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new FormatException : string -&gt; FormatException" Usage="new System.FormatException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">Die Meldung, in der der Fehler beschrieben wird.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.FormatException" />-Klasse mit einer angegebenen Fehlermeldung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor initialisiert die <xref:System.Exception.Message%2A?displayProperty=nameWithType> Eigenschaft der neuen Ausnahme mit der `message` Parameter. Der Inhalt der `message` soll in verständlicher Sprache gehalten sein. Der Aufrufer dieses Konstruktors muss sicherstellen, dass diese Zeichenfolge für die aktuelle Systemkultur lokalisiert wurde.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.FormatException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Ein NULL-Verweis (`Nothing` in Visual Basic).|  
|<xref:System.Exception.Message%2A>|Die Zeichenfolge der Fehlermeldung.|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormatException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormatException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new FormatException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; FormatException" Usage="new System.FormatException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Das Objekt, das die Daten des serialisierten Objekts enthält.</param>
        <param name="context">Die Kontextinformationen zur Quelle bzw. zum Ziel.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.FormatException" />-Klasse mit serialisierten Daten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor wird während der Deserialisierung aufgerufen, um das über einen Stream übertragene Ausnahmeobjekt wiederherzustellen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormatException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.FormatException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormatException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new FormatException : string * Exception -&gt; FormatException" Usage="new System.FormatException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">Die Fehlermeldung, in der die Ursache der Ausnahme erklärt wird.</param>
        <param name="innerException">Die Ausnahme, die die Ursache der aktuellen Ausnahme ist. Wenn der Parameter <c>innerException</c> kein NULL-Verweis ist (<see langword="Nothing" /> in Visual Basic), wird die aktuelle Ausnahme in einem <see langword="catch" />-Block ausgelöst, der die innere Ausnahme behandelt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.FormatException" />-Klasse mit einer angegebenen Fehlermeldung und einem Verweis auf die innere Ausnahme, die diese Ausnahme ausgelöst hat.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Ausnahme, die als direktes Ergebnis einer vorhergehenden Ausnahme ausgelöst wird, muss in der <xref:System.Exception.InnerException%2A>-Eigenschaft über einen Verweis auf die vorhergehende Ausnahme verfügen. Die <xref:System.Exception.InnerException%2A>-Eigenschaft gibt denselben Wert zurück, der an den Konstruktor übergeben wurde, bzw. einen NULL-Verweis (`Nothing` in Visual Basic), wenn die <xref:System.Exception.InnerException%2A>-Eigenschaft nicht den Wert für die innere Ausnahme für den Konstruktor bereitstellt.  
  
 In der folgenden Tabelle werden die anfänglichen Eigenschaftenwerte für eine <xref:System.FormatException>-Instanz aufgeführt.  
  
|Eigenschaft|Wert|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|Der Verweis auf die interne Ausnahme.|  
|<xref:System.Exception.Message%2A>|Die Zeichenfolge der Fehlermeldung.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Exception" />
        <related type="Article" href="~/docs/standard/exceptions/index.md">Behandeln und Auslösen von Ausnahmen</related>
      </Docs>
    </Member>
  </Members>
</Type>