<Type Name="IAsyncResult" FullName="System.IAsyncResult">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="af8939f7e8a088eef165eb31b54cab1092f9abee" />
    <Meta Name="ms.sourcegitcommit" Value="1654a92bac785a221098172d9cacd405ceaac9b7" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="12/01/2018" />
    <Meta Name="ms.locfileid" Value="52733212" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IAsyncResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAsyncResult" />
  <TypeSignature Language="DocId" Value="T:System.IAsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAsyncResult" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAsyncResult" />
  <TypeSignature Language="F#" Value="type IAsyncResult = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="73de6-101">Stellt den Status eines asynchronen Vorgangs dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="73de6-101">Represents the status of an asynchronous operation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73de6-102">Die <xref:System.IAsyncResult> Schnittstelle wird von Klassen implementiert, Methoden, die asynchron ausgeführt werden können.</span><span class="sxs-lookup"><span data-stu-id="73de6-102">The <xref:System.IAsyncResult> interface is implemented by classes containing methods that can operate asynchronously.</span></span> <span data-ttu-id="73de6-103">Es ist der Rückgabetyp der Methoden, die einen asynchronen Vorgang, wie z. B. initiieren <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>, und es wird an die Methoden, die einen asynchronen Vorgang, wie z. B. übergeben <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="73de6-103">It is the return type of methods that initiate an asynchronous operation, such as <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>, and it is passed to methods that conclude an asynchronous operation, such as <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="73de6-104"><xref:System.IAsyncResult> Objekte werden auch an der vom aufgerufenen Methoden übergeben <xref:System.AsyncCallback> delegiert wird, wenn ein asynchroner Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="73de6-104"><xref:System.IAsyncResult> objects are also passed to methods invoked by <xref:System.AsyncCallback> delegates when an asynchronous operation completes.</span></span>  
  
 <span data-ttu-id="73de6-105">Ein Objekt, unterstützt die <xref:System.IAsyncResult> Schnittstelle speichert Statusinformationen für einen asynchronen Vorgang, und bietet ein Synchronisierungsobjekt, um Threads zu signalisierende bei Abschluss des Vorgangs zu ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="73de6-105">An object that supports the <xref:System.IAsyncResult> interface stores state information for an asynchronous operation and provides a synchronization object to allow threads to be signaled when the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="73de6-106">Die <xref:System.Runtime.Remoting.Messaging.AsyncResult> Klasse ist die Implementierung von <xref:System.IAsyncResult> das zurückgegeben wird, indem die `BeginInvoke` Methode, wenn Sie einen Delegaten verwenden, um eine Methode asynchron aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="73de6-106">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> class is the implementation of <xref:System.IAsyncResult> that is returned by the `BeginInvoke` method when you use a delegate to call a method asynchronously.</span></span>  
  
 <span data-ttu-id="73de6-107">Eine ausführliche Beschreibung des <xref:System.IAsyncResult> Schnittstelle wird verwendet, finden Sie unter den [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) Thema.</span><span class="sxs-lookup"><span data-stu-id="73de6-107">For a detailed description of how the <xref:System.IAsyncResult> interface is used, see the [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73de6-108">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> die abzurufende Eigenschaft eine <xref:System.Threading.WaitHandle>, und Warten eines asynchronen Aufrufs für einen Delegaten auf.</span><span class="sxs-lookup"><span data-stu-id="73de6-108">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="73de6-109">Das <xref:System.Threading.WaitHandle> wird bei Beendigung des asynchronen Aufrufs signalisiert, und durch Aufrufen der <xref:System.Threading.WaitHandle.WaitOne%2A> -Methode kann darauf gewartet werden.</span><span class="sxs-lookup"><span data-stu-id="73de6-109">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="73de6-110">Das Beispiel besteht aus zwei Klassen: die Klasse enthält die Methode, die asynchron aufgerufen wird und die Klasse enthält die `Main` -Methode, die den Aufruf ausführt.</span><span class="sxs-lookup"><span data-stu-id="73de6-110">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="73de6-111">Weitere Informationen und Beispiele von asynchronen Aufrufen von Methoden mit Delegaten finden Sie unter [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="73de6-111">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73de6-112">Ruft ein benutzerdefiniertes Objekt ab, das einen asynchronen Vorgang qualifiziert oder Informationen darüber enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73de6-112">Gets a user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73de6-113">Ein benutzerdefiniertes Objekt, das einen asynchronen Vorgang qualifiziert oder Informationen darüber enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73de6-113">A user-defined object that qualifies or contains information about an asynchronous operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73de6-114">Diese Eigenschaft gibt das Objekt, das den letzten Parameter der Methode ist, der einen asynchronen Vorgang initiiert.</span><span class="sxs-lookup"><span data-stu-id="73de6-114">This property returns the object that is the last parameter of the method that initiates an asynchronous operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73de6-115">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> Eigenschaft wird verwendet, um Informationen an eine Rückrufmethode übergeben.</span><span class="sxs-lookup"><span data-stu-id="73de6-115">The following code example demonstrates how the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> property is used to pass information to a callback method.</span></span> <span data-ttu-id="73de6-116">Der letzte Parameter von der `BeginInvoke` Methodenaufruf ist eine Formatzeichenfolge, die die Callback-Methode, die zum Formatieren einer ausgabemeldung verwendet.</span><span class="sxs-lookup"><span data-stu-id="73de6-116">The last parameter of the `BeginInvoke` method call is a format string, which the callback method uses to format an output message.</span></span>  
  
 <span data-ttu-id="73de6-117">Das Beispiel besteht aus zwei Klassen: die Klasse enthält die Methode, die asynchron aufgerufen wird und die Klasse enthält die `Main` -Methode, die den Aufruf ausführt.</span><span class="sxs-lookup"><span data-stu-id="73de6-117">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="73de6-118">Weitere Informationen zur Funktionsweise von diesem Rückruf-Beispiel, und weitere Beispiele für asynchrones Aufrufen von Methoden mit Delegaten finden Sie [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="73de6-118">For more information about how this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="73de6-119">Implementieren Sie diese Eigenschaft, um den Aufrufer der einen asynchronen Vorgang zum Abrufen einer der Anwendung definiertes Objekt angegeben wird, zu Beginn des Vorgangs zu ermöglichen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-119">Implement this property to allow the caller of an asynchronous operation to obtain an application-defined object specified at the start of the operation.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="73de6-120">Dieses Objekt kann zum Übergeben von Zustandsinformationen für den asynchronen Vorgang ein <see cref="T:System.AsyncCallback" /> , die Sie bereitstellen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-120">This object can be used to pass state information for the asynchronous operation to an <see cref="T:System.AsyncCallback" /> that you provide.</span>
            </span>
          </para>
        </block>
        <altmember cref="T:System.AsyncCallback" />
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73de6-121">Ruft einen <see cref="T:System.Threading.WaitHandle" /> ab, der verwendet wird, um auf den Abschluss eines asynchronen Vorgangs zu warten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73de6-121">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73de6-122">Ein <see cref="T:System.Threading.WaitHandle" />, der verwendet wird, um auf den Abschluss eines asynchronen Vorgangs zu warten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73de6-122">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73de6-123">Der Rückgabewert kann der Client warten, bis ein asynchroner Vorgang abgeschlossen statt Abruf <xref:System.IAsyncResult.IsCompleted%2A> , bis die Operation abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="73de6-123">The return value allows the client to wait for an asynchronous operation to complete instead of polling <xref:System.IAsyncResult.IsCompleted%2A> until the operation concludes.</span></span> <span data-ttu-id="73de6-124">Der Rückgabewert verwendet werden kann, zum Ausführen einer <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, oder <xref:System.Threading.WaitHandle.WaitAll%2A> Vorgang.</span><span class="sxs-lookup"><span data-stu-id="73de6-124">The return value can be used to perform a <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, or <xref:System.Threading.WaitHandle.WaitAll%2A> operation.</span></span>  
  
 <span data-ttu-id="73de6-125">Die common Language Runtime stellt eine Reihe von wartbare Objekte repräsentieren, bereit, z. B. <xref:System.Threading.ManualResetEvent>, <xref:System.Threading.AutoResetEvent>, und <xref:System.Threading.Mutex>, die Win32-Synchronisierungsprimitive widerspiegeln.</span><span class="sxs-lookup"><span data-stu-id="73de6-125">The common language runtime supplies a number of waitable objects, such as <xref:System.Threading.ManualResetEvent>, <xref:System.Threading.AutoResetEvent>, and <xref:System.Threading.Mutex>, all of which mirror Win32 synchronization primitives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73de6-126">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.IAsyncResult.AsyncWaitHandle%2A> die abzurufende Eigenschaft eine <xref:System.Threading.WaitHandle>, und Warten eines asynchronen Aufrufs für einen Delegaten auf.</span><span class="sxs-lookup"><span data-stu-id="73de6-126">The following example demonstrates how to use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="73de6-127">Das <xref:System.Threading.WaitHandle> wird bei Beendigung des asynchronen Aufrufs signalisiert, und durch Aufrufen der <xref:System.Threading.WaitHandle.WaitOne%2A> -Methode kann darauf gewartet werden.</span><span class="sxs-lookup"><span data-stu-id="73de6-127">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="73de6-128">Das Beispiel besteht aus zwei Klassen: die Klasse enthält die Methode, die asynchron aufgerufen wird und die Klasse enthält die `Main` -Methode, die den Aufruf ausführt.</span><span class="sxs-lookup"><span data-stu-id="73de6-128">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="73de6-129">Weitere Informationen und Beispiele von asynchronen Aufrufen von Methoden mit Delegaten finden Sie unter [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="73de6-129">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="73de6-130">Das Objekt, das implementiert <see cref="T:System.IAsyncResult" /> muss nicht zum Erstellen der <see cref="T:System.Threading.WaitHandle" /> erst die <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> -Eigenschaft schreibgeschützt ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-130">The object that implements <see cref="T:System.IAsyncResult" /> does not need to create the <see cref="T:System.Threading.WaitHandle" /> until the <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> property is read.</span>
            </span>
            <span data-ttu-id="73de6-131">Es ist die Auswahl des dem <see cref="T:System.IAsyncResult" /> Implementierung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-131">It is the choice of the <see cref="T:System.IAsyncResult" /> implementer.</span>
            </span>
            <span data-ttu-id="73de6-132">Jedoch, wenn die Implementierung erstellt <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, kann die Verantwortung für die Implementierung, um zu signalisieren die <see cref="T:System.Threading.WaitHandle" /> endet, das den Wartevorgang zum richtigen Zeitpunkt.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-132">However, if the implementer creates <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, it is the responsibility of the implementer to signal the <see cref="T:System.Threading.WaitHandle" /> that will terminate the wait at the appropriate time.</span>
            </span>
            <span data-ttu-id="73de6-133">Z. B. <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> beendet den Wartevorgang im Namen des Aufrufers, wenn eine asynchron aufgerufene Methode zurückgegeben.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-133">For example, <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> terminates the wait on behalf of the caller when an asynchronously invoked method returns.</span>
            </span>
            <span data-ttu-id="73de6-134">Nach der Erstellung <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> sollten aktiv bleiben, bis der Benutzer die Methode aufruft, der den asynchronen Vorgang abgeschlossen ist.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-134">Once created, <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> should be kept alive until the user calls the method that concludes the asynchronous operation.</span>
            </span>
            <span data-ttu-id="73de6-135">An, die das Objekt hinter Zeit <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> verworfen werden können.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-135">At that time the object behind <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> can be discarded.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="73de6-136">Clients, die warten, bis der Vorgang abgeschlossen ist (im Gegensatz zu abrufen) verwenden diese Eigenschaft, um ein Synchronisierungsobjekt warten auf zu erhalten.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-136">Clients that wait for the operation to complete (as opposed to polling) use this property to obtain a synchronization object to wait on.</span>
            </span>
            <block subset="none" type="note">
              <para>
                <span data-ttu-id="73de6-137">Bei Verwendung der <see langword="BeginInvoke" /> Methode eines Delegaten eine Methode asynchron aufrufen, und erhalten ein Wait-Handle aus den resultierenden <see cref="T:System.IAsyncResult" />, es wird empfohlen, dass Sie das Wait-Handle schließen, sobald Sie ihn verwenden, durch den Aufruf fertig sind die <see cref="M:System.Threading.WaitHandle.Close" /> Methode.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="73de6-137">When you use the <see langword="BeginInvoke" /> method of a delegate to call a method asynchronously and obtain a wait handle from the resulting <see cref="T:System.IAsyncResult" />, we recommend that you close the wait handle as soon as you are finished using it, by calling the <see cref="M:System.Threading.WaitHandle.Close" /> method.</span>
                </span>
                <span data-ttu-id="73de6-138">Wenn Sie einfach alle Verweise auf das Wait-Handle freigeben, werden die Systemressourcen freigegeben, wenn Garbagecollection zurückgefordert wird das Wait-Handle, aber die Garbagecollection arbeitet effizienter, wenn verwerfbare Objekte explizit geschlossen oder freigegeben werden.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="73de6-138">If you simply release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle, but garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</span>
                </span>
                <span data-ttu-id="73de6-139">Weitere Informationen finden Sie in den Ausführungen zur <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />-Eigenschaft.</span>
                <span class="sxs-lookup">
                  <span data-stu-id="73de6-139">For more information, see the <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /> property.</span>
                </span>
              </para>
            </block>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73de6-140">Ruft einen Wert ab, der angibt, ob der asynchrone Vorgang synchron abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73de6-140">Gets a value that indicates whether the asynchronous operation completed synchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73de6-141">
            <see langword="true" />, wenn der asynchrone Vorgang synchron abgeschlossen wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73de6-141">
              <see langword="true" /> if the asynchronous operation completed synchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73de6-142">Wenn die synchrone Beendigung des Aufrufs, in erkannt wird der <xref:System.AsyncCallback> Delegaten, es ist jedoch wahrscheinlich, dass der Thread, der den asynchronen Vorgang initiiert hat. der aktuelle Thread befindet.</span><span class="sxs-lookup"><span data-stu-id="73de6-142">If the synchronous completion of the call is detected in the <xref:System.AsyncCallback> delegate, it is probable that the thread that initiated the asynchronous operation is the current thread.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="73de6-143">Die meisten Implementierungen der <see cref="T:System.IAsyncResult" /> Schnittstelle wird diese Eigenschaft nicht verwenden und zurückgeben sollte <see langword="false" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-143">Most implementers of the <see cref="T:System.IAsyncResult" /> interface will not use this property and should return <see langword="false" />.</span>
            </span>
            <span data-ttu-id="73de6-144">Beginnend mit der [!INCLUDE[net_v45](~/includes/net-v45-md.md)], eine Aufgabe, die erstellt wird die <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> Methode wird nicht abgeschlossen werden, wenn diese Eigenschaft nicht ordnungsgemäß implementiert wird.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-144">Beginning with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], a task that is created with the <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> method will not complete if this property is not implemented correctly.</span>
            </span>
            <span data-ttu-id="73de6-145">Finden Sie unter [Anwendungskompatibilität in 4.5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-145">See [Application Compatibility in 4.5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</span>
            </span>
          </para>
        </block>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="73de6-146">Verwenden Sie diese Eigenschaft, um festzustellen, ob der asynchrone Vorgang synchron abgeschlossen wurde.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-146">Use this property to determine if the asynchronous operation completed synchronously.</span>
            </span>
            <span data-ttu-id="73de6-147">Diese Eigenschaft kann zurückgeben, z. B. <see langword="true" /> für einen asynchronen e/a-Vorgang aus, wenn die e/a-Anforderung klein war.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-147">For example, this property can return <see langword="true" /> for an asynchronous I/O operation if the I/O request was small.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="73de6-148">Ruft einen Wert ab, der angibt, ob der asynchrone Vorgang abgeschlossen wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73de6-148">Gets a value that indicates whether the asynchronous operation has completed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="73de6-149">
            <see langword="true" />, wenn der Vorgang abgeschlossen ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="73de6-149">
              <see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="73de6-150">Wenn diese Eigenschaft ist `true`, Sie können davon ausgehen, es ist keine Ressourcen freigegeben werden dürfen Sie für die Verwendung durch den asynchronen Vorgang zuordnen.</span><span class="sxs-lookup"><span data-stu-id="73de6-150">When this property is `true`, you can assume it is safe to discard any resources you allocate for use by the asynchronous operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="73de6-151">Das folgende Beispiel zeigt, wie Sie mit der <xref:System.IAsyncResult.IsCompleted%2A> Eigenschaft der <xref:System.IAsyncResult> ermitteln, wenn ein asynchroner Aufruf abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="73de6-151">The following example shows how to use the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> to discover when an asynchronous call completes.</span></span> <span data-ttu-id="73de6-152">In diesem Fall erfolgt der asynchrone Aufruf mithilfe der `BeginInvoke` Methode eines Delegaten.</span><span class="sxs-lookup"><span data-stu-id="73de6-152">In this case, the asynchronous call is made by using the `BeginInvoke` method of a delegate.</span></span> <span data-ttu-id="73de6-153">Sie können die <xref:System.IAsyncResult.IsCompleted%2A> Eigenschaft zum Abrufen der Vervollständigung beim Bereitstellen des asynchronen Aufrufs von einem anderen Thread, der die Benutzeroberfläche erfolgt.</span><span class="sxs-lookup"><span data-stu-id="73de6-153">You might use the <xref:System.IAsyncResult.IsCompleted%2A> property to poll for completion when making the asynchronous call from a thread that services the user interface.</span></span> <span data-ttu-id="73de6-154">Durch das Abrufen der Beendigung kann die Verarbeitung vom aufrufenden Thread fortgesetzt werden, während der asynchrone Aufruf für einen <xref:System.Threading.ThreadPool> -Thread ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="73de6-154">Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <xref:System.Threading.ThreadPool> thread.</span></span>  
  
 <span data-ttu-id="73de6-155">Das Beispiel besteht aus zwei Klassen: die Klasse enthält die Methode, die asynchron aufgerufen wird und die Klasse enthält die `Main` -Methode, die den Aufruf ausführt.</span><span class="sxs-lookup"><span data-stu-id="73de6-155">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="73de6-156">Weitere Informationen und Beispiele von asynchronen Aufrufen von Methoden mit Delegaten finden Sie unter [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="73de6-156">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="73de6-157">Den Wert eines privaten Felds oder der internen Tests wird in der Regel als der Wert dieser Eigenschaft zurückgegeben.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-157">Implementers will typically return the value of a private field or internal test as the value of this property.</span>
            </span>
          </para>
        </block>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="73de6-158">Clients, die Abfragen des Vorgangs (im Gegensatz zu auf ein Synchronisierungsobjekt warten) verwenden Sie diese Eigenschaft auf um den Status des Vorgangs zu ermitteln.</span>
            <span class="sxs-lookup">
              <span data-stu-id="73de6-158">Clients that poll for operation status (as opposed to waiting on a synchronization object) use this property to determine the status of the operation.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>