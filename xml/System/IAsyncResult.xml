<Type Name="IAsyncResult" FullName="System.IAsyncResult">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e146db19e5a83c2ef68363fb3b583f92f2c62b48" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69420480" /></Metadata><TypeSignature Language="C#" Value="public interface IAsyncResult" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAsyncResult" />
  <TypeSignature Language="DocId" Value="T:System.IAsyncResult" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAsyncResult" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAsyncResult" />
  <TypeSignature Language="F#" Value="type IAsyncResult = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="d9b43-101">Stellt den Status eines asynchronen Vorgangs dar.</span><span class="sxs-lookup"><span data-stu-id="d9b43-101">Represents the status of an asynchronous operation.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b43-102">Die <xref:System.IAsyncResult> -Schnittstelle wird von Klassen implementiert, die Methoden enthalten, die asynchron agieren können.</span><span class="sxs-lookup"><span data-stu-id="d9b43-102">The <xref:System.IAsyncResult> interface is implemented by classes containing methods that can operate asynchronously.</span></span> <span data-ttu-id="d9b43-103">Dabei handelt es sich um den Rückgabetyp von Methoden, die einen asynchronen Vorgang initiieren, z <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>. b <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>., und es wird an Methoden, die einen asynchronen Vorgang beenden, wie z. b.,</span><span class="sxs-lookup"><span data-stu-id="d9b43-103">It is the return type of methods that initiate an asynchronous operation, such as <xref:System.IO.FileStream.BeginRead%2A?displayProperty=nameWithType>, and it is passed to methods that conclude an asynchronous operation, such as <xref:System.IO.FileStream.EndRead%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d9b43-104"><xref:System.IAsyncResult>Objekte werden auch an Methoden übermittelt, <xref:System.AsyncCallback> die von Delegaten aufgerufen werden, wenn ein asynchroner Vorgang abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="d9b43-104"><xref:System.IAsyncResult> objects are also passed to methods invoked by <xref:System.AsyncCallback> delegates when an asynchronous operation completes.</span></span>  
  
 <span data-ttu-id="d9b43-105">Ein Objekt, das die <xref:System.IAsyncResult> -Schnittstelle unterstützt, speichert Zustandsinformationen für einen asynchronen Vorgang und stellt ein Synchronisierungs Objekt bereit, mit dem Threads signalisiert werden können, wenn der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="d9b43-105">An object that supports the <xref:System.IAsyncResult> interface stores state information for an asynchronous operation and provides a synchronization object to allow threads to be signaled when the operation completes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="d9b43-106">Die <xref:System.Runtime.Remoting.Messaging.AsyncResult> -Klasse ist die Implementierung <xref:System.IAsyncResult> von, die von der `BeginInvoke` -Methode zurückgegeben wird, wenn Sie einen-Delegaten verwenden, um eine Methode asynchron aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="d9b43-106">The <xref:System.Runtime.Remoting.Messaging.AsyncResult> class is the implementation of <xref:System.IAsyncResult> that is returned by the `BeginInvoke` method when you use a delegate to call a method asynchronously.</span></span>  
  
 <span data-ttu-id="d9b43-107">Eine ausführliche Beschreibung der Verwendung der <xref:System.IAsyncResult> -Schnittstelle finden Sie im Thema [Asynchrones Aufrufen synchroner Methoden](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) .</span><span class="sxs-lookup"><span data-stu-id="d9b43-107">For a detailed description of how the <xref:System.IAsyncResult> interface is used, see the [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md) topic.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9b43-108">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> -Eigenschaft zum Abrufen <xref:System.Threading.WaitHandle>eines-Objekts und zum warten auf einen asynchronen Aufruf eines Delegaten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d9b43-108">The following example demonstrates how to use the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="d9b43-109">Das <xref:System.Threading.WaitHandle> wird bei Beendigung des asynchronen Aufrufs signalisiert, und durch Aufrufen der <xref:System.Threading.WaitHandle.WaitOne%2A> -Methode kann darauf gewartet werden.</span><span class="sxs-lookup"><span data-stu-id="d9b43-109">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="d9b43-110">Das Beispiel besteht aus zwei Klassen: der-Klasse, die die Methode enthält, die asynchron aufgerufen wird, und der- `Main` Klasse, die die Methode enthält, die den Aufruf durchführt.</span><span class="sxs-lookup"><span data-stu-id="d9b43-110">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="d9b43-111">Weitere Informationen und weitere Beispiele zum asynchronen Aufrufen von Methoden mithilfe von Delegaten finden Sie unter [Asynchrones Aufrufen synchroner Methoden](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="d9b43-111">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncState : obj" Usage="System.IAsyncResult.AsyncState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9b43-112">Ruft ein benutzerdefiniertes Objekt ab, das einen asynchronen Vorgang qualifiziert oder Informationen darüber enthält.</span><span class="sxs-lookup"><span data-stu-id="d9b43-112">Gets a user-defined object that qualifies or contains information about an asynchronous operation.</span></span></summary>
        <value><span data-ttu-id="d9b43-113">Ein benutzerdefiniertes Objekt, das einen asynchronen Vorgang qualifiziert oder Informationen darüber enthält.</span><span class="sxs-lookup"><span data-stu-id="d9b43-113">A user-defined object that qualifies or contains information about an asynchronous operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b43-114">Diese Eigenschaft gibt das-Objekt zurück, das den letzten Parameter der Methode ist, die einen asynchronen Vorgang initiiert.</span><span class="sxs-lookup"><span data-stu-id="d9b43-114">This property returns the object that is the last parameter of the method that initiates an asynchronous operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9b43-115">Im folgenden Codebeispiel wird veranschaulicht, <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> wie die-Eigenschaft verwendet wird, um Informationen an eine Rückruf Methode zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="d9b43-115">The following code example demonstrates how the <xref:System.Runtime.Remoting.Messaging.AsyncResult.AsyncState%2A> property is used to pass information to a callback method.</span></span> <span data-ttu-id="d9b43-116">Der letzte Parameter des `BeginInvoke` Methoden Aufrufs ist eine Format Zeichenfolge, die von der Rückruf Methode zum Formatieren einer Ausgabe Meldung verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d9b43-116">The last parameter of the `BeginInvoke` method call is a format string, which the callback method uses to format an output message.</span></span>  
  
 <span data-ttu-id="d9b43-117">Das Beispiel besteht aus zwei Klassen: der-Klasse, die die Methode enthält, die asynchron aufgerufen wird, und der- `Main` Klasse, die die Methode enthält, die den Aufruf durchführt.</span><span class="sxs-lookup"><span data-stu-id="d9b43-117">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="d9b43-118">Weitere Informationen zur Funktionsweise dieses Rückruf Beispiels sowie weitere Beispiele zum asynchronen Aufrufen von Methoden mithilfe von Delegaten finden Sie unter [Asynchrones Aufrufen synchroner Methoden](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="d9b43-118">For more information about how this callback example works, and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#5](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/callback.cpp#5)]
[!code-csharp[AsyncDelegateExamples#5](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/callback.cs#5)]
[!code-vb[AsyncDelegateExamples#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/callback.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d9b43-119">Implementieren Sie diese Eigenschaft, um dem Aufrufer eines asynchronen Vorgangs das Abrufen eines Anwendungs definierten Objekts zu ermöglichen, das zu Beginn des Vorgangs angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="d9b43-119">Implement this property to allow the caller of an asynchronous operation to obtain an application-defined object specified at the start of the operation.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="d9b43-120">Dieses Objekt kann verwendet werden, um Zustandsinformationen für den asynchronen Vorgang an ein <see cref="T:System.AsyncCallback" /> -Objekt zu übergeben, das Sie bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="d9b43-120">This object can be used to pass state information for the asynchronous operation to an <see cref="T:System.AsyncCallback" /> that you provide.</span></span></para></block>
        <altmember cref="T:System.AsyncCallback" />
      </Docs>
    </Member>
    <Member MemberName="AsyncWaitHandle">
      <MemberSignature Language="C#" Value="public System.Threading.WaitHandle AsyncWaitHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.WaitHandle AsyncWaitHandle" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.AsyncWaitHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AsyncWaitHandle As WaitHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::WaitHandle ^ AsyncWaitHandle { System::Threading::WaitHandle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AsyncWaitHandle : System.Threading.WaitHandle" Usage="System.IAsyncResult.AsyncWaitHandle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.WaitHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9b43-121">Ruft einen <see cref="T:System.Threading.WaitHandle" /> ab, der verwendet wird, um auf den Abschluss eines asynchronen Vorgangs zu warten.</span><span class="sxs-lookup"><span data-stu-id="d9b43-121">Gets a <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></summary>
        <value><span data-ttu-id="d9b43-122">Ein <see cref="T:System.Threading.WaitHandle" />, der verwendet wird, um auf den Abschluss eines asynchronen Vorgangs zu warten.</span><span class="sxs-lookup"><span data-stu-id="d9b43-122">A <see cref="T:System.Threading.WaitHandle" /> that is used to wait for an asynchronous operation to complete.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b43-123">Der Rückgabewert ermöglicht es dem Client, auf den Abschluss eines asynchronen Vorgangs zu warten, <xref:System.IAsyncResult.IsCompleted%2A> anstatt auf den Abschluss des Vorgangs zu warten.</span><span class="sxs-lookup"><span data-stu-id="d9b43-123">The return value allows the client to wait for an asynchronous operation to complete instead of polling <xref:System.IAsyncResult.IsCompleted%2A> until the operation concludes.</span></span> <span data-ttu-id="d9b43-124">Der Rückgabewert kann verwendet werden, um eine <xref:System.Threading.WaitHandle.WaitOne%2A>- <xref:System.Threading.WaitHandle.WaitAny%2A>,- <xref:System.Threading.WaitHandle.WaitAll%2A> oder-Operation auszuführen.</span><span class="sxs-lookup"><span data-stu-id="d9b43-124">The return value can be used to perform a <xref:System.Threading.WaitHandle.WaitOne%2A>, <xref:System.Threading.WaitHandle.WaitAny%2A>, or <xref:System.Threading.WaitHandle.WaitAll%2A> operation.</span></span>  
  
 <span data-ttu-id="d9b43-125">Der Common Language Runtime stellt eine Reihe von aufnutzbaren Objekten, wie <xref:System.Threading.ManualResetEvent>z <xref:System.Threading.AutoResetEvent>. b <xref:System.Threading.Mutex>., und, bereit, die alle die Win32-Synchronisierungs primitiven spiegeln.</span><span class="sxs-lookup"><span data-stu-id="d9b43-125">The common language runtime supplies a number of waitable objects, such as <xref:System.Threading.ManualResetEvent>, <xref:System.Threading.AutoResetEvent>, and <xref:System.Threading.Mutex>, all of which mirror Win32 synchronization primitives.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9b43-126">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.IAsyncResult.AsyncWaitHandle%2A> -Eigenschaft zum Abrufen <xref:System.Threading.WaitHandle>eines-Objekts und zum warten auf einen asynchronen Aufruf eines Delegaten verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="d9b43-126">The following example demonstrates how to use the <xref:System.IAsyncResult.AsyncWaitHandle%2A> property to get a <xref:System.Threading.WaitHandle>, and how to wait for an asynchronous call on a delegate.</span></span> <span data-ttu-id="d9b43-127">Das <xref:System.Threading.WaitHandle> wird bei Beendigung des asynchronen Aufrufs signalisiert, und durch Aufrufen der <xref:System.Threading.WaitHandle.WaitOne%2A> -Methode kann darauf gewartet werden.</span><span class="sxs-lookup"><span data-stu-id="d9b43-127">The <xref:System.Threading.WaitHandle> is signaled when the asynchronous call completes, and you can wait for it by calling the <xref:System.Threading.WaitHandle.WaitOne%2A> method.</span></span>  
  
 <span data-ttu-id="d9b43-128">Das Beispiel besteht aus zwei Klassen: der-Klasse, die die Methode enthält, die asynchron aufgerufen wird, und der- `Main` Klasse, die die Methode enthält, die den Aufruf durchführt.</span><span class="sxs-lookup"><span data-stu-id="d9b43-128">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="d9b43-129">Weitere Informationen und weitere Beispiele zum asynchronen Aufrufen von Methoden mithilfe von Delegaten finden Sie unter [Asynchrones Aufrufen synchroner Methoden](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="d9b43-129">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#3](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/waithandle.cpp#3)]
[!code-csharp[AsyncDelegateExamples#3](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/waithandle.cs#3)]
[!code-vb[AsyncDelegateExamples#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/WaitHandle.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d9b43-130">Das Objekt, das <see cref="T:System.IAsyncResult" /> implementiert, muss <see cref="T:System.Threading.WaitHandle" /> erst dann erstellen, wenn <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> die-Eigenschaft gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="d9b43-130">The object that implements <see cref="T:System.IAsyncResult" /> does not need to create the <see cref="T:System.Threading.WaitHandle" /> until the <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> property is read.</span></span> <span data-ttu-id="d9b43-131">Es ist die Wahl des <see cref="T:System.IAsyncResult" /> Implementierers.</span><span class="sxs-lookup"><span data-stu-id="d9b43-131">It is the choice of the <see cref="T:System.IAsyncResult" /> implementer.</span></span> <span data-ttu-id="d9b43-132">Wenn der Implementierer jedoch erstellt <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, liegt es in der Verantwortung des Implementierers, dem <see cref="T:System.Threading.WaitHandle" /> zu signalisieren, dass den warte Vorgang zur richtigen Zeit beendet.</span><span class="sxs-lookup"><span data-stu-id="d9b43-132">However, if the implementer creates <see cref="P:System.IAsyncResult.AsyncWaitHandle" />, it is the responsibility of the implementer to signal the <see cref="T:System.Threading.WaitHandle" /> that will terminate the wait at the appropriate time.</span></span> <span data-ttu-id="d9b43-133">Beendet beispielsweise <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> den warte Vorgang im Auftrag des Aufrufers, wenn eine asynchron aufgerufene Methode zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="d9b43-133">For example, <see cref="T:System.Runtime.Remoting.Messaging.AsyncResult" /> terminates the wait on behalf of the caller when an asynchronously invoked method returns.</span></span> <span data-ttu-id="d9b43-134">Nach der Erstellung <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> sollte beibehalten werden, bis der Benutzer die Methode aufruft, die den asynchronen Vorgang beendet.</span><span class="sxs-lookup"><span data-stu-id="d9b43-134">Once created, <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> should be kept alive until the user calls the method that concludes the asynchronous operation.</span></span> <span data-ttu-id="d9b43-135">Zu diesem Zeitpunkt kann das Objekt <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> hinter verworfen werden.</span><span class="sxs-lookup"><span data-stu-id="d9b43-135">At that time the object behind <see cref="P:System.IAsyncResult.AsyncWaitHandle" /> can be discarded.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="d9b43-136">Clients, die auf den Abschluss des Vorgangs warten (im Gegensatz zum Abruf), verwenden diese Eigenschaft zum Abrufen eines Synchronisierungs Objekts, auf das gewartet werden soll.</span><span class="sxs-lookup"><span data-stu-id="d9b43-136">Clients that wait for the operation to complete (as opposed to polling) use this property to obtain a synchronization object to wait on.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="d9b43-137">Wenn Sie die <see langword="BeginInvoke" /> -Methode eines Delegaten verwenden, um eine Methode asynchron aufzurufen und ein Wait-Handle <see cref="T:System.IAsyncResult" />aus der resultierenden abzurufen, empfiehlt es sich, das Wait-Handle zu schließen, sobald Sie die Verwendung abgeschlossen <see cref="M:System.Threading.WaitHandle.Close" /> haben, indem Sie die-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="d9b43-137">When you use the <see langword="BeginInvoke" /> method of a delegate to call a method asynchronously and obtain a wait handle from the resulting <see cref="T:System.IAsyncResult" />, we recommend that you close the wait handle as soon as you are finished using it, by calling the <see cref="M:System.Threading.WaitHandle.Close" /> method.</span></span> <span data-ttu-id="d9b43-138">Wenn Sie einfach alle Verweise auf das Wait-Handle freigeben, werden Systemressourcen freigegeben, wenn Garbage Collection das Wait-Handle zurückgibt, aber Garbage Collection effizienter funktioniert, wenn verwerfbare Objekte explizit geschlossen oder verworfen werden.</span><span class="sxs-lookup"><span data-stu-id="d9b43-138">If you simply release all references to the wait handle, system resources are freed when garbage collection reclaims the wait handle, but garbage collection works more efficiently when disposable objects are explicitly closed or disposed.</span></span> <span data-ttu-id="d9b43-139">Weitere Informationen finden Sie in den Ausführungen zur <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d9b43-139">For more information, see the <see cref="P:System.Runtime.Remoting.Messaging.AsyncResult.AsyncWaitHandle" /> property.</span></span>  
  
</para></block></para></block>
      </Docs>
    </Member>
    <Member MemberName="CompletedSynchronously">
      <MemberSignature Language="C#" Value="public bool CompletedSynchronously { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CompletedSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.CompletedSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompletedSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CompletedSynchronously { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CompletedSynchronously : bool" Usage="System.IAsyncResult.CompletedSynchronously" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9b43-140">Ruft einen Wert ab, der angibt, ob der asynchrone Vorgang synchron abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9b43-140">Gets a value that indicates whether the asynchronous operation completed synchronously.</span></span></summary>
        <value><span data-ttu-id="d9b43-141"><see langword="true" />, wenn der asynchrone Vorgang synchron abgeschlossen wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9b43-141"><see langword="true" /> if the asynchronous operation completed synchronously; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b43-142">Wenn der synchrone Abschluss des Aufrufens im <xref:System.AsyncCallback> Delegaten erkannt wird, ist es wahrscheinlich, dass der Thread, der den asynchronen Vorgang initiiert hat, der aktuelle Thread ist.</span><span class="sxs-lookup"><span data-stu-id="d9b43-142">If the synchronous completion of the call is detected in the <xref:System.AsyncCallback> delegate, it is probable that the thread that initiated the asynchronous operation is the current thread.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d9b43-143">Die meisten Implementierer <see cref="T:System.IAsyncResult" /> der-Schnittstelle verwenden diese Eigenschaft nicht und <see langword="false" />sollten zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="d9b43-143">Most implementers of the <see cref="T:System.IAsyncResult" /> interface will not use this property and should return <see langword="false" />.</span></span> <span data-ttu-id="d9b43-144">Ab wird eine mit der <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> -Methode erstellte Aufgabe nicht fertiggestellt ,wenndieseEigenschaftnichtordnungsgemäßimplementiertwird.[!INCLUDE[net_v45](~/includes/net-v45-md.md)]</span><span class="sxs-lookup"><span data-stu-id="d9b43-144">Beginning with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], a task that is created with the <see cref="M:System.Threading.Tasks.TaskFactory.FromAsync(System.IAsyncResult,System.Action{System.IAsyncResult},System.Threading.Tasks.TaskCreationOptions)" /> method will not complete if this property is not implemented correctly.</span></span> <span data-ttu-id="d9b43-145">Weitere Informationen finden Sie [unter Anwendungs Kompatibilität in 4,5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</span><span class="sxs-lookup"><span data-stu-id="d9b43-145">See [Application Compatibility in 4.5](~/docs/framework/migration-guide/application-compatibility-in-the-net-framework-4-5.md).</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="d9b43-146">Verwenden Sie diese Eigenschaft, um zu bestimmen, ob der asynchrone Vorgang synchron abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9b43-146">Use this property to determine if the asynchronous operation completed synchronously.</span></span> <span data-ttu-id="d9b43-147">Diese Eigenschaft kann z. b. <see langword="true" /> für einen asynchronen e/a-Vorgang zurückgeben, wenn die e/a-Anforderung klein war.</span><span class="sxs-lookup"><span data-stu-id="d9b43-147">For example, this property can return <see langword="true" /> for an asynchronous I/O operation if the I/O request was small.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="IsCompleted">
      <MemberSignature Language="C#" Value="public bool IsCompleted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompleted" />
      <MemberSignature Language="DocId" Value="P:System.IAsyncResult.IsCompleted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompleted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompleted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsCompleted : bool" Usage="System.IAsyncResult.IsCompleted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d9b43-148">Ruft einen Wert ab, der angibt, ob der asynchrone Vorgang abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="d9b43-148">Gets a value that indicates whether the asynchronous operation has completed.</span></span></summary>
        <value><span data-ttu-id="d9b43-149"><see langword="true" />, wenn der Vorgang abgeschlossen ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d9b43-149"><see langword="true" /> if the operation is complete; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d9b43-150">Wenn diese Eigenschaft ist `true`, können Sie davon ausgehen, dass es sicher ist, alle Ressourcen zu verwerfen, die Sie für die Verwendung durch den asynchronen Vorgang zuordnen.</span><span class="sxs-lookup"><span data-stu-id="d9b43-150">When this property is `true`, you can assume it is safe to discard any resources you allocate for use by the asynchronous operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d9b43-151">Im folgenden Beispiel wird gezeigt, wie die <xref:System.IAsyncResult.IsCompleted%2A> -Eigenschaft <xref:System.IAsyncResult> von verwendet wird, um zu ermitteln, wann ein asynchroner-Vorgang abgeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="d9b43-151">The following example shows how to use the <xref:System.IAsyncResult.IsCompleted%2A> property of the <xref:System.IAsyncResult> to discover when an asynchronous call completes.</span></span> <span data-ttu-id="d9b43-152">In diesem Fall wird der asynchrone Aufruf mithilfe der `BeginInvoke` -Methode eines Delegaten durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="d9b43-152">In this case, the asynchronous call is made by using the `BeginInvoke` method of a delegate.</span></span> <span data-ttu-id="d9b43-153">Sie können die <xref:System.IAsyncResult.IsCompleted%2A> -Eigenschaft verwenden, um die Vervollständigung abzufragen, wenn Sie den asynchronen Aufrufs von einem Thread ausführen, der die Benutzeroberfläche nutzt.</span><span class="sxs-lookup"><span data-stu-id="d9b43-153">You might use the <xref:System.IAsyncResult.IsCompleted%2A> property to poll for completion when making the asynchronous call from a thread that services the user interface.</span></span> <span data-ttu-id="d9b43-154">Durch das Abrufen der Beendigung kann die Verarbeitung vom aufrufenden Thread fortgesetzt werden, während der asynchrone Aufruf für einen <xref:System.Threading.ThreadPool> -Thread ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d9b43-154">Polling for completion allows the calling thread to continue executing while the asynchronous call executes on a <xref:System.Threading.ThreadPool> thread.</span></span>  
  
 <span data-ttu-id="d9b43-155">Das Beispiel besteht aus zwei Klassen: der-Klasse, die die Methode enthält, die asynchron aufgerufen wird, und der- `Main` Klasse, die die Methode enthält, die den Aufruf durchführt.</span><span class="sxs-lookup"><span data-stu-id="d9b43-155">The example consists of two classes: the class that contains the method that is called asynchronously, and the class that contains the `Main` method that makes the call.</span></span>  
  
 <span data-ttu-id="d9b43-156">Weitere Informationen und weitere Beispiele zum asynchronen Aufrufen von Methoden mithilfe von Delegaten finden Sie unter [Asynchrones Aufrufen synchroner Methoden](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="d9b43-156">For more information and more examples of calling methods asynchronously by using delegates, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 [!code-cpp[AsyncDelegateExamples#1](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/TestMethod.cpp#1)]
 [!code-csharp[AsyncDelegateExamples#1](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/TestMethod.cs#1)]
 [!code-vb[AsyncDelegateExamples#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/TestMethod.vb#1)]  
[!code-cpp[AsyncDelegateExamples#4](~/samples/snippets/cpp/VS_Snippets_CLR/AsyncDelegateExamples/cpp/polling.cpp#4)]
[!code-csharp[AsyncDelegateExamples#4](~/samples/snippets/csharp/VS_Snippets_CLR/AsyncDelegateExamples/CS/polling.cs#4)]
[!code-vb[AsyncDelegateExamples#4](~/samples/snippets/visualbasic/VS_Snippets_CLR/AsyncDelegateExamples/VB/polling.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="d9b43-157">Implementierer geben in der Regel den Wert eines privaten Felds oder internen Tests als Wert dieser Eigenschaft zurück.</span><span class="sxs-lookup"><span data-stu-id="d9b43-157">Implementers will typically return the value of a private field or internal test as the value of this property.</span></span></para></block>
        <block subset="none" type="usage"><para><span data-ttu-id="d9b43-158">Clients, die den Vorgangs Statusabfragen (im Gegensatz zum warten auf ein Synchronisierungs Objekt) verwenden diese Eigenschaft, um den Status des Vorgangs zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="d9b43-158">Clients that poll for operation status (as opposed to waiting on a synchronization object) use this property to determine the status of the operation.</span></span></para></block>
      </Docs>
    </Member>
  </Members>
</Type>
