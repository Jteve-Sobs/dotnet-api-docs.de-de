<Type Name="TimeZoneInfo+AdjustmentRule" FullName="System.TimeZoneInfo+AdjustmentRule">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2748587e93b6f3c52f7f13b291155a52c54f8e98" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78681403" /></Metadata><TypeSignature Language="C#" Value="public sealed class TimeZoneInfo.AdjustmentRule : IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit TimeZoneInfo/AdjustmentRule extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo/AdjustmentRule&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo.AdjustmentRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeZoneInfo.AdjustmentRule&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo.AdjustmentRule), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: ref class TimeZoneInfo::AdjustmentRule sealed : IEquatable&lt;TimeZoneInfo::AdjustmentRule ^&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo.AdjustmentRule = class&#xA;    interface IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netstandard-2.0;netstandard-2.1" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo.AdjustmentRule = class&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable&#xA;    interface IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi serializable sealed beforefieldinit TimeZoneInfo/AdjustmentRule extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo/AdjustmentRule&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo.AdjustmentRule = class&#xA;    interface IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;&#xA;    interface ISerializable&#xA;    interface IDeserializationCallback" FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo+AdjustmentRule&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;xamarinandroid-7.1;xamarinios-10.8;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Bietet Informationen zur Anpassung der Zeitzone, z. B. die Umstellung auf die Sommerzeit und wieder zurück.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.TimeZoneInfo.AdjustmentRule>-Klasse definiert das effektive Start-und Enddatum einer bestimmten Zeitänderung in bzw. von der Sommerzeit sowie das Delta (der genaue Betrag, um den die Änderung der Standardzeit der Zeitzone bewirkt). Außerdem geben zwei Eigenschaften <xref:System.TimeZoneInfo.TransitionTime> Objekte zurück, die definieren, wann jeder Übergang zu und von der Standardzeit erfolgt.  
  
> [!NOTE]
>  Eine Instanz der <xref:System.TimeZoneInfo.AdjustmentRule>-Klasse ist unveränderlich. Nachdem ein Objekt erstellt wurde, können seine Werte nicht geändert werden.  
  
 Um ein <xref:System.TimeZoneInfo.AdjustmentRule>-Objekt zu erstellen, rufen Sie die `static` (`Shared` in Visual Basic) <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A?displayProperty=nameWithType>-Methode auf. Sie können dann ein Array von <xref:System.TimeZoneInfo.AdjustmentRule>-Objekten für zwei der über Ladungen der <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>-Methode bereitstellen. Rufen Sie zum Abrufen der Anpassungsregeln einer bestimmten Zeitzone die <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType>-Methode auf, die ein Array von <xref:System.TimeZoneInfo.AdjustmentRule> Objekten zurückgibt.  
  
   
  
## Examples  
 Im folgenden Beispiel werden alle Zeitzonen abgerufen, die im lokalen System definiert sind, und es werden vollständige Informationen zu den entsprechenden Anpassungsregeln angezeigt.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#3)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#3)]  
  
 Im folgenden finden Sie einen kleinen Teil der Ausgabe, der im Beispiel generiert wird. Die genaue Ausgabe variiert abhängig vom Betriebssystem und dem Datum, an dem das Beispiel ausgeführt wird.  
  
```  
Morocco Standard Time Adjustment rules  
   Adjustment rule #1  
      Start Date: Tuesday, January 01, 2008  
      End Date: Wednesday, December 31, 2008  
      Time Change: 1:00 hours  
      Annual Start: The Last Saturday of May at 11:59 PM  
      Annual End: The Last Sunday of August at 11:59 PM  
   Adjustment rule #2  
      Start Date: Thursday, January 01, 2009  
      End Date: Thursday, December 31, 2009  
      Time Change: 1:00 hours  
      Annual Start: The Last Sunday of May at 11:59 PM  
      Annual End: The Third Thursday of August at 11:59 PM  
  
Coordinated Universal Time has no adjustment rules  
  
GMT Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 1:00 AM  
   Annual End: The Last Sunday of October at 2:00 AM  
  
Greenwich Standard Time has no adjustment rules  
  
W. Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Romance Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central European Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
W. Central Africa Standard Time has no adjustment rules  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName="CreateAdjustmentRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.AdjustmentRule CreateAdjustmentRule (DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo.TransitionTime daylightTransitionStart, TimeZoneInfo.TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo/AdjustmentRule CreateAdjustmentRule(valuetype System.DateTime dateStart, valuetype System.DateTime dateEnd, valuetype System.TimeSpan daylightDelta, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionStart, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAdjustmentRule (dateStart As DateTime, dateEnd As DateTime, daylightDelta As TimeSpan, daylightTransitionStart As TimeZoneInfo.TransitionTime, daylightTransitionEnd As TimeZoneInfo.TransitionTime) As TimeZoneInfo.AdjustmentRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::AdjustmentRule ^ CreateAdjustmentRule(DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo::TransitionTime daylightTransitionStart, TimeZoneInfo::TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="F#" Value="static member CreateAdjustmentRule : DateTime * DateTime * TimeSpan * TimeZoneInfo.TransitionTime * TimeZoneInfo.TransitionTime -&gt; TimeZoneInfo.AdjustmentRule" Usage="System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule (dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+AdjustmentRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateStart" Type="System.DateTime" />
        <Parameter Name="dateEnd" Type="System.DateTime" />
        <Parameter Name="daylightDelta" Type="System.TimeSpan" />
        <Parameter Name="daylightTransitionStart" Type="System.TimeZoneInfo+TransitionTime" />
        <Parameter Name="daylightTransitionEnd" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="dateStart">Das Gültigkeitsdatum der Anpassungsregel. Wenn der Wert des <paramref name="dateStart" />-Parameters <see langword="DateTime.MinValue.Date" /> entspricht, ist dies die erste Anpassungsregel, die für eine Zeitzone gültig ist.</param>
        <param name="dateEnd">Das letzte Datum, an dem die Anpassungsregel aktiv ist. Wenn der Wert des <paramref name="dateEnd" />-Parameters <see langword="DateTime.MaxValue.Date" /> ist, besitzt die Anpassungsregel kein Enddatum.</param>
        <param name="daylightDelta">Die Zeitänderung, die sich durch die Anpassung ergibt. Dieser Wert wird zur <see cref="P:System.TimeZoneInfo.BaseUtcOffset" />-Eigenschaft der Zeitzone addiert, um die richtige Sommerzeitabweichung von der koordinierten Weltzeit (UTC) zu erhalten. Dieser Wert kann zwischen -14 und 14 liegen.</param>
        <param name="daylightTransitionStart">Ein Objekt, das den Beginn der Sommerzeit definiert.</param>
        <param name="daylightTransitionEnd">Ein Objekt, das das Ende der Sommerzeit definiert.</param>
        <summary>Erstellt eine neue Anpassungsregel für eine bestimmte Zeitzone.</summary>
        <returns>Ein Objekt, das die neue Anpassungsregel darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode können Sie eine oder mehrere Anpassungsregeln für eine benutzerdefinierte Zeitzone erstellen. Ein Array der <xref:System.TimeZoneInfo.AdjustmentRule>-Objekte, die von Aufrufen dieser Methode zurückgegeben werden, kann dann als `adjustmentRules` Parameter an zwei über Ladungen der <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>-Methode übergeben werden. Dieses Verfahren wird in diesem Beispiel veranschaulicht.  
  
> [!NOTE]
>  Die <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A>-Methode kann nur verwendet werden, um eine Anpassungs Regel für eine neue Zeitzone zu definieren. Sie kann nicht verwendet werden, um eine Anpassungs Regel für eine vorhandene Zeitzone zu ändern.  
  
 Die `dateStart`-und `dateEnd` Parameter müssen Datumswerte ohne Zeitkomponente sein, oder es wird ein <xref:System.ArgumentException> ausgelöst. Die Zeitkomponente kann entfernt werden, indem Sie einen <xref:System.DateTime> Wert aus der <xref:System.DateTime.Date%2A>-Eigenschaft von Datum und Uhrzeit abrufen, wie in den folgenden-Anweisungen gezeigt:  
  
```  
DateTime.MinValue.Date  
DateTime.MaxValue.Date  
DateTime.Now.Date   
dateVariable.Date  
```  
  
 Die <xref:System.DateTime.Kind%2A>-Eigenschaft des Parameters `dateStart` und `dateEnd` muss ebenfalls <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>sein.  
  
 Der Wert des `daylightDelta`-Parameters kann zwischen-14 und 14 liegen. Die Summe des `daylightDelta`-Parameters und des `baseUtcOffset`-Parameters, die beim Aufrufen der <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType>-Methode verwendet werden, muss ebenfalls zwischen-14 und 14 liegen, oder es wird ein <xref:System.InvalidTimeZoneException> ausgelöst.  
  
> [!NOTE]
>  Mit dem `daylightDelta`-Parameter wird der Unterschied zwischen der Standardzeit einer Zeitzone und der Sommerzeit definiert. Es ist nicht vorgesehen, den Standardzeit Offset der Zeitzone von der koordinierten Weltzeit (UTC) zu definieren. Die <xref:System.TimeZoneInfo>-Klasse geht davon aus, dass dieser Offset von UTC während der gesamten Lebensdauer der Zeitzone konstant ist. Um eine Änderung in einer Zeit Zonen Abweichung von UTC widerzuspiegeln, die nicht durch die Anwendung einer Anpassungs Regel verursacht wird, müssen Sie die <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>-Methode verwenden, um eine neue benutzerdefinierte Zeitzone zu erstellen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Alternative zentrale Standard Zeitzone erstellt, und es werden drei Anpassungsregeln für die Zeiträume 1976-1986, 1987-2006 und 2007 und darüber definiert. Diese Regeln werden einem generischen <xref:System.Collections.Generic.List%601> Objekt hinzugefügt, dessen Elemente dann in ein <xref:System.TimeZoneInfo.AdjustmentRule> Array kopiert werden. Dieses Array wird dann beim Abrufen der <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%29?displayProperty=nameWithType>-Methode verwendet.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#1)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <see cref="P:System.DateTime.Kind" />-Eigenschaft des <paramref name="dateStart" />- oder <paramref name="dateEnd" />-Parameters ist nicht gleich <see cref="F:System.DateTimeKind.Unspecified" />.  
  
Oder 
Der <paramref name="daylightTransitionStart" />-Parameter ist identisch mit dem <paramref name="daylightTransitionEnd" />-Parameter.  
  
Oder 
Der <paramref name="dateStart" />- oder <paramref name="dateEnd" />-Parameter enthält einen Tageszeitwert.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="dateEnd" /> liegt vor <paramref name="dateStart" />.  
  
Oder 
 <paramref name="daylightDelta" /> ist kleiner als -14 oder größer als 14.  
  
Oder 
Die <see cref="P:System.TimeSpan.Milliseconds" />-Eigenschaft des <paramref name="daylightDelta" />-Parameters ist nicht gleich 0.  
  
Oder 
Die <see cref="P:System.TimeSpan.Ticks" />-Eigenschaft des <paramref name="daylightDelta" />-Parameters entspricht keiner ganzen Zahl von Sekunden.</exception>
      </Docs>
    </Member>
    <Member MemberName="DateEnd">
      <MemberSignature Language="C#" Value="public DateTime DateEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateEnd As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateEnd { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateEnd : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datum ab, zu dem die Gültigkeit der Anpassungsregel aufgehoben wird.</summary>
        <value>Ein <see cref="T:System.DateTime" />-Wert, der das Enddatum der Anpassungsregel angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A>-Eigenschaft ist ein Datumswert ohne Zeitkomponente.  
  
 Da das Enddatum der aktuellen Anpassungs Regel in der Regel nicht bekannt ist, können Sie `DateTime.MaxValue.Date` der Eigenschaft <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> zuweisen, wenn Sie eine benutzerdefinierte Anpassungs Regel erstellen.  
  
> [!IMPORTANT]
>  Sofern es keinen überzeugenden Grund dafür gibt, sollten Sie das Enddatum der Anpassungs Regel so definieren, dass es innerhalb des Zeitintervalls auftritt, in dem die Zeitzone die Normalzeit beachtet. Sofern es keinen überzeugenden Grund gibt, sollten Sie das Enddatum der Anpassungs Regel nicht so definieren, dass es innerhalb des Zeitintervalls auftritt, in dem die Zeitzone die Sommerzeit beobachtet. Wenn z. b. der Übergang einer Zeitzone von Sommerzeit am dritten Sonntag im März stattfindet und der Übergang zur Sommerzeit am ersten Sonntag im Oktober stattfindet, sollte das effektive Enddatum der Anpassungs Regel nicht der 31. Dezember eines bestimmten Jahr, da dieses Datum innerhalb des Zeitraums der Sommerzeit liegt.  
  
 Die Registrierung in Windows XP definiert standardmäßig eine einzelne Anpassungs Regel, deren Enddatum Freitag, 31. Dezember 9999 (der Wert `DateTime.MaxValue.Date`) für jede Zeitzone ist. Für Zeitzonen in der USA definiert die Registrierung in Windows Vista zwei Anpassungsregeln:  
  
-   Montag, 01. Januar 0001, bis Sonntag, 31. Dezember 2006.  
  
-   Montag, 01. Januar 2007, bis Freitag, 31. Dezember 9999.  
  
 Dies bedeutet, dass Zeit Zonen Anpassungsregeln, die in der Registrierung gespeichert sind, für die Durchführung aktueller Zeit Zonen bezogener Vorgänge nützlich sind. Sie können jedoch nicht zuverlässig zum Abrufen von Verlaufs Zeitzoneninformationen verwendet werden. Informationen zum Definieren einer benutzerdefinierten Zeitzone mit mehreren Anpassungsregeln, die in einer historischen Zeit Zonen fähigen Anwendung verwendet werden können, finden Sie unter Gewusst [wie: Erstellen von Zeitzonen mit Anpassungsregeln](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).  
  
   
  
## Examples  
 Im folgenden Beispiel werden Informationen zu allen Zeitzonen angezeigt, die in der Systemregistrierung des lokalen Computers definiert sind, einschließlich der Start-und Enddaten der Anpassungsregeln.  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateStart">
      <MemberSignature Language="C#" Value="public DateTime DateStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateStart As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateStart { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateStart : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datum ab, zu dem die Anpassungsregel wirksam wird.</summary>
        <value>Ein <see cref="T:System.DateTime" />-Wert, der angibt, wann die Anpassungsregel wirksam wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert der <xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A>-Eigenschaft ist ein Datumswert ohne Zeitkomponente. Er definiert das Datum, an dem eine bestimmte Anpassungs Regel wirksam wird.  Dies ist das Datum, an dem eine Reihe von Übergängen (die in der Regel durch einen Übergang zur Sommerzeit und einen Übergang zurück zur Standardzeit definiert werden) wirksam werden. Beispielsweise kann eine Anpassungs Regel ab dem 1. Januar 2017 wirksam werden, die einen Übergang zur Sommerzeit am zweiten Sonntag im März und für einen Übergang zurück zur Standardzeit am ersten Sonntag im November bereitstellt. Beachten Sie, dass das Startdatum der Anpassungs Regel nicht an das Datum des ersten Übergangs gebunden ist.  
  
 Sie können `DateTime.MinValue.Date` der Eigenschaft <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> zuweisen, wenn Sie eine benutzerdefinierte Anpassungs Regel für die Verwendung in einer Zeit Zonen fähigen Anwendung erstellen, die nicht mit historischen Zeitzoneninformationen arbeiten muss.  
  
> [!IMPORTANT]
>  Sofern es keinen überzeugenden Grund dafür gibt, sollten Sie das Startdatum der Anpassungs Regel so definieren, dass es innerhalb des Zeitintervalls auftritt, in dem die Zeitzone die Normalzeit beachtet. Sofern es keinen überzeugenden Grund gibt, sollten Sie das Startdatum der Anpassungs Regel nicht so definieren, dass es innerhalb des Zeitintervalls auftritt, in dem die Zeitzone die Sommerzeit beobachtet. Wenn z. b. der Übergang einer Zeitzone von Sommerzeit am dritten Sonntag im März stattfindet und der Übergang zur Sommerzeit am ersten Sonntag im Oktober stattfindet, sollte das effektive Startdatum der Anpassungs Regel nicht der 1. Januar eines bestimmten Jahr, da dieses Datum innerhalb des Zeitraums der Sommerzeit liegt.  
  
 Standardmäßig definiert die Registrierung in Windows XP eine einzelne Anpassungs Regel, deren Startdatum Montag, 01. Januar 0001 (der Wert `DateTime.MinValue.Date`) für jede Zeitzone ist. Für Zeitzonen in der USA definiert die Registrierung in Windows Vista zwei Anpassungsregeln:  
  
-   Montag, 01. Januar 0001, bis Sonntag, 31. Dezember 2006.  
  
-   Montag, 01. Januar 2007, bis Freitag, 31. Dezember 9999.  
  
 Dies bedeutet, dass Zeit Zonen Anpassungsregeln, die in der Registrierung gespeichert sind, für die Durchführung aktueller Zeit Zonen bezogener Vorgänge nützlich sind. Sie können jedoch nicht zuverlässig zum Abrufen von Verlaufs Zeitzoneninformationen verwendet werden. Informationen zum Definieren einer benutzerdefinierten Zeitzone mit mehreren Anpassungsregeln, die in einer historischen Zeit Zonen fähigen Anwendung verwendet werden können, finden Sie unter Gewusst [wie: Erstellen von Zeitzonen mit Anpassungsregeln](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).  
  
   
  
## Examples  
 Im folgenden Beispiel werden Informationen zu allen Zeitzonen angezeigt, die in der Systemregistrierung des lokalen Computers definiert sind, einschließlich der Start-und Enddaten der Anpassungsregeln.  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightDelta">
      <MemberSignature Language="C#" Value="public TimeSpan DaylightDelta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DaylightDelta" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightDelta As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DaylightDelta { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightDelta : TimeSpan" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Länge des Zeitraums ab, aus dem die Sommerzeit der Zeitzone gebildet wird. Dieser Zeitraum wird zum Offset der Zeitzone von der koordinierten Weltzeit (Coordinated Universal Time, UTC) addiert.</summary>
        <value>Ein <see cref="T:System.TimeSpan" />-Objekt, das angibt, wie viel Zeit den Standardzeitänderungen als Ergebnis der Anpassungsregel hinzugefügt werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Formel definiert die Sommerzeit einer Zeitzone:  
  
```  
TimeZoneTime = BaseUtcOffset + DaylightDelta + UtcTime  
```  
  
 Der Wert der <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A>-Eigenschaft kann zwischen 14 Stunden und-14 Stunden liegen.  
  
> [!NOTE]
>  Die <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A>-Eigenschaft misst den Unterschied zwischen der Standardzeit und der Sommerzeit der Zeitzone. Es gilt nicht für Änderungen in der Standardabweichung einer Zeitzone von der koordinierten Weltzeit (UTC). Um eine Zeitzone darzustellen, deren Standardzeit Offset von UTC geändert wurde, müssen Sie die <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A>-Methode zum Erstellen einer neuen Zeitzone aufzurufen.  
  
 Der häufigste Wert der <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A>-Eigenschaft ist 1,0 Stunden. Die Anwendung der Anpassungs Regel für die Sommerzeit erhöht die Zeit Zonen Abweichung von der koordinierten Weltzeit (UTC) um eine Stunde.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionEnd">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionEnd As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionEnd { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionEnd : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Informationen über den jährlichen Übergang von der Sommerzeit zurück zur Normalzeit ab.</summary>
        <value>Ein <see cref="T:System.TimeZoneInfo.TransitionTime" />-Objekt, das den jährlichen Übergang von der Sommerzeit zurück zur Normalzeit der Zeitzone definiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.TimeZoneInfo.TransitionTime> Objekt, das von der <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A>-Eigenschaft zurückgegeben wird, definiert entweder eine Regel für festes Datum oder eine Gleit Komma Regel für die Rückkehr zur Standardzeit. Eine Regel für festes Datum gibt den Monat, den Tag und die Uhrzeit an, zu der der Übergang stattfindet. Eine Gleit Komma Regel liefert den Monat, die Woche, den Wochentag und die Tageszeit, zu der der Übergang stattfindet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionStart">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionStart As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionStart { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionStart : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Informationen über den jährlichen Übergang von der Normalzeit zur Sommerzeit ab.</summary>
        <value>Ein <see cref="T:System.TimeZoneInfo.TransitionTime" />-Objekt, das den jährlichen Übergang von der Normalzeit zur Sommerzeit einer Zeitzone definiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.TimeZoneInfo.TransitionTime> Objekt, das von der <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A>-Eigenschaft zurückgegeben wird, definiert entweder eine Regel für festes Datum oder eine Gleit Komma Regel für den Übergang zur Sommerzeit. Eine Regel für festes Datum gibt den Monat, den Tag und die Uhrzeit an, zu der der Übergang stattfindet. Eine Gleit Komma Regel bietet den Monat, die Woche, den Wochentag und die Tageszeit, zu der der Übergang stattfindet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo.AdjustmentRule other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.TimeZoneInfo/AdjustmentRule other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo.AdjustmentRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo::AdjustmentRule ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeZoneInfo.AdjustmentRule -&gt; bool" Usage="adjustmentRule.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo+AdjustmentRule" />
      </Parameters>
      <Docs>
        <param name="other">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
        <summary>Bestimmt, ob das aktuelle <see cref="T:System.TimeZoneInfo.AdjustmentRule" />-Objekt und das zweite <see cref="T:System.TimeZoneInfo.AdjustmentRule" />-Objekt identisch sind.</summary>
        <returns><see langword="true" />, wenn beide <see cref="T:System.TimeZoneInfo.AdjustmentRule" />-Objekte gleiche Werte aufweisen, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um zu ermitteln, ob zwei <xref:System.TimeZoneInfo.AdjustmentRule> Objekte gleich sind, vergleicht die <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29>-Methode die Element Werte jedes Objekts. Zwei Anpassungsregeln sind gleich, wenn Sie über die gleichen Gültigkeitsdatums Angaben, das gleiche Delta und identische Werte für die <xref:System.TimeZoneInfo.TransitionTime> Objekte verfügen, die von ihren <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A>-und <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A>-Eigenschaften zurückgegeben werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29?displayProperty=nameWithType>-Methode aufgerufen, um die Anpassungsregeln für Central Standard Time mit denen für Kanada Central Standard Time und Mexiko Normalzeit zu vergleichen.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#2)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#2)]  
  
 In diesem Code wird die folgende Ausgabe in der Konsole angezeigt:  
  
```  
Comparing Central Standard Time rule for 1/1/0001 to 12/31/9999 with:  
   Canada Central Standard Time has no adjustment rules.  
   Mexican CST for 1/1/0001 to 12/31/9999: Equal  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="adjustmentRule.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird als Hashfunktion für Hashalgorithmen und Datenstrukturen wie Hashtabellen verwendet.</summary>
        <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die als Hashcode für das aktuelle <see cref="T:System.TimeZoneInfo.AdjustmentRule" />-Objekt verwendet wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.IDeserializationCallback.OnDeserialization : obj -&gt; unit&#xA;override this.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization : obj -&gt; unit" Usage="adjustmentRule.System.Runtime.Serialization.IDeserializationCallback.OnDeserialization sender" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">Das Objekt, das den Rückruf initiiert hat. Die Funktionen für diesen Parameter sind derzeit nicht implementiert.</param>
        <summary>Wird ausgeführt, wenn die Deserialisierung eines <see cref="T:System.TimeZoneInfo.AdjustmentRule" />-Objekts abgeschlossen ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberSignature Language="F#" Value="abstract member System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.System.Runtime.Serialization.ISerializable.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="adjustmentRule.System.Runtime.Serialization.ISerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netcore-2.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinmac-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Das -Objekt, das mit Daten aufgefüllt werden soll.</param>
        <param name="context">Das Ziel dieser Serialisierung (siehe <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Füllt ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den Daten auf, die zum Serialisieren dieses Objekts erforderlich sind.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
