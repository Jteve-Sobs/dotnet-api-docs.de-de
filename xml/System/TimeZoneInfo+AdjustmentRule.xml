<Type Name="TimeZoneInfo+AdjustmentRule" FullName="System.TimeZoneInfo+AdjustmentRule">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06bb1daa232fe103b87bac89e6404dbcc1192a1e" />
    <Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/29/2018" />
    <Meta Name="ms.locfileid" Value="52613188" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TimeZoneInfo.AdjustmentRule : IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;, System.Runtime.Serialization.IDeserializationCallback, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi sealed beforefieldinit TimeZoneInfo/AdjustmentRule extends System.Object implements class System.IEquatable`1&lt;class System.TimeZoneInfo/AdjustmentRule&gt;, class System.Runtime.Serialization.IDeserializationCallback, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.TimeZoneInfo.AdjustmentRule" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TimeZoneInfo.AdjustmentRule&#xA;Implements IDeserializationCallback, IEquatable(Of TimeZoneInfo.AdjustmentRule), ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public: ref class TimeZoneInfo::AdjustmentRule sealed : IEquatable&lt;TimeZoneInfo::AdjustmentRule ^&gt;, System::Runtime::Serialization::IDeserializationCallback, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type TimeZoneInfo.AdjustmentRule = class&#xA;    interface IEquatable&lt;TimeZoneInfo.AdjustmentRule&gt;&#xA;    interface IDeserializationCallback&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.TimeZoneInfo+AdjustmentRule&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.IDeserializationCallback</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Core, Version=2.0.5.0, Culture=Neutral, PublicKeyToken=7cec85d7bea7798e")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Bietet Informationen zur Anpassung der Zeitzone, z. B. die Umstellung auf die Sommerzeit und wieder zurück.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.TimeZoneInfo.AdjustmentRule> -Klasse definiert die effektive Start- und Enddatum der einen bestimmten Zeitwechsel in und aus der Sommerzeit, sowie das Delta (die genaue Größe, mit dem wird die Anpassung Normalzeit der Zeitzone, zu ändern). Darüber hinaus zwei Eigenschaften zurückgeben <xref:System.TimeZoneInfo.TransitionTime> Objekte, die definieren, wenn der Übergangs zu und von Standardzeit auftritt.  
  
> [!NOTE]
>  Eine Instanz von der <xref:System.TimeZoneInfo.AdjustmentRule> Klasse ist unveränderlich. Nachdem ein Objekt erstellt wurde, werden nicht die Werte geändert.  
  
 Zum Erstellen einer <xref:System.TimeZoneInfo.AdjustmentRule> Objekt, rufen Sie die `static` (`Shared` in Visual Basic) <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A?displayProperty=nameWithType> Methode. Sie können dann angeben, ein Array von <xref:System.TimeZoneInfo.AdjustmentRule> zu zwei der Überladungen der Objekte die <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> Methode. Rufen Sie zum Abrufen der Anpassungsregeln einer Zeitzone die <xref:System.TimeZoneInfo.GetAdjustmentRules%2A?displayProperty=nameWithType> Methode, die ein Array von zurückgibt <xref:System.TimeZoneInfo.AdjustmentRule> Objekte.  
  
   
  
## Examples  
 Im folgende Beispiel ruft alle auf dem lokalen System definierten Zeitzonen und vollständige Informationen zu den Anpassungsregeln angezeigt.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#3)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#3)]  
  
 Folgendes ist ein kleiner Teil der Ausgabe, die im Beispiel generiert wird. Die genaue Ausgabe variiert je nach Betriebssystem und das Datum, an dem das Beispiel ausgeführt wird.  
  
```  
Morocco Standard Time Adjustment rules  
   Adjustment rule #1  
      Start Date: Tuesday, January 01, 2008  
      End Date: Wednesday, December 31, 2008  
      Time Change: 1:00 hours  
      Annual Start: The Last Saturday of May at 11:59 PM  
      Annual End: The Last Sunday of August at 11:59 PM  
   Adjustment rule #2  
      Start Date: Thursday, January 01, 2009  
      End Date: Thursday, December 31, 2009  
      Time Change: 1:00 hours  
      Annual Start: The Last Sunday of May at 11:59 PM  
      Annual End: The Third Thursday of August at 11:59 PM  
  
Coordinated Universal Time has no adjustment rules  
  
GMT Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 1:00 AM  
   Annual End: The Last Sunday of October at 2:00 AM  
  
Greenwich Standard Time has no adjustment rules  
  
W. Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central Europe Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Romance Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
Central European Standard Time Adjustment rules  
   Start Date: Monday, January 01, 0001  
   End Date: Friday, December 31, 9999  
   Time Change: 1:00 hours  
   Annual Start: The Last Sunday of March at 2:00 AM  
   Annual End: The Last Sunday of October at 3:00 AM  
  
W. Central Africa Standard Time has no adjustment rules  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.TimeZoneInfo" />
  </Docs>
  <Members>
    <Member MemberName="CreateAdjustmentRule">
      <MemberSignature Language="C#" Value="public static TimeZoneInfo.AdjustmentRule CreateAdjustmentRule (DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo.TransitionTime daylightTransitionStart, TimeZoneInfo.TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.TimeZoneInfo/AdjustmentRule CreateAdjustmentRule(valuetype System.DateTime dateStart, valuetype System.DateTime dateEnd, valuetype System.TimeSpan daylightDelta, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionStart, valuetype System.TimeZoneInfo/TransitionTime daylightTransitionEnd) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule(System.DateTime,System.DateTime,System.TimeSpan,System.TimeZoneInfo.TransitionTime,System.TimeZoneInfo.TransitionTime)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateAdjustmentRule (dateStart As DateTime, dateEnd As DateTime, daylightDelta As TimeSpan, daylightTransitionStart As TimeZoneInfo.TransitionTime, daylightTransitionEnd As TimeZoneInfo.TransitionTime) As TimeZoneInfo.AdjustmentRule" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TimeZoneInfo::AdjustmentRule ^ CreateAdjustmentRule(DateTime dateStart, DateTime dateEnd, TimeSpan daylightDelta, TimeZoneInfo::TransitionTime daylightTransitionStart, TimeZoneInfo::TransitionTime daylightTransitionEnd);" />
      <MemberSignature Language="F#" Value="static member CreateAdjustmentRule : DateTime * DateTime * TimeSpan * TimeZoneInfo.TransitionTime * TimeZoneInfo.TransitionTime -&gt; TimeZoneInfo.AdjustmentRule" Usage="System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule (dateStart, dateEnd, daylightDelta, daylightTransitionStart, daylightTransitionEnd)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+AdjustmentRule</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dateStart" Type="System.DateTime" />
        <Parameter Name="dateEnd" Type="System.DateTime" />
        <Parameter Name="daylightDelta" Type="System.TimeSpan" />
        <Parameter Name="daylightTransitionStart" Type="System.TimeZoneInfo+TransitionTime" />
        <Parameter Name="daylightTransitionEnd" Type="System.TimeZoneInfo+TransitionTime" />
      </Parameters>
      <Docs>
        <param name="dateStart">Das Gültigkeitsdatum der Anpassungsregel. Wenn der Wert des <paramref name="dateStart" />-Parameters <see langword="DateTime.MinValue.Date" /> entspricht, ist dies die erste Anpassungsregel, die für eine Zeitzone gültig ist.</param>
        <param name="dateEnd">Das letzte Datum, an dem die Anpassungsregel aktiv ist. Wenn der Wert des <paramref name="dateEnd" />-Parameters <see langword="DateTime.MaxValue.Date" /> ist, besitzt die Anpassungsregel kein Enddatum.</param>
        <param name="daylightDelta">Die Zeitänderung, die sich durch die Anpassung ergibt. Dieser Wert wird zur <see cref="P:System.TimeZoneInfo.BaseUtcOffset" />-Eigenschaft der Zeitzone addiert, um die richtige Sommerzeitabweichung von der koordinierten Weltzeit (UTC) zu erhalten. Dieser Wert kann zwischen -14 und 14 liegen.</param>
        <param name="daylightTransitionStart">Ein Objekt, das den Beginn der Sommerzeit definiert.</param>
        <param name="daylightTransitionEnd">Ein Objekt, das das Ende der Sommerzeit definiert.</param>
        <summary>Erstellt eine neue Anpassungsregel für eine bestimmte Zeitzone.</summary>
        <returns>Ein Objekt, das die neue Anpassungsregel darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können diese Methode verwenden, erstellen Sie eine oder mehrere Anpassungsregeln für eine benutzerdefinierte Zeitzone. Ein Array von der <xref:System.TimeZoneInfo.AdjustmentRule> Aufrufe dieser Methode zurückgegebenen Objekte können dann als übergeben werden die `adjustmentRules` Parameter, um zwei Überladungen der <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> Methode. Das Beispiel veranschaulicht dieses Verfahren.  
  
> [!NOTE]
>  Die <xref:System.TimeZoneInfo.AdjustmentRule.CreateAdjustmentRule%2A> Methode kann nur für das Definieren einer Anpassungsregel für eine neue Zeitzone verwendet werden; es kann nicht verwendet werden, um eine Anpassungsregel für eine vorhandene Zeitzone zu ändern.  
  
 Die `dateStart` und `dateEnd` Parameter müssen die Datumswerte ohne Uhrzeitkomponente sein oder ein <xref:System.ArgumentException> ausgelöst. Die Zeitkomponente kann entfernt werden, durch das Abrufen einer <xref:System.DateTime> Wert von Datum und Uhrzeit des <xref:System.DateTime.Date%2A> Eigenschaft wie in den folgenden Anweisungen gezeigt:  
  
```  
DateTime.MinValue.Date  
DateTime.MaxValue.Date  
DateTime.Now.Date   
dateVariable.Date  
```  
  
 Die <xref:System.DateTime.Kind%2A> Eigenschaft der `dateStart` und `dateEnd` Parameter muss auch <xref:System.DateTimeKind.Unspecified?displayProperty=nameWithType>.  
  
 Der Wert des der `daylightDelta` Parameter kann zwischen-14 und 14 liegen. Die Summe der der `daylightDelta` Parameter und die `baseUtcOffset` Parameter im Aufruf von verwendet die <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A?displayProperty=nameWithType> Methode muss auch zwischen-14 und 14 liegen oder ein <xref:System.InvalidTimeZoneException> ausgelöst.  
  
> [!NOTE]
>  Die `daylightDelta` Parameter definiert die Differenz zwischen der Standardzeit und Sommerzeit einer Zeitzone. Es ist nicht vorgesehen, um die Standardzeit der Zeitzone Normalzeit Offset von Coordinated Universal Time (UTC) zu definieren. Die <xref:System.TimeZoneInfo> Klasse setzt voraus, dass dieser Offset von UTC während der Lebensdauer der Zeitzone konstant ist. Sie müssen eine Änderung in einer Zeitzone Offset von UTC darstellen, die nicht von der Anwendung einer Anpassungsregel verursacht wird, verwenden die <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> Methode, um eine neue benutzerdefinierte Zeitzone erstellt wird.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine alternative Zeitzone für die Central Standard Time erstellt und definiert drei Regeln zur zeitzonenanpassung berücksichtigt, für die Zeiträume 1976-1986, 1987 bis 2006 und 2007 und darüber hinaus. Diese Regeln hinzugefügt, die einen generischen <xref:System.Collections.Generic.List%601> Objekt, dessen Elemente dann, um kopiert werden, eine <xref:System.TimeZoneInfo.AdjustmentRule> Array. Dieses Array wird anschließend verwendet, im Aufruf der <xref:System.TimeZoneInfo.CreateCustomTimeZone%28System.String%2CSystem.TimeSpan%2CSystem.String%2CSystem.String%2CSystem.String%2CSystem.TimeZoneInfo.AdjustmentRule%5B%5D%29?displayProperty=nameWithType> Methode.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#1)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <see cref="P:System.DateTime.Kind" />-Eigenschaft des <paramref name="dateStart" />- oder <paramref name="dateEnd" />-Parameters ist nicht gleich <see cref="F:System.DateTimeKind.Unspecified" />.  
  
- oder -  
Der <paramref name="daylightTransitionStart" />-Parameter ist identisch mit dem <paramref name="daylightTransitionEnd" />-Parameter.  
  
- oder -  
Der <paramref name="dateStart" />- oder <paramref name="dateEnd" />-Parameter enthält einen Tageszeitwert.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="dateEnd" /> liegt vor <paramref name="dateStart" />.  
  
- oder -  
 <paramref name="daylightDelta" /> ist kleiner als -14 oder größer als 14.  
  
- oder -  
Die <see cref="P:System.TimeSpan.Milliseconds" />-Eigenschaft des <paramref name="daylightDelta" />-Parameters ist nicht gleich 0.  
  
- oder -  
Die <see cref="P:System.TimeSpan.Ticks" />-Eigenschaft des <paramref name="daylightDelta" />-Parameters entspricht keiner ganzen Zahl von Sekunden.</exception>
      </Docs>
    </Member>
    <Member MemberName="DateEnd">
      <MemberSignature Language="C#" Value="public DateTime DateEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateEnd As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateEnd { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateEnd : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datum ab, zu dem die Gültigkeit der Anpassungsregel aufgehoben wird.</summary>
        <value>Ein <see cref="T:System.DateTime" />-Wert, der das Enddatum der Anpassungsregel angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des der <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> Eigenschaft ist ein Datumswert ohne Uhrzeitkomponente.  
  
 Da das Enddatum des die aktuelle Anpassungsregel in der Regel nicht bekannt ist, können Sie zuweisen `DateTime.MaxValue.Date` auf die <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> Eigenschaft bei der Erstellung einer benutzerdefinierten Anpassungsregel.  
  
> [!IMPORTANT]
>  Wenn ein zwingender Grund nicht vorhanden ist, sollten Sie in das Zeitintervall, in dem die Zeitzone Normalzeit gilt, Enddatum der Anpassungsregel definieren. Sofern kein zwingender Grund dafür ist, sollten Sie nicht innerhalb des Zeitintervalls, in dem die Zeitzone Sommerzeit gilt, Enddatum der Anpassungsregel definieren. Z. B. wenn eine Zeitzone Übergang von Sommerzeit am dritten Sonntag im Monat März und der Wechsel zur Sommerzeit am ersten Sonntag im Oktober erfolgt, sollte das gültige Enddatum der Anpassungsregel am 31. Dezember eines bestimmten nicht Jahr, da dieses Datum innerhalb des Zeitraums der Sommerzeit liegt.  
  
 Standardmäßig wird die Registrierung in Windows XP definiert eine Anpassungsregel, deren Enddatum Freitag, 31. Dezember 9999 (der Wert des `DateTime.MaxValue.Date`), für jede Zeitzone. Für Zeitzonen, in den Vereinigten Staaten definiert die Registrierung in Windows Vista zwei Regeln zur zeitzonenanpassung berücksichtigt:  
  
-   Montag, Januar 01, 0001 bis Sonntag, 31. Dezember 2006.  
  
-   Montag, Januar 01 2007, Freitag, dem 31. Dezember 9999.  
  
 Dies bedeutet, dass aber die Anpassungsregeln der Zeitzone in der Registrierung gespeichert sind hilfreich, für die aktuelle Zeitzone datenbezogene Vorgänge ausführen, nicht zuverlässig, zum Abrufen von historische Zeitzoneninformationen verwendet werden. Informationen zum Definieren von in einer historischen Zeitzonen unterstützende Anwendung einer benutzerdefinierten Zeitzone mit mehrere Anpassungsregeln, die verwendet werden können, finden Sie unter [Vorgehensweise: Erstellen von Zeitzonen mit Anpassungsregeln](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt Informationen zu allen in der systemregistrierung des lokalen Computers, einschließlich Start- und Enddatum des den Anpassungsregeln definierten Zeitzonen.  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DateStart">
      <MemberSignature Language="C#" Value="public DateTime DateStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime DateStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DateStart As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property DateTime DateStart { DateTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DateStart : DateTime" Usage="System.TimeZoneInfo.AdjustmentRule.DateStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Datum ab, zu dem die Anpassungsregel wirksam wird.</summary>
        <value>Ein <see cref="T:System.DateTime" />-Wert, der angibt, wann die Anpassungsregel wirksam wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Wert des der <xref:System.TimeZoneInfo.AdjustmentRule.DateStart%2A> Eigenschaft ist ein Datumswert ohne Uhrzeitkomponente. Definiert das Datum, an dem eine bestimmte Anpassungsregel wirksam wird.  Dies ist das Datum in der ein Satz von Übergänge (die in der Regel von einer Umstellung auf Sommerzeit und einen Übergang zurück auf Standardzeit definiert sind), Navigieren in Kraft treten. Z. B. eine Anpassungsregel, die an dem 1. Januar 2017 in Kraft treten möglicherweise, bereitstellt und für den Übergang zurück auf Standardzeit am ersten Sonntag im November eine Umstellung auf Sommerzeit am zweiten Sonntag im März. Beachten Sie, dass das Startdatum der Anpassungsregel nicht auf das Datum des ersten Übergangs gebunden ist.  
  
 Sie zuweisen können `DateTime.MinValue.Date` auf die <xref:System.TimeZoneInfo.AdjustmentRule.DateEnd%2A> Eigenschaft, wenn Sie eine benutzerdefinierte Anpassungsregel für die Verwendung in eine Zeitzonen unterstützende Anwendung erstellen muss nicht mit historische Zeitzoneninformationen zu arbeiten.  
  
> [!IMPORTANT]
>  Wenn ein zwingender Grund nicht vorhanden ist, sollten Sie definieren die Anpassungsregel Startdatum innerhalb des Zeitintervalls, in dem die Zeitzone Normalzeit gilt. Sofern kein zwingender Grund dafür ist, sollten Sie nicht die Anpassungsregel Startdatum, die innerhalb der Zeitspanne, in dem die Zeitzone Sommerzeit gilt, definieren. Z. B. wenn eine Zeitzone Übergang von Sommerzeit am dritten Sonntag im Monat März und der Wechsel zur Sommerzeit am ersten Sonntag im Oktober erfolgt, sollte das effektive Startdatum der Anpassungsregel vom 1. Januar eines bestimmten nicht Jahr, da dieses Datum innerhalb des Zeitraums der Sommerzeit liegt.  
  
 Standardmäßig wird die Registrierung in Windows XP definiert eine Anpassungsregel, deren Startdatum Montag, 01 Januar 0001 (der Wert des `DateTime.MinValue.Date`), für jede Zeitzone. Für Zeitzonen, in den Vereinigten Staaten definiert die Registrierung in Windows Vista zwei Regeln zur zeitzonenanpassung berücksichtigt:  
  
-   Montag, Januar 01, 0001 bis Sonntag, 31. Dezember 2006.  
  
-   Montag, Januar 01 2007, Freitag, dem 31. Dezember 9999.  
  
 Dies bedeutet, dass aber die Anpassungsregeln der Zeitzone in der Registrierung gespeichert sind hilfreich, für die aktuelle Zeitzone datenbezogene Vorgänge ausführen, nicht zuverlässig, zum Abrufen von historische Zeitzoneninformationen verwendet werden. Informationen zum Definieren von in einer historischen Zeitzonen unterstützende Anwendung einer benutzerdefinierten Zeitzone mit mehrere Anpassungsregeln, die verwendet werden können, finden Sie unter [Vorgehensweise: Erstellen von Zeitzonen mit Anpassungsregeln](~/docs/standard/datetime/create-time-zones-with-adjustment-rules.md).  
  
   
  
## Examples  
 Das folgende Beispiel zeigt Informationen zu allen in der systemregistrierung des lokalen Computers, einschließlich Start- und Enddatum des den Anpassungsregeln definierten Zeitzonen.  
  
 [!code-csharp[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/cs/DateStart1.cs#1)]
 [!code-vb[System.TimeZoneInfo.AdjustmentRule.DateStart#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.TimeZoneInfo.AdjustmentRule.DateStart/vb/DateStart1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightDelta">
      <MemberSignature Language="C#" Value="public TimeSpan DaylightDelta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DaylightDelta" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightDelta As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan DaylightDelta { TimeSpan get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightDelta : TimeSpan" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightDelta" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Länge des Zeitraums ab, aus dem die Sommerzeit der Zeitzone gebildet wird. Dieser Zeitraum wird zum Offset der Zeitzone von der koordinierten Weltzeit (Coordinated Universal Time, UTC) addiert.</summary>
        <value>Ein <see cref="T:System.TimeSpan" />-Objekt, das angibt, wie viel Zeit den Standardzeitänderungen als Ergebnis der Anpassungsregel hinzugefügt werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Formel definiert die Sommerzeit einer Zeitzone:  
  
```  
TimeZoneTime = BaseUtcOffset + DaylightDelta + UtcTime  
```  
  
 Der Wert des der <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> Eigenschaft reichen von 14 Stunden-14 Stunden.  
  
> [!NOTE]
>  Die <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> -Eigenschaft misst die Differenz zwischen der Standardzeit und Sommerzeit der Zeitzone. Es gilt nicht für Änderungen in einer Zeitzone standard Offset von Coordinated Universal Time (UTC). Um eine Zeitzone darstellen, die den Offset der Zeit von UTC geändert wurde, rufen Sie die <xref:System.TimeZoneInfo.CreateCustomTimeZone%2A> Methode zum Erstellen einer neuen Zeitzone.  
  
 Der häufigste Wert, der die <xref:System.TimeZoneInfo.AdjustmentRule.DaylightDelta%2A> -Eigenschaft ist 1,0 Stunden. Die Anwendung der Anpassungsregel Sommerzeit erhöht der Zeitzone Offset von Coordinated Universal Time (UTC) eine Stunde an.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionEnd">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionEnd" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionEnd As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionEnd { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionEnd : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Informationen über den jährlichen Übergang von der Sommerzeit zurück zur Normalzeit ab.</summary>
        <value>Ein <see cref="T:System.TimeZoneInfo.TransitionTime" />-Objekt, das den jährlichen Übergang von der Sommerzeit zurück zur Normalzeit der Zeitzone definiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.TimeZoneInfo.TransitionTime> zurückgegebenes Objekt der <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> Eigenschaft definiert eine Regel für feste Datumsangaben oder einer Regel für gleitende Datumsangaben für die Rückgabe auf Standardzeit. Eine Regel für feste Datumsangaben enthält, den Monat, Tag und Uhrzeit auf dem der Übergang auftritt. Eine Regel für gleitende Datumsangaben stellt den Monat, Woche, Tag der Woche und Tageszeit, an dem der Übergang auftritt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DaylightTransitionStart">
      <MemberSignature Language="C#" Value="public TimeZoneInfo.TransitionTime DaylightTransitionStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeZoneInfo/TransitionTime DaylightTransitionStart" />
      <MemberSignature Language="DocId" Value="P:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DaylightTransitionStart As TimeZoneInfo.TransitionTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeZoneInfo::TransitionTime DaylightTransitionStart { TimeZoneInfo::TransitionTime get(); };" />
      <MemberSignature Language="F#" Value="member this.DaylightTransitionStart : TimeZoneInfo.TransitionTime" Usage="System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeZoneInfo+TransitionTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Informationen über den jährlichen Übergang von der Normalzeit zur Sommerzeit ab.</summary>
        <value>Ein <see cref="T:System.TimeZoneInfo.TransitionTime" />-Objekt, das den jährlichen Übergang von der Normalzeit zur Sommerzeit einer Zeitzone definiert.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.TimeZoneInfo.TransitionTime> zurückgegebenes Objekt der <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> Eigenschaft definiert eine Regel für feste Datumsangaben oder einer Regel für gleitende Datumsangaben für die Umstellung auf Sommerzeit. Eine Regel für feste Datumsangaben enthält, den Monat, Tag und Uhrzeit auf dem der Übergang auftritt. Eine Regel für gleitende Datumsangaben enthält, den Monat, Woche, den Tag der Woche, und die Uhrzeit auf dem der Übergang auftritt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (TimeZoneInfo.AdjustmentRule other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.TimeZoneInfo/AdjustmentRule other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.Equals(System.TimeZoneInfo.AdjustmentRule)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As TimeZoneInfo.AdjustmentRule) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(TimeZoneInfo::AdjustmentRule ^ other);" />
      <MemberSignature Language="F#" Value="override this.Equals : TimeZoneInfo.AdjustmentRule -&gt; bool" Usage="adjustmentRule.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.TimeZoneInfo+AdjustmentRule" />
      </Parameters>
      <Docs>
        <param name="other">Das Objekt, das mit dem aktuellen Objekt verglichen werden soll.</param>
        <summary>Bestimmt, ob das aktuelle <see cref="T:System.TimeZoneInfo.AdjustmentRule" />-Objekt und das zweite <see cref="T:System.TimeZoneInfo.AdjustmentRule" />-Objekt identisch sind.</summary>
        <returns>
          <see langword="true" />, wenn beide <see cref="T:System.TimeZoneInfo.AdjustmentRule" />-Objekte gleiche Werte aufweisen, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um festzustellen, ob zwei <xref:System.TimeZoneInfo.AdjustmentRule> Objekte gleich sind, die <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29> Methode vergleicht die Werte jedes Objekts. Die Anpassungsregeln sind gleich, wenn sie die gleichen Gültigkeitsdaten, gleiche Delta und identische Werte für die <xref:System.TimeZoneInfo.TransitionTime> zurückgegebenen Objekte die <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionStart%2A> und <xref:System.TimeZoneInfo.AdjustmentRule.DaylightTransitionEnd%2A> Eigenschaften.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.TimeZoneInfo.AdjustmentRule.Equals%28System.TimeZoneInfo.AdjustmentRule%29?displayProperty=nameWithType> Methode, mit denen für Canada Central Standard Time und Mexiko Normalzeit Anpassungsregeln für Central Standard Time verglichen werden soll.  
  
 [!code-csharp[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/cs/System.TimeZone2.AdjustmentRule.Class.cs#2)]
 [!code-vb[System.TimeZone2.AdjustmentRule.Class#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.TimeZone2.AdjustmentRule.Class/vb/System.TimeZone2.AdjustmentRule.Class.vb#2)]  
  
 Dieser Code zeigt die folgende Ausgabe in der Konsole an:  
  
```  
Comparing Central Standard Time rule for 1/1/0001 to 12/31/9999 with:  
   Canada Central Standard Time has no adjustment rules.  
   Mexican CST for 1/1/0001 to 12/31/9999: Equal  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="adjustmentRule.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Wird als Hashfunktion für Hashalgorithmen und Datenstrukturen wie Hashtabellen verwendet.</summary>
        <returns>Eine 32-Bit-Ganzzahl mit Vorzeichen, die als Hashcode für das aktuelle <see cref="T:System.TimeZoneInfo.AdjustmentRule" />-Objekt verwendet wird.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.IDeserializationCallback.OnDeserialization">
      <MemberSignature Language="C#" Value="void IDeserializationCallback.OnDeserialization (object sender);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(object sender) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#IDeserializationCallback#OnDeserialization(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub OnDeserialization (sender As Object) Implements IDeserializationCallback.OnDeserialization" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System::Object ^ sender) = System::Runtime::Serialization::IDeserializationCallback::OnDeserialization;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.IDeserializationCallback.OnDeserialization(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="sender">Das Objekt, das den Rückruf initiiert hat. Die Funktionen für diesen Parameter sind derzeit nicht implementiert.</param>
        <summary>Wird ausgeführt, wenn die Deserialisierung eines <see cref="T:System.TimeZoneInfo.AdjustmentRule" />-Objekts abgeschlossen ist.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.Serialization.ISerializable.GetObjectData">
      <MemberSignature Language="C#" Value="void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Runtime.Serialization.ISerializable.GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.TimeZoneInfo.AdjustmentRule.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Sub GetObjectData (info As SerializationInfo, context As StreamingContext) Implements ISerializable.GetObjectData" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Runtime.Serialization.ISerializable.GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context) = System::Runtime::Serialization::ISerializable::GetObjectData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;netcore-2.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Das mit Daten zu füllende Objekt.</param>
        <param name="context">Das Ziel dieser Serialisierung (siehe <see cref="T:System.Runtime.Serialization.StreamingContext" />).</param>
        <summary>Füllt ein <see cref="T:System.Runtime.Serialization.SerializationInfo" />-Objekt mit den Daten auf, die zum Serialisieren dieses Objekts erforderlich sind.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer. Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</permission>
      </Docs>
    </Member>
  </Members>
</Type>