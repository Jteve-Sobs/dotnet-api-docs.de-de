<Type Name="Delegate" FullName="System.Delegate">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3d9b1839ccedabbb705da25899027acccda6a8a3" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53233119" /></Metadata><TypeSignature Language="C#" Value="public abstract class Delegate : ICloneable, System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi abstract serializable beforefieldinit Delegate extends System.Object implements class System.ICloneable, class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Delegate" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Delegate&#xA;Implements ICloneable, ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Delegate abstract : ICloneable, System::Runtime::Serialization::ISerializable" />
  <TypeSignature Language="F#" Value="type Delegate = class&#xA;    interface ICloneable&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Runtime.Serialization.ISerializable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDual)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fd404-101">Stellt einen Delegaten dar. Hierbei handelt es sich um eine Datenstruktur, die auf eine statische Methode oder auf eine Klasseninstanz und eine Instanzenmethode dieser Klasse verweist.</span><span class="sxs-lookup"><span data-stu-id="fd404-101">Represents a delegate, which is a data structure that refers to a static method or to a class instance and an instance method of that class.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-102">Die <xref:System.Delegate> Klasse ist die Basisklasse für Delegattypen.</span><span class="sxs-lookup"><span data-stu-id="fd404-102">The <xref:System.Delegate> class is the base class for delegate types.</span></span> <span data-ttu-id="fd404-103">Jedoch nur das System und der Compiler können ableiten explizit die <xref:System.Delegate> Klasse oder aus der <xref:System.MulticastDelegate> Klasse.</span><span class="sxs-lookup"><span data-stu-id="fd404-103">However, only the system and compilers can derive explicitly from the <xref:System.Delegate> class or from the <xref:System.MulticastDelegate> class.</span></span> <span data-ttu-id="fd404-104">Es ist auch nicht zulässig, einen neuen Typ von einem Delegattyp abzuleiten.</span><span class="sxs-lookup"><span data-stu-id="fd404-104">It is also not permissible to derive a new type from a delegate type.</span></span> <span data-ttu-id="fd404-105">Die <xref:System.Delegate> Klasse gilt keinen Delegattyp aufweisen; es ist eine Klasse, die zum Ableiten von Delegattypen verwendet.</span><span class="sxs-lookup"><span data-stu-id="fd404-105">The <xref:System.Delegate> class is not considered a delegate type; it is a class used to derive delegate types.</span></span>  
  
 <span data-ttu-id="fd404-106">Die meisten Sprachen implementieren eine `delegate` -Schlüsselwort und -Compiler für diese Sprachen sind in der Lage, abgeleitet der <xref:System.MulticastDelegate> Klasse; daher sollten Benutzer verwenden die `delegate` -Schlüsselwort von der Sprache.</span><span class="sxs-lookup"><span data-stu-id="fd404-106">Most languages implement a `delegate` keyword, and compilers for those languages are able to derive from the <xref:System.MulticastDelegate> class; therefore, users should use the `delegate` keyword provided by the language.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-107">Die common Language Runtime stellt eine `Invoke` Methode für jeden Delegattyp, mit der gleichen Signatur wie der Delegat.</span><span class="sxs-lookup"><span data-stu-id="fd404-107">The common language runtime provides an `Invoke` method for each delegate type, with the same signature as the delegate.</span></span> <span data-ttu-id="fd404-108">Sie müssen keinen zum Aufrufen dieser Methode explizit aus c#, Visual Basic oder Visual C++, da der Compiler sie automatisch aufrufen.</span><span class="sxs-lookup"><span data-stu-id="fd404-108">You do not have to call this method explicitly from C#, Visual Basic, or Visual C++, because the compilers call it automatically.</span></span> <span data-ttu-id="fd404-109">Die `Invoke` Methode eignet sich [Reflektion](~/docs/framework/reflection-and-codedom/reflection.md) Wenn Sie die Signatur des Delegattyps suchen möchten.</span><span class="sxs-lookup"><span data-stu-id="fd404-109">The `Invoke` method is useful in [reflection](~/docs/framework/reflection-and-codedom/reflection.md) when you want to find the signature of the delegate type.</span></span>  
  
 <span data-ttu-id="fd404-110">Die common Language Runtime stellt jedem Delegattyp `BeginInvoke` und `EndInvoke` Methoden, an den asynchronen Aufruf des Delegaten zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="fd404-110">The common language runtime provides each delegate type with `BeginInvoke` and `EndInvoke` methods, to enable asynchronous invocation of the delegate.</span></span> <span data-ttu-id="fd404-111">Weitere Informationen zu diesen Methoden finden Sie unter [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="fd404-111">For more information about these methods, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="fd404-112">Die Deklaration eines Delegattyps richtet einen Vertrag, der die Signatur der mindesten eine Methode angibt.</span><span class="sxs-lookup"><span data-stu-id="fd404-112">The declaration of a delegate type establishes a contract that specifies the signature of one or more methods.</span></span> <span data-ttu-id="fd404-113">Ein Delegat ist eine Instanz einen Delegattyp aufweisen, die Verweise auf:</span><span class="sxs-lookup"><span data-stu-id="fd404-113">A delegate is an instance of a delegate type that has references to:</span></span>  
  
-   <span data-ttu-id="fd404-114">Eine Instanzmethode einem Typ und einem Zielobjekt auf diesen Typ zugewiesen werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-114">An instance method of a type and a target object assignable to that type.</span></span>  
  
-   <span data-ttu-id="fd404-115">Eine Instanzmethode eines Typs, mit den hidden- `this` Parameter in der Liste der formalen Parameter verfügbar gemacht werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-115">An instance method of a type, with the hidden `this` parameter exposed in the formal parameter list.</span></span> <span data-ttu-id="fd404-116">Der Delegat wird als eine offene Instanz Delegat.</span><span class="sxs-lookup"><span data-stu-id="fd404-116">The delegate is said to be an open instance delegate.</span></span>  
  
-   <span data-ttu-id="fd404-117">Eine statische Methode.</span><span class="sxs-lookup"><span data-stu-id="fd404-117">A static method.</span></span>  
  
-   <span data-ttu-id="fd404-118">Eine statische Methode und einem Zielobjekt, die auf den ersten Parameter der Methode zugewiesen werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-118">A static method and a target object assignable to the first parameter of the method.</span></span> <span data-ttu-id="fd404-119">Der Delegat wird als über das erste Argument geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-119">The delegate is said to be closed over its first argument.</span></span>  
  
 <span data-ttu-id="fd404-120">Weitere Informationen zu Delegaten binden, finden Sie unter den <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.Reflection.MethodInfo%2CSystem.Boolean%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="fd404-120">For more information on delegate binding, see the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.Reflection.MethodInfo%2CSystem.Boolean%29> method overload.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-121">In der .NET Framework-Versionen 1.0 und 1.1 kann ein Delegat eine Methode darstellen, nur dann, wenn die Signatur der Methode genau die vom Typ Delegaten angegebene Signatur entspricht.</span><span class="sxs-lookup"><span data-stu-id="fd404-121">In the .NET Framework versions 1.0 and 1.1, a delegate can represent a method only if the signature of the method exactly matches the signature specified by the delegate type.</span></span> <span data-ttu-id="fd404-122">Daher werden nur die ersten und dritten Aufzählungszeichen in der vorangehenden Liste unterstützt, und das erste Aufzählungszeichen erfordert eine genau übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="fd404-122">Thus, only the first and third bullets in the preceding list are supported, and the first bullet requires an exact type match.</span></span>  
  
 <span data-ttu-id="fd404-123">Wenn ein Delegat eine Instanzmethode geschlossene als erstes Argument (den meisten Fällen) darstellt, der Delegaten speichert einen Verweis auf den Einstiegspunkt der Methode und einem Verweis auf ein Objekt, das als Ziel bezeichnet, handelt es sich von einem Typ, der dem Typ zugewiesen werden, die definiert die -Methode.</span><span class="sxs-lookup"><span data-stu-id="fd404-123">When a delegate represents an instance method closed over its first argument (the most common case), the delegate stores a reference to the method's entry point and a reference to an object, called the target, which is of a type assignable to the type that defined the method.</span></span> <span data-ttu-id="fd404-124">Wenn ein Delegat über eine offene Instanzmethode darstellt, speichert es einen Verweis auf den Einstiegspunkt der Methode.</span><span class="sxs-lookup"><span data-stu-id="fd404-124">When a delegate represents an open instance method, it stores a reference to the method's entry point.</span></span> <span data-ttu-id="fd404-125">Die Signatur des Delegaten muss die ausgeblendeten enthalten `this` Parameter in der formalen Parameterliste; in diesem Fall der Delegaten verfügt nicht über einen Verweis auf ein Zielobjekt und einem Zielobjekt muss bereitgestellt werden, wenn der Delegat aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-125">The delegate signature must include the hidden `this` parameter in its formal parameter list; in this case, the delegate does not have a reference to a target object, and a target object must be supplied when the delegate is invoked.</span></span>  
  
 <span data-ttu-id="fd404-126">Wenn ein Delegat eine statische Methode darstellt, speichert der Delegat einen Verweis auf den Einstiegspunkt der Methode.</span><span class="sxs-lookup"><span data-stu-id="fd404-126">When a delegate represents a static method, the delegate stores a reference to the method's entry point.</span></span> <span data-ttu-id="fd404-127">Wenn ein Delegat eine statische Methode, die als erstes Argument geschlossene darstellt, speichert der Delegat einen Verweis auf den Einstiegspunkt der Methode und einem Verweis auf ein Zielobjekt, das den Typ des ersten Arguments der Methode zugewiesen werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-127">When a delegate represents a static method closed over its first argument, the delegate stores a reference to the method's entry point and a reference to a target object assignable to the type of the method's first argument.</span></span> <span data-ttu-id="fd404-128">Wenn der Delegat aufgerufen wird, erhält das erste Argument der statischen Methode das Zielobjekt.</span><span class="sxs-lookup"><span data-stu-id="fd404-128">When the delegate is invoked, the first argument of the static method receives the target object.</span></span>  
  
 <span data-ttu-id="fd404-129">Die Aufrufliste eines Delegaten ist eine geordnete Menge von Delegaten in denen jedes Element der Liste genau eine der Methoden, die durch den Delegaten dargestellte aufruft.</span><span class="sxs-lookup"><span data-stu-id="fd404-129">The invocation list of a delegate is an ordered set of delegates in which each element of the list invokes exactly one of the methods represented by the delegate.</span></span> <span data-ttu-id="fd404-130">Eine Aufrufliste kann es sich um doppelte Methoden enthalten.</span><span class="sxs-lookup"><span data-stu-id="fd404-130">An invocation list can contain duplicate methods.</span></span> <span data-ttu-id="fd404-131">Während eines Aufrufs werden Methoden in der Reihenfolge aufgerufen, in denen sie in der Aufrufliste angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-131">During an invocation, methods are invoked in the order in which they appear in the invocation list.</span></span> <span data-ttu-id="fd404-132">Ein Delegat versucht, jede Methode in der Aufrufliste zu aufzurufen; Duplikate werden aufgerufen, nachdem für jedes Mal, die sie in der Aufrufliste angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-132">A delegate attempts to invoke every method in its invocation list; duplicates are invoked once for each time they appear in the invocation list.</span></span> <span data-ttu-id="fd404-133">Delegaten sind unveränderlich. nach der Erstellung wird die Aufrufliste eines Delegaten nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-133">Delegates are immutable; once created, the invocation list of a delegate does not change.</span></span>  
  
 <span data-ttu-id="fd404-134">Delegaten werden bezeichnet als Multicast- oder mit den flexibel kombinierbaren, da ein Delegat kann eine oder mehrere Methoden aufrufen, und kann in Kombination von Vorgängen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-134">Delegates are referred to as multicast, or combinable, because a delegate can invoke one or more methods and can be used in combining operations.</span></span>  
  
 <span data-ttu-id="fd404-135">Kombinieren die Vorgänge, z. B. <xref:System.Delegate.Combine%2A> und <xref:System.Delegate.Remove%2A>, vorhandene Delegaten nicht geändert.</span><span class="sxs-lookup"><span data-stu-id="fd404-135">Combining operations, such as <xref:System.Delegate.Combine%2A> and <xref:System.Delegate.Remove%2A>, do not alter existing delegates.</span></span> <span data-ttu-id="fd404-136">Stattdessen gibt einen neuen Delegat mit den Ergebnissen des Vorgangs einen Delegaten unverändert oder `null`.</span><span class="sxs-lookup"><span data-stu-id="fd404-136">Instead, such an operation returns a new delegate that contains the results of the operation, an unchanged delegate, or `null`.</span></span> <span data-ttu-id="fd404-137">Gibt eine Kombinationsoperation `null` Wenn das Ergebnis des Vorgangs ist ein Delegat, der nicht über mindestens eine Methode verweist.</span><span class="sxs-lookup"><span data-stu-id="fd404-137">A combining operation returns `null` when the result of the operation is a delegate that does not reference at least one method.</span></span> <span data-ttu-id="fd404-138">Eine Operation zum Kombinieren gibt einen unveränderten Delegaten zurück, wenn der angeforderte Vorgang keine Auswirkungen hat.</span><span class="sxs-lookup"><span data-stu-id="fd404-138">A combining operation returns an unchanged delegate when the requested operation has no effect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-139">Verwaltete Sprachen verwenden die <xref:System.Delegate.Combine%2A> und <xref:System.Delegate.Remove%2A> Methoden, Delegaten Vorgänge zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="fd404-139">Managed languages use the <xref:System.Delegate.Combine%2A> and <xref:System.Delegate.Remove%2A> methods to implement delegate operations.</span></span> <span data-ttu-id="fd404-140">Beispiele hierfür sind die `AddHandler` und `RemoveHandler` Anweisungen in Visual Basic und die Operatoren "+=" und "=" auf Typen in c# zu delegieren.</span><span class="sxs-lookup"><span data-stu-id="fd404-140">Examples include the `AddHandler` and `RemoveHandler` statements in Visual Basic and the += and -= operators on delegate types in C#.</span></span>  
  
 <span data-ttu-id="fd404-141">Beginnend mit der [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], generischen Delegattypen können über Variante Typparameter verfügen.</span><span class="sxs-lookup"><span data-stu-id="fd404-141">Starting with the [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], generic delegate types can have variant type parameters.</span></span> <span data-ttu-id="fd404-142">Kontravariante Typparameter als Parametertypen des Delegaten verwendet werden können, und ein kovarianten Typparameter als Rückgabetyp verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-142">Contravariant type parameters can be used as parameter types of the delegate, and a covariant type parameter can be used as the return type.</span></span> <span data-ttu-id="fd404-143">Dieses Feature ermöglicht den generischen Delegaten Typen, die erstellt werden, aus der gleichen generischen Typdefinition zuweisungskompatibel, wenn ihre Typargumente Verweistypen mit einer vererbungsbeziehung sind sein, wie unter [Kovarianz und Kontravarianz](~/docs/standard/generics/covariance-and-contravariance.md).</span><span class="sxs-lookup"><span data-stu-id="fd404-143">This feature allows generic delegate types that are constructed from the same generic type definition to be assignment-compatible if their type arguments are reference types with an inheritance relationship, as explained in [Covariance and Contravariance](~/docs/standard/generics/covariance-and-contravariance.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-144">Generische Delegaten, die zuweisungskompatibel sind aufgrund der Varianz sind nicht unbedingt mit den flexibel kombinierbaren.</span><span class="sxs-lookup"><span data-stu-id="fd404-144">Generic delegates that are assignment-compatible because of variance are not necessarily combinable.</span></span> <span data-ttu-id="fd404-145">Um mit den flexibel kombinierbaren sein, müssen die Typen exakt übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="fd404-145">To be combinable, the types must match exactly.</span></span> <span data-ttu-id="fd404-146">Nehmen wir beispielsweise an, dass eine Klasse mit dem Namen `Derived` stammt aus einer Klasse namens `Base`.</span><span class="sxs-lookup"><span data-stu-id="fd404-146">For example, suppose that a class named `Derived` is derived from a class named `Base`.</span></span> <span data-ttu-id="fd404-147">Ein Delegat vom Typ `Action<Base>` (`Action(Of Base)` in Visual Basic) kann eine Variable des Typs zugewiesen werden `Action<Derived>`, aber die beiden Delegaten können nicht kombiniert werden, da die Typen nicht genau übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="fd404-147">A delegate of type `Action<Base>` (`Action(Of Base)` in Visual Basic) can be assigned to a variable of type `Action<Derived>`, but the two delegates cannot be combined because the types do not match exactly.</span></span>  
  
 <span data-ttu-id="fd404-148">Wenn eine aufgerufene Methode eine Ausnahme auslöst, beendet die Ausführung der Methode, die Ausnahme zurück an den Aufrufer des Delegaten übergeben wird und verbleibende Methoden in der Aufrufliste nicht aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-148">If an invoked method throws an exception, the method stops executing, the exception is passed back to the caller of the delegate, and remaining methods in the invocation list are not invoked.</span></span> <span data-ttu-id="fd404-149">Die Ausnahme abfangen, im Aufrufer wird dieses Verhalten nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-149">Catching the exception in the caller does not alter this behavior.</span></span>  
  
 <span data-ttu-id="fd404-150">Wenn die Signatur der Methoden aufgerufen, indem ein Delegat über einen Rückgabewert enthält, gibt den Delegaten den Rückgabewert des letzten Elements in der Aufrufliste zurück.</span><span class="sxs-lookup"><span data-stu-id="fd404-150">When the signature of the methods invoked by a delegate includes a return value, the delegate returns the return value of the last element in the invocation list.</span></span> <span data-ttu-id="fd404-151">Wenn die Signatur einen Parameter, der als Verweis übergeben wird enthält, ist der endgültige Wert des Parameters das Ergebnis jeder Methode in der Aufrufliste, die nacheinander ausgeführt, und aktualisieren den Wert des Parameters an.</span><span class="sxs-lookup"><span data-stu-id="fd404-151">When the signature includes a parameter that is passed by reference, the final value of the parameter is the result of every method in the invocation list executing sequentially and updating the parameter's value.</span></span>  
  
 <span data-ttu-id="fd404-152">Am nächsten entspricht einen Delegaten in C# einem Funktionszeiger.</span><span class="sxs-lookup"><span data-stu-id="fd404-152">The closest equivalent of a delegate in C is a function pointer.</span></span> <span data-ttu-id="fd404-153">Ein Delegat kann es sich um eine statische Methode oder Instanzmethode darstellen.</span><span class="sxs-lookup"><span data-stu-id="fd404-153">A delegate can represent a static method or an instance method.</span></span> <span data-ttu-id="fd404-154">Wenn der Delegat eine Instanzmethode darstellt, speichert der Delegaten nicht nur einen Verweis auf den Einstiegspunkt der Methode, sondern auch einen Verweis auf die Instanz der Klasse.</span><span class="sxs-lookup"><span data-stu-id="fd404-154">When the delegate represents an instance method, the delegate stores not only a reference to the method's entry point, but also a reference to the class instance.</span></span> <span data-ttu-id="fd404-155">Im Gegensatz zu Funktionszeigern sind Delegaten sind objektorientiert und typsicher.</span><span class="sxs-lookup"><span data-stu-id="fd404-155">Unlike function pointers, delegates are object oriented and type safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd404-156">Das folgende Beispiel zeigt, wie Sie einen Delegaten, mit dem Namen definieren `myMethodDelegate`.</span><span class="sxs-lookup"><span data-stu-id="fd404-156">The following example shows how to define a delegate named `myMethodDelegate`.</span></span> <span data-ttu-id="fd404-157">Instanzen dieses Delegaten werden erstellt, für die eine Instanzmethode und eine statische Methode der geschachtelten `mySampleClass` Klasse.</span><span class="sxs-lookup"><span data-stu-id="fd404-157">Instances of this delegate are created for an instance method and a static method of the nested `mySampleClass` class.</span></span> <span data-ttu-id="fd404-158">Der Delegat für die Instanzmethode erfordert eine Instanz von `mySampleClass`.</span><span class="sxs-lookup"><span data-stu-id="fd404-158">The delegate for the instance method requires an instance of `mySampleClass`.</span></span> <span data-ttu-id="fd404-159">Die `mySampleClass` Instanz wird gespeichert, in einer Variablen namens `mySC`.</span><span class="sxs-lookup"><span data-stu-id="fd404-159">The `mySampleClass` instance is saved in a variable named `mySC`.</span></span>  
  
 [!code-cpp[Classic Delegate Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Delegate Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Delegate Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Delegate Example/CS/source.cs#1)]
 [!code-vb[Classic Delegate Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Delegate Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.MulticastDelegate" />
    <related type="Article" href="https://msdn.microsoft.com/library/41972034-92ed-450a-9664-ab93fcc6f1fb"><span data-ttu-id="fd404-160">Asynchrones Aufrufen von synchronen Methoden</span><span class="sxs-lookup"><span data-stu-id="fd404-160">Calling Synchronous Methods Asynchronously</span></span></related>
    <related type="Article" href="~/docs/csharp/programming-guide/delegates/index.md"><span data-ttu-id="fd404-161">Delegaten (C#-Programmierhandbuch)</span><span class="sxs-lookup"><span data-stu-id="fd404-161">Delegates (C# Programming Guide)</span></span></related>
    <related type="Article" href="~/docs/visual-basic/programming-guide/language-features/delegates/index.md"><span data-ttu-id="fd404-162">Delegaten (Visual Basic)</span><span class="sxs-lookup"><span data-stu-id="fd404-162">Delegates (Visual Basic)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/1cdf3420-89c1-47c0-b796-aa984020e0f8"><span data-ttu-id="fd404-163">Gewusst wie: Definieren und Verwenden von Delegaten (C++/CLI)</span><span class="sxs-lookup"><span data-stu-id="fd404-163">How to: Define and Use Delegates (C++/CLI)</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f"><span data-ttu-id="fd404-164">Behandeln und Auslösen von Ereignissen</span><span class="sxs-lookup"><span data-stu-id="fd404-164">Handling and Raising Events</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd404-165">Initialisiert einen neuen Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-165">Initializes a new delegate.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Delegate (object target, string method);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(object target, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.#ctor(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (target As Object, method As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Delegate(System::Object ^ target, System::String ^ method);" />
      <MemberSignature Language="F#" Value="new Delegate : obj * string -&gt; Delegate" Usage="new System.Delegate (target, method)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="fd404-166">Die Klasseninstanz, für die der Delegat <paramref name="method" /> aufruft.</span><span class="sxs-lookup"><span data-stu-id="fd404-166">The class instance on which the delegate invokes <paramref name="method" />.</span></span></param>
        <param name="method"><span data-ttu-id="fd404-167">Der Name der Instanzenmethode, die durch den Delegaten dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-167">The name of the instance method that the delegate represents.</span></span></param>
        <summary><span data-ttu-id="fd404-168">Initialisiert einen Delegaten, der die angegebene Instanzenmethode für die angegebene Klasseninstanz aufruft.</span><span class="sxs-lookup"><span data-stu-id="fd404-168">Initializes a delegate that invokes the specified instance method on the specified class instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-169">Dieser Konstruktor kann nicht im Anwendungscode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-169">This constructor cannot be used in application code.</span></span> <span data-ttu-id="fd404-170">Verwenden Sie zum Erstellen eines Delegaten durch Angeben des Namens einer Instanzmethode eine Überladung von der <xref:System.Delegate.CreateDelegate%2A> Methode, die einen Methodennamen und einem Zielobjekt angibt.</span><span class="sxs-lookup"><span data-stu-id="fd404-170">To create a delegate by specifying the name of an instance method, use an overload of the <xref:System.Delegate.CreateDelegate%2A> method that specifies a method name and a target object.</span></span> <span data-ttu-id="fd404-171">Z. B. die <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%29> methodenüberladung erstellt einen Delegaten für eine Instanzmethode mit einem angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="fd404-171">For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%29> method overload creates a delegate for an instance method with a specified name.</span></span>  
  
 <span data-ttu-id="fd404-172">Dieser Konstruktor erstellt nur Delegaten für die Instanz.</span><span class="sxs-lookup"><span data-stu-id="fd404-172">This constructor creates delegates for instance methods only.</span></span> <span data-ttu-id="fd404-173">Eine Instanzmethode handelt es sich um eine Methode, die eine Instanz einer Klasse zugeordnet ist; eine statische Methode handelt es sich um eine Methode, die die Klasse selbst zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-173">An instance method is a method that is associated with an instance of a class; a static method is a method that is associated with the class itself.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd404-174"><paramref name="target" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-174"><paramref name="target" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-175">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-175">-or-</span></span> 
 <span data-ttu-id="fd404-176"><paramref name="method" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-176"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-177">Beim Binden an die Zielmethode ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="fd404-177">There was an error binding to the target method.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-178">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-178">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-179">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-179">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Delegate (Type target, string method);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Type target, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (target As Type, method As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Delegate(Type ^ target, System::String ^ method);" />
      <MemberSignature Language="F#" Value="new Delegate : Type * string -&gt; Delegate" Usage="new System.Delegate (target, method)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="target" Type="System.Type" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="fd404-180">Der <see cref="T:System.Type" />, der die Klasse darstellt, die <paramref name="method" /> definiert.</span><span class="sxs-lookup"><span data-stu-id="fd404-180">The <see cref="T:System.Type" /> representing the class that defines <paramref name="method" />.</span></span></param>
        <param name="method"><span data-ttu-id="fd404-181">Der Name der statischen Methode, die durch den Delegaten dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-181">The name of the static method that the delegate represents.</span></span></param>
        <summary><span data-ttu-id="fd404-182">Initialisiert einen Delegaten, der die angegebene statische Methode der angegebenen Klasse aufruft.</span><span class="sxs-lookup"><span data-stu-id="fd404-182">Initializes a delegate that invokes the specified static method from the specified class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-183">Dieser Konstruktor kann nicht im Anwendungscode verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-183">This constructor cannot be used in application code.</span></span> <span data-ttu-id="fd404-184">Um einen Delegaten erstellen, indem Sie den Namen einer statischen Methode angeben, verwenden Sie eine Überladung von der <xref:System.Delegate.CreateDelegate%2A> -Methode, die einen Methodennamen angibt, aber ein Zielobjekt ist nicht angegeben.</span><span class="sxs-lookup"><span data-stu-id="fd404-184">To create a delegate by specifying the name of a static method, use an overload of the <xref:System.Delegate.CreateDelegate%2A> method that specifies a method name but does not specify a target object.</span></span> <span data-ttu-id="fd404-185">Z. B. die <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%29> methodenüberladung erstellt einen statischen Delegaten für eine Methode mit dem angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="fd404-185">For example, the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%29> method overload creates a static delegate for a method with a specified name.</span></span>  
  
 <span data-ttu-id="fd404-186">Dieser Konstruktor erstellt die Delegaten für die nur statische Methoden.</span><span class="sxs-lookup"><span data-stu-id="fd404-186">This constructor creates delegates for static methods only.</span></span> <span data-ttu-id="fd404-187">Eine Instanzmethode handelt es sich um eine Methode, die eine Instanz einer Klasse zugeordnet ist; eine statische Methode handelt es sich um eine Methode, die die Klasse selbst zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-187">An instance method is a method that is associated with an instance of a class; a static method is a method that is associated with the class itself.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd404-188"><paramref name="target" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-188"><paramref name="target" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-189">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-189">-or-</span></span> 
 <span data-ttu-id="fd404-190"><paramref name="method" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-190"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-191"><paramref name="target" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-191"><paramref name="target" /> is not a <see langword="RuntimeType" />.</span></span> <span data-ttu-id="fd404-192">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-192">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span>  
  
<span data-ttu-id="fd404-193">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-193">-or-</span></span> 
 <span data-ttu-id="fd404-194"><paramref name="target" /> entspricht einem offenen generischen Typ.</span><span class="sxs-lookup"><span data-stu-id="fd404-194"><paramref name="target" /> represents an open generic type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-195">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-195">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-196">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-196">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="delegate.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd404-197">Erstellt eine flache Kopie des Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-197">Creates a shallow copy of the delegate.</span></span></summary>
        <returns><span data-ttu-id="fd404-198">Eine flache Kopie des Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-198">A shallow copy of the delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-199">Der Klon hat dieselbe <xref:System.Type>, Ziel, Methode und das Aufrufen der Liste wie der ursprüngliche Delegat.</span><span class="sxs-lookup"><span data-stu-id="fd404-199">The clone has the same <xref:System.Type>, target, method, and invocation list as the original delegate.</span></span>  
  
 <span data-ttu-id="fd404-200">Eine flache Kopie erstellt eine neue Instanz des gleichen Typs wie das ursprüngliche Objekt, und klicken Sie dann die nicht statische Felder des ursprünglichen Objekts kopiert.</span><span class="sxs-lookup"><span data-stu-id="fd404-200">A shallow copy creates a new instance of the same type as the original object, and then copies the nonstatic fields of the original object.</span></span> <span data-ttu-id="fd404-201">Wenn das Feld ein Werttyp ist, erfolgt eine Bit für Bit-Kopie des Felds.</span><span class="sxs-lookup"><span data-stu-id="fd404-201">If the field is a value type, a bit-by-bit copy of the field is performed.</span></span> <span data-ttu-id="fd404-202">Wenn das Feld ein Verweistyp ist, wird der Verweis kopiert, aber das Objekt verwiesen wird, ist nicht; Zeigen Sie daher den Verweis in das ursprüngliche Objekt und der Verweis auf dem geklonten auf dasselbe Objekt.</span><span class="sxs-lookup"><span data-stu-id="fd404-202">If the field is a reference type, the reference is copied but the referred object is not; therefore, the reference in the original object and the reference in the clone point to the same object.</span></span> <span data-ttu-id="fd404-203">Im Gegensatz dazu dupliziert eine tiefe Kopie eines Objekts wird alles, was die Felder in das Objekt direkt oder indirekt verweist.</span><span class="sxs-lookup"><span data-stu-id="fd404-203">In contrast, a deep copy of an object duplicates everything directly or indirectly referenced by the fields in the object.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-204">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-204">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-205">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-205">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Combine">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd404-206">Verkettet die Aufruflisten der angegebenen Multicastdelegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-206">Concatenates the invocation lists of the specified multicast (combinable) delegates.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static Delegate Combine (params Delegate[] delegates);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate Combine(class System.Delegate[] delegates) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.Combine(System.Delegate[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (ParamArray delegates As Delegate()) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ Combine(... cli::array &lt;Delegate ^&gt; ^ delegates);" />
      <MemberSignature Language="F#" Value="static member Combine : Delegate[] -&gt; Delegate" Usage="System.Delegate.Combine delegates" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="delegates" Type="System.Delegate[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="delegates"><span data-ttu-id="fd404-207">Das zu kombinierende Array von Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-207">The array of delegates to combine.</span></span></param>
        <summary><span data-ttu-id="fd404-208">Verkettet die Aufruflisten eines Arrays von Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-208">Concatenates the invocation lists of an array of delegates.</span></span></summary>
        <returns><span data-ttu-id="fd404-209">Ein neuer Delegat mit einer Aufrufliste, die aus der Verkettung der Aufruflisten der Delegaten im <paramref name="delegates" />-Array besteht.</span><span class="sxs-lookup"><span data-stu-id="fd404-209">A new delegate with an invocation list that concatenates the invocation lists of the delegates in the <paramref name="delegates" /> array.</span></span> <span data-ttu-id="fd404-210">Gibt <see langword="null" /> zurück, wenn <paramref name="delegates" /> <see langword="null" /> ist, <paramref name="delegates" /> 0 Elemente enthält oder jeder Eintrag in <paramref name="delegates" /> <see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-210">Returns <see langword="null" /> if <paramref name="delegates" /> is <see langword="null" />, if <paramref name="delegates" /> contains zero elements, or if every entry in <paramref name="delegates" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-211">Wenn die `delegates` Array enthält Einträge `null`, diese Einträge werden ignoriert.</span><span class="sxs-lookup"><span data-stu-id="fd404-211">If the `delegates` array contains entries that are `null`, those entries are ignored.</span></span>  
  
 <span data-ttu-id="fd404-212">Die Aufrufliste kann doppelte Einträge enthalten. d. h. die Einträge, die auf die gleiche Methode für das gleiche Objekt verweisen.</span><span class="sxs-lookup"><span data-stu-id="fd404-212">The invocation list can contain duplicate entries; that is, entries that refer to the same method on the same object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-213">Generische Delegaten, die zuweisungskompatibel sind aufgrund der Varianz sind nicht unbedingt mit den flexibel kombinierbaren.</span><span class="sxs-lookup"><span data-stu-id="fd404-213">Generic delegates that are assignment-compatible because of variance are not necessarily combinable.</span></span> <span data-ttu-id="fd404-214">Um mit den flexibel kombinierbaren sein, müssen die Typen exakt übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="fd404-214">To be combinable, the types must match exactly.</span></span> <span data-ttu-id="fd404-215">Nehmen wir beispielsweise an, dass eine Klasse mit dem Namen `Derived` stammt aus einer Klasse namens `Base`.</span><span class="sxs-lookup"><span data-stu-id="fd404-215">For example, suppose that a class named `Derived` is derived from a class named `Base`.</span></span> <span data-ttu-id="fd404-216">Ein Delegat vom Typ `Action<Base>` (`Action(Of Base)` in Visual Basic) kann eine Variable des Typs zugewiesen werden `Action<Derived>`, wie unter [Kovarianz und Kontravarianz](~/docs/standard/generics/covariance-and-contravariance.md), aber die beiden Delegaten können nicht kombiniert werden, da die Typen bereitgestellt werden nicht exakt überein.</span><span class="sxs-lookup"><span data-stu-id="fd404-216">A delegate of type `Action<Base>` (`Action(Of Base)` in Visual Basic) can be assigned to a variable of type `Action<Derived>`, as explained in [Covariance and Contravariance](~/docs/standard/generics/covariance-and-contravariance.md), but the two delegates cannot be combined because the types do not match exactly.</span></span>  
  
 <span data-ttu-id="fd404-217"><xref:System.Delegate.Combine%2A> ist nützlich für das Erstellen von Ereignishandlern, die, dass mehrere Methoden jedes Mal bei einem Ereignis des Anrufs gewählt.</span><span class="sxs-lookup"><span data-stu-id="fd404-217"><xref:System.Delegate.Combine%2A> is useful for creating event handlers that call multiple methods each time an event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-218">Nicht alle Einträge ungleich null in <paramref name="delegates" /> sind Instanzen des gleichen Delegattyps.</span><span class="sxs-lookup"><span data-stu-id="fd404-218">Not all the non-null entries in <paramref name="delegates" /> are instances of the same delegate type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-219">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-219">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-220">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-220">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="T:System.MulticastDelegate" />
        <altmember cref="M:System.Delegate.CombineImpl(System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="Combine">
      <MemberSignature Language="C#" Value="public static Delegate Combine (Delegate a, Delegate b);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate Combine(class System.Delegate a, class System.Delegate b) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.Combine(System.Delegate,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Combine (a As Delegate, b As Delegate) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ Combine(Delegate ^ a, Delegate ^ b);" />
      <MemberSignature Language="F#" Value="static member Combine : Delegate * Delegate -&gt; Delegate" Usage="System.Delegate.Combine (a, b)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="a" Type="System.Delegate" />
        <Parameter Name="b" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="a"><span data-ttu-id="fd404-221">Der Delegat, dessen Aufrufliste die erste Liste ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-221">The delegate whose invocation list comes first.</span></span></param>
        <param name="b"><span data-ttu-id="fd404-222">Der Delegat, dessen Aufrufliste die letzte Liste ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-222">The delegate whose invocation list comes last.</span></span></param>
        <summary><span data-ttu-id="fd404-223">Verkettet die Aufruflisten zweier Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-223">Concatenates the invocation lists of two delegates.</span></span></summary>
        <returns><span data-ttu-id="fd404-224">Eine neuer Delegat mit einer Aufrufliste, die aus der Verkettung der Aufruflisten von <paramref name="a" /> und <paramref name="b" /> in dieser Reihenfolge besteht.</span><span class="sxs-lookup"><span data-stu-id="fd404-224">A new delegate with an invocation list that concatenates the invocation lists of <paramref name="a" /> and <paramref name="b" /> in that order.</span></span> <span data-ttu-id="fd404-225">Gibt <paramref name="a" /> zurück, wenn <paramref name="b" /> gleich <see langword="null" /> ist, gibt <paramref name="b" /> zurück, wenn <paramref name="a" /> ein NULL-Verweis ist, und gibt einen NULL-Verweis zurück, wenn <paramref name="a" /> und <paramref name="b" /> NULL-Verweise sind.</span><span class="sxs-lookup"><span data-stu-id="fd404-225">Returns <paramref name="a" /> if <paramref name="b" /> is <see langword="null" />, returns <paramref name="b" /> if <paramref name="a" /> is a null reference, and returns a null reference if both <paramref name="a" /> and <paramref name="b" /> are null references.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-226">Die Aufrufliste kann doppelte Einträge enthalten. d. h. die Einträge, die auf die gleiche Methode für das gleiche Objekt verweisen.</span><span class="sxs-lookup"><span data-stu-id="fd404-226">The invocation list can contain duplicate entries; that is, entries that refer to the same method on the same object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-227">Generische Delegaten, die zuweisungskompatibel sind aufgrund der Varianz sind nicht unbedingt mit den flexibel kombinierbaren.</span><span class="sxs-lookup"><span data-stu-id="fd404-227">Generic delegates that are assignment-compatible because of variance are not necessarily combinable.</span></span> <span data-ttu-id="fd404-228">Um mit den flexibel kombinierbaren sein, müssen die Typen exakt übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="fd404-228">To be combinable, the types must match exactly.</span></span> <span data-ttu-id="fd404-229">Nehmen wir beispielsweise an, dass eine Klasse mit dem Namen `Derived` stammt aus einer Klasse namens `Base`.</span><span class="sxs-lookup"><span data-stu-id="fd404-229">For example, suppose that a class named `Derived` is derived from a class named `Base`.</span></span> <span data-ttu-id="fd404-230">Ein Delegat vom Typ `Action<Base>` (`Action(Of Base)` in Visual Basic) kann eine Variable des Typs zugewiesen werden `Action<Derived>`, wie unter [Kovarianz und Kontravarianz](~/docs/standard/generics/covariance-and-contravariance.md), aber die beiden Delegaten können nicht kombiniert werden, da die Typen bereitgestellt werden nicht exakt überein.</span><span class="sxs-lookup"><span data-stu-id="fd404-230">A delegate of type `Action<Base>` (`Action(Of Base)` in Visual Basic) can be assigned to a variable of type `Action<Derived>`, as explained in [Covariance and Contravariance](~/docs/standard/generics/covariance-and-contravariance.md), but the two delegates cannot be combined because the types do not match exactly.</span></span>  
  
 <span data-ttu-id="fd404-231"><xref:System.Delegate.Combine%2A> ist nützlich für das Erstellen von Ereignishandlern, die, dass mehrere Methoden jedes Mal bei einem Ereignis des Anrufs gewählt.</span><span class="sxs-lookup"><span data-stu-id="fd404-231"><xref:System.Delegate.Combine%2A> is useful for creating event handlers that call multiple methods each time an event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-232">Sowohl <paramref name="a" /> als auch <paramref name="b" /> sind nicht gleich <see langword="null" />, und <paramref name="a" /> und <paramref name="b" /> sind keine Instanzen desselben Delegatentyps.</span><span class="sxs-lookup"><span data-stu-id="fd404-232">Both <paramref name="a" /> and <paramref name="b" /> are not <see langword="null" />, and <paramref name="a" /> and <paramref name="b" /> are not instances of the same delegate type.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-233">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-233">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-234">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-234">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="T:System.MulticastDelegate" />
        <altmember cref="M:System.Delegate.CombineImpl(System.Delegate)" />
      </Docs>
    </Member>
    <Member MemberName="CombineImpl">
      <MemberSignature Language="C#" Value="protected virtual Delegate CombineImpl (Delegate d);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Delegate CombineImpl(class System.Delegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.CombineImpl(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CombineImpl (d As Delegate) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Delegate ^ CombineImpl(Delegate ^ d);" />
      <MemberSignature Language="F#" Value="abstract member CombineImpl : Delegate -&gt; Delegate&#xA;override this.CombineImpl : Delegate -&gt; Delegate" Usage="delegate.CombineImpl d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="fd404-235">Der Multicastdelegat, dessen Aufrufliste an das Ende der Aufrufliste des aktuellen Multicastdelegaten angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-235">The multicast (combinable) delegate whose invocation list to append to the end of the invocation list of the current multicast (combinable) delegate.</span></span></param>
        <summary><span data-ttu-id="fd404-236">Verkettet die Aufruflisten des angegebenen und des aktuellen Multicastdelegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-236">Concatenates the invocation lists of the specified multicast (combinable) delegate and the current multicast (combinable) delegate.</span></span></summary>
        <returns><span data-ttu-id="fd404-237">Eine neuer Multicastdelegat, dessen Aufrufliste aus der Verkettung der Aufrufliste des aktuellen Multicastdelegaten mit der Aufrufliste von <paramref name="d" /> besteht, oder der aktuelle Multicastdelegat, wenn <paramref name="d" /><see langword="null" /> ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-237">A new multicast (combinable) delegate with an invocation list that concatenates the invocation list of the current multicast (combinable) delegate and the invocation list of <paramref name="d" />, or the current multicast (combinable) delegate if <paramref name="d" /> is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-238">Diese Methode gilt nur, wenn die aktuelle Delegaten multicast (mit den flexibel kombinierbaren).</span><span class="sxs-lookup"><span data-stu-id="fd404-238">This method applies only if the current delegate is multicast (combinable).</span></span>  
  
 <span data-ttu-id="fd404-239">Die aktuelle Implementierung löst einfach ein <xref:System.MulticastNotSupportedException>.</span><span class="sxs-lookup"><span data-stu-id="fd404-239">The current implementation simply throws a <xref:System.MulticastNotSupportedException>.</span></span>  
  
 <span data-ttu-id="fd404-240">Die Aufrufliste kann doppelte Einträge enthalten. d. h. die Einträge, die auf die gleiche Methode für das gleiche Objekt verweisen.</span><span class="sxs-lookup"><span data-stu-id="fd404-240">The invocation list can contain duplicate entries; that is, entries that refer to the same method on the same object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MulticastNotSupportedException"><span data-ttu-id="fd404-241">Wird immer ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="fd404-241">Always thrown.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-242">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-242">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-243">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-243">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Delegate.Combine(System.Delegate,System.Delegate)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateDelegate">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fd404-244">Erstellt einen Delegaten vom angegebenen Typs.</span><span class="sxs-lookup"><span data-stu-id="fd404-244">Creates a delegate of the specified type.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="public static Delegate CreateDelegate (Type type, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate CreateDelegate(class System.Type type, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ CreateDelegate(Type ^ type, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member CreateDelegate : Type * System.Reflection.MethodInfo -&gt; Delegate" Usage="System.Delegate.CreateDelegate (type, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd404-245">Der <see cref="T:System.Type" /> des zu erstellenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-245">The <see cref="T:System.Type" /> of delegate to create.</span></span></param>
        <param name="method"><span data-ttu-id="fd404-246">Die <see cref="T:System.Reflection.MethodInfo" />, die die statische Methode oder Instanzmethode beschreibt, die der Delegat darstellen soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-246">The <see cref="T:System.Reflection.MethodInfo" /> describing the static or instance method the delegate is to represent.</span></span> <span data-ttu-id="fd404-247">In .NET Framework, Version 1.0 und 1.1, werden nur statische Methoden unterstützt.</span><span class="sxs-lookup"><span data-stu-id="fd404-247">Only static methods are supported in the .NET Framework version 1.0 and 1.1.</span></span></param>
        <summary><span data-ttu-id="fd404-248">Erstellt einen Delegaten vom angegebenen Typ, der die angegebene statische Methode darstellen soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-248">Creates a delegate of the specified type to represent the specified static method.</span></span></summary>
        <returns><span data-ttu-id="fd404-249">Ein Delegat vom angegebenen Typ, der die angegebene statische Methode darstellen soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-249">A delegate of the specified type to represent the specified static method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-250">In .NET Framework, Version 1.0 und 1.1 erstellt diese methodenüberladung Delegaten für die nur statische Methoden.</span><span class="sxs-lookup"><span data-stu-id="fd404-250">In the .NET Framework version 1.0 and 1.1, this method overload creates delegates for static methods only.</span></span> <span data-ttu-id="fd404-251">In .NET Framework, Version 2.0 kann diese methodenüberladung auch Instanz öffnen-methodendelegaten erstellen. Delegaten, die das ausgeblendete erste Argument von explizit angeben haben, also Instanzmethoden.</span><span class="sxs-lookup"><span data-stu-id="fd404-251">In the .NET Framework version 2.0, this method overload also can create open instance method delegates; that is, delegates that explicitly supply the hidden first argument of instance methods.</span></span> <span data-ttu-id="fd404-252">Eine ausführlichere Erklärung finden Sie unter die allgemeinere <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.Reflection.MethodInfo%29> methodenüberladung, um alle Kombinationen von offenen oder geschlossenen Delegaten für die Instanz oder statische Methoden zu erstellen und optional ein erstes Argument angeben können.</span><span class="sxs-lookup"><span data-stu-id="fd404-252">For a detailed explanation, see the more general <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.Reflection.MethodInfo%29> method overload, which allows you to create all combinations of open or closed delegates for instance or static methods, and optionally to specify a first argument.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-253">Überladung dieser Methode sollte verwendet werden, wenn der Delegat nicht über die ersten Arguments, geschlossen wird, da er in diesem Fall etwas schneller ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-253">This method overload should be used when the delegate is not closed over its first argument, because it is somewhat faster in that case.</span></span>  
  
 <span data-ttu-id="fd404-254">Überladung dieser Methode entspricht dem Aufrufen der <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%2CSystem.Boolean%29> -methodenüberladung, und geben `true` für `throwOnBindFailure`.</span><span class="sxs-lookup"><span data-stu-id="fd404-254">This method overload is equivalent to calling the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%2CSystem.Boolean%29> method overload and specifying `true` for `throwOnBindFailure`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-255">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Methode kann verwendet werden, um nicht öffentliche Methoden zugreifen, wenn der Aufrufer erteilt wurde <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> kennzeichnen und Menge oder eine Teilmenge der Berechtigungssatz die nicht öffentliche Methoden an des Aufrufers des beschränkt ist zu gewähren davon.</span><span class="sxs-lookup"><span data-stu-id="fd404-255">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public methods if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public methods is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fd404-256">(Finden Sie unter [Überlegungen zur Sicherheit für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fd404-256">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fd404-257">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="fd404-257">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
## <a name="compatible-parameter-types-and-return-type"></a><span data-ttu-id="fd404-258">Kompatible Parameter und Rückgabetypen</span><span class="sxs-lookup"><span data-stu-id="fd404-258">Compatible Parameter Types and Return Type</span></span>  
 <span data-ttu-id="fd404-259">In .NET Framework, Version 2.0 müssen die Parametertypen und der Rückgabetyp eines Delegaten mit der Überladung dieser Methode erstellte kompatibel sein mit den Parametertypen und den Rückgabetyp der Methode, die der Delegat darstellt. die Typen müssen nicht genau übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="fd404-259">In the .NET Framework version 2.0, the parameter types and return type of a delegate created using this method overload must be compatible with the parameter types and return type of the method the delegate represents; the types do not have to match exactly.</span></span> <span data-ttu-id="fd404-260">Dies stellt eine Lockerung der Bindung-Verhalten in .NET Framework, Version 1.0 und 1.1 wird, in denen die Typen exakt übereinstimmen müssen.</span><span class="sxs-lookup"><span data-stu-id="fd404-260">This represents a relaxation of the binding behavior in the .NET Framework version 1.0 and 1.1, where the types must match exactly.</span></span>  
  
 <span data-ttu-id="fd404-261">Ein Parameter eines Delegaten ist mit dem entsprechenden Parameter einer Methode kompatibel, wenn der Typ des Delegatenparameters restriktiver ist als der Methodenparameter, da so gewährleistet ist, dass ein an den Delegaten übergebenes Argument problemlos an die Methode weitergeleitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-261">A parameter of a delegate is compatible with the corresponding parameter of a method if the type of the delegate parameter is more restrictive than the type of the method parameter, because this guarantees that an argument passed to the delegate can be passed safely to the method.</span></span>  
  
 <span data-ttu-id="fd404-262">Ebenso ist der Rückgabetyp eines Delegaten kompatibel mit dem Rückgabetyp einer Methode, wenn der Rückgabetyp der Methode restriktiver ist als der Rückgabetyp des Delegaten, da so gewährleistet ist, dass der Rückgabewert der Methode problemlos in den Rückgabetyp des Delegaten umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-262">Similarly, the return type of a delegate is compatible with the return type of a method if the return type of the method is more restrictive than the return type of the delegate, because this guarantees that the return value of the method can be cast safely to the return type of the delegate.</span></span>  
  
 <span data-ttu-id="fd404-263">Angenommen, ein Delegat mit einem Parameter vom Typ <xref:System.Collections.Hashtable> und dem Rückgabetyp der <xref:System.Object> kann eine Methode mit einem Parameter des Typs darstellen <xref:System.Object> sowie einen Rückgabewert vom Typ <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="fd404-263">For example, a delegate with a parameter of type <xref:System.Collections.Hashtable> and a return type of <xref:System.Object> can represent a method with a parameter of type <xref:System.Object> and a return value of type <xref:System.Collections.Hashtable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd404-264">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="fd404-264">This section contains two code examples.</span></span> <span data-ttu-id="fd404-265">Das erste Beispiel veranschaulicht die beiden Arten von Delegaten, die Überladung dieser Methode erstellt werden können: Öffnen Sie über eine Instanzmethode und über eine statische Methode.</span><span class="sxs-lookup"><span data-stu-id="fd404-265">The first example demonstrates the two kinds of delegates that can be created with this method overload: open over an instance method and open over a static method.</span></span>  
  
 <span data-ttu-id="fd404-266">Im zweiten Codebeispiel wird veranschaulicht, kompatible Parametertypen und Rückgabetypen.</span><span class="sxs-lookup"><span data-stu-id="fd404-266">The second code example demonstrates compatible parameter types and return types.</span></span>  
  
 <span data-ttu-id="fd404-267">**Beispiel 1**</span><span class="sxs-lookup"><span data-stu-id="fd404-267">**Example 1**</span></span>  
  
 <span data-ttu-id="fd404-268">Im folgenden Codebeispiel wird veranschaulicht, die zwei Möglichkeiten, die ein Delegat erstellt werden kann, verwenden diese Überladung von der <xref:System.Delegate.CreateDelegate%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fd404-268">The following code example demonstrates the two ways a delegate can be created using this overload of the <xref:System.Delegate.CreateDelegate%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-269">Es gibt zwei Überladungen der der <xref:System.Delegate.CreateDelegate%2A> Methode, die angeben, ein <xref:System.Reflection.MethodInfo> jedoch kein erstes Argument; ihre Funktionalität ist identisch, außer dass eine Ihnen die ermöglicht Angabe, ob bei Bindungsfehlern ausgelöst werden, und die andere löst immer eine.</span><span class="sxs-lookup"><span data-stu-id="fd404-269">There are two overloads of the <xref:System.Delegate.CreateDelegate%2A> method that specify a <xref:System.Reflection.MethodInfo> but not a first argument; their functionality is the same except that one allows you to specify whether to throw on failure to bind, and the other always throws.</span></span> <span data-ttu-id="fd404-270">Dieses Codebeispiel verwendet beide Überladungen.</span><span class="sxs-lookup"><span data-stu-id="fd404-270">This code example uses both overloads.</span></span>  
  
 <span data-ttu-id="fd404-271">Das Beispiel deklariert eine Klasse `C` mit einer statischen Methode `M2` und eine Instanzmethode `M1`, und zwei Delegattypen: `D1` akzeptiert eine Instanz von `C` und eine Zeichenfolge, und `D2` nimmt eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="fd404-271">The example declares a class `C` with a static method `M2` and an instance method `M1`, and two delegate types: `D1` takes an instance of `C` and a string, and `D2` takes a string.</span></span>  
  
 <span data-ttu-id="fd404-272">Eine zweite Klasse namens `Example` enthält den Code, der den Delegaten erstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-272">A second class named `Example` contains the code that creates the delegates.</span></span>  
  
-   <span data-ttu-id="fd404-273">Ein Delegat vom Typ `D1`, der eine offene Instanzmethode darstellt, wird für die Instanzmethode erstellt `M1`.</span><span class="sxs-lookup"><span data-stu-id="fd404-273">A delegate of type `D1`, representing an open instance method, is created for the instance method `M1`.</span></span> <span data-ttu-id="fd404-274">Eine Instanz muss übergeben werden, wenn der Delegat aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-274">An instance must be passed when the delegate is invoked.</span></span>  
  
-   <span data-ttu-id="fd404-275">Ein Delegat vom Typ `D2`, eine offene statische Methode darstellt, wird für die statische Methode erstellt `M2`.</span><span class="sxs-lookup"><span data-stu-id="fd404-275">A delegate of type `D2`, representing an open static method, is created for the static method `M2`.</span></span>  
  
 [!code-csharp[Delegate.CreateDelegateTOM#1](~/samples/snippets/csharp/VS_Snippets_CLR/Delegate.CreateDelegateTOM/cs/openClosedOver.cs#1)]
 [!code-vb[Delegate.CreateDelegateTOM#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Delegate.CreateDelegateTOM/VB/openClosedOver.vb#1)]  
  
 <span data-ttu-id="fd404-276">**Beispiel 2**</span><span class="sxs-lookup"><span data-stu-id="fd404-276">**Example 2**</span></span>  
  
 <span data-ttu-id="fd404-277">Im folgenden Codebeispiel wird veranschaulicht, die Kompatibilität der Parametertypen und Rückgabetypen.</span><span class="sxs-lookup"><span data-stu-id="fd404-277">The following code example demonstrates compatibility of parameter types and return types.</span></span>  
  
 <span data-ttu-id="fd404-278">Das Codebeispiel definiert eine Basisklasse, die mit dem Namen `Base` und eine Klasse namens `Derived` abgeleitet, die `Base`.</span><span class="sxs-lookup"><span data-stu-id="fd404-278">The code example defines a base class named `Base` and a class named `Derived` that derives from `Base`.</span></span> <span data-ttu-id="fd404-279">Die abgeleitete Klasse verfügt über eine `static` (`Shared` in Visual Basic) Methode, die mit dem Namen `MyMethod` mit einem Parameter vom Typ `Base` und dem Rückgabetyp der `Derived`.</span><span class="sxs-lookup"><span data-stu-id="fd404-279">The derived class has a `static` (`Shared` in Visual Basic) method named `MyMethod` with one parameter of type `Base` and a return type of `Derived`.</span></span> <span data-ttu-id="fd404-280">Im Codebeispiel wird definiert auch einen Delegaten, der mit dem Namen `Example` , die einen Parameter vom Typ hat `Derived` und dem Rückgabetyp der `Base`.</span><span class="sxs-lookup"><span data-stu-id="fd404-280">The code example also defines a delegate named `Example` that has one parameter of type `Derived` and a return type of `Base`.</span></span>  
  
 <span data-ttu-id="fd404-281">Im Codebeispiel wird veranschaulicht, dass der Delegat, mit dem Namen `Example` können verwendet werden, um die Methode darstellen `MyMethod`.</span><span class="sxs-lookup"><span data-stu-id="fd404-281">The code example demonstrates that the delegate named `Example` can be used to represent the method `MyMethod`.</span></span> <span data-ttu-id="fd404-282">Die Methode kann an den Delegaten gebunden werden, da:</span><span class="sxs-lookup"><span data-stu-id="fd404-282">The method can be bound to the delegate because:</span></span>  
  
-   <span data-ttu-id="fd404-283">Der Parametertyp des Delegaten (`Derived`) ist stärker eingeschränkt als der Parametertyp des `MyMethod` (`Base`), sodass es immer sicher an das Argument des Delegaten zu übergeben sind `MyMethod`.</span><span class="sxs-lookup"><span data-stu-id="fd404-283">The parameter type of the delegate (`Derived`) is more restrictive than the parameter type of `MyMethod` (`Base`), so that it is always safe to pass the argument of the delegate to `MyMethod`.</span></span>  
  
-   <span data-ttu-id="fd404-284">Der Rückgabetyp der `MyMethod` (`Derived`) ist stärker eingeschränkt als der Parametertyp des Delegaten (`Base`), sodass sie immer sicher, das den Rückgabetyp der Methode, die den Rückgabetyp des Delegaten umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-284">The return type of `MyMethod` (`Derived`) is more restrictive than the parameter type of the delegate (`Base`), so that it is always safe to cast the return type of the method to the return type of the delegate.</span></span>  
  
 <span data-ttu-id="fd404-285">Im Codebeispiel erzeugt keine Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="fd404-285">The code example produces no output.</span></span>  
  
 [!code-cpp[Delegate.CreateDelegate_RelaxedFit#1](~/samples/snippets/cpp/VS_Snippets_CLR/Delegate.CreateDelegate_RelaxedFit/cpp/source.cpp#1)]
 [!code-csharp[Delegate.CreateDelegate_RelaxedFit#1](~/samples/snippets/csharp/VS_Snippets_CLR/Delegate.CreateDelegate_RelaxedFit/cs/source.cs#1)]
 [!code-vb[Delegate.CreateDelegate_RelaxedFit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Delegate.CreateDelegate_RelaxedFit/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd404-286"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-286"><paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-287">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-287">-or-</span></span> 
 <span data-ttu-id="fd404-288"><paramref name="method" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-288"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-289"><paramref name="type" /> erbt nicht <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-289"><paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.</span></span>  
  
<span data-ttu-id="fd404-290">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-290">-or-</span></span> 
 <span data-ttu-id="fd404-291"><paramref name="type" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-291"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span> <span data-ttu-id="fd404-292">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-292">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span>  
  
<span data-ttu-id="fd404-293">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-293">-or-</span></span> 
 <span data-ttu-id="fd404-294"><paramref name="method" /> ist keine statische Methode und die .NET Framework-Version ist 1.0 oder 1.1.</span><span class="sxs-lookup"><span data-stu-id="fd404-294"><paramref name="method" /> is not a static method, and the .NET Framework version is 1.0 or 1.1.</span></span>  
  
<span data-ttu-id="fd404-295">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-295">-or-</span></span> 
 <span data-ttu-id="fd404-296"><paramref name="method" /> kann nicht gebunden werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-296"><paramref name="method" /> cannot be bound.</span></span>  
  
<span data-ttu-id="fd404-297">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-297">-or-</span></span> 
 <span data-ttu-id="fd404-298"><paramref name="method" /> ist keine <see langword="RuntimeMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-298"><paramref name="method" /> is not a <see langword="RuntimeMethodInfo" />.</span></span> <span data-ttu-id="fd404-299">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-299">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="fd404-300">Die <see langword="Invoke" />-Methode von <paramref name="type" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="fd404-300">The <see langword="Invoke" /> method of <paramref name="type" /> is not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="fd404-301">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-301">The caller does not have the permissions necessary to access <paramref name="method" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-302">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-302">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-303">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-303">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.MulticastDelegate" />
        <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="public static Delegate CreateDelegate (Type type, object firstArgument, System.Reflection.MethodInfo method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate CreateDelegate(class System.Type type, object firstArgument, class System.Reflection.MethodInfo method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ CreateDelegate(Type ^ type, System::Object ^ firstArgument, System::Reflection::MethodInfo ^ method);" />
      <MemberSignature Language="F#" Value="static member CreateDelegate : Type * obj * System.Reflection.MethodInfo -&gt; Delegate" Usage="System.Delegate.CreateDelegate (type, firstArgument, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="firstArgument" Type="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd404-304">Der <see cref="T:System.Type" /> des zu erstellenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-304">The <see cref="T:System.Type" /> of delegate to create.</span></span></param>
        <param name="firstArgument"><span data-ttu-id="fd404-305">Das Objekt, an das der Delegat gebunden ist, oder <see langword="null" />, um <paramref name="method" /> als <see langword="static" /> (<see langword="Shared" /> in Visual Basic) zu behandeln.</span><span class="sxs-lookup"><span data-stu-id="fd404-305">The object to which the delegate is bound, or <see langword="null" /> to treat <paramref name="method" /> as <see langword="static" /> (<see langword="Shared" /> in Visual Basic).</span></span></param>
        <param name="method"><span data-ttu-id="fd404-306">Die <see cref="T:System.Reflection.MethodInfo" />, die die statische Methode oder Instanzmethode beschreibt, die der Delegat darstellen soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-306">The <see cref="T:System.Reflection.MethodInfo" /> describing the static or instance method the delegate is to represent.</span></span></param>
        <summary><span data-ttu-id="fd404-307">Erstellt einen Delegaten vom angegebenen Typ, der die angegebene statische Methode oder Instanzmethode mit dem angegebenen ersten Argument darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-307">Creates a delegate of the specified type that represents the specified static or instance method, with the specified first argument.</span></span></summary>
        <returns><span data-ttu-id="fd404-308">Ein Delegat vom angegebenen Typ, der die angegebene statische Methode oder Instanzmethode darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-308">A delegate of the specified type that represents the specified static or instance method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-309">Aufrufen der Überladung dieser Methode entspricht dem Aufrufen der <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.Reflection.MethodInfo%2CSystem.Boolean%29> -methodenüberladung, und geben `true` für `throwOnBindFailure`.</span><span class="sxs-lookup"><span data-stu-id="fd404-309">Calling this method overload is equivalent to calling the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.Reflection.MethodInfo%2CSystem.Boolean%29> method overload and specifying `true` for `throwOnBindFailure`.</span></span> <span data-ttu-id="fd404-310">Diese beiden Überladungen bieten die flexibelste Möglichkeit zum Erstellen von Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-310">These two overloads provide the most flexible way to create delegates.</span></span> <span data-ttu-id="fd404-311">Sie können diese verwenden, um Delegaten für statische oder Instanzmethoden zu erstellen und optional an das erste Argument.</span><span class="sxs-lookup"><span data-stu-id="fd404-311">You can use them to create delegates for either static or instance methods, and optionally to specify the first argument.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-312">Wenn Sie ein erstes Argument nicht angeben, verwenden Sie die <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%29> methodenüberladung für eine bessere Leistung.</span><span class="sxs-lookup"><span data-stu-id="fd404-312">If you do not supply a first argument, use the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%29> method overload for better performance.</span></span>  
  
 <span data-ttu-id="fd404-313">Der Delegattyp und die Methode müssen kompatible Rückgabetypen haben.</span><span class="sxs-lookup"><span data-stu-id="fd404-313">The delegate type and the method must have compatible return types.</span></span> <span data-ttu-id="fd404-314">D. h. der Rückgabetyp der `method` muss der Rückgabetyp der zugewiesen werden können `type`.</span><span class="sxs-lookup"><span data-stu-id="fd404-314">That is, the return type of `method` must be assignable to the return type of `type`.</span></span>  
  
 <span data-ttu-id="fd404-315">Wenn `firstArgument` wird angegeben, wird es an übergeben `method` jedes Mal, wenn der Delegat aufgerufen wird; `firstArgument` hört sich an den Delegaten gebunden werden und der Delegat wird gesagt, über das erste Argument geschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-315">If `firstArgument` is supplied, it is passed to `method` every time the delegate is invoked; `firstArgument` is said to be bound to the delegate, and the delegate is said to be closed over its first argument.</span></span> <span data-ttu-id="fd404-316">Wenn `method` ist `static` (`Shared` in Visual Basic), wird das Argument bereitgestellte beim Aufrufen des Delegaten Liste schließt alle Parameter außer dem ersten; aus, wenn `method` ist eine Instanzmethode `firstArgument` an der ausgeblendeten Instanz übergeben wird Parameter (dargestellt durch `this` in c# oder durch `Me` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fd404-316">If `method` is `static` (`Shared` in Visual Basic), the argument list supplied when invoking the delegate includes all parameters except the first; if `method` is an instance method, then `firstArgument` is passed to the hidden instance parameter (represented by `this` in C#, or by `Me` in Visual Basic).</span></span>  
  
 <span data-ttu-id="fd404-317">Wenn `firstArgument` angegeben wird, der erste Parameter der `method` muss ein Verweistyp sein und `firstArgument` mit diesem Typ kompatibel sein muss.</span><span class="sxs-lookup"><span data-stu-id="fd404-317">If `firstArgument` is supplied, the first parameter of `method` must be a reference type, and `firstArgument` must be compatible with that type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd404-318">Wenn `method` ist `static` (`Shared` in Visual Basic) und der erste Parameter ist vom Typ <xref:System.Object> oder <xref:System.ValueType>, klicken Sie dann `firstArgument` kann ein Werttyp sein.</span><span class="sxs-lookup"><span data-stu-id="fd404-318">If `method` is `static` (`Shared` in Visual Basic) and its first parameter is of type <xref:System.Object> or <xref:System.ValueType>, then `firstArgument` can be a value type.</span></span> <span data-ttu-id="fd404-319">In diesem Fall `firstArgument` automatisch eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="fd404-319">In this case `firstArgument` is automatically boxed.</span></span> <span data-ttu-id="fd404-320">Automatische Boxing erfolgt nicht für alle anderen Argumente, wie es in einer C#- oder Visual Basic-Funktion aufrufen würden.</span><span class="sxs-lookup"><span data-stu-id="fd404-320">Automatic boxing does not occur for any other arguments, as it would in a C# or Visual Basic function call.</span></span>  
  
 <span data-ttu-id="fd404-321">Wenn `firstArgument` ist ein null-Verweis und `method` eine Instanzmethode ist das Ergebnis hängt von den Signaturen der Typ des Delegaten `type` und `method`:</span><span class="sxs-lookup"><span data-stu-id="fd404-321">If `firstArgument` is a null reference and `method` is an instance method, the result depends on the signatures of the delegate type `type` and of `method`:</span></span>  
  
-   <span data-ttu-id="fd404-322">Wenn die Signatur der `type` schließt explizit die ersten verborgenen Parameter von `method`, der Delegaten gesagt, dass eine offene Instanzmethode darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-322">If the signature of `type` explicitly includes the hidden first parameter of `method`, the delegate is said to represent an open instance method.</span></span> <span data-ttu-id="fd404-323">Wenn der Delegat aufgerufen wird, wird das erste Argument in der Liste der Argumente an den ausgeblendeten Instanz-Parameter übergeben `method`.</span><span class="sxs-lookup"><span data-stu-id="fd404-323">When the delegate is invoked, the first argument in the argument list is passed to the hidden instance parameter of `method`.</span></span>  
  
-   <span data-ttu-id="fd404-324">Wenn die Signaturen der `method` und `type` übereinstimmen (d. h. alle Parametertypen sind kompatibel), und klicken Sie dann der Delegaten gesagt, dass er über einen null-Verweis geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-324">If the signatures of `method` and `type` match (that is, all parameter types are compatible), then the delegate is said to be closed over a null reference.</span></span> <span data-ttu-id="fd404-325">Aufrufen des Delegaten entspricht dem Aufrufen einer Instanzmethode auf eine null-Instanz, die nicht besonders nützlich, etwas zu tun ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-325">Invoking the delegate is like calling an instance method on a null instance, which is not a particularly useful thing to do.</span></span>  
  
 <span data-ttu-id="fd404-326">Wenn `firstArgument` ist ein null-Verweis und `method` ist statisch und das Ergebnis hängt von den Signaturen des Delegattyps `type` und `method`:</span><span class="sxs-lookup"><span data-stu-id="fd404-326">If `firstArgument` is a null reference and `method` is static, the result depends on the signatures of the delegate type `type` and of `method`:</span></span>  
  
-   <span data-ttu-id="fd404-327">Wenn die Signatur der `method` und `type` übereinstimmen (d. h. alle Parametertypen sind kompatibel), der Delegaten gesagt, dass eine offene statische Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-327">If the signature of `method` and `type` match (that is, all parameter types are compatible), the delegate is said to represent an open static method.</span></span> <span data-ttu-id="fd404-328">Dies ist der häufigste Fall für statische Methoden.</span><span class="sxs-lookup"><span data-stu-id="fd404-328">This is the most common case for static methods.</span></span> <span data-ttu-id="fd404-329">In diesem Fall erhalten Sie eine etwas bessere Leistung mithilfe der <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="fd404-329">In this case, you can get slightly better performance by using the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%29> method overload.</span></span>  
  
-   <span data-ttu-id="fd404-330">Wenn die Signatur der `type` beginnt mit dem zweiten Parameter der `method` der Rest der Parametertypen kompatibel sind, und die Delegaten gesagt, dass Sie über ein null-Verweis geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-330">If the signature of `type` begins with the second parameter of `method` and the rest of the parameter types are compatible, then the delegate is said to be closed over a null reference.</span></span> <span data-ttu-id="fd404-331">Wenn der Delegat aufgerufen wird, wird ein null-Verweis auf den ersten Parameter übergeben `method`.</span><span class="sxs-lookup"><span data-stu-id="fd404-331">When the delegate is invoked, a null reference is passed to the first parameter of `method`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-332">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Methode kann verwendet werden, um nicht öffentliche Methoden zugreifen, wenn der Aufrufer erteilt wurde <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> kennzeichnen und Menge oder eine Teilmenge der Berechtigungssatz die nicht öffentliche Methoden an des Aufrufers des beschränkt ist zu gewähren davon.</span><span class="sxs-lookup"><span data-stu-id="fd404-332">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public methods if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public methods is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fd404-333">(Finden Sie unter [Überlegungen zur Sicherheit für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fd404-333">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fd404-334">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="fd404-334">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
## <a name="compatible-parameter-types-and-return-type"></a><span data-ttu-id="fd404-335">Kompatible Parameter und Rückgabetypen</span><span class="sxs-lookup"><span data-stu-id="fd404-335">Compatible Parameter Types and Return Type</span></span>  
 <span data-ttu-id="fd404-336">Die Parameter und Rückgabetypen eines Delegaten müssen mit den Parametertypen und den Rückgabetyp der Methode, die den Delegaten dargestellt kompatibel sein. die Typen müssen nicht genau übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="fd404-336">The parameter types and return type of a delegate must be compatible with the parameter types and return type of the method the delegate represents; the types do not have to match exactly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-337">In .NET Framework, Version 1.0 und 1.1 müssen die Typen exakt übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="fd404-337">In the .NET Framework version 1.0 and 1.1, the types must match exactly.</span></span>  
  
 <span data-ttu-id="fd404-338">Ein Parameter eines Delegaten ist mit dem entsprechenden Parameter einer Methode kompatibel, wenn der Typ des Delegatenparameters restriktiver ist als der Methodenparameter, da so gewährleistet ist, dass ein an den Delegaten übergebenes Argument problemlos an die Methode weitergeleitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-338">A parameter of a delegate is compatible with the corresponding parameter of a method if the type of the delegate parameter is more restrictive than the type of the method parameter, because this guarantees that an argument passed to the delegate can be passed safely to the method.</span></span>  
  
 <span data-ttu-id="fd404-339">Ebenso ist der Rückgabetyp eines Delegaten kompatibel mit dem Rückgabetyp einer Methode, wenn der Rückgabetyp der Methode restriktiver ist als der Rückgabetyp des Delegaten, da so gewährleistet ist, dass der Rückgabewert der Methode problemlos in den Rückgabetyp des Delegaten umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-339">Similarly, the return type of a delegate is compatible with the return type of a method if the return type of the method is more restrictive than the return type of the delegate, because this guarantees that the return value of the method can be cast safely to the return type of the delegate.</span></span>  
  
 <span data-ttu-id="fd404-340">Angenommen, ein Delegat mit einem Parameter vom Typ <xref:System.Collections.Hashtable> und dem Rückgabetyp der <xref:System.Object> kann eine Methode mit einem Parameter des Typs darstellen <xref:System.Object> sowie einen Rückgabewert vom Typ <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="fd404-340">For example, a delegate with a parameter of type <xref:System.Collections.Hashtable> and a return type of <xref:System.Object> can represent a method with a parameter of type <xref:System.Object> and a return value of type <xref:System.Collections.Hashtable>.</span></span>  
  
## <a name="determining-the-methods-a-delegate-can-represent"></a><span data-ttu-id="fd404-341">Bestimmen die Methoden kann ein Delegat darstellen.</span><span class="sxs-lookup"><span data-stu-id="fd404-341">Determining the Methods a Delegate Can Represent</span></span>  
 <span data-ttu-id="fd404-342">Eine weitere nützliche Methode, die Flexibilität, die von dieser Überladung der bereitgestellten betrachten <xref:System.Delegate.CreateDelegate%2A> besteht darin, dass jeder angegebene Delegat vier verschiedene Kombinationen der Methodensignatur und Methodenart (statisch oder Instanz) darstellen kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-342">Another useful way to think of the flexibility provided by this overload of <xref:System.Delegate.CreateDelegate%2A> is that any given delegate can represent four different combinations of method signature and method kind (static versus instance).</span></span> <span data-ttu-id="fd404-343">Betrachten Sie einen Delegattyp `D` mit einem Argument des Typs `C`.</span><span class="sxs-lookup"><span data-stu-id="fd404-343">Consider a delegate type `D` with one argument of type `C`.</span></span> <span data-ttu-id="fd404-344">Im folgenden wird beschrieben, die Methoden `D` darstellen kann, wird den Rückgabetyp wird ignoriert, da es in allen Fällen entsprechen muss:</span><span class="sxs-lookup"><span data-stu-id="fd404-344">The following describes the methods `D` can represent, ignoring the return type since it must match in all cases:</span></span>  
  
-   <span data-ttu-id="fd404-345">`D` kann Instanzmethode, die genau ein Argument des Typs darstellen `C`, unabhängig davon, welchen Typ die Instanzmethode gehört.</span><span class="sxs-lookup"><span data-stu-id="fd404-345">`D` can represent any instance method that has exactly one argument of type `C`, regardless of what type the instance method belongs to.</span></span> <span data-ttu-id="fd404-346">Wenn <xref:System.Delegate.CreateDelegate%2A> aufgerufen wird, `firstArgument` ist eine Instanz des Typs `method` angehört, und der resultierende Delegat wird gesagt, über diese Instanz geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-346">When <xref:System.Delegate.CreateDelegate%2A> is called, `firstArgument` is an instance of the type `method` belongs to, and the resulting delegate is said to be closed over that instance.</span></span> <span data-ttu-id="fd404-347">(Im Grunde `D` kann auch über ein null-Verweis geschlossen werden, wenn `firstArgument` ein null-Verweis ist.)</span><span class="sxs-lookup"><span data-stu-id="fd404-347">(Trivially, `D` can also be closed over a null reference if `firstArgument` is a null reference.)</span></span>  
  
-   <span data-ttu-id="fd404-348">`D` kann eine Instanzmethode darstellen `C` , die keine Argumente verfügt.</span><span class="sxs-lookup"><span data-stu-id="fd404-348">`D` can represent an instance method of `C` that has no arguments.</span></span> <span data-ttu-id="fd404-349">Wenn <xref:System.Delegate.CreateDelegate%2A> aufgerufen wird, `firstArgument` ist ein null-Verweis.</span><span class="sxs-lookup"><span data-stu-id="fd404-349">When <xref:System.Delegate.CreateDelegate%2A> is called, `firstArgument` is a null reference.</span></span> <span data-ttu-id="fd404-350">Der resultierende Delegat stellt eine offene Instanz-Methode und eine Instanz von `C` müssen angegeben werden, bei jedem Aufruf erfolgte.</span><span class="sxs-lookup"><span data-stu-id="fd404-350">The resulting delegate represents an open instance method, and an instance of `C` must be supplied each time it is invoked.</span></span>  
  
-   <span data-ttu-id="fd404-351">`D` kann eine statische Methode, die ein des Typs Argument darstellen `C`, und dass die Methode in einen beliebigen Typ angehören kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-351">`D` can represent a static method that takes one argument of type `C`, and that method can belong to any type.</span></span> <span data-ttu-id="fd404-352">Wenn <xref:System.Delegate.CreateDelegate%2A> aufgerufen wird, `firstArgument` ist ein null-Verweis.</span><span class="sxs-lookup"><span data-stu-id="fd404-352">When <xref:System.Delegate.CreateDelegate%2A> is called, `firstArgument` is a null reference.</span></span> <span data-ttu-id="fd404-353">Der resultierende Delegat stellt eine offene statische Methode und einer Instanz von `C` müssen angegeben werden, bei jedem Aufruf erfolgte.</span><span class="sxs-lookup"><span data-stu-id="fd404-353">The resulting delegate represents an open static method, and an instance of `C` must be supplied each time it is invoked.</span></span>  
  
-   <span data-ttu-id="fd404-354">`D` können eine statische Methode darstellen, die zum Typ gehört `F` und verfügt über zwei Argumente des Typs `F` und `C`.</span><span class="sxs-lookup"><span data-stu-id="fd404-354">`D` can represent a static method that belongs to type `F` and has two arguments, of type `F` and type `C`.</span></span> <span data-ttu-id="fd404-355">Wenn <xref:System.Delegate.CreateDelegate%2A> aufgerufen wird, `firstArgument` ist eine Instanz der `F`.</span><span class="sxs-lookup"><span data-stu-id="fd404-355">When <xref:System.Delegate.CreateDelegate%2A> is called, `firstArgument` is an instance of `F`.</span></span> <span data-ttu-id="fd404-356">Der resultierende Delegat stellt eine statische Methode, die über diese Instanz geschlossen ist `F`.</span><span class="sxs-lookup"><span data-stu-id="fd404-356">The resulting delegate represents a static method that is closed over that instance of `F`.</span></span> <span data-ttu-id="fd404-357">Beachten Sie, dass im Fall, in denen `F` und `C` denselben Typ aufweisen, die statische Methode verfügt über zwei Argumente des Typs.</span><span class="sxs-lookup"><span data-stu-id="fd404-357">Note that in the case where `F` and `C` are the same type, the static method has two arguments of that type.</span></span> <span data-ttu-id="fd404-358">(In diesem Fall `D` wird über einen null-Verweis geschlossen, wenn `firstArgument` ein null-Verweis ist.)</span><span class="sxs-lookup"><span data-stu-id="fd404-358">(In this case, `D` is closed over a null reference if `firstArgument` is a null reference.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd404-359">Dieser Abschnitt enthält drei Codebeispiele aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="fd404-359">This section contains three code examples.</span></span> <span data-ttu-id="fd404-360">Das erste Beispiel veranschaulicht die vier Arten von Delegaten, die erstellt werden können: über eine Instanzmethode, öffnen Sie über eine Instanzmethode, öffnen Sie über eine statische Methode geschlossen und über eine statische Methode geschlossen.</span><span class="sxs-lookup"><span data-stu-id="fd404-360">The first example demonstrates the four kinds of delegates that can be created: closed over an instance method, open over an instance method, open over a static method, and closed over a static method.</span></span>  
  
 <span data-ttu-id="fd404-361">Im zweiten Codebeispiel wird veranschaulicht, kompatible Parametertypen und Rückgabetypen.</span><span class="sxs-lookup"><span data-stu-id="fd404-361">The second code example demonstrates compatible parameter types and return types.</span></span>  
  
 <span data-ttu-id="fd404-362">Im dritten Codebeispiel wird einen einzelner Delegattyp definiert, und zeigt, dass alle Methoden, die den Delegattyp darstellen können.</span><span class="sxs-lookup"><span data-stu-id="fd404-362">The third code example defines a single delegate type, and shows all the methods that delegate type can represent.</span></span>  
  
 <span data-ttu-id="fd404-363">**Beispiel 1**</span><span class="sxs-lookup"><span data-stu-id="fd404-363">**Example 1**</span></span>  
  
 <span data-ttu-id="fd404-364">Im folgenden Codebeispiel wird veranschaulicht, die vier Möglichkeiten, die ein Delegat kann mit dieser Überladung der erstellt werden die <xref:System.Delegate.CreateDelegate%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fd404-364">The following code example demonstrates the four ways a delegate can be created using this overload of the <xref:System.Delegate.CreateDelegate%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-365">Es gibt zwei Überladungen der <xref:System.Delegate.CreateDelegate%2A> Methode, die angeben, `firstArgument` und ein <xref:System.Reflection.MethodInfo>; ihre Funktionalität ist identisch, außer dass eine Ihnen die ermöglicht Angabe, ob bei Bindungsfehlern ausgelöst werden, und die andere löst immer eine.</span><span class="sxs-lookup"><span data-stu-id="fd404-365">There are two overloads of the <xref:System.Delegate.CreateDelegate%2A> method that specify `firstArgument` and a <xref:System.Reflection.MethodInfo>; their functionality is the same except that one allows you to specify whether to throw on failure to bind, and the other always throws.</span></span> <span data-ttu-id="fd404-366">Dieses Codebeispiel verwendet beide Überladungen.</span><span class="sxs-lookup"><span data-stu-id="fd404-366">This code example uses both overloads.</span></span>  
  
 <span data-ttu-id="fd404-367">Das Beispiel deklariert eine Klasse `C` mit einer statischen Methode `M2` und eine Instanzmethode `M1`, sowie zwei Delegattypen: `D1` akzeptiert eine Instanz von `C` und eine Zeichenfolge, `D2` akzeptiert eine Zeichenfolge und `D3`verfügt über keine Argumente.</span><span class="sxs-lookup"><span data-stu-id="fd404-367">The example declares a class `C` with a static method `M2` and an instance method `M1`, and three delegate types: `D1` takes an instance of `C` and a string, `D2` takes a string, and `D3` has no arguments.</span></span>  
  
 <span data-ttu-id="fd404-368">Eine zweite Klasse namens `Example` enthält den Code, der den Delegaten erstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-368">A second class named `Example` contains the code that creates the delegates.</span></span>  
  
-   <span data-ttu-id="fd404-369">Ein Delegat vom Typ `D2`, geschlossen für eine Instanz von `C`, wird für die Instanzmethode erstellt `M1`.</span><span class="sxs-lookup"><span data-stu-id="fd404-369">A delegate of type `D2`, closed over an instance of `C`, is created for the instance method `M1`.</span></span> <span data-ttu-id="fd404-370">Er wird aufgerufen, mit anderen Zeichenfolgen, um anzugeben, dass die gebundene Instanz von `C` wird immer verwendet.</span><span class="sxs-lookup"><span data-stu-id="fd404-370">It is invoked with different strings, to show that the bound instance of `C` is always used.</span></span>  
  
-   <span data-ttu-id="fd404-371">Ein Delegat vom Typ `D1`, der eine offene Instanzmethode darstellt, wird für die Instanzmethode erstellt `M1`.</span><span class="sxs-lookup"><span data-stu-id="fd404-371">A delegate of type `D1`, representing an open instance method, is created for the instance method `M1`.</span></span> <span data-ttu-id="fd404-372">Eine Instanz muss übergeben werden, wenn der Delegat aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-372">An instance must be passed when the delegate is invoked.</span></span>  
  
-   <span data-ttu-id="fd404-373">Ein Delegat vom Typ `D2`, eine offene statische Methode darstellt, wird für die statische Methode erstellt `M2`.</span><span class="sxs-lookup"><span data-stu-id="fd404-373">A delegate of type `D2`, representing an open static method, is created for the static method `M2`.</span></span>  
  
-   <span data-ttu-id="fd404-374">Schließlich einen Delegaten vom Typ `D3`, über eine Zeichenfolge geschlossen, wird für die statische Methode erstellt `M2`.</span><span class="sxs-lookup"><span data-stu-id="fd404-374">Finally, a delegate of type `D3`, closed over a string, is created for the static method `M2`.</span></span> <span data-ttu-id="fd404-375">Die Methode wird aufgerufen, um anzugeben, dass sie die gebundene Zeichenfolge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-375">The method is invoked to show that it uses the bound string.</span></span>  
  
 [!code-csharp[Delegate.CreateDelegateTOM#1](~/samples/snippets/csharp/VS_Snippets_CLR/Delegate.CreateDelegateTOM/cs/openClosedOver.cs#1)]
 [!code-vb[Delegate.CreateDelegateTOM#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Delegate.CreateDelegateTOM/VB/openClosedOver.vb#1)]  
  
 <span data-ttu-id="fd404-376">**Beispiel 2**</span><span class="sxs-lookup"><span data-stu-id="fd404-376">**Example 2**</span></span>  
  
 <span data-ttu-id="fd404-377">Im folgenden Codebeispiel wird veranschaulicht, die Kompatibilität der Parametertypen und Rückgabetypen.</span><span class="sxs-lookup"><span data-stu-id="fd404-377">The following code example demonstrates compatibility of parameter types and return types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-378">Dieses Codebeispiel verwendet die <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="fd404-378">This code example uses the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%29> method overload.</span></span> <span data-ttu-id="fd404-379">Die Verwendung der anderen Überladungen dieser <xref:System.Reflection.MethodInfo> ist ähnlich.</span><span class="sxs-lookup"><span data-stu-id="fd404-379">The use of other overloads that take <xref:System.Reflection.MethodInfo> is similar.</span></span>  
  
 <span data-ttu-id="fd404-380">Das Codebeispiel definiert eine Basisklasse, die mit dem Namen `Base` und eine Klasse namens `Derived` abgeleitet, die `Base`.</span><span class="sxs-lookup"><span data-stu-id="fd404-380">The code example defines a base class named `Base` and a class named `Derived` that derives from `Base`.</span></span> <span data-ttu-id="fd404-381">Die abgeleitete Klasse verfügt über eine `static` (`Shared` in Visual Basic) Methode, die mit dem Namen `MyMethod` mit einem Parameter vom Typ `Base` und dem Rückgabetyp der `Derived`.</span><span class="sxs-lookup"><span data-stu-id="fd404-381">The derived class has a `static` (`Shared` in Visual Basic) method named `MyMethod` with one parameter of type `Base` and a return type of `Derived`.</span></span> <span data-ttu-id="fd404-382">Im Codebeispiel wird definiert auch einen Delegaten, der mit dem Namen `Example` , die einen Parameter vom Typ hat `Derived` und dem Rückgabetyp der `Base`.</span><span class="sxs-lookup"><span data-stu-id="fd404-382">The code example also defines a delegate named `Example` that has one parameter of type `Derived` and a return type of `Base`.</span></span>  
  
 <span data-ttu-id="fd404-383">Im Codebeispiel wird veranschaulicht, dass der Delegat, mit dem Namen `Example` können verwendet werden, um die Methode darstellen `MyMethod`.</span><span class="sxs-lookup"><span data-stu-id="fd404-383">The code example demonstrates that the delegate named `Example` can be used to represent the method `MyMethod`.</span></span> <span data-ttu-id="fd404-384">Die Methode kann an den Delegaten gebunden werden, da:</span><span class="sxs-lookup"><span data-stu-id="fd404-384">The method can be bound to the delegate because:</span></span>  
  
-   <span data-ttu-id="fd404-385">Der Parametertyp des Delegaten (`Derived`) ist stärker eingeschränkt als der Parametertyp des `MyMethod` (`Base`), sodass es immer sicher an das Argument des Delegaten zu übergeben sind `MyMethod`.</span><span class="sxs-lookup"><span data-stu-id="fd404-385">The parameter type of the delegate (`Derived`) is more restrictive than the parameter type of `MyMethod` (`Base`), so that it is always safe to pass the argument of the delegate to `MyMethod`.</span></span>  
  
-   <span data-ttu-id="fd404-386">Der Rückgabetyp der `MyMethod` (`Derived`) ist stärker eingeschränkt als der Parametertyp des Delegaten (`Base`), sodass sie immer sicher, das den Rückgabetyp der Methode, die den Rückgabetyp des Delegaten umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-386">The return type of `MyMethod` (`Derived`) is more restrictive than the parameter type of the delegate (`Base`), so that it is always safe to cast the return type of the method to the return type of the delegate.</span></span>  
  
 <span data-ttu-id="fd404-387">Im Codebeispiel erzeugt keine Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="fd404-387">The code example produces no output.</span></span>  
  
 [!code-cpp[Delegate.CreateDelegate_RelaxedFit#1](~/samples/snippets/cpp/VS_Snippets_CLR/Delegate.CreateDelegate_RelaxedFit/cpp/source.cpp#1)]
 [!code-csharp[Delegate.CreateDelegate_RelaxedFit#1](~/samples/snippets/csharp/VS_Snippets_CLR/Delegate.CreateDelegate_RelaxedFit/cs/source.cs#1)]
 [!code-vb[Delegate.CreateDelegate_RelaxedFit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Delegate.CreateDelegate_RelaxedFit/vb/source.vb#1)]  
  
 <span data-ttu-id="fd404-388">**Beispiel 3**</span><span class="sxs-lookup"><span data-stu-id="fd404-388">**Example 3**</span></span>  
  
 <span data-ttu-id="fd404-389">Das folgende Codebeispiel zeigt alle Methoden ein einzelner Delegattyp darstellen kann, mit der <xref:System.Delegate.CreateDelegate%2A> Methode, um die Delegaten zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="fd404-389">The following code example shows all the methods a single delegate type can represent, using the <xref:System.Delegate.CreateDelegate%2A> method to create the delegates.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-390">Es gibt zwei Überladungen der <xref:System.Delegate.CreateDelegate%2A> Methode, die angeben, `firstArgument` und ein <xref:System.Reflection.MethodInfo>; ihre Funktionalität ist identisch, außer dass eine Ihnen die ermöglicht Angabe, ob bei Bindungsfehlern ausgelöst werden, und die andere löst immer eine.</span><span class="sxs-lookup"><span data-stu-id="fd404-390">There are two overloads of the <xref:System.Delegate.CreateDelegate%2A> method that specify `firstArgument` and a <xref:System.Reflection.MethodInfo>; their functionality is the same except that one allows you to specify whether to throw on failure to bind, and the other always throws.</span></span> <span data-ttu-id="fd404-391">Dieses Codebeispiel verwendet beide Überladungen.</span><span class="sxs-lookup"><span data-stu-id="fd404-391">This code example uses both overloads.</span></span>  
  
 <span data-ttu-id="fd404-392">Im Codebeispiel werden zwei Klassen definiert `C` und `F`, und einen Delegattyp `D` mit einem Argument des Typs `C`.</span><span class="sxs-lookup"><span data-stu-id="fd404-392">The code example defines two classes, `C` and `F`, and a delegate type `D` with one argument of type `C`.</span></span> <span data-ttu-id="fd404-393">Die Klassen übereinstimmende statische und Instanzenmethoden `M1`, `M3`, und `M4`, und die Klasse `C` verfügt auch über eine Instanzmethode `M2` , die keine Argumente verfügt.</span><span class="sxs-lookup"><span data-stu-id="fd404-393">The classes have matching static and instance methods `M1`, `M3`, and `M4`, and class `C` also has an instance method `M2` that has no arguments.</span></span>  
  
 <span data-ttu-id="fd404-394">Eine dritte Klasse namens `Example` enthält den Code, der den Delegaten erstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-394">A third class named `Example` contains the code that creates the delegates.</span></span>  
  
-   <span data-ttu-id="fd404-395">Delegaten werden erstellt, z. B. Methode `M1` des Typs `C` und `F`; jede über eine Instanz des jeweiligen Typs geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-395">Delegates are created for instance method `M1` of type `C` and type `F`; each is closed over an instance of the respective type.</span></span> <span data-ttu-id="fd404-396">Methode `M1` des Typs `C` zeigt die `ID` Eigenschaften der gebundenen Instanz und des Arguments.</span><span class="sxs-lookup"><span data-stu-id="fd404-396">Method `M1` of type `C` displays the `ID` properties of the bound instance and of the argument.</span></span>  
  
-   <span data-ttu-id="fd404-397">Ein Delegat erstellt wird, für die Methode `M2` des Typs `C`.</span><span class="sxs-lookup"><span data-stu-id="fd404-397">A delegate is created for method `M2` of type `C`.</span></span> <span data-ttu-id="fd404-398">Dies ist eine offene Instanz-Delegaten, in dem das Argument des Delegaten ausgeblendete erste Argument für die Instanzmethode darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-398">This is an open instance delegate, in which the argument of the delegate represents the hidden first argument on the instance method.</span></span> <span data-ttu-id="fd404-399">Die Methode hat keine anderen Argumente.</span><span class="sxs-lookup"><span data-stu-id="fd404-399">The method has no other arguments.</span></span> <span data-ttu-id="fd404-400">Sie wird aufgerufen, als handele es sich um eine statische Methode.</span><span class="sxs-lookup"><span data-stu-id="fd404-400">It is called as if it were a static method.</span></span>  
  
-   <span data-ttu-id="fd404-401">Delegaten werden erstellt, für die statische Methode `M3` des Typs `C` und `F`; Hierbei handelt es sich um open statische Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-401">Delegates are created for static method `M3` of type `C` and type `F`; these are open static delegates.</span></span>  
  
-   <span data-ttu-id="fd404-402">Schließlich werden die Delegaten für die statische Methode erstellt `M4` des Typs `C` und `F`; jede Methode verfügt über den deklarierenden Typ als erstes Argument und eine Instanz des Typs angegeben wird, damit die Delegaten über dem ersten Argument geschlossen werden .</span><span class="sxs-lookup"><span data-stu-id="fd404-402">Finally, delegates are created for static method `M4` of type `C` and type `F`; each method has the declaring type as its first argument, and an instance of the type is supplied, so the delegates are closed over their first arguments.</span></span> <span data-ttu-id="fd404-403">Methode `M4` des Typs `C` zeigt die `ID` Eigenschaften der gebundenen Instanz und des Arguments.</span><span class="sxs-lookup"><span data-stu-id="fd404-403">Method `M4` of type `C` displays the `ID` properties of the bound instance and of the argument.</span></span>  
  
 [!code-csharp[Delegate.CreateDelegateTOM_2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Delegate.CreateDelegateTOM_2/cs/source.cs#1)]
 [!code-vb[Delegate.CreateDelegateTOM_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Delegate.CreateDelegateTOM_2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd404-404"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-404"><paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-405">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-405">-or-</span></span> 
 <span data-ttu-id="fd404-406"><paramref name="method" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-406"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-407"><paramref name="type" /> erbt nicht <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-407"><paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.</span></span>  
  
<span data-ttu-id="fd404-408">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-408">-or-</span></span> 
 <span data-ttu-id="fd404-409"><paramref name="type" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-409"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span> <span data-ttu-id="fd404-410">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-410">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span>  
  
<span data-ttu-id="fd404-411">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-411">-or-</span></span> 
 <span data-ttu-id="fd404-412"><paramref name="method" /> kann nicht gebunden werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-412"><paramref name="method" /> cannot be bound.</span></span>  
  
<span data-ttu-id="fd404-413">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-413">-or-</span></span> 
 <span data-ttu-id="fd404-414"><paramref name="method" /> ist keine <see langword="RuntimeMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-414"><paramref name="method" /> is not a <see langword="RuntimeMethodInfo" />.</span></span> <span data-ttu-id="fd404-415">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-415">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="fd404-416">Die <see langword="Invoke" />-Methode von <paramref name="type" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="fd404-416">The <see langword="Invoke" /> method of <paramref name="type" /> is not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="fd404-417">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-417">The caller does not have the permissions necessary to access <paramref name="method" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-418">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-418">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-419">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-419">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.MulticastDelegate" />
        <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="public static Delegate CreateDelegate (Type type, object target, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate CreateDelegate(class System.Type type, object target, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ CreateDelegate(Type ^ type, System::Object ^ target, System::String ^ method);" />
      <MemberSignature Language="F#" Value="static member CreateDelegate : Type * obj * string -&gt; Delegate" Usage="System.Delegate.CreateDelegate (type, target, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd404-420">Der <see cref="T:System.Type" /> des zu erstellenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-420">The <see cref="T:System.Type" /> of delegate to create.</span></span></param>
        <param name="target"><span data-ttu-id="fd404-421">Die Klasseninstanz, für die <paramref name="method" /> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-421">The class instance on which <paramref name="method" /> is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="fd404-422">Der Name der Instanzenmethode, die durch den Delegaten dargestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-422">The name of the instance method that the delegate is to represent.</span></span></param>
        <summary><span data-ttu-id="fd404-423">Erstellt einen Delegaten vom angegebenen Typ, der die angegebene Instanzenmethode darstellt, die für die angegebene Klasseninstanz aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-423">Creates a delegate of the specified type that represents the specified instance method to invoke on the specified class instance.</span></span></summary>
        <returns><span data-ttu-id="fd404-424">Ein Delegat vom angegebenen Typ, der die angegebene Instanzenmethode darstellt, die für die angegebene Klasseninstanz aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-424">A delegate of the specified type that represents the specified instance method to invoke on the specified class instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-425">Diese Methode erstellt nur Delegaten für die Instanz.</span><span class="sxs-lookup"><span data-stu-id="fd404-425">This method creates delegates for instance methods only.</span></span> <span data-ttu-id="fd404-426">Eine Instanzmethode handelt es sich um eine Methode, die eine Instanz einer Klasse zugeordnet ist; eine statische Methode handelt es sich um eine Methode, die die Klasse selbst zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-426">An instance method is a method that is associated with an instance of a class; a static method is a method that is associated with the class itself.</span></span>  
  
 <span data-ttu-id="fd404-427">Überladung dieser Methode entspricht dem Aufrufen der <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%2CSystem.Boolean%2CSystem.Boolean%29> -methodenüberladung angeben `false` für `ignoreCase` und `true` für `throwOnBindFailure`.</span><span class="sxs-lookup"><span data-stu-id="fd404-427">This method overload is equivalent to calling the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%2CSystem.Boolean%2CSystem.Boolean%29> method overload, specifying `false` for `ignoreCase` and `true` for `throwOnBindFailure`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-428">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Methode kann verwendet werden, um nicht öffentliche Methoden zugreifen, wenn der Aufrufer erteilt wurde <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> kennzeichnen und Menge oder eine Teilmenge der Berechtigungssatz die nicht öffentliche Methoden an des Aufrufers des beschränkt ist zu gewähren davon.</span><span class="sxs-lookup"><span data-stu-id="fd404-428">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public methods if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public methods is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fd404-429">(Finden Sie unter [Überlegungen zur Sicherheit für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fd404-429">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fd404-430">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="fd404-430">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd404-431"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-431"><paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-432">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-432">-or-</span></span> 
 <span data-ttu-id="fd404-433"><paramref name="target" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-433"><paramref name="target" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-434">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-434">-or-</span></span> 
 <span data-ttu-id="fd404-435"><paramref name="method" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-435"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-436"><paramref name="type" /> erbt nicht <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-436"><paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.</span></span>  
  
<span data-ttu-id="fd404-437">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-437">-or-</span></span> 
 <span data-ttu-id="fd404-438"><paramref name="type" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-438"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span> <span data-ttu-id="fd404-439">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-439">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span>  
  
<span data-ttu-id="fd404-440">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-440">-or-</span></span> 
 <span data-ttu-id="fd404-441"><paramref name="method" /> ist keine Instanzenmethode.</span><span class="sxs-lookup"><span data-stu-id="fd404-441"><paramref name="method" /> is not an instance method.</span></span>  
  
<span data-ttu-id="fd404-442">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-442">-or-</span></span> 
 <span data-ttu-id="fd404-443"><paramref name="method" /> kann nicht gebunden werden, z. B. weil sie nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="fd404-443"><paramref name="method" /> cannot be bound, for example because it cannot be found.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="fd404-444">Die <see langword="Invoke" />-Methode von <paramref name="type" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="fd404-444">The <see langword="Invoke" /> method of <paramref name="type" /> is not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="fd404-445">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-445">The caller does not have the permissions necessary to access <paramref name="method" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-446">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-446">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-447">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-447">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.MulticastDelegate" />
        <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="public static Delegate CreateDelegate (Type type, System.Reflection.MethodInfo method, bool throwOnBindFailure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate CreateDelegate(class System.Type type, class System.Reflection.MethodInfo method, bool throwOnBindFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.CreateDelegate(System.Type,System.Reflection.MethodInfo,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ CreateDelegate(Type ^ type, System::Reflection::MethodInfo ^ method, bool throwOnBindFailure);" />
      <MemberSignature Language="F#" Value="static member CreateDelegate : Type * System.Reflection.MethodInfo * bool -&gt; Delegate" Usage="System.Delegate.CreateDelegate (type, method, throwOnBindFailure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="throwOnBindFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd404-448">Der <see cref="T:System.Type" /> des zu erstellenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-448">The <see cref="T:System.Type" /> of delegate to create.</span></span></param>
        <param name="method"><span data-ttu-id="fd404-449">Die <see cref="T:System.Reflection.MethodInfo" />, die die statische Methode oder Instanzmethode beschreibt, die der Delegat darstellen soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-449">The <see cref="T:System.Reflection.MethodInfo" /> describing the static or instance method the delegate is to represent.</span></span></param>
        <param name="throwOnBindFailure"><span data-ttu-id="fd404-450"><see langword="true" />, um eine Ausnahme auszulösen, wenn <paramref name="method" /> nicht gebunden werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-450"><see langword="true" /> to throw an exception if <paramref name="method" /> cannot be bound; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fd404-451">Erstellt einen Delegaten vom angegeben Typ zum Darstellen der angegebenen statischen Methode mit dem angegebenen Verhalten bei Bindungsfehlern.</span><span class="sxs-lookup"><span data-stu-id="fd404-451">Creates a delegate of the specified type to represent the specified static method, with the specified behavior on failure to bind.</span></span></summary>
        <returns><span data-ttu-id="fd404-452">Ein Delegat vom angegebenen Typ, der die angegebene statische Methode darstellen soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-452">A delegate of the specified type to represent the specified static method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-453">Überladung dieser Methode kann offene statische methodendelegaten erstellen und öffnen die Instanz-Methode-Delegaten – d. h., Delegaten, die das ausgeblendete erste Argument von Instanzmethoden verfügbar zu machen.</span><span class="sxs-lookup"><span data-stu-id="fd404-453">This method overload can create open static method delegates and open instance method delegates - that is, delegates that expose the hidden first argument of instance methods.</span></span> <span data-ttu-id="fd404-454">Eine ausführlichere Erklärung finden Sie unter die allgemeinere <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.Reflection.MethodInfo%2CSystem.Boolean%29> methodenüberladung, die Ihnen ermöglicht, z. B. alle Kombinationen von offenen oder geschlossenen Delegaten zu erstellen oder statische Methoden.</span><span class="sxs-lookup"><span data-stu-id="fd404-454">For a detailed explanation, see the more general <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.Reflection.MethodInfo%2CSystem.Boolean%29> method overload, which allows you to create all combinations of open or closed delegates for instance or static methods.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-455">Überladung dieser Methode sollte verwendet werden, wenn der Delegat nicht über die ersten Arguments, geschlossen wird, da er in diesem Fall etwas schneller ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-455">This method overload should be used when the delegate is not closed over its first argument, because it is somewhat faster in that case.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-456">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Methode kann verwendet werden, um nicht öffentliche Methoden zugreifen, wenn der Aufrufer erteilt wurde <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> kennzeichnen und Menge oder eine Teilmenge der Berechtigungssatz die nicht öffentliche Methoden an des Aufrufers des beschränkt ist zu gewähren davon.</span><span class="sxs-lookup"><span data-stu-id="fd404-456">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public methods if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public methods is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fd404-457">(Finden Sie unter [Überlegungen zur Sicherheit für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fd404-457">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fd404-458">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="fd404-458">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
## <a name="compatible-parameter-types-and-return-type"></a><span data-ttu-id="fd404-459">Kompatible Parameter und Rückgabetypen</span><span class="sxs-lookup"><span data-stu-id="fd404-459">Compatible Parameter Types and Return Type</span></span>  
 <span data-ttu-id="fd404-460">Die Parameter und Rückgabetypen eines Delegaten müssen mit den Parametertypen und den Rückgabetyp der Methode, die den Delegaten dargestellt kompatibel sein. die Typen müssen nicht genau übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="fd404-460">The parameter types and return type of a delegate must be compatible with the parameter types and return type of the method the delegate represents; the types do not have to match exactly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-461">In .NET Framework, Version 1.0 und 1.1 müssen die Typen exakt übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="fd404-461">In the .NET Framework version 1.0 and 1.1, the types must match exactly.</span></span>  
  
 <span data-ttu-id="fd404-462">Ein Parameter eines Delegaten ist mit dem entsprechenden Parameter einer Methode kompatibel, wenn der Typ des Delegatenparameters restriktiver ist als der Methodenparameter, da so gewährleistet ist, dass ein an den Delegaten übergebenes Argument problemlos an die Methode weitergeleitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-462">A parameter of a delegate is compatible with the corresponding parameter of a method if the type of the delegate parameter is more restrictive than the type of the method parameter, because this guarantees that an argument passed to the delegate can be passed safely to the method.</span></span>  
  
 <span data-ttu-id="fd404-463">Ebenso ist der Rückgabetyp eines Delegaten kompatibel mit dem Rückgabetyp einer Methode, wenn der Rückgabetyp der Methode restriktiver ist als der Rückgabetyp des Delegaten, da so gewährleistet ist, dass der Rückgabewert der Methode problemlos in den Rückgabetyp des Delegaten umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-463">Similarly, the return type of a delegate is compatible with the return type of a method if the return type of the method is more restrictive than the return type of the delegate, because this guarantees that the return value of the method can be cast safely to the return type of the delegate.</span></span>  
  
 <span data-ttu-id="fd404-464">Angenommen, ein Delegat mit einem Parameter vom Typ <xref:System.Collections.Hashtable> und dem Rückgabetyp der <xref:System.Object> kann eine Methode mit einem Parameter des Typs darstellen <xref:System.Object> sowie einen Rückgabewert vom Typ <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="fd404-464">For example, a delegate with a parameter of type <xref:System.Collections.Hashtable> and a return type of <xref:System.Object> can represent a method with a parameter of type <xref:System.Object> and a return value of type <xref:System.Collections.Hashtable>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd404-465">Dieser Abschnitt enthält zwei Codebeispiele.</span><span class="sxs-lookup"><span data-stu-id="fd404-465">This section contains two code examples.</span></span> <span data-ttu-id="fd404-466">Das erste Beispiel veranschaulicht die beiden Arten von Delegaten, die Überladung dieser Methode erstellt werden können: Öffnen Sie über eine Instanzmethode und über eine statische Methode.</span><span class="sxs-lookup"><span data-stu-id="fd404-466">The first example demonstrates the two kinds of delegates that can be created with this method overload: open over an instance method and open over a static method.</span></span>  
  
 <span data-ttu-id="fd404-467">Im zweiten Codebeispiel wird veranschaulicht, kompatible Parametertypen und Rückgabetypen.</span><span class="sxs-lookup"><span data-stu-id="fd404-467">The second code example demonstrates compatible parameter types and return types.</span></span>  
  
 <span data-ttu-id="fd404-468">**Beispiel 1**</span><span class="sxs-lookup"><span data-stu-id="fd404-468">**Example 1**</span></span>  
  
 <span data-ttu-id="fd404-469">Im folgenden Codebeispiel wird veranschaulicht, die zwei Möglichkeiten, die ein Delegat erstellt werden kann, verwenden diese Überladung von der <xref:System.Delegate.CreateDelegate%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fd404-469">The following code example demonstrates the two ways a delegate can be created using this overload of the <xref:System.Delegate.CreateDelegate%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-470">Es gibt zwei Überladungen der der <xref:System.Delegate.CreateDelegate%2A> Methode, die angeben, ein <xref:System.Reflection.MethodInfo> jedoch kein erstes Argument; ihre Funktionalität ist identisch, außer dass eine Ihnen die ermöglicht Angabe, ob bei Bindungsfehlern ausgelöst werden, und die andere löst immer eine.</span><span class="sxs-lookup"><span data-stu-id="fd404-470">There are two overloads of the <xref:System.Delegate.CreateDelegate%2A> method that specify a <xref:System.Reflection.MethodInfo> but not a first argument; their functionality is the same except that one allows you to specify whether to throw on failure to bind, and the other always throws.</span></span> <span data-ttu-id="fd404-471">Dieses Codebeispiel verwendet beide Überladungen.</span><span class="sxs-lookup"><span data-stu-id="fd404-471">This code example uses both overloads.</span></span>  
  
 <span data-ttu-id="fd404-472">Das Beispiel deklariert eine Klasse `C` mit einer statischen Methode `M2` und eine Instanzmethode `M1`, und zwei Delegattypen: `D1` akzeptiert eine Instanz von `C` und eine Zeichenfolge, und `D2` nimmt eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="fd404-472">The example declares a class `C` with a static method `M2` and an instance method `M1`, and two delegate types: `D1` takes an instance of `C` and a string, and `D2` takes a string.</span></span>  
  
 <span data-ttu-id="fd404-473">Eine zweite Klasse namens `Example` enthält den Code, der den Delegaten erstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-473">A second class named `Example` contains the code that creates the delegates.</span></span>  
  
-   <span data-ttu-id="fd404-474">Ein Delegat vom Typ `D1`, der eine offene Instanzmethode darstellt, wird für die Instanzmethode erstellt `M1`.</span><span class="sxs-lookup"><span data-stu-id="fd404-474">A delegate of type `D1`, representing an open instance method, is created for the instance method `M1`.</span></span> <span data-ttu-id="fd404-475">Eine Instanz muss übergeben werden, wenn der Delegat aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-475">An instance must be passed when the delegate is invoked.</span></span>  
  
-   <span data-ttu-id="fd404-476">Ein Delegat vom Typ `D2`, eine offene statische Methode darstellt, wird für die statische Methode erstellt `M2`.</span><span class="sxs-lookup"><span data-stu-id="fd404-476">A delegate of type `D2`, representing an open static method, is created for the static method `M2`.</span></span>  
  
 [!code-csharp[Delegate.CreateDelegateTOM#1](~/samples/snippets/csharp/VS_Snippets_CLR/Delegate.CreateDelegateTOM/cs/openClosedOver.cs#1)]
 [!code-vb[Delegate.CreateDelegateTOM#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Delegate.CreateDelegateTOM/VB/openClosedOver.vb#1)]  
  
 <span data-ttu-id="fd404-477">**Beispiel 2**</span><span class="sxs-lookup"><span data-stu-id="fd404-477">**Example 2**</span></span>  
  
 <span data-ttu-id="fd404-478">Im folgenden Codebeispiel wird veranschaulicht, die Kompatibilität der Parametertypen und Rückgabetypen.</span><span class="sxs-lookup"><span data-stu-id="fd404-478">The following code example demonstrates compatibility of parameter types and return types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-479">Dieses Codebeispiel verwendet die <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="fd404-479">This code example uses the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%29> method overload.</span></span> <span data-ttu-id="fd404-480">Die Verwendung der anderen Überladungen dieser <xref:System.Reflection.MethodInfo> ist ähnlich.</span><span class="sxs-lookup"><span data-stu-id="fd404-480">The use of other overloads that take <xref:System.Reflection.MethodInfo> is similar.</span></span>  
  
 <span data-ttu-id="fd404-481">Das Codebeispiel definiert eine Basisklasse, die mit dem Namen `Base` und eine Klasse namens `Derived` abgeleitet, die `Base`.</span><span class="sxs-lookup"><span data-stu-id="fd404-481">The code example defines a base class named `Base` and a class named `Derived` that derives from `Base`.</span></span> <span data-ttu-id="fd404-482">Die abgeleitete Klasse verfügt über eine `static` (`Shared` in Visual Basic) Methode, die mit dem Namen `MyMethod` mit einem Parameter vom Typ `Base` und dem Rückgabetyp der `Derived`.</span><span class="sxs-lookup"><span data-stu-id="fd404-482">The derived class has a `static` (`Shared` in Visual Basic) method named `MyMethod` with one parameter of type `Base` and a return type of `Derived`.</span></span> <span data-ttu-id="fd404-483">Im Codebeispiel wird definiert auch einen Delegaten, der mit dem Namen `Example` , die einen Parameter vom Typ hat `Derived` und dem Rückgabetyp der `Base`.</span><span class="sxs-lookup"><span data-stu-id="fd404-483">The code example also defines a delegate named `Example` that has one parameter of type `Derived` and a return type of `Base`.</span></span>  
  
 <span data-ttu-id="fd404-484">Im Codebeispiel wird veranschaulicht, dass der Delegat, mit dem Namen `Example` können verwendet werden, um die Methode darstellen `MyMethod`.</span><span class="sxs-lookup"><span data-stu-id="fd404-484">The code example demonstrates that the delegate named `Example` can be used to represent the method `MyMethod`.</span></span> <span data-ttu-id="fd404-485">Die Methode kann an den Delegaten gebunden werden, da:</span><span class="sxs-lookup"><span data-stu-id="fd404-485">The method can be bound to the delegate because:</span></span>  
  
-   <span data-ttu-id="fd404-486">Der Parametertyp des Delegaten (`Derived`) ist stärker eingeschränkt als der Parametertyp des `MyMethod` (`Base`), sodass es immer sicher an das Argument des Delegaten zu übergeben sind `MyMethod`.</span><span class="sxs-lookup"><span data-stu-id="fd404-486">The parameter type of the delegate (`Derived`) is more restrictive than the parameter type of `MyMethod` (`Base`), so that it is always safe to pass the argument of the delegate to `MyMethod`.</span></span>  
  
-   <span data-ttu-id="fd404-487">Der Rückgabetyp der `MyMethod` (`Derived`) ist stärker eingeschränkt als der Parametertyp des Delegaten (`Base`), sodass sie immer sicher, das den Rückgabetyp der Methode, die den Rückgabetyp des Delegaten umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-487">The return type of `MyMethod` (`Derived`) is more restrictive than the parameter type of the delegate (`Base`), so that it is always safe to cast the return type of the method to the return type of the delegate.</span></span>  
  
 <span data-ttu-id="fd404-488">Im Codebeispiel erzeugt keine Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="fd404-488">The code example produces no output.</span></span>  
  
 [!code-cpp[Delegate.CreateDelegate_RelaxedFit#1](~/samples/snippets/cpp/VS_Snippets_CLR/Delegate.CreateDelegate_RelaxedFit/cpp/source.cpp#1)]
 [!code-csharp[Delegate.CreateDelegate_RelaxedFit#1](~/samples/snippets/csharp/VS_Snippets_CLR/Delegate.CreateDelegate_RelaxedFit/cs/source.cs#1)]
 [!code-vb[Delegate.CreateDelegate_RelaxedFit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Delegate.CreateDelegate_RelaxedFit/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd404-489"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-489"><paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-490">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-490">-or-</span></span> 
 <span data-ttu-id="fd404-491"><paramref name="method" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-491"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-492"><paramref name="type" /> erbt nicht <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-492"><paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.</span></span>  
  
<span data-ttu-id="fd404-493">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-493">-or-</span></span> 
 <span data-ttu-id="fd404-494"><paramref name="type" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-494"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span> <span data-ttu-id="fd404-495">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-495">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span>  
  
<span data-ttu-id="fd404-496">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-496">-or-</span></span> 
 <span data-ttu-id="fd404-497"><paramref name="method" /> kann nicht gebunden werden, und <paramref name="throwOnBindFailure" /> ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-497"><paramref name="method" /> cannot be bound, and <paramref name="throwOnBindFailure" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="fd404-498">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-498">-or-</span></span> 
 <span data-ttu-id="fd404-499"><paramref name="method" /> ist keine <see langword="RuntimeMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-499"><paramref name="method" /> is not a <see langword="RuntimeMethodInfo" />.</span></span> <span data-ttu-id="fd404-500">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-500">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="fd404-501">Die <see langword="Invoke" />-Methode von <paramref name="type" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="fd404-501">The <see langword="Invoke" /> method of <paramref name="type" /> is not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="fd404-502">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-502">The caller does not have the permissions necessary to access <paramref name="method" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-503">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-503">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-504">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-504">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.MulticastDelegate" />
        <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="public static Delegate CreateDelegate (Type type, Type target, string method);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate CreateDelegate(class System.Type type, class System.Type target, string method) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.CreateDelegate(System.Type,System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ CreateDelegate(Type ^ type, Type ^ target, System::String ^ method);" />
      <MemberSignature Language="F#" Value="static member CreateDelegate : Type * Type * string -&gt; Delegate" Usage="System.Delegate.CreateDelegate (type, target, method)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="target" Type="System.Type" />
        <Parameter Name="method" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd404-505">Der <see cref="T:System.Type" /> des zu erstellenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-505">The <see cref="T:System.Type" /> of delegate to create.</span></span></param>
        <param name="target"><span data-ttu-id="fd404-506">Der <see cref="T:System.Type" />, der die Klasse darstellt, die von <paramref name="method" /> implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-506">The <see cref="T:System.Type" /> representing the class that implements <paramref name="method" />.</span></span></param>
        <param name="method"><span data-ttu-id="fd404-507">Der Name der statischen Methode, die durch den Delegaten dargestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-507">The name of the static method that the delegate is to represent.</span></span></param>
        <summary><span data-ttu-id="fd404-508">Erstellt einen Delegaten vom angegebenen Typ, der die angegebene statische Methode der angegebenen Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-508">Creates a delegate of the specified type that represents the specified static method of the specified class.</span></span></summary>
        <returns><span data-ttu-id="fd404-509">Ein Delegat vom angegebenen Typ, der die angegebene statische Methode der angegebenen Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-509">A delegate of the specified type that represents the specified static method of the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-510">Diese Methode erstellt die Delegaten für die nur statische Methoden.</span><span class="sxs-lookup"><span data-stu-id="fd404-510">This method creates delegates for static methods only.</span></span> <span data-ttu-id="fd404-511">Eine Instanzmethode handelt es sich um eine Methode, die eine Instanz einer Klasse zugeordnet ist; eine statische Methode handelt es sich um eine Methode, die die Klasse selbst zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-511">An instance method is a method that is associated with an instance of a class; a static method is a method that is associated with the class itself.</span></span>  
  
 <span data-ttu-id="fd404-512">Überladung dieser Methode entspricht dem Aufrufen der <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%2CSystem.Boolean%2CSystem.Boolean%29> -methodenüberladung angeben `false` für `ignoreCase` und `true` für `throwOnBindFailure`.</span><span class="sxs-lookup"><span data-stu-id="fd404-512">This method overload is equivalent to calling the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%2CSystem.Boolean%2CSystem.Boolean%29> method overload, specifying `false` for `ignoreCase` and `true` for `throwOnBindFailure`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-513">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Methode kann verwendet werden, um nicht öffentliche Methoden zugreifen, wenn der Aufrufer erteilt wurde <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> kennzeichnen und Menge oder eine Teilmenge der Berechtigungssatz die nicht öffentliche Methoden an des Aufrufers des beschränkt ist zu gewähren davon.</span><span class="sxs-lookup"><span data-stu-id="fd404-513">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public methods if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public methods is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fd404-514">(Finden Sie unter [Überlegungen zur Sicherheit für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fd404-514">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fd404-515">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="fd404-515">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd404-516"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-516"><paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-517">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-517">-or-</span></span> 
 <span data-ttu-id="fd404-518"><paramref name="target" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-518"><paramref name="target" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-519">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-519">-or-</span></span> 
 <span data-ttu-id="fd404-520"><paramref name="method" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-520"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-521"><paramref name="type" /> erbt nicht <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-521"><paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.</span></span>  
  
<span data-ttu-id="fd404-522">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-522">-or-</span></span> 
 <span data-ttu-id="fd404-523"><paramref name="type" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-523"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span> <span data-ttu-id="fd404-524">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-524">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span>  
  
<span data-ttu-id="fd404-525">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-525">-or-</span></span> 
 <span data-ttu-id="fd404-526"><paramref name="target" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-526"><paramref name="target" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="fd404-527">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-527">-or-</span></span> 
 <span data-ttu-id="fd404-528"><paramref name="target" /> ist ein offener generischer Typ.</span><span class="sxs-lookup"><span data-stu-id="fd404-528"><paramref name="target" /> is an open generic type.</span></span> <span data-ttu-id="fd404-529">Das bedeutet, die <see cref="P:System.Type.ContainsGenericParameters" />-Eigenschaft ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-529">That is, its <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" />.</span></span>  
  
<span data-ttu-id="fd404-530">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-530">-or-</span></span> 
 <span data-ttu-id="fd404-531"><paramref name="method" /> ist keine <see langword="static" />-Methode (<see langword="Shared" />-Methode in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fd404-531"><paramref name="method" /> is not a <see langword="static" /> method (<see langword="Shared" /> method in Visual Basic).</span></span>  
  
<span data-ttu-id="fd404-532">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-532">-or-</span></span> 
 <span data-ttu-id="fd404-533"><paramref name="method" /> kann nicht gebunden werden, z. B. weil sie nicht gefunden wurde, und <paramref name="throwOnBindFailure" /> ist gleich <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-533"><paramref name="method" /> cannot be bound, for example because it cannot be found, and <paramref name="throwOnBindFailure" /> is <see langword="true" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="fd404-534">Die <see langword="Invoke" />-Methode von <paramref name="type" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="fd404-534">The <see langword="Invoke" /> method of <paramref name="type" /> is not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="fd404-535">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-535">The caller does not have the permissions necessary to access <paramref name="method" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-536">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-536">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-537">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-537">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.MulticastDelegate" />
        <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="public static Delegate CreateDelegate (Type type, object firstArgument, System.Reflection.MethodInfo method, bool throwOnBindFailure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate CreateDelegate(class System.Type type, object firstArgument, class System.Reflection.MethodInfo method, bool throwOnBindFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.Reflection.MethodInfo,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ CreateDelegate(Type ^ type, System::Object ^ firstArgument, System::Reflection::MethodInfo ^ method, bool throwOnBindFailure);" />
      <MemberSignature Language="F#" Value="static member CreateDelegate : Type * obj * System.Reflection.MethodInfo * bool -&gt; Delegate" Usage="System.Delegate.CreateDelegate (type, firstArgument, method, throwOnBindFailure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="firstArgument" Type="System.Object" />
        <Parameter Name="method" Type="System.Reflection.MethodInfo" />
        <Parameter Name="throwOnBindFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd404-538">Ein <see cref="T:System.Type" />, der den Typ des zu erstellenden Delegaten darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-538">A <see cref="T:System.Type" /> representing the type of delegate to create.</span></span></param>
        <param name="firstArgument"><span data-ttu-id="fd404-539">Ein <see cref="T:System.Object" />, das das erste Argument der Methode ist, die der Delegat darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-539">An <see cref="T:System.Object" /> that is the first argument of the method the delegate represents.</span></span> <span data-ttu-id="fd404-540">Bei Instanzmethoden muss dieses mit dem Instanztyp kompatibel sein.</span><span class="sxs-lookup"><span data-stu-id="fd404-540">For instance methods, it must be compatible with the instance type.</span></span></param>
        <param name="method"><span data-ttu-id="fd404-541">Die <see cref="T:System.Reflection.MethodInfo" />, die die statische Methode oder Instanzmethode beschreibt, die der Delegat darstellen soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-541">The <see cref="T:System.Reflection.MethodInfo" /> describing the static or instance method the delegate is to represent.</span></span></param>
        <param name="throwOnBindFailure"><span data-ttu-id="fd404-542"><see langword="true" />, um eine Ausnahme auszulösen, wenn <paramref name="method" /> nicht gebunden werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-542"><see langword="true" /> to throw an exception if <paramref name="method" /> cannot be bound; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fd404-543">Erstellt einen Delegaten vom angegebenen Typ, der die angegebene statische Methode oder Instanzmethode mit dem angegebenen ersten Argument und dem angegebenen Verhalten bei Bindungsfehlern darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-543">Creates a delegate of the specified type that represents the specified static or instance method, with the specified first argument and the specified behavior on failure to bind.</span></span></summary>
        <returns><span data-ttu-id="fd404-544">Ein Delegat des angegebenen Typs, der die angegebene statische Methode oder Instanzmethode darstellt, oder <see langword="null" />, wenn <paramref name="throwOnBindFailure" /> <see langword="false" /> ist und der Delegat nicht an <paramref name="method" /> gebunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-544">A delegate of the specified type that represents the specified static or instance method, or <see langword="null" /> if <paramref name="throwOnBindFailure" /> is <see langword="false" /> and the delegate cannot be bound to <paramref name="method" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-545">Diese methodenüberladung und <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.Reflection.MethodInfo%29> methodenüberladung, die immer bei Bindungsfehlern auslöst, bieten die flexibelste Möglichkeit zum Erstellen von Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-545">This method overload and the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.Reflection.MethodInfo%29> method overload, which always throws on failure to bind, provide the most flexible way to create delegates.</span></span> <span data-ttu-id="fd404-546">Sie können sie zum Erstellen von Delegaten für statische oder Instanzmethoden zur Verfügung, mit oder ohne ein erstes Argument verwenden.</span><span class="sxs-lookup"><span data-stu-id="fd404-546">You can use them to create delegates for either static or instance methods, with or without a first argument.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-547">Wenn Sie ein erstes Argument nicht angeben, verwenden Sie die <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%2CSystem.Boolean%29> methodenüberladung für eine bessere Leistung.</span><span class="sxs-lookup"><span data-stu-id="fd404-547">If you do not supply a first argument, use the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%2CSystem.Boolean%29> method overload for better performance.</span></span>  
  
 <span data-ttu-id="fd404-548">Der Delegattyp und die Methode müssen kompatible Rückgabetypen haben.</span><span class="sxs-lookup"><span data-stu-id="fd404-548">The delegate type and the method must have compatible return types.</span></span> <span data-ttu-id="fd404-549">D. h. der Rückgabetyp der `method` muss der Rückgabetyp der zugewiesen werden können `type`.</span><span class="sxs-lookup"><span data-stu-id="fd404-549">That is, the return type of `method` must be assignable to the return type of `type`.</span></span>  
  
 <span data-ttu-id="fd404-550">Wenn `firstArgument` wird angegeben, wird es an übergeben `method` jedes Mal, wenn der Delegat aufgerufen wird; `firstArgument` hört sich an den Delegaten gebunden werden und der Delegat wird gesagt, über das erste Argument geschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-550">If `firstArgument` is supplied, it is passed to `method` every time the delegate is invoked; `firstArgument` is said to be bound to the delegate, and the delegate is said to be closed over its first argument.</span></span> <span data-ttu-id="fd404-551">Wenn `method` ist `static` (`Shared` in Visual Basic), wird das Argument bereitgestellte beim Aufrufen des Delegaten Liste schließt alle Parameter außer dem ersten; aus, wenn `method` ist eine Instanzmethode `firstArgument` an der ausgeblendeten Instanz übergeben wird Parameter (dargestellt durch `this` in c# oder durch `Me` in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fd404-551">If `method` is `static` (`Shared` in Visual Basic), the argument list supplied when invoking the delegate includes all parameters except the first; if `method` is an instance method, then `firstArgument` is passed to the hidden instance parameter (represented by `this` in C#, or by `Me` in Visual Basic).</span></span>  
  
 <span data-ttu-id="fd404-552">Wenn `firstArgument` angegeben wird, der erste Parameter der `method` muss ein Verweistyp sein und `firstArgument` mit diesem Typ kompatibel sein muss.</span><span class="sxs-lookup"><span data-stu-id="fd404-552">If `firstArgument` is supplied, the first parameter of `method` must be a reference type, and `firstArgument` must be compatible with that type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd404-553">Wenn `method` ist `static` (`Shared` in Visual Basic) und der erste Parameter ist vom Typ <xref:System.Object> oder <xref:System.ValueType>, klicken Sie dann `firstArgument` kann ein Werttyp sein.</span><span class="sxs-lookup"><span data-stu-id="fd404-553">If `method` is `static` (`Shared` in Visual Basic) and its first parameter is of type <xref:System.Object> or <xref:System.ValueType>, then `firstArgument` can be a value type.</span></span> <span data-ttu-id="fd404-554">In diesem Fall `firstArgument` automatisch eingeschlossen.</span><span class="sxs-lookup"><span data-stu-id="fd404-554">In this case `firstArgument` is automatically boxed.</span></span> <span data-ttu-id="fd404-555">Automatische Boxing erfolgt nicht für alle anderen Argumente, wie es in einer C#- oder Visual Basic-Funktion aufrufen würden.</span><span class="sxs-lookup"><span data-stu-id="fd404-555">Automatic boxing does not occur for any other arguments, as it would in a C# or Visual Basic function call.</span></span>  
  
 <span data-ttu-id="fd404-556">Wenn `firstArgument` ist ein null-Verweis und `method` eine Instanzmethode ist das Ergebnis hängt von den Signaturen der Typ des Delegaten `type` und `method`:</span><span class="sxs-lookup"><span data-stu-id="fd404-556">If `firstArgument` is a null reference and `method` is an instance method, the result depends on the signatures of the delegate type `type` and of `method`:</span></span>  
  
-   <span data-ttu-id="fd404-557">Wenn die Signatur der `type` schließt explizit die ersten verborgenen Parameter von `method`, der Delegaten gesagt, dass eine offene Instanzmethode darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-557">If the signature of `type` explicitly includes the hidden first parameter of `method`, the delegate is said to represent an open instance method.</span></span> <span data-ttu-id="fd404-558">Wenn der Delegat aufgerufen wird, wird das erste Argument in der Liste der Argumente an den ausgeblendeten Instanz-Parameter übergeben `method`.</span><span class="sxs-lookup"><span data-stu-id="fd404-558">When the delegate is invoked, the first argument in the argument list is passed to the hidden instance parameter of `method`.</span></span>  
  
-   <span data-ttu-id="fd404-559">Wenn die Signaturen der `method` und `type` übereinstimmen (d. h. alle Parametertypen sind kompatibel), und klicken Sie dann der Delegaten gesagt, dass er über einen null-Verweis geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-559">If the signatures of `method` and `type` match (that is, all parameter types are compatible), then the delegate is said to be closed over a null reference.</span></span> <span data-ttu-id="fd404-560">Aufrufen des Delegaten entspricht dem Aufrufen einer Instanzmethode auf eine null-Instanz, die nicht besonders nützlich, etwas zu tun ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-560">Invoking the delegate is like calling an instance method on a null instance, which is not a particularly useful thing to do.</span></span>  
  
 <span data-ttu-id="fd404-561">Wenn `firstArgument` ist ein null-Verweis und `method` ist statisch und das Ergebnis hängt von den Signaturen des Delegattyps `type` und `method`:</span><span class="sxs-lookup"><span data-stu-id="fd404-561">If `firstArgument` is a null reference and `method` is static, the result depends on the signatures of the delegate type `type` and of `method`:</span></span>  
  
-   <span data-ttu-id="fd404-562">Wenn die Signatur der `method` und `type` übereinstimmen (d. h. alle Parametertypen sind kompatibel), der Delegaten gesagt, dass eine offene statische Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-562">If the signature of `method` and `type` match (that is, all parameter types are compatible), the delegate is said to represent an open static method.</span></span> <span data-ttu-id="fd404-563">Dies ist der häufigste Fall für statische Methoden.</span><span class="sxs-lookup"><span data-stu-id="fd404-563">This is the most common case for static methods.</span></span> <span data-ttu-id="fd404-564">In diesem Fall erhalten Sie eine etwas bessere Leistung mithilfe der <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%2CSystem.Boolean%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="fd404-564">In this case, you can get slightly better performance by using the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%2CSystem.Boolean%29> method overload.</span></span>  
  
-   <span data-ttu-id="fd404-565">Wenn die Signatur der `type` beginnt mit dem zweiten Parameter der `method` der Rest der Parametertypen kompatibel sind, und die Delegaten gesagt, dass Sie über ein null-Verweis geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-565">If the signature of `type` begins with the second parameter of `method` and the rest of the parameter types are compatible, then the delegate is said to be closed over a null reference.</span></span> <span data-ttu-id="fd404-566">Wenn der Delegat aufgerufen wird, wird ein null-Verweis auf den ersten Parameter übergeben `method`.</span><span class="sxs-lookup"><span data-stu-id="fd404-566">When the delegate is invoked, a null reference is passed to the first parameter of `method`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-567">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Methode kann verwendet werden, um nicht öffentliche Methoden zugreifen, wenn der Aufrufer erteilt wurde <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> kennzeichnen und Menge oder eine Teilmenge der Berechtigungssatz die nicht öffentliche Methoden an des Aufrufers des beschränkt ist zu gewähren davon.</span><span class="sxs-lookup"><span data-stu-id="fd404-567">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public methods if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public methods is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fd404-568">(Finden Sie unter [Überlegungen zur Sicherheit für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fd404-568">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fd404-569">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="fd404-569">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
## <a name="compatible-parameter-types-and-return-type"></a><span data-ttu-id="fd404-570">Kompatible Parameter und Rückgabetypen</span><span class="sxs-lookup"><span data-stu-id="fd404-570">Compatible Parameter Types and Return Type</span></span>  
 <span data-ttu-id="fd404-571">Die Parameter und Rückgabetypen eines Delegaten müssen mit den Parametertypen und den Rückgabetyp der Methode, die den Delegaten dargestellt kompatibel sein. die Typen müssen nicht genau übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="fd404-571">The parameter types and return type of a delegate must be compatible with the parameter types and return type of the method the delegate represents; the types do not have to match exactly.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-572">In .NET Framework, Version 1.0 und 1.1 müssen die Typen exakt übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="fd404-572">In the .NET Framework version 1.0 and 1.1 the types must match exactly.</span></span>  
  
 <span data-ttu-id="fd404-573">Ein Parameter eines Delegaten ist mit dem entsprechenden Parameter einer Methode kompatibel, wenn der Typ des Delegatenparameters restriktiver ist als der Methodenparameter, da so gewährleistet ist, dass ein an den Delegaten übergebenes Argument problemlos an die Methode weitergeleitet werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-573">A parameter of a delegate is compatible with the corresponding parameter of a method if the type of the delegate parameter is more restrictive than the type of the method parameter, because this guarantees that an argument passed to the delegate can be passed safely to the method.</span></span>  
  
 <span data-ttu-id="fd404-574">Ebenso ist der Rückgabetyp eines Delegaten kompatibel mit dem Rückgabetyp einer Methode, wenn der Rückgabetyp der Methode restriktiver ist als der Rückgabetyp des Delegaten, da so gewährleistet ist, dass der Rückgabewert der Methode problemlos in den Rückgabetyp des Delegaten umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-574">Similarly, the return type of a delegate is compatible with the return type of a method if the return type of the method is more restrictive than the return type of the delegate, because this guarantees that the return value of the method can be cast safely to the return type of the delegate.</span></span>  
  
 <span data-ttu-id="fd404-575">Angenommen, ein Delegat mit einem Parameter vom Typ <xref:System.Collections.Hashtable> und dem Rückgabetyp der <xref:System.Object> kann eine Methode mit einem Parameter des Typs darstellen <xref:System.Object> sowie einen Rückgabewert vom Typ <xref:System.Collections.Hashtable>.</span><span class="sxs-lookup"><span data-stu-id="fd404-575">For example, a delegate with a parameter of type <xref:System.Collections.Hashtable> and a return type of <xref:System.Object> can represent a method with a parameter of type <xref:System.Object> and a return value of type <xref:System.Collections.Hashtable>.</span></span>  
  
## <a name="determining-the-methods-a-delegate-can-represent"></a><span data-ttu-id="fd404-576">Bestimmen die Methoden kann ein Delegat darstellen.</span><span class="sxs-lookup"><span data-stu-id="fd404-576">Determining the Methods a Delegate Can Represent</span></span>  
 <span data-ttu-id="fd404-577">Eine weitere nützliche Methode, die Flexibilität, die von dieser Überladung der bereitgestellten betrachten <xref:System.Delegate.CreateDelegate%2A> besteht darin, dass jeder angegebene Delegat vier verschiedene Kombinationen der Methodensignatur und Methodenart (statisch oder Instanz) darstellen kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-577">Another useful way to think of the flexibility provided by this overload of <xref:System.Delegate.CreateDelegate%2A> is that any given delegate can represent four different combinations of method signature and method kind (static versus instance).</span></span> <span data-ttu-id="fd404-578">Betrachten Sie einen Delegattyp `D` mit einem Argument des Typs `C`.</span><span class="sxs-lookup"><span data-stu-id="fd404-578">Consider a delegate type `D` with one argument of type `C`.</span></span> <span data-ttu-id="fd404-579">Im folgenden wird beschrieben, die Methoden `D` darstellen kann, wird den Rückgabetyp wird ignoriert, da es in allen Fällen entsprechen muss:</span><span class="sxs-lookup"><span data-stu-id="fd404-579">The following describes the methods `D` can represent, ignoring the return type since it must match in all cases:</span></span>  
  
-   <span data-ttu-id="fd404-580">`D` kann Instanzmethode, die genau ein Argument des Typs darstellen `C`, unabhängig davon, welchen Typ die Instanzmethode gehört.</span><span class="sxs-lookup"><span data-stu-id="fd404-580">`D` can represent any instance method that has exactly one argument of type `C`, regardless of what type the instance method belongs to.</span></span> <span data-ttu-id="fd404-581">Wenn <xref:System.Delegate.CreateDelegate%2A> aufgerufen wird, `firstArgument` ist eine Instanz des Typs `method` angehört, und der resultierende Delegat wird gesagt, über diese Instanz geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-581">When <xref:System.Delegate.CreateDelegate%2A> is called, `firstArgument` is an instance of the type `method` belongs to, and the resulting delegate is said to be closed over that instance.</span></span> <span data-ttu-id="fd404-582">(Im Grunde `D` kann auch über ein null-Verweis geschlossen werden, wenn `firstArgument` ist `null`.)</span><span class="sxs-lookup"><span data-stu-id="fd404-582">(Trivially, `D` can also be closed over a null reference if `firstArgument` is `null`.)</span></span>  
  
-   <span data-ttu-id="fd404-583">`D` kann eine Instanzmethode darstellen `C` , die keine Argumente verfügt.</span><span class="sxs-lookup"><span data-stu-id="fd404-583">`D` can represent an instance method of `C` that has no arguments.</span></span> <span data-ttu-id="fd404-584">Wenn <xref:System.Delegate.CreateDelegate%2A> aufgerufen wird, `firstArgument` ist ein null-Verweis.</span><span class="sxs-lookup"><span data-stu-id="fd404-584">When <xref:System.Delegate.CreateDelegate%2A> is called, `firstArgument` is a null reference.</span></span> <span data-ttu-id="fd404-585">Der resultierende Delegat stellt eine offene Instanz-Methode und eine Instanz von `C` müssen angegeben werden, bei jedem Aufruf erfolgte.</span><span class="sxs-lookup"><span data-stu-id="fd404-585">The resulting delegate represents an open instance method, and an instance of `C` must be supplied each time it is invoked.</span></span>  
  
-   <span data-ttu-id="fd404-586">`D` kann eine statische Methode, die ein des Typs Argument darstellen `C`, und dass die Methode in einen beliebigen Typ angehören kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-586">`D` can represent a static method that takes one argument of type `C`, and that method can belong to any type.</span></span> <span data-ttu-id="fd404-587">Wenn <xref:System.Delegate.CreateDelegate%2A> aufgerufen wird, `firstArgument` ist ein null-Verweis.</span><span class="sxs-lookup"><span data-stu-id="fd404-587">When <xref:System.Delegate.CreateDelegate%2A> is called, `firstArgument` is a null reference.</span></span> <span data-ttu-id="fd404-588">Der resultierende Delegat stellt eine offene statische Methode und einer Instanz von `C` müssen angegeben werden, bei jedem Aufruf erfolgte.</span><span class="sxs-lookup"><span data-stu-id="fd404-588">The resulting delegate represents an open static method, and an instance of `C` must be supplied each time it is invoked.</span></span>  
  
-   <span data-ttu-id="fd404-589">`D` können eine statische Methode darstellen, die zum Typ gehört `F` und verfügt über zwei Argumente des Typs `F` und `C`.</span><span class="sxs-lookup"><span data-stu-id="fd404-589">`D` can represent a static method that belongs to type `F` and has two arguments, of type `F` and type `C`.</span></span> <span data-ttu-id="fd404-590">Wenn <xref:System.Delegate.CreateDelegate%2A> aufgerufen wird, `firstArgument` ist eine Instanz der `F`.</span><span class="sxs-lookup"><span data-stu-id="fd404-590">When <xref:System.Delegate.CreateDelegate%2A> is called, `firstArgument` is an instance of `F`.</span></span> <span data-ttu-id="fd404-591">Der resultierende Delegat stellt eine statische Methode, die über diese Instanz geschlossen ist `F`.</span><span class="sxs-lookup"><span data-stu-id="fd404-591">The resulting delegate represents a static method that is closed over that instance of `F`.</span></span> <span data-ttu-id="fd404-592">Beachten Sie, dass im Fall, in denen `F` und `C` denselben Typ aufweisen, die statische Methode verfügt über zwei Argumente des Typs.</span><span class="sxs-lookup"><span data-stu-id="fd404-592">Note that in the case where `F` and `C` are the same type, the static method has two arguments of that type.</span></span> <span data-ttu-id="fd404-593">(In diesem Fall `D` wird über einen null-Verweis geschlossen, wenn `firstArgument` ist `null`.)</span><span class="sxs-lookup"><span data-stu-id="fd404-593">(In this case, `D` is closed over a null reference if `firstArgument` is `null`.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd404-594">Dieser Abschnitt enthält drei Codebeispiele aufgeführt.</span><span class="sxs-lookup"><span data-stu-id="fd404-594">This section contains three code examples.</span></span> <span data-ttu-id="fd404-595">Das erste Beispiel veranschaulicht die vier Arten von Delegaten, die erstellt werden können: über eine Instanzmethode, öffnen Sie über eine Instanzmethode, öffnen Sie über eine statische Methode geschlossen und über eine statische Methode geschlossen.</span><span class="sxs-lookup"><span data-stu-id="fd404-595">The first example demonstrates the four kinds of delegates that can be created: closed over an instance method, open over an instance method, open over a static method, and closed over a static method.</span></span>  
  
 <span data-ttu-id="fd404-596">Im zweiten Codebeispiel wird veranschaulicht, kompatible Parametertypen und Rückgabetypen.</span><span class="sxs-lookup"><span data-stu-id="fd404-596">The second code example demonstrates compatible parameter types and return types.</span></span>  
  
 <span data-ttu-id="fd404-597">Im dritten Codebeispiel wird einen einzelner Delegattyp definiert, und zeigt, dass alle Methoden, die den Delegattyp darstellen können.</span><span class="sxs-lookup"><span data-stu-id="fd404-597">The third code example defines a single delegate type, and shows all the methods that delegate type can represent.</span></span>  
  
 <span data-ttu-id="fd404-598">**Beispiel 1**</span><span class="sxs-lookup"><span data-stu-id="fd404-598">**Example 1**</span></span>  
  
 <span data-ttu-id="fd404-599">Im folgenden Codebeispiel wird veranschaulicht, die vier Möglichkeiten, die ein Delegat kann mit dieser Überladung der erstellt werden die <xref:System.Delegate.CreateDelegate%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="fd404-599">The following code example demonstrates the four ways a delegate can be created using this overload of the <xref:System.Delegate.CreateDelegate%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-600">Es gibt zwei Überladungen der <xref:System.Delegate.CreateDelegate%2A> Methode, die angeben, `firstArgument` und ein <xref:System.Reflection.MethodInfo>; ihre Funktionalität ist identisch, außer dass eine Ihnen die ermöglicht Angabe, ob bei Bindungsfehlern ausgelöst werden, und die andere löst immer eine.</span><span class="sxs-lookup"><span data-stu-id="fd404-600">There are two overloads of the <xref:System.Delegate.CreateDelegate%2A> method that specify `firstArgument` and a <xref:System.Reflection.MethodInfo>; their functionality is the same except that one allows you to specify whether to throw on failure to bind, and the other always throws.</span></span> <span data-ttu-id="fd404-601">Dieses Codebeispiel verwendet beide Überladungen.</span><span class="sxs-lookup"><span data-stu-id="fd404-601">This code example uses both overloads.</span></span>  
  
 <span data-ttu-id="fd404-602">Das Beispiel deklariert eine Klasse `C` mit einer statischen Methode `M2` und eine Instanzmethode `M1`, sowie zwei Delegattypen: `D1` akzeptiert eine Instanz von `C` und eine Zeichenfolge, `D2` akzeptiert eine Zeichenfolge und `D3`verfügt über keine Argumente.</span><span class="sxs-lookup"><span data-stu-id="fd404-602">The example declares a class `C` with a static method `M2` and an instance method `M1`, and three delegate types: `D1` takes an instance of `C` and a string, `D2` takes a string, and `D3` has no arguments.</span></span>  
  
 <span data-ttu-id="fd404-603">Eine zweite Klasse namens `Example` enthält den Code, der den Delegaten erstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-603">A second class named `Example` contains the code that creates the delegates.</span></span>  
  
-   <span data-ttu-id="fd404-604">Ein Delegat vom Typ `D2`, geschlossen für eine Instanz von `C`, wird für die Instanzmethode erstellt `M1`.</span><span class="sxs-lookup"><span data-stu-id="fd404-604">A delegate of type `D2`, closed over an instance of `C`, is created for the instance method `M1`.</span></span> <span data-ttu-id="fd404-605">Er wird aufgerufen, mit anderen Zeichenfolgen, um anzugeben, dass die gebundene Instanz von `C` wird immer verwendet.</span><span class="sxs-lookup"><span data-stu-id="fd404-605">It is invoked with different strings, to show that the bound instance of `C` is always used.</span></span>  
  
-   <span data-ttu-id="fd404-606">Ein Delegat vom Typ `D1`, der eine offene Instanzmethode darstellt, wird für die Instanzmethode erstellt `M1`.</span><span class="sxs-lookup"><span data-stu-id="fd404-606">A delegate of type `D1`, representing an open instance method, is created for the instance method `M1`.</span></span> <span data-ttu-id="fd404-607">Eine Instanz muss übergeben werden, wenn der Delegat aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-607">An instance must be passed when the delegate is invoked.</span></span>  
  
-   <span data-ttu-id="fd404-608">Ein Delegat vom Typ `D2`, eine offene statische Methode darstellt, wird für die statische Methode erstellt `M2`.</span><span class="sxs-lookup"><span data-stu-id="fd404-608">A delegate of type `D2`, representing an open static method, is created for the static method `M2`.</span></span>  
  
-   <span data-ttu-id="fd404-609">Schließlich einen Delegaten vom Typ `D3`, über eine Zeichenfolge geschlossen, wird für die statische Methode erstellt `M2`.</span><span class="sxs-lookup"><span data-stu-id="fd404-609">Finally, a delegate of type `D3`, closed over a string, is created for the static method `M2`.</span></span> <span data-ttu-id="fd404-610">Die Methode wird aufgerufen, um anzugeben, dass sie die gebundene Zeichenfolge verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-610">The method is invoked to show that it uses the bound string.</span></span>  
  
 [!code-csharp[Delegate.CreateDelegateTOM#1](~/samples/snippets/csharp/VS_Snippets_CLR/Delegate.CreateDelegateTOM/cs/openClosedOver.cs#1)]
 [!code-vb[Delegate.CreateDelegateTOM#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Delegate.CreateDelegateTOM/VB/openClosedOver.vb#1)]  
  
 <span data-ttu-id="fd404-611">**Beispiel 2**</span><span class="sxs-lookup"><span data-stu-id="fd404-611">**Example 2**</span></span>  
  
 <span data-ttu-id="fd404-612">Im folgenden Codebeispiel wird veranschaulicht, die Kompatibilität der Parametertypen und Rückgabetypen.</span><span class="sxs-lookup"><span data-stu-id="fd404-612">The following code example demonstrates compatibility of parameter types and return types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-613">Dieses Codebeispiel verwendet die <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%29> -methodenüberladung.</span><span class="sxs-lookup"><span data-stu-id="fd404-613">This code example uses the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Reflection.MethodInfo%29> method overload.</span></span> <span data-ttu-id="fd404-614">Die Verwendung der anderen Überladungen dieser <xref:System.Reflection.MethodInfo> ist ähnlich.</span><span class="sxs-lookup"><span data-stu-id="fd404-614">The use of other overloads that take <xref:System.Reflection.MethodInfo> is similar.</span></span>  
  
 <span data-ttu-id="fd404-615">Das Codebeispiel definiert eine Basisklasse, die mit dem Namen `Base` und eine Klasse namens `Derived` abgeleitet, die `Base`.</span><span class="sxs-lookup"><span data-stu-id="fd404-615">The code example defines a base class named `Base` and a class named `Derived` that derives from `Base`.</span></span> <span data-ttu-id="fd404-616">Die abgeleitete Klasse verfügt über eine `static` (`Shared` in Visual Basic) Methode, die mit dem Namen `MyMethod` mit einem Parameter vom Typ `Base` und dem Rückgabetyp der `Derived`.</span><span class="sxs-lookup"><span data-stu-id="fd404-616">The derived class has a `static` (`Shared` in Visual Basic) method named `MyMethod` with one parameter of type `Base` and a return type of `Derived`.</span></span> <span data-ttu-id="fd404-617">Im Codebeispiel wird definiert auch einen Delegaten, der mit dem Namen `Example` , die einen Parameter vom Typ hat `Derived` und dem Rückgabetyp der `Base`.</span><span class="sxs-lookup"><span data-stu-id="fd404-617">The code example also defines a delegate named `Example` that has one parameter of type `Derived` and a return type of `Base`.</span></span>  
  
 <span data-ttu-id="fd404-618">Im Codebeispiel wird veranschaulicht, dass der Delegat, mit dem Namen `Example` können verwendet werden, um die Methode darstellen `MyMethod`.</span><span class="sxs-lookup"><span data-stu-id="fd404-618">The code example demonstrates that the delegate named `Example` can be used to represent the method `MyMethod`.</span></span> <span data-ttu-id="fd404-619">Die Methode kann an den Delegaten gebunden werden, da:</span><span class="sxs-lookup"><span data-stu-id="fd404-619">The method can be bound to the delegate because:</span></span>  
  
-   <span data-ttu-id="fd404-620">Der Parametertyp des Delegaten (`Derived`) ist stärker eingeschränkt als der Parametertyp des `MyMethod` (`Base`), sodass es immer sicher an das Argument des Delegaten zu übergeben sind `MyMethod`.</span><span class="sxs-lookup"><span data-stu-id="fd404-620">The parameter type of the delegate (`Derived`) is more restrictive than the parameter type of `MyMethod` (`Base`), so that it is always safe to pass the argument of the delegate to `MyMethod`.</span></span>  
  
-   <span data-ttu-id="fd404-621">Der Rückgabetyp der `MyMethod` (`Derived`) ist stärker eingeschränkt als der Parametertyp des Delegaten (`Base`), sodass sie immer sicher, das den Rückgabetyp der Methode, die den Rückgabetyp des Delegaten umgewandelt werden kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-621">The return type of `MyMethod` (`Derived`) is more restrictive than the parameter type of the delegate (`Base`), so that it is always safe to cast the return type of the method to the return type of the delegate.</span></span>  
  
 <span data-ttu-id="fd404-622">Im Codebeispiel erzeugt keine Ausgabe.</span><span class="sxs-lookup"><span data-stu-id="fd404-622">The code example produces no output.</span></span>  
  
 [!code-cpp[Delegate.CreateDelegate_RelaxedFit#1](~/samples/snippets/cpp/VS_Snippets_CLR/Delegate.CreateDelegate_RelaxedFit/cpp/source.cpp#1)]
 [!code-csharp[Delegate.CreateDelegate_RelaxedFit#1](~/samples/snippets/csharp/VS_Snippets_CLR/Delegate.CreateDelegate_RelaxedFit/cs/source.cs#1)]
 [!code-vb[Delegate.CreateDelegate_RelaxedFit#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Delegate.CreateDelegate_RelaxedFit/vb/source.vb#1)]  
  
 <span data-ttu-id="fd404-623">**Beispiel 3**</span><span class="sxs-lookup"><span data-stu-id="fd404-623">**Example 3**</span></span>  
  
 <span data-ttu-id="fd404-624">Das folgende Codebeispiel zeigt die Methoden, die ein einzelner Delegattyp darstellen kann.</span><span class="sxs-lookup"><span data-stu-id="fd404-624">The following code example shows all the methods a single delegate type can represent.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-625">Es gibt zwei Überladungen der <xref:System.Delegate.CreateDelegate%2A> Methode, die angeben, `firstArgument` und ein <xref:System.Reflection.MethodInfo>; ihre Funktionalität ist identisch, außer dass eine Ihnen die ermöglicht Angabe, ob bei Bindungsfehlern ausgelöst werden, und die andere löst immer eine.</span><span class="sxs-lookup"><span data-stu-id="fd404-625">There are two overloads of the <xref:System.Delegate.CreateDelegate%2A> method that specify `firstArgument` and a <xref:System.Reflection.MethodInfo>; their functionality is the same except that one allows you to specify whether to throw on failure to bind, and the other always throws.</span></span> <span data-ttu-id="fd404-626">Dieses Codebeispiel verwendet beide Überladungen.</span><span class="sxs-lookup"><span data-stu-id="fd404-626">This code example uses both overloads.</span></span>  
  
 <span data-ttu-id="fd404-627">Im Codebeispiel werden zwei Klassen definiert `C` und `F`, und einen Delegattyp `D` mit einem Argument des Typs `C`.</span><span class="sxs-lookup"><span data-stu-id="fd404-627">The code example defines two classes, `C` and `F`, and a delegate type `D` with one argument of type `C`.</span></span> <span data-ttu-id="fd404-628">Die Klassen übereinstimmende statische und Instanzenmethoden `M1`, `M3`, und `M4`, und die Klasse `C` verfügt auch über eine Instanzmethode `M2` , die keine Argumente verfügt.</span><span class="sxs-lookup"><span data-stu-id="fd404-628">The classes have matching static and instance methods `M1`, `M3`, and `M4`, and class `C` also has an instance method `M2` that has no arguments.</span></span>  
  
 <span data-ttu-id="fd404-629">Eine dritte Klasse namens `Example` enthält den Code, der den Delegaten erstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-629">A third class named `Example` contains the code that creates the delegates.</span></span>  
  
-   <span data-ttu-id="fd404-630">Delegaten werden erstellt, z. B. Methode `M1` des Typs `C` und `F`; jede über eine Instanz des jeweiligen Typs geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-630">Delegates are created for instance method `M1` of type `C` and type `F`; each is closed over an instance of the respective type.</span></span> <span data-ttu-id="fd404-631">Methode `M1` des Typs `C` zeigt die `ID` Eigenschaften der gebundenen Instanz und des Arguments.</span><span class="sxs-lookup"><span data-stu-id="fd404-631">Method `M1` of type `C` displays the `ID` properties of the bound instance and of the argument.</span></span>  
  
-   <span data-ttu-id="fd404-632">Ein Delegat erstellt wird, für die Methode `M2` des Typs `C`.</span><span class="sxs-lookup"><span data-stu-id="fd404-632">A delegate is created for method `M2` of type `C`.</span></span> <span data-ttu-id="fd404-633">Dies ist eine offene Instanz-Delegaten, in dem das Argument des Delegaten ausgeblendete erste Argument für die Instanzmethode darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-633">This is an open instance delegate, in which the argument of the delegate represents the hidden first argument on the instance method.</span></span> <span data-ttu-id="fd404-634">Die Methode hat keine anderen Argumente.</span><span class="sxs-lookup"><span data-stu-id="fd404-634">The method has no other arguments.</span></span>  
  
-   <span data-ttu-id="fd404-635">Delegaten werden erstellt, für die statische Methode `M3` des Typs `C` und `F`; Hierbei handelt es sich um open statische Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-635">Delegates are created for static method `M3` of type `C` and type `F`; these are open static delegates.</span></span>  
  
-   <span data-ttu-id="fd404-636">Schließlich werden die Delegaten für die statische Methode erstellt `M4` des Typs `C` und `F`; jede Methode verfügt über den deklarierenden Typ als erstes Argument und eine Instanz des Typs angegeben wird, damit die Delegaten über dem ersten Argument geschlossen werden .</span><span class="sxs-lookup"><span data-stu-id="fd404-636">Finally, delegates are created for static method `M4` of type `C` and type `F`; each method has the declaring type as its first argument, and an instance of the type is supplied, so the delegates are closed over their first arguments.</span></span> <span data-ttu-id="fd404-637">Methode `M4` des Typs `C` zeigt die `ID` Eigenschaften der gebundenen Instanz und des Arguments.</span><span class="sxs-lookup"><span data-stu-id="fd404-637">Method `M4` of type `C` displays the `ID` properties of the bound instance and of the argument.</span></span>  
  
 [!code-csharp[Delegate.CreateDelegateTOM_2#1](~/samples/snippets/csharp/VS_Snippets_CLR/Delegate.CreateDelegateTOM_2/cs/source.cs#1)]
 [!code-vb[Delegate.CreateDelegateTOM_2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Delegate.CreateDelegateTOM_2/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd404-638"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-638"><paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-639">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-639">-or-</span></span> 
 <span data-ttu-id="fd404-640"><paramref name="method" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-640"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-641"><paramref name="type" /> erbt nicht <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-641"><paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.</span></span>  
  
<span data-ttu-id="fd404-642">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-642">-or-</span></span> 
 <span data-ttu-id="fd404-643"><paramref name="type" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-643"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span> <span data-ttu-id="fd404-644">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-644">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span>  
  
<span data-ttu-id="fd404-645">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-645">-or-</span></span> 
 <span data-ttu-id="fd404-646"><paramref name="method" /> kann nicht gebunden werden, und <paramref name="throwOnBindFailure" /> ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-646"><paramref name="method" /> cannot be bound, and <paramref name="throwOnBindFailure" /> is <see langword="true" />.</span></span>  
  
<span data-ttu-id="fd404-647">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-647">-or-</span></span> 
 <span data-ttu-id="fd404-648"><paramref name="method" /> ist keine <see langword="RuntimeMethodInfo" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-648"><paramref name="method" /> is not a <see langword="RuntimeMethodInfo" />.</span></span> <span data-ttu-id="fd404-649">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-649">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="fd404-650">Die <see langword="Invoke" />-Methode von <paramref name="type" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="fd404-650">The <see langword="Invoke" /> method of <paramref name="type" /> is not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="fd404-651">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-651">The caller does not have the permissions necessary to access <paramref name="method" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-652">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-652">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-653">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-653">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.MulticastDelegate" />
        <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
        <altmember cref="T:System.Reflection.MethodInfo" />
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="public static Delegate CreateDelegate (Type type, object target, string method, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate CreateDelegate(class System.Type type, object target, string method, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ CreateDelegate(Type ^ type, System::Object ^ target, System::String ^ method, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member CreateDelegate : Type * obj * string * bool -&gt; Delegate" Usage="System.Delegate.CreateDelegate (type, target, method, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd404-654">Der <see cref="T:System.Type" /> des zu erstellenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-654">The <see cref="T:System.Type" /> of delegate to create.</span></span></param>
        <param name="target"><span data-ttu-id="fd404-655">Die Klasseninstanz, für die <paramref name="method" /> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-655">The class instance on which <paramref name="method" /> is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="fd404-656">Der Name der Instanzenmethode, die durch den Delegaten dargestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-656">The name of the instance method that the delegate is to represent.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fd404-657">Ein boolescher Wert, der angibt, ob die Groß- und Kleinschreibung beim Vergleichen des Methodennamens berücksichtigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-657">A Boolean indicating whether to ignore the case when comparing the name of the method.</span></span></param>
        <summary><span data-ttu-id="fd404-658">Erstellt einen Delegaten vom angegebenen Typ, der die angegebene Instanzenmethode darstellt, die für die angegebene Klasseninstanz aufgerufen werden soll, wobei die Groß- und Kleinschreibung den Angaben entsprechend berücksichtigt bzw. nicht berücksichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-658">Creates a delegate of the specified type that represents the specified instance method to invoke on the specified class instance with the specified case-sensitivity.</span></span></summary>
        <returns><span data-ttu-id="fd404-659">Ein Delegat vom angegebenen Typ, der die angegebene Instanzenmethode darstellt, die für die angegebene Klasseninstanz aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-659">A delegate of the specified type that represents the specified instance method to invoke on the specified class instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-660">Diese Methode erstellt nur Delegaten für die Instanz.</span><span class="sxs-lookup"><span data-stu-id="fd404-660">This method creates delegates for instance methods only.</span></span> <span data-ttu-id="fd404-661">Eine Instanzmethode handelt es sich um eine Methode, die eine Instanz einer Klasse zugeordnet ist; eine statische Methode handelt es sich um eine Methode, die die Klasse selbst zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-661">An instance method is a method that is associated with an instance of a class; a static method is a method that is associated with the class itself.</span></span>  
  
 <span data-ttu-id="fd404-662">Überladung dieser Methode entspricht dem Aufrufen der <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%2CSystem.Boolean%2CSystem.Boolean%29> -methodenüberladung angeben `true` für `throwOnBindFailure`.</span><span class="sxs-lookup"><span data-stu-id="fd404-662">This method overload is equivalent to calling the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Object%2CSystem.String%2CSystem.Boolean%2CSystem.Boolean%29> method overload, specifying `true` for `throwOnBindFailure`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-663">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Methode kann verwendet werden, um nicht öffentliche Methoden zugreifen, wenn der Aufrufer erteilt wurde <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> kennzeichnen und Menge oder eine Teilmenge der Berechtigungssatz die nicht öffentliche Methoden an des Aufrufers des beschränkt ist zu gewähren davon.</span><span class="sxs-lookup"><span data-stu-id="fd404-663">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public methods if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public methods is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fd404-664">(Finden Sie unter [Überlegungen zur Sicherheit für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fd404-664">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fd404-665">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="fd404-665">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd404-666"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-666"><paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-667">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-667">-or-</span></span> 
 <span data-ttu-id="fd404-668"><paramref name="target" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-668"><paramref name="target" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-669">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-669">-or-</span></span> 
 <span data-ttu-id="fd404-670"><paramref name="method" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-670"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-671"><paramref name="type" /> erbt nicht <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-671"><paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.</span></span>  
  
<span data-ttu-id="fd404-672">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-672">-or-</span></span> 
 <span data-ttu-id="fd404-673"><paramref name="type" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-673"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span> <span data-ttu-id="fd404-674">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-674">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span>  
  
<span data-ttu-id="fd404-675">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-675">-or-</span></span> 
 <span data-ttu-id="fd404-676"><paramref name="method" /> ist keine Instanzenmethode.</span><span class="sxs-lookup"><span data-stu-id="fd404-676"><paramref name="method" /> is not an instance method.</span></span>  
  
<span data-ttu-id="fd404-677">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-677">-or-</span></span> 
 <span data-ttu-id="fd404-678"><paramref name="method" /> kann nicht gebunden werden, z. B. weil sie nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="fd404-678"><paramref name="method" /> cannot be bound, for example because it cannot be found.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="fd404-679">Die <see langword="Invoke" />-Methode von <paramref name="type" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="fd404-679">The <see langword="Invoke" /> method of <paramref name="type" /> is not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="fd404-680">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-680">The caller does not have the permissions necessary to access <paramref name="method" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-681">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-681">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-682">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-682">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.MulticastDelegate" />
        <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="public static Delegate CreateDelegate (Type type, Type target, string method, bool ignoreCase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate CreateDelegate(class System.Type type, class System.Type target, string method, bool ignoreCase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ CreateDelegate(Type ^ type, Type ^ target, System::String ^ method, bool ignoreCase);" />
      <MemberSignature Language="F#" Value="static member CreateDelegate : Type * Type * string * bool -&gt; Delegate" Usage="System.Delegate.CreateDelegate (type, target, method, ignoreCase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="target" Type="System.Type" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd404-683">Der <see cref="T:System.Type" /> des zu erstellenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-683">The <see cref="T:System.Type" /> of delegate to create.</span></span></param>
        <param name="target"><span data-ttu-id="fd404-684">Der <see cref="T:System.Type" />, der die Klasse darstellt, die von <paramref name="method" /> implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-684">The <see cref="T:System.Type" /> representing the class that implements <paramref name="method" />.</span></span></param>
        <param name="method"><span data-ttu-id="fd404-685">Der Name der statischen Methode, die durch den Delegaten dargestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-685">The name of the static method that the delegate is to represent.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fd404-686">Ein boolescher Wert, der angibt, ob die Groß- und Kleinschreibung beim Vergleichen des Methodennamens berücksichtigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-686">A Boolean indicating whether to ignore the case when comparing the name of the method.</span></span></param>
        <summary><span data-ttu-id="fd404-687">Erstellt einen Delegaten vom angegebenen Typ, der die angegebene statische Methode der angegebenen Klasse mit der angegebenen Berücksichtigung von Groß- und Kleinschreibung darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-687">Creates a delegate of the specified type that represents the specified static method of the specified class, with the specified case-sensitivity.</span></span></summary>
        <returns><span data-ttu-id="fd404-688">Ein Delegat vom angegebenen Typ, der die angegebene statische Methode der angegebenen Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-688">A delegate of the specified type that represents the specified static method of the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-689">Diese Methode erstellt die Delegaten für die nur statische Methoden.</span><span class="sxs-lookup"><span data-stu-id="fd404-689">This method creates delegates for static methods only.</span></span> <span data-ttu-id="fd404-690">Eine Instanzmethode handelt es sich um eine Methode, die eine Instanz einer Klasse zugeordnet ist; eine statische Methode handelt es sich um eine Methode, die die Klasse selbst zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-690">An instance method is a method that is associated with an instance of a class; a static method is a method that is associated with the class itself.</span></span>  
  
 <span data-ttu-id="fd404-691">Überladung dieser Methode entspricht dem Aufrufen der <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%2CSystem.Boolean%2CSystem.Boolean%29> -methodenüberladung angeben `true` für `throwOnBindFailure`.</span><span class="sxs-lookup"><span data-stu-id="fd404-691">This method overload is equivalent to calling the <xref:System.Delegate.CreateDelegate%28System.Type%2CSystem.Type%2CSystem.String%2CSystem.Boolean%2CSystem.Boolean%29> method overload, specifying `true` for `throwOnBindFailure`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-692">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Methode kann verwendet werden, um nicht öffentliche Methoden zugreifen, wenn der Aufrufer erteilt wurde <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> kennzeichnen und Menge oder eine Teilmenge der Berechtigungssatz die nicht öffentliche Methoden an des Aufrufers des beschränkt ist zu gewähren davon.</span><span class="sxs-lookup"><span data-stu-id="fd404-692">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public methods if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public methods is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fd404-693">(Finden Sie unter [Überlegungen zur Sicherheit für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fd404-693">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fd404-694">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="fd404-694">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd404-695"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-695"><paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-696">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-696">-or-</span></span> 
 <span data-ttu-id="fd404-697"><paramref name="target" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-697"><paramref name="target" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-698">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-698">-or-</span></span> 
 <span data-ttu-id="fd404-699"><paramref name="method" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-699"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-700"><paramref name="type" /> erbt nicht <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-700"><paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.</span></span>  
  
<span data-ttu-id="fd404-701">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-701">-or-</span></span> 
 <span data-ttu-id="fd404-702"><paramref name="type" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-702"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span> <span data-ttu-id="fd404-703">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-703">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span>  
  
<span data-ttu-id="fd404-704">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-704">-or-</span></span> 
 <span data-ttu-id="fd404-705"><paramref name="target" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-705"><paramref name="target" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="fd404-706">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-706">-or-</span></span> 
 <span data-ttu-id="fd404-707"><paramref name="target" /> ist ein offener generischer Typ.</span><span class="sxs-lookup"><span data-stu-id="fd404-707"><paramref name="target" /> is an open generic type.</span></span> <span data-ttu-id="fd404-708">Das bedeutet, die <see cref="P:System.Type.ContainsGenericParameters" />-Eigenschaft ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-708">That is, its <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" />.</span></span>  
  
<span data-ttu-id="fd404-709">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-709">-or-</span></span> 
 <span data-ttu-id="fd404-710"><paramref name="method" /> ist keine <see langword="static" />-Methode (<see langword="Shared" />-Methode in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fd404-710"><paramref name="method" /> is not a <see langword="static" /> method (<see langword="Shared" /> method in Visual Basic).</span></span>  
  
<span data-ttu-id="fd404-711">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-711">-or-</span></span> 
 <span data-ttu-id="fd404-712"><paramref name="method" /> kann nicht gebunden werden, z. B. weil sie nicht gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="fd404-712"><paramref name="method" /> cannot be bound, for example because it cannot be found.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="fd404-713">Die <see langword="Invoke" />-Methode von <paramref name="type" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="fd404-713">The <see langword="Invoke" /> method of <paramref name="type" /> is not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="fd404-714">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-714">The caller does not have the permissions necessary to access <paramref name="method" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-715">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-715">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-716">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-716">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.MulticastDelegate" />
        <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="public static Delegate CreateDelegate (Type type, object target, string method, bool ignoreCase, bool throwOnBindFailure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate CreateDelegate(class System.Type type, object target, string method, bool ignoreCase, bool throwOnBindFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.CreateDelegate(System.Type,System.Object,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ CreateDelegate(Type ^ type, System::Object ^ target, System::String ^ method, bool ignoreCase, bool throwOnBindFailure);" />
      <MemberSignature Language="F#" Value="static member CreateDelegate : Type * obj * string * bool * bool -&gt; Delegate" Usage="System.Delegate.CreateDelegate (type, target, method, ignoreCase, throwOnBindFailure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="throwOnBindFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd404-717">Der <see cref="T:System.Type" /> des zu erstellenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-717">The <see cref="T:System.Type" /> of delegate to create.</span></span></param>
        <param name="target"><span data-ttu-id="fd404-718">Die Klasseninstanz, für die <paramref name="method" /> aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-718">The class instance on which <paramref name="method" /> is invoked.</span></span></param>
        <param name="method"><span data-ttu-id="fd404-719">Der Name der Instanzenmethode, die durch den Delegaten dargestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-719">The name of the instance method that the delegate is to represent.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fd404-720">Ein boolescher Wert, der angibt, ob die Groß- und Kleinschreibung beim Vergleichen des Methodennamens berücksichtigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-720">A Boolean indicating whether to ignore the case when comparing the name of the method.</span></span></param>
        <param name="throwOnBindFailure"><span data-ttu-id="fd404-721"><see langword="true" />, um eine Ausnahme auszulösen, wenn <paramref name="method" /> nicht gebunden werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-721"><see langword="true" /> to throw an exception if <paramref name="method" /> cannot be bound; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fd404-722">Erstellt einen Delegaten vom angegebenen Typ, der die angegebene Instanzenmethode darstellt, die für die angegebene Klasseninstanz aufgerufen werden soll, wobei die Groß- und Kleinschreibung und das Verhalten bei Bindungsfehlern den Angaben entsprechend berücksichtigt bzw. nicht berücksichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-722">Creates a delegate of the specified type that represents the specified instance method to invoke on the specified class instance, with the specified case-sensitivity and the specified behavior on failure to bind.</span></span></summary>
        <returns><span data-ttu-id="fd404-723">Ein Delegat vom angegebenen Typ, der die angegebene Instanzenmethode darstellt, die für die angegebene Klasseninstanz aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-723">A delegate of the specified type that represents the specified instance method to invoke on the specified class instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-724">Diese Methode erstellt nur Delegaten für die Instanz.</span><span class="sxs-lookup"><span data-stu-id="fd404-724">This method creates delegates for instance methods only.</span></span> <span data-ttu-id="fd404-725">Eine Instanzmethode handelt es sich um eine Methode, die eine Instanz einer Klasse zugeordnet ist; eine statische Methode handelt es sich um eine Methode, die die Klasse selbst zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-725">An instance method is a method that is associated with an instance of a class; a static method is a method that is associated with the class itself.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-726">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Methode kann verwendet werden, um nicht öffentliche Methoden zugreifen, wenn der Aufrufer erteilt wurde <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> kennzeichnen und Menge oder eine Teilmenge der Berechtigungssatz die nicht öffentliche Methoden an des Aufrufers des beschränkt ist zu gewähren davon.</span><span class="sxs-lookup"><span data-stu-id="fd404-726">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public methods if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public methods is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fd404-727">(Finden Sie unter [Überlegungen zur Sicherheit für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fd404-727">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fd404-728">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="fd404-728">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd404-729"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-729"><paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-730">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-730">-or-</span></span> 
 <span data-ttu-id="fd404-731"><paramref name="target" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-731"><paramref name="target" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-732">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-732">-or-</span></span> 
 <span data-ttu-id="fd404-733"><paramref name="method" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-733"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-734"><paramref name="type" /> erbt nicht <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-734"><paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.</span></span>  
  
<span data-ttu-id="fd404-735">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-735">-or-</span></span> 
 <span data-ttu-id="fd404-736"><paramref name="type" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-736"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span> <span data-ttu-id="fd404-737">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-737">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span>  
  
<span data-ttu-id="fd404-738">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-738">-or-</span></span> 
 <span data-ttu-id="fd404-739"><paramref name="method" /> ist keine Instanzenmethode.</span><span class="sxs-lookup"><span data-stu-id="fd404-739"><paramref name="method" /> is not an instance method.</span></span>  
  
<span data-ttu-id="fd404-740">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-740">-or-</span></span> 
 <span data-ttu-id="fd404-741"><paramref name="method" /> kann nicht gebunden werden, z. B. weil sie nicht gefunden wurde, und <paramref name="throwOnBindFailure" /> ist gleich <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-741"><paramref name="method" /> cannot be bound, for example because it cannot be found, and <paramref name="throwOnBindFailure" /> is <see langword="true" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="fd404-742">Die <see langword="Invoke" />-Methode von <paramref name="type" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="fd404-742">The <see langword="Invoke" /> method of <paramref name="type" /> is not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="fd404-743">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-743">The caller does not have the permissions necessary to access <paramref name="method" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-744">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-744">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-745">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-745">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.MulticastDelegate" />
        <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="CreateDelegate">
      <MemberSignature Language="C#" Value="public static Delegate CreateDelegate (Type type, Type target, string method, bool ignoreCase, bool throwOnBindFailure);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate CreateDelegate(class System.Type type, class System.Type target, string method, bool ignoreCase, bool throwOnBindFailure) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.CreateDelegate(System.Type,System.Type,System.String,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ CreateDelegate(Type ^ type, Type ^ target, System::String ^ method, bool ignoreCase, bool throwOnBindFailure);" />
      <MemberSignature Language="F#" Value="static member CreateDelegate : Type * Type * string * bool * bool -&gt; Delegate" Usage="System.Delegate.CreateDelegate (type, target, method, ignoreCase, throwOnBindFailure)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="target" Type="System.Type" />
        <Parameter Name="method" Type="System.String" />
        <Parameter Name="ignoreCase" Type="System.Boolean" />
        <Parameter Name="throwOnBindFailure" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="fd404-746">Der <see cref="T:System.Type" /> des zu erstellenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-746">The <see cref="T:System.Type" /> of delegate to create.</span></span></param>
        <param name="target"><span data-ttu-id="fd404-747">Der <see cref="T:System.Type" />, der die Klasse darstellt, die von <paramref name="method" /> implementiert wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-747">The <see cref="T:System.Type" /> representing the class that implements <paramref name="method" />.</span></span></param>
        <param name="method"><span data-ttu-id="fd404-748">Der Name der statischen Methode, die durch den Delegaten dargestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-748">The name of the static method that the delegate is to represent.</span></span></param>
        <param name="ignoreCase"><span data-ttu-id="fd404-749">Ein boolescher Wert, der angibt, ob die Groß- und Kleinschreibung beim Vergleichen des Methodennamens berücksichtigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-749">A Boolean indicating whether to ignore the case when comparing the name of the method.</span></span></param>
        <param name="throwOnBindFailure"><span data-ttu-id="fd404-750"><see langword="true" />, um eine Ausnahme auszulösen, wenn <paramref name="method" /> nicht gebunden werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-750"><see langword="true" /> to throw an exception if <paramref name="method" /> cannot be bound; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="fd404-751">Erstellt einen Delegaten vom angegebenen Typ, der die angegebene statische Methode der angegebenen Klasse darstellt, wobei die Groß- und Kleinschreibung und das Verhalten bei Bindungsfehlern den Angaben entsprechend berücksichtigt bzw. nicht berücksichtigt wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-751">Creates a delegate of the specified type that represents the specified static method of the specified class, with the specified case-sensitivity and the specified behavior on failure to bind.</span></span></summary>
        <returns><span data-ttu-id="fd404-752">Ein Delegat vom angegebenen Typ, der die angegebene statische Methode der angegebenen Klasse darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-752">A delegate of the specified type that represents the specified static method of the specified class.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-753">Diese Methode erstellt die Delegaten für die nur statische Methoden.</span><span class="sxs-lookup"><span data-stu-id="fd404-753">This method creates delegates for static methods only.</span></span> <span data-ttu-id="fd404-754">Eine Instanzmethode handelt es sich um eine Methode, die eine Instanz einer Klasse zugeordnet ist; eine statische Methode handelt es sich um eine Methode, die die Klasse selbst zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-754">An instance method is a method that is associated with an instance of a class; a static method is a method that is associated with the class itself.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fd404-755">Beginnend mit der [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], diese Methode kann verwendet werden, um nicht öffentliche Methoden zugreifen, wenn der Aufrufer erteilt wurde <xref:System.Security.Permissions.ReflectionPermission> mit der <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> kennzeichnen und Menge oder eine Teilmenge der Berechtigungssatz die nicht öffentliche Methoden an des Aufrufers des beschränkt ist zu gewähren davon.</span><span class="sxs-lookup"><span data-stu-id="fd404-755">Starting with the [!INCLUDE[net_v20sp1_long](~/includes/net-v20sp1-long-md.md)], this method can be used to access non-public methods if the caller has been granted <xref:System.Security.Permissions.ReflectionPermission> with the <xref:System.Security.Permissions.ReflectionPermissionFlag.RestrictedMemberAccess?displayProperty=nameWithType> flag and if the grant set of the non-public methods is restricted to the caller's grant set, or a subset thereof.</span></span> <span data-ttu-id="fd404-756">(Finden Sie unter [Überlegungen zur Sicherheit für die Reflektion](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span><span class="sxs-lookup"><span data-stu-id="fd404-756">(See [Security Considerations for Reflection](~/docs/framework/reflection-and-codedom/security-considerations-for-reflection.md).)</span></span>  
>   
>  <span data-ttu-id="fd404-757">Zur Verwendung dieser Funktionen sollte die Anwendung für [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] oder höher ausgelegt sein. </span><span class="sxs-lookup"><span data-stu-id="fd404-757">To use this functionality, your application should target the [!INCLUDE[net_v35_long](~/includes/net-v35-long-md.md)] or later.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="fd404-758"><paramref name="type" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-758"><paramref name="type" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-759">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-759">-or-</span></span> 
 <span data-ttu-id="fd404-760"><paramref name="target" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-760"><paramref name="target" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-761">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-761">-or-</span></span> 
 <span data-ttu-id="fd404-762"><paramref name="method" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-762"><paramref name="method" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-763"><paramref name="type" /> erbt nicht <see cref="T:System.MulticastDelegate" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-763"><paramref name="type" /> does not inherit <see cref="T:System.MulticastDelegate" />.</span></span>  
  
<span data-ttu-id="fd404-764">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-764">-or-</span></span> 
 <span data-ttu-id="fd404-765"><paramref name="type" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-765"><paramref name="type" /> is not a <see langword="RuntimeType" />.</span></span> <span data-ttu-id="fd404-766">Siehe [Laufzeittypen in Reflektion](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span><span class="sxs-lookup"><span data-stu-id="fd404-766">See [Runtime Types in Reflection](https://msdn.microsoft.com/library/c1439fb5-cf76-475d-a9d2-fe64ba858858).</span></span>  
  
<span data-ttu-id="fd404-767">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-767">-or-</span></span> 
 <span data-ttu-id="fd404-768"><paramref name="target" /> ist keine <see langword="RuntimeType" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-768"><paramref name="target" /> is not a <see langword="RuntimeType" />.</span></span>  
  
<span data-ttu-id="fd404-769">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-769">-or-</span></span> 
 <span data-ttu-id="fd404-770"><paramref name="target" /> ist ein offener generischer Typ.</span><span class="sxs-lookup"><span data-stu-id="fd404-770"><paramref name="target" /> is an open generic type.</span></span> <span data-ttu-id="fd404-771">Das bedeutet, die <see cref="P:System.Type.ContainsGenericParameters" />-Eigenschaft ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-771">That is, its <see cref="P:System.Type.ContainsGenericParameters" /> property is <see langword="true" />.</span></span>  
  
<span data-ttu-id="fd404-772">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-772">-or-</span></span> 
 <span data-ttu-id="fd404-773"><paramref name="method" /> ist keine <see langword="static" />-Methode (<see langword="Shared" />-Methode in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="fd404-773"><paramref name="method" /> is not a <see langword="static" /> method (<see langword="Shared" /> method in Visual Basic).</span></span>  
  
<span data-ttu-id="fd404-774">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-774">-or-</span></span> 
 <span data-ttu-id="fd404-775"><paramref name="method" /> kann nicht gebunden werden, z. B. weil sie nicht gefunden wurde, und <paramref name="throwOnBindFailure" /> ist gleich <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-775"><paramref name="method" /> cannot be bound, for example because it cannot be found, and <paramref name="throwOnBindFailure" /> is <see langword="true" />.</span></span></exception>
        <exception cref="T:System.MissingMethodException"><span data-ttu-id="fd404-776">Die <see langword="Invoke" />-Methode von <paramref name="type" /> wurde nicht gefunden.</span><span class="sxs-lookup"><span data-stu-id="fd404-776">The <see langword="Invoke" /> method of <paramref name="type" /> is not found.</span></span></exception>
        <exception cref="T:System.MethodAccessException"><span data-ttu-id="fd404-777">Der Aufrufer verfügt nicht über die erforderlichen Berechtigungen für den Zugriff auf <paramref name="method" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-777">The caller does not have the permissions necessary to access <paramref name="method" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-778">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-778">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-779">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-779">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" />.</span></span></permission>
        <altmember cref="T:System.Type" />
        <altmember cref="T:System.MulticastDelegate" />
        <altmember cref="T:System.Security.Permissions.ReflectionPermission" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="DynamicInvoke">
      <MemberSignature Language="C#" Value="public object DynamicInvoke (params object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object DynamicInvoke(object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.DynamicInvoke(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Function DynamicInvoke (ParamArray args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ DynamicInvoke(... cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="member this.DynamicInvoke : obj[] -&gt; obj" Usage="delegate.DynamicInvoke args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="fd404-780">Ein Array von Objekten, das die Argumente darstellt, die der durch den aktuellen Delegaten dargestellten Methode übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-780">An array of objects that are the arguments to pass to the method represented by the current delegate.</span></span>  
  
<span data-ttu-id="fd404-781">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-781">-or-</span></span> 
 <span data-ttu-id="fd404-782"><see langword="null" />, wenn die durch den aktuellen Delegaten dargestellte Methode keine Argumente erfordert.</span><span class="sxs-lookup"><span data-stu-id="fd404-782"><see langword="null" />, if the method represented by the current delegate does not require arguments.</span></span></param>
        <summary><span data-ttu-id="fd404-783">Ruft die durch den aktuellen Delegaten dargestellte Methode dynamisch (mit später Bindung) auf.</span><span class="sxs-lookup"><span data-stu-id="fd404-783">Dynamically invokes (late-bound) the method represented by the current delegate.</span></span></summary>
        <returns><span data-ttu-id="fd404-784">Das Objekt, das von der durch den Delegaten dargestellten Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-784">The object returned by the method represented by the delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-785">Diese Methode ruft die <xref:System.Delegate.DynamicInvokeImpl%2A>-Methode auf.</span><span class="sxs-lookup"><span data-stu-id="fd404-785">This method calls the <xref:System.Delegate.DynamicInvokeImpl%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="fd404-786">Der Aufrufer verfügt nicht über Zugriff auf die Methode, die durch den Delegaten dargestellt wird (wenn die Methode z.B. privat ist).</span><span class="sxs-lookup"><span data-stu-id="fd404-786">The caller does not have access to the method represented by the delegate (for example, if the method is private).</span></span>  
  
<span data-ttu-id="fd404-787">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-787">-or-</span></span> 
<span data-ttu-id="fd404-788">Anzahl, Reihenfolge oder Typ der in <paramref name="args" /> aufgeführten Parameter ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="fd404-788">The number, order, or type of parameters listed in <paramref name="args" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-789">Die durch den Delegaten dargestellte Methode wird für ein Objekt oder eine Klasse aufgerufen, die die Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="fd404-789">The method represented by the delegate is invoked on an object or a class that does not support it.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="fd404-790">Die durch den Delegaten dargestellte Methode ist eine Instanzenmethode, und das Zielobjekt ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-790">The method represented by the delegate is an instance method and the target object is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-791">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-791">-or-</span></span> 
<span data-ttu-id="fd404-792">Eine der gekapselten Methoden löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="fd404-792">One of the encapsulated methods throws an exception.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-793">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-793">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-794">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-794">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Delegate.DynamicInvokeImpl(System.Object[])" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="DynamicInvokeImpl">
      <MemberSignature Language="C#" Value="protected virtual object DynamicInvokeImpl (object[] args);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object DynamicInvokeImpl(object[] args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.DynamicInvokeImpl(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function DynamicInvokeImpl (args As Object()) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ DynamicInvokeImpl(cli::array &lt;System::Object ^&gt; ^ args);" />
      <MemberSignature Language="F#" Value="abstract member DynamicInvokeImpl : obj[] -&gt; obj&#xA;override this.DynamicInvokeImpl : obj[] -&gt; obj" Usage="delegate.DynamicInvokeImpl args" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="args"><span data-ttu-id="fd404-795">Ein Array von Objekten, das die Argumente darstellt, die der durch den aktuellen Delegaten dargestellten Methode übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-795">An array of objects that are the arguments to pass to the method represented by the current delegate.</span></span>  
  
<span data-ttu-id="fd404-796">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-796">-or-</span></span> 
 <span data-ttu-id="fd404-797"><see langword="null" />, wenn die durch den aktuellen Delegaten dargestellte Methode keine Argumente erfordert.</span><span class="sxs-lookup"><span data-stu-id="fd404-797"><see langword="null" />, if the method represented by the current delegate does not require arguments.</span></span></param>
        <summary><span data-ttu-id="fd404-798">Ruft die durch den aktuellen Delegaten dargestellte Methode dynamisch (mit später Bindung) auf.</span><span class="sxs-lookup"><span data-stu-id="fd404-798">Dynamically invokes (late-bound) the method represented by the current delegate.</span></span></summary>
        <returns><span data-ttu-id="fd404-799">Das Objekt, das von der durch den Delegaten dargestellten Methode zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-799">The object returned by the method represented by the delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-800">Diese Methode implementiert die Methode <xref:System.Delegate.DynamicInvoke%2A> .</span><span class="sxs-lookup"><span data-stu-id="fd404-800">This method implements the <xref:System.Delegate.DynamicInvoke%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="fd404-801">Der Aufrufer verfügt nicht über Zugriff auf die Methode, die durch den Delegaten dargestellt wird (wenn die Methode z.B. privat ist).</span><span class="sxs-lookup"><span data-stu-id="fd404-801">The caller does not have access to the method represented by the delegate (for example, if the method is private).</span></span>  
  
<span data-ttu-id="fd404-802">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-802">-or-</span></span> 
<span data-ttu-id="fd404-803">Anzahl, Reihenfolge oder Typ der in <paramref name="args" /> aufgeführten Parameter ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="fd404-803">The number, order, or type of parameters listed in <paramref name="args" /> is invalid.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-804">Die durch den Delegaten dargestellte Methode wird für ein Objekt oder eine Klasse aufgerufen, die die Methode nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="fd404-804">The method represented by the delegate is invoked on an object or a class that does not support it.</span></span></exception>
        <exception cref="T:System.Reflection.TargetInvocationException"><span data-ttu-id="fd404-805">Die durch den Delegaten dargestellte Methode ist eine Instanzenmethode, und das Zielobjekt ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-805">The method represented by the delegate is an instance method and the target object is <see langword="null" />.</span></span>  
  
<span data-ttu-id="fd404-806">- oder - </span><span class="sxs-lookup"><span data-stu-id="fd404-806">-or-</span></span> 
<span data-ttu-id="fd404-807">Eine der gekapselten Methoden löst eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="fd404-807">One of the encapsulated methods throws an exception.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-808">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-808">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-809">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-809">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Delegate.DynamicInvoke(System.Object[])" />
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="delegate.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="fd404-810">Das Objekt, das mit dem aktuellen Delegaten verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-810">The object to compare with the current delegate.</span></span></param>
        <summary><span data-ttu-id="fd404-811">Bestimmt, ob das angegebene Objekt und der aktuelle Delegat vom gleichen Typ sind und die gleichen Ziele, Methoden und Aufruflisten besitzen.</span><span class="sxs-lookup"><span data-stu-id="fd404-811">Determines whether the specified object and the current delegate are of the same type and share the same targets, methods, and invocation list.</span></span></summary>
        <returns><span data-ttu-id="fd404-812"><see langword="true" />, wenn <paramref name="obj" /> und der aktuelle Delegat die gleichen Ziele, Methoden und Aufruflisten aufweisen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-812"><see langword="true" /> if <paramref name="obj" /> and the current delegate have the same targets, methods, and invocation list; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-813">Wenn die zwei Delegaten nicht vom gleichen Typ sind, sind sie nicht als gleich betrachtet.</span><span class="sxs-lookup"><span data-stu-id="fd404-813">If the two delegates are not of the same type, they are not considered equal.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd404-814">In .NET Framework, Version 1.0 und 1.1 wurden zwei Delegaten als gleich betrachtet, wenn ihre Ziele, Methoden und Aufruflisten gleich sind, selbst wenn die Delegaten mit unterschiedlichen Typen sind.</span><span class="sxs-lookup"><span data-stu-id="fd404-814">In the .NET Framework version 1.0 and 1.1, two delegates were considered equal if their targets, methods, and invocation list were equal, even if the delegates were of different types.</span></span>  
  
 <span data-ttu-id="fd404-815">Die Methoden und Ziele werden wie folgt auf Gleichheit verglichen:</span><span class="sxs-lookup"><span data-stu-id="fd404-815">The methods and targets are compared for equality as follows:</span></span>  
  
-   <span data-ttu-id="fd404-816">Wenn die beiden Methoden, die zu vergleichenden beide statisch sind und die gleiche Methode für die gleiche Klasse, die Methoden werden als gleich betrachtet, und die Ziele auch als gleich betrachtet werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-816">If the two methods being compared are both static and are the same method on the same class, the methods are considered equal and the targets are also considered equal.</span></span>  
  
-   <span data-ttu-id="fd404-817">Wenn die beiden Methoden, die zu vergleichenden Instanzmethoden sind und die gleiche Methode für das gleiche Objekt, die Methoden werden als gleich betrachtet, und die Ziele auch als gleich betrachtet werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-817">If the two methods being compared are instance methods and are the same method on the same object, the methods are considered equal and the targets are also considered equal.</span></span>  
  
-   <span data-ttu-id="fd404-818">Andernfalls Methoden gelten als nicht gleich sind und die Ziele sind auch nicht als gleich.</span><span class="sxs-lookup"><span data-stu-id="fd404-818">Otherwise, the methods are not considered to be equal and the targets are also not considered to be equal.</span></span>  
  
 <span data-ttu-id="fd404-819">Zwei Aufruflisten, als identisch betrachtet, nur, wenn sie die gleiche Reihenfolge aufweisen, und die entsprechenden Elemente aus den beiden Listen, die gleiche Methode und Ziel darstellen.</span><span class="sxs-lookup"><span data-stu-id="fd404-819">Two invocation lists are considered identical only if they have the same order and the corresponding elements from the two lists represent the same method and target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="fd404-820">Der Aufrufer verfügt nicht über Zugriff auf die Methode, die durch den Delegaten dargestellt wird (wenn die Methode z.B. privat ist).</span><span class="sxs-lookup"><span data-stu-id="fd404-820">The caller does not have access to the method represented by the delegate (for example, if the method is private).</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-821">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-821">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-822">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-822">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="T:System.Object" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="delegate.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd404-823">Gibt einen Hashcode für den Delegaten zurück.</span><span class="sxs-lookup"><span data-stu-id="fd404-823">Returns a hash code for the delegate.</span></span></summary>
        <returns><span data-ttu-id="fd404-824">Ein Hashcode für den Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-824">A hash code for the delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-825">Der Rückgabewert dieser Methode darf nicht zwei Gründen beibehalten werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-825">The return value of this method must not be persisted for two reasons.</span></span> <span data-ttu-id="fd404-826">Zunächst kann die Hash-Funktion, einer Klasse geändert werden, zur besseren Verteilung, Rendern alle Werte aus der alten Hashfunktion nutzlos.</span><span class="sxs-lookup"><span data-stu-id="fd404-826">First, the hash function of a class might be altered to generate a better distribution, rendering any values from the old hash function useless.</span></span> <span data-ttu-id="fd404-827">Andererseits unbedingt die Standardimplementierung dieser Klasse nicht der gleiche Wert von verschiedenen Instanzen zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-827">Second, the default implementation of this class does not guarantee that the same value will be returned by different instances.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-828">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-828">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-829">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-829">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Object.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="GetInvocationList">
      <MemberSignature Language="C#" Value="public virtual Delegate[] GetInvocationList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Delegate[] GetInvocationList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.GetInvocationList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetInvocationList () As Delegate()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual cli::array &lt;Delegate ^&gt; ^ GetInvocationList();" />
      <MemberSignature Language="F#" Value="abstract member GetInvocationList : unit -&gt; Delegate[]&#xA;override this.GetInvocationList : unit -&gt; Delegate[]" Usage="delegate.GetInvocationList " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd404-830">Gibt die Aufrufliste des Delegaten zurück.</span><span class="sxs-lookup"><span data-stu-id="fd404-830">Returns the invocation list of the delegate.</span></span></summary>
        <returns><span data-ttu-id="fd404-831">Ein Array von Delegaten, das die Aufrufliste des aktuellen Delegaten darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-831">An array of delegates representing the invocation list of the current delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-832">Jeder Delegat im Array stellt genau eine Methode dar.</span><span class="sxs-lookup"><span data-stu-id="fd404-832">Each delegate in the array represents exactly one method.</span></span>  
  
 <span data-ttu-id="fd404-833">Die Reihenfolge der Delegaten im Array ist der gleichen Reihenfolge, in der der aktuelle Delegat die Methoden aufruft, die diesen Delegaten darstellen.</span><span class="sxs-lookup"><span data-stu-id="fd404-833">The order of the delegates in the array is the same order in which the current delegate invokes the methods that those delegates represent.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fd404-834">Das folgende Beispiel weist drei Methoden auf einen Delegaten an.</span><span class="sxs-lookup"><span data-stu-id="fd404-834">The following example assigns three methods to a delegate.</span></span> <span data-ttu-id="fd404-835">Es ruft dann die <xref:System.Delegate.GetInvocationList%2A> -Methode zum Abrufen die Gesamtzahl der die Methoden, die an den Delegaten zugewiesen wird, um die Delegaten in umgekehrter Reihenfolge ausgeführt und führen Sie die Methoden, deren Namen enthalten nicht die Teilzeichenfolge "File".</span><span class="sxs-lookup"><span data-stu-id="fd404-835">It then calls the  <xref:System.Delegate.GetInvocationList%2A> method to get a total count of the methods assigned to the delegate, to execute the delegates in reverse order, and to execute the methods whose name do not include the substring "File".</span></span>  
  
 [!code-csharp[System.Delegate.GetInvocationList#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.Delegate.GetInvocationList/cs/GetInvocationList1.cs#1)]
 [!code-vb[System.Delegate.GetInvocationList#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.Delegate.GetInvocationList/vb/GetInvocationList1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-836">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-836">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-837">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-837">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="GetMethodImpl">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo GetMethodImpl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo GetMethodImpl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.GetMethodImpl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetMethodImpl () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ GetMethodImpl();" />
      <MemberSignature Language="F#" Value="abstract member GetMethodImpl : unit -&gt; System.Reflection.MethodInfo&#xA;override this.GetMethodImpl : unit -&gt; System.Reflection.MethodInfo" Usage="delegate.GetMethodImpl " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fd404-838">Ruft die statische Methode ab, die durch den aktuellen Delegaten dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-838">Gets the static method represented by the current delegate.</span></span></summary>
        <returns><span data-ttu-id="fd404-839">Eine <see cref="T:System.Reflection.MethodInfo" />, die die durch den aktuellen Delegaten dargestellte statische Methode beschreibt.</span><span class="sxs-lookup"><span data-stu-id="fd404-839">A <see cref="T:System.Reflection.MethodInfo" /> describing the static method represented by the current delegate.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-840">Diese Methode gilt nur, wenn der aktuelle Delegat eine statische Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-840">This method applies only if the current delegate represents a static method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="fd404-841">Der Aufrufer verfügt nicht über Zugriff auf die Methode, die durch den Delegaten dargestellt wird (wenn die Methode z.B. privat ist).</span><span class="sxs-lookup"><span data-stu-id="fd404-841">The caller does not have access to the method represented by the delegate (for example, if the method is private).</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-842">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-842">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-843">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-843">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="P:System.Delegate.Method" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit&#xA;override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="delegate.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="fd404-844">Wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="fd404-844">Not supported.</span></span></param>
        <param name="context"><span data-ttu-id="fd404-845">Wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="fd404-845">Not supported.</span></span></param>
        <summary><span data-ttu-id="fd404-846">Wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="fd404-846">Not supported.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="fd404-847">Diese Methode wird nicht unterstützt.</span><span class="sxs-lookup"><span data-stu-id="fd404-847">This method is not supported.</span></span></exception>
        <permission cref="T:System.Security.SecurityCriticalAttribute"><span data-ttu-id="fd404-848">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="fd404-848">Requires full trust for the immediate caller.</span></span> <span data-ttu-id="fd404-849">Dieser Member kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-849">This member cannot be used by partially trusted or transparent code.</span></span></permission>
        <altmember cref="T:System.Runtime.Serialization.ISerializable" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo Method { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo Method" />
      <MemberSignature Language="DocId" Value="P:System.Delegate.Method" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Method As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ Method { System::Reflection::MethodInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Method : System.Reflection.MethodInfo" Usage="System.Delegate.Method" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd404-850">Ruft die Methode ab, die durch den Delegaten dargestellt wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-850">Gets the method represented by the delegate.</span></span></summary>
        <value><span data-ttu-id="fd404-851">Eine <see cref="T:System.Reflection.MethodInfo" />, die die durch den Delegaten dargestellte Methode beschreibt.</span><span class="sxs-lookup"><span data-stu-id="fd404-851">A <see cref="T:System.Reflection.MethodInfo" /> describing the method represented by the delegate.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="fd404-852">Der Aufrufer verfügt nicht über Zugriff auf die Methode, die durch den Delegaten dargestellt wird (wenn die Methode z.B. privat ist).</span><span class="sxs-lookup"><span data-stu-id="fd404-852">The caller does not have access to the method represented by the delegate (for example, if the method is private).</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-853">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-853">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-854">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-854">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="T:System.Reflection.MethodInfo" />
        <altmember cref="M:System.Delegate.GetMethodImpl" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (Delegate d1, Delegate d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Delegate d1, class System.Delegate d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.op_Equality(System.Delegate,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (d1 As Delegate, d2 As Delegate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(Delegate ^ d1, Delegate ^ d2);" />
      <MemberSignature Language="F#" Value="static member ( = ) : Delegate * Delegate -&gt; bool" Usage="d1 = d2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Delegate" />
        <Parameter Name="d2" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="fd404-855">Der erste der zu vergleichenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-855">The first delegate to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="fd404-856">Der zweite der zu vergleichenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-856">The second delegate to compare.</span></span></param>
        <summary><span data-ttu-id="fd404-857">Bestimmt, ob die angegebenen Delegaten gleich sind.</span><span class="sxs-lookup"><span data-stu-id="fd404-857">Determines whether the specified delegates are equal.</span></span></summary>
        <returns><span data-ttu-id="fd404-858"><see langword="true" />, wenn <paramref name="d1" /> und <paramref name="d2" /> gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-858"><see langword="true" /> if <paramref name="d1" /> is equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-859">Zwei Delegaten vom gleichen Typ mit dem gleichen Ziele, Methoden und Aufruflisten enthält, werden als gleich betrachtet werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-859">Two delegates of the same type with the same targets, methods, and invocation lists are considered equal.</span></span>  
  
 <span data-ttu-id="fd404-860">Wenn die zwei Delegaten nicht vom gleichen Typ sind, sind sie nicht als gleich betrachtet.</span><span class="sxs-lookup"><span data-stu-id="fd404-860">If the two delegates are not of the same type, they are not considered equal.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd404-861">In .NET Framework, Version 1.0 und 1.1 wurden zwei Delegaten als gleich betrachtet, wenn ihre Ziele, Methoden und Aufruflisten gleich sind, selbst wenn die Delegaten mit unterschiedlichen Typen sind.</span><span class="sxs-lookup"><span data-stu-id="fd404-861">In the .NET Framework version 1.0 and 1.1, two delegates were considered equal if their targets, methods, and invocation list were equal, even if the delegates were of different types.</span></span>  
  
 <span data-ttu-id="fd404-862">Die Methoden und Ziele werden wie folgt auf Gleichheit verglichen:</span><span class="sxs-lookup"><span data-stu-id="fd404-862">The methods and targets are compared for equality as follows:</span></span>  
  
-   <span data-ttu-id="fd404-863">Wenn die beiden Methoden, die zu vergleichenden beide statisch sind und die gleiche Methode für die gleiche Klasse, die Methoden werden als gleich betrachtet, und die Ziele auch als gleich betrachtet werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-863">If the two methods being compared are both static and are the same method on the same class, the methods are considered equal and the targets are also considered equal.</span></span>  
  
-   <span data-ttu-id="fd404-864">Wenn die beiden Methoden, die zu vergleichenden Instanzmethoden sind und die gleiche Methode für das gleiche Objekt, die Methoden werden als gleich betrachtet, und die Ziele auch als gleich betrachtet werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-864">If the two methods being compared are instance methods and are the same method on the same object, the methods are considered equal and the targets are also considered equal.</span></span>  
  
-   <span data-ttu-id="fd404-865">Andernfalls Methoden gelten als nicht gleich sind und die Ziele sind auch nicht als gleich.</span><span class="sxs-lookup"><span data-stu-id="fd404-865">Otherwise, the methods are not considered to be equal and the targets are also not considered to be equal.</span></span>  
  
 <span data-ttu-id="fd404-866">Zwei Aufruflisten, als identisch betrachtet, wenn sie die gleiche Reihenfolge aufweisen, und die entsprechenden Elemente aus den beiden Listen, die gleiche Methode und Ziel darstellen.</span><span class="sxs-lookup"><span data-stu-id="fd404-866">Two invocation lists are considered identical if they have the same order and the corresponding elements from the two lists represent the same method and target.</span></span>  
  
 <span data-ttu-id="fd404-867">Die entsprechende Methode für diesen Operator ist <xref:System.Delegate.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="fd404-867">The equivalent method for this operator is <xref:System.Delegate.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-868">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-868">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-869">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-869">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Delegate.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (Delegate d1, Delegate d2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Delegate d1, class System.Delegate d2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.op_Inequality(System.Delegate,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (d1 As Delegate, d2 As Delegate) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(Delegate ^ d1, Delegate ^ d2);" />
      <MemberSignature Language="F#" Value="static member op_Inequality : Delegate * Delegate -&gt; bool" Usage="System.Delegate.op_Inequality (d1, d2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d1" Type="System.Delegate" />
        <Parameter Name="d2" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="d1"><span data-ttu-id="fd404-870">Der erste der zu vergleichenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-870">The first delegate to compare.</span></span></param>
        <param name="d2"><span data-ttu-id="fd404-871">Der zweite der zu vergleichenden Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-871">The second delegate to compare.</span></span></param>
        <summary><span data-ttu-id="fd404-872">Bestimmt, ob die angegebenen Delegaten ungleich sind.</span><span class="sxs-lookup"><span data-stu-id="fd404-872">Determines whether the specified delegates are not equal.</span></span></summary>
        <returns><span data-ttu-id="fd404-873"><see langword="true" />, wenn <paramref name="d1" /> und <paramref name="d2" /> ungleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-873"><see langword="true" /> if <paramref name="d1" /> is not equal to <paramref name="d2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-874">Zwei Delegaten werden nicht als gleich betrachtet, wenn sie unterschiedliche Typen oder verschiedene Methoden, die verschiedene Ziele oder die Aufruflisten besitzen.</span><span class="sxs-lookup"><span data-stu-id="fd404-874">Two delegates are considered not equal if they are of different types, or have different methods, different targets, or different invocation lists.</span></span>  
  
 <span data-ttu-id="fd404-875">Wenn die zwei Delegaten nicht vom gleichen Typ sind, sind sie nicht als gleich betrachtet.</span><span class="sxs-lookup"><span data-stu-id="fd404-875">If the two delegates are not of the same type, they are not considered equal.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fd404-876">In .NET Framework, Version 1.0 und 1.1 sind zwei Delegaten als gleich betrachtet, wenn ihre Ziele, Methoden und Aufruflisten gleich sind, selbst wenn die Delegaten mit unterschiedlichen Typen sind.</span><span class="sxs-lookup"><span data-stu-id="fd404-876">In the .NET Framework version 1.0 and 1.1, two delegates are considered equal if their targets, methods, and invocation list were equal, even if the delegates were of different types.</span></span>  
  
 <span data-ttu-id="fd404-877">Die Methoden und Ziele werden wie folgt auf Gleichheit verglichen:</span><span class="sxs-lookup"><span data-stu-id="fd404-877">The methods and targets are compared for equality as follows:</span></span>  
  
-   <span data-ttu-id="fd404-878">Wenn die beiden Methoden, die zu vergleichenden beide statisch sind und die gleiche Methode für die gleiche Klasse, die Methoden werden als gleich betrachtet, und die Ziele auch als gleich betrachtet werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-878">If the two methods being compared are both static and are the same method on the same class, the methods are considered equal and the targets are also considered equal.</span></span>  
  
-   <span data-ttu-id="fd404-879">Wenn die beiden Methoden, die zu vergleichenden Instanzmethoden sind und die gleiche Methode für das gleiche Objekt, die Methoden werden als gleich betrachtet, und die Ziele auch als gleich betrachtet werden.</span><span class="sxs-lookup"><span data-stu-id="fd404-879">If the two methods being compared are instance methods and are the same method on the same object, the methods are considered equal and the targets are also considered equal.</span></span>  
  
-   <span data-ttu-id="fd404-880">Andernfalls Methoden gelten als nicht gleich sind und die Ziele sind auch nicht als gleich.</span><span class="sxs-lookup"><span data-stu-id="fd404-880">Otherwise, the methods are not considered to be equal and the targets are also not considered to be equal.</span></span>  
  
 <span data-ttu-id="fd404-881">Zwei Aufruflisten sind nicht gleich, wenn sie unterschiedliche Größen haben, verfügen, wenn sie anders angeordnet sind oder über mindestens ein Element aus einer Liste darstellt, eine Methode oder ein Ziel, das sich durch das entsprechende Element in der anderen Liste dargestellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-881">Two invocation lists are not equal if they have different sizes, if they are ordered differently, or if at least one element from one list represents a method or target that is different from that represented by its corresponding element in the other list.</span></span>  
  
 <span data-ttu-id="fd404-882">Die entsprechende Methode für diesen Operator ist <xref:System.Delegate.Equals%28System.Object%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="fd404-882">The equivalent method for this operator is <xref:System.Delegate.Equals%28System.Object%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-883">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-883">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-884">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-884">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Delegate.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public static Delegate Remove (Delegate source, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate Remove(class System.Delegate source, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.Remove(System.Delegate,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Remove (source As Delegate, value As Delegate) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ Remove(Delegate ^ source, Delegate ^ value);" />
      <MemberSignature Language="F#" Value="static member Remove : Delegate * Delegate -&gt; Delegate" Usage="System.Delegate.Remove (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Delegate" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="fd404-885">Der Delegat, aus dem die Aufrufliste von <paramref name="value" /> entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-885">The delegate from which to remove the invocation list of <paramref name="value" />.</span></span></param>
        <param name="value"><span data-ttu-id="fd404-886">Der Delegat, von dem die Aufrufliste stammt, die aus der Aufrufliste von <paramref name="source" /> entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-886">The delegate that supplies the invocation list to remove from the invocation list of <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="fd404-887">Entfernt das letzte Vorkommen der Aufrufliste eines Delegaten aus der Aufrufliste eines anderen Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-887">Removes the last occurrence of the invocation list of a delegate from the invocation list of another delegate.</span></span></summary>
        <returns><span data-ttu-id="fd404-888">Ein neuer Delegat mit einer Aufrufliste, die aus der Aufrufliste von <paramref name="source" /> besteht, aus der das letzte Vorkommen der Aufrufliste von <paramref name="value" /> entfernt wurde, falls sich die Aufrufliste von <paramref name="value" /> in der Aufrufliste von <paramref name="source" /> befand.</span><span class="sxs-lookup"><span data-stu-id="fd404-888">A new delegate with an invocation list formed by taking the invocation list of <paramref name="source" /> and removing the last occurrence of the invocation list of <paramref name="value" />, if the invocation list of <paramref name="value" /> is found within the invocation list of <paramref name="source" />.</span></span> <span data-ttu-id="fd404-889">Gibt <paramref name="source" /> zurück, wenn <paramref name="value" /><see langword="null" /> ist oder die Aufrufliste von <paramref name="value" /> sich nicht innerhalb der Aufrufliste von <paramref name="source" /> befand.</span><span class="sxs-lookup"><span data-stu-id="fd404-889">Returns <paramref name="source" /> if <paramref name="value" /> is <see langword="null" /> or if the invocation list of <paramref name="value" /> is not found within the invocation list of <paramref name="source" />.</span></span> <span data-ttu-id="fd404-890">Gibt einen NULL-Verweis zurück, wenn die Aufrufliste von <paramref name="value" /> gleich der Aufrufliste von <paramref name="source" /> ist oder <paramref name="source" /> ein NULL-Verweis ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-890">Returns a null reference if the invocation list of <paramref name="value" /> is equal to the invocation list of <paramref name="source" /> or if <paramref name="source" /> is a null reference.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-891">Wenn die Aufrufliste von `value` entspricht einen zusammenhängenden Satz von Elementen in der Aufrufliste von `source`, klicken Sie dann die Aufrufliste von `value` hört sich innerhalb der Aufrufliste von `source`.</span><span class="sxs-lookup"><span data-stu-id="fd404-891">If the invocation list of `value` matches a contiguous set of elements in the invocation list of `source`, then the invocation list of `value` is said to occur within the invocation list of `source`.</span></span> <span data-ttu-id="fd404-892">Wenn die Aufrufliste von `value` tritt mehr als einmal in der Aufrufliste von `source`, das letzte Vorkommen entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-892">If the invocation list of `value` occurs more than once in the invocation list of `source`, the last occurrence is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="fd404-893">Der Aufrufer verfügt nicht über Zugriff auf die Methode, die durch den Delegaten dargestellt wird (wenn die Methode z.B. privat ist).</span><span class="sxs-lookup"><span data-stu-id="fd404-893">The caller does not have access to the method represented by the delegate (for example, if the method is private).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-894">Die Delegattypen stimmen nicht überein.</span><span class="sxs-lookup"><span data-stu-id="fd404-894">The delegate types do not match.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-895">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-895">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-896">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-896">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Delegate.RemoveAll(System.Delegate,System.Delegate)" />
        <altmember cref="M:System.Delegate.RemoveImpl(System.Delegate)" />
        <altmember cref="M:System.Delegate.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAll">
      <MemberSignature Language="C#" Value="public static Delegate RemoveAll (Delegate source, Delegate value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Delegate RemoveAll(class System.Delegate source, class System.Delegate value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.RemoveAll(System.Delegate,System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function RemoveAll (source As Delegate, value As Delegate) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Delegate ^ RemoveAll(Delegate ^ source, Delegate ^ value);" />
      <MemberSignature Language="F#" Value="static member RemoveAll : Delegate * Delegate -&gt; Delegate" Usage="System.Delegate.RemoveAll (source, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Delegate" />
        <Parameter Name="value" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="fd404-897">Der Delegat, aus dem die Aufrufliste von <paramref name="value" /> entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-897">The delegate from which to remove the invocation list of <paramref name="value" />.</span></span></param>
        <param name="value"><span data-ttu-id="fd404-898">Der Delegat, von dem die Aufrufliste stammt, die aus der Aufrufliste von <paramref name="source" /> entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-898">The delegate that supplies the invocation list to remove from the invocation list of <paramref name="source" />.</span></span></param>
        <summary><span data-ttu-id="fd404-899">Entfernt alle Vorkommen der Aufrufliste eines Delegaten aus der Aufrufliste eines anderen Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-899">Removes all occurrences of the invocation list of a delegate from the invocation list of another delegate.</span></span></summary>
        <returns><span data-ttu-id="fd404-900">Ein neuer Delegat mit einer Aufrufliste, die aus der Aufrufliste von <paramref name="source" /> besteht, aus der alle Vorkommen der Aufrufliste von <paramref name="value" /> entfernt wurden, falls sich die Aufrufliste von <paramref name="value" /> in der Aufrufliste von <paramref name="source" /> befand.</span><span class="sxs-lookup"><span data-stu-id="fd404-900">A new delegate with an invocation list formed by taking the invocation list of <paramref name="source" /> and removing all occurrences of the invocation list of <paramref name="value" />, if the invocation list of <paramref name="value" /> is found within the invocation list of <paramref name="source" />.</span></span> <span data-ttu-id="fd404-901">Gibt <paramref name="source" /> zurück, wenn <paramref name="value" /><see langword="null" /> ist oder die Aufrufliste von <paramref name="value" /> sich nicht innerhalb der Aufrufliste von <paramref name="source" /> befand.</span><span class="sxs-lookup"><span data-stu-id="fd404-901">Returns <paramref name="source" /> if <paramref name="value" /> is <see langword="null" /> or if the invocation list of <paramref name="value" /> is not found within the invocation list of <paramref name="source" />.</span></span> <span data-ttu-id="fd404-902">Gibt einen NULL-Verweis zurück, wenn die Aufrufliste von <paramref name="value" /> gleich der Aufrufliste von <paramref name="source" /> ist, wenn <paramref name="source" /> nur eine Reihe von Aufruflisten enthält, die gleich der Aufrufliste von <paramref name="value" /> sind, oder <paramref name="source" /> ein NULL-Verweis ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-902">Returns a null reference if the invocation list of <paramref name="value" /> is equal to the invocation list of <paramref name="source" />, if <paramref name="source" /> contains only a series of invocation lists that are equal to the invocation list of <paramref name="value" />, or if <paramref name="source" /> is a null reference.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-903">Wenn die Aufrufliste von `value` entspricht einen zusammenhängenden Satz von Elementen in der Aufrufliste von `source`, klicken Sie dann die Aufrufliste von `value` hört sich innerhalb der Aufrufliste von `source`.</span><span class="sxs-lookup"><span data-stu-id="fd404-903">If the invocation list of `value` matches a contiguous set of elements in the invocation list of `source`, then the invocation list of `value` is said to occur within the invocation list of `source`.</span></span> <span data-ttu-id="fd404-904">Wenn die Aufrufliste von `value` tritt mehr als einmal in der Aufrufliste von `source`, alle Vorkommen werden entfernt.</span><span class="sxs-lookup"><span data-stu-id="fd404-904">If the invocation list of `value` occurs more than once in the invocation list of `source`, all occurrences are removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="fd404-905">Der Aufrufer verfügt nicht über Zugriff auf die Methode, die durch den Delegaten dargestellt wird (wenn die Methode z.B. privat ist).</span><span class="sxs-lookup"><span data-stu-id="fd404-905">The caller does not have access to the method represented by the delegate (for example, if the method is private).</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="fd404-906">Die Delegattypen stimmen nicht überein.</span><span class="sxs-lookup"><span data-stu-id="fd404-906">The delegate types do not match.</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-907">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-907">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-908">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-908">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Delegate.Remove(System.Delegate,System.Delegate)" />
        <altmember cref="M:System.Delegate.RemoveImpl(System.Delegate)" />
        <altmember cref="M:System.Delegate.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveImpl">
      <MemberSignature Language="C#" Value="protected virtual Delegate RemoveImpl (Delegate d);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Delegate RemoveImpl(class System.Delegate d) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Delegate.RemoveImpl(System.Delegate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function RemoveImpl (d As Delegate) As Delegate" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Delegate ^ RemoveImpl(Delegate ^ d);" />
      <MemberSignature Language="F#" Value="abstract member RemoveImpl : Delegate -&gt; Delegate&#xA;override this.RemoveImpl : Delegate -&gt; Delegate" Usage="delegate.RemoveImpl d" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Delegate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="d" Type="System.Delegate" />
      </Parameters>
      <Docs>
        <param name="d"><span data-ttu-id="fd404-909">Der Delegat, von dem die Aufrufliste stammt, die aus der Aufrufliste des aktuellen Delegaten entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="fd404-909">The delegate that supplies the invocation list to remove from the invocation list of the current delegate.</span></span></param>
        <summary><span data-ttu-id="fd404-910">Entfernt die Aufrufliste eines Delegaten aus der Aufrufliste eines anderen Delegaten.</span><span class="sxs-lookup"><span data-stu-id="fd404-910">Removes the invocation list of a delegate from the invocation list of another delegate.</span></span></summary>
        <returns><span data-ttu-id="fd404-911">Ein neuer Delegat mit einer Aufrufliste, die aus der Aufrufliste des aktuellen Delegaten besteht, aus der die Aufrufliste von <paramref name="value" /> entfernt wurde, falls sich die Aufrufliste von <paramref name="value" /> in der Aufrufliste des aktuellen Delegaten befand.</span><span class="sxs-lookup"><span data-stu-id="fd404-911">A new delegate with an invocation list formed by taking the invocation list of the current delegate and removing the invocation list of <paramref name="value" />, if the invocation list of <paramref name="value" /> is found within the current delegate's invocation list.</span></span> <span data-ttu-id="fd404-912">Gibt den aktuellen Delegaten zurück, wenn <paramref name="value" /><see langword="null" /> ist oder wenn die Aufrufliste von <paramref name="value" /> nicht innerhalb der Aufrufliste des aktuellen Delegaten gefunden wurde.</span><span class="sxs-lookup"><span data-stu-id="fd404-912">Returns the current delegate if <paramref name="value" /> is <see langword="null" /> or if the invocation list of <paramref name="value" /> is not found within the current delegate's invocation list.</span></span> <span data-ttu-id="fd404-913">Gibt <see langword="null" /> zurück, wenn die Aufrufliste von <paramref name="value" /> gleich der Aufrufliste des aktuellen Delegaten ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-913">Returns <see langword="null" /> if the invocation list of <paramref name="value" /> is equal to the current delegate's invocation list.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-914">Wenn die Aufrufliste von `value` entspricht einen zusammenhängenden Satz von Elementen in der Aufrufliste des aktuellen Delegaten, und klicken Sie dann auf die Aufrufliste von `value` gilt als in der Aufrufliste des aktuellen Delegaten auftreten.</span><span class="sxs-lookup"><span data-stu-id="fd404-914">If the invocation list of `value` matches a contiguous set of elements in the current delegate's invocation list, then the invocation list of `value` is said to occur within the current delegate's invocation list.</span></span> <span data-ttu-id="fd404-915">Wenn die Aufrufliste von `value` tritt auf, mehr als einmal in der Aufrufliste des aktuellen Delegaten, das letzte Vorkommen entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="fd404-915">If the invocation list of `value` occurs more than once in the current delegate's invocation list, the last occurrence is removed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.MemberAccessException"><span data-ttu-id="fd404-916">Der Aufrufer verfügt nicht über Zugriff auf die Methode, die durch den Delegaten dargestellt wird (wenn die Methode z.B. privat ist).</span><span class="sxs-lookup"><span data-stu-id="fd404-916">The caller does not have access to the method represented by the delegate (for example, if the method is private).</span></span></exception>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-917">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-917">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-918">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-918">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
        <altmember cref="M:System.Delegate.Remove(System.Delegate,System.Delegate)" />
        <altmember cref="M:System.Delegate.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public object Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Target" />
      <MemberSignature Language="DocId" Value="P:System.Delegate.Target" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Target As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Target { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Target : obj" Usage="System.Delegate.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fd404-919">Ruft die Klasseninstanz ab, für die der aktuelle Delegat die Instanzenmethode aufruft.</span><span class="sxs-lookup"><span data-stu-id="fd404-919">Gets the class instance on which the current delegate invokes the instance method.</span></span></summary>
        <value><span data-ttu-id="fd404-920">Das Objekt, für das der aktuelle Delegat die Instanzmethode aufruft, wenn der Delegat eine Instanzmethode darstellt, <see langword="null" />, wenn der Delegat eine statische Methode darstellt.</span><span class="sxs-lookup"><span data-stu-id="fd404-920">The object on which the current delegate invokes the instance method, if the delegate represents an instance method; <see langword="null" /> if the delegate represents a static method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fd404-921">Eine Instanzmethode handelt es sich um eine Methode, die eine Instanz einer Klasse zugeordnet ist; eine statische Methode handelt es sich um eine Methode, die die Klasse selbst zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="fd404-921">An instance method is a method that is associated with an instance of a class; a static method is a method that is associated with the class itself.</span></span>  
  
 <span data-ttu-id="fd404-922">Wenn der Delegat eine oder mehrere Instanzmethoden aufgerufen wird, gibt diese Eigenschaft das Ziel der letzten Instanzenmethode in der Aufrufliste an.</span><span class="sxs-lookup"><span data-stu-id="fd404-922">If the delegate invokes one or more instance methods, this property returns the target of the last instance method in the invocation list.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.ReflectionPermission"><span data-ttu-id="fd404-923">Beim Aufruf spät gebundene durch Mechanismen wie z. B. <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span><span class="sxs-lookup"><span data-stu-id="fd404-923">when invoked late-bound through mechanisms such as <see cref="M:System.Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])" />.</span></span> <span data-ttu-id="fd404-924">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span><span class="sxs-lookup"><span data-stu-id="fd404-924">Associated enumeration: <see cref="F:System.Security.Permissions.ReflectionPermissionFlag.MemberAccess" /></span></span></permission>
      </Docs>
    </Member>
  </Members>
</Type>