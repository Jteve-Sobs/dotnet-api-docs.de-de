<Type Name="ButtonBase" FullName="System.Windows.Controls.Primitives.ButtonBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b70290dfe3bbfc5e429893a9d3aa4cb9d6c756fe" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78836507" /></Metadata><TypeSignature Language="C#" Value="public abstract class ButtonBase : System.Windows.Controls.ContentControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ButtonBase extends System.Windows.Controls.ContentControl implements class System.Windows.Input.ICommandSource" FrameworkAlternate="netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ButtonBase&#xA;Inherits ContentControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonBase abstract : System::Windows::Controls::ContentControl, System::Windows::Input::ICommandSource" />
  <TypeSignature Language="F#" Value="type ButtonBase = class&#xA;    inherit ContentControl&#xA;    interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ButtonBase extends System.Windows.Controls.ContentControl implements class System.Windows.Input.ICommandSource" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Button)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="79d76-101">Stellt die Basisklasse für alle <see cref="T:System.Windows.Controls.Button" />-Steuerelemente dar.</span><span class="sxs-lookup"><span data-stu-id="79d76-101">Represents the base class for all <see cref="T:System.Windows.Controls.Button" /> controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-102">Behandeln Sie das <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis, um zu reagieren, wenn der Benutzer auf einen <xref:System.Windows.Controls.Primitives.ButtonBase>klickt.</span><span class="sxs-lookup"><span data-stu-id="79d76-102">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event to respond when the user clicks a <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="79d76-103">Der Benutzer kann das <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis mithilfe einer <xref:System.Windows.Controls.AccessText> oder durch Drücken der EINGABETASTE oder der Leertaste, wenn das Steuerelement den Fokus besitzt, erhöhen.</span><span class="sxs-lookup"><span data-stu-id="79d76-103">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="79d76-104">Wenn der Benutzer die LEERTASTE drückt, legt das Steuerelement <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> auf `true` fest und erfasst die Maus.</span><span class="sxs-lookup"><span data-stu-id="79d76-104">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="79d76-105">Folglich gibt das Steuerelement Mausereignisse aus, z. b. <xref:System.Windows.UIElement.MouseEnter> und <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="79d76-105">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="79d76-106">Beachten Sie, dass die Verwendung des <xref:System.Windows.Controls.AccessText> oder der Eingabe nicht geändert wird <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> oder die Maus erfasst, aber das <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis erhöht.</span><span class="sxs-lookup"><span data-stu-id="79d76-106">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="79d76-107">Der <xref:System.Windows.Controls.Primitives.ButtonBase> legt die <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> angefügte-Eigenschaft auf `true`fest.</span><span class="sxs-lookup"><span data-stu-id="79d76-107">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> attached property to `true`.</span></span>  
  
 <span data-ttu-id="79d76-108">Der <xref:System.Windows.Controls.Primitives.ButtonBase> legt die <xref:System.Windows.UIElement.IsInputMethodEnabled%2A>-Eigenschaft auf `false` fest.</span><span class="sxs-lookup"><span data-stu-id="79d76-108">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="79d76-109">Ein <xref:System.Windows.Controls.Primitives.ButtonBase> ist ein <xref:System.Windows.Controls.ContentControl>. Dies bedeutet, dass es ein einzelnes Objekt eines beliebigen Typs (z. b. eine Zeichenfolge, ein Bild oder ein Panel) enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="79d76-109">A <xref:System.Windows.Controls.Primitives.ButtonBase> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="79d76-110">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Windows.Controls.ContentControl>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="79d76-110">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ButtonBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d76-111">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.Primitives.ButtonBase" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="79d76-111">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.ButtonBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberSignature Language="F#" Value="member this.Click : System.Windows.RoutedEventHandler " Usage="member this.Click : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-112">Tritt ein, wenn auf ein <see cref="T:System.Windows.Controls.Button" /> geklickt wird.</span><span class="sxs-lookup"><span data-stu-id="79d76-112">Occurs when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-113">Der Benutzer kann das <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis mithilfe einer <xref:System.Windows.Controls.AccessText> oder durch Drücken der EINGABETASTE oder der Leertaste, wenn das Steuerelement den Fokus besitzt, erhöhen.</span><span class="sxs-lookup"><span data-stu-id="79d76-113">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="79d76-114">Wenn der Benutzer die LEERTASTE drückt, legt das Steuerelement <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> auf `true` fest und erfasst die Maus.</span><span class="sxs-lookup"><span data-stu-id="79d76-114">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="79d76-115">Folglich gibt das Steuerelement Mausereignisse aus, z. b. <xref:System.Windows.UIElement.MouseEnter> und <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="79d76-115">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="79d76-116">Beachten Sie, dass die Verwendung des <xref:System.Windows.Controls.AccessText> oder der Eingabe nicht geändert wird <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> oder die Maus erfasst, aber das <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis erhöht.</span><span class="sxs-lookup"><span data-stu-id="79d76-116">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="79d76-117">Der <xref:System.Windows.Controls.Primitives.ButtonBase> markiert das <xref:System.Windows.UIElement.MouseLeftButtonDown> Ereignis als behandelt in der <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A>-Methode und löst das <xref:System.Windows.Controls.Primitives.ButtonBase.Click>-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="79d76-117">The <xref:System.Windows.Controls.Primitives.ButtonBase> marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled in the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span> <span data-ttu-id="79d76-118">Daher tritt das <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A>-Ereignis nie bei einem Steuerelement auf, das von <xref:System.Windows.Controls.Primitives.ButtonBase>erbt.</span><span class="sxs-lookup"><span data-stu-id="79d76-118">Hence, the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> event will never occur for a control that inherits from <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="79d76-119">Fügen Sie stattdessen einen Ereignishandler an das <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>-Ereignis an, oder nennen Sie <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29>, bei dem `handledEventsToo` auf `true`festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="79d76-119">Instead, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="79d76-120">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="79d76-120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="79d76-121">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="79d76-121">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent>|  
|<span data-ttu-id="79d76-122">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="79d76-122">Routing strategy</span></span>|<span data-ttu-id="79d76-123">Blasen</span><span class="sxs-lookup"><span data-stu-id="79d76-123">Bubbling</span></span>|  
|<span data-ttu-id="79d76-124">delegate</span><span class="sxs-lookup"><span data-stu-id="79d76-124">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="79d76-125">Das folgende Beispiel zeigt drei Schaltflächen, die auf drei verschiedene Arten auf Klicks Antworten.</span><span class="sxs-lookup"><span data-stu-id="79d76-125">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="79d76-126">Hover: die erste Schaltfläche ändert die Farben, wenn der Benutzer mit dem Mauszeiger auf die Schaltfläche bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="79d76-126">Hover - the first button changes colors when the user hovers with the mouse over the button</span></span>  
  
-   <span data-ttu-id="79d76-127">Drücken Sie-die zweite Schaltfläche erfordert, dass die Maus gedrückt wird, während sich der Mauszeiger in der Schaltfläche befindet.</span><span class="sxs-lookup"><span data-stu-id="79d76-127">Press - the second button requires that the mouse be pressed while the mouse pointer is in the button.</span></span>  
  
-   <span data-ttu-id="79d76-128">Release-das dritte setzt die Hintergrundfarbe der Schaltflächen erst zurück, wenn die Maus gedrückt und in der Schaltfläche losgelassen wurde.</span><span class="sxs-lookup"><span data-stu-id="79d76-128">Release - the third does not reset the background color of the buttons until the mouse is pressed and released in the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClickEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Primitives.ButtonBase.ClickEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-129">Identifiziert das <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="79d76-129">Identifies the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-130">Dieses Ereignis entspricht einem Mausklick mit der linken Maustaste.</span><span class="sxs-lookup"><span data-stu-id="79d76-130">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ClickMode ClickMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ClickMode ClickMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClickMode As ClickMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ClickMode ClickMode { System::Windows::Controls::ClickMode get(); void set(System::Windows::Controls::ClickMode value); };" />
      <MemberSignature Language="F#" Value="member this.ClickMode : System.Windows.Controls.ClickMode with get, set" Usage="System.Windows.Controls.Primitives.ButtonBase.ClickMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ClickMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-131">Ruft ab oder legt fest, wann das <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />-Ereignis auftritt.</span><span class="sxs-lookup"><span data-stu-id="79d76-131">Gets or sets when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span></span></summary>
        <value><span data-ttu-id="79d76-132">Auftreten des <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />-Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="79d76-132">When the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span></span> <span data-ttu-id="79d76-133">Der Standardwert ist <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span><span class="sxs-lookup"><span data-stu-id="79d76-133">The default value is <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ClickMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="79d76-134">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="79d76-134">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="79d76-135">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="79d76-135">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty>|  
|<span data-ttu-id="79d76-136">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="79d76-136">Metadata properties set to `true`</span></span>|<span data-ttu-id="79d76-137">Keine</span><span class="sxs-lookup"><span data-stu-id="79d76-137">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClickModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClickModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClickModeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ClickModeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-138">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="79d76-138">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Controls.Primitives.ButtonBase.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-139">Ruft den Befehl ab, der beim Drücken dieser Schaltfläche aufgerufen wird, bzw. legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="79d76-139">Gets or sets the command to invoke when this button is pressed.</span></span></summary>
        <value><span data-ttu-id="79d76-140">Ein Befehl, der beim Klicken auf diese Schaltfläche aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="79d76-140">A command to invoke when this button is pressed.</span></span> <span data-ttu-id="79d76-141">Der Standardwert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="79d76-141">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-142">Diese Eigenschaft wird zum Zuordnen eines Befehls zu einer bestimmten Schaltflächen Instanz verwendet.</span><span class="sxs-lookup"><span data-stu-id="79d76-142">This property is used to associate a command with a particular button instance.</span></span>  
  
 <span data-ttu-id="79d76-143">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]wird diese Eigenschaft am häufigsten als statischer Befehls Wert aus einer der vorhandenen Befehls Bibliotheken, z. b. <xref:System.Windows.Input.ApplicationCommands> oder <xref:System.Windows.Input.NavigationCommands>, festgelegt.</span><span class="sxs-lookup"><span data-stu-id="79d76-143">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property is most often set to be a static command value from one of the existing command libraries, such as <xref:System.Windows.Input.ApplicationCommands> or <xref:System.Windows.Input.NavigationCommands>.</span></span> <span data-ttu-id="79d76-144">Weitere Informationen finden Sie unter [Befehls Übersicht](~/docs/framework/wpf/advanced/commanding-overview.md) oder <xref:System.Windows.Input.ICommand>.</span><span class="sxs-lookup"><span data-stu-id="79d76-144">For details, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md) or <xref:System.Windows.Input.ICommand>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="79d76-145">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="79d76-145">XAML Attribute Usage</span></span>  
  
```  
<object Command="commandName"/>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="79d76-146">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="79d76-146">XAML Values</span></span>  
 <span data-ttu-id="79d76-147">*CommandName*</span><span class="sxs-lookup"><span data-stu-id="79d76-147">*commandName*</span></span>  
 <span data-ttu-id="79d76-148">Der Befehl, der aufgerufen werden soll, wenn diese Schaltfläche gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="79d76-148">The command to invoke when this button is pressed.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="79d76-149">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="79d76-149">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="79d76-150">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="79d76-150">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty>|  
|<span data-ttu-id="79d76-151">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="79d76-151">Metadata properties set to `true`</span></span>|<span data-ttu-id="79d76-152">Keine</span><span class="sxs-lookup"><span data-stu-id="79d76-152">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj with get, set" Usage="System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-153">Ruft den Parameter ab, der an die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" />-Eigenschaft übergeben wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="79d76-153">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span></span></summary>
        <value><span data-ttu-id="79d76-154">Der Parameter, der an die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" />-Eigenschaft übergeben wird.</span><span class="sxs-lookup"><span data-stu-id="79d76-154">Parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-155">Die meisten vorhandenen Befehle in den Befehls Bibliotheken verwenden keinen Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="79d76-155">Most existing commands from the command libraries do not use a command parameter.</span></span> <span data-ttu-id="79d76-156">Der Befehle, die einen Befehlsparameter verwenden, verwenden die meisten dieser Parameter einen Parameter mit einem primitiven Typwert, z. b. eine ganze Zahl oder eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="79d76-156">Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string.</span></span> <span data-ttu-id="79d76-157">Es ist jedoch möglich, einen benutzerdefinierten Befehl zu erstellen, bei dem dieser Befehl einen nicht primitiven Typ als Befehlsparameter erwartet.</span><span class="sxs-lookup"><span data-stu-id="79d76-157">However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter.</span></span> <span data-ttu-id="79d76-158">Bei einem solchen benutzerdefinierten Befehls Fall kann das Festlegen von <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> im Code eine neue oder vorhandene Objektinstanz erfordern.</span><span class="sxs-lookup"><span data-stu-id="79d76-158">For a custom command case like this, setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in code might require a new or existing object instance.</span></span> <span data-ttu-id="79d76-159">Das Festlegen von <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in Markup erfordert möglicherweise eine Eigenschafts Element Syntax, wobei das Objekt Element, das die Eigenschaften Element Syntax füllt, ein neues Element des Typs ist, der von diesem Befehl erwartet wird.</span><span class="sxs-lookup"><span data-stu-id="79d76-159">Setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command.</span></span> <span data-ttu-id="79d76-160">Alternativ dazu kann die Einstellung in Markup einen Verweis durch eine Markup Erweiterung auf ein vorhandenes Objekt erfordern (in der Regel werden diese Verweise mit der [Bindungs Markup Erweiterung](~/docs/framework/wpf/advanced/binding-markup-extension.md) oder [statikresource-Markup Erweiterung](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)erstellt).</span><span class="sxs-lookup"><span data-stu-id="79d76-160">Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="79d76-161">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="79d76-161">XAML Attribute Usage</span></span>  
  
```  
<object CommandParameter="commandParameter" />  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="79d76-162">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="79d76-162">XAML Values</span></span>  
 <span data-ttu-id="79d76-163">*commandParameter*</span><span class="sxs-lookup"><span data-stu-id="79d76-163">*commandParameter*</span></span>  
 <span data-ttu-id="79d76-164">Ein Wert desselben Typs wie der in der <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A>-Eigenschaft angegebene Befehl erwartet.</span><span class="sxs-lookup"><span data-stu-id="79d76-164">A value of the same type as the particular command specified in the <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> property expects.</span></span> <span data-ttu-id="79d76-165">Wenn Sie einen vorhandenen Befehls Bibliotheks Befehl verwenden, finden Sie in der Dokumentation der Befehls Bibliothek Informationen zur [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] von Verwendungs Informationen, einschließlich der Art <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A>, die der Befehl erwartet.</span><span class="sxs-lookup"><span data-stu-id="79d76-165">If you use an existing command library command, see that command library's documentation for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage information, including which type of <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> the command expects.</span></span> <span data-ttu-id="79d76-166">Wenn Sie einen benutzerdefinierten Befehl verwenden, finden Sie weitere Informationen unter Hinweise.</span><span class="sxs-lookup"><span data-stu-id="79d76-166">If you use a custom command, see Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="79d76-167">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="79d76-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="79d76-168">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="79d76-168">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty>|  
|<span data-ttu-id="79d76-169">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="79d76-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="79d76-170">Keine</span><span class="sxs-lookup"><span data-stu-id="79d76-170">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandParameterProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-171">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="79d76-171">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.ButtonBase.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-172">Bezeichnet die weitergeleitete <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="79d76-172">Identifies the routed <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement with get, set" Usage="System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-173">Ruft das Element ab, für das der angegebene Befehl aufgerufen werden soll, bzw. legt dieses fest.</span><span class="sxs-lookup"><span data-stu-id="79d76-173">Gets or sets the element on which to raise the specified command.</span></span></summary>
        <value><span data-ttu-id="79d76-174">Element, für das ein Befehl ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="79d76-174">Element on which to raise a command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-175">Die <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A>-Eigenschaft kann nicht verwendet werden, um eine <xref:System.Windows.UIElement>zu definieren.</span><span class="sxs-lookup"><span data-stu-id="79d76-175">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property cannot be used to define a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="79d76-176">Die <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A>-Eigenschaft stellt einen Verweis auf ein Element bereit, das bereits irgendwo in der Anwendung definiert ist.</span><span class="sxs-lookup"><span data-stu-id="79d76-176">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property provides a reference to an element that is already defined somewhere in your application.</span></span>  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="79d76-177">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="79d76-177">XAML Attribute Usage</span></span>  
  
```  
<ButtonBase CommandTarget="{Binding ElementName= elementName }"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="79d76-178">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="79d76-178">XAML Values</span></span>  
 <span data-ttu-id="79d76-179">*Elementname*</span><span class="sxs-lookup"><span data-stu-id="79d76-179">*elementName*</span></span>  
 <span data-ttu-id="79d76-180">Der Name der <xref:System.Windows.IInputElement>, die den Befehl empfängt.</span><span class="sxs-lookup"><span data-stu-id="79d76-180">The name of <xref:System.Windows.IInputElement> that receives the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="79d76-181">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="79d76-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="79d76-182">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="79d76-182">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty>|  
|<span data-ttu-id="79d76-183">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="79d76-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="79d76-184">Keine</span><span class="sxs-lookup"><span data-stu-id="79d76-184">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-185">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="79d76-185">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabledCore : bool" Usage="System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-186">Ruft den Wert der <see cref="P:System.Windows.ContentElement.IsEnabled" />-Eigenschaft ab.</span><span class="sxs-lookup"><span data-stu-id="79d76-186">Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property.</span></span></summary>
        <value><span data-ttu-id="79d76-187"><see langword="true" />, wenn das Steuerelement aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d76-187"><see langword="true" /> if the control is enabled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-188">Wenn Sie diese Implementierung außer Kraft setzen möchten, stellen Sie sicher, dass Sie die Basis Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-188">If you choose to override this implementation, make certain that you call the base method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsPressed : bool with get, set" Usage="System.Windows.Controls.Primitives.ButtonBase.IsPressed" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-189">Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> aktuell aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="79d76-189">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is currently activated.</span></span></summary>
        <value><span data-ttu-id="79d76-190"><see langword="true" />, wenn <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d76-190"><see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is activated; otherwise <see langword="false" />.</span></span> <span data-ttu-id="79d76-191">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="79d76-191">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ist der Zustand einer Schaltfläche, die anzeigt, dass die linke Maustaste oder die LEERTASTE über der Schaltfläche gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="79d76-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button.</span></span> <span data-ttu-id="79d76-193">Wenn <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> `true`ist, wird die Maus vom Steuerelement erfasst.</span><span class="sxs-lookup"><span data-stu-id="79d76-193">When <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, the control captures the mouse.</span></span>  <span data-ttu-id="79d76-194">Folglich gibt das Steuerelement Mausereignisse aus, z. b. <xref:System.Windows.UIElement.MouseEnter> und <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="79d76-194">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="79d76-195">Beachten Sie, dass die Verwendung des <xref:System.Windows.Controls.AccessText> oder der EINGABETASTE nicht geändert wird <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> oder die Maus erfassen, sondern das <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis aufhebt.</span><span class="sxs-lookup"><span data-stu-id="79d76-195">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but is does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="79d76-196">Ab der .NET Framework Version 3,0 Service Pack 1 verfügt <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> über einen geschützten Setter.</span><span class="sxs-lookup"><span data-stu-id="79d76-196">Starting with the .NET Framework version 3.0 Service Pack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> has a protected setter.</span></span> <span data-ttu-id="79d76-197">Um diese Funktionalität nutzen zu können, sollte Ihre Anwendung die .NET Framework Version 3,5 als Ziel verwenden.</span><span class="sxs-lookup"><span data-stu-id="79d76-197">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="79d76-198">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="79d76-198">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="79d76-199">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="79d76-199">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="79d76-200">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="79d76-200">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty>|  
|<span data-ttu-id="79d76-201">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="79d76-201">Metadata properties set to `true`</span></span>|<span data-ttu-id="79d76-202">Keine</span><span class="sxs-lookup"><span data-stu-id="79d76-202">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="79d76-203">Dieses Beispiel zeigt, wie Sie die <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A>-Eigenschaft in einem auslöserstil verwenden.</span><span class="sxs-lookup"><span data-stu-id="79d76-203">This example shows how to use the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property in a trigger style.</span></span>  
  
 [!code-xaml[BtnColor#9](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnColor/CSharp/Pane1.xaml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPressedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="79d76-204">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="79d76-204">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnAccessKey : System.Windows.Input.AccessKeyEventArgs -&gt; unit" Usage="buttonBase.OnAccessKey e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d76-205">Die Ereignisdaten für das <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="79d76-205">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span></span></param>
        <summary><span data-ttu-id="79d76-206">Reagiert, wenn der <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> für dieses Steuerelement aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="79d76-206">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is called.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-207">Wenn <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> `true`ist, ruft diese Methode die Basis Implementierung auf, die diesem Steuerelement den Fokus übergibt.</span><span class="sxs-lookup"><span data-stu-id="79d76-207">If <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> is `true`, this method calls the base implementation, which gives this control focus.</span></span>  <span data-ttu-id="79d76-208">Andernfalls löst diese Methode das <xref:System.Windows.Controls.Primitives.ButtonBase.Click>-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="79d76-208">Otherwise, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberSignature Language="F#" Value="abstract member OnClick : unit -&gt; unit&#xA;override this.OnClick : unit -&gt; unit" Usage="buttonBase.OnClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="79d76-209">Löst das <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />-Routingereignis aus.</span><span class="sxs-lookup"><span data-stu-id="79d76-209">Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-210">Das-Steuerelement löst das <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis aus, indem <xref:System.Windows.UIElement.RaiseEvent%2A>aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="79d76-210">The control raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="79d76-211">Weitere Informationen finden Sie unter [Übersicht über Routing Ereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="79d76-211">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d76-212">Wenn Sie <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> in einer abgeleiteten Klasse überschreiben, stellen Sie sicher, dass die <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />-Methode der Basisklasse aufgerufen wird, damit registrierte Delegaten das Ereignis empfangen.</span><span class="sxs-lookup"><span data-stu-id="79d76-212">When overriding <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> in a derived class, be sure to call the base class' <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> method so that registered delegates receive the event.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnIsPressedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsPressedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsPressedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsPressedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsPressedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnIsPressedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnIsPressedChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="buttonBase.OnIsPressedChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d76-213">Die Daten für <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span><span class="sxs-lookup"><span data-stu-id="79d76-213">The data for <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span></span></param>
        <summary><span data-ttu-id="79d76-214">Wird aufgerufen, wenn sich die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />-Eigenschaft ändert.</span><span class="sxs-lookup"><span data-stu-id="79d76-214">Called when the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> property changes.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="buttonBase.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d76-215">Die Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="79d76-215">The event data.</span></span></param>
        <summary><span data-ttu-id="79d76-216">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.KeyDown" />-Routingereignis bereit, das auftritt, wenn der Benutzer eine Taste drückt, während dieses Steuerelement den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="79d76-216">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key while this control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-217">Diese Implementierung markiert das <xref:System.Windows.UIElement.KeyDown> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A>-Eigenschaft der Ereignisdaten auf `true` festgelegt wird, wenn <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> nicht auf <xref:System.Windows.Controls.ClickMode.Hover> festgelegt ist und einer der folgenden Fälle zutrifft:</span><span class="sxs-lookup"><span data-stu-id="79d76-217">This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and one of the following cases are true:</span></span>  
  
-   <span data-ttu-id="79d76-218">Der Benutzer drückt die Leertaste.</span><span class="sxs-lookup"><span data-stu-id="79d76-218">The user presses the SPACEBAR.</span></span>  
  
-   <span data-ttu-id="79d76-219">Der Benutzer drückt die EINGABETASTE und <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> für dieses Steuerelement `true`.</span><span class="sxs-lookup"><span data-stu-id="79d76-219">The user presses ENTER and <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> is `true` for this control.</span></span>  
  
 <span data-ttu-id="79d76-220">In allen anderen Fällen ändert diese Implementierung nicht den behandelten Zustand (die <xref:System.Windows.RoutedEventArgs.Handled%2A>-Eigenschaft) der <xref:System.Windows.UIElement.KeyDown> Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="79d76-220">In all other cases, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyDown> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d76-221">Wenn Sie <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />überschreiben, müssen Sie immer die Basis Implementierung in ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />-Implementierung aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-221">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="79d76-222">Wenn Sie die Basis Implementierung nicht aufzurufen, wird verhindert, dass Basisklassen das Ereignis mit einem Klassen Handler behandeln, der das Laufzeitverhalten der endgültigen Klasse möglicherweise ändert.</span><span class="sxs-lookup"><span data-stu-id="79d76-222">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="79d76-223">Abhängig von Ihren Anforderungen können Sie die Basis Implementierung entweder vor oder nach ihrer speziellen Behandlung abrufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-223">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="buttonBase.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d76-224">Die Ereignisdaten für das <see cref="E:System.Windows.UIElement.KeyUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="79d76-224">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span></span></param>
        <summary><span data-ttu-id="79d76-225">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.KeyUp" />-Routingereignis bereit, das auftritt, wenn der Benutzer eine Taste loslässt, während dieses Steuerelement den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="79d76-225">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-226">Diese Implementierung markiert das <xref:System.Windows.UIElement.KeyUp> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A>-Eigenschaft der Ereignisdaten auf `true` festgelegt wird, wenn der Benutzer die LEERTASTE loslässt.</span><span class="sxs-lookup"><span data-stu-id="79d76-226">This implementation marks the <xref:System.Windows.UIElement.KeyUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user releases the SPACEBAR.</span></span> <span data-ttu-id="79d76-227">Andernfalls ändert diese Implementierung nicht den behandelten Zustand (die <xref:System.Windows.RoutedEventArgs.Handled%2A>-Eigenschaft) der <xref:System.Windows.UIElement.KeyUp> Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="79d76-227">Otherwise, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyUp> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d76-228">Wenn Sie <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />überschreiben, müssen Sie immer die Basis Implementierung in ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />-Implementierung aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-228">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implementation.</span></span> <span data-ttu-id="79d76-229">Wenn Sie die Basis Implementierung nicht aufzurufen, wird verhindert, dass Basisklassen das Ereignis mit einem Klassen Handler behandeln, der das Laufzeitverhalten der endgültigen Klasse möglicherweise ändert.</span><span class="sxs-lookup"><span data-stu-id="79d76-229">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="79d76-230">Abhängig von Ihren Anforderungen können Sie die Basis Implementierung entweder vor oder nach ihrer speziellen Behandlung abrufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-230">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="buttonBase.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d76-231">Die Ereignisdaten für das <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="79d76-231">The event data for the <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> event.</span></span></param>
        <summary><span data-ttu-id="79d76-232">Wird aufgerufen, wenn ein Element den Tastaturfokus verliert.</span><span class="sxs-lookup"><span data-stu-id="79d76-232">Called when an element loses keyboard focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected override void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostMouseCapture : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="buttonBase.OnLostMouseCapture e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d76-233">Die Ereignisdaten für das <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="79d76-233">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> event.</span></span></param>
        <summary><span data-ttu-id="79d76-234">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.LostMouseCapture" />-Routingereignis bereit, das auftritt, wenn dieses Steuerelement keine Mausereignismeldungen mehr erhält.</span><span class="sxs-lookup"><span data-stu-id="79d76-234">Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when this control is no longer receiving mouse event messages.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-235">Diese Implementierung ändert nicht den behandelten Zustand (die <xref:System.Windows.RoutedEventArgs.Handled%2A>-Eigenschaft) der <xref:System.Windows.UIElement.LostMouseCapture> Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="79d76-235">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.LostMouseCapture> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d76-236">Wenn Sie <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />überschreiben, müssen Sie immer die Basis Implementierung in ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />-Implementierung aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-236">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="79d76-237">Wenn Sie die Basis Implementierung nicht aufzurufen, wird verhindert, dass Basisklassen das Ereignis mit einem Klassen Handler behandeln, der das Laufzeitverhalten der endgültigen Klasse möglicherweise ändert.</span><span class="sxs-lookup"><span data-stu-id="79d76-237">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="79d76-238">Abhängig von Ihren Anforderungen können Sie die Basis Implementierung entweder vor oder nach ihrer speziellen Behandlung abrufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-238">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="buttonBase.OnMouseEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d76-239">Die Ereignisdaten für das <see cref="E:System.Windows.Input.Mouse.MouseEnter" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="79d76-239">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span></span></param>
        <summary><span data-ttu-id="79d76-240">Stellt eine Klassenbehandlung für das <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />-Ereignis bereit, das auftritt, wenn der Mauszeiger in den Bereich des Steuerelements eintritt.</span><span class="sxs-lookup"><span data-stu-id="79d76-240">Provides class handling for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> routed event that occurs when the mouse enters this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-241">Wenn <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> auf <xref:System.Windows.Controls.ClickMode.Hover>festgelegt ist, kennzeichnet diese Implementierung das <xref:System.Windows.UIElement.MouseEnter> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A>-Eigenschaft der Ereignisdaten auf `true` festgelegt wird und das <xref:System.Windows.Controls.Primitives.ButtonBase.Click>-Ereignis ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="79d76-241">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>, this implementation marks the <xref:System.Windows.UIElement.MouseEnter> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d76-242">Wenn Sie <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />überschreiben, müssen Sie immer die Basis Implementierung in ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />-Implementierung aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-242">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="79d76-243">Wenn Sie die Basis Implementierung nicht aufzurufen, wird verhindert, dass Basisklassen das Ereignis mit einem Klassen Handler behandeln, der das Laufzeitverhalten der endgültigen Klasse möglicherweise ändert.</span><span class="sxs-lookup"><span data-stu-id="79d76-243">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="79d76-244">Abhängig von Ihren Anforderungen können Sie die Basis Implementierung entweder vor oder nach ihrer speziellen Behandlung abrufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-244">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="buttonBase.OnMouseLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d76-245">Die Ereignisdaten für das <see cref="E:System.Windows.Input.Mouse.MouseLeave" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="79d76-245">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span></span></param>
        <summary><span data-ttu-id="79d76-246">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.MouseLeave" />-Routingereignis bereit, das auftritt, wenn der Mauszeiger ein Element verlässt.</span><span class="sxs-lookup"><span data-stu-id="79d76-246">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-247">Diese Implementierung markiert das <xref:System.Windows.UIElement.MouseLeave> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A>-Eigenschaft der Ereignisdaten auf `true` festgelegt wird, wenn <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> auf <xref:System.Windows.Controls.ClickMode.Hover>festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="79d76-247">This implementation marks the <xref:System.Windows.UIElement.MouseLeave> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d76-248">Wenn Sie <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />überschreiben, müssen Sie immer die Basis Implementierung in ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />-Implementierung aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-248">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="79d76-249">Wenn Sie die Basis Implementierung nicht aufzurufen, wird verhindert, dass Basisklassen das Ereignis mit einem Klassen Handler behandeln, der das Laufzeitverhalten der endgültigen Klasse möglicherweise ändert.</span><span class="sxs-lookup"><span data-stu-id="79d76-249">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="79d76-250">Abhängig von Ihren Anforderungen können Sie die Basis Implementierung entweder vor oder nach ihrer speziellen Behandlung abrufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-250">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="buttonBase.OnMouseLeftButtonDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d76-251">Die Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="79d76-251">The event data.</span></span></param>
        <summary><span data-ttu-id="79d76-252">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />-Routingereignis bereit, das auftritt, wenn die linke Maustaste gedrückt wird, während sich der Mauszeiger über diesem Steuerelement befindet.</span><span class="sxs-lookup"><span data-stu-id="79d76-252">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-253">Diese Implementierung markiert das <xref:System.Windows.UIElement.MouseLeftButtonDown> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A>-Eigenschaft der Ereignisdaten auf `true` festgelegt wird, wenn <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> nicht auf <xref:System.Windows.Controls.ClickMode.Hover>festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="79d76-253">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="79d76-254">Um auf das <xref:System.Windows.UIElement.MouseLeftButtonDown>-Ereignis zu reagieren, fügen Sie einen Ereignishandler an das <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown>-Ereignis an, oder wenden Sie <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` auf `true`fest.</span><span class="sxs-lookup"><span data-stu-id="79d76-254">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="79d76-255">Wenn <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> auf <xref:System.Windows.Controls.ClickMode.Press>festgelegt ist, löst diese Methode das <xref:System.Windows.Controls.Primitives.ButtonBase.Click>-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="79d76-255">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Press>, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d76-256">Wenn Sie <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />überschreiben, müssen Sie immer die Basis Implementierung in ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />-Implementierung aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-256">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span></span> <span data-ttu-id="79d76-257">Wenn Sie die Basis Implementierung nicht aufzurufen, wird verhindert, dass Basisklassen das Ereignis mit einem Klassen Handler behandeln, der das Laufzeitverhalten der endgültigen Klasse möglicherweise ändert.</span><span class="sxs-lookup"><span data-stu-id="79d76-257">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="79d76-258">Abhängig von Ihren Anforderungen können Sie die Basis Implementierung entweder vor oder nach ihrer speziellen Behandlung abrufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-258">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeftButtonUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="buttonBase.OnMouseLeftButtonUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d76-259">Die Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="79d76-259">The event data.</span></span></param>
        <summary><span data-ttu-id="79d76-260">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />-Routingereignis bereit, das auftritt, wenn die linke Maustaste losgelassen wird, während der Mauszeiger sich über diesem Steuerelement befindet.</span><span class="sxs-lookup"><span data-stu-id="79d76-260">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-261">Diese Implementierung markiert das <xref:System.Windows.UIElement.MouseLeftButtonUp> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A>-Eigenschaft der Ereignisdaten auf `true` festgelegt wird, wenn <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> nicht auf <xref:System.Windows.Controls.ClickMode.Hover>festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="79d76-261">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="79d76-262">Um auf das <xref:System.Windows.UIElement.MouseLeftButtonUp>-Ereignis zu reagieren, fügen Sie einen Ereignishandler an das <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp>-Ereignis an, oder wenden Sie <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` auf `true`fest.</span><span class="sxs-lookup"><span data-stu-id="79d76-262">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonUp> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="79d76-263">Wenn <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> auf festgelegt ist <xref:System.Windows.Controls.ClickMode.Release> ist <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> `true`ist, löst diese Methode das <xref:System.Windows.Controls.Primitives.ButtonBase.Click>-Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="79d76-263">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Release> is <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d76-264">Wenn Sie <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />überschreiben, müssen Sie immer die Basis Implementierung in ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />-Implementierung aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-264">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span></span> <span data-ttu-id="79d76-265">Wenn Sie die Basis Implementierung nicht aufzurufen, wird verhindert, dass Basisklassen das Ereignis mit einem Klassen Handler behandeln, der das Laufzeitverhalten der endgültigen Klasse möglicherweise ändert.</span><span class="sxs-lookup"><span data-stu-id="79d76-265">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="79d76-266">Abhängig von Ihren Anforderungen können Sie die Basis Implementierung entweder vor oder nach ihrer speziellen Behandlung abrufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-266">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="buttonBase.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="79d76-267">Die Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="79d76-267">The event data.</span></span></param>
        <summary><span data-ttu-id="79d76-268">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.MouseMove" />-Routingereignis bereit, das auftritt, wenn der Mauszeiger bewegt wird, während er sich über diesem Element befindet.</span><span class="sxs-lookup"><span data-stu-id="79d76-268">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event that occurs when the mouse pointer moves while over this element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-269">Diese Implementierung markiert das <xref:System.Windows.UIElement.MouseMove> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A>-Eigenschaft der Ereignisdaten auf `true` festgelegt wird, wenn <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> nicht auf <xref:System.Windows.Controls.ClickMode.Hover> festgelegt und <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> `true`ist.</span><span class="sxs-lookup"><span data-stu-id="79d76-269">This implementation marks the <xref:System.Windows.UIElement.MouseMove> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`.</span></span> <span data-ttu-id="79d76-270">Um auf das <xref:System.Windows.UIElement.MouseMove>-Ereignis zu reagieren, fügen Sie einen Ereignishandler an das <xref:System.Windows.ContentElement.PreviewMouseMove>-Ereignis an, oder wenden Sie <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` auf `true`fest.</span><span class="sxs-lookup"><span data-stu-id="79d76-270">To respond to the <xref:System.Windows.UIElement.MouseMove> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseMove> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="79d76-271">Wenn Sie <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />überschreiben, müssen Sie immer die Basis Implementierung in ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />-Implementierung aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-271">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> implementation.</span></span> <span data-ttu-id="79d76-272">Wenn Sie die Basis Implementierung nicht aufzurufen, wird verhindert, dass Basisklassen das Ereignis mit einem Klassen Handler behandeln, der das Laufzeitverhalten der endgültigen Klasse möglicherweise ändert.</span><span class="sxs-lookup"><span data-stu-id="79d76-272">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span></span> <span data-ttu-id="79d76-273">Abhängig von Ihren Anforderungen können Sie die Basis Implementierung entweder vor oder nach ihrer speziellen Behandlung abrufen.</span><span class="sxs-lookup"><span data-stu-id="79d76-273">You can call the base implementation either before or after your special handling, depending on your requirements.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnRenderSizeChanged (System.Windows.SizeChangedInfo sizeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo sizeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRenderSizeChanged (sizeInfo As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ sizeInfo);" />
      <MemberSignature Language="F#" Value="override this.OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit" Usage="buttonBase.OnRenderSizeChanged sizeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeInfo" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="sizeInfo"><span data-ttu-id="79d76-274">Gibt die Größenänderungen an.</span><span class="sxs-lookup"><span data-stu-id="79d76-274">Specifies the size changes.</span></span></param>
        <summary><span data-ttu-id="79d76-275">Wird aufgerufen, wenn sich die Darstellungsgröße eines Steuerelements ändert.</span><span class="sxs-lookup"><span data-stu-id="79d76-275">Called when the rendered size of a control changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="79d76-276">Überschreibt die <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A>-Methode des <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="79d76-276">Overrides the <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> method of the <xref:System.Windows.UIElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
