<Type Name="ButtonBase" FullName="System.Windows.Controls.Primitives.ButtonBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="13e555cd2ed8ffe1e34cbc976d8ddc082c6bce0a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ButtonBase : System.Windows.Controls.ContentControl, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract ButtonBase extends System.Windows.Controls.ContentControl implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ButtonBase&#xA;Inherits ContentControl&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonBase abstract : System::Windows::Controls::ContentControl, System::Windows::Input::ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.ContentControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Button)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="dcdb0-101">Stellt die Basisklasse für alle <see cref="T:System.Windows.Controls.Button" />-Steuerelemente dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dcdb0-101">Represents the base class for all <see cref="T:System.Windows.Controls.Button" /> controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-102">Behandeln der <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis reagiert, wenn der Benutzer klickt auf eine <xref:System.Windows.Controls.Primitives.ButtonBase>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-102">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event to respond when the user clicks a <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="dcdb0-103">Der Benutzer kann Auslösen der <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis mithilfe einer <xref:System.Windows.Controls.AccessText> oder durch Drücken von EINGABETASTE oder die LEERTASTE, wenn das Steuerelement den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-103">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="dcdb0-104">Wenn der Benutzer drückt die LEERTASTE, das Steuerelement legt <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> auf `true` und die Maus erfasst.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-104">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="dcdb0-105">Daher das Steuerelement löst Mausereignisse wie z. B. <xref:System.Windows.UIElement.MouseEnter> und <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-105">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="dcdb0-106">Beachten Sie, dass die Verwendung der <xref:System.Windows.Controls.AccessText> oder EINGABETASTE ändert sich nicht <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> oder die Maus erfassen, aber es löst die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-106">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="dcdb0-107">Die <xref:System.Windows.Controls.Primitives.ButtonBase> legt die <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> angefügten Eigenschaft, um `true`.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-107">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> attached property to `true`.</span></span>  
  
 <span data-ttu-id="dcdb0-108">Die <xref:System.Windows.Controls.Primitives.ButtonBase> legt die <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> Eigenschaft `false`.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-108">The <xref:System.Windows.Controls.Primitives.ButtonBase> sets the <xref:System.Windows.UIElement.IsInputMethodEnabled%2A> property to `false`.</span></span>  
  
 <span data-ttu-id="dcdb0-109">Ein <xref:System.Windows.Controls.Primitives.ButtonBase> ist eine <xref:System.Windows.Controls.ContentControl>, was bedeutet, dass es ein einzelnes Objekt eines beliebigen Typs (z. B. eine Zeichenfolge, ein Bild oder ein Bereich) enthalten kann.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-109">A <xref:System.Windows.Controls.Primitives.ButtonBase> is a <xref:System.Windows.Controls.ContentControl>, which means that it can contain a single object of any type (such as a string, an image, or a panel).</span></span> <span data-ttu-id="dcdb0-110">Weitere Informationen finden Sie in den Ausführungen zur <xref:System.Windows.Controls.ContentControl>-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-110">For more information, see the <xref:System.Windows.Controls.ContentControl> class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ButtonBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-111">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Controls.Primitives.ButtonBase" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-111">Initializes a new instance of the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.ButtonBase.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-112">Tritt ein, wenn auf ein <see cref="T:System.Windows.Controls.Button" /> geklickt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-112">Occurs when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-113">Der Benutzer kann Auslösen der <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis mithilfe einer <xref:System.Windows.Controls.AccessText> oder durch Drücken von EINGABETASTE oder die LEERTASTE, wenn das Steuerelement den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-113">The user can raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by using an <xref:System.Windows.Controls.AccessText> or by pressing ENTER or the SPACEBAR when the control has focus.</span></span>  <span data-ttu-id="dcdb0-114">Wenn der Benutzer drückt die LEERTASTE, das Steuerelement legt <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> auf `true` und die Maus erfasst.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-114">When the user presses the SPACEBAR, the control sets <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> to `true` and captures the mouse.</span></span>  <span data-ttu-id="dcdb0-115">Daher das Steuerelement löst Mausereignisse wie z. B. <xref:System.Windows.UIElement.MouseEnter> und <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-115">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="dcdb0-116">Beachten Sie, dass die Verwendung der <xref:System.Windows.Controls.AccessText> oder EINGABETASTE ändert sich nicht <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> oder die Maus erfassen, aber es löst die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-116">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but it does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="dcdb0-117">Die <xref:System.Windows.Controls.Primitives.ButtonBase> markiert die <xref:System.Windows.UIElement.MouseLeftButtonDown> Ereignis als behandelt, in der <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> -Methode auf und löst die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-117">The <xref:System.Windows.Controls.Primitives.ButtonBase> marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled in the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span> <span data-ttu-id="dcdb0-118">Daher wird die <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> Ereignis treten nie für ein Steuerelement, das von erbt <xref:System.Windows.Controls.Primitives.ButtonBase>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-118">Hence, the <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> event will never occur for a control that inherits from <xref:System.Windows.Controls.Primitives.ButtonBase>.</span></span> <span data-ttu-id="dcdb0-119">Fügen Sie stattdessen einen Ereignishandler an das <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> Ereignis an, oder rufen <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-119">Instead, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
<a name="routedEventInfo_Click"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="dcdb0-120">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="dcdb0-120">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dcdb0-121">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="dcdb0-121">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickEvent>|  
|<span data-ttu-id="dcdb0-122">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="dcdb0-122">Routing strategy</span></span>|<span data-ttu-id="dcdb0-123">Bubbling</span><span class="sxs-lookup"><span data-stu-id="dcdb0-123">Bubbling</span></span>|  
|<span data-ttu-id="dcdb0-124">delegate</span><span class="sxs-lookup"><span data-stu-id="dcdb0-124">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="dcdb0-125">Das folgende Beispiel zeigt drei Schaltflächen, die auf Klicks auf drei verschiedene Arten reagieren.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-125">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="dcdb0-126">Hover - ändert die erste Schaltfläche Farben, wenn der Benutzer mit der Maus auf die Schaltfläche gezeigt wird</span><span class="sxs-lookup"><span data-stu-id="dcdb0-126">Hover - the first button changes colors when the user hovers with the mouse over the button</span></span>  
  
-   <span data-ttu-id="dcdb0-127">Drücken Sie - erfordert die zweite Schaltfläche mit der Maus geklickt werden, während der Mauszeiger auf die Schaltfläche befindet.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-127">Press - the second button requires that the mouse be pressed while the mouse pointer is in the button.</span></span>  
  
-   <span data-ttu-id="dcdb0-128">Release - ist das dritte erst zurückgesetzt, die Hintergrundfarbe der Schaltflächen die Maustaste gedrückt und losgelassen wird, in der Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-128">Release - the third does not reset the background color of the buttons until the mouse is pressed and released in the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ClickEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ClickEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ClickEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-129">Identifiziert das <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />-Routingereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-129">Identifies the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-130">Dieses Ereignis entspricht einem linken Mausklick.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-130">This event corresponds to a left mouse button click.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickMode">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ClickMode ClickMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ClickMode ClickMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ClickMode As ClickMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ClickMode ClickMode { System::Windows::Controls::ClickMode get(); void set(System::Windows::Controls::ClickMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ClickMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-131">Ruft ab oder legt fest, wann das <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />-Ereignis auftritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-131">Gets or sets when the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcdb0-132">Auftreten des <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />-Ereignisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-132">When the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event occurs.</span>
          </span>
          <span data-ttu-id="dcdb0-133">Der Standardwert ist <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-133">The default value is <see cref="F:System.Windows.Controls.ClickMode.Release" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_ClickMode"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dcdb0-134">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="dcdb0-134">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dcdb0-135">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="dcdb0-135">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty>|  
|<span data-ttu-id="dcdb0-136">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="dcdb0-136">Metadata properties set to `true`</span></span>|<span data-ttu-id="dcdb0-137">Keiner</span><span class="sxs-lookup"><span data-stu-id="dcdb0-137">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClickModeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClickModeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClickModeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.ClickModeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClickModeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClickModeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-138">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-138">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-139">Ruft den Befehl ab, der beim Drücken dieser Schaltfläche aufgerufen wird, bzw. legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-139">Gets or sets the command to invoke when this button is pressed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcdb0-140">Ein Befehl, der beim Klicken auf diese Schaltfläche aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-140">A command to invoke when this button is pressed.</span>
          </span>
          <span data-ttu-id="dcdb0-141">Der Standardwert ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-141">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-142">Diese Eigenschaft wird verwendet, eine bestimmte Schaltfläche einen Befehl zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-142">This property is used to associate a command with a particular button instance.</span></span>  
  
 <span data-ttu-id="dcdb0-143">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], diese Eigenschaft wird am häufigsten festgelegt, um einen statischen Befehlswert aus einer vorhandenen Befehlsbibliotheken, wie z. B. werden <xref:System.Windows.Input.ApplicationCommands> oder <xref:System.Windows.Input.NavigationCommands>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-143">In [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], this property is most often set to be a static command value from one of the existing command libraries, such as <xref:System.Windows.Input.ApplicationCommands> or <xref:System.Windows.Input.NavigationCommands>.</span></span> <span data-ttu-id="dcdb0-144">Weitere Informationen finden Sie unter [Befehle (Übersicht)](~/docs/framework/wpf/advanced/commanding-overview.md) oder <xref:System.Windows.Input.ICommand>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-144">For details, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md) or <xref:System.Windows.Input.ICommand>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="dcdb0-145">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="dcdb0-145">XAML Attribute Usage</span></span>  
  
```  
<object Command="commandName"/>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="dcdb0-146">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="dcdb0-146">XAML Values</span></span>  
 <span data-ttu-id="dcdb0-147">*commandName*</span><span class="sxs-lookup"><span data-stu-id="dcdb0-147">*commandName*</span></span>  
 <span data-ttu-id="dcdb0-148">Der Befehl, der aufgerufen wird, wenn diese Schaltfläche aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-148">The command to invoke when this button is pressed.</span></span>  
  
<a name="dependencyPropertyInfo_Command"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dcdb0-149">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="dcdb0-149">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dcdb0-150">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="dcdb0-150">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandProperty>|  
|<span data-ttu-id="dcdb0-151">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="dcdb0-151">Metadata properties set to `true`</span></span>|<span data-ttu-id="dcdb0-152">Keiner</span><span class="sxs-lookup"><span data-stu-id="dcdb0-152">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-153">Ruft den Parameter ab, der an die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" />-Eigenschaft übergeben wird, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-153">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcdb0-154">Der Parameter, der an die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" />-Eigenschaft übergeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-154">Parameter to pass to the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-155">Die meisten vorhandenen Befehle aus den Bibliotheken verwenden einen Befehlsparameter.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-155">Most existing commands from the command libraries do not use a command parameter.</span></span> <span data-ttu-id="dcdb0-156">Der Befehle, die einen Parameter verwenden, übernehmen die meisten dieser einen Parameter mit einem bestimmten Grundtyp-Wert, z. B. eine ganze Zahl oder eine Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-156">Of the commands that do use a command parameter, most of these take a parameter with some primitive type value, such as an integer or a string.</span></span> <span data-ttu-id="dcdb0-157">Es ist jedoch möglich, einen benutzerdefinierten Befehl zu erstellen, in dem dieser Befehl einen nicht primitiven Typ als Befehlsparameter erwartet.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-157">However, it is possible to create a custom command where that command expects a nonprimitive type as its command parameter.</span></span> <span data-ttu-id="dcdb0-158">Für einen benutzerdefinierten Befehl Fall wie folgt, Festlegen von <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> im Code eine neue oder vorhandene Objektinstanz erforderlich.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-158">For a custom command case like this, setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in code might require a new or existing object instance.</span></span> <span data-ttu-id="dcdb0-159">Festlegen von <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> im Markup Eigenschaftenelementsyntax, in dem das Ausfüllen der Eigenschaftenelementsyntax Object-Element ein neues Element des Typs, die vom Befehl erwarteten ist erfordern.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-159">Setting <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> in markup might require property element syntax, where the object element filling the property element syntax is a new element of the type expected by that command.</span></span> <span data-ttu-id="dcdb0-160">Alternativ können Sie möglicherweise festlegen im Markup erfordern einen Verweis durch eine Markuperweiterung auf ein vorhandenes Objekt (in der Regel werden diese Verweise mit [Markuperweiterung binden](~/docs/framework/wpf/advanced/binding-markup-extension.md) oder [StaticResource-Markuperweiterung ](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span><span class="sxs-lookup"><span data-stu-id="dcdb0-160">Alternatively, setting in markup might require a reference through a markup extension to an existing object (typically these references are made with [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)).</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="dcdb0-161">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="dcdb0-161">XAML Attribute Usage</span></span>  
  
```  
<object CommandParameter="commandParameter" />  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="dcdb0-162">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="dcdb0-162">XAML Values</span></span>  
 <span data-ttu-id="dcdb0-163">*commandParameter*</span><span class="sxs-lookup"><span data-stu-id="dcdb0-163">*commandParameter*</span></span>  
 <span data-ttu-id="dcdb0-164">Ein Wert des gleichen Typs wie der bestimmten Befehl angegeben, der <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> Eigenschaft erwartet.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-164">A value of the same type as the particular command specified in the <xref:System.Windows.Controls.Primitives.ButtonBase.Command%2A> property expects.</span></span> <span data-ttu-id="dcdb0-165">Wenn Sie einen vorhandene Bibliothek-Befehl verwenden, finden Sie in dieser Befehlsbibliothek Dokumentation [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Verwendungsinformationen an, welche Art von einschließlich <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> erwartet, dass der Befehl.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-165">If you use an existing command library command, see that command library's documentation for [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage information, including which type of <xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameter%2A> the command expects.</span></span> <span data-ttu-id="dcdb0-166">Wenn Sie einen benutzerdefinierten Befehl verwenden, finden Sie unter "Hinweise".</span><span class="sxs-lookup"><span data-stu-id="dcdb0-166">If you use a custom command, see Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_CommandParameter"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dcdb0-167">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="dcdb0-167">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dcdb0-168">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="dcdb0-168">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty>|  
|<span data-ttu-id="dcdb0-169">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="dcdb0-169">Metadata properties set to `true`</span></span>|<span data-ttu-id="dcdb0-170">Keiner</span><span class="sxs-lookup"><span data-stu-id="dcdb0-170">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-171">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-171">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandParameter" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-172">Bezeichnet die weitergeleitete <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-172">Identifies the routed <see cref="P:System.Windows.Controls.Primitives.ButtonBase.Command" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Action")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-173">Ruft das Element ab, für das der angegebene Befehl aufgerufen werden soll, bzw. legt dieses fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-173">Gets or sets the element on which to raise the specified command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcdb0-174">Element, für das ein Befehl ausgelöst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-174">Element on which to raise a command.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-175">Die <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> Eigenschaft kann nicht verwendet werden, definieren eine <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-175">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property cannot be used to define a <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="dcdb0-176">Die <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> Eigenschaft stellt einen Verweis auf ein Element, das bereits an anderer Stelle in der Anwendung definiert ist.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-176">The <xref:System.Windows.Controls.Primitives.ButtonBase.CommandTarget%2A> property provides a reference to an element that is already defined somewhere in your application.</span></span>  
  
<a name="xamlAttributeUsage_Target"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="dcdb0-177">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="dcdb0-177">XAML Attribute Usage</span></span>  
  
```  
<ButtonBase CommandTarget="{Binding ElementName= elementName }"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="dcdb0-178">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="dcdb0-178">XAML Values</span></span>  
 <span data-ttu-id="dcdb0-179">*elementName*</span><span class="sxs-lookup"><span data-stu-id="dcdb0-179">*elementName*</span></span>  
 <span data-ttu-id="dcdb0-180">Der Name des <xref:System.Windows.IInputElement> , der den Befehl empfängt.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-180">The name of <xref:System.Windows.IInputElement> that receives the command.</span></span>  
  
<a name="dependencyPropertyInfo_CommandTarget"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dcdb0-181">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="dcdb0-181">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dcdb0-182">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="dcdb0-182">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty>|  
|<span data-ttu-id="dcdb0-183">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="dcdb0-183">Metadata properties set to `true`</span></span>|<span data-ttu-id="dcdb0-184">Keiner</span><span class="sxs-lookup"><span data-stu-id="dcdb0-184">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-185">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-185">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.CommandTarget" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEnabledCore">
      <MemberSignature Language="C#" Value="protected override bool IsEnabledCore { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabledCore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsEnabledCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property IsEnabledCore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool IsEnabledCore { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-186">Ruft den Wert der <see cref="P:System.Windows.ContentElement.IsEnabled" />-Eigenschaft ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-186">Gets the value of the <see cref="P:System.Windows.ContentElement.IsEnabled" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcdb0-187">
            <see langword="true" />, wenn das Steuerelement aktiviert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-187">
              <see langword="true" /> if the control is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-188">Wenn Sie diese Implementierung überschreiben, stellen Sie sicher, dass Sie die Basismethode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-188">If you choose to override this implementation, make certain that you call the base method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressed">
      <MemberSignature Language="C#" Value="public bool IsPressed { get; protected set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPressed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />
      <MemberSignature Language="VB.NET" Value="Public Property IsPressed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:  property bool IsPressed {  public:&#xA;bool get(); protected:&#xA; void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ReadOnly(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-189">Ruft einen Wert ab, der angibt, ob ein <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> aktuell aktiviert ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-189">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is currently activated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dcdb0-190">
            <see langword="true" />, wenn <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> aktiviert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-190">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Primitives.ButtonBase" /> is activated; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="dcdb0-191">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-191">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ist der Zustand einer Schaltfläche, der die linke Maustaste gedrückt angibt, oder LEERTASTE gedrückt wird, auf die Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-192"><xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is the state of a button that indicates the left mouse button or SPACEBAR is pressed over the button.</span></span> <span data-ttu-id="dcdb0-193">Wenn <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ist `true`, zeichnet die Maus auf das Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-193">When <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, the control captures the mouse.</span></span>  <span data-ttu-id="dcdb0-194">Daher das Steuerelement löst Mausereignisse wie z. B. <xref:System.Windows.UIElement.MouseEnter> und <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-194">As a result, the control will raise mouse events such as <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.IsMouseDirectlyOverChanged>.</span></span> <span data-ttu-id="dcdb0-195">Beachten Sie, dass die Verwendung der <xref:System.Windows.Controls.AccessText> oder EINGABETASTE ändert sich nicht <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> oder die Maus erfassen, jedoch wird wird ausgelöst der <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-195">Note that using the <xref:System.Windows.Controls.AccessText> or ENTER does not change <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> or capture the mouse, but is does raise the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 <span data-ttu-id="dcdb0-196">Ab .NET Framework Version 3.0 Servicepack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> verfügt über einen geschützten Setter.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-196">Starting with the .NET Framework version 3.0 Service Pack 1, <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> has a protected setter.</span></span> <span data-ttu-id="dcdb0-197">Zur Verwendung dieser Funktionen sollte die Anwendung .NET Framework, Version 3.5 abzielen.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-197">To use this functionality, your application should target the .NET Framework version 3.5.</span></span>  <span data-ttu-id="dcdb0-198">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="dcdb0-198">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
<a name="dependencyPropertyInfo_IsPressed"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="dcdb0-199">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="dcdb0-199">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="dcdb0-200">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="dcdb0-200">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty>|  
|<span data-ttu-id="dcdb0-201">Metadaten-Eigenschaften festgelegt auf. `true`</span><span class="sxs-lookup"><span data-stu-id="dcdb0-201">Metadata properties set to `true`</span></span>|<span data-ttu-id="dcdb0-202">Keiner</span><span class="sxs-lookup"><span data-stu-id="dcdb0-202">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="dcdb0-203">Dieses Beispiel zeigt, wie die <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> Eigenschaft in einem Trigger-Stil.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-203">This example shows how to use the <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> property in a trigger style.</span></span>  
  
 [!code-xaml[BtnColor#9](~/samples/snippets/csharp/VS_Snippets_Wpf/BtnColor/CSharp/Pane1.xaml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.ButtonBase.IsPressedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressedProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-204">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />-Abhängigkeitseigenschaft.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-204">Identifies the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAccessKey">
      <MemberSignature Language="C#" Value="protected override void OnAccessKey (System.Windows.Input.AccessKeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAccessKey(class System.Windows.Input.AccessKeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnAccessKey(System.Windows.Input.AccessKeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAccessKey (e As AccessKeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAccessKey(System::Windows::Input::AccessKeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.AccessKeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dcdb0-205">Die Ereignisdaten für das <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" />-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-205">The event data for the <see cref="E:System.Windows.Input.AccessKeyManager.AccessKeyPressed" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcdb0-206">Reagiert, wenn der <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> für dieses Steuerelement aufgerufen wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-206">Responds when the <see cref="P:System.Windows.Controls.AccessText.AccessKey" /> for this control is called.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-207">Wenn <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> ist `true`, ruft diese Methode die basisimplementierung, wodurch dieses den Steuerelementfokus erhalten.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-207">If <xref:System.Windows.Input.AccessKeyEventArgs.IsMultiple%2A> is `true`, this method calls the base implementation, which gives this control focus.</span></span>  <span data-ttu-id="dcdb0-208">Andernfalls löst diese Methode die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-208">Otherwise, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dcdb0-209">Löst das <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />-Routingereignis aus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-209">Raises the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-210">Löst das Steuerelement die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis durch Aufrufen von <xref:System.Windows.UIElement.RaiseEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-210">The control raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event by calling <xref:System.Windows.UIElement.RaiseEvent%2A>.</span></span> <span data-ttu-id="dcdb0-211">Weitere Informationen finden Sie unter [Ereignisübersicht weitergeleitet](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="dcdb0-211">For more information, see [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcdb0-212">Zum Überschreiben <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> werden Sie in einer abgeleiteten Klasse der Basisklasse aufrufen <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> Methode, damit registrierte Delegaten das Ereignis empfangen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-212">When overriding <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> in a derived class, be sure to call the base class’s <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnClick" /> method so that registered delegates receive the event.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnIsPressedChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnIsPressedChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnIsPressedChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnIsPressedChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnIsPressedChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dcdb0-213">Die Daten für <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-213">The data for <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcdb0-214">Wird aufgerufen, wenn die <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" />-Eigenschaft geändert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-214">Called when the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.IsPressed" /> property changes.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dcdb0-215">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-215">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcdb0-216">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.KeyDown" />-Routingereignis bereit, das auftritt, wenn der Benutzer eine Taste drückt, während dieses Steuerelement den Fokus besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-216">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyDown" /> routed event that occurs when the user presses a key while this control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-217">Diese Implementierung kennzeichnet die <xref:System.Windows.UIElement.KeyDown> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft der Ereignisdaten zu `true` beim <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> nicht auf festgelegt ist <xref:System.Windows.Controls.ClickMode.Hover> und einer der folgenden Fälle zutrifft:</span><span class="sxs-lookup"><span data-stu-id="dcdb0-217">This implementation marks the <xref:System.Windows.UIElement.KeyDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and one of the following cases are true:</span></span>  
  
-   <span data-ttu-id="dcdb0-218">Der Benutzer drückt die LEERTASTE.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-218">The user presses the SPACEBAR.</span></span>  
  
-   <span data-ttu-id="dcdb0-219">Der Benutzer die EINGABETASTE drückt und <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> ist `true` für dieses Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-219">The user presses ENTER and <xref:System.Windows.Input.KeyboardNavigation.AcceptsReturn%2A> is `true` for this control.</span></span>  
  
 <span data-ttu-id="dcdb0-220">In allen anderen Fällen wird diese Implementierung zum behandelten Zustand nicht geändert (die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft) von der <xref:System.Windows.UIElement.KeyDown> Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-220">In all other cases, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyDown> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcdb0-221">Wenn Sie außer Kraft setzen <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, rufen Sie immer die grundlegende Implementierung Ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> Implementierung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-221">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="dcdb0-222">Die basisimplementierung aufgerufen wird verhindert, dass Basisklassen Behandlung des Ereignisses mit einem Klassenhandler, der das Laufzeitverhalten der endgültigen Klasse ändern kann.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-222">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="dcdb0-223">Sie können die grundlegende Implementierung entweder vor oder nach Ihrem besondere Behandlung, je nach Ihren Anforderungen aufrufen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-223">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dcdb0-224">Die Ereignisdaten für das <see cref="E:System.Windows.UIElement.KeyUp" />-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-224">The event data for the <see cref="E:System.Windows.UIElement.KeyUp" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcdb0-225">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.KeyUp" />-Routingereignis bereit, das auftritt, wenn der Benutzer eine Taste loslässt, während dieses Steuerelement den Fokus besitzt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-225">Provides class handling for the <see cref="E:System.Windows.UIElement.KeyUp" /> routed event that occurs when the user releases a key while this control has focus.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-226">Diese Implementierung kennzeichnet die <xref:System.Windows.UIElement.KeyUp> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft der Ereignisdaten zu `true` Wenn der Benutzer die LEERTASTE loslässt.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-226">This implementation marks the <xref:System.Windows.UIElement.KeyUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when the user releases the SPACEBAR.</span></span> <span data-ttu-id="dcdb0-227">Diese Implementierung ändert, andernfalls nicht zum behandelten Zustand (die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft) von der <xref:System.Windows.UIElement.KeyUp> Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-227">Otherwise, this implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.KeyUp> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcdb0-228">Wenn Sie außer Kraft setzen <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, rufen Sie immer die grundlegende Implementierung Ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> Implementierung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-228">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="dcdb0-229">Die basisimplementierung aufgerufen wird verhindert, dass Basisklassen Behandlung des Ereignisses mit einem Klassenhandler, der das Laufzeitverhalten der endgültigen Klasse ändern kann.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-229">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="dcdb0-230">Sie können die grundlegende Implementierung entweder vor oder nach Ihrem besondere Behandlung, je nach Ihren Anforderungen aufrufen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-230">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dcdb0-231">Die Ereignisdaten für das <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" />-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-231">The event data for the <see cref="E:System.Windows.IInputElement.LostKeyboardFocus" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcdb0-232">Wird aufgerufen, wenn ein Element den Tastaturfokus verliert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-232">Called when an element loses keyboard focus.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnLostMouseCapture">
      <MemberSignature Language="C#" Value="protected override void OnLostMouseCapture (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostMouseCapture(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostMouseCapture (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostMouseCapture(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dcdb0-233">Die Ereignisdaten für das <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-233">The event data for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcdb0-234">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.LostMouseCapture" />-Routingereignis bereit, das auftritt, wenn dieses Steuerelement keine Meldungen über Mausereignisse mehr empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-234">Provides class handling for the <see cref="E:System.Windows.UIElement.LostMouseCapture" /> routed event that occurs when this control is no longer receiving mouse event messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-235">Diese Implementierung ändert nicht zum behandelten Zustand (die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft) von der <xref:System.Windows.UIElement.LostMouseCapture> Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-235">This implementation does not change the handled state (the <xref:System.Windows.RoutedEventArgs.Handled%2A> property) of the <xref:System.Windows.UIElement.LostMouseCapture> event data.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcdb0-236">Wenn Sie außer Kraft setzen <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, rufen Sie immer die grundlegende Implementierung Ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> Implementierung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-236">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnLostMouseCapture(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="dcdb0-237">Die basisimplementierung aufgerufen wird verhindert, dass Basisklassen Behandlung des Ereignisses mit einem Klassenhandler, der das Laufzeitverhalten der endgültigen Klasse ändern kann.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-237">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="dcdb0-238">Sie können die grundlegende Implementierung entweder vor oder nach Ihrem besondere Behandlung, je nach Ihren Anforderungen aufrufen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-238">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseEnter (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dcdb0-239">Die Ereignisdaten für das <see cref="E:System.Windows.Input.Mouse.MouseEnter" />-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-239">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcdb0-240">Stellt eine Klassenbehandlung für das <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" />-Ereignis bereit, das auftritt, wenn der Mauszeiger in den Bereich des Steuerelements eintritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-240">Provides class handling for the <see cref="P:System.Windows.Controls.Primitives.ButtonBase.ClickMode" /> routed event that occurs when the mouse enters this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-241">Wenn <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> auf festgelegt ist <xref:System.Windows.Controls.ClickMode.Hover>, diese Implementierung kennzeichnet die <xref:System.Windows.UIElement.MouseEnter> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft der Ereignisdaten zu `true` und löst die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-241">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>, this implementation marks the <xref:System.Windows.UIElement.MouseEnter> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` and raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcdb0-242">Wenn Sie außer Kraft setzen <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, rufen Sie immer die grundlegende Implementierung Ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> Implementierung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-242">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseEnter(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="dcdb0-243">Die basisimplementierung aufgerufen wird verhindert, dass Basisklassen Behandlung des Ereignisses mit einem Klassenhandler, der das Laufzeitverhalten der endgültigen Klasse ändern kann.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-243">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="dcdb0-244">Sie können die grundlegende Implementierung entweder vor oder nach Ihrem besondere Behandlung, je nach Ihren Anforderungen aufrufen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-244">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeave (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dcdb0-245">Die Ereignisdaten für das <see cref="E:System.Windows.Input.Mouse.MouseLeave" />-Ereignis.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-245">The event data for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcdb0-246">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.MouseLeave" />-Routingereignis bereit, das auftritt, wenn der Mauszeiger ein Element verlässt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-246">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeave" /> routed event that occurs when the mouse leaves an element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-247">Diese Implementierung kennzeichnet die <xref:System.Windows.UIElement.MouseLeave> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft der Ereignisdaten zu `true` Wenn <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> auf festgelegt ist <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-247">This implementation marks the <xref:System.Windows.UIElement.MouseLeave> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcdb0-248">Wenn Sie außer Kraft setzen <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, rufen Sie immer die grundlegende Implementierung Ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> Implementierung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-248">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeave(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="dcdb0-249">Die basisimplementierung aufgerufen wird verhindert, dass Basisklassen Behandlung des Ereignisses mit einem Klassenhandler, der das Laufzeitverhalten der endgültigen Klasse ändern kann.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-249">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="dcdb0-250">Sie können die grundlegende Implementierung entweder vor oder nach Ihrem besondere Behandlung, je nach Ihren Anforderungen aufrufen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-250">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dcdb0-251">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-251">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcdb0-252">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" />-Routingereignis bereit, das auftritt, wenn die linke Maustaste gedrückt wird, während sich der Mauszeiger auf dem Steuerelement befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-252">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonDown" /> routed event that occurs when the left mouse button is pressed while the mouse pointer is over this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-253">Diese Implementierung kennzeichnet die <xref:System.Windows.UIElement.MouseLeftButtonDown> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft der Ereignisdaten zu `true` beim <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> nicht festgelegt ist, um <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-253">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="dcdb0-254">So reagieren Sie auf die <xref:System.Windows.UIElement.MouseLeftButtonDown> Ereignis, fügen Sie einen Ereignishandler an das <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> Ereignis an, oder rufen <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-254">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="dcdb0-255">Wenn <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> festgelegt ist, um <xref:System.Windows.Controls.ClickMode.Press>, löst diese Methode die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-255">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Press>, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcdb0-256">Wenn Sie außer Kraft setzen <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, rufen Sie immer die grundlegende Implementierung Ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> Implementierung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-256">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="dcdb0-257">Die basisimplementierung aufgerufen wird verhindert, dass Basisklassen Behandlung des Ereignisses mit einem Klassenhandler, der das Laufzeitverhalten der endgültigen Klasse ändern kann.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-257">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="dcdb0-258">Sie können die grundlegende Implementierung entweder vor oder nach Ihrem besondere Behandlung, je nach Ihren Anforderungen aufrufen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-258">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeftButtonUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeftButtonUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeftButtonUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseLeftButtonUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeftButtonUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dcdb0-259">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-259">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcdb0-260">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" />-Routingereignis bereit, das auftritt, wenn die linke Maustaste losgelassen wird, während sich der Mauszeiger auf dem Steuerelement befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-260">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseLeftButtonUp" /> routed event that occurs when the left mouse button is released while the mouse pointer is over this control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-261">Diese Implementierung kennzeichnet die <xref:System.Windows.UIElement.MouseLeftButtonUp> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft der Ereignisdaten zu `true` beim <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> nicht festgelegt ist, um <xref:System.Windows.Controls.ClickMode.Hover>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-261">This implementation marks the <xref:System.Windows.UIElement.MouseLeftButtonUp> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover>.</span></span> <span data-ttu-id="dcdb0-262">So reagieren Sie auf die <xref:System.Windows.UIElement.MouseLeftButtonUp> Ereignis, fügen Sie einen Ereignishandler an das <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> Ereignis an, oder rufen <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-262">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonUp> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonUp> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 <span data-ttu-id="dcdb0-263">Wenn <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> festgelegt ist, um <xref:System.Windows.Controls.ClickMode.Release> ist <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ist `true`, löst diese Methode die <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-263">When <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is set to <xref:System.Windows.Controls.ClickMode.Release> is <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`, this method raises the <xref:System.Windows.Controls.Primitives.ButtonBase.Click> event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcdb0-264">Wenn Sie außer Kraft setzen <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, rufen Sie immer die grundlegende Implementierung Ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> Implementierung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-264">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonUp(System.Windows.Input.MouseButtonEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="dcdb0-265">Die basisimplementierung aufgerufen wird verhindert, dass Basisklassen Behandlung des Ereignisses mit einem Klassenhandler, der das Laufzeitverhalten der endgültigen Klasse ändern kann.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-265">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="dcdb0-266">Sie können die grundlegende Implementierung entweder vor oder nach Ihrem besondere Behandlung, je nach Ihren Anforderungen aufrufen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-266">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="dcdb0-267">Die Ereignisdaten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-267">The event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcdb0-268">Stellt eine Klassenbehandlung für das <see cref="E:System.Windows.UIElement.MouseMove" />-Routingereignis bereit, das auftritt, wenn der Mauszeiger auf dem Element bewegt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-268">Provides class handling for the <see cref="E:System.Windows.UIElement.MouseMove" /> routed event that occurs when the mouse pointer moves while over this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-269">Diese Implementierung kennzeichnet die <xref:System.Windows.UIElement.MouseMove> Ereignis als behandelt, indem die <xref:System.Windows.RoutedEventArgs.Handled%2A> Eigenschaft, der die Ereignisdaten an `true` beim <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> nicht festgelegt ist, um <xref:System.Windows.Controls.ClickMode.Hover> und <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> ist `true`.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-269">This implementation marks the <xref:System.Windows.UIElement.MouseMove> event as handled by setting the <xref:System.Windows.RoutedEventArgs.Handled%2A> property of the event data to `true` when <xref:System.Windows.Controls.Primitives.ButtonBase.ClickMode%2A> is not set to <xref:System.Windows.Controls.ClickMode.Hover> and <xref:System.Windows.Controls.Primitives.ButtonBase.IsPressed%2A> is `true`.</span></span> <span data-ttu-id="dcdb0-270">So reagieren Sie auf die <xref:System.Windows.UIElement.MouseMove> Ereignis, fügen Sie einen Ereignishandler an das <xref:System.Windows.ContentElement.PreviewMouseMove> Ereignis an, oder rufen <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> mit `handledEventsToo` festgelegt `true`.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-270">To respond to the <xref:System.Windows.UIElement.MouseMove> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseMove> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="dcdb0-271">Wenn Sie außer Kraft setzen <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, rufen Sie immer die grundlegende Implementierung Ihrer <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> Implementierung.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-271">If you override <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />, always call the base implementation in your <see cref="M:System.Windows.Controls.Primitives.ButtonBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" /> implementation.</span>
            </span>
            <span data-ttu-id="dcdb0-272">Die basisimplementierung aufgerufen wird verhindert, dass Basisklassen Behandlung des Ereignisses mit einem Klassenhandler, der das Laufzeitverhalten der endgültigen Klasse ändern kann.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-272">Failure to call the base implementation prevents base classes from handling the event with a class handler, which might change the run-time behavior of the final class.</span>
            </span>
            <span data-ttu-id="dcdb0-273">Sie können die grundlegende Implementierung entweder vor oder nach Ihrem besondere Behandlung, je nach Ihren Anforderungen aufrufen.</span>
            <span class="sxs-lookup">
              <span data-stu-id="dcdb0-273">You can call the base implementation either before or after your special handling, depending on your requirements.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnRenderSizeChanged (System.Windows.SizeChangedInfo sizeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo sizeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRenderSizeChanged (sizeInfo As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ sizeInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeInfo" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="sizeInfo">
          <span data-ttu-id="dcdb0-274">Gibt die Größenänderungen an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-274">Specifies the size changes.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dcdb0-275">Wird aufgerufen, wenn sich die Darstellungsgröße eines Steuerelements ändert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dcdb0-275">Called when the rendered size of a control changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dcdb0-276">Überschreibt die <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> Methode der <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="dcdb0-276">Overrides the <xref:System.Windows.Controls.Primitives.ButtonBase.OnRenderSizeChanged%2A> method of the <xref:System.Windows.UIElement>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>