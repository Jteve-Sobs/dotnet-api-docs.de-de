<Type Name="TextBoxBase" FullName="System.Windows.Controls.Primitives.TextBoxBase">
  <Metadata><Meta Name="ms.openlocfilehash" Value="90375dd7091aaca8578ac8d34924e40c04707c5c" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83504924" /></Metadata><TypeSignature Language="C#" Value="public abstract class TextBoxBase : System.Windows.Controls.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TextBoxBase extends System.Windows.Controls.Control" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Primitives.TextBoxBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TextBoxBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextBoxBase abstract : System::Windows::Controls::Control" />
  <TypeSignature Language="F#" Value="type TextBoxBase = class&#xA;    inherit Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract TextBoxBase extends System.Windows.Controls.Control" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.Text)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.TemplatePart(Name="PART_ContentHost", Type=typeof(System.Windows.FrameworkElement))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="b453d-101">Eine abstrakte Basisklasse, die Funktionen von Steuerelementen für die Textbearbeitung bereitstellt, unter anderem <see cref="T:System.Windows.Controls.TextBox" /> und <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-101">An abstract base class that provides functionality for text editing controls, including <see cref="T:System.Windows.Controls.TextBox" /> and <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-102">Im folgenden Beispiel wird veranschaulicht, wie das abgeleitete <xref:System.Windows.Controls.TextBox> Objekt in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-102">The following example demonstrates how to use the derived <xref:System.Windows.Controls.TextBox> object in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 <span data-ttu-id="b453d-103">Im folgenden Beispiel wird veranschaulicht, wie das abgeleitete <xref:System.Windows.Controls.RichTextBox>-Objekt im Code verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-103">The following example demonstrates how to use the derived <xref:System.Windows.Controls.RichTextBox> object in code.</span></span>  
  
 [!code-csharp[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_richtextbox_mouseupdown)]
 [!code-vb[richtextboxsnippets#_RichTextBox_MouseUpDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_richtextbox_mouseupdown)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Controls.TextBox" />
    <altmember cref="T:System.Windows.Controls.RichTextBox" />
  </Docs>
  <Members>
    <Member MemberName="AcceptsReturn">
      <MemberSignature Language="C#" Value="public bool AcceptsReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsReturn" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsReturn { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsReturn : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-104">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, wie das Steuerelement zur Textbearbeitung reagiert, wenn Benutzer die EINGABETASTE drücken.</span><span class="sxs-lookup"><span data-stu-id="b453d-104">Gets or sets a value that indicates how the text editing control responds when the user presses the ENTER key.</span></span></summary>
        <value><span data-ttu-id="b453d-105"><see langword="true" />, wenn durch Drücken der EINGABETASTE an der aktuellen Cursorposition eine neue Zeile eingefügt wird, andernfalls wird die EINGABETASTE ignoriert.</span><span class="sxs-lookup"><span data-stu-id="b453d-105"><see langword="true" /> if pressing the ENTER key inserts a new line at the current cursor position; otherwise, the ENTER key is ignored.</span></span> <span data-ttu-id="b453d-106">Der Standardwert ist <see langword="false" /> für <see cref="T:System.Windows.Controls.TextBox" /> und <see langword="true" /> für <see cref="T:System.Windows.Controls.RichTextBox" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-106">The default value is <see langword="false" /> for <see cref="T:System.Windows.Controls.TextBox" /> and <see langword="true" /> for <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-107">Die EINGABETASTE entspricht `VK_RETURN` Code des virtuellen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="b453d-107">The ENTER key corresponds to `VK_RETURN` virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsReturn"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b453d-108">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="b453d-108">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b453d-109">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="b453d-109">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty>|  
|<span data-ttu-id="b453d-110">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="b453d-110">Metadata properties set to `true`</span></span>|<span data-ttu-id="b453d-111">Keine</span><span class="sxs-lookup"><span data-stu-id="b453d-111">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
      </Docs>
    </Member>
    <Member MemberName="AcceptsReturnProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsReturnProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsReturnProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsReturnProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsReturnProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsReturnProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturnProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-112">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-112">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTab">
      <MemberSignature Language="C#" Value="public bool AcceptsTab { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AcceptsTab" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />
      <MemberSignature Language="VB.NET" Value="Public Property AcceptsTab As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AcceptsTab { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AcceptsTab : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-113">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, wie das Steuerelement zur Textbearbeitung reagiert, wenn Benutzer die Tab-Taste drücken.</span><span class="sxs-lookup"><span data-stu-id="b453d-113">Gets or sets a value that indicates how the text editing control responds when the user presses the TAB key.</span></span></summary>
        <value><span data-ttu-id="b453d-114"><see langword="true" />, wenn durch Drücken der TABULATORTASTE ein Tabstoppzeichen an der aktuellen Cursorposition eingefügt wird; <see langword="false" />, wenn durch Drücken der TABULATORTASTE der Fokus auf das nächste Steuerelement in der Aktivierreihenfolge verschoben und kein Tabstoppzeichen eingefügt wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-114"><see langword="true" /> if pressing the TAB key inserts a tab character at the current cursor position; <see langword="false" /> if pressing the TAB key moves the focus to the next control that is marked as a tab stop and does not insert a tab character.</span></span>  
  
<span data-ttu-id="b453d-115">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-115">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-116">Die Tab-Taste entspricht **VK_TAB** Code des virtuellen Schlüssels.</span><span class="sxs-lookup"><span data-stu-id="b453d-116">The TAB key corresponds to **VK_TAB** virtual-key code.</span></span>  
  
<a name="dependencyPropertyInfo_AcceptsTab"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b453d-117">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="b453d-117">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b453d-118">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="b453d-118">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty>|  
|<span data-ttu-id="b453d-119">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="b453d-119">Metadata properties set to `true`</span></span>|<span data-ttu-id="b453d-120">Keine</span><span class="sxs-lookup"><span data-stu-id="b453d-120">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptsTabProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AcceptsTabProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AcceptsTabProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AcceptsTabProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AcceptsTabProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AcceptsTabProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.AcceptsTabProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-121">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-121">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppendText">
      <MemberSignature Language="C#" Value="public void AppendText (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendText(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.AppendText(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendText (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendText(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.AppendText : string -&gt; unit" Usage="textBoxBase.AppendText textData" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="b453d-122">Eine Zeichenfolge, die den Text angibt, der an den aktuellen Inhalt des Textsteuerelements angefügt wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-122">A string that specifies the text to append to the current contents of the text control.</span></span></param>
        <summary><span data-ttu-id="b453d-123">Fügt an den Inhalt eines Textsteuerelements eine Zeichenfolge an.</span><span class="sxs-lookup"><span data-stu-id="b453d-123">Appends a string to the contents of a text control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-124">Die <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A>-Methode ermöglicht dem Benutzer das Anfügen von Text an den Inhalt eines Text Steuer Elements, ohne die Text Verkettung zu verwenden. Dies kann zu einer besseren Leistung führen, wenn viele Verkettungen erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="b453d-124">The <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method enables the user to append text to the contents of a text control without using text concatenation, which, can yield better performance when many concatenations are required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b453d-125">Im folgenden Beispiel wird die Verwendung der <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-125">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.AppendText%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase11)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelection">
      <MemberSignature Language="C#" Value="public bool AutoWordSelection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoWordSelection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoWordSelection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoWordSelection { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoWordSelection : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-126">Ruft einen Wert ab bzw. legt einen Wert fest, der bestimmt, ob der Rest eines Wortes markiert wird, wenn ein Benutzer einen Teil des Wortes durch Ziehen mit der Maus auswählt.</span><span class="sxs-lookup"><span data-stu-id="b453d-126">Gets or sets a value that determines whether when a user selects part of a word by dragging across it with the mouse, the rest of the word is selected.</span></span></summary>
        <value><span data-ttu-id="b453d-127"><see langword="true" />, wenn die automatische Wortauswahl aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-127"><see langword="true" /> if automatic word selection is enabled; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="b453d-128">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-128">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-129">Wenn <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> aktiviert ist, wird jedes Mal, wenn ein Teil eines Worts durch den Benutzer ausgewählt wird, der einen Teil eines Worts mithilfe der Maus zieht, die Auswahl automatisch um das gesamte Wort erweitert.</span><span class="sxs-lookup"><span data-stu-id="b453d-129">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is enabled, every time that part of a word is selected by the user dragging over part of a word using the mouse, the selection is automatically expanded to include the whole word.</span></span> <span data-ttu-id="b453d-130">Der Benutzer kann die automatische Auswahl eines ganzen Worts überschreiben, indem er die Richtung, in der der Mauszeiger gezogen wird, beim Treffen der Auswahl vorübergehend umkehren.</span><span class="sxs-lookup"><span data-stu-id="b453d-130">The user can override automatic selection of a whole word by momentarily reversing the direction in which the mouse pointer is being dragged as the selection is made.</span></span> <span data-ttu-id="b453d-131">Durch diese Aktion wird die automatische Auswahl des gesamten Worts nicht mehr unterstützt, und der Benutzer ist in der Lage, ein Teil oder das gesamte Wort genau auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="b453d-131">This action undoes the automatic selection of the whole word, and enables the user to precisely select part or all of the word.</span></span>  
  
 <span data-ttu-id="b453d-132">Wenn <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> deaktiviert ist, wird eine Auswahl nicht automatisch um ganze Wörter erweitert. in diesem Fall werden die genauen Auswahl immer manuell festgelegt.</span><span class="sxs-lookup"><span data-stu-id="b453d-132">When <xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection%2A> is disabled, a selection is not automatically expanded to include whole words; in this case, precise selections are always determined manually.</span></span>  
  
 > [!NOTE] 
 > <span data-ttu-id="b453d-133">Die automatische Auswahl wirkt sich nicht auf das erste Wort aus, auf das der Benutzer zieht.</span><span class="sxs-lookup"><span data-stu-id="b453d-133">Auto selection does not affect the first word that the user drags across.</span></span> <span data-ttu-id="b453d-134">Dies geschieht erst, nachdem diese erste Wort Grenze überschritten wurde, sodass die automatische Auswahl wirksam wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-134">It is only after this first word boundary is crossed that auto selection takes effect.</span></span>  
  
<a name="dependencyPropertyInfo_AutoWordSelection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b453d-135">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="b453d-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b453d-136">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="b453d-136">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty>|  
|<span data-ttu-id="b453d-137">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="b453d-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="b453d-138">Keine</span><span class="sxs-lookup"><span data-stu-id="b453d-138">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoWordSelectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty AutoWordSelectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty AutoWordSelectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly AutoWordSelectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ AutoWordSelectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable AutoWordSelectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-139">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-139">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.AutoWordSelection" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginChange">
      <MemberSignature Language="C#" Value="public void BeginChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub BeginChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginChange();" />
      <MemberSignature Language="F#" Value="member this.BeginChange : unit -&gt; unit" Usage="textBoxBase.BeginChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-140">Beginnt einen Änderungsblock.</span><span class="sxs-lookup"><span data-stu-id="b453d-140">Begins a change block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks

 > [!NOTE] 
 > <span data-ttu-id="b453d-141">Wenn Sie <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>aufgerufen haben, müssen Sie auch <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> zum Vervollständigen des Änderungs Blocks aufruft, andernfalls wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="b453d-141">When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="b453d-142">Durch einen Änderungs Block werden mehrere Änderungen logisch in eine einzelne Rückgängig-Einheit gruppiert, und es wird verhindert, dass Textinhalte oder Auswahl Änderungs Ereignisse bis nach dem Änderungs Block ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="b453d-142">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="b453d-143">Auf diese Weise können Sie mehrere bearbeitvorgänge an das Text-Element vornehmen, ohne dass die Gefahr besteht, dass das Textelement gleichzeitig von einem anderen Listener geändert wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-143">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another listener.</span></span> <span data-ttu-id="b453d-144">Wenn Sie die <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A>-Methode aufrufen, wird ein Änderungs Block erstellt.</span><span class="sxs-lookup"><span data-stu-id="b453d-144">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="b453d-145">Wenn Sie die <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>-Methode aufrufen, werden alle nachfolgenden Änderungen in den angegebenen Änderungs Block eingeschlossen, bis ein entsprechender Aufruf der <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A>-Methode erfolgt.</span><span class="sxs-lookup"><span data-stu-id="b453d-145">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b453d-146">Im folgenden Beispiel wird gezeigt, wie die Methoden <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> und <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> verwendet werden, um einen Änderungs Block zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="b453d-146">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      </Docs>
    </Member>
    <Member MemberName="CanRedo">
      <MemberSignature Language="C#" Value="public bool CanRedo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRedo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanRedo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanRedo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRedo : bool" Usage="System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-147">Ruft einen Wert ab, der angibt, ob die letzte Rückgängig-Aktion wiederhergestellt werden kann.</span><span class="sxs-lookup"><span data-stu-id="b453d-147">Gets a value that indicates whether the most recent undo action can be redone.</span></span></summary>
        <value><span data-ttu-id="b453d-148"><see langword="true" />, wenn die letzte Rückgängig-Aktion wiederhergestellt werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-148"><see langword="true" /> if the most recent undo action can be redone; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="b453d-149">Diese Eigenschaft hat keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="b453d-149">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-150">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A>-Eigenschaft verwendet wird, um zu bestimmen, ob die letzte Rückgängig-Aktion wiederholt werden kann.</span><span class="sxs-lookup"><span data-stu-id="b453d-150">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanRedo%2A> property to determine whether the most recent undo action can be redone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CanUndo">
      <MemberSignature Language="C#" Value="public bool CanUndo { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUndo" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanUndo As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanUndo { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUndo : bool" Usage="System.Windows.Controls.Primitives.TextBoxBase.CanUndo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-151">Ruft einen Wert ab, der angibt, ob die letzte Aktion rückgängig gemacht werden kann.</span><span class="sxs-lookup"><span data-stu-id="b453d-151">Gets a value that indicates whether the most recent action can be undone.</span></span></summary>
        <value><span data-ttu-id="b453d-152"><see langword="true" />, wenn die letzte Aktion rückgängig gemacht werden kann. Andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-152"><see langword="true" /> if the most recent action can be undone; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="b453d-153">Diese Eigenschaft hat keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="b453d-153">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-154">Im folgenden Codebeispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A>-Eigenschaft verwendet wird, um zu bestimmen, ob die letzte Aktion rückgängig gemacht werden kann.</span><span class="sxs-lookup"><span data-stu-id="b453d-154">The following code example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.CanUndo%2A> property to determine whether the most recent action can be undone.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      </Docs>
    </Member>
    <Member MemberName="CaretBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush CaretBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush CaretBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property CaretBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ CaretBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CaretBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-155">Ruft den Pinsel ab, mit dem das Caretzeichen des Textfelds gezeichnet wird, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="b453d-155">Gets or sets the brush that is used to paint the caret of the text box.</span></span></summary>
        <value><span data-ttu-id="b453d-156">Der Pinsel, mit dem das Caretzeichen des Textfelds gezeichnet wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-156">The brush that is used to paint the caret of the text box.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-157">Im folgenden Beispiel wird eine <xref:System.Windows.Controls.TextBox> erstellt, und der Text "This is some Text" wird hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="b453d-157">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="b453d-158">Im Beispiel werden die <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A>-und <xref:System.Windows.Controls.Control.Foreground%2A> Eigenschaften eines <xref:System.Windows.Controls.TextBox> auf Blau festgelegt.</span><span class="sxs-lookup"><span data-stu-id="b453d-158">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush%2A> and <xref:System.Windows.Controls.Control.Foreground%2A> properties of a <xref:System.Windows.Controls.TextBox> to blue.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="b453d-159">Im vorangehenden Beispiel wird eine Ausgabe erzeugt, die der folgenden Abbildung ähnelt.</span><span class="sxs-lookup"><span data-stu-id="b453d-159">The preceding example produces output that is like the following illustration.</span></span>  
  
 <span data-ttu-id="b453d-160">![TextBox, bei der CaretBrush auf Blau festgelegt ist.](~/add/media/textboxcaretbrush.png "TextBox mit CaretBrush auf Blau festgelegt.")</span><span class="sxs-lookup"><span data-stu-id="b453d-160">![TextBox with CaretBrush set to blue.](~/add/media/textboxcaretbrush.png "TextBox with CaretBrush set to blue.")</span></span>  
<span data-ttu-id="b453d-161">TextBox, bei der CaretBrush auf Blau festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-161">TextBox with CaretBrush set to blue</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaretBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CaretBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CaretBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CaretBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CaretBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CaretBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.CaretBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-162">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-162">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.CaretBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public void Copy ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Copy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      <MemberSignature Language="VB.NET" Value="Public Sub Copy ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Copy();" />
      <MemberSignature Language="F#" Value="member this.Copy : unit -&gt; unit" Usage="textBoxBase.Copy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-163">Kopiert die aktuelle Auswahl des Textbearbeitungssteuerelements in das <see cref="T:System.Windows.Clipboard" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-163">Copies the current selection of the text editing control to the <see cref="T:System.Windows.Clipboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-164">Bei einem Kopiervorgang wird der ausgewählte Text in den <xref:System.Windows.Clipboard>kopiert.</span><span class="sxs-lookup"><span data-stu-id="b453d-164">A copy operation copies the selected text to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="b453d-165">Beachten Sie, dass der ausgewählte Text nicht aus dem Textbearbeitungs Steuerelement im Prozess entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-165">Note that the selected text is not removed from the text editing control in the process.</span></span> <span data-ttu-id="b453d-166">Mit einer ähnlichen Methode, <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, wird die aktuelle Auswahl in den <xref:System.Windows.Clipboard> verschoben und der ausgewählte Text aus dem Textbearbeitungs Steuerelement im Prozess entfernt.</span><span class="sxs-lookup"><span data-stu-id="b453d-166">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>, moves the current selection to the <xref:System.Windows.Clipboard> and removes the selected text from the text editing control in the process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b453d-167">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>-Methode verwendet wird, um den Text zu kopieren, der in einem <xref:System.Windows.Controls.TextBox>-Steuerelement ausgewählt ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-167">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A> method to copy the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase4)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="Cut">
      <MemberSignature Language="C#" Value="public void Cut ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Cut() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cut ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cut();" />
      <MemberSignature Language="F#" Value="member this.Cut : unit -&gt; unit" Usage="textBoxBase.Cut " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-168">Entfernt die aktuelle Auswahl aus dem Textbearbeitungssteuerelement und kopiert diese in das <see cref="T:System.Windows.Clipboard" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-168">Removes the current selection from the text editing control and copies it to the <see cref="T:System.Windows.Clipboard" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-169">Durch einen Ausschneide Vorgang wird die aktuelle Auswahl aus dem Textbearbeitungs Steuerelement entfernt und in den <xref:System.Windows.Clipboard>kopiert.</span><span class="sxs-lookup"><span data-stu-id="b453d-169">A cut operation removes the current selection from the text editing control and copies it to the <xref:System.Windows.Clipboard>.</span></span> <span data-ttu-id="b453d-170">Beachten Sie, dass der ausgewählte Text aus dem Textbearbeitungs Steuerelement im Prozess entfernt (ausgeschnitten) wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-170">Note that the selected text is removed (cut) from the text editing control in the process.</span></span> <span data-ttu-id="b453d-171">Mit einer ähnlichen Methode, <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, wird die aktuelle Auswahl in die Zwischenablage kopiert, aber der ausgewählte Text wird nicht aus dem Textbearbeitungs Steuerelement entfernt.</span><span class="sxs-lookup"><span data-stu-id="b453d-171">A similar method, <xref:System.Windows.Controls.Primitives.TextBoxBase.Copy%2A>, copies the current selection to the Clipboard, but does not remove the selected text from the text editing control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b453d-172">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A>-Methode verwendet wird, um den in einem <xref:System.Windows.Controls.TextBox>-Steuerelement ausgewählten Text zu löschen.</span><span class="sxs-lookup"><span data-stu-id="b453d-172">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Cut%2A> method to delete the text that is selected in a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase5)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      </Docs>
    </Member>
    <Member MemberName="DeclareChangeBlock">
      <MemberSignature Language="C#" Value="public IDisposable DeclareChangeBlock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable DeclareChangeBlock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
      <MemberSignature Language="VB.NET" Value="Public Function DeclareChangeBlock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ DeclareChangeBlock();" />
      <MemberSignature Language="F#" Value="member this.DeclareChangeBlock : unit -&gt; IDisposable" Usage="textBoxBase.DeclareChangeBlock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-173">Erstellt einen Änderungsblock.</span><span class="sxs-lookup"><span data-stu-id="b453d-173">Creates a change block.</span></span></summary>
        <returns><span data-ttu-id="b453d-174">Ein <see cref="T:System.IDisposable" />-Objekt, das auf einen neuen Änderungsblock verweist.</span><span class="sxs-lookup"><span data-stu-id="b453d-174">An <see cref="T:System.IDisposable" /> object that refers to a new change block.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-175">Durch einen Änderungs Block werden mehrere Änderungen logisch in eine einzelne Rückgängig-Einheit gruppiert.</span><span class="sxs-lookup"><span data-stu-id="b453d-175">A change block logically groups multiple changes into a single undo unit.</span></span> <span data-ttu-id="b453d-176">Wenn Sie die <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A>-Methode aufrufen, wird ein Änderungs Block erstellt.</span><span class="sxs-lookup"><span data-stu-id="b453d-176">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="b453d-177">Wenn Sie die <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>-Methode aufrufen, werden alle nachfolgenden Änderungen in den angegebenen Änderungs Block eingeschlossen, bis ein entsprechender Aufruf der <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A>-Methode erfolgt.</span><span class="sxs-lookup"><span data-stu-id="b453d-177">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="EndChange">
      <MemberSignature Language="C#" Value="public void EndChange ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndChange ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndChange();" />
      <MemberSignature Language="F#" Value="member this.EndChange : unit -&gt; unit" Usage="textBoxBase.EndChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-178">Beendet einen Änderungsblock.</span><span class="sxs-lookup"><span data-stu-id="b453d-178">Ends a change block.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 > [!NOTE] 
 > <span data-ttu-id="b453d-179">Wenn Sie <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>aufgerufen haben, müssen Sie auch <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> zum Vervollständigen des Änderungs Blocks aufruft, andernfalls wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="b453d-179">When you call <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>, you must also call <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> to complete the change block otherwise an exception will be thrown.</span></span>  
  
 <span data-ttu-id="b453d-180">Durch einen Änderungs Block werden mehrere Änderungen logisch in eine einzelne Rückgängig-Einheit gruppiert, und es wird verhindert, dass Textinhalte oder Auswahl Änderungs Ereignisse bis nach dem Änderungs Block ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="b453d-180">A change block logically groups multiple changes into a single undo unit and prevents text content or selection change events from being raised until after the change block.</span></span> <span data-ttu-id="b453d-181">Auf diese Weise können Sie mehrere bearbeitvorgänge an das Text-Element vornehmen, ohne dass die Gefahr besteht, dass das Textelement gleichzeitig von einem anderen Prozess geändert wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-181">This way you can make multiple edits to the text element without the danger of the text element being changed at the same time by another process.</span></span> <span data-ttu-id="b453d-182">Wenn Sie die <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A>-Methode aufrufen, wird ein Änderungs Block erstellt.</span><span class="sxs-lookup"><span data-stu-id="b453d-182">A change block is created by calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock%2A> method.</span></span> <span data-ttu-id="b453d-183">Wenn Sie die <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A>-Methode aufrufen, werden alle nachfolgenden Änderungen in den angegebenen Änderungs Block eingeschlossen, bis ein entsprechender Aufruf der <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A>-Methode erfolgt.</span><span class="sxs-lookup"><span data-stu-id="b453d-183">Calling the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> method causes all subsequent changes to be included in the specified change block until a corresponding call to the <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> method is made.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b453d-184">Im folgenden Beispiel wird gezeigt, wie die Methoden <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> und <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> verwendet werden, um einen Änderungs Block zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="b453d-184">The following example shows how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.BeginChange%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.EndChange%2A> methods to create a change block.</span></span>  
  
 [!code-csharp[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/CSharp/BeginChangeEndChangeExample.cs#beginchangeendchangecodeexampleinline1)]
 [!code-vb[TextBoxMiscSnippets_procedural_snip#BeginChangeEndChangeCodeExampleInline1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxMiscSnippets_procedural_snip/visualbasic/beginchangeendchangeexample.vb#beginchangeendchangecodeexampleinline1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ExtentHeight">
      <MemberSignature Language="C#" Value="public double ExtentHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtentHeight : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-185">Ruft die vertikale Größe des sichtbaren Inhaltsbereichs ab.</span><span class="sxs-lookup"><span data-stu-id="b453d-185">Gets the vertical size of the visible content area.</span></span></summary>
        <value><span data-ttu-id="b453d-186">Ein Gleitkommawert, der die vertikale Größe des sichtbaren Inhaltsbereichs angibt, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b453d-186">A floating-point value that specifies the vertical size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="b453d-187">Der Wert dieser Eigenschaft ist 0,0, wenn das Textbearbeitungssteuerelement nicht für die Unterstützung von Bildläufen konfiguriert ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-187">The value of this property is 0.0 if the text-editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="b453d-188">Diese Eigenschaft hat keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="b453d-188">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-189">Im folgenden Beispiel wird veranschaulicht, wie der Wert der <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A>-Eigenschaft gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-189">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ExtentWidth">
      <MemberSignature Language="C#" Value="public double ExtentWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ExtentWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExtentWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ExtentWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ExtentWidth : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-190">Ruft die horizontale Größe des sichtbaren Inhaltsbereichs ab.</span><span class="sxs-lookup"><span data-stu-id="b453d-190">Gets the horizontal size of the visible content area.</span></span></summary>
        <value><span data-ttu-id="b453d-191">Ein Gleitkommawert, der die horizontale Größe des sichtbaren Inhaltsbereichs angibt, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b453d-191">A floating-point value that specifies the horizontal size of the visible content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="b453d-192">Der Wert dieser Eigenschaft ist 0,0, wenn das Textbearbeitungssteuerelement nicht für die Unterstützung von Bildläufen konfiguriert ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-192">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="b453d-193">Diese Eigenschaft hat keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="b453d-193">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-194">Im folgenden Beispiel wird veranschaulicht, wie der Wert der <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A>-Eigenschaft gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-194">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ExtentWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalOffset">
      <MemberSignature Language="C#" Value="public double HorizontalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 HorizontalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HorizontalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double HorizontalOffset { double get(); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalOffset : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-195">Ruft die horizontale Bildlaufposition ab oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="b453d-195">Gets or sets the horizontal scroll position.</span></span></summary>
        <value><span data-ttu-id="b453d-196">Ein Gleitkommawert, der die horizontale Bildlaufposition angibt, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b453d-196">A floating-point value that specifies the horizontal scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="b453d-197">Durch Festlegen dieser Eigenschaft wird im Textbearbeitungssteuerelement ein Bildlauf bis zum angegebenen horizontalen Offset durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="b453d-197">Setting this property causes the text editing control to scroll to the specified horizontal offset.</span></span> <span data-ttu-id="b453d-198">Beim Lesen dieser Eigenschaft wird der aktuelle horizontale Offset zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="b453d-198">Reading this property returns the current horizontal offset.</span></span>  
  
<span data-ttu-id="b453d-199">Der Wert dieser Eigenschaft ist 0,0, wenn das Textbearbeitungssteuerelement nicht für die Unterstützung von Bildläufen konfiguriert ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-199">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="b453d-200">Diese Eigenschaft hat keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="b453d-200">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-201">Der horizontale Offset wird von der rechten Seite des sichtbaren Text Bereichs gemessen, wenn Sie im Modus von rechts nach links arbeiten. Andernfalls wird Sie von links gemessen.</span><span class="sxs-lookup"><span data-stu-id="b453d-201">The horizontal offset is measured from the right of the visible text area if you are working in right-to-left mode; otherwise, it is measured from the left.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b453d-202">Im folgenden Beispiel wird veranschaulicht, wie der Wert der <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A>-Eigenschaft gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-202">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b453d-203">Es wird versucht, diese Eigenschaft auf einen negativen Wert festzulegen.</span><span class="sxs-lookup"><span data-stu-id="b453d-203">An attempt is made to set this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility HorizontalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility HorizontalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-204">Ruft einen Wert ab, der angibt, ob eine horizontale Bildlaufleiste angezeigt wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="b453d-204">Gets or sets a value that indicates whether a horizontal scroll bar is shown.</span></span></summary>
        <value><span data-ttu-id="b453d-205">Ein von der <see cref="T:System.Windows.Controls.ScrollBarVisibility" />-Enumeration definierter Wert.</span><span class="sxs-lookup"><span data-stu-id="b453d-205">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span></span>  
  
<span data-ttu-id="b453d-206">Der Standardwert ist <see cref="F:System.Windows.Visibility.Hidden" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-206">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_HorizontalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b453d-207">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="b453d-207">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b453d-208">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="b453d-208">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty>|  
|<span data-ttu-id="b453d-209">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="b453d-209">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="b453d-210">Im folgenden Beispiel wird veranschaulicht, wie der Wert der <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A>-Eigenschaft mit [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-210">The following example demonstrates how to set the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility%2A> property by using [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-211">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-211">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabled">
      <MemberSignature Language="C#" Value="public bool IsInactiveSelectionHighlightEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsInactiveSelectionHighlightEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInactiveSelectionHighlightEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsInactiveSelectionHighlightEnabled : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-212">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das Textfeld ausgewählten Text anzeigt, wenn das Textfeld nicht den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="b453d-212">Gets or sets a value that indicates whether the text box displays selected text when the text box does not have focus.</span></span></summary>
        <value><span data-ttu-id="b453d-213"><see langword="true" />, wenn das Textfeld markierten Text anzeigt, wenn das Textfeld keinen Fokus besitzt; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-213"><see langword="true" /> if the text box displays selected text when the text box does not have focus; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="b453d-214">Der registrierte Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-214">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="b453d-215">Weitere Informationen dazu, was den Wert beeinflussen kann, finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)(Vorrang von Abhängigkeitseigenschaftswerten).</span><span class="sxs-lookup"><span data-stu-id="b453d-215">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsInactiveSelectionHighlightEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b453d-216">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="b453d-216">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b453d-217">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="b453d-217">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty>|  
|<span data-ttu-id="b453d-218">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="b453d-218">Metadata properties set to `true`</span></span>|<span data-ttu-id="b453d-219">Keine</span><span class="sxs-lookup"><span data-stu-id="b453d-219">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInactiveSelectionHighlightEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsInactiveSelectionHighlightEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsInactiveSelectionHighlightEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsInactiveSelectionHighlightEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-220">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-220">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsInactiveSelectionHighlightEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-221">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob das Steuerelement zur Textbearbeitung für einen Benutzer, der das Steuerelement interaktiv verwendet, schreibgeschützt ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-221">Gets or sets a value that indicates whether the text editing control is read-only to a user interacting with the control.</span></span></summary>
        <value><span data-ttu-id="b453d-222"><see langword="true" />, wenn der Inhalt des Textbearbeitungssteuerelements für einen Benutzer schreibgeschützt ist, andernfalls kann der Inhalt des Textbearbeitungssteuerelements vom Benutzer bearbeitet werden.</span><span class="sxs-lookup"><span data-stu-id="b453d-222"><see langword="true" /> if the contents of the text editing control are read-only to a user; otherwise, the contents of the text editing control can be modified by the user.</span></span> <span data-ttu-id="b453d-223">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-223">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-224">Dieser Wert wirkt sich nur auf einen Benutzer aus, der mit dem-Steuerelement interagiert.</span><span class="sxs-lookup"><span data-stu-id="b453d-224">This value only affects a user who is interacting with the control.</span></span> <span data-ttu-id="b453d-225">Der Inhalt eines Textbearbeitungs Steuer Elements kann immer Programm gesteuert geändert werden.</span><span class="sxs-lookup"><span data-stu-id="b453d-225">The contents of a text editing control can always be modified programmatically.</span></span>  
  
<a name="dependencyPropertyInfo_IsReadOnly"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b453d-226">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="b453d-226">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b453d-227">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="b453d-227">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty>|  
|<span data-ttu-id="b453d-228">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="b453d-228">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisible">
      <MemberSignature Language="C#" Value="public bool IsReadOnlyCaretVisible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnlyCaretVisible" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReadOnlyCaretVisible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnlyCaretVisible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnlyCaretVisible : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-229">Ruft einen Wert ab, der angibt, ob in einem schreibgeschützten Textfeld ein Caretzeichen angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-229">Gets or sets a value that indicates whether a read-only text box displays a caret.</span></span></summary>
        <value><span data-ttu-id="b453d-230"><see langword="true" />, wenn in einem schreibgeschützten Textfeld ein Caretzeichen angezeigt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-230"><see langword="true" /> if a read-only text box displays a caret; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b453d-231">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-231">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-232">Wenn <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> `true`ist, kann ein Benutzer Text weiterhin auswählen und kopieren.</span><span class="sxs-lookup"><span data-stu-id="b453d-232">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `true`, a user can still select and copy text.</span></span> <span data-ttu-id="b453d-233">Wenn die <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A>-Eigenschaft ebenfalls auf `true`festgelegt ist, wird im Textfeld ein Caretzeichen angezeigt, wenn das Textfeld den Tastaturfokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="b453d-233">If the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property is also set to `true`, a caret will appear in the text box when the text box has keyboard focus.</span></span> <span data-ttu-id="b453d-234">Wenn <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> `false`ist, hat die Eigenschaft <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> keine Auswirkung.</span><span class="sxs-lookup"><span data-stu-id="b453d-234">When <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly%2A> is `false`, the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible%2A> property has no effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyCaretVisibleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyCaretVisibleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyCaretVisibleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyCaretVisibleProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisibleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-235">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-235">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyCaretVisible" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnlyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsReadOnlyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsReadOnlyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsReadOnlyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsReadOnlyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsReadOnlyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsReadOnlyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-236">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-236">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsReadOnly" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActive">
      <MemberSignature Language="C#" Value="public bool IsSelectionActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSelectionActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSelectionActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSelectionActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSelectionActive : bool" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-237">Ruft einen Wert ab, der angibt, ob das Textfeld den Fokus besitzt und ausgewählten Text hat.</span><span class="sxs-lookup"><span data-stu-id="b453d-237">Gets a value that indicates whether the text box has focus and selected text.</span></span></summary>
        <value><span data-ttu-id="b453d-238"><see langword="true" />, wenn das Textfeld den Fokus und markierten Text besitzt; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-238"><see langword="true" /> if the text box has focus and selected text; otherwise, <see langword="false" />.</span></span>  
  
<span data-ttu-id="b453d-239">Der registrierte Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-239">The registered default is <see langword="false" />.</span></span> <span data-ttu-id="b453d-240">Weitere Informationen dazu, was den Wert beeinflussen kann, finden Sie unter [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md)(Vorrang von Abhängigkeitseigenschaftswerten).</span><span class="sxs-lookup"><span data-stu-id="b453d-240">For more information about what can influence the value, see [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_IsSelectionActive"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b453d-241">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="b453d-241">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b453d-242">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="b453d-242">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty>|  
|<span data-ttu-id="b453d-243">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="b453d-243">Metadata properties set to `true`</span></span>|<span data-ttu-id="b453d-244">Keine</span><span class="sxs-lookup"><span data-stu-id="b453d-244">None</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsSelectionActiveProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsSelectionActiveProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsSelectionActiveProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsSelectionActiveProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsSelectionActiveProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsSelectionActiveProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActiveProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-245">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-245">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsSelectionActive" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabled">
      <MemberSignature Language="C#" Value="public bool IsUndoEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUndoEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsUndoEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUndoEnabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsUndoEnabled : bool with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-246">Ruft einen Wert ab bzw. legt einen Wert fest, der angibt, ob die Rollbackaktion für das Steuerelement zur Textbearbeitung unterstützt wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-246">Gets or sets a value that indicates whether undo support is enabled for the text-editing control.</span></span></summary>
        <value><span data-ttu-id="b453d-247"><see langword="true" />, wenn die Unterstützung für Rückgängig-Aktionen aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-247"><see langword="true" /> if undo support is enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b453d-248">Der Standardwert ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-248">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-249">Durch Festlegen dieser Eigenschaft auf `false` wird der Rückgängig-Stapel gelöscht.</span><span class="sxs-lookup"><span data-stu-id="b453d-249">Setting this property to `false` clears the undo stack.</span></span> <span data-ttu-id="b453d-250">Wenn Sie rückgängig deaktivieren und dann erneut aktivieren, funktionieren rückgängig-Befehle trotzdem nicht, da der Rückgängig-Stapel geleert wurde, als Sie rückgängig deaktiviert haben.</span><span class="sxs-lookup"><span data-stu-id="b453d-250">Therefore, if you disable undo and then re-enable it, undo commands still do not work because the undo stack was emptied when you disabled undo.</span></span>  
  
<a name="dependencyPropertyInfo_IsUndoEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b453d-251">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="b453d-251">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b453d-252">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="b453d-252">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty>|  
|<span data-ttu-id="b453d-253">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="b453d-253">Metadata properties set to `true`</span></span>|<span data-ttu-id="b453d-254">Keine</span><span class="sxs-lookup"><span data-stu-id="b453d-254">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="b453d-255">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A>-Eigenschaft in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)]verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-255">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled%2A> property in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span>  
  
 [!code-xaml[TextBoxBase_Samp#TextBoxBase1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml#textboxbase1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      </Docs>
    </Member>
    <Member MemberName="IsUndoEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsUndoEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsUndoEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsUndoEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsUndoEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsUndoEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-256">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-256">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.IsUndoEnabled" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineDown">
      <MemberSignature Language="C#" Value="public void LineDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineDown();" />
      <MemberSignature Language="F#" Value="member this.LineDown : unit -&gt; unit" Usage="textBoxBase.LineDown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-257">Führt im Inhalt des Steuerelements einen Bildlauf um eine Zeile nach unten durch.</span><span class="sxs-lookup"><span data-stu-id="b453d-257">Scrolls the contents of the control down by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-258">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A>-Methode verwendet wird, um den Inhalt eines <xref:System.Windows.Controls.TextBox> Steuer Elements zu scrollen.</span><span class="sxs-lookup"><span data-stu-id="b453d-258">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase13)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineLeft">
      <MemberSignature Language="C#" Value="public void LineLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineLeft();" />
      <MemberSignature Language="F#" Value="member this.LineLeft : unit -&gt; unit" Usage="textBoxBase.LineLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-259">Führt im Inhalt des Steuerelements einen Bildlauf um eine Zeile nach links durch.</span><span class="sxs-lookup"><span data-stu-id="b453d-259">Scrolls the contents of the control to the left by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-260">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A>-Methode verwendet wird, um den Inhalt eines <xref:System.Windows.Controls.TextBox> Steuer Elements zu scrollen.</span><span class="sxs-lookup"><span data-stu-id="b453d-260">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase14)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineRight">
      <MemberSignature Language="C#" Value="public void LineRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineRight();" />
      <MemberSignature Language="F#" Value="member this.LineRight : unit -&gt; unit" Usage="textBoxBase.LineRight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-261">Führt im Inhalt des Steuerelements einen Bildlauf um eine Zeile nach rechts durch.</span><span class="sxs-lookup"><span data-stu-id="b453d-261">Scrolls the contents of the control to the right by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-262">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A>-Methode verwendet wird, um den Inhalt eines <xref:System.Windows.Controls.TextBox> Steuer Elements zu scrollen.</span><span class="sxs-lookup"><span data-stu-id="b453d-262">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase15)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      </Docs>
    </Member>
    <Member MemberName="LineUp">
      <MemberSignature Language="C#" Value="public void LineUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LineUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LineUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub LineUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LineUp();" />
      <MemberSignature Language="F#" Value="member this.LineUp : unit -&gt; unit" Usage="textBoxBase.LineUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-263">Führt im Inhalt des Steuerelements einen Bildlauf um eine Zeile nach oben durch.</span><span class="sxs-lookup"><span data-stu-id="b453d-263">Scrolls the contents of the control upward by one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-264">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A>-Methode verwendet wird, um den Inhalt eines <xref:System.Windows.Controls.TextBox> Steuer Elements zu scrollen.</span><span class="sxs-lookup"><span data-stu-id="b453d-264">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.LineUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase16)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LineDown" />
      </Docs>
    </Member>
    <Member MemberName="LockCurrentUndoUnit">
      <MemberSignature Language="C#" Value="public void LockCurrentUndoUnit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void LockCurrentUndoUnit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      <MemberSignature Language="VB.NET" Value="Public Sub LockCurrentUndoUnit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void LockCurrentUndoUnit();" />
      <MemberSignature Language="F#" Value="member this.LockCurrentUndoUnit : unit -&gt; unit" Usage="textBoxBase.LockCurrentUndoUnit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-265">Sperrt die letzte Rückgängig-Komponente des Rückgängig-Stapels in der Anwendung.</span><span class="sxs-lookup"><span data-stu-id="b453d-265">Locks the most recent undo unit of the undo stack of the application.</span></span> <span data-ttu-id="b453d-266">Dadurch wird verhindert, dass die gesperrte Komponente mit Rückgängig-Komponenten zusammengeführt wird, die später hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="b453d-266">This prevents the locked unit from being merged with undo units that are added subsequently.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-267">Rufen Sie diese Methode auf, wenn eine nicht-Text-Rückgängig-Komponente zum Haupt rückgängig-Stapel der Anwendung hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-267">Call this method when a non-text undo unit is added to the application's main undo stack.</span></span> <span data-ttu-id="b453d-268">Dadurch wird verhindert, dass die gesperrte Komponente mit Rückgängig-Komponenten zusammengeführt wird, die später hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="b453d-268">This prevents the locked unit from being merged with undo units that are added subsequently.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.CanRedo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public override void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="override this.OnApplyTemplate : unit -&gt; unit" Usage="textBoxBase.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-269">Wird aufgerufen, wenn eine Steuerelementvorlage angewendet wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-269">Is called when a control template is applied.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-270">Überschreibt <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span><span class="sxs-lookup"><span data-stu-id="b453d-270">Overrides <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="b453d-271">Diese Methode wird bei der Implementierung in einer abgeleiteten Klasse immer dann aufgerufen, wenn der Anwendungscode oder interne Prozesse <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />aufrufen.</span><span class="sxs-lookup"><span data-stu-id="b453d-271">When implemented in a derived class, this method is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected override void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="textBoxBase.OnContextMenuOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-272">Argumente des Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="b453d-272">Arguments of the event.</span></span></param>
        <summary><span data-ttu-id="b453d-273">Wird jedes Mal aufgerufen, wenn ein nicht behandeltes <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" />-Routingereignis beim Durchlauf diese Klasse erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-273">Called whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route.</span></span> <span data-ttu-id="b453d-274">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-274">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-275">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="b453d-275">This method has no default implementation.</span></span> <span data-ttu-id="b453d-276">Sie sollten die Basis Implementierung weiterhin für den Fall aufzurufen, dass eine Zwischenklasse in der Vererbung diese Methode implementiert hat.</span><span class="sxs-lookup"><span data-stu-id="b453d-276">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="b453d-277">Der Zweck dieser Methode ähnelt [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Sie können das entsprechende Ereignis aus abgeleiteten Klassen mithilfe eines Klassen Handlers anstelle eines Instanzhandlers verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="b453d-277">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="b453d-278">In diesem Fall handelt es sich bei dem entsprechenden Ereignis um ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b453d-278">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="b453d-279">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da das-Routing Ereignis möglicherweise durch ein untergeordnetes-Element ausgelöst wurde. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="b453d-279">The implementation pattern of the On\* methods is different for routed events because the routed event might have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="b453d-280">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignis Argumente berücksichtigen (und sollte in den meisten Fällen nicht versuchen, das Ereignis erneut auszuführen).</span><span class="sxs-lookup"><span data-stu-id="b453d-280">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="b453d-281">Unterklassen von <xref:System.Windows.Controls.Primitives.TextBoxBase> können private Klassenhandlermethoden aufgerufen werden, wenn das Ereignis entlang der Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-281">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="b453d-282">Ein Szenario besteht darin, die Argumente des Ereignisses zu übernehmen und das Ereignis absichtlich als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="b453d-282">One scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDragEnter">
      <MemberSignature Language="C#" Value="protected override void OnDragEnter (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragEnter(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragEnter(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragEnter (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragEnter(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragEnter : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDragEnter e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-283">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-283">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-284">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragEnter" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-284">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-285">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-285">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragEnter(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragLeave">
      <MemberSignature Language="C#" Value="protected override void OnDragLeave (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragLeave(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragLeave(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragLeave (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragLeave(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragLeave : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDragLeave e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-286">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-286">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-287">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragLeave" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-287">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragLeave" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-288">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-288">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragLeave(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDragOver">
      <MemberSignature Language="C#" Value="protected override void OnDragOver (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDragOver(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDragOver(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDragOver (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDragOver(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDragOver : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDragOver e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-289">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-289">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-290">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragOver" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-290">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragOver" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-291">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-291">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDragOver(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnDrop">
      <MemberSignature Language="C#" Value="protected override void OnDrop (System.Windows.DragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrop(class System.Windows.DragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnDrop(System.Windows.DragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrop (e As DragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrop(System::Windows::DragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnDrop : System.Windows.DragEventArgs -&gt; unit" Usage="textBoxBase.OnDrop e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-292">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-292">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-293">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.DragEnter" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-293">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.DragEnter" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-294">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-294">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnDrop(System.Windows.DragEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGiveFeedback">
      <MemberSignature Language="C#" Value="protected override void OnGiveFeedback (System.Windows.GiveFeedbackEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGiveFeedback(class System.Windows.GiveFeedbackEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGiveFeedback (e As GiveFeedbackEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGiveFeedback(System::Windows::GiveFeedbackEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGiveFeedback : System.Windows.GiveFeedbackEventArgs -&gt; unit" Usage="textBoxBase.OnGiveFeedback e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.GiveFeedbackEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-295">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-295">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-296">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.GiveFeedback" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-296">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.GiveFeedback" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-297">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-297">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGiveFeedback(System.Windows.GiveFeedbackEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGotKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="textBoxBase.OnGotKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-298">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-298">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-299">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-299">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-300">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-300">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnGotKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="textBoxBase.OnKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-301">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-301">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-302">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.KeyDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-302">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-303">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-303">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyDown(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="textBoxBase.OnKeyUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-304">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-304">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-305">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.KeyUp" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-305">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-306">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-306">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnKeyUp(System.Windows.Input.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="textBoxBase.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-307">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-307">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-308">Löst das <see cref="E:System.Windows.UIElement.LostFocus" />-Ereignis (unter Verwendung der angegebenen Argumente) aus.</span><span class="sxs-lookup"><span data-stu-id="b453d-308">Raises the <see cref="E:System.Windows.UIElement.LostFocus" /> event (using the provided arguments).</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostFocus(System.Windows.RoutedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostKeyboardFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostKeyboardFocus (System.Windows.Input.KeyboardFocusChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostKeyboardFocus(class System.Windows.Input.KeyboardFocusChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostKeyboardFocus (e As KeyboardFocusChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostKeyboardFocus(System::Windows::Input::KeyboardFocusChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostKeyboardFocus : System.Windows.Input.KeyboardFocusChangedEventArgs -&gt; unit" Usage="textBoxBase.OnLostKeyboardFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyboardFocusChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-309">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-309">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-310">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-310">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-311">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-311">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnLostKeyboardFocus(System.Windows.Input.KeyboardFocusChangedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="textBoxBase.OnMouseDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-312">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-312">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-313">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseDown" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-313">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-314">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-314">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseDown(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Input.MouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Input.MouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (e As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Input::MouseEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Input.MouseEventArgs -&gt; unit" Usage="textBoxBase.OnMouseMove e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-315">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-315">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-316">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.MouseMove" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-316">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-317">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-317">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseMove(System.Windows.Input.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Input.MouseButtonEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Input.MouseButtonEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (e As MouseButtonEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Input::MouseButtonEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Input.MouseButtonEventArgs -&gt; unit" Usage="textBoxBase.OnMouseUp e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseButtonEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-318">Argumente des Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="b453d-318">Arguments of the event.</span></span> <span data-ttu-id="b453d-319">Diese Argumente enthalten u. a. Details zu der gedrückten Maustaste und zum behandelten Zustand.</span><span class="sxs-lookup"><span data-stu-id="b453d-319">These arguments will include details about which mouse button was depressed, and the handled state.</span></span></param>
        <summary><span data-ttu-id="b453d-320">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes <see cref="E:System.Windows.Input.Mouse.MouseUp" />-Ereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-320">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.MouseUp" /> event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-321">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-321">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnMouseUp(System.Windows.Input.MouseButtonEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseWheel">
      <MemberSignature Language="C#" Value="protected override void OnMouseWheel (System.Windows.Input.MouseWheelEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseWheel(class System.Windows.Input.MouseWheelEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnMouseWheel(System.Windows.Input.MouseWheelEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseWheel (e As MouseWheelEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseWheel(System::Windows::Input::MouseWheelEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnMouseWheel : System.Windows.Input.MouseWheelEventArgs -&gt; unit" Usage="textBoxBase.OnMouseWheel e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.MouseWheelEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-322">Die Mausradargumente, die diesem Ereignis zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="b453d-322">The mouse wheel arguments that are associated with this event.</span></span></param>
        <summary><span data-ttu-id="b453d-323">Wird aufgerufen, wenn ein <see cref="E:System.Windows.UIElement.MouseWheel" />-Ereignis zu dieser Klasse weitergeleitet wird (oder zu einer Klasse, die von dieser Klasse erbt).</span><span class="sxs-lookup"><span data-stu-id="b453d-323">Is called when a <see cref="E:System.Windows.UIElement.MouseWheel" /> event is routed to this class (or to a class that inherits from this class).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-324">Das <xref:System.Windows.UIElement.MouseWheel> Ereignis tritt auf, wenn das Mausrad einen Rollup durchläuft.</span><span class="sxs-lookup"><span data-stu-id="b453d-324">The <xref:System.Windows.UIElement.MouseWheel> event occurs when the mouse wheel is rolled.</span></span>  
  
 <span data-ttu-id="b453d-325">Überschreibt <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span><span class="sxs-lookup"><span data-stu-id="b453d-325">Overrides <xref:System.Windows.UIElement.OnMouseWheel%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreviewKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnPreviewKeyDown (System.Windows.Input.KeyEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPreviewKeyDown(class System.Windows.Input.KeyEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnPreviewKeyDown(System.Windows.Input.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPreviewKeyDown (e As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPreviewKeyDown(System::Windows::Input::KeyEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreviewKeyDown : System.Windows.Input.KeyEventArgs -&gt; unit" Usage="textBoxBase.OnPreviewKeyDown e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.KeyEventArgs" Index="0" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-326">Die Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="b453d-326">The event data.</span></span></param>
        <summary><span data-ttu-id="b453d-327">Wird aufgerufen, wenn <see cref="E:System.Windows.UIElement.KeyDown" /> auftritt.</span><span class="sxs-lookup"><span data-stu-id="b453d-327">Called when the <see cref="E:System.Windows.UIElement.KeyDown" /> occurs.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryContinueDrag">
      <MemberSignature Language="C#" Value="protected override void OnQueryContinueDrag (System.Windows.QueryContinueDragEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryContinueDrag(class System.Windows.QueryContinueDragEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryContinueDrag(System.Windows.QueryContinueDragEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryContinueDrag (e As QueryContinueDragEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryContinueDrag(System::Windows::QueryContinueDragEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnQueryContinueDrag : System.Windows.QueryContinueDragEventArgs -&gt; unit" Usage="textBoxBase.OnQueryContinueDrag e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.QueryContinueDragEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-328">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-328">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-329">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.DragDrop.QueryContinueDrag" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-329">Invoked whenever an unhandled <see cref="E:System.Windows.DragDrop.QueryContinueDrag" /> attached  routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-330">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-330">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-331">Diese Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="b453d-331">This method has no default implementation.</span></span> <span data-ttu-id="b453d-332">Das Aufrufen von Base () in der Implementierung wird dennoch empfohlen, wenn eine Zwischenklasse in der Vererbung diese Methode implementiert hat.</span><span class="sxs-lookup"><span data-stu-id="b453d-332">Calling base() in your implementation is still recommended, in case an intermediate class in the inheritance implemented this method.</span></span> <span data-ttu-id="b453d-333">Abhängig von Ihren Anforderungen können Sie "Base ()" entweder vor oder nach ihrer speziellen Behandlung anrufen.</span><span class="sxs-lookup"><span data-stu-id="b453d-333">You may call base() either before or after your special handling, depending on your requirements.</span></span>  
  
 <span data-ttu-id="b453d-334">Der Zweck dieser Methode ähnelt [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignis Muster bei \*-Methoden: Sie können das entsprechende Ereignis aus abgeleiteten Klassen mithilfe eines Klassen Handlers anstelle eines Instanzhandlers verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="b453d-334">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it lets you handle the matching event from derived classes by using a class handler instead of an instance handler.</span></span> <span data-ttu-id="b453d-335">In diesem Fall handelt es sich bei dem entsprechenden Ereignis um ein Routing Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b453d-335">In this case, the matching event is a routed event.</span></span> <span data-ttu-id="b453d-336">Das Implementierungs Muster der on \*-Methoden unterscheidet sich für Routing Ereignisse, da das-Routing Ereignis möglicherweise durch ein untergeordnetes-Element ausgelöst wurde. Dies ist nicht notwendigerweise das Element, das Handler aufruft.</span><span class="sxs-lookup"><span data-stu-id="b453d-336">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, which is not necessarily the element that invokes handlers.</span></span> <span data-ttu-id="b453d-337">Daher muss Ihre Implementierung die Quell Eigenschaften der Ereignis Argumente berücksichtigen (und sollte in den meisten Fällen nicht versuchen, das Ereignis erneut auszuführen).</span><span class="sxs-lookup"><span data-stu-id="b453d-337">Therefore, your implementation needs to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="b453d-338">Unterklassen von <xref:System.Windows.Controls.Primitives.TextBoxBase> können festlegen, dass private Klassenhandlermethoden aufgerufen werden, wenn das Ereignis entlang der Route empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-338">Subclasses of <xref:System.Windows.Controls.Primitives.TextBoxBase> can choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="b453d-339">Ein Szenario besteht darin, die Argumente des Ereignisses zu übernehmen und das Ereignis als behandelt zu markieren.</span><span class="sxs-lookup"><span data-stu-id="b453d-339">One scenario is to take the arguments of the event and mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnQueryCursor">
      <MemberSignature Language="C#" Value="protected override void OnQueryCursor (System.Windows.Input.QueryCursorEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnQueryCursor(class System.Windows.Input.QueryCursorEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnQueryCursor (e As QueryCursorEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnQueryCursor(System::Windows::Input::QueryCursorEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnQueryCursor : System.Windows.Input.QueryCursorEventArgs -&gt; unit" Usage="textBoxBase.OnQueryCursor e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.QueryCursorEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-340">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-340">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-341">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.Mouse.QueryCursor" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-341">Invoked whenever an unhandled <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-342">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-342">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnQueryCursor(System.Windows.Input.QueryCursorEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectionChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectionChanged (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectionChanged(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnSelectionChanged(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectionChanged (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectionChanged(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectionChanged : System.Windows.RoutedEventArgs -&gt; unit&#xA;override this.OnSelectionChanged : System.Windows.RoutedEventArgs -&gt; unit" Usage="textBoxBase.OnSelectionChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-343">Die Argumente, die dem <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />-Ereignis zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="b453d-343">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="b453d-344">Wird aufgerufen, wenn die Position des Caretzeichens oder der aktuellen Auswahl geändert wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-344">Is called when the caret or current selection changes position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-345">Diese Methode löst ein <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="b453d-345">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTemplateChanged">
      <MemberSignature Language="C#" Value="protected override void OnTemplateChanged (System.Windows.Controls.ControlTemplate oldTemplate, System.Windows.Controls.ControlTemplate newTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTemplateChanged(class System.Windows.Controls.ControlTemplate oldTemplate, class System.Windows.Controls.ControlTemplate newTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTemplateChanged (oldTemplate As ControlTemplate, newTemplate As ControlTemplate)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTemplateChanged(System::Windows::Controls::ControlTemplate ^ oldTemplate, System::Windows::Controls::ControlTemplate ^ newTemplate);" />
      <MemberSignature Language="F#" Value="override this.OnTemplateChanged : System.Windows.Controls.ControlTemplate * System.Windows.Controls.ControlTemplate -&gt; unit" Usage="textBoxBase.OnTemplateChanged (oldTemplate, newTemplate)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldTemplate" Type="System.Windows.Controls.ControlTemplate" />
        <Parameter Name="newTemplate" Type="System.Windows.Controls.ControlTemplate" />
      </Parameters>
      <Docs>
        <param name="oldTemplate"><span data-ttu-id="b453d-346">Ein <see cref="T:System.Windows.Controls.ControlTemplate" />-Objekt, das die derzeit aktive Steuerelementvorlage angibt.</span><span class="sxs-lookup"><span data-stu-id="b453d-346">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies the control template that is currently active.</span></span></param>
        <param name="newTemplate"><span data-ttu-id="b453d-347">Ein <see cref="T:System.Windows.Controls.ControlTemplate" />-Objekt, das eine neue, zu verwendende Steuerelementvorlage angibt.</span><span class="sxs-lookup"><span data-stu-id="b453d-347">A <see cref="T:System.Windows.Controls.ControlTemplate" /> object that specifies a new control template to use.</span></span></param>
        <summary><span data-ttu-id="b453d-348">Wird aufgerufen, wenn die Steuerelementvorlage geändert wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-348">Is called when the control template changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-349">Überschreibt <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="b453d-349">Overrides <xref:System.Windows.Controls.Control.OnTemplateChanged%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTextChanged (System.Windows.Controls.TextChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTextChanged(class System.Windows.Controls.TextChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextChanged(System.Windows.Controls.TextChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTextChanged (e As TextChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTextChanged(System::Windows::Controls::TextChangedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTextChanged : System.Windows.Controls.TextChangedEventArgs -&gt; unit&#xA;override this.OnTextChanged : System.Windows.Controls.TextChangedEventArgs -&gt; unit" Usage="textBoxBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.TextChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-350">Die Argumente, die dem <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />-Ereignis zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="b453d-350">The arguments that are associated with the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> event.</span></span></param>
        <summary><span data-ttu-id="b453d-351">Wird aufgerufen, wenn Inhalt in diesen Bearbeitungssteuerelementen geändert wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-351">Is called when content in this editing control changes.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-352">Diese Methode löst ein <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> Ereignis aus.</span><span class="sxs-lookup"><span data-stu-id="b453d-352">This method raises a <xref:System.Windows.Controls.Primitives.TextBoxBase.TextChanged> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnTextInput">
      <MemberSignature Language="C#" Value="protected override void OnTextInput (System.Windows.Input.TextCompositionEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextInput(class System.Windows.Input.TextCompositionEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextInput (e As TextCompositionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextInput(System::Windows::Input::TextCompositionEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextInput : System.Windows.Input.TextCompositionEventArgs -&gt; unit" Usage="textBoxBase.OnTextInput e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Input.TextCompositionEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b453d-353">Stellt Daten über das Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="b453d-353">Provides data about the event.</span></span></param>
        <summary><span data-ttu-id="b453d-354">Der Aufruf erfolgt immer dann, wenn ein nicht behandeltes, angefügtes <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" />-Routingereignis beim Durchlauf ein von dieser Klasse abgeleitetes Element erreicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-354">Invoked whenever an unhandled <see cref="E:System.Windows.Input.TextCompositionManager.TextInput" /> attached routed event reaches an element derived from this class in its route.</span></span> <span data-ttu-id="b453d-355">Implementieren Sie diese Methode, um eine Klassenbehandlung für dieses Ereignis hinzuzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-355">Implement this method to add class handling for this event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.UIElement.OnTextInput(System.Windows.Input.TextCompositionEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageDown">
      <MemberSignature Language="C#" Value="public void PageDown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageDown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageDown();" />
      <MemberSignature Language="F#" Value="member this.PageDown : unit -&gt; unit" Usage="textBoxBase.PageDown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-356">Führt im Inhalt des Steuerelements einen Bildlauf um eine Seite nach unten durch.</span><span class="sxs-lookup"><span data-stu-id="b453d-356">Scrolls the contents of the control down by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-357">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A>-Methode verwendet wird, um den Inhalt eines <xref:System.Windows.Controls.TextBox> Steuer Elements zu scrollen.</span><span class="sxs-lookup"><span data-stu-id="b453d-357">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageDown%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase17)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageLeft">
      <MemberSignature Language="C#" Value="public void PageLeft ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageLeft() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageLeft ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageLeft();" />
      <MemberSignature Language="F#" Value="member this.PageLeft : unit -&gt; unit" Usage="textBoxBase.PageLeft " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-358">Führt im Inhalt des Steuerelements einen Bildlauf um eine Seite nach links durch.</span><span class="sxs-lookup"><span data-stu-id="b453d-358">Scrolls the contents of the control to the left by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-359">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A>-Methode verwendet wird, um den Inhalt eines <xref:System.Windows.Controls.TextBox> Steuer Elements zu scrollen.</span><span class="sxs-lookup"><span data-stu-id="b453d-359">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageLeft%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase18)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageRight">
      <MemberSignature Language="C#" Value="public void PageRight ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageRight() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageRight ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageRight();" />
      <MemberSignature Language="F#" Value="member this.PageRight : unit -&gt; unit" Usage="textBoxBase.PageRight " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-360">Führt im Inhalt des Steuerelements einen Bildlauf um eine Seite nach rechts durch.</span><span class="sxs-lookup"><span data-stu-id="b453d-360">Scrolls the contents of the control to the right by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-361">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A>-Methode verwendet wird, um den Inhalt eines <xref:System.Windows.Controls.TextBox> Steuer Elements zu scrollen.</span><span class="sxs-lookup"><span data-stu-id="b453d-361">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageRight%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase19)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      </Docs>
    </Member>
    <Member MemberName="PageUp">
      <MemberSignature Language="C#" Value="public void PageUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PageUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.PageUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub PageUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PageUp();" />
      <MemberSignature Language="F#" Value="member this.PageUp : unit -&gt; unit" Usage="textBoxBase.PageUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-362">Führt im Inhalt des Steuerelements einen Bildlauf um eine Seite nach oben durch.</span><span class="sxs-lookup"><span data-stu-id="b453d-362">Scrolls the contents of the control up by one page.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-363">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A>-Methode verwendet wird, um den Inhalt eines <xref:System.Windows.Controls.TextBox> Steuer Elements zu scrollen.</span><span class="sxs-lookup"><span data-stu-id="b453d-363">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.PageUp%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase20)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageLeft" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageRight" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.PageDown" />
      </Docs>
    </Member>
    <Member MemberName="Paste">
      <MemberSignature Language="C#" Value="public void Paste ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Paste() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Paste" />
      <MemberSignature Language="VB.NET" Value="Public Sub Paste ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Paste();" />
      <MemberSignature Language="F#" Value="member this.Paste : unit -&gt; unit" Usage="textBoxBase.Paste " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-364">Fügt den Inhalt der Zwischenablage anstelle der aktuellen Auswahl im Textbearbeitungssteuerelement ein.</span><span class="sxs-lookup"><span data-stu-id="b453d-364">Pastes the contents of the Clipboard over the current selection in the text editing control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-365">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A>-Methode verwendet wird, um ausgewählten Inhalt in ein <xref:System.Windows.Controls.TextBox> Steuerelement einzufügen.</span><span class="sxs-lookup"><span data-stu-id="b453d-365">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Paste%2A> method to paste selected content into a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase6)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Cut" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Copy" />
      </Docs>
    </Member>
    <Member MemberName="Redo">
      <MemberSignature Language="C#" Value="public bool Redo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Redo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
      <MemberSignature Language="VB.NET" Value="Public Function Redo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Redo();" />
      <MemberSignature Language="F#" Value="member this.Redo : unit -&gt; bool" Usage="textBoxBase.Redo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-366">Macht den letzten Rückgängig-Befehl rückgängig.</span><span class="sxs-lookup"><span data-stu-id="b453d-366">Undoes the most recent undo command.</span></span> <span data-ttu-id="b453d-367">Stellt, anders gesagt, die letzte Rückgängig-Komponente im Rückgängig-Stapel wieder her.</span><span class="sxs-lookup"><span data-stu-id="b453d-367">In other words, redoes the most recent undo unit on the undo stack.</span></span></summary>
        <returns><span data-ttu-id="b453d-368"><see langword="true" />, wenn der Wiederherstellungsvorgang erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-368"><see langword="true" /> if the redo operation was successful; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b453d-369">Diese Methode gibt <see langword="false" /> zurück, wenn kein Rückgängig-Befehl verfügbar ist (der Rückgängig-Stapel leer ist).</span><span class="sxs-lookup"><span data-stu-id="b453d-369">This method returns <see langword="false" /> if there is no undo command available (the undo stack is empty).</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-370">Im folgenden Beispiel wird die Verwendung der <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-370">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Redo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase9)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToEnd">
      <MemberSignature Language="C#" Value="public void ScrollToEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToEnd();" />
      <MemberSignature Language="F#" Value="member this.ScrollToEnd : unit -&gt; unit" Usage="textBoxBase.ScrollToEnd " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-371">Führt in der Anzeige des Bearbeitungssteuerelements einen Bildlauf bis zum Ende des Inhalts durch.</span><span class="sxs-lookup"><span data-stu-id="b453d-371">Scrolls the view of the editing control to the end of the content.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-372">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A>-Methode verwendet wird, um den Inhalt eines <xref:System.Windows.Controls.TextBox> Steuer Elements zu scrollen.</span><span class="sxs-lookup"><span data-stu-id="b453d-372">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase22)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHome">
      <MemberSignature Language="C#" Value="public void ScrollToHome ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHome() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHome ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHome();" />
      <MemberSignature Language="F#" Value="member this.ScrollToHome : unit -&gt; unit" Usage="textBoxBase.ScrollToHome " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-373">Führt in der Anzeige des Bearbeitungssteuerelements einen Bildlauf bis zum Anfang des Viewports durch.</span><span class="sxs-lookup"><span data-stu-id="b453d-373">Scrolls the view of the editing control to the beginning of the viewport.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-374">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A>-Methode verwendet wird, um den Inhalt eines <xref:System.Windows.Controls.TextBox> Steuer Elements zu scrollen.</span><span class="sxs-lookup"><span data-stu-id="b453d-374">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome%2A> method to scroll the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase21)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToHorizontalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToHorizontalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToHorizontalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToHorizontalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToHorizontalOffset(double offset);" />
      <MemberSignature Language="F#" Value="member this.ScrollToHorizontalOffset : double -&gt; unit" Usage="textBoxBase.ScrollToHorizontalOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="b453d-375">Ein Double-Wert, der den horizontalen Offset angibt, zu dem gescrollt werden soll.</span><span class="sxs-lookup"><span data-stu-id="b453d-375">A double value that specifies the horizontal offset to scroll to.</span></span></param>
        <summary><span data-ttu-id="b453d-376">Scrollt durch den Inhalt des Bearbeitungssteuerelements bis zum angegebenen horizontalen Offset.</span><span class="sxs-lookup"><span data-stu-id="b453d-376">Scrolls the contents of the editing control to the specified horizontal offset.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="ScrollToVerticalOffset">
      <MemberSignature Language="C#" Value="public void ScrollToVerticalOffset (double offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ScrollToVerticalOffset(float64 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToVerticalOffset(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ScrollToVerticalOffset (offset As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ScrollToVerticalOffset(double offset);" />
      <MemberSignature Language="F#" Value="member this.ScrollToVerticalOffset : double -&gt; unit" Usage="textBoxBase.ScrollToVerticalOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="b453d-377">Ein Double-Wert, der den vertikalen Offset angibt, bis zu dem der Bildlauf durchgeführt werden soll.</span><span class="sxs-lookup"><span data-stu-id="b453d-377">A double value that specifies the vertical offset to scroll to.</span></span></param>
        <summary><span data-ttu-id="b453d-378">Scrollt durch den Inhalt des Bearbeitungssteuerelements bis zum angegebenen vertikalen Offset.</span><span class="sxs-lookup"><span data-stu-id="b453d-378">Scrolls the contents of the editing control to the specified vertical offset.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHorizontalOffset(System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="SelectAll">
      <MemberSignature Language="C#" Value="public void SelectAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SelectAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.SelectAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub SelectAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SelectAll();" />
      <MemberSignature Language="F#" Value="member this.SelectAll : unit -&gt; unit" Usage="textBoxBase.SelectAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-379">Wählt den gesamten Inhalt des Textbearbeitungssteuerelements aus.</span><span class="sxs-lookup"><span data-stu-id="b453d-379">Selects all the contents of the text editing control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-380">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A>-Methode verwendet wird, um den gesamten Inhalt eines <xref:System.Windows.Controls.TextBox> Steuer Elements auszuwählen.</span><span class="sxs-lookup"><span data-stu-id="b453d-380">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectAll%2A> method to select all the contents of a <xref:System.Windows.Controls.TextBox> control.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase7)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush SelectionBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush SelectionBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ SelectionBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-381">Ruft den Pinsel ab, mit dem der ausgewählte Text markiert wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="b453d-381">Gets or sets the brush that highlights selected text.</span></span></summary>
        <value><span data-ttu-id="b453d-382">Der Pinsel, mit dem der markierte Text hervorgehoben wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-382">The brush that highlights selected text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-383">Sie können den Pinsel, der markierten Text hervorhebt, durch Festlegen der Eigenschaften <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> und <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> angeben.</span><span class="sxs-lookup"><span data-stu-id="b453d-383">You can specify the brush that highlights selected text by setting the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> and <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> properties.</span></span> <span data-ttu-id="b453d-384">Die <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A>-Eigenschaft gibt die Deckkraft des <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>an.</span><span class="sxs-lookup"><span data-stu-id="b453d-384">The <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property specifies the opacity of the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b453d-385">Im folgenden Beispiel wird eine <xref:System.Windows.Controls.TextBox> erstellt, und der Text "This is some Text" wird hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="b453d-385">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="b453d-386">Im Beispiel wird die <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>-Eigenschaft auf rot und die <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A>-Eigenschaft auf 0,5 festgelegt, um die Darstellung von ausgewähltem Text anzupassen.</span><span class="sxs-lookup"><span data-stu-id="b453d-386">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="b453d-387">In der folgenden Abbildung werden die <xref:System.Windows.Controls.TextBox> aus dem vorherigen Beispiel mit ausgewähltem Text gezeigt.</span><span class="sxs-lookup"><span data-stu-id="b453d-387">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="b453d-388">![Textfeld mit einem roten SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox mit einem roten SelectionBrush")</span><span class="sxs-lookup"><span data-stu-id="b453d-388">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="b453d-389">Ausgewählter Text in einem Textfeld, bei dem SelectionBrush auf Rot festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-389">Selected text in a TextBox with SelectionBrush set to red</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-390">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-390">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler SelectionChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler SelectionChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectionChanged As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ SelectionChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectionChanged : System.Windows.RoutedEventHandler " Usage="member this.SelectionChanged : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-391">Tritt auf, wenn die Textauswahl geändert wurde.</span><span class="sxs-lookup"><span data-stu-id="b453d-391">Occurs when the text selection has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="routedEventInfo_SelectionChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="b453d-392">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="b453d-392">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b453d-393">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="b453d-393">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent>|  
|<span data-ttu-id="b453d-394">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="b453d-394">Routing strategy</span></span>|<span data-ttu-id="b453d-395">Blasen</span><span class="sxs-lookup"><span data-stu-id="b453d-395">Bubbling</span></span>|  
|<span data-ttu-id="b453d-396">delegate</span><span class="sxs-lookup"><span data-stu-id="b453d-396">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="b453d-397">Im folgenden Beispiel wird veranschaulicht, wie das <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> Ereignis mithilfe von Code behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-397">The following example demonstrates how to handle the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged> event by using code.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase10)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SelectionChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SelectionChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SelectionChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-398">Identifiziert das <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="b453d-398">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.SelectionChanged" />
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacity">
      <MemberSignature Language="C#" Value="public double SelectionOpacity { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SelectionOpacity" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionOpacity As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SelectionOpacity { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionOpacity : double with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-399">Ruft die Durchlässigkeit des <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" /> ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="b453d-399">Gets or sets the opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span></span></summary>
        <value><span data-ttu-id="b453d-400">Die Durchlässigkeit des <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-400">The opacity of the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush" />.</span></span> <span data-ttu-id="b453d-401">Der Standardwert ist 0,4.</span><span class="sxs-lookup"><span data-stu-id="b453d-401">The default is 0.4.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-402">Wenn <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> auf 0 festgelegt ist, ist die <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> transparent und nicht sichtbar.</span><span class="sxs-lookup"><span data-stu-id="b453d-402">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 0, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is transparent and is not visible.</span></span> <span data-ttu-id="b453d-403">Wenn <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> auf 1,0 oder höher festgelegt ist, ist die <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> nicht transparent, und der ausgewählte Text ist nicht sichtbar.</span><span class="sxs-lookup"><span data-stu-id="b453d-403">If <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> is set to 1.0 or greater, the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> is opaque and the selected text is not visible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b453d-404">Im folgenden Beispiel wird eine <xref:System.Windows.Controls.TextBox> erstellt, und der Text "This is some Text" wird hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="b453d-404">The following example creates a <xref:System.Windows.Controls.TextBox> and adds the text, "This is some text."</span></span> <span data-ttu-id="b453d-405">Im Beispiel wird die <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A>-Eigenschaft auf rot und die <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A>-Eigenschaft auf 0,5 festgelegt, um die Darstellung von ausgewähltem Text anzupassen.</span><span class="sxs-lookup"><span data-stu-id="b453d-405">The example sets the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionBrush%2A> property to red and the <xref:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity%2A> property to 0.5 to customize the appearance of selected text.</span></span>  
  
 [!code-xaml[TextBaseSelectionBrush#TextBox](~/samples/snippets/csharp/VS_Snippets_Wpf/textbaseselectionbrush/CS/window1.xaml#textbox)]   
  
 <span data-ttu-id="b453d-406">In der folgenden Abbildung werden die <xref:System.Windows.Controls.TextBox> aus dem vorherigen Beispiel mit ausgewähltem Text gezeigt.</span><span class="sxs-lookup"><span data-stu-id="b453d-406">The following illustration shows the <xref:System.Windows.Controls.TextBox> from the preceding example with its text selected.</span></span>  
  
 <span data-ttu-id="b453d-407">![Textfeld mit einem roten SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox mit einem roten SelectionBrush")</span><span class="sxs-lookup"><span data-stu-id="b453d-407">![TextBox with a red SelectionBrush](~/add/media/textboxselectionbrush.png "TextBox with a red SelectionBrush")</span></span>  
<span data-ttu-id="b453d-408">Ausgewählter Text in einem Textfeld, bei dem SelectionOpacity auf 0,5 festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-408">Selected text in a TextBox with SelectionOpacity set to 0.5</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionOpacityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionOpacityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionOpacityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionOpacityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionOpacityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionOpacityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-409">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-409">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionOpacity" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionTextBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush SelectionTextBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush SelectionTextBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectionTextBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ SelectionTextBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectionTextBrush : System.Windows.Media.Brush with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-410">Ruft einen Wert ab oder legt einen Wert fest, der den Pinsel definiert, der für den ausgewählten Text verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-410">Gets or sets a value that defines the brush used for selected text.</span></span></summary>
        <value><span data-ttu-id="b453d-411">Der für den ausgewählten Text verwendete Pinsel.</span><span class="sxs-lookup"><span data-stu-id="b453d-411">The brush used for selected text.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
## Remarks  

<span data-ttu-id="b453d-412">Der Standardwert ist eine <xref:System.Windows.Media.SolidColorBrush> mit der vom System definierten Farbe für markierten Text.</span><span class="sxs-lookup"><span data-stu-id="b453d-412">The default value is a <xref:System.Windows.Media.SolidColorBrush> with the system-defined color for highlighted text.</span></span> 

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionTextBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty SelectionTextBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty SelectionTextBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SelectionTextBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ SelectionTextBrushProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable SelectionTextBrushProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrushProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-413">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-413">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.SelectionTextBrush" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[
  
## Remarks  

<span data-ttu-id="b453d-414">Wenn diese Eigenschaft `null`ist, wird der ausgewählte Text nicht gerendert.</span><span class="sxs-lookup"><span data-stu-id="b453d-414">If this property is `null`, selected text is not rendered.</span></span> 

       ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpellCheck">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.SpellCheck SpellCheck { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.SpellCheck SpellCheck" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.SpellCheck" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SpellCheck As SpellCheck" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::SpellCheck ^ SpellCheck { System::Windows::Controls::SpellCheck ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SpellCheck : System.Windows.Controls.SpellCheck" Usage="System.Windows.Controls.Primitives.TextBoxBase.SpellCheck" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.SpellCheck</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-415">Ruft ein <see cref="T:System.Windows.Controls.SpellCheck" />-Objekt ab, das Zugriff auf Rechtschreibfehler im Textinhalt eines <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> oder <see cref="T:System.Windows.Controls.RichTextBox" /> bietet.</span><span class="sxs-lookup"><span data-stu-id="b453d-415">Gets a <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span></summary>
        <value><span data-ttu-id="b453d-416">Ein <see cref="T:System.Windows.Controls.SpellCheck" />-Objekt, das Zugriff auf Rechtschreibfehler im Textinhalt einer <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> oder einer <see cref="T:System.Windows.Controls.RichTextBox" /> ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-416">A <see cref="T:System.Windows.Controls.SpellCheck" /> object that provides access to spelling errors in the text contents of a <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> or <see cref="T:System.Windows.Controls.RichTextBox" />.</span></span>  
  
<span data-ttu-id="b453d-417">Diese Eigenschaft hat keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="b453d-417">This property has no default value.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Controls.SpellingError" />
        <altmember cref="T:System.Windows.Controls.SpellingReform" />
        <altmember cref="T:System.Windows.Controls.SpellCheck" />
      </Docs>
    </Member>
    <Member MemberName="TextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.TextChangedEventHandler TextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.TextChangedEventHandler TextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TextChanged As TextChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::TextChangedEventHandler ^ TextChanged;" />
      <MemberSignature Language="F#" Value="member this.TextChanged : System.Windows.Controls.TextChangedEventHandler " Usage="member this.TextChanged : System.Windows.Controls.TextChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.TextChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-418">Tritt auf, wenn sich der Inhalt im Textelement geändert hat.</span><span class="sxs-lookup"><span data-stu-id="b453d-418">Occurs when content changes in the text element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-419">Bei einer <xref:System.Windows.Controls.TextBox>tritt dieses Ereignis auf, wenn sich der Text ändert. bei einer <xref:System.Windows.Controls.RichTextBox>tritt dieses Ereignis auf, wenn sich Inhalte oder Formatierungen ändern (z. b. Bilder, Tabellen oder Hintergrundfarben).</span><span class="sxs-lookup"><span data-stu-id="b453d-419">For a <xref:System.Windows.Controls.TextBox>, this event occurs when its text changes; for a <xref:System.Windows.Controls.RichTextBox>, this event occurs when any content or formatting changes (for example, images, table, or background color).</span></span>  
  
<a name="routedEventInfo_TextChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="b453d-420">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="b453d-420">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b453d-421">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="b453d-421">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent>|  
|<span data-ttu-id="b453d-422">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="b453d-422">Routing strategy</span></span>|<span data-ttu-id="b453d-423">Blasen</span><span class="sxs-lookup"><span data-stu-id="b453d-423">Bubbling</span></span>|  
|<span data-ttu-id="b453d-424">delegate</span><span class="sxs-lookup"><span data-stu-id="b453d-424">Delegate</span></span>|<xref:System.Windows.Controls.TextChangedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.TextChangedEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="TextChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TextChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TextChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TextChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable TextChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.Controls.Primitives.TextBoxBase.TextChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-425">Identifiziert das <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />-Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="b453d-425">Identifies the <see cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" /> routed event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.Controls.Primitives.TextBoxBase.TextChanged" />
      </Docs>
    </Member>
    <Member MemberName="Undo">
      <MemberSignature Language="C#" Value="public bool Undo ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Undo() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Primitives.TextBoxBase.Undo" />
      <MemberSignature Language="VB.NET" Value="Public Function Undo () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Undo();" />
      <MemberSignature Language="F#" Value="member this.Undo : unit -&gt; bool" Usage="textBoxBase.Undo " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b453d-426">Macht den letzten Rückgängig-Befehl rückgängig.</span><span class="sxs-lookup"><span data-stu-id="b453d-426">Undoes the most recent undo command.</span></span> <span data-ttu-id="b453d-427">Macht, anders gesagt, die letzte Rückgängig-Komponente im Rückgängig-Stapel rückgängig.</span><span class="sxs-lookup"><span data-stu-id="b453d-427">In other words, undoes the most recent undo unit on the undo stack.</span></span></summary>
        <returns><span data-ttu-id="b453d-428"><see langword="true" />, wenn der Rückgängig-Vorgang erfolgreich war, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-428"><see langword="true" /> if the undo operation was successful; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b453d-429">Diese Methode gibt <see langword="false" /> zurück, wenn der Rückgängig-Stapel leer ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-429">This method returns <see langword="false" /> if the undo stack is empty.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-430">Im folgenden Beispiel wird die Verwendung der <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="b453d-430">The following example demonstrates how to use the <xref:System.Windows.Controls.Primitives.TextBoxBase.Undo%2A> method.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase8)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase8)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.Redo" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.DeclareChangeBlock" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.LockCurrentUndoUnit" />
      </Docs>
    </Member>
    <Member MemberName="UndoLimit">
      <MemberSignature Language="C#" Value="public int UndoLimit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 UndoLimit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />
      <MemberSignature Language="VB.NET" Value="Public Property UndoLimit As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int UndoLimit { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.UndoLimit : int with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-431">Ruft die Anzahl der in der Rückgängig-Warteschlange gespeicherten Aktionen ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="b453d-431">Gets or sets the number of actions stored in the undo queue.</span></span></summary>
        <value><span data-ttu-id="b453d-432">Die Anzahl der in der Rückgängig-Warteschlange gespeicherten Aktionen.</span><span class="sxs-lookup"><span data-stu-id="b453d-432">The number of actions stored in the undo queue.</span></span> <span data-ttu-id="b453d-433">Der Standardwert ist-1. Dies bedeutet, dass die Rückgängig-Warteschlange auf den verfügbaren Arbeitsspeicher beschränkt ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-433">The default is -1, which means the undo queue is limited to the memory that is available.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-434">Durch Festlegen <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> wird die Rückgängig-Warteschlange gelöscht.</span><span class="sxs-lookup"><span data-stu-id="b453d-434">Setting <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> clears the undo queue.</span></span> <span data-ttu-id="b453d-435">Wenn <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> auf-1 festgelegt ist, wird die Rückgängig-Warteschlange nur durch den verfügbaren Arbeitsspeicher beschränkt.</span><span class="sxs-lookup"><span data-stu-id="b453d-435">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to -1, the undo queue is limited only by the memory that is available.</span></span> <span data-ttu-id="b453d-436">Wenn <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> auf 0 festgelegt ist, ist rückgängig auf der <xref:System.Windows.Controls.Primitives.TextBoxBase>deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="b453d-436">When <xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is set to 0, undo is disabled on the <xref:System.Windows.Controls.Primitives.TextBoxBase>.</span></span>  
  
 <span data-ttu-id="b453d-437"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="b453d-437"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="b453d-438">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="b453d-438">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b453d-439"><see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> wird nach dem Aufrufen von <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> und vor dem Aufrufen von <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" /> festgelegt.</span><span class="sxs-lookup"><span data-stu-id="b453d-439"><see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> is set after calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.BeginChange" /> and before calling <see cref="M:System.Windows.Controls.Primitives.TextBoxBase.EndChange" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="UndoLimitProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UndoLimitProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UndoLimitProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UndoLimitProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UndoLimitProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UndoLimitProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-440">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-440">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.UndoLimit" /> dependency property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-441"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> wird in .NET Framework Version 3,5 eingeführt.</span><span class="sxs-lookup"><span data-stu-id="b453d-441"><xref:System.Windows.Controls.Primitives.TextBoxBase.UndoLimitProperty> is introduced in the .NET Framework version 3.5.</span></span> <span data-ttu-id="b453d-442">Weitere Informationen finden Sie unter [Versionen und Abhängigkeiten](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="b453d-442">For more information, see [Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalOffset">
      <MemberSignature Language="C#" Value="public double VerticalOffset { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 VerticalOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VerticalOffset As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double VerticalOffset { double get(); };" />
      <MemberSignature Language="F#" Value="member this.VerticalOffset : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-443">Ruft die vertikale Bildlaufposition ab oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="b453d-443">Gets or sets the vertical scroll position.</span></span></summary>
        <value><span data-ttu-id="b453d-444">Ein Gleitkommawert, der die vertikale Bildlaufposition angibt, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b453d-444">A floating-point value that specifies the vertical scroll position, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="b453d-445">Durch Festlegen dieser Eigenschaft wird im Textbearbeitungssteuerelement ein Bildlauf bis zum angegebenen vertikalen Offset durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="b453d-445">Setting this property causes the text editing control to scroll to the specified vertical offset.</span></span> <span data-ttu-id="b453d-446">Beim Lesen dieser Eigenschaft wird der aktuelle vertikale Offset zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="b453d-446">Reading this property returns the current vertical offset.</span></span>  
  
<span data-ttu-id="b453d-447">Der Wert dieser Eigenschaft ist 0,0, wenn das Textbearbeitungssteuerelement nicht für die Unterstützung von Bildläufen konfiguriert ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-447">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="b453d-448">Diese Eigenschaft hat keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="b453d-448">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b453d-449">Der vertikale Offset wird vom oberen Rand des sichtbaren Text Bereichs gemessen.</span><span class="sxs-lookup"><span data-stu-id="b453d-449">The vertical offset is measured from the top of the visible text area.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b453d-450">Im folgenden Beispiel wird veranschaulicht, wie der Wert der <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A>-Eigenschaft gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-450">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalOffset%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="b453d-451">Es wird versucht, diese Eigenschaft auf einen negativen Wert festzulegen.</span><span class="sxs-lookup"><span data-stu-id="b453d-451">An attempt is made to set this property to a negative value.</span></span></exception>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalOffset" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToEnd" />
        <altmember cref="M:System.Windows.Controls.Primitives.TextBoxBase.ScrollToHome" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibility">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Controls.ScrollBarVisibility VerticalScrollBarVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalScrollBarVisibility As ScrollBarVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ScrollBarVisibility VerticalScrollBarVisibility { System::Windows::Controls::ScrollBarVisibility get(); void set(System::Windows::Controls::ScrollBarVisibility value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalScrollBarVisibility : System.Windows.Controls.ScrollBarVisibility with get, set" Usage="System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ScrollBarVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-452">Ruft einen Wert ab, der angibt, ob eine vertikale Bildlaufleiste angezeigt wird, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="b453d-452">Gets or sets a value that indicates whether a vertical scroll bar is shown.</span></span></summary>
        <value><span data-ttu-id="b453d-453">Ein Wert, der von der <see cref="T:System.Windows.Controls.ScrollBarVisibility" />-Enumeration definiert wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-453">A value that is defined by the <see cref="T:System.Windows.Controls.ScrollBarVisibility" /> enumeration.</span></span>  
  
<span data-ttu-id="b453d-454">Der Standardwert ist <see cref="F:System.Windows.Visibility.Hidden" />.</span><span class="sxs-lookup"><span data-stu-id="b453d-454">The default value is <see cref="F:System.Windows.Visibility.Hidden" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_VerticalScrollBarVisibility"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="b453d-455">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="b453d-455">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="b453d-456">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="b453d-456">Identifier field</span></span>|<xref:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty>|  
|<span data-ttu-id="b453d-457">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="b453d-457">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn" />
        <altmember cref="P:System.Windows.Controls.TextBox.TextWrapping" />
        <altmember cref="T:System.Windows.Controls.ScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="VerticalScrollBarVisibilityProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalScrollBarVisibilityProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalScrollBarVisibilityProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalScrollBarVisibilityProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibilityProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-458">Bezeichnet die <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b453d-458">Identifies the <see cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewportHeight">
      <MemberSignature Language="C#" Value="public double ViewportHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewportHeight : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-459">Ruft die vertikale Größe des scrollbaren Inhaltsbereichs ab.</span><span class="sxs-lookup"><span data-stu-id="b453d-459">Gets the vertical size of the scrollable content area.</span></span></summary>
        <value><span data-ttu-id="b453d-460">Ein Gleitkommawert, der die vertikale Größe des bildlauffähigen Inhaltsbereichs angibt, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b453d-460">A floating-point value that specifies the vertical size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="b453d-461">Der Wert dieser Eigenschaft ist 0,0, wenn das Textbearbeitungssteuerelement nicht für die Unterstützung von Bildläufen konfiguriert ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-461">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="b453d-462">Diese Eigenschaft hat keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="b453d-462">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-463">Im folgenden Beispiel wird veranschaulicht, wie der Wert der <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A>-Eigenschaft gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-463">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportHeight%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
    <Member MemberName="ViewportWidth">
      <MemberSignature Language="C#" Value="public double ViewportWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ViewportWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ViewportWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ViewportWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewportWidth : double" Usage="System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b453d-464">Ruft die horizontale Größe des bildlauffähigen Inhaltsbereichs ab.</span><span class="sxs-lookup"><span data-stu-id="b453d-464">Gets the horizontal size of the scrollable content area.</span></span></summary>
        <value><span data-ttu-id="b453d-465">Ein Gleitkommawert, der die horizontale Größe des bildlauffähigen Inhaltsbereichs angibt, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="b453d-465">A floating-point value that specifies the horizontal size of the scrollable content area, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span></span>  
  
<span data-ttu-id="b453d-466">Der Wert dieser Eigenschaft ist 0,0, wenn das Textbearbeitungssteuerelement nicht für die Unterstützung von Bildläufen konfiguriert ist.</span><span class="sxs-lookup"><span data-stu-id="b453d-466">The value of this property is 0.0 if the text editing control is not configured to support scrolling.</span></span>  
  
<span data-ttu-id="b453d-467">Diese Eigenschaft hat keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="b453d-467">This property has no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b453d-468">Im folgenden Beispiel wird veranschaulicht, wie der Wert der <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A>-Eigenschaft gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="b453d-468">The following example demonstrates how to read the value of the <xref:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth%2A> property.</span></span>  
  
 [!code-csharp[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/csharp/VS_Snippets_Wpf/TextBoxBase_Samp/CSharp/Window1.xaml.cs#textboxbase3)]
 [!code-vb[TextBoxBase_Samp#TextBoxBase3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextBoxBase_Samp/VisualBasic/Window1.xaml.vb#textboxbase3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.ViewportWidth" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.HorizontalScrollBarVisibility" />
        <altmember cref="P:System.Windows.Controls.Primitives.TextBoxBase.VerticalScrollBarVisibility" />
      </Docs>
    </Member>
  </Members>
</Type>
