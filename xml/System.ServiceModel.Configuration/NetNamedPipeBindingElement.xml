<Type Name="NetNamedPipeBindingElement" FullName="System.ServiceModel.Configuration.NetNamedPipeBindingElement">
  <TypeSignature Language="C#" Value="public class NetNamedPipeBindingElement : System.ServiceModel.Configuration.StandardBindingElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NetNamedPipeBindingElement extends System.ServiceModel.Configuration.StandardBindingElement" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />
  <TypeSignature Language="VB.NET" Value="Public Class NetNamedPipeBindingElement&#xA;Inherits StandardBindingElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class NetNamedPipeBindingElement : System::ServiceModel::Configuration::StandardBindingElement" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Configuration.StandardBindingElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="210bf-101">Stellt ein Konfigurationselement dar, das eine sichere, verlässliche und für die prozessübergreifende Kommunikation auf dem Computer optimierte Bindung definiert.</span><span class="sxs-lookup"><span data-stu-id="210bf-101">Represents a configuration element that defines a binding that is secure, reliable and optimized for on-machine cross process communication.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="210bf-102">Diese Bindung generiert standardmäßig ein Laufzeitkommunikationsstack mit WS-Reliable-Messaging für Verlässlichkeit, Transport- und Übertragungssicherheit, Named Pipes für den Meldungstransport sowie binäre Meldungsverschlüsselung.</span><span class="sxs-lookup"><span data-stu-id="210bf-102">By default, this binding generates a run-time communication stack with WS-ReliableMessaging for reliability, transport security for transfer security, named pipes for message delivery, and binary message encoding.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ServiceModel.NetNamedPipeBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="210bf-103">Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="210bf-103">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetNamedPipeBindingElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.NetNamedPipeBindingElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetNamedPipeBindingElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="210bf-104">Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="210bf-104">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NetNamedPipeBindingElement (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.NetNamedPipeBindingElement.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NetNamedPipeBindingElement(System::String ^ name);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="210bf-105">Der Konfigurationsname der Bindung.</span><span class="sxs-lookup"><span data-stu-id="210bf-105">The configuration name of the binding.</span></span> <span data-ttu-id="210bf-106">Dieser Wert sollte eindeutig sein, da er zur Identifizierung der Bindung dient.</span><span class="sxs-lookup"><span data-stu-id="210bf-106">This value should be unique because it is used as identification for the binding.</span></span></param>
        <summary><span data-ttu-id="210bf-107">Initialisiert eine neue Instanz der <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />-Klasse mit dem angegebenen Namen.</span><span class="sxs-lookup"><span data-stu-id="210bf-107">Initializes a new instance of the <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" /> class with the specified name.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingElementType">
      <MemberSignature Language="C#" Value="protected override Type BindingElementType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type BindingElementType" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.BindingElementType" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property BindingElementType As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property Type ^ BindingElementType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="210bf-108">Ruft den Typ dieses Konfigurationselements ab.</span><span class="sxs-lookup"><span data-stu-id="210bf-108">Gets the type of this configuration element.</span></span></summary>
        <value><span data-ttu-id="210bf-109">Der <see cref="T:System.Type" /> dieses Konfigurationselements.</span><span class="sxs-lookup"><span data-stu-id="210bf-109">The <see cref="T:System.Type" /> of this configuration element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HostNameComparisonMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.HostNameComparisonMode HostNameComparisonMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.HostNameComparisonMode" />
      <MemberSignature Language="VB.NET" Value="Public Property HostNameComparisonMode As HostNameComparisonMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::HostNameComparisonMode HostNameComparisonMode { System::ServiceModel::HostNameComparisonMode get(); void set(System::ServiceModel::HostNameComparisonMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("hostNameComparisonMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.HostNameComparisonMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="210bf-110">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob der Hostname zum Erreichen des Diensts bei übereinstimmendem URI verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="210bf-110">Gets or sets a value that indicates whether the hostname is used to reach the service when matching on the URI.</span></span></summary>
        <value><span data-ttu-id="210bf-111">Ein <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" />-Wert, der angibt, ob der Hostname beim Routing eingehender Anfragen an einen Endpunkt-URI eingeschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="210bf-111">A <see cref="P:System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode" /> value that specifies whether the hostname is included when routing incoming requests to an endpoint URI.</span></span> <span data-ttu-id="210bf-112">Der Standardwert lautet <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, wodurch der Hostname beim Abgleich ignoriert wird.</span><span class="sxs-lookup"><span data-stu-id="210bf-112">The default value is <see cref="F:System.ServiceModel.HostNameComparisonMode.StrongWildcard" />, which ignores the hostname in the match.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeFrom">
      <MemberSignature Language="C#" Value="protected internal override void InitializeFrom (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void InitializeFrom(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.NetNamedPipeBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void InitializeFrom(System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="210bf-113">Bindungskonfigurationseinstellungen</span><span class="sxs-lookup"><span data-stu-id="210bf-113">Binding configuration settings.</span></span></param>
        <summary><span data-ttu-id="210bf-114">Initialisiert dieses Bindungskonfigurationselement mit dem Inhalt der angegebenen Bindungskonfigurationseinstellungen.</span><span class="sxs-lookup"><span data-stu-id="210bf-114">Initializes this binding configuration with the content of the specified binding configuration settings.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferPoolSize">
      <MemberSignature Language="C#" Value="public long MaxBufferPoolSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxBufferPoolSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.MaxBufferPoolSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferPoolSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxBufferPoolSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxBufferPoolSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.LongValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="210bf-115">Ruft die maximale Größe in Byte des Pufferpools ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="210bf-115">Gets or sets the maximum size, in bytes, of the buffer pool.</span></span></summary>
        <value><span data-ttu-id="210bf-116">Die maximale Größe des Pufferpools.</span><span class="sxs-lookup"><span data-stu-id="210bf-116">The maximum size of the buffer pool.</span></span> <span data-ttu-id="210bf-117">Der Standardwert ist 524.288 Byte (512 \* 1024).</span><span class="sxs-lookup"><span data-stu-id="210bf-117">The default is 524,288 bytes (512 \* 1024).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="210bf-118">Viele Teile von [!INCLUDE[indigo1](~/includes/indigo1-md.md)] verwenden Puffer.</span><span class="sxs-lookup"><span data-stu-id="210bf-118">Many parts of [!INCLUDE[indigo1](~/includes/indigo1-md.md)] use buffers.</span></span> <span data-ttu-id="210bf-119">Das Erstellen und Zerstören von Puffern bei jeder Verwendung ist kostspielig. Dasselbe gilt für die Garbage Collection für Puffer.</span><span class="sxs-lookup"><span data-stu-id="210bf-119">Creating and destroying buffers each time they are used is expensive, and garbage collection for buffers is also expensive.</span></span> <span data-ttu-id="210bf-120">Bei Pufferpools können Sie einen zu verwendenden Puffer aus dem Pool nehmen und ihn nach der Verwendung wieder dem Pool zuführen.</span><span class="sxs-lookup"><span data-stu-id="210bf-120">With buffer pools, you can take a buffer from the pool, use it, and return it to the pool once you are done.</span></span> <span data-ttu-id="210bf-121">So wird der Aufwand beim Erstellen und Zerstören von Puffern vermieden.</span><span class="sxs-lookup"><span data-stu-id="210bf-121">Thus the overhead in creating and destroying buffers is avoided.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxBufferSize">
      <MemberSignature Language="C#" Value="public int MaxBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.MaxBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxBufferSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxBufferSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="210bf-122">Ruft einen Wert ab oder legt einen Wert fest, der die maximale Größe (in Byte) des Puffers angibt, der zum Speichern von Meldungen im Arbeitsspeicher verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="210bf-122">Gets or sets a value that specifies the maximum size, in bytes, of the buffer used to store messages in memory.</span></span></summary>
        <value><span data-ttu-id="210bf-123">Die maximale Anzahl an Bytes, die verwendet wird, um eingehende Nachrichten im Arbeitsspeicher zu puffern.</span><span class="sxs-lookup"><span data-stu-id="210bf-123">The maximum number of bytes that are used to buffer incoming messages in memory.</span></span> <span data-ttu-id="210bf-124">Der Standardwert ist 65.536 Bytes.</span><span class="sxs-lookup"><span data-stu-id="210bf-124">The default value is 65,536 bytes.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="210bf-125">Diese Eigenschaft gilt nur für die Header per Stream übertragener Meldungen.</span><span class="sxs-lookup"><span data-stu-id="210bf-125">This property only applies to the headers of streamed messages.</span></span> <span data-ttu-id="210bf-126">Dieser Wert sollte mindestens die maximale Größe der SOAP-Header aufweisen, die im gepufferten Modus gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="210bf-126">This value should be at least the maximum possible size of the SOAP headers, which are read in buffered mode.</span></span>  
  
 <span data-ttu-id="210bf-127">Falls der Puffer voll ist, verbleiben überschüssige Daten im darunter liegenden Socket, bis wieder freier Speicher im Puffer verfügbar wird.</span><span class="sxs-lookup"><span data-stu-id="210bf-127">If the buffer is full, excess data remains in the underlying socket until the buffer has space again.</span></span>  
  
 <span data-ttu-id="210bf-128">Der Wert dieser Eigenschaft muss kleiner oder gleich 'MaxMessageSize' und größer als die Header der Meldung sein. Ansonsten gibt der Kanal eine Ausnahme aus.</span><span class="sxs-lookup"><span data-stu-id="210bf-128">The value of this property must be less than or equal to MaxMessageSize and must be larger than the size of the headers of the message or the channel throws an exception.</span></span>  
  
 <span data-ttu-id="210bf-129">Wenn Sie mehr Daten empfangen, als Sie puffern können, gibt der Kanal eine <xref:System.ServiceModel.CommunicationException> aus, die <xref:System.ServiceModel.QuotaExceededException> als interne Ausnahme enthält.</span><span class="sxs-lookup"><span data-stu-id="210bf-129">If you receive more data than you can buffer, the channel throws a <xref:System.ServiceModel.CommunicationException>, which contains <xref:System.ServiceModel.QuotaExceededException> as an inner exception.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxConnections">
      <MemberSignature Language="C#" Value="public int MaxConnections { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxConnections" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.MaxConnections" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxConnections As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxConnections { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxConnections", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.IntegerValidator(MinValue=0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="210bf-130">Ruft einen Wert ab oder legt einen Wert fest, der die maximale Anzahl aus- und eingehender Verbindungen angibt, die der Dienst erstellt bzw. annimmt.</span><span class="sxs-lookup"><span data-stu-id="210bf-130">Gets or sets a value that specifies the maximum number of outbound and inbound connections the service creates and accepts respectively.</span></span></summary>
        <value><span data-ttu-id="210bf-131">Die maximale Anzahl ausgehender und eingehender Verbindungen, die der Dienst erstellt bzw. annimmt.</span><span class="sxs-lookup"><span data-stu-id="210bf-131">The maximum number of outbound and inbound connections the service creates and accepts respectively.</span></span> <span data-ttu-id="210bf-132">Der Standard ist 10.</span><span class="sxs-lookup"><span data-stu-id="210bf-132">The default is 10.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="210bf-133">Eingehende und ausgehende Verbindungen werden gegen eine separate von dieser Eigenschaft angegebene Grenze angerechnet.</span><span class="sxs-lookup"><span data-stu-id="210bf-133">Incoming and outgoing connections are counted against a separate limit specified by this property.</span></span> <span data-ttu-id="210bf-134">Jede Verbindung oberhalb der Grenze wird in die Warteschlange gestellt, bis unter der Grenze Speicherplatz verfügbar wird.</span><span class="sxs-lookup"><span data-stu-id="210bf-134">Any connection in excess of the limit is queued until a space below the limit becomes available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxReceivedMessageSize">
      <MemberSignature Language="C#" Value="public long MaxReceivedMessageSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 MaxReceivedMessageSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.MaxReceivedMessageSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxReceivedMessageSize As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long MaxReceivedMessageSize { long get(); void set(long value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("maxReceivedMessageSize", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.LongValidator(MinValue=1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="210bf-135">Ruft die maximal zulässige Meldungsgröße in Byte ab, die in einem Kanal empfangen werden kann, der mit dieser Bindung konfiguriert wurde, oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="210bf-135">Gets and sets the maximum allowable message size, in bytes, that can be received on a channel configured with this binding.</span></span></summary>
        <value><span data-ttu-id="210bf-136">Die maximale zulässige Nachrichtengröße, die von der Bindung verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="210bf-136">The maximum allowable message size that is processed by the binding.</span></span> <span data-ttu-id="210bf-137">Der Standardwert ist 65.536 Bytes.</span><span class="sxs-lookup"><span data-stu-id="210bf-137">The default value is 65,536 bytes.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyConfiguration">
      <MemberSignature Language="C#" Value="protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnApplyConfiguration(class System.ServiceModel.Channels.Binding binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Configuration.NetNamedPipeBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnApplyConfiguration(System::ServiceModel::Channels::Binding ^ binding);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="binding" Type="System.ServiceModel.Channels.Binding" />
      </Parameters>
      <Docs>
        <param name="binding"><span data-ttu-id="210bf-138">Die anzuwendende Bindung.</span><span class="sxs-lookup"><span data-stu-id="210bf-138">The binding to be applied.</span></span></param>
        <summary><span data-ttu-id="210bf-139">Wendet die angegebene Bindung auf diese <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" />-Instanz an.</span><span class="sxs-lookup"><span data-stu-id="210bf-139">Applies the specified binding to this <see cref="T:System.ServiceModel.Configuration.NetNamedPipeBindingElement" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Properties">
      <MemberSignature Language="C#" Value="protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Configuration.ConfigurationPropertyCollection Properties" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.Properties" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property Properties As ConfigurationPropertyCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Configuration::ConfigurationPropertyCollection ^ Properties { System::Configuration::ConfigurationPropertyCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Configuration.ConfigurationPropertyCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="210bf-140">Ruft eine <see cref="T:System.Configuration.ConfigurationPropertyCollection" />-Instanz ab, die eine Auflistung von <see cref="T:System.Configuration.ConfigurationProperty" />-Objekten enthält, die Attribute oder <see cref="T:System.Configuration.ConfigurationElement" />-Objekte dieses Konfigurationselements sein können.</span><span class="sxs-lookup"><span data-stu-id="210bf-140">Gets a <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</span></span></summary>
        <value><span data-ttu-id="210bf-141">Eine <see cref="T:System.Configuration.ConfigurationPropertyCollection" />-Instanz, die eine Sammlung mit <see cref="T:System.Configuration.ConfigurationProperty" />-Objekten enthält, die entweder Attribute oder <see cref="T:System.Configuration.ConfigurationElement" />-Objekte dieses Konfigurationselements sein können.</span><span class="sxs-lookup"><span data-stu-id="210bf-141">A <see cref="T:System.Configuration.ConfigurationPropertyCollection" /> instance that contains a collection of <see cref="T:System.Configuration.ConfigurationProperty" /> objects that can be attributes or <see cref="T:System.Configuration.ConfigurationElement" /> objects of this configuration element.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReaderQuotas">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.ReaderQuotas" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReaderQuotas As XmlDictionaryReaderQuotasElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::XmlDictionaryReaderQuotasElement ^ ReaderQuotas { System::ServiceModel::Configuration::XmlDictionaryReaderQuotasElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("readerQuotas")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="210bf-142">Ruft Beschränkungen der Komplexität von SOAP-Meldungen ab, die von Endpunkten verarbeitet werden können, die mit dieser Bindung konfiguriert werden, oder legt die Beschränkungen fest.</span><span class="sxs-lookup"><span data-stu-id="210bf-142">Gets or sets constraints on the complexity of SOAP messages that can be processed by endpoints configured with this binding.</span></span></summary>
        <value><span data-ttu-id="210bf-143">Der <see cref="T:System.Xml.XmlDictionaryReaderQuotas" />, der die Komplexitätseinschränkungen angibt.</span><span class="sxs-lookup"><span data-stu-id="210bf-143">The <see cref="T:System.Xml.XmlDictionaryReaderQuotas" /> that specifies the complexity constraints.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="210bf-144">Zu den Komplexitätseinschränkungen gehören Elemente, wie zum Beispiel die maximale Elementtiefe und die maximale Länge für den Zeichenfolgeninhalt innerhalb der Meldung.</span><span class="sxs-lookup"><span data-stu-id="210bf-144">The complexity constraints include items such as a maximum element depth, a maximum length for string content within the message.</span></span> <span data-ttu-id="210bf-145">Die Einschränkungen schützen vor einer Klasse von DOS-Angriffen (Denial Of Service), die versuchen, die Nachrichtenkomplexität zum Binden von Endpunkt-Verarbeitungsressourcen zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="210bf-145">The constraints protect against a class of denial of service (DOS) attacks that attempt to use message complexity to tie up endpoint processing resources.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Security">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Configuration.NetNamedPipeSecurityElement Security { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Configuration.NetNamedPipeSecurityElement Security" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.Security" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Security As NetNamedPipeSecurityElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Configuration::NetNamedPipeSecurityElement ^ Security { System::ServiceModel::Configuration::NetNamedPipeSecurityElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("security")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Configuration.NetNamedPipeSecurityElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="210bf-146">Ruft den Sicherheitseinstellungstyp ab, der mit dieser Bindung verwendet werden soll, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="210bf-146">Gets the type of security settings to be used with this binding.</span></span></summary>
        <value><span data-ttu-id="210bf-147">Das <see cref="T:System.ServiceModel.Configuration.NetNamedPipeSecurityElement" />, das den Sicherheitseinstellungstyp angibt, der mit dieser Bindung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="210bf-147">The <see cref="T:System.ServiceModel.Configuration.NetNamedPipeSecurityElement" /> that specifies the type of security settings to be used with this binding.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionFlow">
      <MemberSignature Language="C#" Value="public bool TransactionFlow { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TransactionFlow" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.TransactionFlow" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionFlow As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TransactionFlow { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("transactionFlow", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="210bf-148">Ruft einen booleschen Wert ab, der angibt, ob die Bindung WS-Transaktionen unterstützt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="210bf-148">Gets or sets a Boolean value that specifies whether the binding supports flowing WS-Transactions.</span></span></summary>
        <value>
          <span data-ttu-id="210bf-149"><see langword="true" />, wenn die Bindung fließende WS-Transaktionen unterstützt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="210bf-149"><see langword="true" /> if the binding supports flowing WS-Transactions; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="210bf-150">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="210bf-150">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransactionProtocol">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransactionProtocol TransactionProtocol { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.TransactionProtocol TransactionProtocol" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.TransactionProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionProtocol As TransactionProtocol" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransactionProtocol ^ TransactionProtocol { System::ServiceModel::TransactionProtocol ^ get(); void set(System::ServiceModel::TransactionProtocol ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.ServiceModel.Configuration.TransactionProtocolConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("transactionProtocol", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransactionProtocol</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="210bf-151">Ruft das Transaktionsprotokoll ab, das mit dieser Bindung verwendet werden soll, oder legt es fest.</span><span class="sxs-lookup"><span data-stu-id="210bf-151">Gets or sets the transaction protocol to be used with this binding.</span></span></summary>
        <value><span data-ttu-id="210bf-152">Ein <see cref="T:System.ServiceModel.TransactionProtocol" />, das das Transaktionsprotokoll angibt, das mit dieser Bindung verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="210bf-152">A <see cref="T:System.ServiceModel.TransactionProtocol" /> that specifies the transaction protocol to be used with this binding.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TransferMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.TransferMode TransferMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.TransferMode TransferMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Configuration.NetNamedPipeBindingElement.TransferMode" />
      <MemberSignature Language="VB.NET" Value="Public Property TransferMode As TransferMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::TransferMode TransferMode { System::ServiceModel::TransferMode get(); void set(System::ServiceModel::TransferMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Configuration.ConfigurationProperty("transferMode", DefaultValue=Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.TransferMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="210bf-153">Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob Meldungen gepuffert werden oder bei einer Anforderung oder Antwort per Stream übertragen werden.</span><span class="sxs-lookup"><span data-stu-id="210bf-153">Gets or sets a value that specifies whether messages are buffered or streamed or a request or response.</span></span></summary>
        <value><span data-ttu-id="210bf-154">Ein gültiger <see cref="T:System.ServiceModel.TransferMode" />-Wert, der angibt, ob Meldungen bei einer Anforderung oder Antwort gepuffert oder per Stream übertragen werden.</span><span class="sxs-lookup"><span data-stu-id="210bf-154">A valid <see cref="T:System.ServiceModel.TransferMode" /> value that specifies whether messages are buffered or streamed or a request or response.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>