<Type Name="FileLogger" FullName="Microsoft.Build.Logging.FileLogger">
  <Metadata><Meta Name="ms.openlocfilehash" Value="559102f92c113c174ca826493d48140f1c55b8f8" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86623547" /></Metadata><TypeSignature Language="C#" Value="public class FileLogger : Microsoft.Build.Logging.ConsoleLogger" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileLogger extends Microsoft.Build.Logging.ConsoleLogger" />
  <TypeSignature Language="DocId" Value="T:Microsoft.Build.Logging.FileLogger" />
  <TypeSignature Language="VB.NET" Value="Public Class FileLogger&#xA;Inherits ConsoleLogger" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileLogger : Microsoft::Build::Logging::ConsoleLogger" />
  <TypeSignature Language="F#" Value="type FileLogger = class&#xA;    inherit ConsoleLogger" />
  <AssemblyInfo>
    <AssemblyName>Microsoft.Build</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>15.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>Microsoft.Build.Logging.ConsoleLogger</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="fccbe-101">Eine Spezialisierung der ConsoleLogger, die in einer Datei statt der Konsole protokolliert.</span><span class="sxs-lookup"><span data-stu-id="fccbe-101">A specialization of the ConsoleLogger that logs to a file instead of the console.</span></span>
<span data-ttu-id="fccbe-102">In Bezug auf das Geschriebene und das Aussehen ist die Ausgabe identisch.</span><span class="sxs-lookup"><span data-stu-id="fccbe-102">The output in terms of what is written and how it looks is identical.</span></span> <span data-ttu-id="fccbe-103">Beispielsweise können Sie mit FileLogger ein ausführliches Protokoll in einer Datei erstellen, während gleichzeitig nur Ereignisse mit hoher Priorität mit ConsoleLogger in der Konsole protokolliert werden.</span><span class="sxs-lookup"><span data-stu-id="fccbe-103">For example you can log verbosely to a file using the FileLogger while simultaneously logging only high priority events to the console using a ConsoleLogger.</span></span></summary>
    <remarks><span data-ttu-id="fccbe-104">Es ist bedauerlich, dass dies von ConsoleLogger abgeleitet ist, das selbst eine Fassade ist. Dies macht es komplizierter, z. b. gibt es eine parameterbisierung in dieser Klasse, zuzüglich von baseconsolelogger.</span><span class="sxs-lookup"><span data-stu-id="fccbe-104">It's unfortunate that this is derived from ConsoleLogger, which is itself a facade; it makes things more complex -- for example, there is parameter parsing in this class, plus in BaseConsoleLogger.</span></span> <span data-ttu-id="fccbe-105">Allerdings muss der FileLogger von ConsoleLogger abgeleitet werden, da er auf diese Weise in Whidbey ausgeliefert wurde.</span><span class="sxs-lookup"><span data-stu-id="fccbe-105">However we have to derive FileLogger from ConsoleLogger because it shipped that way in Whidbey.</span></span></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileLogger ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Logging.FileLogger.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileLogger();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fccbe-106">Standardkonstruktor</span><span class="sxs-lookup"><span data-stu-id="fccbe-106">Default constructor.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Initialize">
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="fccbe-107">Initialisiert eine Dateiprotokollierung für ein angegebenes Buildereignis oder in einer Umgebung mit mehreren Prozessoren.</span><span class="sxs-lookup"><span data-stu-id="fccbe-107">Initializes a file logger for a given build event or in a multiprocessor environment.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (Microsoft.Build.Framework.IEventSource eventSource);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (eventSource As IEventSource)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource);" />
      <MemberSignature Language="F#" Value="override this.Initialize : Microsoft.Build.Framework.IEventSource -&gt; unit" Usage="fileLogger.Initialize eventSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="fccbe-108">Verfügbare Ereignisse</span><span class="sxs-lookup"><span data-stu-id="fccbe-108">Available events.</span></span></param>
        <summary><span data-ttu-id="fccbe-109">Registriert die Konsolendateiprotokollierung für alle Buildereignisse.</span><span class="sxs-lookup"><span data-stu-id="fccbe-109">Signs up the console file logger for all build events.</span></span>
<span data-ttu-id="fccbe-110">Dies ist die abwärtskompatible Überladung.</span><span class="sxs-lookup"><span data-stu-id="fccbe-110">This is the backward-compatible overload.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (Microsoft.Build.Framework.IEventSource eventSource, int nodeCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class Microsoft.Build.Framework.IEventSource eventSource, int32 nodeCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Logging.FileLogger.Initialize(Microsoft.Build.Framework.IEventSource,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (eventSource As IEventSource, nodeCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(Microsoft::Build::Framework::IEventSource ^ eventSource, int nodeCount);" />
      <MemberSignature Language="F#" Value="override this.Initialize : Microsoft.Build.Framework.IEventSource * int -&gt; unit" Usage="fileLogger.Initialize (eventSource, nodeCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventSource" Type="Microsoft.Build.Framework.IEventSource" />
        <Parameter Name="nodeCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="eventSource"><span data-ttu-id="fccbe-111">Die Ereignisquelle.</span><span class="sxs-lookup"><span data-stu-id="fccbe-111">The event source.</span></span></param>
        <param name="nodeCount"><span data-ttu-id="fccbe-112">Die Knotenanzahl.</span><span class="sxs-lookup"><span data-stu-id="fccbe-112">The node count.</span></span></param>
        <summary><span data-ttu-id="fccbe-113">Multiprozessorfähige Initialisierung</span><span class="sxs-lookup"><span data-stu-id="fccbe-113">Multiproc aware initialization</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Shutdown">
      <MemberSignature Language="C#" Value="public override void Shutdown ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Shutdown() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.Build.Logging.FileLogger.Shutdown" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Shutdown ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Shutdown();" />
      <MemberSignature Language="F#" Value="override this.Shutdown : unit -&gt; unit" Usage="fileLogger.Shutdown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>Microsoft.Build</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>15.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fccbe-114">Hierbei handelt es sich um die Implementierung der Shutdown-Methode von ILogger. Die Protokolldatei muss geleert und geschlossen werden.</span><span class="sxs-lookup"><span data-stu-id="fccbe-114">Shutdown method implementation of ILogger - we need to flush and close our logfile.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fccbe-115">Die Methode muss das Datei Protokoll leeren und schließen.</span><span class="sxs-lookup"><span data-stu-id="fccbe-115">The method must flush and close the file log.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
