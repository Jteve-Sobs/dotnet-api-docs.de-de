<Type Name="IBinarySerialize" FullName="Microsoft.SqlServer.Server.IBinarySerialize">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ef8c011695a45cf43197dda699d3ad988ba9a430" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69303754" /></Metadata><TypeSignature Language="C#" Value="public interface IBinarySerialize" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBinarySerialize" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.IBinarySerialize" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBinarySerialize" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBinarySerialize" />
  <TypeSignature Language="F#" Value="type IBinarySerialize = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="95355-101">Stellt eine benutzerdefinierte Implementierung für die Serialisierung und Deserialisierung benutzerdefinierter Typen (User-Defined Type, UDT) und benutzerdefinierter Aggregate bereit.</span><span class="sxs-lookup"><span data-stu-id="95355-101">Provides custom implementation for user-defined type (UDT) and user-defined aggregate serialization and deserialization.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95355-102">Benutzerdefinierte Typen (User-Defined Types, UDTs) und benutzerdefinierte Aggregate sind erforderlich, um ein Speicherformat zu definieren <xref:Microsoft.SqlServer.Server.Format>, bei dem es sich entweder um handelt.`Native`</span><span class="sxs-lookup"><span data-stu-id="95355-102">User-defined types (UDTs) and user-defined aggregates are required to define a storage format, which can be either <xref:Microsoft.SqlServer.Server.Format>.`Native`</span></span> <span data-ttu-id="95355-103">oder <xref:Microsoft.SqlServer.Server.Format>.`UserDefined`.</span><span class="sxs-lookup"><span data-stu-id="95355-103">or <xref:Microsoft.SqlServer.Server.Format>.`UserDefined`.</span></span>  
  
 <span data-ttu-id="95355-104"><xref:Microsoft.SqlServer.Server.Format>.`Native`</span><span class="sxs-lookup"><span data-stu-id="95355-104"><xref:Microsoft.SqlServer.Server.Format>.`Native`</span></span> <span data-ttu-id="95355-105">ermöglicht es SQL Server, die Serialisierung und Deserialisierung automatisch zu verarbeiten, aber das Format weist Einschränkungen hinsichtlich der Art von Typen auf, die Sie verarbeiten kann.</span><span class="sxs-lookup"><span data-stu-id="95355-105">allows SQL Server to handle serialization and deserialization automatically, but the format has restrictions on the kind of types it can handle.</span></span> <span data-ttu-id="95355-106"><xref:Microsoft.SqlServer.Server.Format>.`UserDefined`</span><span class="sxs-lookup"><span data-stu-id="95355-106"><xref:Microsoft.SqlServer.Server.Format>.`UserDefined`</span></span> <span data-ttu-id="95355-107">ermöglicht es benutzerdefinierten Typen und Aggregaten, ihre eigene Serialisierung zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="95355-107">allows user-defined types and aggregates to handle their own serialization.</span></span> <span data-ttu-id="95355-108">Benutzerdefinierte Typen und Aggregate müssen mit <xref:Microsoft.SqlServer.Server.Format>markiert werden.`UserDefined`</span><span class="sxs-lookup"><span data-stu-id="95355-108">User-defined types and aggregates must be marked with <xref:Microsoft.SqlServer.Server.Format>.`UserDefined`</span></span> <span data-ttu-id="95355-109">im-Attribut `SqlUserDefinedAggregate` <xref:Microsoft.SqlServer.Server.IBinarySerialize> oder im-Attribut muss und die-Schnittstelle implementieren. `SqlUserDefinedType`</span><span class="sxs-lookup"><span data-stu-id="95355-109">in the `SqlUserDefinedType` or `SqlUserDefinedAggregate` attribute, and must implement the <xref:Microsoft.SqlServer.Server.IBinarySerialize> interface.</span></span>  
  
 <span data-ttu-id="95355-110">Beachten Sie, dass die Gesamtgröße jeder Instanz selbst bei der benutzerdefinierten Serialisierung unter dem maximal zulässigen Limit liegen muss, derzeit 8000 Bytes.</span><span class="sxs-lookup"><span data-stu-id="95355-110">Note that even with custom serialization, the total size of each instance must be under the maximum allowed limit, currently 8000 bytes.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public void Read (System.IO.BinaryReader r);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Read(class System.IO.BinaryReader r) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Read (r As BinaryReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Read(System::IO::BinaryReader ^ r);" />
      <MemberSignature Language="F#" Value="abstract member Read : System.IO.BinaryReader -&gt; unit" Usage="iBinarySerialize.Read r" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="r" Type="System.IO.BinaryReader" />
      </Parameters>
      <Docs>
        <param name="r"><span data-ttu-id="95355-111">Der <see cref="T:System.IO.BinaryReader" />-Stream, aus dem das Objekt deserialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="95355-111">The <see cref="T:System.IO.BinaryReader" /> stream from which the object is deserialized.</span></span></param>
        <summary><span data-ttu-id="95355-112">Generiert einen benutzerdefinierten Typ (UDT) oder ein benutzerdefiniertes Aggregat aus seiner Binärform.</span><span class="sxs-lookup"><span data-stu-id="95355-112">Generates a user-defined type (UDT) or user-defined aggregate from its binary form.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95355-113">Die <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> -Methode muss das-Objekt mithilfe der von der <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> -Methode geschriebenen Informationen wiederherstellen.</span><span class="sxs-lookup"><span data-stu-id="95355-113">The <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> method must reconstitute your object using the information written by the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95355-114">Im folgenden Beispiel wird die Implementierung <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> der-Methode eines UDT veranschaulicht, die einen <xref:System.IO.BinaryReader> verwendet, um einen zuvor persistenten UDT zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="95355-114">The following example shows the implementation of the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> method of a UDT, which uses a <xref:System.IO.BinaryReader> to de-serialize a previously persisted UDT.</span></span> <span data-ttu-id="95355-115">In diesem Beispiel wird davon ausgegangen, dass der UDT über `StringValue` zwei `DoubleValue`Daten Eigenschaften verfügt: und.</span><span class="sxs-lookup"><span data-stu-id="95355-115">This example assumes that the UDT has two data properties: `StringValue` and `DoubleValue`.</span></span>  
  
 [!code-csharp[DataWorks IBinarySerialize Samples#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks IBinarySerialize Samples/CS/source.cs#1)]
 [!code-vb[DataWorks IBinarySerialize Samples#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks IBinarySerialize Samples/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Write">
      <MemberSignature Language="C#" Value="public void Write (System.IO.BinaryWriter w);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Write(class System.IO.BinaryWriter w) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Write (w As BinaryWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Write(System::IO::BinaryWriter ^ w);" />
      <MemberSignature Language="F#" Value="abstract member Write : System.IO.BinaryWriter -&gt; unit" Usage="iBinarySerialize.Write w" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="w" Type="System.IO.BinaryWriter" />
      </Parameters>
      <Docs>
        <param name="w"><span data-ttu-id="95355-116">Der <see cref="T:System.IO.BinaryWriter" />-Stream, in den der UDT oder das benutzerdefinierte Aggregat serialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="95355-116">The <see cref="T:System.IO.BinaryWriter" /> stream to which the UDT or user-defined aggregate is serialized.</span></span></param>
        <summary><span data-ttu-id="95355-117">Konvertiert einen benutzerdefinierten Typ (UDT) oder ein benutzerdefiniertes Aggregat in seine Binärform, sodass er/es behalten werden kann.</span><span class="sxs-lookup"><span data-stu-id="95355-117">Converts a user-defined type (UDT) or user-defined aggregate into its binary format so that it may be persisted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="95355-118">Schreiben Sie genügend Informationen in den binären Stream, damit <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> die Methode den UDT oder das benutzerdefinierte Aggregat wiederherstellen kann.</span><span class="sxs-lookup"><span data-stu-id="95355-118">Write sufficient information to the binary stream to allow the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A> method to reconstitute your UDT or user-defined aggregate.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="95355-119">Das folgende Beispiel zeigt die Implementierung <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> der-Methode eines UDT, der einen <xref:System.IO.BinaryWriter> verwendet, um den UDT im benutzerdefinierten Binärformat zu serialisieren.</span><span class="sxs-lookup"><span data-stu-id="95355-119">The following example shows the implementation of the <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A> method of a UDT, which uses a <xref:System.IO.BinaryWriter> to serialize the UDT in the user-defined binary format.</span></span> <span data-ttu-id="95355-120">Der Zweck des Auffüll Zeichens NULL besteht darin sicherzustellen, dass der Zeichen folgen Wert vollständig vom doppelten Wert getrennt ist, sodass ein UDT im Transact-SQL-Code mit einem anderen verglichen wird, Zeichen folgen Bytes mit Zeichen folgen Bytes verglichen werden und doppelte Bytes mit Double verglichen werden. Satz.</span><span class="sxs-lookup"><span data-stu-id="95355-120">The purpose of the null character padding is to ensure that the string value is completely separated from the double value, so that one UDT is compared to another in Transact-SQL code, string bytes are compared to string bytes and double bytes are compared to double bytes.</span></span>  
  
 [!code-csharp[DataWorks IBinarySerialize Samples#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks IBinarySerialize Samples/CS/source.cs#2)]
 [!code-vb[DataWorks IBinarySerialize Samples#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks IBinarySerialize Samples/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
