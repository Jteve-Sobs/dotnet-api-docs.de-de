<Type Name="SqlContext" FullName="Microsoft.SqlServer.Server.SqlContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3b45e91d7bd34d4c100fe6f8e74d63c7e8031a6d" />
    <Meta Name="ms.sourcegitcommit" Value="7ec8019168133f71aa6ce8dadc6f9e1ebb3208af" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/10/2018" />
    <Meta Name="ms.locfileid" Value="40212186" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlContext sealed" />
  <TypeSignature Language="F#" Value="type SqlContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Abstraktion des Aufruferkontextes dar, die Zugriff auf das <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />-Objekt, das <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />-Objekt und das <see cref="T:System.Security.Principal.WindowsIdentity" />-Objekt bereitstellt. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:Microsoft.SqlServer.Server.SqlContext> Objekt kann verwendet werden, um den Triggerkontext (für die Ausführung von Code in einem Trigger) und das Pipe-Objekt (falls verfügbar, z. B. in gespeicherten Prozeduren) zu erhalten. Es kann auch zum Abrufen verwendet werden eine <xref:System.Security.Principal.WindowsIdentity> Objekt, das die Microsoft Windows-Identität des aufrufenden Clients darstellt, wenn der Client, mit dem Server mithilfe authentifiziert der integrierten Authentifizierung.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt ein neues <xref:Microsoft.SqlServer.Server.SqlDataRecord> und die zugehörige <xref:Microsoft.SqlServer.Server.SqlMetaData>. Im Beispiel wird dann markiert den Anfang eines Resultsets mithilfe der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> -Methode sendet die Datensätze mit Beispieldaten, zurück an den Client mithilfe der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> -Methode, und markiert das Ende des Resultsets festgelegt, mit der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> Methode.  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob der aufrufende Code in SQL Server ausgeführt wird und ob auf die Kontextverbindung zugegriffen werden kann.</summary>
        <value>
          <see langword="True" />, wenn die Kontextverbindung verfügbar ist und auf die anderen <see cref="T:Microsoft.SqlServer.Server.SqlContext" />-Member zugegriffen werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft "false", alle anderen gibt <xref:Microsoft.SqlServer.Server.SqlContext> Member Auslösen einer <xref:System.InvalidOperationException> verwendet.  
  
 Wenn diese Eigenschaft auf "false" zurückgibt, Versuch, ein Verbindungsobjekt zu öffnen, enthält "kontextverbindung = True" in der Verbindungszeichenfolge ein Fehler auftritt.  
  
 Diese Eigenschaft ist schreibgeschützt.  
  
 Beim ADO.NET für den Datenzugriff, zu verwenden, wenn ein Stück Code sowohl in SQL Server (mit Integration der common Language Runtime) als auch außerhalb von SQL Server ausgeführt werden kann, kann diese Eigenschaft verwendet werden, um zu überprüfen, ob die kontextverbindung verfügbar ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlPipe Pipe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pipe As SqlPipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlPipe ^ Pipe { Microsoft::SqlServer::Server::SqlPipe ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pipe : Microsoft.SqlServer.Server.SqlPipe" Usage="Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlPipe</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Pipe-Objekt ab, das dem Aufrufer das Senden von Resultsets, Meldungen und Ergebnissen der Ausführung von Befehlen zurück an den Client ermöglicht.</summary>
        <value>Eine Instanz von <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, wenn eine Pipe verfügbar ist, oder <see langword="null" />, wenn der Aufruf in einem Kontext ohne Pipe (z. B. in einer benutzerdefinierten Funktion) erfolgt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn von außerhalb von SQL Server, aufgerufen eine <xref:System.NotSupportedException> ausgelöst.  
  
 Diese Eigenschaft ist schreibgeschützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerContext">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TriggerContext As SqlTriggerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlTriggerContext ^ TriggerContext { Microsoft::SqlServer::Server::SqlTriggerContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerContext : Microsoft.SqlServer.Server.SqlTriggerContext" Usage="Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlTriggerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Triggerkontext ab, mit dem dem Aufrufer Informationen über den Auslöser des Triggers und eine Zuordnung der aktualisierten Spalten bereitgestellt werden.</summary>
        <value>Eine Instanz von <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />, wenn ein Triggerkontext verfügbar ist, oder <see langword="null" />, wenn der Aufruf außerhalb eines Triggeraufrufs erfolgt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:Microsoft.SqlServer.Server.SqlTriggerContext> Objekt kann nur von innerhalb einer common Language Runtime-Triggers abgerufen werden.  
  
 Wenn die <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> Eigenschaft erfolgt über außerhalb von SQL Server, eine <xref:System.NotSupportedException> ausgelöst.  
  
 Diese Eigenschaft ist schreibgeschützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die Microsoft Windows-Identität des Aufrufers.</summary>
        <value>Eine <see cref="T:System.Security.Principal.WindowsIdentity" />-Instanz, die die Windows-Identität des Aufrufers darstellt, oder <see langword="null" />, wenn der Client mithilfe der SQL Server-Authentifizierung authentifiziert wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Common Language Runtime (CLR)-Code innerhalb von SQL Server wird immer im Kontext des Prozesskontos aufgerufen. Wenn es für den Code zum Ausführen einer Aktion, die mit der Identität des aufrufenden Benutzers anstelle der SQL Server-Prozess-Identität erforderlich ist, sollte über diese Eigenschaft ein Identitätswechseltoken abgerufen werden. Wenn das <xref:System.Security.Principal.WindowsIdentity>-Objekt abgerufen wurde, können Aufrufer das Clientkonto imitieren und in deren Namen Aktionen durchführen.  
  
 Wenn von außerhalb von SQL Server, aufgerufen eine <xref:System.NotSupportedException> ausgelöst.  
  
 Auf diese Eigenschaft können nur die Assemblys zugreifen, die mit der `EXTERNAL_ACCESS`-Berechtigung oder der `UNSAFE`-Berechtigung markiert wurden.  
  
 Diese Eigenschaft ist schreibgeschützt.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt das Abrufen der Windows-Identität des aufrufenden Clients und den Client imitieren.
  
 [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>