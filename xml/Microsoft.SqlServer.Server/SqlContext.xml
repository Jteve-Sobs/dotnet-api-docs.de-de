<Type Name="SqlContext" FullName="Microsoft.SqlServer.Server.SqlContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="925c62c41e322e116fd365bf090d9efd2a63835d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36730214" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlContext sealed" />
  <TypeSignature Language="F#" Value="type SqlContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="10fa2-101">Stellt eine Abstraktion des Aufruferkontextes dar, die Zugriff auf das <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />-Objekt, das <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />-Objekt und das <see cref="T:System.Security.Principal.WindowsIdentity" />-Objekt bereitstellt.</span>
      <span class="sxs-lookup">
        <span data-stu-id="10fa2-101">Represents an abstraction of the caller's context, which provides access to the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />, and <see cref="T:System.Security.Principal.WindowsIdentity" /> objects.</span>
      </span>
      <span data-ttu-id="10fa2-102">Diese Klasse kann nicht vererbt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="10fa2-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10fa2-103">Die <xref:Microsoft.SqlServer.Server.SqlContext> Objekt kann verwendet werden, die Triggerkontext (für die Ausführung von Code in einem Trigger) und das Pipeobjekt (falls verfügbar, z. B. in gespeicherten Prozeduren) abgerufen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="10fa2-103">The <xref:Microsoft.SqlServer.Server.SqlContext> object can be used to obtain the trigger context (for code executing in a trigger) and the pipe object (when available, such as in stored procedures).</span></span> <span data-ttu-id="10fa2-104">Es kann auch verwendet zum Abrufen einer <xref:System.Security.Principal.WindowsIdentity> Objekt, das die Microsoft Windows-Identität des aufrufenden Clients darstellt, wenn der Client, mit dem Server mithilfe authentifiziert der integrierten Authentifizierung.</span><span class="sxs-lookup"><span data-stu-id="10fa2-104">It can also be used to obtain a <xref:System.Security.Principal.WindowsIdentity> object that represents the Microsoft Windows identity of the calling client, if the client authenticated with the server using integrated authentication.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10fa2-105">Das folgende Beispiel erstellt ein neues <xref:Microsoft.SqlServer.Server.SqlDataRecord> und dessen <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="10fa2-105">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="10fa2-106">Im Beispiel wird dann kennzeichnet den Anfang eines Resultsets mithilfe der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> Methode, sendet die Datensätze mit Beispieldaten zurück an den Client mithilfe der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> -Methode und markiert das Ende des Resultsets festgelegt, mit der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="10fa2-106">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10fa2-107">Gibt an, ob der aufrufende Code in SQL Server ausgeführt wird und ob auf die Kontextverbindung zugegriffen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10fa2-107">Specifies whether the calling code is running within SQL Server, and if the context connection can be accessed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="10fa2-108">
            <see langword="True" />, wenn die Kontextverbindung verfügbar ist und auf die anderen <see cref="T:Microsoft.SqlServer.Server.SqlContext" />-Member zugegriffen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10fa2-108">
              <see langword="True" /> if the context connection is available and the other <see cref="T:Microsoft.SqlServer.Server.SqlContext" /> members can be accessed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10fa2-109">Wenn diese Eigenschaft "false", alle anderen gibt <xref:Microsoft.SqlServer.Server.SqlContext> Member Auslösen einer <xref:System.InvalidOperationException> verwendet.</span><span class="sxs-lookup"><span data-stu-id="10fa2-109">If this property returns false, all the other <xref:Microsoft.SqlServer.Server.SqlContext> members throw an <xref:System.InvalidOperationException> if used.</span></span>  
  
 <span data-ttu-id="10fa2-110">Wenn diese Eigenschaft auf "false" zurückgibt, jeder Versuch, ein Verbindungsobjekt zu öffnen, verfügt "Context Connection =" true "" in der Verbindungszeichenfolge ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="10fa2-110">If this property returns false, any attempt to open a connection object that has "context connection=true" in the connection string fails.</span></span>  
  
 <span data-ttu-id="10fa2-111">Diese Eigenschaft ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="10fa2-111">This property is read-only.</span></span>  
  
 <span data-ttu-id="10fa2-112">Wenn ADO.NET für den Datenzugriff, zu verwenden, wenn ein Stück Code sowohl in SQL Server (mit der Integration der common Language Runtime) als auch außerhalb von SQL Server ausgeführt werden kann, kann diese Eigenschaft verwendet werden, zu überprüfen, ob die kontextverbindung verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="10fa2-112">When using ADO.NET for data-access, if a piece of code may run both inside SQL Server (using common language runtime integration) and outside SQL Server, this property can be used to check whether the context connection is available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlPipe Pipe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pipe As SqlPipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlPipe ^ Pipe { Microsoft::SqlServer::Server::SqlPipe ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pipe : Microsoft.SqlServer.Server.SqlPipe" Usage="Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlPipe</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10fa2-113">Ruft das Pipe-Objekt ab, das dem Aufrufer das Senden von Resultsets, Meldungen und Ergebnissen der Ausführung von Befehlen zurück an den Client ermöglicht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10fa2-113">Gets the pipe object that allows the caller to send result sets, messages, and the results of executing commands back to the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="10fa2-114">Eine Instanz von <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, wenn eine Pipe verfügbar ist, oder <see langword="null" />, wenn der Aufruf in einem Kontext ohne Pipe (z. B. in einer benutzerdefinierten Funktion) erfolgt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10fa2-114">An instance of <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> if a pipe is available, or <see langword="null" /> if called in a context where pipe is not available (for example, in a user-defined function).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10fa2-115">Wenn von außerhalb von SQL Server aufgerufen eine <xref:System.NotSupportedException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="10fa2-115">If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="10fa2-116">Diese Eigenschaft ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="10fa2-116">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerContext">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TriggerContext As SqlTriggerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlTriggerContext ^ TriggerContext { Microsoft::SqlServer::Server::SqlTriggerContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerContext : Microsoft.SqlServer.Server.SqlTriggerContext" Usage="Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlTriggerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10fa2-117">Ruft den Triggerkontext ab, mit dem dem Aufrufer Informationen über den Auslöser des Triggers und eine Zuordnung der aktualisierten Spalten bereitgestellt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10fa2-117">Gets the trigger context used to provide the caller with information about what caused the trigger to fire, and a map of the columns that were updated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="10fa2-118">Eine Instanz von <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />, wenn ein Triggerkontext verfügbar ist, oder <see langword="null" />, wenn der Aufruf außerhalb eines Triggeraufrufs erfolgt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10fa2-118">An instance of <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" /> if a trigger context is available, or <see langword="null" /> if called outside of a trigger invocation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10fa2-119">Die <xref:Microsoft.SqlServer.Server.SqlTriggerContext> Objekt kann nur von innerhalb einer common Language Runtime-Triggers abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="10fa2-119">The <xref:Microsoft.SqlServer.Server.SqlTriggerContext> object can only be retrieved from within a common language runtime trigger.</span></span>  
  
 <span data-ttu-id="10fa2-120">Wenn die <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> Eigenschaft erfolgt über außerhalb von SQL Server, eine <xref:System.NotSupportedException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="10fa2-120">If the <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> property is accessed from outside of SQL Server, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="10fa2-121">Diese Eigenschaft ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="10fa2-121">This property is read-only.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="10fa2-122">Die Microsoft Windows-Identität des Aufrufers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10fa2-122">The Microsoft Windows identity of the caller.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="10fa2-123">Eine <see cref="T:System.Security.Principal.WindowsIdentity" />-Instanz, die die Windows-Identität des Aufrufers darstellt, oder <see langword="null" />, wenn der Client mithilfe der SQL Server-Authentifizierung authentifiziert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="10fa2-123">A <see cref="T:System.Security.Principal.WindowsIdentity" /> instance representing the Windows identity of the caller, or <see langword="null" /> if the client was authenticated using SQL Server Authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="10fa2-124">Common Language Runtime (CLR) Code innerhalb von SQL Server wird immer im Kontext des Prozesskontos aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="10fa2-124">Common language runtime (CLR) code inside SQL Server is always invoked in the context of the process account.</span></span> <span data-ttu-id="10fa2-125">Wenn es für den Code zum Ausführen einer Aktion mit der Identität des aufrufenden Benutzers anstelle der SQL Server-Prozessidentität erforderlich ist, sollte ein Identitätswechseltoken über diese Eigenschaft abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="10fa2-125">If it is necessary for the code to perform an action using calling user’s identity instead of the SQL Server process identity, then an impersonation token should be obtained through this property.</span></span> <span data-ttu-id="10fa2-126">Wenn das <xref:System.Security.Principal.WindowsIdentity>-Objekt abgerufen wurde, können Aufrufer das Clientkonto imitieren und in deren Namen Aktionen durchführen.</span><span class="sxs-lookup"><span data-stu-id="10fa2-126">After obtaining the <xref:System.Security.Principal.WindowsIdentity> object, callers can impersonate the client account and perform actions on their behalf.</span></span>  
  
 <span data-ttu-id="10fa2-127">Wenn von außerhalb von SQL Server aufgerufen eine <xref:System.NotSupportedException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="10fa2-127">If invoked from outside SQL Server, a <xref:System.NotSupportedException> is thrown.</span></span>  
  
 <span data-ttu-id="10fa2-128">Auf diese Eigenschaft können nur die Assemblys zugreifen, die mit der `EXTERNAL_ACCESS`-Berechtigung oder der `UNSAFE`-Berechtigung markiert wurden.</span><span class="sxs-lookup"><span data-stu-id="10fa2-128">Only assemblies marked with `EXTERNAL_ACCESS` or `UNSAFE` permissions can access this property.</span></span>  
  
 <span data-ttu-id="10fa2-129">Diese Eigenschaft ist schreibgeschützt.</span><span class="sxs-lookup"><span data-stu-id="10fa2-129">This property is read-only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="10fa2-130">Im folgende Beispiel veranschaulicht das Abrufen der Windows-Identität des aufrufenden Clients und die Identität des Clients annehmen.</span><span class="sxs-lookup"><span data-stu-id="10fa2-130">The following example shows how to get the Windows identity of the calling client and impersonate the client.</span></span> <span data-ttu-id="10fa2-131">Finden Sie unter "Impersonation-Beispiel" in SQL Server-Onlinedokumentation für ein Beispiel für Identitätswechsel unter Verwendung der <xref:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="10fa2-131">See "Impersonation Sample" in SQL Server Books Online for an example of impersonation using the <xref:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity%2A> property.</span></span>  
  
 [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>