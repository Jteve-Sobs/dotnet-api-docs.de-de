<Type Name="SqlContext" FullName="Microsoft.SqlServer.Server.SqlContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="825d62a5e9710c1402283dbef5bd00b05faec9ce" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69303640" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlContext sealed" />
  <TypeSignature Language="F#" Value="type SqlContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt eine Abstraktion des Aufruferkontextes dar, die Zugriff auf das <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />-Objekt, das <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />-Objekt und das <see cref="T:System.Security.Principal.WindowsIdentity" />-Objekt bereitstellt. Diese Klasse kann nicht vererbt werden.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:Microsoft.SqlServer.Server.SqlContext> -Objekt kann verwendet werden, um den Auslöse Kontext (für Code, der in einem-Endpunkt ausgeführt wird) und das Pipe-Objekt (sofern verfügbar, wie in gespeicherten Prozeduren) abzurufen. Sie kann auch verwendet werden, um ein <xref:System.Security.Principal.WindowsIdentity> -Objekt abzurufen, das die Microsoft Windows-Identität des aufrufenden Clients darstellt, wenn sich der Client beim Server mithilfe der integrierten Authentifizierung authentifiziert hat.  
  
   
  
## Examples  
 Im folgenden Beispiel werden ein neues <xref:Microsoft.SqlServer.Server.SqlDataRecord> <xref:Microsoft.SqlServer.Server.SqlMetaData>und ein erstellt. Anschließend markiert das Beispiel den Anfang eines Resultsets mithilfe der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> -Methode, sendet mithilfe der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> -Methode Datensätze mit Beispiel Daten an den Client zurück und markiert das Ende des Resultsets <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> mit der-Methode.  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="IsAvailable">
      <MemberSignature Language="C#" Value="public static bool IsAvailable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property bool IsAvailable" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IsAvailable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool IsAvailable { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAvailable : bool" Usage="Microsoft.SqlServer.Server.SqlContext.IsAvailable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, ob der aufrufende Code in SQL Server ausgeführt wird und ob auf die Kontextverbindung zugegriffen werden kann.</summary>
        <value><see langword="True" />, wenn die Kontextverbindung verfügbar ist und auf die anderen <see cref="T:Microsoft.SqlServer.Server.SqlContext" />-Member zugegriffen werden kann.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft false zurückgibt, lösen alle <xref:Microsoft.SqlServer.Server.SqlContext> anderen Member bei <xref:System.InvalidOperationException> Verwendung eine aus.  
  
 Wenn diese Eigenschaft false zurückgibt, schlägt der Versuch fehl, ein Verbindungs Objekt zu öffnen, das "context connection = true" in der Verbindungs Zeichenfolge aufweist.  
  
 Diese Eigenschaft ist schreibgeschützt.  
  
 Wenn Sie ADO.net für den Datenzugriff verwenden, kann diese Eigenschaft verwendet werden, um zu überprüfen, ob die Kontext Verbindung verfügbar ist, wenn ein Teil des Codes sowohl in SQL Server (mithilfe Common Language Runtime Integration) als auch außerhalb SQL Server ausgeführt werden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pipe">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlPipe Pipe { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlPipe Pipe" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Pipe As SqlPipe" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlPipe ^ Pipe { Microsoft::SqlServer::Server::SqlPipe ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pipe : Microsoft.SqlServer.Server.SqlPipe" Usage="Microsoft.SqlServer.Server.SqlContext.Pipe" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlPipe</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Pipe-Objekt ab, das dem Aufrufer das Senden von Resultsets, Meldungen und Ergebnissen der Ausführung von Befehlen zurück an den Client ermöglicht.</summary>
        <value>Eine Instanz von <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />, wenn eine Pipe verfügbar ist, oder <see langword="null" />, wenn der Aufruf in einem Kontext ohne Pipe (z. B. in einer benutzerdefinierten Funktion) erfolgt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn von außerhalb SQL Server aufgerufen wird, <xref:System.NotSupportedException> wird eine ausgelöst.  
  
 Diese Eigenschaft ist schreibgeschützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TriggerContext">
      <MemberSignature Language="C#" Value="public static Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class Microsoft.SqlServer.Server.SqlTriggerContext TriggerContext" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TriggerContext As SqlTriggerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property Microsoft::SqlServer::Server::SqlTriggerContext ^ TriggerContext { Microsoft::SqlServer::Server::SqlTriggerContext ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerContext : Microsoft.SqlServer.Server.SqlTriggerContext" Usage="Microsoft.SqlServer.Server.SqlContext.TriggerContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.SqlTriggerContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Triggerkontext ab, mit dem dem Aufrufer Informationen über den Auslöser des Triggers und eine Zuordnung der aktualisierten Spalten bereitgestellt werden.</summary>
        <value>Eine Instanz von <see cref="T:Microsoft.SqlServer.Server.SqlTriggerContext" />, wenn ein Triggerkontext verfügbar ist, oder <see langword="null" />, wenn der Aufruf außerhalb eines Triggeraufrufs erfolgt ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:Microsoft.SqlServer.Server.SqlTriggerContext> Objekt kann nur innerhalb eines Common Language Runtime-Auslösers abgerufen werden.  
  
 Wenn von <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> außerhalb SQL Server auf die Eigenschaft zugegriffen wird, wird <xref:System.NotSupportedException> eine ausgelöst.  
  
 Diese Eigenschaft ist schreibgeschützt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WindowsIdentity">
      <MemberSignature Language="C#" Value="public static System.Security.Principal.WindowsIdentity WindowsIdentity { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Security.Principal.WindowsIdentity WindowsIdentity" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property WindowsIdentity As WindowsIdentity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Security::Principal::WindowsIdentity ^ WindowsIdentity { System::Security::Principal::WindowsIdentity ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WindowsIdentity : System.Security.Principal.WindowsIdentity" Usage="Microsoft.SqlServer.Server.SqlContext.WindowsIdentity" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.WindowsIdentity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Die Microsoft Windows-Identität des Aufrufers.</summary>
        <value>Eine <see cref="T:System.Security.Principal.WindowsIdentity" />-Instanz, die die Windows-Identität des Aufrufers darstellt, oder <see langword="null" />, wenn der Client mithilfe der SQL Server-Authentifizierung authentifiziert wurde.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der CLR-Code (Common Language Runtime) in SQL Server wird immer im Kontext des Prozess Kontos aufgerufen. Wenn der Code eine Aktion mit dem Aufruf der Identität des Benutzers anstelle der SQL Server Prozess Identität ausführen muss, sollte ein Identitätswechsel Token über diese Eigenschaft abgerufen werden. Wenn das <xref:System.Security.Principal.WindowsIdentity>-Objekt abgerufen wurde, können Aufrufer das Clientkonto imitieren und in deren Namen Aktionen durchführen.  
  
 Wenn von außerhalb SQL Server aufgerufen wird, <xref:System.NotSupportedException> wird eine ausgelöst.  
  
 Auf diese Eigenschaft können nur die Assemblys zugreifen, die mit der `EXTERNAL_ACCESS`-Berechtigung oder der `UNSAFE`-Berechtigung markiert wurden.  
  
 Diese Eigenschaft ist schreibgeschützt.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die Windows-Identität des aufrufenden Clients abrufen und die Identität des Clients annehmen.
  
 [!code-csharp[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlContext.WindowsIdentity Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlContext.WindowsIdentity Sample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
