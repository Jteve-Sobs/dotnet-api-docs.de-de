<Type Name="SqlTriggerContext" FullName="Microsoft.SqlServer.Server.SqlTriggerContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="bbac181f84d245f3332012ab5580b5f07b87aa13" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69303517" /></Metadata><TypeSignature Language="C#" Value="public sealed class SqlTriggerContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlTriggerContext extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlTriggerContext" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlTriggerContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlTriggerContext sealed" />
  <TypeSignature Language="F#" Value="type SqlTriggerContext = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Kontextinformationen über den ausgelösten Trigger bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die bereitgestellten Kontextinformationen umfassen den Typ der Aktion, die den Trigger ausgelöst hat, die Spalten, die bei einem Aktualisierungs Vorgang geändert wurden, und im Fall eines DDL-Auslösers (Data Definition Language) eine XML-EVENTDATA-Struktur (siehe [Transact-SQL). Reference](/sql/t-sql/language-reference)), die den auslösenden Vorgang beschreibt.  
  
 Eine Instanz von <xref:Microsoft.SqlServer.Server.SqlTriggerContext> ist in der <xref:Microsoft.SqlServer.Server.SqlContext> -Klasse verfügbar, wenn der Code innerhalb eines-Auslösers <xref:Microsoft.SqlServer.Server.SqlContext.TriggerContext%2A> durch die-Eigenschaft ausgeführt wird.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, <xref:Microsoft.SqlServer.Server.SqlTriggerContext> wie ein-Objekt verwendet wird, <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> um zu bestimmen, ob eine Aktion aufgetreten ist. Wenn eine Zeile in die `user`Tabelle eingefügt wurde, werden der Benutzername und der echte Name aus der eingefügten Zeile abgerufen und dann der **UserNameAudit** -Tabelle hinzugefügt.  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#1)]
 [!code-vb[DataWorks SqlTriggerContext Sample#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ColumnCount">
      <MemberSignature Language="C#" Value="public int ColumnCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ColumnCount" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ColumnCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ColumnCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.ColumnCount : int" Usage="Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anzahl der Spalten in der an den Trigger gebundenen Datentabelle ab. Diese Eigenschaft ist schreibgeschützt.</summary>
        <value>Die Anzahl der Spalten in der an den Trigger gebundenen Datentabelle als ganze Zahl.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:Microsoft.SqlServer.Server.SqlTriggerContext.ColumnCount%2A>Eigenschaft ist nützlich, um die maximale Ordnungszahl zu <xref:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn%2A> ermitteln, die einen bestimmten Triggeraufruf zulässt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EventData">
      <MemberSignature Language="C#" Value="public System.Data.SqlTypes.SqlXml EventData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.SqlTypes.SqlXml EventData" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.EventData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EventData As SqlXml" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::SqlTypes::SqlXml ^ EventData { System::Data::SqlTypes::SqlXml ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EventData : System.Data.SqlTypes.SqlXml" Usage="Microsoft.SqlServer.Server.SqlTriggerContext.EventData" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.SqlTypes.SqlXml</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ereignisdaten für eine bestimmte Aktion ab, die den Trigger ausgelöst hat.</summary>
        <value>Die Ereignisdaten der Aktion, die den Trigger ausgelöst hat, als <see cref="T:System.Data.SqlTypes.SqlXml" />, wenn weitere Informationen verfügbar sind, andernfalls <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Informationen sind für DDL-Trigger (Data Definition Language) verfügbar. Über diese Eigenschaft sind keine Informationen für DML-Trigger (Data Manipulation Language, Daten Bearbeitungs Sprache) verfügbar.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUpdatedColumn">
      <MemberSignature Language="C#" Value="public bool IsUpdatedColumn (int columnOrdinal);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsUpdatedColumn(int32 columnOrdinal) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlTriggerContext.IsUpdatedColumn(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsUpdatedColumn (columnOrdinal As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsUpdatedColumn(int columnOrdinal);" />
      <MemberSignature Language="F#" Value="member this.IsUpdatedColumn : int -&gt; bool" Usage="sqlTriggerContext.IsUpdatedColumn columnOrdinal" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="columnOrdinal" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="columnOrdinal">Die nullbasierte Ordnungszahl der Spalte.</param>
        <summary>Gibt <see langword="true" /> zurück, wenn eine Spalte bei einer INSERT-Anweisung oder einer UPDATE-Anweisung geändert wurde.</summary>
        <returns><see langword="true" />, wenn die Spalte bei einem INSERT-Vorgang oder einem UPDATE-Vorgang geändert wurde.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Wird im Kontext eines Triggers aufgerufen, wenn der Wert der <see cref="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" />-Eigenschaft nicht <see langword="Insert" /> oder <see langword="Update" /> ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="TriggerAction">
      <MemberSignature Language="C#" Value="public Microsoft.SqlServer.Server.TriggerAction TriggerAction { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype Microsoft.SqlServer.Server.TriggerAction TriggerAction" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TriggerAction As TriggerAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::SqlServer::Server::TriggerAction TriggerAction { Microsoft::SqlServer::Server::TriggerAction get(); };" />
      <MemberSignature Language="F#" Value="member this.TriggerAction : Microsoft.SqlServer.Server.TriggerAction" Usage="Microsoft.SqlServer.Server.SqlTriggerContext.TriggerAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.TriggerAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gibt an, welche Aktion den Trigger ausgelöst hat.</summary>
        <value>Die Aktion, die den Trigger ausgelöst hat, als eine <see cref="T:Microsoft.SqlServer.Server.TriggerAction" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel zeigt einen Überwachungs--Auslösung. Wenn eine <xref:Microsoft.SqlServer.Server.TriggerAction.Insert> - <xref:Microsoft.SqlServer.Server.TriggerAction.Delete> oder-Aktion aufgetreten ist, werden die betroffenen Zeilen aus den eingefügten und gelöschten Tabellen abgerufen.  
  
 [!code-csharp[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/CS/source.cs#2)]
 [!code-vb[DataWorks SqlTriggerContext Sample#2](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlTriggerContext Sample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
