<Type Name="SqlPipe" FullName="Microsoft.SqlServer.Server.SqlPipe">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c591e65fa92805a7a1e5c96fa03d5a45d1f410bb" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class SqlPipe" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit SqlPipe extends System.Object" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.SqlPipe" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class SqlPipe" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlPipe sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7765e-101">Ermöglicht es verwalteten gespeicherten Prozeduren, die prozessintern in einer SQL Server-Datenbank ausgeführt werden, Ergebnisse an den Aufrufer zurückzugeben.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7765e-101">Allows managed stored procedures running in-process on a SQL Server database to return results back to the caller.</span>
      </span>
      <span data-ttu-id="7765e-102">Diese Klasse kann nicht vererbt werden.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7765e-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-103">Eine Instanz dieser Klasse über verwaltete gespeicherte Prozeduren zur Verfügung gestellt wird die <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> Eigenschaft von der <xref:Microsoft.SqlServer.Server.SqlContext> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7765e-103">An instance of this class is made available to managed stored procedures through the <xref:Microsoft.SqlServer.Server.SqlContext.Pipe%2A> property of the <xref:Microsoft.SqlServer.Server.SqlContext> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7765e-104">Im folgenden Beispiel wird <xref:System.Data.SqlClient.SqlConnection> und <xref:System.Data.SqlClient.SqlCommand> zum Auswählen von Zeilen aus einer Datenquelle in einer gespeicherten Prozedur.</span><span class="sxs-lookup"><span data-stu-id="7765e-104">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="7765e-105">Anschließend wird eine <xref:Microsoft.SqlServer.Server.SqlPipe> führen Sie den Befehl und die Ergebnisse zurück an den Client gesendet.</span><span class="sxs-lookup"><span data-stu-id="7765e-105">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ExecuteAndSend">
      <MemberSignature Language="C#" Value="public void ExecuteAndSend (System.Data.SqlClient.SqlCommand command);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExecuteAndSend(class System.Data.SqlClient.SqlCommand command) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.ExecuteAndSend(System.Data.SqlClient.SqlCommand)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExecuteAndSend (command As SqlCommand)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExecuteAndSend(System::Data::SqlClient::SqlCommand ^ command);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="command" Type="System.Data.SqlClient.SqlCommand" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="7765e-106">Das auszuführende <see cref="T:System.Data.SqlClient.SqlCommand" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-106">The <see cref="T:System.Data.SqlClient.SqlCommand" /> object to be executed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7765e-107">Führt den als Parameter übergebenen Befehl aus und sendet die Ergebnisse an den Client.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-107">Executes the command passed as a parameter and sends the results to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-108">Zusätzlich zu den tatsächlichen Ergebnisse werden andere Nachrichten und der Fehler auch direkt an den Client gesendet.</span><span class="sxs-lookup"><span data-stu-id="7765e-108">In addition to any actual results, other messages and errors are also sent directly to the client.</span></span>  
  
 <span data-ttu-id="7765e-109">Output-Parameter und Rückgabewerte werden nicht an den Client gesendet. Diese sind für den Aufrufer über die Parameters-Auflistung, der das Befehlsobjekt verfügbar.</span><span class="sxs-lookup"><span data-stu-id="7765e-109">Output parameters and return values are not sent to the client; these are available to the caller, through the parameters collection of the command object.</span></span>  
  
 <span data-ttu-id="7765e-110">Wenn der Befehl nicht auf eine prozessinterne Verbindung gebunden ist ein <xref:System.InvalidOperationException> ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="7765e-110">If the command is not bound to an in-process connection, an <xref:System.InvalidOperationException> is thrown.</span></span> <span data-ttu-id="7765e-111">Diese Methode wird nicht bei Befehlen unterstützt, die an prozessexterne Verbindungen gebunden sind.</span><span class="sxs-lookup"><span data-stu-id="7765e-111">This method is not supported on commands bound to out-of-process connections.</span></span>  
  
 <span data-ttu-id="7765e-112">Treten Fehler in der <xref:System.Data.SqlClient.SqlCommand> -Objekt, das gesendet wurde, werden Ausnahmen an die Pipe gesendet, aber eine Kopie wird auch den aufrufenden verwalteten Code gesendet,.</span><span class="sxs-lookup"><span data-stu-id="7765e-112">If there are errors in the <xref:System.Data.SqlClient.SqlCommand> object that was submitted, exceptions are sent to the pipe, but a copy is also sent to calling managed code.</span></span> <span data-ttu-id="7765e-113">Wenn der aufrufende Code die Ausnahme nicht abfängt, wird es im Stapel an den Transact-SQL-Code weitergeben und zweimal in der Ausgabe angezeigt.</span><span class="sxs-lookup"><span data-stu-id="7765e-113">If the calling code doesn't catch the exception, it will propagate up the stack to the Transact-SQL code and appear in the output twice.</span></span> <span data-ttu-id="7765e-114">Wenn der aufrufende Code die Ausnahme abfängt, der Pipe-Consumer wird der Fehler weiterhin angezeigt, aber es werden Fehler aufgrund doppelter.</span><span class="sxs-lookup"><span data-stu-id="7765e-114">If the calling code does catch the exception, the pipe consumer will still see the error, but there will not be a duplicate error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7765e-115">Im folgenden Beispiel wird <xref:System.Data.SqlClient.SqlConnection> und <xref:System.Data.SqlClient.SqlCommand> zum Auswählen von Zeilen aus einer Datenquelle in einer gespeicherten Prozedur.</span><span class="sxs-lookup"><span data-stu-id="7765e-115">The following example uses <xref:System.Data.SqlClient.SqlConnection> and <xref:System.Data.SqlClient.SqlCommand> to select rows from a data source in a stored procedure.</span></span> <span data-ttu-id="7765e-116">Anschließend wird eine <xref:Microsoft.SqlServer.Server.SqlPipe> führen Sie den Befehl und die Ergebnisse zurück an den Client gesendet.</span><span class="sxs-lookup"><span data-stu-id="7765e-116">The example then uses a <xref:Microsoft.SqlServer.Server.SqlPipe> to execute the command and send the results back to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.ExecuteAndSend#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.ExecuteAndSend/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7765e-117">
            <paramref name="command" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-117">The <paramref name="command" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7765e-118">Diese Methode wird nicht bei Befehlen unterstützt, die an prozessexterne Verbindungen gebunden sind.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-118">This method is not supported on commands bound to out-of-process connections.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsSendingResults">
      <MemberSignature Language="C#" Value="public bool IsSendingResults { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSendingResults" />
      <MemberSignature Language="DocId" Value="P:Microsoft.SqlServer.Server.SqlPipe.IsSendingResults" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSendingResults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSendingResults { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7765e-119">Ruft einen Wert ab, der angibt, ob der Modus der <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> das Senden einzelner Resultsets zurück an den Client zulässt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-119">Gets a value that indicates whether the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client.</span>
          </span>
          <span data-ttu-id="7765e-120">Diese Eigenschaft ist schreibgeschützt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-120">This property is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7765e-121">
            <see langword="true" />, wenn die <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />-Methode aufgerufen wurde und der Modus der <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> das Senden einzelner Resultsets zurück an den Client zulässt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-121">
              <see langword="true" /> if the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method has been called and the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> is in the mode of sending single result sets back to the client; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7765e-122">Sendet Ergebnisse direkt an den Client oder den aktuellen Ausgabeconsumer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-122">Sends results directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-123">Die **senden** -Methode sendet Daten direkt an den Client oder Aufrufer.</span><span class="sxs-lookup"><span data-stu-id="7765e-123">The **Send** method sends data straight to the client or caller.</span></span> <span data-ttu-id="7765e-124">Normalerweise ist es dem Client, der die Ausgabe der **Pipe** -Methode, aber im Fall von geschachtelten CLR gespeicherte Prozeduren, die Consumer der Ausgabe auch kann eine gespeicherte Prozedur handeln.</span><span class="sxs-lookup"><span data-stu-id="7765e-124">It is usually the client that consumes the output from the **Pipe** method, but in the case of nested CLR stored procedures the output consumer can also be a stored procedure.</span></span> <span data-ttu-id="7765e-125">Z. B. die prozedur1 ruft <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> mit dem Befehlstext "EXEC Procedure2".</span><span class="sxs-lookup"><span data-stu-id="7765e-125">For example, Procedure1 calls <xref:System.Data.SqlClient.SqlCommand.ExecuteReader%2A> with the command text "EXEC Procedure2".</span></span> <span data-ttu-id="7765e-126">Bei Procedure2 handelt es ist auch eine verwaltete gespeicherte Prozedur.</span><span class="sxs-lookup"><span data-stu-id="7765e-126">Procedure2 is also a managed stored procedure.</span></span> <span data-ttu-id="7765e-127">Wenn Procedure2 jetzt ruft <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, wird die Zeile an den Reader von Procedure1, nicht an den Client gesendet.</span><span class="sxs-lookup"><span data-stu-id="7765e-127">If Procedure2 now calls <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A>, the row is sent to Procedure1's reader, not to the client.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="7765e-128">Das an den Client gesendete einzeilige Resultset: ein <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-128">The single-row result set sent to the client: a <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7765e-129">Sendet ein Resultset mit einer Zeile direkt an den Client oder aktuellen Ausgabeconsumer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-129">Sends a single-row result set directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7765e-130">
            <paramref name="record" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-130">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (System.Data.SqlClient.SqlDataReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(class System.Data.SqlClient.SqlDataReader reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.Data.SqlClient.SqlDataReader)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (reader As SqlDataReader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::Data::SqlClient::SqlDataReader ^ reader);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Data.SqlClient.SqlDataReader" />
      </Parameters>
      <Docs>
        <param name="reader">
          <span data-ttu-id="7765e-131">Das mehrzeilige Resultset, das an den Client gesendet werden soll: ein <see cref="T:System.Data.SqlClient.SqlDataReader" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-131">The multirow result set to be sent to the client: a <see cref="T:System.Data.SqlClient.SqlDataReader" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7765e-132">Sendet ein Resultset mit mehreren Zeilen direkt an den Client oder aktuellen Ausgabeconsumer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-132">Sends a multirow result set directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-133">Wenn die <xref:System.Data.SqlClient.SqlDataReader> Objekt übergeben, wie ein Parameter Spalten ausgeblendet wurden, diese Spalten werden nicht weitergegeben, um das Resultset an den Client gesendet.</span><span class="sxs-lookup"><span data-stu-id="7765e-133">If the <xref:System.Data.SqlClient.SqlDataReader> object passed in as a parameter has hidden columns, those columns are not propagated to the result set sent to the client.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7765e-134">
            <paramref name="reader" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-134">The <paramref name="reader" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public void Send (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Send(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.Send(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Send (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Send(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="7765e-135">Die an den Client zu sendende Meldungszeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-135">The message string to be sent to the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7765e-136">Sendet eine Zeichenfolgenmeldung direkt an den Client oder aktuellen Ausgabeconsumer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-136">Sends a string message directly to the client or current output consumer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-137">Die Zeichenfolge wird als eine informative Meldung an dem Client gesendet.</span><span class="sxs-lookup"><span data-stu-id="7765e-137">The message string is sent as an informational message to the client.</span></span> <span data-ttu-id="7765e-138">Clientanwendungen können Nachrichten durch verschiedene Mechanismen, abhängig von den Data Access-Anwendungsprogrammierschnittstelle (API) überwachen, die sie verwenden.</span><span class="sxs-lookup"><span data-stu-id="7765e-138">Client applications can listen to messages through different mechanisms, depending on the data access application programming interface (API) that they use.</span></span> <span data-ttu-id="7765e-139">Z. B. wenn der Client ADO.NET verwendet, das Übertragen von Nachrichten über die <xref:System.Data.SqlClient.SqlConnection.InfoMessage> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="7765e-139">For example, if the client is using ADO.NET, the messages transmit through the <xref:System.Data.SqlClient.SqlConnection.InfoMessage> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7765e-140">Im folgenden Beispiel wird die <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> Methode, um eine Meldungszeichenfolge direkt an den Client zu senden.</span><span class="sxs-lookup"><span data-stu-id="7765e-140">The following example uses the <xref:Microsoft.SqlServer.Server.SqlPipe.Send%2A> method to send a message string directly to the client.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.Send#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.Send#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.Send/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7765e-141">Die <paramref name="message" /> ist länger als 4.000 Zeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-141">The <paramref name="message" /> is greater than 4,000 characters.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7765e-142">
            <paramref name="message" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-142">The <paramref name="message" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendResultsEnd">
      <MemberSignature Language="C#" Value="public void SendResultsEnd ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsEnd() cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsEnd ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsEnd();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7765e-143">Markiert das Ende eines Resultsets und setzt die <see cref="T:Microsoft.SqlServer.Server.SqlPipe" />-Instanz auf den Ausgangszustand zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-143">Marks the end of a result set, and returns the <see cref="T:Microsoft.SqlServer.Server.SqlPipe" /> instance back to the initial state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-144">Verwaltete gespeicherte Prozeduren können Resultsets senden, für Clients, die nicht implementiert sind eine <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="7765e-144">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="7765e-145">Diese Methode zusammen mit <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> und <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, ermöglicht es gespeicherten Prozeduren, benutzerdefinierte Resultsets an den Client zu senden.</span><span class="sxs-lookup"><span data-stu-id="7765e-145">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7765e-146">Das folgende Beispiel erstellt ein neues <xref:Microsoft.SqlServer.Server.SqlDataRecord> und dessen <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="7765e-146">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="7765e-147">Im Beispiel wird dann kennzeichnet den Anfang eines Resultsets mithilfe der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> Methode, sendet die Datensätze mit Beispieldaten zurück an den Client mithilfe der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> -Methode und markiert das Ende des Resultsets festgelegt, mit der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7765e-147">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsEnd#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsEnd/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7765e-148">Die <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />-Methode wurde zuvor nicht aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-148">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsRow">
      <MemberSignature Language="C#" Value="public void SendResultsRow (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsRow(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsRow (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsRow(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="7765e-149">Ein <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />-Objekt mit den Spaltenwerten für die Zeile, die an den Client gesendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-149">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object with the column values for the row to be sent to the client.</span>
          </span>
          <span data-ttu-id="7765e-150">Das Schema für den Datensatz muss mit dem Schema in den Metadaten des an die <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />-Methode übergebenen <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> übereinstimmen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-150">The schema for the record must match the schema described by the metadata of the <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> passed to the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7765e-151">Sendet eine einzelne Datenzeile an den Client zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-151">Sends a single row of data back to the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-152">Verwaltete gespeicherte Prozeduren können Resultsets senden, für Clients, die nicht implementiert sind eine <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="7765e-152">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="7765e-153">Diese Methode zusammen mit <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> und <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, ermöglicht es gespeicherten Prozeduren, benutzerdefinierte Resultsets an den Client zu senden.</span><span class="sxs-lookup"><span data-stu-id="7765e-153">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allows stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="7765e-154">Die <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> Methode sendet eine einzelne Zeile mit Daten an den Client zurück.</span><span class="sxs-lookup"><span data-stu-id="7765e-154">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method sends a single row of data back to the client.</span></span> <span data-ttu-id="7765e-155">Zeilen können anschließend an den Aufrufer zurückgegeben werden, durch den Aufruf <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, einmal für jede Zeile, die gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="7765e-155">Rows can subsequently be returned to the caller by calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A>, one time for each row being sent.</span></span> <span data-ttu-id="7765e-156">Nachdem alle Zeilen gesendet wurden, einen Aufruf der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> Methode ist erforderlich, um das Ende des Resultsets zu markieren.</span><span class="sxs-lookup"><span data-stu-id="7765e-156">After all the rows have been sent, a call to the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method is required to mark the end of the result set.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7765e-157">Das folgende Beispiel erstellt ein neues <xref:Microsoft.SqlServer.Server.SqlDataRecord> und dessen <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="7765e-157">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="7765e-158">Im Beispiel wird dann kennzeichnet den Anfang eines Resultsets mithilfe der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> Methode, sendet die Datensätze mit Beispieldaten zurück an den Client mithilfe der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> -Methode und markiert das Ende des Resultsets festgelegt, mit der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7765e-158">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsRow#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsRow/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7765e-159">
            <paramref name="record" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-159">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7765e-160">Die <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />-Methode wurde zuvor nicht aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-160">The <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method was not previously called.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
    <Member MemberName="SendResultsStart">
      <MemberSignature Language="C#" Value="public void SendResultsStart (Microsoft.SqlServer.Server.SqlDataRecord record);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SendResultsStart(class Microsoft.SqlServer.Server.SqlDataRecord record) cil managed" />
      <MemberSignature Language="DocId" Value="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SendResultsStart (record As SqlDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SendResultsStart(Microsoft::SqlServer::Server::SqlDataRecord ^ record);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="record" Type="Microsoft.SqlServer.Server.SqlDataRecord" />
      </Parameters>
      <Docs>
        <param name="record">
          <span data-ttu-id="7765e-161">Ein <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" />-Objekt, aus dem Metadaten extrahiert werden, mit denen das Resultset beschrieben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-161">A <see cref="T:Microsoft.SqlServer.Server.SqlDataRecord" /> object from which metadata is extracted and used to describe the result set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7765e-162">Kennzeichnet den Anfang eines an den Client zurückgesendeten Resultsets und erstellt mit dem Datensatzparameter die Metadaten zur Beschreibung des Resultsets.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-162">Marks the beginning of a result set to be sent back to the client, and uses the record parameter to construct the metadata that describes the result set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7765e-163">Verwaltete gespeicherte Prozeduren können Resultsets senden, für Clients, die nicht implementiert sind eine <xref:System.Data.SqlClient.SqlDataReader>.</span><span class="sxs-lookup"><span data-stu-id="7765e-163">Managed stored procedures can send result sets to clients that are not implementing a <xref:System.Data.SqlClient.SqlDataReader>.</span></span> <span data-ttu-id="7765e-164">Diese Methode zusammen mit <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> und <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, ermöglicht es gespeicherten Prozeduren, benutzerdefinierte Resultsets an den Client zu senden.</span><span class="sxs-lookup"><span data-stu-id="7765e-164">This method, along with <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A>, allow stored procedures to send custom result sets to the client.</span></span>  
  
 <span data-ttu-id="7765e-165">Die <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> Methode kennzeichnet den Anfang eines Resultsets und verwendet den Datensatz-Parameter, um die Metadaten zu erstellen, die das Resultset beschreibt.</span><span class="sxs-lookup"><span data-stu-id="7765e-165">The <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method marks the beginning of a result set, and uses the record parameter to construct the metadata that describes the result set.</span></span> <span data-ttu-id="7765e-166">Alle nachfolgenden Zeilen, die gesendet, mit der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> -Methode, müssen dieser Metadatendefinition entsprechen.</span><span class="sxs-lookup"><span data-stu-id="7765e-166">All the subsequent rows, sent using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, must match that metadata definition.</span></span>  
  
 <span data-ttu-id="7765e-167">Beachten Sie, dass nach der Aufruf <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, nur <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> und <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> aufgerufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="7765e-167">Note that after calling <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A>, only <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> and <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> can be called.</span></span> <span data-ttu-id="7765e-168">Jede andere Methode in derselben Instanz von <xref:Microsoft.SqlServer.Server.SqlPipe> löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="7765e-168">Any other method in the same instance of <xref:Microsoft.SqlServer.Server.SqlPipe> throws an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="7765e-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> Legt <xref:Microsoft.SqlServer.Server.SqlPipe> zurück an den Ausgangszustand, in dem andere Methoden aufgerufen werden können.</span><span class="sxs-lookup"><span data-stu-id="7765e-169"><xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> sets <xref:Microsoft.SqlServer.Server.SqlPipe> back to the initial state where other methods can be called.</span></span>  
  
 <span data-ttu-id="7765e-170">Nach dem Steuerelement in Transact-SQL-CLR-Ausführung zurückgibt, versuchen Sie nicht, eine statische oder lokale Variable, die mit CLR-Speicher initialisiert verwenden.</span><span class="sxs-lookup"><span data-stu-id="7765e-170">After control returns to Transact-SQL from CLR execution, do not attempt to use a static or local variable initialized to CLR memory.</span></span> <span data-ttu-id="7765e-171">Beispielsweise nicht speichern, die eine Instanz einer prozessinternen-Klasse, zum Beispiel `SQLDataRecord`, nachdem steuerelementrückgabe aus der CLR verwendet werden wird.</span><span class="sxs-lookup"><span data-stu-id="7765e-171">For example, do not store an instance of an in process class, for example `SQLDataRecord`, which will be used after control returns from CLR.</span></span> <span data-ttu-id="7765e-172">Eine Ausnahme ist die `SQLMetaData` in Prozessklasse.</span><span class="sxs-lookup"><span data-stu-id="7765e-172">One exception is the `SQLMetaData` in process class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7765e-173">Das folgende Beispiel erstellt ein neues <xref:Microsoft.SqlServer.Server.SqlDataRecord> und dessen <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span><span class="sxs-lookup"><span data-stu-id="7765e-173">The following example creates a new <xref:Microsoft.SqlServer.Server.SqlDataRecord> and its <xref:Microsoft.SqlServer.Server.SqlMetaData>.</span></span> <span data-ttu-id="7765e-174">Im Beispiel wird dann kennzeichnet den Anfang eines Resultsets mithilfe der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> Methode, sendet die Datensätze mit Beispieldaten zurück an den Client mithilfe der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> -Methode und markiert das Ende des Resultsets festgelegt, mit der <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7765e-174">The example then marks the beginning of a result set using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart%2A> method, sends records with example data back to the client using the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow%2A> method, and marks the end of the result set with the <xref:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd%2A> method.</span></span>  
  
 [!code-csharp[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/CS/source.cs#1)]
 [!code-vb[DataWorks SqlPipe.SendResultsStart#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlPipe.SendResultsStart/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7765e-175">
            <paramref name="record" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-175">The <paramref name="record" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7765e-176">Der <paramref name="record" /> enthält keine Spalten oder wurde nicht initialisiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-176">The <paramref name="record" /> has no columns or has not been initialized.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7765e-177">Eine andere Methode als <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> oder <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> wurde nach der <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" />-Methode aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7765e-177">A method other than <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" /> or <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" /> was called after the <see cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsStart(Microsoft.SqlServer.Server.SqlDataRecord)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsRow(Microsoft.SqlServer.Server.SqlDataRecord)" />
        <altmember cref="M:Microsoft.SqlServer.Server.SqlPipe.SendResultsEnd" />
      </Docs>
    </Member>
  </Members>
</Type>