<Type Name="Format" FullName="Microsoft.SqlServer.Server.Format">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4349d39b5042e0a2da26407506d6bc6c169d47a9" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75156644" /></Metadata><TypeSignature Language="C#" Value="public enum Format" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Format extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:Microsoft.SqlServer.Server.Format" />
  <TypeSignature Language="VB.NET" Value="Public Enum Format" />
  <TypeSignature Language="C++ CLI" Value="public enum class Format" />
  <TypeSignature Language="F#" Value="type Format = " />
  <AssemblyInfo>
    <AssemblyName>System.Data</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Data.SqlClient</AssemblyName>
    <AssemblyVersion>4.4.0.0</AssemblyVersion>
    <AssemblyVersion>4.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Wird von <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute" /> und <see cref="T:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute" /> verwendet, um das Serialisierungsformat eines benutzerdefinierten Typs (User-Defined Type, UDT) oder eines Aggregats anzugeben.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  

Diese Enumeration wird von <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute> und <xref:Microsoft.SqlServer.Server.SqlUserDefinedAggregateAttribute> verwendet, um das Serialisierungsformat eines benutzerdefinierten Typs (User-Defined Type, UDT) oder eines Aggregats anzugeben. Die Verwendung des `Native` und `UserDefined` Enumerationsmembers hat besondere Anforderungen.   

- `Format.Native`

   Folgende Anforderungen gelten für das `Format.Native` Format:  
  
   - Die <xref:System.Runtime.InteropServices.StructLayoutAttribute> mit einem <xref:System.Runtime.InteropServices.StructLayoutAttribute.Value>-Eigenschafts Wert von <xref:System.Runtime.InteropServices.LayoutKind.Sequential?displayProperty=nameWithType> muss auf das Aggregat oder den UDT angewendet werden, wenn Sie in einer Klasse und nicht in einer Struktur definiert ist. Dies steuert das physische Layout der Datenfelder und wird verwendet, um zu erzwingen, dass die Elemente sequenziell in der Reihenfolge angeordnet werden, in der Sie angezeigt werden. SQL Server verwendet dieses Attribut, um die Feld Reihenfolge für UDTs mit mehreren Feldern zu bestimmen.
  
   - Der Typ muss mindestens einen Member enthalten (serialisierte Werte dürfen nicht 0 Bytes groß sein).  
  
   - Alle Felder des Aggregats müssen *blitfähig*sein. Das heißt, dass Sie über eine gemeinsame Darstellung in verwaltetem und nicht verwaltetem Speicher verfügen müssen und keine besondere Behandlung durch den Interop-Mars Haller erfordern.  
  
   - Alle Felder des UDT sollten einen der folgenden Typen aufweisen, die serialisiert werden können: `bool`, `byte`, `sbyte`, `short`, `ushort`, `int`, `uint`, `long`, `ulong`, `float`, `double`, <xref:System.Data.SqlTypes.SqlByte>, <xref:System.Data.SqlTypes.SqlInt16>, <xref:System.Data.SqlTypes.SqlInt32>, <xref:System.Data.SqlTypes.SqlInt64>, <xref:System.Data.SqlTypes.SqlDateTime>, <xref:System.Data.SqlTypes.SqlSingle>, <xref:System.Data.SqlTypes.SqlDouble>, <xref:System.Data.SqlTypes.SqlMoney>oder andere Werttypen, die von dem Benutzer definiert werden, der Felder eines dieser Typen enthält.  

   - Das Aggregat darf keinen Wert für `MaxByteSize`angeben.  
  
   - Das Aggregat darf keine [NonSerialized]-Felder enthalten.  
  
   - Felder dürfen nicht als explizites Layout (mit einer <xref:System.Runtime.InteropServices.StructLayoutAttribute.Value?displayProperty=nameWithType> <xref:System.Runtime.InteropServices.LayoutKind.Explicit?displayProperty=nameWithType>) gekennzeichnet werden.  

- `Format.UserDefined`

   Folgende Anforderungen gelten für das `Format.UserDefined` Format:

   - Das Aggregat muss einen Wert für `MaxByteSize`angeben.  
  
   - Geben Sie die <xref:Microsoft.SqlServer.Server.SqlUserDefinedTypeAttribute.IsByteOrdered%2A?displayProperty=nameWithType> Attribute-Eigenschaft an. Der Standardwert ist `false`.  
  
   - Wenn Sie ein Feld in den Methoden <xref:Microsoft.SqlServer.Server.IBinarySerialize.Read%2A?displayProperty=nameWithType> oder <xref:Microsoft.SqlServer.Server.IBinarySerialize.Write%2A?displayProperty=nameWithType> weglassen, wird der Zustand dieses Felds nicht serialisiert.  

## Examples  

Das folgende Beispiel zeigt das `UserDefinedType`-Attribut des Point-UDT.  Der UDT ist Byte geordnet, hat den Namen "Point", hat eine Validierungsmethode mit dem Namen "ValidatePoint" und verwendet das systemeigene Serialisierungsformat.  
  
[!code-csharp[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/CS/source.cs#1)]
[!code-vb[DataWorks SqlUserDefinedTypeAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_ADO.NET/DataWorks SqlUserDefinedTypeAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Native">
      <MemberSignature Language="C#" Value="Native" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Native = int32(1)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Native" />
      <MemberSignature Language="VB.NET" Value="Native" />
      <MemberSignature Language="C++ CLI" Value="Native" />
      <MemberSignature Language="F#" Value="Native = 1" Usage="Microsoft.SqlServer.Server.Format.Native" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Bei diesem Serialisierungsformat wird ein sehr einfacher Algorithmus verwendet, der SQL Server ermöglicht, eine effiziente Darstellung des UDTs auf dem Datenträger zu speichern. Für die <see langword="Native" />-Serialisierung gekennzeichnete Typen dürfen als Member nur Werttypen (Strukturen in Microsoft Visual C# und Microsoft Visual Basic .NET) haben. Member von Verweistypen (z.B. Klassen in Visual C# und Visual Basic), benutzerdefinierte oder solche in .NET-Klassenbibliotheken (z.B. <see cref="T:System.String" />), werden nicht unterstützt.</summary>
      </Docs>
    </Member>
    <Member MemberName="Unknown">
      <MemberSignature Language="C#" Value="Unknown" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format Unknown = int32(0)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberSignature Language="VB.NET" Value="Unknown" />
      <MemberSignature Language="C++ CLI" Value="Unknown" />
      <MemberSignature Language="F#" Value="Unknown = 0" Usage="Microsoft.SqlServer.Server.Format.Unknown" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Das Serialisierungsformat ist unbekannt.</summary>
      </Docs>
    </Member>
    <Member MemberName="UserDefined">
      <MemberSignature Language="C#" Value="UserDefined" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype Microsoft.SqlServer.Server.Format UserDefined = int32(2)" />
      <MemberSignature Language="DocId" Value="F:Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberSignature Language="VB.NET" Value="UserDefined" />
      <MemberSignature Language="C++ CLI" Value="UserDefined" />
      <MemberSignature Language="F#" Value="UserDefined = 2" Usage="Microsoft.SqlServer.Server.Format.UserDefined" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Data.SqlClient</AssemblyName>
        <AssemblyVersion>4.4.0.0</AssemblyVersion>
        <AssemblyVersion>4.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.SqlServer.Server.Format</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>Bei diesem Serialisierungsformat hat der Entwickler über die <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Write(System.IO.BinaryWriter)" />-Methode und <see cref="M:Microsoft.SqlServer.Server.IBinarySerialize.Read(System.IO.BinaryReader)" />-Methode die volle Kontrolle über das Binärformat.</summary>
      </Docs>
    </Member>
  </Members>
</Type>
