<Type Name="CompositionContract" FullName="System.Composition.Hosting.Core.CompositionContract">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b04deea41ec61cc09c8f23849a02d662b87d2a5f" />
    <Meta Name="ms.sourcegitcommit" Value="d877ae76e9e11799bf919379507239e2c4072742" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/09/2018" />
    <Meta Name="ms.locfileid" Value="39823851" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CompositionContract" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CompositionContract extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Composition.Hosting.Core.CompositionContract" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CompositionContract" />
  <TypeSignature Language="C++ CLI" Value="public ref class CompositionContract sealed" />
  <TypeSignature Language="F#" Value="type CompositionContract = class" />
  <AssemblyInfo>
    <AssemblyName>System.Composition.Runtime</AssemblyName>
    <AssemblyVersion>1.0.31.0</AssemblyVersion>
    <AssemblyVersion>1.0.32.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="04bc8-101">Stellt eine Vereinbarung zwischen Teilen dar, die es der Kompositions-Engine ermöglicht, Importe und Exporte übereinstimmen zu lassen.</span>
      <span class="sxs-lookup">
        <span data-stu-id="04bc8-101">Represents an agreement between parts that allows the composition engine to match imports with exports.</span>
      </span>
    </summary>
    <remarks></remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContract (Type contractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContract(Type ^ contractType);" />
      <MemberSignature Language="F#" Value="new System.Composition.Hosting.Core.CompositionContract : Type -&gt; System.Composition.Hosting.Core.CompositionContract" Usage="new System.Composition.Hosting.Core.CompositionContract contractType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="04bc8-102">Der Typ des Vertrags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-102">The contract type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04bc8-103">Initialisiert eine neue Instanz der <see cref="T:System.Composition.Hosting.Core.CompositionContract" />-Klasse mit dem angegebenen Vertragstyp.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-103">Initializes a new instance of the <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> class with the specified contract type.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContract (Type contractType, string contractName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType, string contractName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type, contractName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContract(Type ^ contractType, System::String ^ contractName);" />
      <MemberSignature Language="F#" Value="new System.Composition.Hosting.Core.CompositionContract : Type * string -&gt; System.Composition.Hosting.Core.CompositionContract" Usage="new System.Composition.Hosting.Core.CompositionContract (contractType, contractName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="04bc8-104">Der Typ des Vertrags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-104">The contract type.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="04bc8-105">Der Name des Vertrags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-105">The contract name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04bc8-106">Initialisiert eine neue Instanz der <see cref="T:System.Composition.Hosting.Core.CompositionContract" />-Klasse mit dem angegebenen Vertragsnamen und Typ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-106">Initializes a new instance of the <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> class with the specified contract name and type.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CompositionContract (Type contractType, string contractName, System.Collections.Generic.IDictionary&lt;string,object&gt; metadataConstraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type contractType, string contractName, class System.Collections.Generic.IDictionary`2&lt;string, object&gt; metadataConstraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.#ctor(System.Type,System.String,System.Collections.Generic.IDictionary{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (contractType As Type, contractName As String, metadataConstraints As IDictionary(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CompositionContract(Type ^ contractType, System::String ^ contractName, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ metadataConstraints);" />
      <MemberSignature Language="F#" Value="new System.Composition.Hosting.Core.CompositionContract : Type * string * System.Collections.Generic.IDictionary&lt;string, obj&gt; -&gt; System.Composition.Hosting.Core.CompositionContract" Usage="new System.Composition.Hosting.Core.CompositionContract (contractType, contractName, metadataConstraints)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contractType" Type="System.Type" />
        <Parameter Name="contractName" Type="System.String" />
        <Parameter Name="metadataConstraints" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="contractType">
          <span data-ttu-id="04bc8-107">Der Typ des Vertrags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-107">The contract type.</span>
          </span>
        </param>
        <param name="contractName">
          <span data-ttu-id="04bc8-108">Der Name des Vertrags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-108">The contract name.</span>
          </span>
        </param>
        <param name="metadataConstraints">
          <span data-ttu-id="04bc8-109">Eine Collection von Metadateneinschränkungen für den Vertrag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-109">A collection of metadata constraints for the contract.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04bc8-110">Initialisiert eine neue Instanz der <see cref="T:System.Composition.Hosting.Core.CompositionContract" />-Klasse mit dem angegebenen Vertragsnamen, Typ und Metadateneinschränkungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-110">Initializes a new instance of the <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> class with the specified contract name, type, and metadata constraints.</span>
          </span>
        </summary>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeType">
      <MemberSignature Language="C#" Value="public System.Composition.Hosting.Core.CompositionContract ChangeType (Type newContractType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Composition.Hosting.Core.CompositionContract ChangeType(class System.Type newContractType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.ChangeType(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeType (newContractType As Type) As CompositionContract" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Composition::Hosting::Core::CompositionContract ^ ChangeType(Type ^ newContractType);" />
      <MemberSignature Language="F#" Value="member this.ChangeType : Type -&gt; System.Composition.Hosting.Core.CompositionContract" Usage="compositionContract.ChangeType newContractType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Composition.Hosting.Core.CompositionContract</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newContractType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="newContractType">
          <span data-ttu-id="04bc8-111">Der neue Typ des Vertrags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-111">The new contract type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04bc8-112">Erstellt einen neuen Vertrag, der den angegebenen Typ jedoch denselben Namen und die Einschränkungen wie dieses Objekt hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-112">Creates a new contract that has the specified type but the same name and constraints as this object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04bc8-113">Der erstellte Vertrag</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-113">The created contract.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractName">
      <MemberSignature Language="C#" Value="public string ContractName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContractName" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.CompositionContract.ContractName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContractName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractName : string" Usage="System.Composition.Hosting.Core.CompositionContract.ContractName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04bc8-114">Ruft den Namen des Vertrags ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-114">Gets the name of the contract.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04bc8-115">Der Name des Vertrags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-115">The contract name.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ContractType">
      <MemberSignature Language="C#" Value="public Type ContractType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContractType" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.CompositionContract.ContractType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContractType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContractType { Type ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ContractType : Type" Usage="System.Composition.Hosting.Core.CompositionContract.ContractType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04bc8-116">Ruft den Typen des Vertrags ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-116">Gets the contract type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04bc8-117">Der Typ des Vertrags.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-117">The contract type.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="compositionContract.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="04bc8-118">Das Objekt, das mit diesem Objekt verglichen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-118">The object to compare with this object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04bc8-119">Bestimmt, ob das angegebene Objekt dieser Instanz <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-119">Determines whether the specified object is equal to this instance of <see cref="T:System.Composition.Hosting.Core.CompositionContract" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04bc8-120">
            <see langword="true" />, wenn das angegebene Objekt und das aktuelle Objekt gleich sind, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-120">
              <see langword="true" /> if the specified object is equal to the current object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="compositionContract.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04bc8-121">Gibt den Hashcode für dieses <see cref="T:System.Composition.Hosting.Core.CompositionContract" />-Objekt zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-121">Returns the hash code for this <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04bc8-122">Der Hashcode für das aktuelle Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-122">The hash code for the current object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="MetadataConstraints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; MetadataConstraints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; MetadataConstraints" />
      <MemberSignature Language="DocId" Value="P:System.Composition.Hosting.Core.CompositionContract.MetadataConstraints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataConstraints As IEnumerable(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ MetadataConstraints { System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataConstraints : seq&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="System.Composition.Hosting.Core.CompositionContract.MetadataConstraints" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="04bc8-123">Ruft eine Auflistung von Metadateneinschränkungen für den Vertrag ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-123">Gets a collection of metadata constraints for the contract.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="04bc8-124">Eine Auflistung Metadateneinschränkungen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-124">A collection of metadata constraints.</span>
          </span>
        </value>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="compositionContract.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="04bc8-125">Gibt die Zeichenfolgendarstellung dieses <see cref="T:System.Composition.Hosting.Core.CompositionContract" />-Objekts zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-125">Returns the string representation of this <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04bc8-126">Die Zeichenfolgendarstellung dieses <see cref="T:System.Composition.Hosting.Core.CompositionContract" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-126">The string representation of this <see cref="T:System.Composition.Hosting.Core.CompositionContract" /> object.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
    <Member MemberName="TryUnwrapMetadataConstraint&lt;T&gt;">
      <MemberSignature Language="C#" Value="public bool TryUnwrapMetadataConstraint&lt;T&gt; (string constraintName, out T constraintValue, out System.Composition.Hosting.Core.CompositionContract remainingContract);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryUnwrapMetadataConstraint&lt;T&gt;(string constraintName, [out] !!T&amp; constraintValue, [out] class System.Composition.Hosting.Core.CompositionContract&amp; remainingContract) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Composition.Hosting.Core.CompositionContract.TryUnwrapMetadataConstraint``1(System.String,``0@,System.Composition.Hosting.Core.CompositionContract@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryUnwrapMetadataConstraint(Of T) (constraintName As String, ByRef constraintValue As T, ByRef remainingContract As CompositionContract) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; bool TryUnwrapMetadataConstraint(System::String ^ constraintName, [Runtime::InteropServices::Out] T % constraintValue, [Runtime::InteropServices::Out] System::Composition::Hosting::Core::CompositionContract ^ % remainingContract);" />
      <MemberSignature Language="F#" Value="member this.TryUnwrapMetadataConstraint : string *  *  -&gt; bool" Usage="compositionContract.TryUnwrapMetadataConstraint (constraintName, constraintValue, remainingContract)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Composition.Runtime</AssemblyName>
        <AssemblyVersion>1.0.31.0</AssemblyVersion>
        <AssemblyVersion>1.0.32.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="constraintName" Type="System.String" />
        <Parameter Name="constraintValue" Type="T" RefType="out" />
        <Parameter Name="remainingContract" Type="System.Composition.Hosting.Core.CompositionContract" RefType="out" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="04bc8-127">Der Typ des Metadateneinschränkungswerts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-127">The type of the metadata constraint value.</span>
          </span>
        </typeparam>
        <param name="constraintName">
          <span data-ttu-id="04bc8-128">Der Name der Metadateneinschränkung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-128">The name of the metadata constraint.</span>
          </span>
        </param>
        <param name="constraintValue">
          <span data-ttu-id="04bc8-129">Enthält nach der Rückgabe dieser Methode den Wert der Einschränkung, falls diese gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-129">When this method returns, contains the value of the constraint if it was found.</span>
          </span>
          <span data-ttu-id="04bc8-130">Dieser Parameter wird nicht initialisiert behandelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-130">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <param name="remainingContract">
          <span data-ttu-id="04bc8-131">Enthält nach der Rückgabe dieser Methode den Vertrag mit der entfernten Einschränkung, falls diese gefunden wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-131">When this method returns, holds the contract with the constraint removed, if the constraint was found.</span>
          </span>
          <span data-ttu-id="04bc8-132">Dieser Parameter wird nicht initialisiert behandelt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-132">This parameter is treated as uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="04bc8-133">Ruft eine Metadateneinschränkung ab, die den angegebenen Typ und den Namen haben, sofern vorhanden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-133">Gets a metadata constraint that has the specified type and name, if it exists.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="04bc8-134">
            <see langword="true" />, falls das eingeschränkte Metadatenelement entpackt und der Wert extrahiert wurde; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="04bc8-134">
              <see langword="true" /> if the constrained metadata item was unwrapped and the value extracted; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks></remarks>
      </Docs>
    </Member>
  </Members>
</Type>