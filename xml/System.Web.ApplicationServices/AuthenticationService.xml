<Type Name="AuthenticationService" FullName="System.Web.ApplicationServices.AuthenticationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9c32b9d56ba23cd12de3d2092b5865e0c1f9b139" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53227360" /></Metadata><TypeSignature Language="C#" Value="public class AuthenticationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.AuthenticationService" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationService" />
  <TypeSignature Language="F#" Value="type AuthenticationService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ServiceModel.ServiceBehavior</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht den Zugriff auf die ASP.NET-Formularauthentifizierung als Webdienst.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ApplicationServices.AuthenticationService> Objekt können Sie zum Authentifizieren von Benutzern über einen Windows Communication Foundation (WCF)-Dienst. Verwenden Sie den WCF-Dienst-Authentifizierung, wenn der Benutzer über ASP.NET-Mitgliedschaft aus einer Anwendung müssen Sie sich authentifizieren, die außerhalb der Web-Anwendung ist, in dem die Anmeldeinformationen des Benutzers gespeichert. Die Anwendung muss zum Senden und die Nachricht im SOAP-Format verarbeiten können. Durch die <xref:System.Web.ApplicationServices.AuthenticationService> -Klasse, Sie können Benutzer sich anmelden, Log Benutzer out, Anmeldeinformationen zu überprüfen, Authentifizierungsstatus, Anpassen der Authentifizierung und das Authentifizierungscookie festgelegt.  
  
 Die <xref:System.Web.ApplicationServices.AuthenticationService> -Klasse enthält vier Methoden, die Sie nur über einen WCF-Dienst zugreifen soll: den <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>, und <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Methoden. Um diese Methoden aufrufen, müssen Sie die Authentication-Dienst auf einem Webserver ermöglichen und verbinden Sie dann auf eine WCF-kompatible-Clientanwendung an den Webdienst. Informationen dazu, wie Sie den Authentifizierungsdienst zu konfigurieren, finden Sie unter [Vorgehensweise: Aktivieren Sie den WCF-Dienst-Authentifizierung](https://msdn.microsoft.com/library/f7913259-762e-4a73-a771-ac9e42903f44).  
  
 Um die Benutzer anmelden, übergeben Sie die Benutzeranmeldeinformationen an den <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Methode. Wenn die Anmeldeinformationen gültig sind, die <xref:System.Web.ApplicationServices.AuthenticationService> Klasse wird ein Authentifizierungscookie erstellt. Wenn das Authentifizierungscookie nicht abgelaufen ist, wissen Sie, dass die Anmeldeinformationen des Benutzers authentifiziert wurden, und Sie nicht die Anmeldeinformationen erneut zu überprüfen müssen. (Authentifizierung ohne Cookies ist nicht verfügbar, über die <xref:System.Web.ApplicationServices.AuthenticationService> Klasse.)  
  
 Die <xref:System.Web.ApplicationServices.AuthenticationService> zwei Ereignisse auslösen kann: <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> und <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>. Die <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Ereignis tritt auf, wenn die Anmeldeinformationen des Benutzers überprüft werden. Erstellen Sie einen Ereignishandler für die <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Ereignis, um anzupassen, wie die Anmeldeinformationen des Benutzers überprüft werden. Die <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Ereignis tritt auf, wenn das Authentifizierungscookie festgelegt wird, nachdem die Anmeldeinformationen des Benutzers überprüft wurden. Erstellen Sie einen Ereignishandler für die <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Ereignis, um das Authentifizierungscookie anzupassen.  
  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Methode überprüft die Benutzeranmeldeinformationen für die Authentifizierung, aber es gibt kein Authentifizierungsticket zurück. Verwendung <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Wenn ein Benutzer zuvor angemeldet ist, und Sie müssen überprüfen, dass die Anmeldeinformationen zu Beginn einer neuen Anwendung Sitzung noch gültig sind.  
  
 Ein Beispiel für den WCF-Authentifizierungsdienst über eine Konsolenanwendung verwenden, finden Sie unter [Exemplarische Vorgehensweise: Verwenden von ASP.NET-Anwendungsdiensten](https://msdn.microsoft.com/library/f3f394f0-20d6-4361-aa8f-4b21bf4933eb).  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über den Windows Communication Foundation-Authentifizierung</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationService();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.ApplicationServices.AuthenticationService" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticating">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Authenticating As EventHandler(Of AuthenticatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::AuthenticatingEventArgs ^&gt; ^ Authenticating;" />
      <MemberSignature Language="F#" Value="member this.Authenticating : EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " Usage="member this.Authenticating : System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn Benutzeranmeldeinformationen überprüft werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Ereignis wird ausgelöst, wenn Benutzeranmeldeinformationen überprüft werden. Erstellen Sie einen Ereignishandler für die <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Ereignis, um anzupassen, wie die Anmeldeinformationen des Benutzers überprüft werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie einen Ereignishandler für binden die <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Ereignis in der `Application_Start` -Methode der Datei "Global.asax".  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#1)]  
  
 Das folgende Beispiel zeigt einen Ereignishandler für die <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Ereignis in der Datei "Global.asax". Der Ereignishandler liest von zwei Authentifizierungswerte der <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> -Eigenschaft auf und übergibt sie zusammen mit den Benutzernamen und das Kennwort für eine benutzerdefinierte Authentifizierung-Klasse mit dem Namen `StudentAuthentication`.  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.AuthenticatingEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über den Windows Communication Foundation-Authentifizierung</related>
      </Docs>
    </Member>
    <Member MemberName="CreatingCookie">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CreatingCookie As EventHandler(Of CreatingCookieEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::CreatingCookieEventArgs ^&gt; ^ CreatingCookie;" />
      <MemberSignature Language="F#" Value="member this.CreatingCookie : EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " Usage="member this.CreatingCookie : System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Authentifizierungscookie festgelegt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Ereignis wird ausgelöst, wenn das Authentifizierungscookie festgelegt wird, nachdem die Anmeldeinformationen des Benutzers überprüft wurden. Erstellen Sie einen Ereignishandler für die <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Ereignis, um das Authentifizierungscookie anzupassen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie einen Ereignishandler zum Binden der <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Ereignis in der `Application_Start` -Methode der Datei "Global.asax".  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#1)]  
  
 Das folgende Beispiel zeigt einen Ereignishandler für die <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Ereignis in der Datei "Global.asax". Der Ereignishandler passt das Authentifizierungscookie durch Hinzufügen des Werts in der <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> Eigenschaft, um die <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> Eigenschaft. Store die <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> Eigenschaft in einem Cookie nur dann, wenn Sie wissen, dass die Daten in der Eigenschaft nicht vertraulich ist. Böswillige Benutzer können die Werte im Cookie zugreifen.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.CreatingCookieEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über den Windows Communication Foundation-Authentifizierung</related>
      </Docs>
    </Member>
    <Member MemberName="IsLoggedIn">
      <MemberSignature Language="C#" Value="public bool IsLoggedIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLoggedIn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLoggedIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLoggedIn();" />
      <MemberSignature Language="F#" Value="member this.IsLoggedIn : unit -&gt; bool" Usage="authenticationService.IsLoggedIn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ermittelt, ob der aktuelle Benutzer authentifiziert ist.</summary>
        <returns><see langword="true" />, wenn der Benutzer authentifiziert wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> Methode überprüft, ob der aktuelle Benutzer, anhand authentifiziert ist der <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>.property.  
  
> [!NOTE]
>  Rufen Sie nicht die <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> aus Code, auf dem Webserver ausgeführt wird. Rufen Sie die <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> Methode nur als Teil eines WCF-Diensts.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über den Windows Communication Foundation-Authentifizierung</related>
      </Docs>
    </Member>
    <Member MemberName="Login">
      <MemberSignature Language="C#" Value="public bool Login (string username, string password, string customCredential, bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Login(string username, string password, string customCredential, bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Login (username As String, password As String, customCredential As String, isPersistent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Login(System::String ^ username, System::String ^ password, System::String ^ customCredential, bool isPersistent);" />
      <MemberSignature Language="F#" Value="member this.Login : string * string * string * bool -&gt; bool" Usage="authenticationService.Login (username, password, customCredential, isPersistent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Der zu überprüfende Benutzername.</param>
        <param name="password">Das Kennwort für den angegebenen Benutzer.</param>
        <param name="customCredential">Die Werte, die zusätzlich zu <paramref name="username" /> und <paramref name="password" /> überprüft werden sollen, sofern vorhanden.</param>
        <param name="isPersistent">Ein Wert, der angibt, ob das Authentifizierungsticket über Sitzungen hinaus gültig bleibt.</param>
        <summary>Überprüft Benutzeranmeldeinformationen und erstellt ein Authentifizierungsticket (Cookie), wenn die Anmeldeinformationen gültig sind.</summary>
        <returns><see langword="true" />, wenn Benutzeranmeldeinformationen gültig sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Methode überprüft die Benutzeranmeldeinformationen durch einen Mitgliedschaftsanbieter. Sie können den Standardmitgliedschaftsanbieter verwenden oder einen benutzerdefinierter Mitgliedschaftsanbieter zur Laufzeit angeben. Die <xref:System.Web.ApplicationServices.AuthenticationService> -Klasse übergibt `userName` und `password` für des Mitgliedschaftsanbieters <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> -Methode, nicht jedoch `customCredential`. Wenn <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> gibt `true`, <xref:System.Web.ApplicationServices.AuthenticationService> erstellt ein Authentifizierungsticket als Cookie. Legen Sie die `isPersistent` Parameter `true` ein Authentifizierungsticket zu erstellen, die über die aktuelle Sitzung.  
  
> [!NOTE]
>  Verwenden Sie immer den Authentifizierungsdienst zusammen mit secure Sockets Layer (SSL über HTTPS) zum Schutz sensibler Daten.  
  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> -Methode löst die <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Ereignis und die <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Ereignis. Erstellen Sie einen Ereignishandler für <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> zum Anpassen der Authentifizierung, z. B. Überprüfen der Werte in `customCredential` oder Validieren der Anmeldeinformationen durch einen nicht standardmäßigen Mitgliedschaftsanbieter. Die Werte in `customCredential` werden nicht durch den Standardmitgliedschaftsanbieter überprüft. Wenn das Authentifizierungscookie anpassen möchten, erstellen Sie einen Ereignishandler für <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>.  
  
> [!NOTE]
>  Rufen Sie nicht die <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> aus Code, auf dem Webserver ausgeführt wird. Rufen Sie die <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Methode nur als Teil eines WCF-Diensts. Weitere Informationen finden Sie unter [ASP.NET-Authentifizierung](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userName" /> oder <paramref name="password" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über den Windows Communication Foundation-Authentifizierung</related>
      </Docs>
    </Member>
    <Member MemberName="Logout">
      <MemberSignature Language="C#" Value="public void Logout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Logout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Logout" />
      <MemberSignature Language="VB.NET" Value="Public Sub Logout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Logout();" />
      <MemberSignature Language="F#" Value="member this.Logout : unit -&gt; unit" Usage="authenticationService.Logout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht das Authentifizierungsticket (Cookie) im Browser.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> Methode löscht das Authentifizierungscookie aus der cookieauflistung des Browsers. Der Benutzer muss erneut authentifiziert werden, anmelden.  
  
 Die <xref:System.Web.ApplicationServices.AuthenticationService> Klasse speichert keine Informationen auf dem Server, zu die Authentifizierung Tickets gelöscht wurden.  
  
> [!NOTE]
>  Rufen Sie nicht die <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> aus Code, auf dem Webserver ausgeführt wird. Rufen Sie die <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> Methode nur als Teil eines WCF-Diensts. Weitere Informationen finden Sie unter [ASP.NET-Authentifizierung](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Security.FormsAuthentication.SignOut" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über den Windows Communication Foundation-Authentifizierung</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public bool ValidateUser (string username, string password, string customCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateUser(string username, string password, string customCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateUser (username As String, password As String, customCredential As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateUser(System::String ^ username, System::String ^ password, System::String ^ customCredential);" />
      <MemberSignature Language="F#" Value="member this.ValidateUser : string * string * string -&gt; bool" Usage="authenticationService.ValidateUser (username, password, customCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der zu überprüfende Benutzername.</param>
        <param name="password">Das Kennwort für den angegebenen Benutzer.</param>
        <param name="customCredential">Die Werte, die zusätzlich zu <paramref name="username" /> und <paramref name="password" /> überprüft werden sollen, sofern vorhanden.</param>
        <summary>Authentifiziert Benutzeranmeldeinformationen, ohne ein Authentifizierungsticket auszugeben.</summary>
        <returns><see langword="true" />, wenn die Benutzeranmeldeinformationen gültig sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Methode authentifiziert die Benutzeranmeldeinformationen, aber ein Authentifizierungscookie wird nicht festgelegt. Ohne ein Authentifizierungscookie wird der Benutzer nicht angemeldet sein, auch wenn die Anmeldeinformationen gültig sind.  
  
 Verwenden der <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Methode, wenn Sie überprüfen müssen, ob die Anmeldeinformationen eines Benutzers gültig sind, ohne ein Authentifizierungscookie zu empfangen. Dies wäre z. B. möglich, wenn das Authentifizierungscookie ist bereits in einer Clientanwendung gespeichert, aber Sie sicherstellen sollten, dass die Anmeldeinformationen des Benutzers noch gültig sind, wenn eine neue Sitzung gestartet wird.  
  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> -Methode löst die <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Ereignis löst jedoch keinen der <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Ereignis.  
  
> [!NOTE]
>  Rufen Sie nicht die <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> aus Code, auf dem Webserver ausgeführt wird. Rufen Sie die <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Methode nur als Teil eines WCF-Diensts. Weitere Informationen finden Sie unter [ASP.NET-Authentifizierung](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userName" /> oder <paramref name="password" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über den Windows Communication Foundation-Authentifizierung</related>
      </Docs>
    </Member>
  </Members>
</Type>