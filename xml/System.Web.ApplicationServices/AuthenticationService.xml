<Type Name="AuthenticationService" FullName="System.Web.ApplicationServices.AuthenticationService">
  <Metadata><Meta Name="ms.openlocfilehash" Value="a07c1c53ba3d12c43769cdd3d2a13e02761ddb8a" /><Meta Name="ms.sourcegitcommit" Value="a22d0855bbf24d893f43605f8b7e3a44bd9551a5" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70362341" /></Metadata><TypeSignature Language="C#" Value="public class AuthenticationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AuthenticationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.ApplicationServices.AuthenticationService" />
  <TypeSignature Language="VB.NET" Value="Public Class AuthenticationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class AuthenticationService" />
  <TypeSignature Language="F#" Value="type AuthenticationService = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ServiceModel.Activation.AspNetCompatibilityRequirements(RequirementsMode=System.ServiceModel.Activation.AspNetCompatibilityRequirementsMode.Required)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceBehavior(ConcurrencyMode=System.ServiceModel.ConcurrencyMode.Multiple, InstanceContextMode=System.ServiceModel.InstanceContextMode.Single, Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ServiceModel.ServiceContract(Namespace="http://asp.net/ApplicationServices/v200")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht den Zugriff auf die ASP.NET-Formularauthentifizierung als Webdienst.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.ApplicationServices.AuthenticationService> -Objekt ermöglicht es Ihnen, Benutzer über einen Windows Communication Foundation (WCF)-Dienst zu authentifizieren. Sie verwenden den WCF-Authentifizierungsdienst, wenn Sie Benutzer über die ASP.NET-Mitgliedschaft über eine Anwendung authentifizieren müssen, die sich außerhalb der Webanwendung befindet, in der die Benutzer Anmelde Informationen gespeichert sind Die Anwendung muss in der Lage sein, eine Nachricht im SOAP-Format zu senden und zu verarbeiten. Mithilfe der <xref:System.Web.ApplicationServices.AuthenticationService> -Klasse können Sie Benutzer anmelden, Benutzer abmelden, Anmelde Informationen überprüfen, den Authentifizierungs Status überprüfen, die Authentifizierung anpassen und das Authentifizierungs Cookie festlegen.  
  
 Die <xref:System.Web.ApplicationServices.AuthenticationService> -Klasse enthält vier Methoden, auf die Sie nur über einen WCF-Dienst <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A>zugreifen sollten <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A>: die <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Methoden, <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>, und. Um diese Methoden aufzurufen, aktivieren Sie den Authentifizierungsdienst auf einem Webserver und verbinden dann eine WCF-kompatible Client Anwendung mit dem Webdienst. Weitere Informationen zum Konfigurieren des Authentifizierungs Dienstanbieter finden [Sie unter Gewusst wie: Aktivieren Sie den WCF-](https://msdn.microsoft.com/library/f7913259-762e-4a73-a771-ac9e42903f44)Authentifizierungsdienst.  
  
 Wenn Sie Benutzer anmelden möchten, übergeben Sie die Benutzer Anmelde Informationen <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> an die-Methode. Wenn die Anmelde Informationen gültig sind, <xref:System.Web.ApplicationServices.AuthenticationService> erstellt die-Klasse ein Authentifizierungs Cookie. Wenn das Authentifizierungs Cookie nicht abgelaufen ist, wissen Sie, dass die Anmelde Informationen des Benutzers authentifiziert wurden und Sie die Anmelde Informationen nicht erneut überprüfen müssen. (Eine Cookie-lose Authentifizierung ist nicht über die <xref:System.Web.ApplicationServices.AuthenticationService> -Klasse verfügbar.)  
  
 Der <xref:System.Web.ApplicationServices.AuthenticationService> kann zwei Ereignisse hervorrufen <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> : <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>und. Das <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Ereignis tritt auf, wenn die Benutzer Anmelde Informationen überprüft werden. Erstellen Sie einen Ereignishandler für <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> das-Ereignis, um anzupassen, wie Benutzer Anmelde Informationen überprüft werden. Das <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> Ereignis tritt auf, wenn das Authentifizierungs Cookie festgelegt wird, nachdem die Benutzer Anmelde Informationen überprüft wurden. Erstellen Sie einen Ereignishandler für <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> das-Ereignis, um das Authentifizierungs Cookie anzupassen.  
  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> -Methode überprüft die Benutzer Anmelde Informationen für die Authentifizierung, gibt jedoch kein Authentifizierungs Ticket zurück. Verwenden <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> Sie, wenn sich ein Benutzer bereits angemeldet hat, und Sie müssen überprüfen, ob die Anmelde Informationen zu Beginn einer neuen Anwendungs Sitzung noch gültig sind.  
  
 Ein Beispiel für die Verwendung des WCF-Authentifizierungs dienstangangs aus einer Konsolen [Anwendung finden Sie unter Exemplarische Vorgehensweise: Verwenden von ASP.net](https://msdn.microsoft.com/library/f3f394f0-20d6-4361-aa8f-4b21bf4933eb)-Anwendungsdienste.  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über Windows Communication Foundation Authentifizierungsdienst</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AuthenticationService ();" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.#ctor" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AuthenticationService();" FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.ApplicationServices.AuthenticationService" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Authenticating">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.AuthenticatingEventArgs&gt; Authenticating" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.Authenticating" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event Authenticating As EventHandler(Of AuthenticatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::AuthenticatingEventArgs ^&gt; ^ Authenticating;" />
      <MemberSignature Language="F#" Value="member this.Authenticating : EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " Usage="member this.Authenticating : System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.AuthenticatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn Benutzeranmeldeinformationen überprüft werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Ereignis wird ausgelöst, wenn die Benutzer Anmelde Informationen überprüft werden. Erstellen Sie einen Ereignishandler für <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> das-Ereignis, um anzupassen, wie Benutzer Anmelde Informationen überprüft werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein Ereignishandler für das <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> -Ereignis in `Application_Start` der-Methode der Global. asax-Datei gebunden wird.  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#1)]  
  
 Das folgende Beispiel zeigt einen Ereignishandler für das <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> -Ereignis in der Datei Global. asax. Der-Ereignishandler liest zwei Authentifizierungs Werte aus <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> der-Eigenschaft und übergibt Sie mit dem Benutzernamen und dem Kennwort an eine Benutzer `StudentAuthentication`definierte Authentifizierungs Klasse mit dem Namen.  
  
 [!code-csharp[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService_MultipleCredentials/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.AuthenticatingEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über Windows Communication Foundation Authentifizierungsdienst</related>
      </Docs>
    </Member>
    <Member MemberName="CreatingCookie">
      <MemberSignature Language="C#" Value="public static event EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.ApplicationServices.CreatingCookieEventArgs&gt; CreatingCookie" />
      <MemberSignature Language="DocId" Value="E:System.Web.ApplicationServices.AuthenticationService.CreatingCookie" />
      <MemberSignature Language="VB.NET" Value="Public Shared Custom Event CreatingCookie As EventHandler(Of CreatingCookieEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static event EventHandler&lt;System::Web::ApplicationServices::CreatingCookieEventArgs ^&gt; ^ CreatingCookie;" />
      <MemberSignature Language="F#" Value="member this.CreatingCookie : EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " Usage="member this.CreatingCookie : System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.ApplicationServices.CreatingCookieEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Tritt auf, wenn das Authentifizierungscookie festgelegt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> -Ereignis wird ausgelöst, wenn das Authentifizierungs Cookie festgelegt wird, nachdem die Benutzer Anmelde Informationen überprüft wurden. Erstellen Sie einen Ereignishandler für <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> das-Ereignis, um das Authentifizierungs Cookie anzupassen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein Ereignishandler an das <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> -Ereignis in `Application_Start` der-Methode der Global. asax-Datei gebunden wird.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#1)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#1)]  
  
 Das folgende Beispiel zeigt einen Ereignishandler für das <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> -Ereignis in der Datei Global. asax. Der-Ereignishandler passt das Authentifizierungs Cookie an <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> , indem der-Wert in der-Eigenschaft der-Eigenschaft hinzugefügt wird. Speichern Sie <xref:System.Web.ApplicationServices.CreatingCookieEventArgs.CustomCredential%2A> die Eigenschaft nur dann in einem Cookie, wenn Sie wissen, dass die Daten in der Eigenschaft nicht vertraulich sind. Böswillige Benutzer können auf die Werte im Cookie zugreifen.  
  
 [!code-csharp[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/cs/Global.asax#2)]
 [!code-vb[System.Web.Security.LoginService.CreatingCookieEventArgs#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Security.LoginService.CreatingCookieEventArgs/vb/Global.asax#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.ApplicationServices.CreatingCookieEventArgs" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über Windows Communication Foundation Authentifizierungsdienst</related>
      </Docs>
    </Member>
    <Member MemberName="IsLoggedIn">
      <MemberSignature Language="C#" Value="public bool IsLoggedIn ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsLoggedIn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn" />
      <MemberSignature Language="VB.NET" Value="Public Function IsLoggedIn () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsLoggedIn();" />
      <MemberSignature Language="F#" Value="member this.IsLoggedIn : unit -&gt; bool" Usage="authenticationService.IsLoggedIn " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Ermittelt, ob der aktuelle Benutzer authentifiziert ist.</summary>
        <returns><see langword="true" />, wenn der Benutzer authentifiziert wurde, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> -Methode überprüft, ob der aktuelle Benutzer durch Überprüfen der <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A>-Eigenschaft authentifiziert wird.  
  
> [!NOTE]
>  Die-Methode kann <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> nicht aus dem Code aufgerufen werden, der auf dem Webserver ausgeführt wird. Die <xref:System.Web.ApplicationServices.AuthenticationService.IsLoggedIn%2A> -Methode wird nur als Teil eines WCF-Dienstanbieter aufgerufen.  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über Windows Communication Foundation Authentifizierungsdienst</related>
      </Docs>
    </Member>
    <Member MemberName="Login">
      <MemberSignature Language="C#" Value="public bool Login (string username, string password, string customCredential, bool isPersistent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Login(string username, string password, string customCredential, bool isPersistent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Login(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Login (username As String, password As String, customCredential As String, isPersistent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Login(System::String ^ username, System::String ^ password, System::String ^ customCredential, bool isPersistent);" />
      <MemberSignature Language="F#" Value="member this.Login : string * string * string * bool -&gt; bool" Usage="authenticationService.Login (username, password, customCredential, isPersistent)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
        <Parameter Name="isPersistent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="username">Der zu überprüfende Benutzername.</param>
        <param name="password">Das Kennwort für den angegebenen Benutzer.</param>
        <param name="customCredential">Die Werte, die zusätzlich zu <paramref name="username" /> und <paramref name="password" /> überprüft werden sollen, sofern vorhanden.</param>
        <param name="isPersistent">Ein Wert, der angibt, ob das Authentifizierungsticket über Sitzungen hinaus gültig bleibt.</param>
        <summary>Überprüft Benutzeranmeldeinformationen und erstellt ein Authentifizierungsticket (Cookie), wenn die Anmeldeinformationen gültig sind.</summary>
        <returns><see langword="true" />, wenn Benutzeranmeldeinformationen gültig sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> -Methode überprüft die Benutzer Anmelde Informationen über einen Mitgliedschafts Anbieter. Sie können den Standard Mitgliedschafts Anbieter verwenden oder zur Laufzeit einen benutzerdefinierten Mitgliedschafts Anbieter angeben. Die <xref:System.Web.ApplicationServices.AuthenticationService> -Klasse `userName` übergibt `password` und an die- <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Methode des Mitgliedschafts `customCredential`Anbieters, aber nicht. Wenn <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> zurück `true`gibt <xref:System.Web.ApplicationServices.AuthenticationService> , wird ein Authentifizierungs Ticket als Cookie erstellt. Legen Sie `isPersistent` den- `true` Parameter auf fest, um ein Authentifizierungs Ticket zu erstellen, das über die aktuelle Sitzung hinaus dauert.  
  
> [!NOTE]
>  Verwenden Sie für den Schutz sensibler Daten stets den Authentifizierungsdienst in Verbindung mit Secure Sockets Layer (SSL, HTTPS).  
  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> -Methode löst <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> das-Ereignis <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> und das-Ereignis aus. Erstellen Sie einen Ereignishandler <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> für, um die Authentifizierung anzupassen, beispielsweise das `customCredential` Überprüfen der Werte in oder das Überprüfen von Anmelde Informationen über einen nicht standardmäßigen Mitgliedschafts Anbieter. Die Werte in `customCredential` werden nicht vom Standard Mitgliedschafts Anbieter überprüft. Um das Authentifizierungs Cookie anzupassen, erstellen Sie einen Ereignishandler <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie>für.  
  
> [!NOTE]
>  Die-Methode kann <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> nicht aus dem Code aufgerufen werden, der auf dem Webserver ausgeführt wird. Die <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> -Methode wird nur als Teil eines WCF-Dienstanbieter aufgerufen. Weitere Informationen finden Sie unter [ASP.net Authentication](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userName" /> oder <paramref name="password" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über Windows Communication Foundation Authentifizierungsdienst</related>
      </Docs>
    </Member>
    <Member MemberName="Logout">
      <MemberSignature Language="C#" Value="public void Logout ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Logout() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.Logout" />
      <MemberSignature Language="VB.NET" Value="Public Sub Logout ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Logout();" />
      <MemberSignature Language="F#" Value="member this.Logout : unit -&gt; unit" Usage="authenticationService.Logout " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht das Authentifizierungsticket (Cookie) im Browser.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> -Methode löscht das Authentifizierungs Cookie aus der Cookie-Auflistung des Browsers. Der Benutzer muss sich erneut anmelden, um authentifiziert zu werden.  
  
 Die <xref:System.Web.ApplicationServices.AuthenticationService> -Klasse speichert keine Informationen auf dem Server, über die Authentifizierungs Tickets gelöscht wurden.  
  
> [!NOTE]
>  Die-Methode kann <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> nicht aus dem Code aufgerufen werden, der auf dem Webserver ausgeführt wird. Die <xref:System.Web.ApplicationServices.AuthenticationService.Logout%2A> -Methode wird nur als Teil eines WCF-Dienstanbieter aufgerufen. Weitere Informationen finden Sie unter [ASP.net Authentication](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Security.FormsAuthentication.SignOut" />
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über Windows Communication Foundation Authentifizierungsdienst</related>
      </Docs>
    </Member>
    <Member MemberName="ValidateUser">
      <MemberSignature Language="C#" Value="public bool ValidateUser (string username, string password, string customCredential);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateUser(string username, string password, string customCredential) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.ApplicationServices.AuthenticationService.ValidateUser(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateUser (username As String, password As String, customCredential As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateUser(System::String ^ username, System::String ^ password, System::String ^ customCredential);" />
      <MemberSignature Language="F#" Value="member this.ValidateUser : string * string * string -&gt; bool" Usage="authenticationService.ValidateUser (username, password, customCredential)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ServiceModel.OperationContract</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="username" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="customCredential" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="username">Der zu überprüfende Benutzername.</param>
        <param name="password">Das Kennwort für den angegebenen Benutzer.</param>
        <param name="customCredential">Die Werte, die zusätzlich zu <paramref name="username" /> und <paramref name="password" /> überprüft werden sollen, sofern vorhanden.</param>
        <summary>Authentifiziert Benutzeranmeldeinformationen, ohne ein Authentifizierungsticket auszugeben.</summary>
        <returns><see langword="true" />, wenn die Benutzeranmeldeinformationen gültig sind, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> -Methode authentifiziert die Benutzer Anmelde Informationen, legt jedoch kein Authentifizierungs Cookie fest. Ohne ein Authentifizierungs Cookie wird der Benutzer nicht angemeldet, auch wenn die Anmelde Informationen gültig sind.  
  
 Verwenden Sie <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> die-Methode, wenn Sie überprüfen müssen, ob die Anmelde Informationen eines Benutzers gültig sind, ohne ein Authentifizierungs Cookie zu erhalten. Dies kann z. b. der Fall sein, wenn das Authentifizierungs Cookie bereits in einer Client Anwendung gespeichert ist, Sie jedoch sicherstellen möchten, dass die Anmelde Informationen des Benutzers beim Starten einer neuen Sitzung weiterhin gültig sind.  
  
 Die <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> -Methode löst <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> das-Ereignis aus, löst jedoch <xref:System.Web.ApplicationServices.AuthenticationService.CreatingCookie> nicht das-Ereignis aus.  
  
> [!NOTE]
>  Die-Methode kann <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> nicht aus dem Code aufgerufen werden, der auf dem Webserver ausgeführt wird. Die <xref:System.Web.ApplicationServices.AuthenticationService.ValidateUser%2A> -Methode wird nur als Teil eines WCF-Dienstanbieter aufgerufen. Weitere Informationen finden Sie unter [ASP.net Authentication](https://msdn.microsoft.com/library/fc10b0ef-4ce4-4a7f-9174-886325221ee1(v=vs.100)).  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="userName" /> oder <paramref name="password" /> ist <see langword="null" />.</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/6e121a28-89e8-4974-88a8-70aaa6a7d52b">Übersicht über Windows Communication Foundation Authentifizierungsdienst</related>
      </Docs>
    </Member>
  </Members>
</Type>
