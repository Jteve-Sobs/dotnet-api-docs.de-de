<Type Name="WorkflowMarkupSerializationManager" FullName="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b738066b1e8d93f5386117d2df8fbbc5af6eaa04" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69442079" /></Metadata><TypeSignature Language="C#" Value="public class WorkflowMarkupSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WorkflowMarkupSerializationManager extends System.Object implements class System.ComponentModel.Design.Serialization.IDesignerSerializationManager, class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />
  <TypeSignature Language="VB.NET" Value="Public Class WorkflowMarkupSerializationManager&#xA;Implements IDesignerSerializationManager, IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class WorkflowMarkupSerializationManager : IServiceProvider, System::ComponentModel::Design::Serialization::IDesignerSerializationManager" />
  <TypeSignature Language="F#" Value="type WorkflowMarkupSerializationManager = class&#xA;    interface IDesignerSerializationManager&#xA;    interface IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b5c8e-101">Verwaltet die Entwurfszeitserialisierung in und aus XAML (extensible Application Markup Language) für Workflows.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-101">Manages design-time serialization to and from extensible Application Markup Language (XAML) for workflows.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  [!INCLUDE[DeprecatedContent](~/includes/deprecatedcontent-md.md)]  
  
 <span data-ttu-id="b5c8e-102">Ein Workflow- oder Aktivitätsdesigner kann den <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> verwenden, um auf Dienste zuzugreifen, die als Unterstützung beim Verwalten von Prozessen der Entwurfszeitserialisierung dienen.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-102">A workflow or activity designer can use <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> to access services useful to managing design-time serialization processes.</span></span> <span data-ttu-id="b5c8e-103">Sie können z.&#160;B. den <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> verwenden, um Objekte zu erstellen, Typen zu suchen, Objekte zu identifizieren und die Serialisierung bestimmter Typen anzupassen.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-103">For example, <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager> can be used to create objects, look up types, identify objects, and customize the serialization of particular types.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WorkflowMarkupSerializationManager (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.#ctor(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (manager As IDesignerSerializationManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WorkflowMarkupSerializationManager(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ manager);" />
      <MemberSignature Language="F#" Value="new System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager : System.ComponentModel.Design.Serialization.IDesignerSerializationManager -&gt; System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" Usage="new System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager manager" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="manager" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      </Parameters>
      <Docs>
        <param name="manager"><span data-ttu-id="b5c8e-104"><see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, mit der <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> initialisiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-104">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> with which to initialize the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</span></span></param>
        <summary><span data-ttu-id="b5c8e-105">Initialisiert eine neue Instanz der <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />-Klasse, indem der angegebene <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-105">Initializes a new instance of the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" /> class by using the specified <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSerializationProvider">
      <MemberSignature Language="C#" Value="public void AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member AddSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit&#xA;override this.AddSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="workflowMarkupSerializationManager.AddSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b5c8e-106">Das hinzuzufügende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-106">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to add.</span></span></param>
        <summary><span data-ttu-id="b5c8e-107">Fügt dem Serialisierungs-Manager den angegebenen Serialisierungsprovider hinzu.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-107">Adds the specified serialization provider to the serialization manager.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5c8e-108"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider%2A> fügt dem Serialisierungs-Manager einen benutzerdefinierten Serialisierungsprovider hinzu.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-108"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider%2A> adds a custom serialization provider to the serialization manager.</span></span> <span data-ttu-id="b5c8e-109">Serialisierungsprovider können benutzerdefinierte Serialisierungsprogramme für einen bestimmten Objekttyp oder eine Gruppe von Objekttypen bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-109">Serialization providers can provide custom serializers for a particular type of object or set of types of objects.</span></span> <span data-ttu-id="b5c8e-110">Während der Serialisierung wird jeder benutzerdefinierte Serialisierungsprovider abgefragt, um, wenn möglich, ein Serialisierungsprogramm für einen spezifischen Datentyp zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-110">During serialization, each custom serialization provider is queried to return a serializer for a specific data type, if it can provide one.</span></span> <span data-ttu-id="b5c8e-111">Der Serialisierungs-Manager verwendet das von dieser Methode bereitgestellte benutzerdefinierte Serialisierungsprogramm, ehe er das Standardserialisierungsprogramm für einen bestimmten Typ verwendet.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-111">The serialization manager uses the custom serializer provided by this method before using the default serializer for a particular type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Context">
      <MemberSignature Language="C#" Value="public System.ComponentModel.Design.Serialization.ContextStack Context { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.ContextStack Context" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Context As ContextStack" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::Design::Serialization::ContextStack ^ Context { System::ComponentModel::Design::Serialization::ContextStack ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Context : System.ComponentModel.Design.Serialization.ContextStack" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ContextStack</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5c8e-112">Ruft einen stapelbasierten, benutzerdefinierten Speicherbereich ab, der die Kommunikation zwischen Serialisierungsprogrammen erleichtert.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-112">Gets a stack-based, user-defined storage area that is useful for communication between serializers.</span></span></summary>
        <value><span data-ttu-id="b5c8e-113">Ein <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" />, der Informationen zum aktuellen Objekt enthält, das serialisiert wird.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-113">A <see cref="T:System.ComponentModel.Design.Serialization.ContextStack" /> that contains information about the current object being serialized.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5c8e-114">Einige Serialisierungsprogramme benötigen Informationen zum Kontext eines Objekts, um jeweils den Status richtig beibehalten zu können.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-114">Some serializers require information about the context of an object to correctly persist their state.</span></span> <span data-ttu-id="b5c8e-115">Mithilfe von <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context%2A> kann ein Serialisierungsprogramm Daten zum Kontext eines Objekts festlegen, das es in einen <xref:System.ComponentModel.Design.Serialization.ContextStack> serialisiert, damit ein anderes Serialisierungsprogramm darauf zugreifen kann.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-115"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.Context%2A> enables a serializer to set data about the context of an object that it is serializing to a <xref:System.ComponentModel.Design.Serialization.ContextStack> where another serializer can access it.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetSerializer">
      <MemberSignature Language="C#" Value="public object GetSerializer (Type objectType, Type serializerType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSerializer(class System.Type objectType, class System.Type serializerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetSerializer(System.Type,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSerializer (objectType As Type, serializerType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSerializer(Type ^ objectType, Type ^ serializerType);" />
      <MemberSignature Language="F#" Value="abstract member GetSerializer : Type * Type -&gt; obj&#xA;override this.GetSerializer : Type * Type -&gt; obj" Usage="workflowMarkupSerializationManager.GetSerializer (objectType, serializerType)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(System.Type,System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objectType" Type="System.Type" />
        <Parameter Name="serializerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="objectType"><span data-ttu-id="b5c8e-116">Der <see cref="T:System.Type" />, für den das Serialisierungsprogramm abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-116">The <see cref="T:System.Type" /> for which to retrieve the serializer.</span></span></param>
        <param name="serializerType"><span data-ttu-id="b5c8e-117">Der <see cref="T:System.Type" /> des Serialisierungsprogramms, das abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-117">The <see cref="T:System.Type" /> of the serializer to retrieve.</span></span></param>
        <summary><span data-ttu-id="b5c8e-118">Gibt ein Serialisierungsprogramm des angegebenen Typs für ein Objekt des angegebenen Typs zurück.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-118">Returns a serializer of the specified type for an object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="b5c8e-119">Das angeforderte Serialisierungsprogramm oder ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), falls kein geeignetes Serialisierungsprogramm gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-119">The requested serializer, or a null reference (<see langword="Nothing" /> in Visual Basic) if no appropriate serializer can be located.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberSignature Language="F#" Value="abstract member GetService : Type -&gt; obj&#xA;override this.GetService : Type -&gt; obj" Usage="workflowMarkupSerializationManager.GetService serviceType" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IServiceProvider.GetService(System.Type)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType"><span data-ttu-id="b5c8e-120">Der <see cref="T:System.Type" /> des zurückzugebenden Dienstobjekts.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-120">The <see cref="T:System.Type" /> of service object to return.</span></span></param>
        <summary><span data-ttu-id="b5c8e-121">Gibt für den angegebenen Typ ein Dienstobjekt zurück.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-121">Returns a service object of the specified type.</span></span></summary>
        <returns><span data-ttu-id="b5c8e-122">Ein Dienstobjekt vom Typ <paramref name="serviceType" /> oder ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), falls kein Dienstobjekt vom Typ <paramref name="serviceType" /> vorhanden ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-122">A service object of type <paramref name="serviceType" />, or a null reference (<see langword="Nothing" /> in Visual Basic) if there is no service object of type <paramref name="serviceType" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetType">
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b5c8e-123">Gibt den <see cref="T:System.Type" /> zurück, der dem angegebenen Namen zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-123">Returns the <see cref="T:System.Type" /> associated with the specified name.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (string typeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(string typeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetType (typeName As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::String ^ typeName);" />
      <MemberSignature Language="F#" Value="override this.GetType : string -&gt; Type" Usage="workflowMarkupSerializationManager.GetType typeName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><span data-ttu-id="b5c8e-124">Der vollqualifizierte Name des zu ladenden <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-124">The fully-qualified name of the <see cref="T:System.Type" /> to load.</span></span></param>
        <summary><span data-ttu-id="b5c8e-125">Gibt einen Typ des angegebenen Namens zurück.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-125">Returns a type of the specified name.</span></span></summary>
        <returns><span data-ttu-id="b5c8e-126">Das <see cref="T:System.Type" />, das <paramref name="typeName" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-126">The <see cref="T:System.Type" /> associated with <paramref name="typeName" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetType">
      <MemberSignature Language="C#" Value="public virtual Type GetType (System.Xml.XmlQualifiedName xmlQualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetType(class System.Xml.XmlQualifiedName xmlQualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetType(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetType(System::Xml::XmlQualifiedName ^ xmlQualifiedName);" />
      <MemberSignature Language="F#" Value="override this.GetType : System.Xml.XmlQualifiedName -&gt; Type" Usage="workflowMarkupSerializationManager.GetType xmlQualifiedName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xmlQualifiedName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="xmlQualifiedName"><span data-ttu-id="b5c8e-127">Der <see cref="T:System.Xml.XmlQualifiedName" /> des zu ladenden Typs.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-127">The <see cref="T:System.Xml.XmlQualifiedName" /> of the type to load.</span></span></param>
        <summary><span data-ttu-id="b5c8e-128">Gibt den Typ zurück, der dem angegebenen XML-qualifizierten Namen zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-128">Returns that type associated with the specified XML qualified name.</span></span></summary>
        <returns><span data-ttu-id="b5c8e-129">Der <see cref="T:System.Type" />, der <paramref name="xmlQualifiedName" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-129">The <see cref="T:System.Type" /> associated with <paramref name="xmlQualifiedName" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5c8e-130">Ein XML-qualifizierter Name ist ein per Namespace qualifizierter lokaler Name im Format "namespace:localname".</span><span class="sxs-lookup"><span data-stu-id="b5c8e-130">An XML qualified name is a namespace-qualified local name, in the format of namespace:localname.</span></span>  
  
 <span data-ttu-id="b5c8e-131">Da Präfixe nur benötigt werden, wenn XML beibehalten oder gelesen wird, sind sie für <xref:System.Xml.XmlQualifiedName>-Objekte irrelevant.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-131">Because prefixes are only required when XML is persisted or read, they are irrelevant for <xref:System.Xml.XmlQualifiedName> objects.</span></span> <span data-ttu-id="b5c8e-132">Der Benutzer muss sicherstellen, dass der lokale Name kein ':' enthält.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-132">It is the responsibility of the user to ensure the local name does not contain a ":"</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5c8e-133"><paramref name="xmlQualifiedName" /> enthält einen NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="b5c8e-133"><paramref name="xmlQualifiedName" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetXmlQualifiedName">
      <MemberSignature Language="C#" Value="public virtual System.Xml.XmlQualifiedName GetXmlQualifiedName (Type type, out string prefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Xml.XmlQualifiedName GetXmlQualifiedName(class System.Type type, [out] string&amp; prefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.GetXmlQualifiedName(System.Type,System.String@)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xml::XmlQualifiedName ^ GetXmlQualifiedName(Type ^ type, [Runtime::InteropServices::Out] System::String ^ % prefix);" />
      <MemberSignature Language="F#" Value="abstract member GetXmlQualifiedName : Type *  -&gt; System.Xml.XmlQualifiedName&#xA;override this.GetXmlQualifiedName : Type *  -&gt; System.Xml.XmlQualifiedName" Usage="workflowMarkupSerializationManager.GetXmlQualifiedName (type, prefix)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="prefix" Type="System.String" RefType="out" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b5c8e-134">Der <see cref="T:System.Type" />, für den der XML-qualifizierte Name zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-134">The <see cref="T:System.Type" /> for which to return the XML-qualified name.</span></span></param>
        <param name="prefix"><span data-ttu-id="b5c8e-135">Enthält bei Rückgabe dieser Methode das XML-Präfix für den qualifizierten Namen oder eine leere Zeichenfolge, falls kein Präfix definiert ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-135">When this method returns, contains the XML prefix for the qualified name or an empty string if no prefix is defined.</span></span> <span data-ttu-id="b5c8e-136">Dieser Parameter wird nicht initialisiert übergeben.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-136">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="b5c8e-137">Gibt den XML-qualifizierten Namen zurück, der dem angegebenen Typ zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-137">Returns the XML-qualified name associated with the specified type.</span></span></summary>
        <returns><span data-ttu-id="b5c8e-138">Das <see cref="T:System.Xml.XmlQualifiedName" />, das <paramref name="type" /> zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-138">The <see cref="T:System.Xml.XmlQualifiedName" /> associated with <paramref name="type" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="b5c8e-139"><paramref name="type" /> enthält einen NULL-Verweis (<see langword="Nothing" /> in Visual Basic).</span><span class="sxs-lookup"><span data-stu-id="b5c8e-139"><paramref name="type" /> contains a null reference (<see langword="Nothing" /> in Visual Basic).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LocalAssembly">
      <MemberSignature Language="C#" Value="public System.Reflection.Assembly LocalAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly LocalAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.LocalAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property LocalAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::Assembly ^ LocalAssembly { System::Reflection::Assembly ^ get(); void set(System::Reflection::Assembly ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LocalAssembly : System.Reflection.Assembly with get, set" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.LocalAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5c8e-140">Ruft die Assembly ab bzw. legt die Assembly fest, die dem aktuellen Serialisierungsprogramm zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-140">Gets or sets the assembly that is associated with the current serializer.</span></span></summary>
        <value><span data-ttu-id="b5c8e-141">Die <see cref="T:System.Reflection.Assembly" />, die dem aktuellen Serialisierungsprogramm zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-141">The <see cref="T:System.Reflection.Assembly" /> that is associated with the current serializer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSerializationProvider">
      <MemberSignature Language="C#" Value="public void RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveSerializationProvider(class System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveSerializationProvider (provider As IDesignerSerializationProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveSerializationProvider(System::ComponentModel::Design::Serialization::IDesignerSerializationProvider ^ provider);" />
      <MemberSignature Language="F#" Value="abstract member RemoveSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit&#xA;override this.RemoveSerializationProvider : System.ComponentModel.Design.Serialization.IDesignerSerializationProvider -&gt; unit" Usage="workflowMarkupSerializationManager.RemoveSerializationProvider provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="b5c8e-142">Das zu entfernende <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" />-Element.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-142">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationProvider" /> to remove.</span></span> <span data-ttu-id="b5c8e-143">Dieser Provider muss mithilfe von <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" /> hinzugefügt worden sein.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-143">This provider must be added using <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)" />.</span></span></param>
        <summary><span data-ttu-id="b5c8e-144">Entfernt einen benutzerdefinierten Serialisierungsprovider aus dem <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-144">Removes a custom serialization provider from the <see cref="T:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportError">
      <MemberSignature Language="C#" Value="public void ReportError (object errorInformation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReportError(object errorInformation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.ReportError(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportError (errorInformation As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReportError(System::Object ^ errorInformation);" />
      <MemberSignature Language="F#" Value="abstract member ReportError : obj -&gt; unit&#xA;override this.ReportError : obj -&gt; unit" Usage="workflowMarkupSerializationManager.ReportError errorInformation" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInformation" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="errorInformation"><span data-ttu-id="b5c8e-145">Der zu meldende Fehler.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-145">The error to report.</span></span></param>
        <summary><span data-ttu-id="b5c8e-146">Meldet einen Fehler bei der Serialisierung.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-146">Reports an error in serialization.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5c8e-147">`errorInformation` kann einen beliebigen Objekttyp haben.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-147">`errorInformation` can be of any object type.</span></span> <span data-ttu-id="b5c8e-148">Wenn es sich um eine Ausnahme handelt, wird die Meldung der Ausnahme extrahiert und dem Benutzer angezeigt.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-148">If it is an exception, the message of the exception is extracted and reported to the user.</span></span> <span data-ttu-id="b5c8e-149">Wenn es sich um einen anderen Typ handelt, wird <xref:System.Object.ToString%2A> aufgerufen, um dem Benutzer die Informationen anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-149">If it is any other type, <xref:System.Object.ToString%2A> is called to display the information to the user.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationManager">
      <MemberSignature Language="C#" Value="protected internal System.ComponentModel.Design.Serialization.IDesignerSerializationManager SerializationManager { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.Serialization.IDesignerSerializationManager SerializationManager" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.SerializationManager" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property SerializationManager As IDesignerSerializationManager" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ SerializationManager { System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ get(); void set(System::ComponentModel::Design::Serialization::IDesignerSerializationManager ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SerializationManager : System.ComponentModel.Design.Serialization.IDesignerSerializationManager with get, set" Usage="System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.SerializationManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.IDesignerSerializationManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5c8e-150">Ruft den Serialisierungs-Manager ab bzw. legt den Serialisierungs-Manager fest, der mit dem aktuellen Serialisierungsprogramm verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-150">Gets or sets the serialization manager to use with the current serializer.</span></span></summary>
        <value><span data-ttu-id="b5c8e-151">Der <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />, der mit dem aktuellen Serialisierungsprogramm verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-151">The <see cref="T:System.ComponentModel.Design.Serialization.IDesignerSerializationManager" /> to use with the current serializer.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(class System.Type type, class System.Collections.ICollection arguments, string name, bool addToContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type ^ type, System::Collections::ICollection ^ arguments, System::String ^ name, bool addToContainer) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::CreateInstance;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="arguments" Type="System.Collections.ICollection" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="addToContainer" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="b5c8e-152">Die zu erstellende <see cref="T:System.Type" />.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-152">The <see cref="T:System.Type" /> to create.</span></span></param>
        <param name="arguments"><span data-ttu-id="b5c8e-153">Eine <see cref="T:System.Collections.ICollection" />, die die Argumente für <paramref name="type" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-153">An <see cref="T:System.Collections.ICollection" /> that contains the arguments for <paramref name="type" />.</span></span></param>
        <param name="name"><span data-ttu-id="b5c8e-154">Der Name des Objekts.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-154">The name of the object.</span></span> <span data-ttu-id="b5c8e-155">Sie können diesen Namen verwenden, um später mithilfe von <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" /> auf das Objekt zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-155">This name can be used to access the object later using <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />.</span></span> <span data-ttu-id="b5c8e-156">Wenn ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic) übergeben wird, wird das Objekt zwar trotzdem erstellt, aber anhand des Namens kann nicht darauf zugegriffen werden.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-156">If a null reference (<see langword="Nothing" /> in Visual Basic) is passed, the object is still created but cannot be accessed by name.</span></span></param>
        <param name="addToContainer"><span data-ttu-id="b5c8e-157"><see langword="true" />, um das Objekt dem Entwurfscontainer hinzuzufügen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-157"><see langword="true" /> to add the object to the design container; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="b5c8e-158">Erstellt eine Instanz des angegebenen Typs und fügt sie einer Auflistung benannter Instanzen hinzu.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-158">Creates an instance of the specified type and adds it to a collection of named instances.</span></span></summary>
        <returns><span data-ttu-id="b5c8e-159">Das neu erstellte Objekt.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-159">The newly created object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5c8e-160">Wenn `addToContainer` auf `true` gesetzt ist, muss das Objekt <xref:System.ComponentModel.IComponent> implementieren, damit dies eine Auswirkung hat.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-160">If `addToContainer` is set to `true`, the object must implement <xref:System.ComponentModel.IComponent> for this to have any effect.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance">
      <MemberSignature Language="C#" Value="object IDesignerSerializationManager.GetInstance (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetInstance (name As String) As Object Implements IDesignerSerializationManager.GetInstance" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetInstance;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="b5c8e-161">Der Name des abzurufenden Objekts.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-161">The name of the object to retrieve.</span></span></param>
        <summary><span data-ttu-id="b5c8e-162">Gibt eine Instanz eines erstellten Objekts mit dem angegebenen Namen zurück.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-162">Returns an instance of a created object of the specified name.</span></span></summary>
        <returns><span data-ttu-id="b5c8e-163">Eine Instanz des Objekts mit dem jeweiligen Namen oder ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), falls kein Objekt dieses Namens gefunden werden kann.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-163">An instance of the object with the given name, or a null reference (<see langword="Nothing" /> in Visual Basic) if no object by that name can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5c8e-164">`name` muss über einen vorherigen Aufruf von <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType> festgelegt worden sein.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-164">`name` must be set through a prior call to <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName">
      <MemberSignature Language="C#" Value="string IDesignerSerializationManager.GetName (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function GetName (value As Object) As String Implements IDesignerSerializationManager.GetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System::Object ^ value) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::GetName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="b5c8e-165">Das <see cref="T:System.Object" />, für das der Name abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-165">The <see cref="T:System.Object" /> for which to retrieve the name.</span></span></param>
        <summary><span data-ttu-id="b5c8e-166">Gibt den Namen des angegebenen Objekts zurück.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-166">Returns the name of the specified object.</span></span></summary>
        <returns><span data-ttu-id="b5c8e-167">Der Name des Objekts oder ein NULL-Verweis (<see langword="Nothing" /> in Visual Basic), falls das Objekt nicht benannt ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-167">The name of the object, or a null reference (<see langword="Nothing" /> in Visual Basic) if the object is unnamed.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties">
      <MemberSignature Language="C#" Value="System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberSignature Language="DocId" Value="P:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Properties As PropertyDescriptorCollection Implements IDesignerSerializationManager.Properties" />
      <MemberSignature Language="C++ CLI" Value="property System::ComponentModel::PropertyDescriptorCollection ^ System::ComponentModel::Design::Serialization::IDesignerSerializationManager::Properties { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5c8e-168">Ruft eine Auflistung von Eigenschaften ab, die mit verfügbaren Serialisierungsprogrammen serialisiert werden können.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-168">Gets a collection of properties that can be serialized with available serializers.</span></span></summary>
        <value><span data-ttu-id="b5c8e-169">Eine <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, die die zu serialisierenden Eigenschaften enthält.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-169">A <see cref="T:System.ComponentModel.PropertyDescriptorCollection" /> that contains the properties to serialize.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5c8e-170">Diese Eigenschaft kann eine leere Auflistung enthalten.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-170">This property can contain an empty collection.</span></span> <span data-ttu-id="b5c8e-171">Ein Serialisierungsprogramm sollte das Vorhandensein von Eigenschaften nie voraussetzen.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-171">A serializer should never assume that any properties exist.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName">
      <MemberSignature Language="C#" Value="event System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.Design.Serialization.ResolveNameEventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ResolveName" />
      <MemberSignature Language="VB.NET" Value="Custom Event ResolveName As ResolveNameEventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.Serialization.ResolveNameEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5c8e-172">Tritt ein, wenn <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> den angegebenen Namen in der Namenstabelle des Serialisierungs-Managers nicht finden kann.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-172">Occurs when <see cref="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)" /> cannot locate the specified name in the serialization manager's name table.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="b5c8e-173">Dieses Ereignis bietet Serialisierungsprogrammen eine Möglichkeit, Objekte nach Bedarf zu erstellen, so dass bei der Anforderung zum Erstellen von Objekten keine Abhängigkeiten beachtet werden müssen.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-173">This event provides a way for a serializer to create an object on demand, so that the serializer does not have to order object creation by dependency.</span></span> <span data-ttu-id="b5c8e-174">Der Delegat für dieses Ereignis wird unmittelbar nach Abschluss der Serialisierung oder Deserialisierung gelöscht.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-174">The delegate for this event is cleared immediately after serialization or deserialization is complete.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete">
      <MemberSignature Language="C#" Value="event EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete" />
      <MemberSignature Language="DocId" Value="E:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SerializationComplete" />
      <MemberSignature Language="VB.NET" Value="Custom Event SerializationComplete As EventHandler Implements System.ComponentModel.Design.Serialization.IDesignerSerializationManager" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b5c8e-175">Tritt ein, wenn die Serialisierung abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-175">Occurs when serialization is complete.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="b5c8e-176">Dieses Ereignis wird ausgelöst, wenn die Serialisierung oder Deserialisierung abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-176">This event is raised when serialization or deserialization is complete.</span></span>

<span data-ttu-id="b5c8e-177">Im Allgemeinen wird Serialisierungscode für die Ausgabe von Serialisierungsdaten geschrieben und erfordert normalerweise keine Überprüfung und Verarbeitung von Zuständen.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-177">Generally, serialization code is written to emit serialization data and does not typically require state-related checking and processing.</span></span> <span data-ttu-id="b5c8e-178">Wenn es für das Verwalten von Zustandsdaten während der Serialisierung erforderlich ist, kann ein Serialisierungsprogramm, das das <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SerializationComplete>-Ereignis überwachen kann, Daten festlegen, auf diese zugreifen und die Daten nach der Serialisierung löschen.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-178">If it is necessary to maintain state data throughout serialization, data can be set and accessed by a serializer, which can listen to the <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SerializationComplete> event, and clear the data after serialization.</span></span> <span data-ttu-id="b5c8e-179">Das Wiederherstellen des richtigen Zustands nach der Serialisierung ist möglicherweise wichtig, da Serialisierungsprogramme während der Serialisierung erneut verwendet werden können und restliche Zustandsdaten oder offene Streams dann falsch sein können.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-179">Restoring the proper state after serialization is important because serializers can be reused during serialization, and leftover state data or open streams might not be correct.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName">
      <MemberSignature Language="C#" Value="void IDesignerSerializationManager.SetName (object instance, string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(object instance, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetName (instance As Object, name As String) Implements IDesignerSerializationManager.SetName" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System::Object ^ instance, System::String ^ name) = System::ComponentModel::Design::Serialization::IDesignerSerializationManager::SetName;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(System.Object,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Workflow.ComponentModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instance"><span data-ttu-id="b5c8e-180">Das zu benennende Objekt.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-180">The object to name.</span></span></param>
        <param name="name"><span data-ttu-id="b5c8e-181">Der Name, der dem Objekt zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-181">The name to assign to the object.</span></span></param>
        <summary><span data-ttu-id="b5c8e-182">Legt den Namen des angegebenen vorhandenen Objekts fest.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-182">Sets the name of the specified existing object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b5c8e-183"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName(System.Object,System.String)> ist hilfreich, wenn Sie eine Instanz eines Objekts erstellen und anschließend benennen müssen, ohne <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType> zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="b5c8e-183"><xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23SetName(System.Object,System.String)> is useful when you need to create and then name an instance of an object without using <xref:System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
