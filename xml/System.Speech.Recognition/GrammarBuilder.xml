<Type Name="GrammarBuilder" FullName="System.Speech.Recognition.GrammarBuilder">
  <Metadata><Meta Name="ms.openlocfilehash" Value="978ba5cca0f5c270cc6722236bacd801e4ff8e7f" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86590345" /></Metadata><TypeSignature Language="C#" Value="public class GrammarBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GrammarBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.GrammarBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class GrammarBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class GrammarBuilder" />
  <TypeSignature Language="F#" Value="type GrammarBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{DebugSummary}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{DebugSummary}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="09ae6-101">Stellt einen Mechanismus für das programmgesteuerte Erstellen von Einschränkungen für eine Spracherkennungsgrammatik bereit.</span><span class="sxs-lookup"><span data-stu-id="09ae6-101">Provides a mechanism for programmatically building the constraints for a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-102">Sprach Erkennungs Grammatiken werden häufig in dem XML-Format erstellt, das in der [sprach Erkennungs Grammatik-Spezifikation (SRGS), Version 1,0](https://go.microsoft.com/fwlink/?LinkId=201761), definiert ist.</span><span class="sxs-lookup"><span data-stu-id="09ae6-102">Speech recognition grammars are commonly authored in the XML format defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761).</span></span> <span data-ttu-id="09ae6-103">Wenn Sie mit SRGS vertraut sind, die Grammatiken aber Programm gesteuert generieren möchten, können Sie den- <xref:System.Speech.Recognition.SrgsGrammar> Namespace verwenden, dessen Member genau den Elementen und Attributen entsprechen, die von SRGS definiert werden.</span><span class="sxs-lookup"><span data-stu-id="09ae6-103">If you are familiar with SRGS but want to generate the grammars programmatically, you can use the <xref:System.Speech.Recognition.SrgsGrammar> namespace, whose members correspond closely to the elements and attributes defined by SRGS.</span></span> <span data-ttu-id="09ae6-104">Wenn Sie mit SRGS nicht vertraut sind oder einen einfachen, programmgesteuerten Ansatz zur Erstellung von Grammatiken wünschen, mit denen Sie viele gängige Szenarien effizient erledigen können. Sie können die <xref:System.Speech.Recognition.GrammarBuilder> -Klasse und die- <xref:System.Speech.Recognition.Choices> Klasse verwenden.</span><span class="sxs-lookup"><span data-stu-id="09ae6-104">If you are unfamiliar with SRGS, or you want a lightweight, programmatic approach to authoring grammars with which you can efficiently accomplish many common scenarios; you can use the <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> classes.</span></span>  
  
 <span data-ttu-id="09ae6-105">Verwenden <xref:System.Speech.Recognition.GrammarBuilder> Sie-Objekte, um eine hierarchische Struktur zu erstellen, <xref:System.Speech.Recognition.Choices> die aus Objekten besteht, die Alternative Ausdrücke enthalten, die mit Präambel und Post-sprechenden Ausdrücken an jedem Knoten kombiniert werden, und mit semantischen Werten, die die Bedeutung zurück an die Anwendung vermitteln.</span><span class="sxs-lookup"><span data-stu-id="09ae6-105">Use <xref:System.Speech.Recognition.GrammarBuilder> objects to build a hierarchical tree composed of <xref:System.Speech.Recognition.Choices> objects that contain alternate phrases, interspersed with preamble and post-amble phrases at each node, and seeded with semantic values that convey  meaning back to the application.</span></span>  
  
 <span data-ttu-id="09ae6-106"><xref:System.Speech.Recognition.GrammarBuilder> <xref:System.Speech.Recognition.Grammar> Verwenden Sie die folgenden Schritte, um ein-Objekt zum Erstellen eines-Objekts zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="09ae6-106">To use a <xref:System.Speech.Recognition.GrammarBuilder> to create a <xref:System.Speech.Recognition.Grammar> object, use the following steps.</span></span>  
  
1.  <span data-ttu-id="09ae6-107">Erstellen eines <xref:System.Speech.Recognition.GrammarBuilder>-Objekts</span><span class="sxs-lookup"><span data-stu-id="09ae6-107">Create a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
2.  <span data-ttu-id="09ae6-108">Fügen Sie Einschränkungen an <xref:System.Speech.Recognition.GrammarBuilder> , z. b. <xref:System.String> Objekte, <xref:System.Speech.Recognition.Choices> , <xref:System.Speech.Recognition.SemanticResultKey> , <xref:System.Speech.Recognition.SemanticResultValue> , <xref:System.Speech.Recognition.DictationGrammar> und andere Objekte, die <xref:System.Speech.Recognition.GrammarBuilder> die Einschränkungen für die Grammatik definieren.</span><span class="sxs-lookup"><span data-stu-id="09ae6-108">Append constraints to the <xref:System.Speech.Recognition.GrammarBuilder>, such as <xref:System.String> objects, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, and other <xref:System.Speech.Recognition.GrammarBuilder> objects that define the constraints for the grammar.</span></span>  
  
3.  <span data-ttu-id="09ae6-109">Verwenden Sie einen der- <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktoren, um ein- <xref:System.Speech.Recognition.Grammar> Objekt aus der abgeschlossenen Grammatik zu erstellen <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-109">Use one of the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructors to create a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder> grammar.</span></span>  
  
 <span data-ttu-id="09ae6-110">Die Erstellung mit <xref:System.Speech.Recognition.GrammarBuilder> eignet sich am besten für Grammatiken, die eine einzelne Regel mit Listen oder vielleicht Listen von Listen aufweisen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-110">Authoring with <xref:System.Speech.Recognition.GrammarBuilder> is best suited to grammars that have a single rule containing lists, or perhaps lists of lists.</span></span> <span data-ttu-id="09ae6-111">Wenn Sie Grammatiken Programm gesteuert erstellen möchten, die über mehrere Regeln verfügen oder interne Regel Verweise erstellen müssen, verwenden Sie die Klassen des- <xref:System.Speech.Recognition.SrgsGrammar> Namespace.</span><span class="sxs-lookup"><span data-stu-id="09ae6-111">To programmatically build grammars that have multiple rules, or that need to make internal rule references, use the classes of the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="09ae6-112">Instanzen von <xref:System.Speech.Recognition.GrammarBuilder> können auch durch implizite Konvertierungen von bestimmten anderen Klassen oder durch Kombinieren eines  <xref:System.Speech.Recognition.GrammarBuilder> mit einem zweiten Objekt abgerufen werden, das Einschränkungen für eine Grammatik enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-112">Instances of <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained by implicit conversions from certain other classes or by combining a  <xref:System.Speech.Recognition.GrammarBuilder> with a second object that contains constraints for a grammar..</span></span> <span data-ttu-id="09ae6-113">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren und und den- <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="09ae6-113">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators and the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="09ae6-114">Um einer vorhandenen Regeln hinzuzufügen <xref:System.Speech.Recognition.GrammarBuilder> , verwenden Sie <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> die <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> Methoden,, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> , <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> und <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-114">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-115">Die Spracherkennung kann eine Ausnahme auslösen, wenn eine sprach Erkennungs Grammatik verwendet wird, die doppelte Semantik Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen enthält, die den Wert desselben semantischen Elements wiederholt ändern können.</span><span class="sxs-lookup"><span data-stu-id="09ae6-115">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="09ae6-116">Um das Debuggen zu unterstützen, gibt die- <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> Eigenschaft den aktuellen Status von <xref:System.Speech.Recognition.GrammarBuilder> als Zeichenfolge zurück.</span><span class="sxs-lookup"><span data-stu-id="09ae6-116">To help with debugging, the <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> property returns the current status of the <xref:System.Speech.Recognition.GrammarBuilder> as a string.</span></span>  
  
## Examples  
 <span data-ttu-id="09ae6-117">Im folgenden Beispiel  <xref:System.Speech.Recognition.GrammarBuilder> werden-und-Objekte verwendet, <xref:System.Speech.Recognition.Choices> um eine Grammatik zu erstellen, die einen der beiden Ausdrücke, "Make background *colorchoice*" oder "Set Background on *colorchoice*", erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-117">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="09ae6-118">Im Beispiel wird ein- <xref:System.Speech.Recognition.Choices> Objekt verwendet, um eine Liste zulässiger Werte für *colorchoice* aus einem Array von-Objekten zu erstellen <xref:System.String> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-118">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="09ae6-119">Ein <xref:System.Speech.Recognition.Choices> -Objekt ist analog zum `one-of` -Element in der SRGS-Spezifikation und enthält eine Reihe alternativer Ausdrücke, von denen jedes beim sprechen erkannt werden kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-119">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="09ae6-120">Im Beispiel wird auch ein- <xref:System.Speech.Recognition.Choices> Objekt verwendet, um ein Array von zwei- <xref:System.Speech.Recognition.GrammarBuilder> Objekten in ein paar alternativer Ausdrücke zu gruppieren, die die resultierende Grammatik erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-120">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="09ae6-121">Alternative Wörter oder Ausdrücke sind eine Komponente der meisten Grammatiken, und das- <xref:System.Speech.Recognition.Choices> Objekt stellt diese Funktionalität für Grammatiken bereit, die mit erstellt wurden <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-121">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="09ae6-122">Im Beispiel wird schließlich ein- <xref:System.Speech.Recognition.Grammar> Objekt aus einem erstellt, das <xref:System.Speech.Recognition.GrammarBuilder> aus einem-Objekt erstellt wurde <xref:System.Speech.Recognition.Choices> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-122">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Choices" />
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09ae6-123">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="09ae6-123">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-124">Instanzen dieser Klasse können auch durch implizite Konvertierungen von anderen Klassen oder durch Kombinieren eines- <xref:System.Speech.Recognition.GrammarBuilder> Objekts mit einem zweiten-Objekt von einem neuen abgerufen werden <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-124">Instances of this class can also be obtained by implicit conversions from other classes or by combining a <xref:System.Speech.Recognition.GrammarBuilder> object with a second object to from a new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="09ae6-125">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Methoden und.</span><span class="sxs-lookup"><span data-stu-id="09ae6-125">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods.</span></span>  
  
 <span data-ttu-id="09ae6-126">Zum Hinzufügen von Einschränkungen zu einer vorhandenen <xref:System.Speech.Recognition.GrammarBuilder> verwenden Sie die <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> Methoden,, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> , <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> und <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> und den- <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operator.</span><span class="sxs-lookup"><span data-stu-id="09ae6-126">To add constraints to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-127">Die Spracherkennung kann eine Ausnahme auslösen, wenn eine sprach Erkennungs Grammatik verwendet wird, die doppelte Semantik Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen enthält, die den Wert desselben semantischen Elements wiederholt ändern können.</span><span class="sxs-lookup"><span data-stu-id="09ae6-127">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span>
  
 <span data-ttu-id="09ae6-128">Weitere Informationen zum entwickeln und Verwenden von sprach Erkennungs Grammatiken finden Sie unter [Spracherkennung](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)).</span><span class="sxs-lookup"><span data-stu-id="09ae6-128">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09ae6-129">Initialisiert eine neue leere Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="09ae6-129">Initializes a new, empty instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-130">Zum Hinzufügen von Regeln zu einem vorhandenen <xref:System.Speech.Recognition.GrammarBuilder> Objekt verwenden Sie die <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> Methoden,, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> , <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> und <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> und den- <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operator.</span><span class="sxs-lookup"><span data-stu-id="09ae6-130">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder> object, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-131">Die Spracherkennung kann eine Ausnahme auslösen, wenn eine sprach Erkennungs Grammatik verwendet wird, die doppelte Semantik Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen enthält, die den Wert desselben semantischen Elements wiederholt ändern können.</span><span class="sxs-lookup"><span data-stu-id="09ae6-131">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="09ae6-132">Im folgenden Beispiel  <xref:System.Speech.Recognition.GrammarBuilder> werden-und-Objekte verwendet, <xref:System.Speech.Recognition.Choices> um eine Grammatik zu erstellen, die einen der beiden Ausdrücke, "Make background *colorchoice*" oder "Set Background on *colorchoice*", erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-132">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="09ae6-133">Im Beispiel wird ein- <xref:System.Speech.Recognition.Choices> Objekt verwendet, um eine Liste zulässiger Werte für *colorchoice* aus einem Array von-Objekten zu erstellen <xref:System.String> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-133">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="09ae6-134">Ein <xref:System.Speech.Recognition.Choices> -Objekt ist analog zum `one-of` -Element in der SRGS-Spezifikation und enthält eine Reihe alternativer Ausdrücke, von denen jedes beim sprechen erkannt werden kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-134">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any one of which can be recognized when spoken.</span></span> <span data-ttu-id="09ae6-135">Im Beispiel wird auch ein- <xref:System.Speech.Recognition.Choices> Objekt verwendet, um ein Array von zwei- <xref:System.Speech.Recognition.GrammarBuilder> Objekten in ein paar alternativer Ausdrücke zu gruppieren, die die resultierende Grammatik erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-135">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="09ae6-136">Alternative Wörter oder Ausdrücke sind eine Komponente der meisten Grammatiken, und das- <xref:System.Speech.Recognition.Choices> Objekt stellt diese Funktionalität für Grammatiken bereit, die mit erstellt wurden <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-136">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="09ae6-137">Im Beispiel wird schließlich ein- <xref:System.Speech.Recognition.Grammar> Objekt aus einem erstellt, das <xref:System.Speech.Recognition.GrammarBuilder> aus einem-Objekt erstellt wurde <xref:System.Speech.Recognition.Choices> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-137">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  GrammarBuilder bothPhrases = new GrammarBuilder();  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  bothPhrases.Append(bothChoices);  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="09ae6-138">Der Satz von Alternativen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-138">The set of alternatives.</span></span></param>
        <summary><span data-ttu-id="09ae6-139">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse aus einer Gruppe von Alternativen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-139">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a set of alternatives.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-140">Weitere Informationen zum Erstellen einer sprach Erkennungs Grammatik, die Alternativen enthält, finden [Sie unter Verwenden von Auswahlmöglichkeiten zum Erstellen einer grammatigrammgrammatik](https://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span><span class="sxs-lookup"><span data-stu-id="09ae6-140">For more information about building a speech recognition grammar that contains alternatives, see [Using Choices to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-141">Im folgenden Beispiel  <xref:System.Speech.Recognition.GrammarBuilder> werden-und-Objekte verwendet, <xref:System.Speech.Recognition.Choices> um eine Grammatik zu erstellen, die einen der beiden Ausdrücke, "Make background *colorchoice*" oder "Set Background on *colorchoice*", erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-141">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="09ae6-142">Im Beispiel wird ein- <xref:System.Speech.Recognition.Choices> Objekt verwendet, um eine Liste zulässiger Werte für *colorchoice* aus einem Array von-Objekten zu erstellen <xref:System.String> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-142">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="09ae6-143">Ein <xref:System.Speech.Recognition.Choices> -Objekt ist analog zum `one-of` -Element in der SRGS-Spezifikation und enthält eine Reihe alternativer Ausdrücke, von denen jedes beim sprechen erkannt werden kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-143">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="09ae6-144">Im Beispiel wird auch ein- <xref:System.Speech.Recognition.Choices> Objekt verwendet, um ein Array von zwei- <xref:System.Speech.Recognition.GrammarBuilder> Objekten in ein paar alternativer Ausdrücke zu gruppieren, die die resultierende Grammatik erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-144">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="09ae6-145">Alternative Wörter oder Ausdrücke sind eine Komponente der meisten Grammatiken, und das- <xref:System.Speech.Recognition.Choices> Objekt stellt diese Funktionalität für Grammatiken bereit, die mit erstellt wurden <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-145">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="09ae6-146">Im Beispiel wird schließlich ein- <xref:System.Speech.Recognition.Grammar> Objekt aus einem erstellt, das <xref:System.Speech.Recognition.GrammarBuilder> aus einem-Objekt erstellt wurde <xref:System.Speech.Recognition.Choices> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-146">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09ae6-147">Der semantische Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="09ae6-147">The semantic key.</span></span></param>
        <summary><span data-ttu-id="09ae6-148">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse aus einem semantischen Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="09ae6-148">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic key.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-149">Wenn Sie <xref:System.Speech.Recognition.GrammarBuilder> aus einem-Objekt eine-Instanz erstellen <xref:System.Speech.Recognition.SemanticResultValue> , fügen Sie der Grammatik Semantik Informationen hinzu, die im Erkennungs Ergebnis zurückgegeben werden können.</span><span class="sxs-lookup"><span data-stu-id="09ae6-149">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="09ae6-150">Sie können auf die semantischen Informationen im Erkennungs Ergebnis zugreifen, indem Sie die- <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> Eigenschaft von verwenden <xref:System.Speech.Recognition.RecognizedPhrase> , die im-Handler für das-Ereignis verfügbar ist `SpeechRecognized` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-150">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="09ae6-151">Wenn <xref:System.Speech.Recognition.GrammarBuilder> eine definiert <xref:System.Speech.Recognition.SemanticResultKey> , kann diese verwendet werden, um die semantischen Informationen in einem Erkennungs Ergebnis abzurufen, das dem Schlüssel zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="09ae6-151">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="09ae6-152">Weitere Informationen finden Sie im Beispiel für und <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29> unter <xref:System.Speech.Recognition.SemanticResultValue> und <xref:System.Speech.Recognition.SemanticResultKey> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-152">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-153">Wenn Sie Objekte erstellen, <xref:System.Speech.Recognition.GrammarBuilder> die- <xref:System.Speech.Recognition.SemanticResultValue> oder-Instanzen enthalten <xref:System.Speech.Recognition.SemanticResultKey> , stellen Sie sicher, dass Sie keine doppelten semantischen Elemente mit dem gleichen Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die-Eigenschaft eines-Objekts wiederholt ändern können <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.SemanticValue> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-153">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-154">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-154">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="09ae6-155">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, die die beiden Ausdrücke "Make background *colorchoice*" und "Set Background on *colorchoice*" erkennen kann, wobei *colorchoice* aus einer Reihe von Farben ausgewählt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-155">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="09ae6-156">Die Grammatik ermöglicht einem Benutzer, einen von mehreren Farbnamen zu sprechen, und gibt semantische Informationen über den erkannten Farbnamen an die Anwendung zurück.</span><span class="sxs-lookup"><span data-stu-id="09ae6-156">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="09ae6-157">Im Beispiel wird ein einzelnes verwendet, <xref:System.Speech.Recognition.SemanticResultKey> mit dem Sie das abrufen können <xref:System.Speech.Recognition.SemanticValue> , das mit der vom Benutzer gesprochenen Farbe verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="09ae6-157">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="09ae6-158">Wenn die Eingabe z. b. den Ausdruck "Hintergrund auf Rot festlegen" enthält, enthält das Erkennungs Ergebnis den semantischen Wert "#FF0000", den Sie mithilfe eines Handlers für das Ereignis abrufen können `SpeechRecognized` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-158">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="09ae6-159">Im Beispiel werden <xref:System.String> die <xref:System.Speech.Recognition.Choices> -,-,-, <xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.SemanticResultValue> -und-Objekte verwendet, <xref:System.Speech.Recognition.GrammarBuilder> um die Einschränkungen zu erstellen, die alle im letzten-Objekt enthalten sind <xref:System.Speech.Recognition.GrammarBuilder> `bothPhrases` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-159">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="09ae6-160">Schließlich wird in diesem Beispiel ein- <xref:System.Speech.Recognition.Grammar> Objekt aus abgeschlossen <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-160">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices object for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the Grammar object from the GrammarBuilder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09ae6-161">Der semantische Wert oder das Name/Wert-Paar.</span><span class="sxs-lookup"><span data-stu-id="09ae6-161">The semantic value or name/value pair.</span></span></param>
        <summary><span data-ttu-id="09ae6-162">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse aus einem semantischen Wert.</span><span class="sxs-lookup"><span data-stu-id="09ae6-162">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-163">Wenn Sie <xref:System.Speech.Recognition.GrammarBuilder> aus einem-Objekt eine-Instanz erstellen <xref:System.Speech.Recognition.SemanticResultValue> , fügen Sie der Grammatik Semantik Informationen hinzu, die im Erkennungs Ergebnis zurückgegeben werden können.</span><span class="sxs-lookup"><span data-stu-id="09ae6-163">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="09ae6-164">Sie können auf die semantischen Informationen im Erkennungs Ergebnis zugreifen, indem Sie die- <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> Eigenschaft von verwenden <xref:System.Speech.Recognition.RecognizedPhrase> , die im-Handler für das-Ereignis verfügbar ist `SpeechRecognized` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-164">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="09ae6-165">Wenn <xref:System.Speech.Recognition.GrammarBuilder> eine definiert <xref:System.Speech.Recognition.SemanticResultKey> , kann diese verwendet werden, um die semantischen Informationen in einem Erkennungs Ergebnis abzurufen, das dem Schlüssel zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="09ae6-165">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="09ae6-166">Weitere Informationen finden Sie im Beispiel für und <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29> unter <xref:System.Speech.Recognition.SemanticResultValue> und <xref:System.Speech.Recognition.SemanticResultKey> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-166">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-167">Wenn Sie Objekte erstellen, <xref:System.Speech.Recognition.GrammarBuilder> die- <xref:System.Speech.Recognition.SemanticResultValue> oder-Instanzen enthalten <xref:System.Speech.Recognition.SemanticResultKey> , stellen Sie sicher, dass Sie keine doppelten semantischen Elemente mit dem gleichen Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die-Eigenschaft eines-Objekts wiederholt ändern können <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.SemanticValue> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-167">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-168">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-168">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="09ae6-169">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, die die beiden Ausdrücke "Make background *colorchoice*" und "Set Background on *colorchoice*" erkennen kann, wobei *colorchoice* aus einer Reihe von Farben ausgewählt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-169">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="09ae6-170">Die Grammatik ermöglicht einem Benutzer, einen von mehreren Farbnamen zu sprechen, und gibt semantische Informationen über den erkannten Farbnamen an die Anwendung zurück.</span><span class="sxs-lookup"><span data-stu-id="09ae6-170">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="09ae6-171">Im Beispiel wird ein einzelnes verwendet, <xref:System.Speech.Recognition.SemanticResultKey> mit dem Sie das abrufen können <xref:System.Speech.Recognition.SemanticValue> , das mit der vom Benutzer gesprochenen Farbe verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="09ae6-171">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="09ae6-172">Wenn die Eingabe z. b. den Ausdruck "Hintergrund auf Rot festlegen" enthält, enthält das Erkennungs Ergebnis den semantischen Wert "#FF0000", den Sie mithilfe eines Handlers für das Ereignis abrufen können `SpeechRecognized` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-172">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="09ae6-173">Im Beispiel werden <xref:System.String> die <xref:System.Speech.Recognition.Choices> -,-,-, <xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.SemanticResultValue> -und-Objekte verwendet, <xref:System.Speech.Recognition.GrammarBuilder> um die Einschränkungen zu erstellen, die alle im letzten-Objekt enthalten sind <xref:System.Speech.Recognition.GrammarBuilder> `bothPhrases` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-173">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="09ae6-174">Schließlich wird in diesem Beispiel ein- <xref:System.Speech.Recognition.Grammar> Objekt aus abgeschlossen <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-174">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the grammar from the grammar builder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder phrase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="09ae6-175">Die Wortsequenz.</span><span class="sxs-lookup"><span data-stu-id="09ae6-175">The sequence of words.</span></span></param>
        <summary><span data-ttu-id="09ae6-176">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse aus einer Sequenz von Wörtern.</span><span class="sxs-lookup"><span data-stu-id="09ae6-176">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a sequence of words.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-177">Der Ausdruck stellt einen exakten gesprochenen Ausdruck dar, der von der sprach Erkennungs Grammatik erkannt werden kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-177">The phrase represents an exact spoken phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="09ae6-178">Weitere Informationen zum Erstellen einer sprach Erkennungs Grammatik, die Zeichen folgen enthält, finden Sie unter Verwenden von Zeichen folgen [zum Erstellen einer grammatigrammgrammatik](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="09ae6-178">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-179">Im folgenden Beispiel  <xref:System.Speech.Recognition.GrammarBuilder> werden-und-Objekte verwendet, <xref:System.Speech.Recognition.Choices> um eine Grammatik zu erstellen, die einen der beiden Ausdrücke, "Make background *colorchoice*" oder "Set Background on *colorchoice*", erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-179">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="09ae6-180">Nachdem Sie eine Liste zulässiger Werte für *colorchoice* mithilfe eines- <xref:System.Speech.Recognition.Choices> Objekts erstellt haben, werden im Beispiel zwei <xref:System.Speech.Recognition.GrammarBuilder> -Objekte, `makePhrase` und `setPhrase` , mit einer Zeichenfolge als Argument initialisiert.</span><span class="sxs-lookup"><span data-stu-id="09ae6-180">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using a string as an argument.</span></span>  
  
 <span data-ttu-id="09ae6-181">Das Beispiel erstellt schließlich ein- <xref:System.Speech.Recognition.Grammar> Objekt aus einem-Objekt <xref:System.Speech.Recognition.Choices> , das in ein-Objekt umgewandelt wird <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-181">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * System.Speech.Recognition.SubsetMatchingMode -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, subsetMatchingCriteria)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="09ae6-182">Die Wortsequenz.</span><span class="sxs-lookup"><span data-stu-id="09ae6-182">The sequence of words.</span></span></param>
        <param name="subsetMatchingCriteria"><span data-ttu-id="09ae6-183">Der entsprechende Modus, den die Spracherkennungsgrammatik verwendet, um den Ausdruck zu erkennen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-183">The matching mode the speech recognition grammar uses to recognize the phrase.</span></span></param>
        <summary><span data-ttu-id="09ae6-184">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse für eine Teilmenge einer Sequenz von Wörtern.</span><span class="sxs-lookup"><span data-stu-id="09ae6-184">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class for a subset of a sequence of words.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-185">Der- `phrase` Parameter stellt den Ausdruck dar, der von der sprach Erkennungs Grammatik erkannt werden kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-185">The `phrase` parameter represents the phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="09ae6-186">Der- `subsetMatchingMode` Parameter gibt eine Teilmenge des Ausdrucks an, der gesprochen werden kann, um eine erfolgreiche Erkennung des gesamten Ausdrucks zu erzielen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-186">The `subsetMatchingMode` parameter specifies a subset of the phrase that can be spoken to achieve successful recognition of the entire phrase.</span></span> <span data-ttu-id="09ae6-187">Sie können dies verwenden, um eine Grammatik mit einer Liste von Einträgen mit langen Namen zu erstellen, ohne dass die Benutzer einen vollständigen Namen zum Abgleichen eines Elements sprechen müssen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-187">You can use this to create a grammar with a list of entries that have long names, without requiring users to speak an entire name to match an item.</span></span>  
  
 <span data-ttu-id="09ae6-188">Weitere Informationen zu den entsprechenden Modi finden Sie unter <xref:System.Speech.Recognition.SubsetMatchingMode> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-188">For more information about the matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode>.</span></span> <span data-ttu-id="09ae6-189">Weitere Informationen zum Erstellen einer sprach Erkennungs Grammatik, die Zeichen folgen enthält, finden Sie unter Verwenden von Zeichen folgen [zum Erstellen einer grammatigrammgrammatik](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="09ae6-189">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-190">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik für jeden <xref:System.Speech.Recognition.SubsetMatchingMode> Wert und eine Grammatik für die Wahl zwischen den entsprechenden modusgrammatiken erstellt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-190">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value and a grammar for choosing between the matching mode grammars.</span></span> <span data-ttu-id="09ae6-191">Wenn der Wert von `phrase` "1 2 3 4 5 6 7" ist, erkennt die unter Sequenz Grammatik die Eingabe "2 3 4", aber nicht die Eingabe "1 3 5".</span><span class="sxs-lookup"><span data-stu-id="09ae6-191">If the value of `phrase` is "one two three four five six seven", then the Subsequence grammar recognizes the input "two three four", but not the input "one three five".</span></span> <span data-ttu-id="09ae6-192">Die geordnete Teilmenge erkennt jedoch beide Eingaben.</span><span class="sxs-lookup"><span data-stu-id="09ae6-192">However, the Ordered Subset grammar recognizes both of these inputs.</span></span>  
  
```csharp  
  
private static IEnumerable<Grammar>  
  CreateMatchingModeGrammars(string phrase)  
{  
  List<Grammar> grammars = new List<Grammar>(5);  
  
  Choices modeChoice = new Choices();  
  Type enumType = typeof(SubsetMatchingMode);  
  foreach (SubsetMatchingMode mode in Enum.GetValues(enumType))  
  {  
    string modeName = Enum.GetName(enumType, mode);  
    modeName = BreakAtCaps(modeName);  
  
    GrammarBuilder builder = new GrammarBuilder(phrase, mode);  
    Grammar modeGrammar = new Grammar(builder);  
    modeGrammar.Name = modeName;  
    modeGrammar.Enabled = false;  
    grammars.Add(modeGrammar);  
  
    modeChoice.Add(modeName);  
  }  
  
  Grammar choiceGrammar = new Grammar(modeChoice);  
  choiceGrammar.Name = "choice";  
  grammars.Add(choiceGrammar);  
  
  return grammars;  
}  
  
// Insert spaces preceding each uppercase letter in a string.   
private static string BreakAtCaps(string item)  
{  
  if (item == null || item.Length == 0)  
  {  
    return item;  
  }  
  
  StringBuilder sb = new StringBuilder(item[0].ToString());  
  for (int i = 1; i < item.Length; i++)  
  {  
    char c = item[i];  
    if (char.IsUpper(c))  
    {  
      sb.Append(" ");  
    }  
    sb.Append(c);  
  }  
  
  return sb.ToString();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SubsetMatchingMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.GrammarBuilder * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (builder, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="09ae6-193">Das wiederholte Element.</span><span class="sxs-lookup"><span data-stu-id="09ae6-193">The repeated element.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="09ae6-194">Die minimale Wiederholungsrate für eine Übereinstimmung der Eingabe mit dem durch <paramref name="builder" /> definierten Element, nach der eine Übereinstimmung anerkannt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-194">The minimum number of times that input matching the element defined by <paramref name="builder" /> must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="09ae6-195">Die maximale Wiederholungsrate für eine Übereinstimmung der Eingabe mit dem durch <paramref name="builder" /> definierten Element, nach der eine Übereinstimmung anerkannt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-195">The maximum number of times that input matching the element defined by <paramref name="builder" /> can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="09ae6-196">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse aus einem wiederholten Element.</span><span class="sxs-lookup"><span data-stu-id="09ae6-196">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a repeated element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-197">Wenn der Wert von `minRepeat` 0 ist, stellt das neue <xref:System.Speech.Recognition.GrammarBuilder> ein optionales-Element dar.</span><span class="sxs-lookup"><span data-stu-id="09ae6-197">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="09ae6-198">Der Wert von `minRepeat` muss größer als oder gleich 0 und kleiner als oder gleich dem Wert von sein `maxRepeat` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-198">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-199">Wenn Sie für Objekte, <xref:System.Speech.Recognition.GrammarBuilder> die-oder-Instanzen enthalten, Wiederholungen angeben <xref:System.Speech.Recognition.SemanticResultValue> , achten <xref:System.Speech.Recognition.SemanticResultKey> Sie darauf, dass Sie keine doppelten semantischen Elemente mit dem gleichen Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die-Eigenschaft eines-Objekts wiederholt ändern können <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.SemanticValue> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-199">When you specify repeats for <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-200">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-200">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="09ae6-201">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik zum Bestellen einer Pizza erstellt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-201">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="09ae6-202">Er beginnt mit einem optionalen, öffnenden Ausdruck, gefolgt von einem bis vier Unterordnungen und schließt mit dem Wort "Pizza".</span><span class="sxs-lookup"><span data-stu-id="09ae6-202">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object from a string array of alternative toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="09ae6-203">Die wiederholte Wortsequenz.</span><span class="sxs-lookup"><span data-stu-id="09ae6-203">The repeated sequence of words.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="09ae6-204">Die minimale Wiederholungsrate für eine Übereinstimmung der Eingabe mit der Phrase, nach der eine Übereinstimmung anerkannt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-204">The minimum number of times that input matching the phrase must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="09ae6-205">Die maximale Wiederholungsrate für eine Übereinstimmung der Eingabe mit der Phrase, nach der eine Übereinstimmung anerkannt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-205">The maximum number of times that input matching the phrase can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="09ae6-206">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse aus der Sequenz von Wörtern in einem <see cref="T:System.String" /> und gibt an, wie oft der <see cref="T:System.String" /> wiederholt werden kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-206">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from the sequence of words in a <see cref="T:System.String" /> and specifies how many times the <see cref="T:System.String" /> can be repeated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-207">Wenn der Wert von `minRepeat` 0 ist, stellt das neue <xref:System.Speech.Recognition.GrammarBuilder> ein optionales-Element dar.</span><span class="sxs-lookup"><span data-stu-id="09ae6-207">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="09ae6-208">Der Wert von `minRepeat` muss größer als oder gleich 0 und kleiner als oder gleich dem Wert von sein `maxRepeat` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-208">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span> <span data-ttu-id="09ae6-209">Weitere Informationen zum Erstellen einer sprach Erkennungs Grammatik, die Zeichen folgen enthält, finden Sie unter Verwenden von Zeichen folgen [zum Erstellen einer grammatigrammgrammatik](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="09ae6-209">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-210">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik zum Bestellen einer Pizza erstellt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-210">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="09ae6-211">Er beginnt mit einem optionalen, öffnenden Ausdruck, gefolgt von einem bis vier Unterordnungen und schließt mit dem Wort "Pizza".</span><span class="sxs-lookup"><span data-stu-id="09ae6-211">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09ae6-212">Erstellt ein neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der eine Sequenz aus zwei Grammatikelementen enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-212">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-213">Die statischen <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> Methoden stellen einen weiteren Mechanismus bereit, mit dem Sie verschiedene Typen kombinieren können, um Vielfalt und Flexibilität in Grammatiken zu erstellen, die mit erstellt wurden <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-213">The static <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods provide another mechanism by which you can combine various types to create diversity and flexibility in grammars built with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="09ae6-214">Diese Methoden entsprechen den statischen- <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Methoden, die auch für die-Klasse definiert werden <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-214">These methods correspond to the static <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods, which are also defined on the <xref:System.Speech.Recognition.GrammarBuilder> class.</span></span> <span data-ttu-id="09ae6-215">Die Reihenfolge der Parameter bestimmt die Reihenfolge der Elemente in der neuen <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-215">The order of the parameters determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="09ae6-216">Ein <xref:System.Speech.Recognition.GrammarBuilder> kann auch aus-, <xref:System.Speech.Recognition.Choices> <xref:System.Speech.Recognition.SemanticResultKey> -, <xref:System.Speech.Recognition.SemanticResultValue> -und- [Zeichen](https://go.microsoft.com/fwlink/?LinkId=159733) folgen Objekten abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="09ae6-216">A <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and [String](https://go.microsoft.com/fwlink/?LinkId=159733) objects.</span></span> <span data-ttu-id="09ae6-217">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren und.</span><span class="sxs-lookup"><span data-stu-id="09ae6-217">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-218">Die Spracherkennung kann eine Ausnahme auslösen, wenn eine sprach Erkennungs Grammatik verwendet wird, die doppelte Semantik Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen enthält, die den Wert desselben semantischen Elements wiederholt ändern können.</span><span class="sxs-lookup"><span data-stu-id="09ae6-218">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="09ae6-219">Weitere Informationen zum entwickeln und Verwenden von sprach Erkennungs Grammatiken finden Sie unter [Spracherkennung](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)).</span><span class="sxs-lookup"><span data-stu-id="09ae6-219">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (choices As Choices, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (choices, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices"><span data-ttu-id="09ae6-220">Das erste Grammatikelement, das einen Satz von Alternativen darstellt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-220">The first grammar element, which represents a set of alternatives.</span></span></param>
        <param name="builder"><span data-ttu-id="09ae6-221">Das zweite Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-221">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="09ae6-222">Erstellt einen neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der ein <see cref="T:System.Speech.Recognition.Choices" />-Objekt gefolgt von einem <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-222">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="09ae6-223">Ein <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="choices" />-Elements gefolgt vom <paramref name="builder" />-Element.</span><span class="sxs-lookup"><span data-stu-id="09ae6-223">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> element followed by the <paramref name="builder" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-224"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt implizite Konvertierungen aus den folgenden Klassen:</span><span class="sxs-lookup"><span data-stu-id="09ae6-224"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="09ae6-225">Diese Methode akzeptiert die oben aufgeführten Objekte für den- `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09ae6-225">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="09ae6-226">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren und.</span><span class="sxs-lookup"><span data-stu-id="09ae6-226">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-227">Wenn Sie <xref:System.Speech.Recognition.Choices> -und-Objekte kombinieren <xref:System.Speech.Recognition.GrammarBuilder> , die- <xref:System.Speech.Recognition.SemanticResultValue> oder-Instanzen enthalten <xref:System.Speech.Recognition.SemanticResultKey> , stellen Sie sicher, dass Sie keine doppelten semantischen Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die- <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft eines-Objekts wiederholt ändern könnten <xref:System.Speech.Recognition.SemanticValue></span><span class="sxs-lookup"><span data-stu-id="09ae6-227">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-228">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-228">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="09ae6-229">Weitere Informationen zum Entwickeln einer sprach Erkennungs Grammatik, die semantische Informationen enthält, finden [Sie unter Hinzufügen einer Semantik zu einer Grammatiken-Grammatik](https://msdn.microsoft.com/library/hh361581.aspx).</span><span class="sxs-lookup"><span data-stu-id="09ae6-229">For more information about building a speech recognition grammar that contains semantic information, see [Add Semantics to a GrammarBuilder Grammar](https://msdn.microsoft.com/library/hh361581.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder As GrammarBuilder, choices As Choices) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, choices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="09ae6-230">Das erste Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-230">The first grammar element.</span></span></param>
        <param name="choices"><span data-ttu-id="09ae6-231">Das zweite Grammatikelement, das einen Satz von Alternativen darstellt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-231">The second grammar element, which represents a set of alternatives.</span></span></param>
        <summary><span data-ttu-id="09ae6-232">Erstellt einen neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt gefolgt von einem <see cref="T:System.Speech.Recognition.Choices" />-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-232">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></summary>
        <returns><span data-ttu-id="09ae6-233">Ein <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="builder" />-Elements gefolgt vom <paramref name="choices" />-Element.</span><span class="sxs-lookup"><span data-stu-id="09ae6-233">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="choices" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-234"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt implizite Konvertierungen aus den folgenden Klassen:</span><span class="sxs-lookup"><span data-stu-id="09ae6-234"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="09ae6-235">Diese Methode akzeptiert die oben aufgeführten Objekte für den- `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09ae6-235">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="09ae6-236">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren und.</span><span class="sxs-lookup"><span data-stu-id="09ae6-236">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-237">Beim Kombinieren <xref:System.Speech.Recognition.Choices> von-und- <xref:System.Speech.Recognition.GrammarBuilder> Objekten, die- <xref:System.Speech.Recognition.SemanticResultValue> oder- <xref:System.Speech.Recognition.SemanticResultKey> Instanzen mit anderen Grammatik Elementen enthalten, achten Sie darauf, dass Sie keine doppelten semantischen Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die-Eigenschaft eines-Objekts wiederholt ändern können <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.SemanticValue> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-237">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-238">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-238">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="09ae6-239">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, mit der die beiden Ausdrücke "Hintergrund *Farbe*festlegen" und " *Hintergrundfarbe festlegen" erkannt*werden können, wobei *Farbe* aus einer Reihe von Farben ausgewählt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-239">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="09ae6-240">Verschiedene Typen werden verwendet, um die endgültige Grammatik zu erstellen, z. b. [Zeichen](https://go.microsoft.com/fwlink/?LinkId=159733)folgen <xref:System.Speech.Recognition.Choices> -,-und- <xref:System.Speech.Recognition.GrammarBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="09ae6-240">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="09ae6-241">Die expliziten Umwandlungs Operatoren in den Aufrufen der- <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> Methoden sind optional.</span><span class="sxs-lookup"><span data-stu-id="09ae6-241">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder1, builder2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1"><span data-ttu-id="09ae6-242">Das erste Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-242">The first grammar element.</span></span></param>
        <param name="builder2"><span data-ttu-id="09ae6-243">Das zweite Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-243">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="09ae6-244">Erstellt einen neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der eine Sequenz aus zwei <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekten enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-244">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span></span></summary>
        <returns><span data-ttu-id="09ae6-245">Ein <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="builder1" />-Elements gefolgt vom <paramref name="builder2" />-Element.</span><span class="sxs-lookup"><span data-stu-id="09ae6-245">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> element followed by the <paramref name="builder2" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-246"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt implizite Konvertierungen aus den folgenden Klassen:</span><span class="sxs-lookup"><span data-stu-id="09ae6-246"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="09ae6-247">Diese Methode akzeptiert die oben aufgeführten Objekte für den- `builder1` Parameter oder den- `builder2` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09ae6-247">This method accepts the objects listed above for the `builder1` or `builder2` parameter.</span></span>  
  
 <span data-ttu-id="09ae6-248">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren und.</span><span class="sxs-lookup"><span data-stu-id="09ae6-248">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-249">Beim Kombinieren <xref:System.Speech.Recognition.Choices> von-und- <xref:System.Speech.Recognition.GrammarBuilder> Objekten, die- <xref:System.Speech.Recognition.SemanticResultValue> oder- <xref:System.Speech.Recognition.SemanticResultKey> Instanzen mit anderen Grammatik Elementen enthalten, achten Sie darauf, dass Sie keine doppelten semantischen Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die-Eigenschaft eines-Objekts wiederholt ändern können <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.SemanticValue> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-249">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-250">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-250">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="09ae6-251">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, mit der die beiden Ausdrücke "Hintergrund *Farbe*festlegen" und " *Hintergrundfarbe festlegen" erkannt*werden können, wobei *Farbe* aus einer Reihe von Farben ausgewählt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-251">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="09ae6-252">Verschiedene Typen werden verwendet, um die endgültige Grammatik zu erstellen, z. b. [Zeichen](https://go.microsoft.com/fwlink/?LinkId=159733)folgen <xref:System.Speech.Recognition.Choices> -,-und- <xref:System.Speech.Recognition.GrammarBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="09ae6-252">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="09ae6-253">Die expliziten Umwandlungs Operatoren in den Aufrufen der- <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> Methoden sind optional.</span><span class="sxs-lookup"><span data-stu-id="09ae6-253">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, phrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="09ae6-254">Das erste Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-254">The first grammar element.</span></span></param>
        <param name="phrase"><span data-ttu-id="09ae6-255">Das zweite Grammatikelement, das eine Sequenz von Wörtern darstellt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-255">The second grammar element, which represents a sequence of words.</span></span></param>
        <summary><span data-ttu-id="09ae6-256">Erstellt ein neues <see cref="T:System.Speech.Recognition.GrammarBuilder" />, das ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt gefolgt von einem Begriff enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-256">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a phrase.</span></span></summary>
        <returns><span data-ttu-id="09ae6-257">Ein <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="builder" />-Elements gefolgt vom <paramref name="phrase" />-Element.</span><span class="sxs-lookup"><span data-stu-id="09ae6-257">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="phrase" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-258"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt implizite Konvertierungen aus den folgenden Klassen:</span><span class="sxs-lookup"><span data-stu-id="09ae6-258"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="09ae6-259">Diese Methode akzeptiert die oben aufgeführten Objekte für den- `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09ae6-259">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="09ae6-260">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren und.</span><span class="sxs-lookup"><span data-stu-id="09ae6-260">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-261">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, mit der die beiden Ausdrücke "Hintergrund *Farbe*festlegen" und " *Hintergrundfarbe festlegen" erkannt*werden können, wobei *Farbe* aus einer Reihe von Farben ausgewählt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-261">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="09ae6-262">Verschiedene Typen werden verwendet, um die endgültige Grammatik zu erstellen, z. b. [Zeichen](https://go.microsoft.com/fwlink/?LinkId=159733)folgen <xref:System.Speech.Recognition.Choices> -,-und- <xref:System.Speech.Recognition.GrammarBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="09ae6-262">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="09ae6-263">Die expliziten Umwandlungs Operatoren in den Aufrufen der- <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> Methoden sind optional.</span><span class="sxs-lookup"><span data-stu-id="09ae6-263">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (phrase, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="09ae6-264">Das erste Grammatikelement, das eine Sequenz von Wörtern darstellt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-264">The first grammar element, which represents a sequence of words.</span></span></param>
        <param name="builder"><span data-ttu-id="09ae6-265">Das zweite Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-265">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="09ae6-266">Erstellt ein neues <see cref="T:System.Speech.Recognition.GrammarBuilder" />, das einen Begriff gefolgt von einem <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-266">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="09ae6-267">Ein <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="phrase" />-Elements gefolgt vom <paramref name="builder" />-Element.</span><span class="sxs-lookup"><span data-stu-id="09ae6-267">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> element followed by the <paramref name="builder" /> element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-268"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt implizite Konvertierungen aus den folgenden Klassen:</span><span class="sxs-lookup"><span data-stu-id="09ae6-268"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="09ae6-269">Diese Methode akzeptiert die oben aufgeführten Objekte für den- `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09ae6-269">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="09ae6-270">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren und.</span><span class="sxs-lookup"><span data-stu-id="09ae6-270">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-271">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, mit der die beiden Ausdrücke "Hintergrund *Farbe*festlegen" und " *Hintergrundfarbe festlegen" erkannt*werden können, wobei *Farbe* aus einer Reihe von Farben ausgewählt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-271">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="09ae6-272">Verschiedene Typen werden verwendet, um die endgültige Grammatik zu erstellen, z. b. [Zeichen](https://go.microsoft.com/fwlink/?LinkId=159733)folgen <xref:System.Speech.Recognition.Choices> -,-und- <xref:System.Speech.Recognition.GrammarBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="09ae6-272">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="09ae6-273">Die expliziten Umwandlungs Operatoren in den Aufrufen der- <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> Methoden sind optional.</span><span class="sxs-lookup"><span data-stu-id="09ae6-273">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09ae6-274">Fügt der aktuellen Sequenz von Grammatikelementen eine Diktatgrammatik an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-274">Appends a grammar element to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-275">Verwenden Sie diese Methoden, um Grammatik Elemente an eine vorhandene anzufügen <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-275">Use these methods to append grammar elements to an existing <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="09ae6-276">Wenn Sie Grammatik Elemente erstellen, können Sie Sie an den vorhandenen Generator anfügen, um die Einschränkungen für eine sprach Erkennungs Grammatik progressiv zu entwickeln.</span><span class="sxs-lookup"><span data-stu-id="09ae6-276">As you create grammar elements, you can append them to the existing builder to progressively develop the constraints for a speech recognition grammar.</span></span> <span data-ttu-id="09ae6-277">Jedes Element wird am Ende der aktuellen Sequenz von Elementen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-277">Each element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="09ae6-278">Diese Methode verfügt über über Ladungen zum Anhängen <xref:System.Speech.Recognition.GrammarBuilder> von <xref:System.String> -,-,-, <xref:System.Speech.Recognition.Choices> <xref:System.Speech.Recognition.SemanticResultKey> -und- <xref:System.Speech.Recognition.SemanticResultValue> Objekten.</span><span class="sxs-lookup"><span data-stu-id="09ae6-278">This method has overloads for appending <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-279">Die Spracherkennung kann eine Ausnahme auslösen, wenn eine sprach Erkennungs Grammatik verwendet wird, die doppelte Semantik Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen enthält, die den Wert desselben semantischen Elements wiederholt ändern können.</span><span class="sxs-lookup"><span data-stu-id="09ae6-279">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="09ae6-280">Weitere Informationen zum entwickeln und Verwenden von sprach Erkennungs Grammatiken finden Sie unter [Spracherkennung](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)).</span><span class="sxs-lookup"><span data-stu-id="09ae6-280">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.Choices -&gt; unit" Usage="grammarBuilder.Append alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices"><span data-ttu-id="09ae6-281">Der Satz von Alternativen, die angefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-281">The set of alternatives to append.</span></span></param>
        <summary><span data-ttu-id="09ae6-282">Fügt einen Satz von Alternativen zur aktuellen Sequenz von Grammatikelementen an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-282">Appends a set of alternatives to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-283">`alternateChoices` wird am Ende der aktuellen Sequenz von Elementen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-283">`alternateChoices` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-284">Wenn Sie Objekte, <xref:System.Speech.Recognition.Choices> die-oder-Instanzen enthalten, <xref:System.Speech.Recognition.SemanticResultValue> an ein-Objekt anfügen <xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.GrammarBuilder> , stellen Sie sicher, dass Sie keine doppelten semantischen Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die-Eigenschaft eines-Objekts wiederholt ändern können <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.SemanticValue> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-284">When you append <xref:System.Speech.Recognition.Choices> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-285">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-285">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="09ae6-286">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik für Ausdrücke wie "calljames at Work" und "callanne on your Cell Phone" erstellt, wobei das Wort "Phone" optional ist.</span><span class="sxs-lookup"><span data-stu-id="09ae6-286">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="09ae6-287">Im Beispiel wird die Verwendung der- <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> Methode hervorgehoben.</span><span class="sxs-lookup"><span data-stu-id="09ae6-287">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder -&gt; unit" Usage="grammarBuilder.Append builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="09ae6-288">Das anzufügende Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-288">The grammar element to append.</span></span></param>
        <summary><span data-ttu-id="09ae6-289">Fügt der aktuellen Sequenz von Grammatikelementen eine Diktatgrammatik an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-289">Appends a grammar element to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-290">`builder` wird am Ende der aktuellen Sequenz von Grammatik Elementen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-290">`builder` is added to the end of the current sequence of grammar elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="09ae6-291">Wenn Sie Objekte, <xref:System.Speech.Recognition.GrammarBuilder> die-oder-Instanzen enthalten, <xref:System.Speech.Recognition.SemanticResultValue> an ein-Objekt anfügen <xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.GrammarBuilder> , stellen Sie sicher, dass Sie keine doppelten semantischen Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die-Eigenschaft eines-Objekts wiederholt ändern können <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.SemanticValue> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-291">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-292">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-292">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="09ae6-293">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik für Ausdrücke wie "calljames at Work" und "callanne on your Cell Phone" erstellt, wobei das Wort "Phone" optional ist.</span><span class="sxs-lookup"><span data-stu-id="09ae6-293">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="09ae6-294"><xref:System.Speech.Recognition.GrammarBuilder> -und- <xref:System.Speech.Recognition.Choices> Objekte werden verwendet, um die Grammatik zu konstruieren.</span><span class="sxs-lookup"><span data-stu-id="09ae6-294"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="09ae6-295">Im Beispiel wird die Verwendung der- <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> Methode hervorgehoben.</span><span class="sxs-lookup"><span data-stu-id="09ae6-295">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultKey -&gt; unit" Usage="grammarBuilder.Append key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="09ae6-296">Der semantische Schlüssel, der angefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="09ae6-296">The semantic key to append.</span></span></param>
        <summary><span data-ttu-id="09ae6-297">Fügt der aktuellen Sequenz von Grammatikelementen einen semantischen Schlüssel an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-297">Appends a semantic key to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-298">`key` wird am Ende der aktuellen Sequenz von Elementen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-298">`key` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-299">Wenn Sie-  <xref:System.Speech.Recognition.SemanticResultValue> oder- <xref:System.Speech.Recognition.SemanticResultKey> Instanzen an ein-Objekt anfügen <xref:System.Speech.Recognition.GrammarBuilder> , stellen Sie sicher, dass Sie keine doppelten semantischen Elemente mit dem gleichen Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die-Eigenschaft eines-Objekts wiederholt ändern können <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.SemanticValue> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-299">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-300">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-300">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="09ae6-301">Das folgende Beispiel ist Teil einer Konsolenanwendung, mit der die Ursprungs-und Zielstädte für einen Flug ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="09ae6-301">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="09ae6-302">Die Anwendung erkennt Ausdrücke, z. b. "Ich möchte von Miami nach Chicago fliegen."</span><span class="sxs-lookup"><span data-stu-id="09ae6-302">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="09ae6-303">Der Handler für das- <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> Ereignis verwendet das <xref:System.Speech.Recognition.SemanticResultKey> , um den in der <xref:System.Speech.Recognition.SemanticResultValue> für die Ursprungs-und Zielort angegebenen Flughafencode zu extrahieren.</span><span class="sxs-lookup"><span data-stu-id="09ae6-303">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create a Choices object and add  cities and airport codes  
        // using SemanticResultValue objects.  
        Choices cities = new Choices();  
        cities.Add(new SemanticResultValue("Chicago", "ORD"));  
        cities.Add(new SemanticResultValue("Boston", "BOS"));  
        cities.Add(new SemanticResultValue("Miami", "MIA"));  
        cities.Add(new SemanticResultValue("Dallas", "DFW"));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultValue -&gt; unit" Usage="grammarBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="09ae6-304">Der anzufügende semantische Wert.</span><span class="sxs-lookup"><span data-stu-id="09ae6-304">The semantic value to append.</span></span></param>
        <summary><span data-ttu-id="09ae6-305">Fügt der aktuellen Sequenz von Grammatikelementen einen semantischen Schlüssel an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-305">Appends a semantic value to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-306">`value` wird am Ende der aktuellen Sequenz von Elementen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-306">`value` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-307">Wenn Sie-  <xref:System.Speech.Recognition.SemanticResultValue> oder- <xref:System.Speech.Recognition.SemanticResultKey> Instanzen an ein-Objekt anfügen <xref:System.Speech.Recognition.GrammarBuilder> , stellen Sie sicher, dass Sie keine doppelten semantischen Elemente mit dem gleichen Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die-Eigenschaft eines-Objekts wiederholt ändern können <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.SemanticValue> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-307">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-308">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-308">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="09ae6-309">Das folgende Beispiel ist Teil einer Konsolenanwendung, mit der die Ursprungs-und Zielstädte für einen Flug ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="09ae6-309">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="09ae6-310">Die Anwendung erkennt Ausdrücke, z. b. "Ich möchte von Miami nach Chicago fliegen."</span><span class="sxs-lookup"><span data-stu-id="09ae6-310">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="09ae6-311">Der Handler für das- <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> Ereignis verwendet das <xref:System.Speech.Recognition.SemanticResultKey> , um den in der <xref:System.Speech.Recognition.SemanticResultValue> für die Ursprungs-und Zielort angegebenen Flughafencode zu extrahieren.</span><span class="sxs-lookup"><span data-stu-id="09ae6-311">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create GrammarBuilder objects and append SemanticResultValue objects   
        // that contain cities and airport codes.  
  
        GrammarBuilder chicago = new GrammarBuilder();  
        chicago.Append(new SemanticResultValue("Chicago", "ORD"));  
  
        GrammarBuilder boston = new GrammarBuilder();  
        boston.Append(new SemanticResultValue("Boston", "BOS"));  
  
        GrammarBuilder miami = new GrammarBuilder();  
        miami.Append(new SemanticResultValue("Miami", "MIA"));  
  
        GrammarBuilder dallas = new GrammarBuilder();  
        dallas.Append(new SemanticResultValue("Dallas", "DFW"));  
  
        // Create a Choices object and add the cities using implicit conversion from   
        // SemanticResultValue to GrammarBuilder.  
        Choices cities = new Choices();  
        cities.Add(new Choices(new GrammarBuilder[] { chicago, boston, miami, dallas }));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; unit" Usage="grammarBuilder.Append phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="09ae6-312">Die anzufügende Wortsequenz.</span><span class="sxs-lookup"><span data-stu-id="09ae6-312">The sequence of words to append.</span></span></param>
        <summary><span data-ttu-id="09ae6-313">Fügt der aktuellen Sequenz von Grammatikelementen einen Ausdruck an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-313">Appends a phrase to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-314">`phrase` wird am Ende der aktuellen Sequenz von Elementen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-314">`phrase` is added to the end of the current sequence of elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="member this.Append : string * System.Speech.Recognition.SubsetMatchingMode -&gt; unit" Usage="grammarBuilder.Append (phrase, subsetMatchingCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="09ae6-315">Die anzufügende Wortsequenz.</span><span class="sxs-lookup"><span data-stu-id="09ae6-315">The sequence of words to append.</span></span></param>
        <param name="subsetMatchingCriteria"><span data-ttu-id="09ae6-316">Der entsprechende Modus, den die Grammatik verwendet, um den Ausdruck zu erkennen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-316">The matching mode the grammar uses to recognize the phrase.</span></span></param>
        <summary><span data-ttu-id="09ae6-317">Fügt der aktuellen Sequenz von Grammatikelementen ein Element für eine Teilmenge eines Ausdrucks an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-317">Appends an element for a subset of a phrase to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-318">Das untergeordnete Element wird am Ende der aktuellen Sequenz von Elementen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-318">The subset element is added to the end of the current sequence of elements.</span></span> <span data-ttu-id="09ae6-319">Weitere Informationen zum Erstellen einer sprach Erkennungs Grammatik mithilfe von Zeichen folgen finden Sie unter Verwenden von Zeichen folgen [zum Erstellen einer grammatigrammgrammatik](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="09ae6-319">For more information about building a speech recognition grammar using strings, see [Using Strings to Create a GrammarBuilder Grammar](https://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
 <span data-ttu-id="09ae6-320">Ausführliche Informationen zur Verwendung von untergeordneten Vergleichs Modi finden Sie unter <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-320">For detailed information on the use of subset matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-321">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik für jeden <xref:System.Speech.Recognition.SubsetMatchingMode> Wert erstellt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-321">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value.</span></span> <span data-ttu-id="09ae6-322">Die generierte Grammatik erkennt z. b. `OrderedSubset` die Ausdrücke "3 4 5" und "1 3 5", und die Grammatik `Subsequence` erkennt den Ausdruck "3 4 5", aber nicht den Ausdruck "1 3 5".</span><span class="sxs-lookup"><span data-stu-id="09ae6-322">For example, the generated grammar `OrderedSubset` recognizes the phrases, "three four five" and "one three five", and the grammar `Subsequence` recognizes the phrase "three four five", but not the phrase, "one three five".</span></span>  
  
```csharp  
  
private Grammar[] CreateSubsetMatchTest()  
{  
  List<Grammar> grammars = new List<Grammar>(4);  
  
  string phrase = "one two three four five six";  
  foreach (SubsetMatchingMode mode in  
    Enum.GetValues(typeof(SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder();  
    gb.Append(phrase, mode);  
  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammars.Add(grammar);  
  }  
  
  return grammars.ToArray();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder * int * int -&gt; unit" Usage="grammarBuilder.Append (builder, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="09ae6-323">Das wiederholte anzufügende Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-323">The repeated grammar element to append.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="09ae6-324">Die minimale Wiederholungsrate für eine Übereinstimmung der Eingabe mit dem durch <paramref name="builder" /> definierten Element, nach der eine Übereinstimmung anerkannt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-324">The minimum number of times that input matching the element defined by <paramref name="builder" /> must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="09ae6-325">Die maximale Wiederholungsrate für eine Übereinstimmung der Eingabe mit dem durch <paramref name="builder" /> definierten Element, nach der eine Übereinstimmung anerkannt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-325">The maximum number of times that input matching the element defined by <paramref name="builder" /> can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="09ae6-326">Fügt der aktuellen Sequenz von Grammatikelementen eine wiederholte Grammatik an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-326">Appends a repeated grammar element to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-327">Der Wert von `minRepeat` muss größer als oder gleich 0 und kleiner als oder gleich dem Wert von sein `maxRepeat` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-327">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-328">Wenn Sie Objekte, <xref:System.Speech.Recognition.GrammarBuilder> die-oder-Instanzen enthalten, <xref:System.Speech.Recognition.SemanticResultValue> an ein-Objekt anfügen <xref:System.Speech.Recognition.SemanticResultKey> <xref:System.Speech.Recognition.GrammarBuilder> , stellen Sie sicher, dass Sie keine doppelten semantischen Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die-Eigenschaft eines-Objekts wiederholt ändern können <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.SemanticValue> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-328">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-329">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-329">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="09ae6-330">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik für Ausdrücke wie "calljames at Work" und "callanne on your Cell Phone" erstellt, wobei das Wort "Phone" optional ist.</span><span class="sxs-lookup"><span data-stu-id="09ae6-330">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="09ae6-331"><xref:System.Speech.Recognition.GrammarBuilder> -und- <xref:System.Speech.Recognition.Choices> Objekte werden verwendet, um die Grammatik zu konstruieren.</span><span class="sxs-lookup"><span data-stu-id="09ae6-331"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="09ae6-332">Im Beispiel wird die Verwendung der- <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> Methode hervorgehoben.</span><span class="sxs-lookup"><span data-stu-id="09ae6-332">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; unit" Usage="grammarBuilder.Append (phrase, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="09ae6-333">Die wiederholte anzufügende Wortsequenz.</span><span class="sxs-lookup"><span data-stu-id="09ae6-333">The repeated sequence of words to append.</span></span></param>
        <param name="minRepeat"><span data-ttu-id="09ae6-334">Die minimale Wiederholungsrate für eine Übereinstimmung der Eingabe mit <paramref name="phrase" />, nach der eine Übereinstimmung anerkannt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-334">The minimum number of times that input matching <paramref name="phrase" /> must occur to constitute a match.</span></span></param>
        <param name="maxRepeat"><span data-ttu-id="09ae6-335">Die maximale Wiederholungsrate für eine Übereinstimmung der Eingabe mit <paramref name="phrase" />, nach der eine Übereinstimmung anerkannt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-335">The maximum number of times that input matching <paramref name="phrase" /> can occur to constitute a match.</span></span></param>
        <summary><span data-ttu-id="09ae6-336">Fügt der aktuellen Sequenz von Grammatikelementen einen wiederholten Ausdruck an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-336">Appends a repeated phrase to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-337">Der Wert von `minRepeat` muss größer als oder gleich 0 und kleiner als oder gleich dem Wert von sein `maxRepeat` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-337">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-338">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik für Ausdrücke wie "calljames at Work" und "callanne on your Cell Phone" erstellt, wobei das Wort "Phone" optional ist.</span><span class="sxs-lookup"><span data-stu-id="09ae6-338">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="09ae6-339"><xref:System.Speech.Recognition.GrammarBuilder> -und- <xref:System.Speech.Recognition.Choices> Objekte werden verwendet, um die Grammatik zu konstruieren.</span><span class="sxs-lookup"><span data-stu-id="09ae6-339"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="09ae6-340">Im Beispiel wird die Verwendung der- <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> Methode hervorgehoben.</span><span class="sxs-lookup"><span data-stu-id="09ae6-340">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendDictation">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09ae6-341">Fügt der aktuellen Sequenz von Grammatikelementen eine Diktatgrammatik an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-341">Appends a dictation grammar to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-342">Die- <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> Methoden ermöglichen es Ihnen, eine Diktat Grammatik als Regel an einen anzufügen <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-342">The <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> methods allow you to append a dictation grammar as a rule to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="09ae6-343">Weitere Informationen zu Diktat Grammatiken finden Sie unter <xref:System.Speech.Recognition.DictationGrammar> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-343">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation();" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : unit -&gt; unit" Usage="grammarBuilder.AppendDictation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09ae6-344">Fügt der aktuellen Sequenz von Grammatikelementen eine Standarddiktatgrammatik an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-344">Appends the default dictation grammar to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-345">Weitere Informationen zu Diktat Grammatiken finden Sie unter <xref:System.Speech.Recognition.DictationGrammar> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-345">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-346">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, die Diktat enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-346">The following example creates a speech recognition grammar that incorporates dictation.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation();  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation (category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation(System::String ^ category);" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : string -&gt; unit" Usage="grammarBuilder.AppendDictation category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category"><span data-ttu-id="09ae6-347">Die Kategorie der anzufügenden Diktatgrammatik.</span><span class="sxs-lookup"><span data-stu-id="09ae6-347">The category of the dictation grammar to append.</span></span></param>
        <summary><span data-ttu-id="09ae6-348">Fügt eine angegebene Diktatgrammatik der aktuellen Sequenz von Grammatikelementen an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-348">Appends the specified dictation grammar to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-349">Um die Rechtschreibprüfung zu verwenden, legen `category` Sie auf fest `spelling` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-349">To use the spelling dictation grammar, set `category` to `spelling`.</span></span>  
  
 <span data-ttu-id="09ae6-350">Weitere Informationen zu Diktat Grammatiken finden Sie unter <xref:System.Speech.Recognition.DictationGrammar> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-350">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-351">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, die die Grammatikregeln für Rechtschreibprüfung enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-351">The following example creates a speech recognition grammar that incorporates the spelling dictation grammar rules.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation("spelling");  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendRuleReference">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09ae6-352">Fügt der aktuellen Sequenz von Grammatikelementen eine Grammatikdatei oder eine Grammatikregel an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-352">Appends a grammar file or a grammar rule to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-353">Die- <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> Methoden können eine Grammatik Datei oder eine Grammatik Regel aus einer Datei anfügen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-353">The <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> methods can append a grammar file or a grammar rule from a file.</span></span> <span data-ttu-id="09ae6-354">Diese Methoden ermöglichen Anwendungen die Verwendung von vorab bereitgestellten oder öffentlich verfügbaren Grammatikregeln.</span><span class="sxs-lookup"><span data-stu-id="09ae6-354">These methods allow applications to make use of pre-deployed or publicly available grammar rules.</span></span> <span data-ttu-id="09ae6-355">Die Anwendung muss Lesezugriff auf den Speicherort der angegebenen Grammatik Dateien haben.</span><span class="sxs-lookup"><span data-stu-id="09ae6-355">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="09ae6-356">Diese Methoden können eine sprach Erkennungs Grammatik aus den folgenden Formaten lesen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-356">These methods can read a speech recognition grammar from the following formats.</span></span>  
  
-   <span data-ttu-id="09ae6-357">XML-Format Dateien, die der W3C- [Spezifikation für die sprach Erkennungs Grammatik (SRGS), Version 1,0](https://go.microsoft.com/fwlink/?LinkId=201761) , entsprechen</span><span class="sxs-lookup"><span data-stu-id="09ae6-357">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="09ae6-358">Binärdateien, die dem Binär Format der Microsoft-sprach Erkennungs Grammatik (. cfg-Dateierweiterung) entsprechen</span><span class="sxs-lookup"><span data-stu-id="09ae6-358">Binary files that conform to the Microsoft Speech Recognition Grammar Binary Format (.cfg file extension)</span></span>  
  
 <span data-ttu-id="09ae6-359">Das Kompilieren einer SRGS-Grammatik Datei im XML-Format in eine binäre Grammatik Datei mit der Erweiterung ". cfg" kann die von Such Vorgängen verbrauchte Zeit verringern, insbesondere dann, wenn die Grammatik eine Erkennung einer großen Anzahl von Wörtern und Ausdrücken erfordert.</span><span class="sxs-lookup"><span data-stu-id="09ae6-359">Compiling an XML-format SRGS grammar file to a binary grammar file with the .cfg extension can reduce the time consumed by searches for a match, especially if the grammar requires recognition of a large number of words and phrases.</span></span> <span data-ttu-id="09ae6-360">Informationen zum Kompilieren von SRGS-Grammatiken in das cfg-Binärformat finden Sie unter <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-360">For information about compiling SRGS grammars to the CFG binary format, see <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string -&gt; unit" Usage="grammarBuilder.AppendRuleReference path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="09ae6-361">Der Pfad oder der URI (Universal Resource Identifier) der Datei, die eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-361">The path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span></span></param>
        <summary><span data-ttu-id="09ae6-362">Fügt der aktuellen Sequenz von Grammatikelementen eine Grammatikdefinitionsdatei an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-362">Appends a grammar definition file to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-363">Der URI, der vom-Argument bereitgestellt wird, ist `path` möglicherweise local oder Remote.</span><span class="sxs-lookup"><span data-stu-id="09ae6-363">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="09ae6-364">Die Anwendung muss Lesezugriff auf den Speicherort der angegebenen Grammatik Dateien haben.</span><span class="sxs-lookup"><span data-stu-id="09ae6-364">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="09ae6-365">Eine SRGS-Darstellung (W3C Speech Recognition Grammar Specification) kann eine Stamm Regel definieren.</span><span class="sxs-lookup"><span data-stu-id="09ae6-365">A W3C Speech Recognition Grammar Specification (SRGS) representation can define a root rule.</span></span> <span data-ttu-id="09ae6-366">Diese Methode fügt die Grammatik, beginnend mit ihrer Stamm Regel, an die aktuelle Sequenz von Grammatik Elementen an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-366">This method appends the grammar, beginning with its root rule, to the current sequence of grammar elements.</span></span> <span data-ttu-id="09ae6-367">Verwenden Sie die-Methode, um eine bestimmte Grammatik Regel anzufügen <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-367">To append a specific grammar rule, use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-368">Im folgenden c#-Beispiel wird eine sprach Erkennungs Grammatik erstellt, die die Regel mit dem Namen `Cities` in einer lokalen SRGS-Datei "Cities. grxml" verwendet.</span><span class="sxs-lookup"><span data-stu-id="09ae6-368">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="09ae6-369">Der Inhalt der Datei Cities. grxml wird unter dem c#-Codebeispiel angezeigt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-369">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar1()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.AppendRuleReference("file://c:/temp/cities.grxml");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 1";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-16" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String, rule As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path, System::String ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string * string -&gt; unit" Usage="grammarBuilder.AppendRuleReference (path, rule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path"><span data-ttu-id="09ae6-370">Der Dateipfad oder der URI (Universal Resource Identifier) der Datei, der eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-370">The file path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span></span></param>
        <param name="rule"><span data-ttu-id="09ae6-371">Der Bezeichner der Regel, die anzuwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikdatei anzuwenden.</span><span class="sxs-lookup"><span data-stu-id="09ae6-371">The identifier of the rule to append, or <see langword="null" /> to append the default root rule of the grammar file.</span></span></param>
        <summary><span data-ttu-id="09ae6-372">Fügt die angegebene Regel einer Grammatikdefinitionsdatei der aktuellen Sequenz von Grammatikelementen an.</span><span class="sxs-lookup"><span data-stu-id="09ae6-372">Appends the specified rule of a grammar definition file to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-373">Der URI, der vom-Argument bereitgestellt wird, ist `path` möglicherweise local oder Remote.</span><span class="sxs-lookup"><span data-stu-id="09ae6-373">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="09ae6-374">Die Anwendung muss Lesezugriff auf den Speicherort der angegebenen Grammatik Dateien haben.</span><span class="sxs-lookup"><span data-stu-id="09ae6-374">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="09ae6-375">Mithilfe der-Methode können Sie <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> eine Grammatik Datei mit ihrer Stamm Regel anfügen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-375">You can use the use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method to append a grammar file beginning with its root rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-376">Im folgenden c#-Beispiel wird eine sprach Erkennungs Grammatik erstellt, die die Regel mit dem Namen `Cities` in einer lokalen SRGS-Datei "Cities. grxml" verwendet.</span><span class="sxs-lookup"><span data-stu-id="09ae6-376">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="09ae6-377">Der Inhalt der Datei Cities. grxml wird unter dem c#-Codebeispiel angezeigt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-377">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar2()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.Append("Does");  
  builder.AppendRuleReference(@"c:\temp\cities.grxml", "Cities");  
  builder.Append("have a shuttle");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendWildcard">
      <MemberSignature Language="C#" Value="public void AppendWildcard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendWildcard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendWildcard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendWildcard();" />
      <MemberSignature Language="F#" Value="member this.AppendWildcard : unit -&gt; unit" Usage="grammarBuilder.AppendWildcard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="09ae6-378">Fügt ein Anerkennungsgrammatikelement an, das jeder Eingabe in die aktuelle Sequenz von Grammatikelementen entspricht.</span><span class="sxs-lookup"><span data-stu-id="09ae6-378">Appends a recognition grammar element that matches any input to the current sequence of grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-379">Das Platzhalter Element wird am Ende der aktuellen Sequenz von Elementen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-379">The wildcard element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="09ae6-380">Das Platzhalter Element stimmt mit jedem gesprochenen Wort überein.</span><span class="sxs-lookup"><span data-stu-id="09ae6-380">The wildcard element matches any spoken word.</span></span> <span data-ttu-id="09ae6-381">Es entspricht nicht dem Hintergrundrauschen oder-Ruhe Vorgang.</span><span class="sxs-lookup"><span data-stu-id="09ae6-381">It does not match background noise or silence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-382">Im folgenden Beispiel wird eine Grammatik erstellt, die die Kenn Wort Eingabe als Platzhalter akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="09ae6-382">The following example creates a grammar that accepts password input as a wildcard.</span></span> <span data-ttu-id="09ae6-383">Im Beispiel wird ein- <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> Ereignishandler an die Grammatik angefügt, die die Kenn Wort Eingabe überprüft.</span><span class="sxs-lookup"><span data-stu-id="09ae6-383">The example attaches a <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event handler to the grammar that validates the password input.</span></span>  
  
```csharp  
private Grammar CreatePasswordGrammar()  
{  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey passwordKey =  
    new SemanticResultKey("Password", wildcardBuilder);  
  
  GrammarBuilder passwordBuilder =  
    new GrammarBuilder("My Password is");  
  passwordBuilder.Append(passwordKey);  
  
  Grammar passwordGrammar = new Grammar(passwordBuilder);  
  passwordGrammar.Name = "Password input";  
  
  passwordGrammar.SpeechRecognized +=  
    new EventHandler<SpeechRecognizedEventArgs>(  
      PasswordInputHandler);  
  
  return passwordGrammar;  
}  
  
// Handle the SpeechRecognized event for the password grammar.  
private void PasswordInputHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  RecognitionResult result = e.Result;  
  SemanticValue semantics = e.Result.Semantics;  
  
  if (semantics.ContainsKey("Password"))  
  {  
    RecognizedAudio passwordAudio =  
      result.GetAudioForWordRange(  
        result.Words[3], result.Words[result.Words.Count - 1]);  
  
    if (IsValidPassword(passwordAudio))  
    {  
      Console.WriteLine("Password accepted.");  
  
      // Add code to handle a valid password here.  
    }  
    else  
    {  
      Console.WriteLine("Invalid password.");  
  
      // Add code to handle an invalid password here.  
    }  
  }  
}  
  
// Validate the password input.   
private bool IsValidPassword(RecognizedAudio passwordAudio)  
{  
  Console.WriteLine("Validating password.");  
  
  // Add password validation code here.  
  
  return false;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09ae6-384">Ruft die Kultur der Spracherkennungsgrammatik auf oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="09ae6-384">Gets or sets the culture of the speech recognition grammar.</span></span></summary>
        <value><span data-ttu-id="09ae6-385">Die Kultur des <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="09ae6-385">The culture of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span> <span data-ttu-id="09ae6-386">Der Standard ist die <see cref="P:System.Threading.Thread.CurrentUICulture" />-Eigenschaft des ausführenden Threads.</span><span class="sxs-lookup"><span data-stu-id="09ae6-386">The default is the executing thread's <see cref="P:System.Threading.Thread.CurrentUICulture" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-387">Der- <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor erstellt ein- <xref:System.Speech.Recognition.Grammar> Objekt, das von einer Spracherkennung der entsprechenden Kultur verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-387">The <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor creates a <xref:System.Speech.Recognition.Grammar> object that can be used by a speech recognizer of the corresponding culture.</span></span> <span data-ttu-id="09ae6-388">Nur die- <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> Eigenschaft der <xref:System.Speech.Recognition.GrammarBuilder> , die als Parameter für den Grammatik-Konstruktor bereitgestellt wird, wird verwendet, um die Kultur der resultierenden sprach Erkennungs Grammatik festzulegen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-388">Only the <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> property of the <xref:System.Speech.Recognition.GrammarBuilder> that is provided as the parameter to the Grammar constructor is used to set the culture of the resulting speech recognition grammar.</span></span>  
  
 <span data-ttu-id="09ae6-389">Microsoft Windows und die System. Speech-API akzeptieren alle gültigen sprach Ländercodes.</span><span class="sxs-lookup"><span data-stu-id="09ae6-389">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="09ae6-390">Um die Spracherkennung mithilfe der in der-Eigenschaft angegebenen Sprache durchzuführen `Culture` , muss eine sprach Erkennungs-Engine installiert werden, die diesen Sprachen-Ländercode unterstützt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-390">To perform speech recognition using the language specified in the `Culture` property, a speech recognition engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="09ae6-391">Die Spracherkennungs-Engines, die mit Microsoft Windows 7 ausgeliefert wurden, funktionieren mit den folgenden Programmiersprachen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-391">The speech recognition engines that shipped with Microsoft Windows 7 work with the following language-country codes.</span></span>  
  
-   <span data-ttu-id="09ae6-392">en-GB.</span><span class="sxs-lookup"><span data-stu-id="09ae6-392">en-GB.</span></span> <span data-ttu-id="09ae6-393">Walisisch (Großbritannien)</span><span class="sxs-lookup"><span data-stu-id="09ae6-393">English (United Kingdom)</span></span>  
  
-   <span data-ttu-id="09ae6-394">en-US.</span><span class="sxs-lookup"><span data-stu-id="09ae6-394">en-US.</span></span> <span data-ttu-id="09ae6-395">Englisch (USA)</span><span class="sxs-lookup"><span data-stu-id="09ae6-395">English (United States)</span></span>  
  
-   <span data-ttu-id="09ae6-396">de-de.</span><span class="sxs-lookup"><span data-stu-id="09ae6-396">de-DE.</span></span> <span data-ttu-id="09ae6-397">Deutsch (Deutschland)</span><span class="sxs-lookup"><span data-stu-id="09ae6-397">German (Germany)</span></span>  
  
-   <span data-ttu-id="09ae6-398">es-es.</span><span class="sxs-lookup"><span data-stu-id="09ae6-398">es-ES.</span></span> <span data-ttu-id="09ae6-399">Spanisch (Spanien)</span><span class="sxs-lookup"><span data-stu-id="09ae6-399">Spanish (Spain)</span></span>  
  
-   <span data-ttu-id="09ae6-400">fr-fr.</span><span class="sxs-lookup"><span data-stu-id="09ae6-400">fr-FR.</span></span> <span data-ttu-id="09ae6-401">Französisch (Frankreich)</span><span class="sxs-lookup"><span data-stu-id="09ae6-401">French (France)</span></span>  
  
-   <span data-ttu-id="09ae6-402">ja-JP.</span><span class="sxs-lookup"><span data-stu-id="09ae6-402">ja-JP.</span></span> <span data-ttu-id="09ae6-403">Japanisch (Japan)</span><span class="sxs-lookup"><span data-stu-id="09ae6-403">Japanese (Japan)</span></span>  
  
-   <span data-ttu-id="09ae6-404">zh-cn.</span><span class="sxs-lookup"><span data-stu-id="09ae6-404">zh-CN.</span></span> <span data-ttu-id="09ae6-405">Chinesisch (China)</span><span class="sxs-lookup"><span data-stu-id="09ae6-405">Chinese (China)</span></span>  
  
-   <span data-ttu-id="09ae6-406">zh-tw.</span><span class="sxs-lookup"><span data-stu-id="09ae6-406">zh-TW.</span></span> <span data-ttu-id="09ae6-407">Chinesisch (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="09ae6-407">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="09ae6-408">Sprachcodes mit zwei Buchstaben, z. b. "en", "fr" oder "es", sind ebenfalls zulässig.</span><span class="sxs-lookup"><span data-stu-id="09ae6-408">Two-letter language codes such as "en", "fr", or "es" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="09ae6-409">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, um eine Pizza mit bis zu vier Unterordnungen zu bestellen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-409">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="09ae6-410">Dadurch wird die <xref:System.Speech.Recognition.GrammarBuilder> Kultur des Objekts ausdrücklich auf Englisch (USA) festgelegt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-410">It specifically sets the <xref:System.Speech.Recognition.GrammarBuilder> object's culture to English (United States).</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="DebugShowPhrases">
      <MemberSignature Language="C#" Value="public string DebugShowPhrases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugShowPhrases" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugShowPhrases As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DebugShowPhrases { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DebugShowPhrases : string" Usage="System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="09ae6-411">Ruft eine Zeichenfolge ab, die den Inhalt und die Struktur der Grammatik angezeigt, die in <see cref="T:System.Speech.Recognition.GrammarBuilder" /> enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="09ae6-411">Gets a string that shows the contents and structure of the grammar contained by the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></summary>
        <value><span data-ttu-id="09ae6-412">Der aktuelle Inhalt und die aktuelle Struktur von <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span><span class="sxs-lookup"><span data-stu-id="09ae6-412">The current content and structure of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="09ae6-413">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, um eine Pizza mit bis zu vier Unterordnungen zu bestellen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-413">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="09ae6-414"><xref:System.Speech.Recognition.GrammarBuilder>Vor dem Erstellen der Grammatik wird der Status von in die Konsole geschrieben.</span><span class="sxs-lookup"><span data-stu-id="09ae6-414">It writes the status of the <xref:System.Speech.Recognition.GrammarBuilder> to the console before creating the grammar.</span></span> <span data-ttu-id="09ae6-415">Mit dieser Methode wird die folgende Ausgabe generiert:</span><span class="sxs-lookup"><span data-stu-id="09ae6-415">This method generates the following output:</span></span>  
  
-   `GrammarBuilder status: I would like a [cheese,mushroom,tomato,onion,anchovy,chic ken,pepperoni] and [cheese,mushroom,tomato,onion,anchovy,chicken,pepperoni] pizza`  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Write the contents and structure of the GrammarBuilder to the console.  
  Console.WriteLine("Grammar content and structure: {0}", gb.DebugShowPhrases);  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361640(v%3doffice.14)"><span data-ttu-id="09ae6-416">Erstellen von Grammatiken mithilfe von grammatimarbuilder</span><span class="sxs-lookup"><span data-stu-id="09ae6-416">Create Grammars Using GrammarBuilder</span></span></related>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09ae6-417">Erstellt einen neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der einer Sequenz von zwei Grammatikelementen entspricht.</span><span class="sxs-lookup"><span data-stu-id="09ae6-417">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that corresponds to a sequence of two grammar elements.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-418">Die Reihenfolge der Operanden bestimmt die Reihenfolge der Elemente in der neuen <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-418">The order of the operands determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-419">Vorsicht wird empfohlen, wenn-oder-Objekte kombiniert werden <xref:System.Speech.Recognition.Choices> <xref:System.Speech.Recognition.GrammarBuilder> , die-oder- <xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.SemanticResultKey> Instanzen mit anderen Grammatik Elementen enthalten.</span><span class="sxs-lookup"><span data-stu-id="09ae6-419">Caution is recommended when combining <xref:System.Speech.Recognition.Choices> or <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements.</span></span> <span data-ttu-id="09ae6-420">Die Spracherkennung kann eine Ausnahme auslösen, wenn eine sprach Erkennungs Grammatik verwendet wird, die doppelte Semantik Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen enthält, die den Wert desselben semantischen Elements wiederholt ändern können.</span><span class="sxs-lookup"><span data-stu-id="09ae6-420">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="09ae6-421">Weitere Informationen zum entwickeln und Verwenden von sprach Erkennungs Grammatiken finden Sie unter [Spracherkennung](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)).</span><span class="sxs-lookup"><span data-stu-id="09ae6-421">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (choices As Choices, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices"><span data-ttu-id="09ae6-422">Das erste Grammatikelement, das einen Satz von Alternativen darstellt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-422">The first grammar element, which represents a set of alternatives.</span></span></param>
        <param name="builder"><span data-ttu-id="09ae6-423">Das zweite Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-423">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="09ae6-424">Erstellt einen neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der ein <see cref="T:System.Speech.Recognition.Choices" />-Objekt gefolgt von einem <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-424">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="09ae6-425">Gibt einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="choices" />-Parameters zurück, gefolgt vom Parameter <paramref name="builder" />.</span><span class="sxs-lookup"><span data-stu-id="09ae6-425">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> parameter followed by the <paramref name="builder" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-426"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt Konvertierungen aus den folgenden Klassen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-426"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="09ae6-427">Diese Methode akzeptiert die oben aufgeführten Objekte für den- `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09ae6-427">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="09ae6-428">Weitere Informationen finden Sie unter <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="09ae6-428">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-429">Wenn Sie <xref:System.Speech.Recognition.Choices> -und-Objekte kombinieren <xref:System.Speech.Recognition.GrammarBuilder> , die- <xref:System.Speech.Recognition.SemanticResultValue> oder-Instanzen enthalten <xref:System.Speech.Recognition.SemanticResultKey> , stellen Sie sicher, dass Sie keine doppelten semantischen Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die- <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft eines-Objekts wiederholt ändern könnten <xref:System.Speech.Recognition.SemanticValue></span><span class="sxs-lookup"><span data-stu-id="09ae6-429">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-430">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-430">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="09ae6-431">Die äquivalente Methode für diesen Operator ist. <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="09ae6-431">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder As GrammarBuilder, choices As Choices) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="09ae6-432">Das erste Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-432">The first grammar element.</span></span></param>
        <param name="choices"><span data-ttu-id="09ae6-433">Das zweite Grammatikelement, das einen Satz von alternativen Elementen darstellt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-433">The second grammar element, which represents a set of alternative elements.</span></span></param>
        <summary><span data-ttu-id="09ae6-434">Erstellt ein neues <see cref="T:System.Speech.Recognition.GrammarBuilder" />, das einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> gefolgt von einem <see cref="T:System.Speech.Recognition.Choices" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-434">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a <see cref="T:System.Speech.Recognition.Choices" />.</span></span></summary>
        <returns><span data-ttu-id="09ae6-435">Gibt einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="builder" />-Parameters zurück, gefolgt vom Parameter <paramref name="choices" />.</span><span class="sxs-lookup"><span data-stu-id="09ae6-435">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="choices" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-436"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt Konvertierungen aus den folgenden Klassen:</span><span class="sxs-lookup"><span data-stu-id="09ae6-436"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="09ae6-437">Diese Methode akzeptiert die oben aufgeführten Objekte für den- `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09ae6-437">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="09ae6-438">Weitere Informationen finden Sie unter <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="09ae6-438">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-439">Wenn Sie <xref:System.Speech.Recognition.Choices> -und-Objekte kombinieren <xref:System.Speech.Recognition.GrammarBuilder> , die- <xref:System.Speech.Recognition.SemanticResultValue> oder-Instanzen enthalten <xref:System.Speech.Recognition.SemanticResultKey> , stellen Sie sicher, dass Sie keine doppelten semantischen Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die- <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft eines-Objekts wiederholt ändern könnten <xref:System.Speech.Recognition.SemanticValue></span><span class="sxs-lookup"><span data-stu-id="09ae6-439">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-440">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-440">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="09ae6-441">Die äquivalente Methode für diesen Operator ist. <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="09ae6-441">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="09ae6-442">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, mit der die beiden Ausdrücke "Hintergrund *Farbe*festlegen" und " *Hintergrundfarbe festlegen" erkannt*werden können, wobei *Farbe* aus einer Reihe von Farben ausgewählt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-442">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="09ae6-443">Verschiedene Typen werden verwendet, um die endgültige Grammatik zu erstellen, z. b. [Zeichen](https://go.microsoft.com/fwlink/?LinkId=159733)folgen <xref:System.Speech.Recognition.Choices> -,-und- <xref:System.Speech.Recognition.GrammarBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="09ae6-443">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder1 + builder2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1"><span data-ttu-id="09ae6-444">Das erste Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-444">The first grammar element.</span></span></param>
        <param name="builder2"><span data-ttu-id="09ae6-445">Das zweite Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-445">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="09ae6-446">Erstellt einen neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der eine Sequenz aus zwei <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekten enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-446">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span></span></summary>
        <returns><span data-ttu-id="09ae6-447">Gibt einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="builder1" />-Parameters zurück, gefolgt vom Parameter <paramref name="builder2" />.</span><span class="sxs-lookup"><span data-stu-id="09ae6-447">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> parameter followed by the <paramref name="builder2" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-448"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt Konvertierungen aus den folgenden Klassen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-448"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="09ae6-449">Diese Methode akzeptiert die oben aufgeführten Objekte für den `builder1` -Parameter und den- `builder2` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09ae6-449">This method accepts the objects listed above for the `builder1` and `builder2` parameters.</span></span> <span data-ttu-id="09ae6-450">Weitere Informationen finden Sie unter <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="09ae6-450">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="09ae6-451">Wenn Sie Objekte kombinieren, <xref:System.Speech.Recognition.GrammarBuilder> die- <xref:System.Speech.Recognition.SemanticResultValue> oder-Instanzen enthalten <xref:System.Speech.Recognition.SemanticResultKey> , stellen Sie sicher, dass Sie keine doppelten semantischen Elemente mit demselben Schlüsselnamen oder mehreren semantischen Elementen erstellen, die die-Eigenschaft eines-Objekts wiederholt ändern können <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.SemanticValue> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-451">When you combine <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="09ae6-452">Die Spracherkennung kann eine Ausnahme auslösen, wenn Sie auf diese Umstände stößt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-452">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="09ae6-453">Die äquivalente Methode für diesen Operator ist. <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="09ae6-453">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="09ae6-454">Das erste Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-454">The first grammar element.</span></span></param>
        <param name="phrase"><span data-ttu-id="09ae6-455">Das zweite Grammatikelement, das eine Sequenz von Wörtern darstellt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-455">The second grammar element, which represents a sequence of words.</span></span></param>
        <summary><span data-ttu-id="09ae6-456">Erstellt ein neues <see cref="T:System.Speech.Recognition.GrammarBuilder" />, das einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> gefolgt von einem Bergriff enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-456">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a phrase.</span></span></summary>
        <returns><span data-ttu-id="09ae6-457">Gibt einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="builder" />-Parameters zurück, gefolgt vom Parameter <paramref name="phrase" />.</span><span class="sxs-lookup"><span data-stu-id="09ae6-457">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="phrase" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-458"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt Konvertierungen aus den folgenden Klassen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-458"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="09ae6-459">Diese Methode akzeptiert die oben aufgeführten Objekte für den- `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09ae6-459">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="09ae6-460">Weitere Informationen finden Sie unter <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="09ae6-460">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="09ae6-461">Die äquivalente Methode für diesen Operator ist. <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="09ae6-461">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="phrase + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="09ae6-462">Das erste Grammatikelement, das eine Sequenz von Wörtern darstellt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-462">The first grammar element, which represents a sequence of words.</span></span></param>
        <param name="builder"><span data-ttu-id="09ae6-463">Das zweite Grammatikelement.</span><span class="sxs-lookup"><span data-stu-id="09ae6-463">The second grammar element.</span></span></param>
        <summary><span data-ttu-id="09ae6-464">Erstellt ein neues <see cref="T:System.Speech.Recognition.GrammarBuilder" />, das einen Begriff gefolgt von einem <see cref="T:System.Speech.Recognition.GrammarBuilder" /> enthält.</span><span class="sxs-lookup"><span data-stu-id="09ae6-464">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></summary>
        <returns><span data-ttu-id="09ae6-465">Gibt einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="phrase" />-Parameters zurück, gefolgt vom Parameter <paramref name="builder" />.</span><span class="sxs-lookup"><span data-stu-id="09ae6-465">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> parameter followed by the <paramref name="builder" /> parameter.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-466"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt Konvertierungen aus den folgenden Klassen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-466"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="09ae6-467">Diese Methode akzeptiert die oben aufgeführten Objekte für den- `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="09ae6-467">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="09ae6-468">Weitere Informationen finden Sie unter <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="09ae6-468">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="09ae6-469">Die äquivalente Methode für diesen Operator ist. <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="09ae6-469">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="09ae6-470">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, mit der die beiden Ausdrücke "Hintergrund *Farbe*festlegen" und " *Hintergrundfarbe festlegen" erkannt*werden können, wobei *Farbe* aus einer Reihe von Farben ausgewählt wird.</span><span class="sxs-lookup"><span data-stu-id="09ae6-470">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="09ae6-471">Verschiedene Typen werden verwendet, um die endgültige Grammatik zu erstellen, z. b. [Zeichen](https://go.microsoft.com/fwlink/?LinkId=159733)folgen <xref:System.Speech.Recognition.Choices> -,-und- <xref:System.Speech.Recognition.GrammarBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="09ae6-471">Various types are used to build the final grammar, such as [String](https://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="09ae6-472">Konvertiert einen anderen Typ in ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-472">Converts another type to a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-473">Bei der impliziten Konvertierung wird eine neue Instanz von erstellt <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-473">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="09ae6-474">Sie können jede der folgenden Klassen in einen umwandeln <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-474">You can cast each of the following classes to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="09ae6-475">Jede der impliziten Umwandlungen entspricht dem Aufrufen des Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="09ae6-475">Each of the implicit casts is equivalent to calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (choices As Choices) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="choices"><span data-ttu-id="09ae6-476">Der Satz zum Alternativen, die konvertiert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="09ae6-476">The set of alternatives to convert.</span></span></param>
        <summary><span data-ttu-id="09ae6-477">Konvertiert ein <see cref="T:System.Speech.Recognition.Choices" />-Objekt in ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-477">Converts a <see cref="T:System.Speech.Recognition.Choices" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="09ae6-478">Das konvertierte <see cref="T:System.Speech.Recognition.Choices" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-478">The converted <see cref="T:System.Speech.Recognition.Choices" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-479">Bei der impliziten Konvertierung wird eine neue Instanz von erstellt <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-479">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="09ae6-480">Dieser Konvertierungs Operator entspricht dem Aufrufen <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> von und `choices` der Angabe von für den `alternateChoices` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-480">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `choices` for the `alternateChoices`.</span></span>  
  
 <span data-ttu-id="09ae6-481">Die äquivalente Methode für diesen Operator ist. <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="09ae6-481">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="09ae6-482">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, die eine Antwort auf die Frage "yes" oder "No" erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-482">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="09ae6-483">Der implizite Konvertierungs Operator wird bei der Erstellung eines-Objekts <xref:System.Speech.Recognition.SemanticResultValue> aus einem <xref:System.Speech.Recognition.Choices> -Objekt, bei der Erstellung eines- <xref:System.Speech.Recognition.Choices> Objekts aus zwei <xref:System.Speech.Recognition.SemanticResultValue> -Objekten und bei der Erstellung eines-Objekts <xref:System.Speech.Recognition.Grammar> aus einem-Objekt verwendet <xref:System.Speech.Recognition.SemanticResultKey> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-483">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultKey semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultKey semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticKey As SemanticResultKey) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultKey ^ semanticKey);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticKey" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="semanticKey"><span data-ttu-id="09ae6-484">Der zu konvertierende semantische Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="09ae6-484">The semantic key to convert.</span></span></param>
        <summary><span data-ttu-id="09ae6-485">Konvertiert ein <see cref="T:System.Speech.Recognition.SemanticResultKey" />-Objekt in ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-485">Converts a <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="09ae6-486">Das konvertierte <see cref="T:System.Speech.Recognition.SemanticResultKey" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-486">The converted <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-487">Bei der impliziten Konvertierung wird eine neue Instanz von erstellt <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-487">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="09ae6-488">Dieser Konvertierungs Operator entspricht dem Aufrufen <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> von und `semanticKey` der Angabe von für den `key` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-488">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticKey` for the `key`.</span></span>  
  
 <span data-ttu-id="09ae6-489">Die äquivalente Methode für diesen Operator ist. <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="09ae6-489">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="09ae6-490">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, die eine Antwort auf die Frage "yes" oder "No" erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-490">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="09ae6-491">Der implizite Konvertierungs Operator wird bei der Erstellung eines-Objekts <xref:System.Speech.Recognition.SemanticResultValue> aus einem <xref:System.Speech.Recognition.Choices> -Objekt, bei der Erstellung eines- <xref:System.Speech.Recognition.Choices> Objekts aus zwei <xref:System.Speech.Recognition.SemanticResultValue> -Objekten und bei der Erstellung eines-Objekts <xref:System.Speech.Recognition.Grammar> aus einem-Objekt verwendet <xref:System.Speech.Recognition.SemanticResultKey> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-491">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultValue semanticValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultValue semanticValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticValue As SemanticResultValue) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultValue ^ semanticValue);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticValue" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="semanticValue"><span data-ttu-id="09ae6-492">Das zu konvertierende <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-492">The <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to convert.</span></span></param>
        <summary><span data-ttu-id="09ae6-493">Konvertiert ein <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Objekt in ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-493">Converts a <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="09ae6-494">Das konvertierte <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-494">The converted <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-495">Bei der impliziten Konvertierung wird eine neue Instanz von erstellt <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-495">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="09ae6-496">Dieser Konvertierungs Operator entspricht dem Aufrufen <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> von und `semanticValue` der Angabe von für den `value` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-496">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticValue` for the `value`.</span></span>  
  
 <span data-ttu-id="09ae6-497">Die äquivalente Methode für diesen Operator ist. <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="09ae6-497">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="09ae6-498">Im folgenden Beispiel wird eine sprach Erkennungs Grammatik erstellt, die eine Antwort auf die Frage "yes" oder "No" erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-498">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="09ae6-499">Der implizite Konvertierungs Operator wird bei der Erstellung eines-Objekts <xref:System.Speech.Recognition.SemanticResultValue> aus einem <xref:System.Speech.Recognition.Choices> -Objekt, bei der Erstellung eines- <xref:System.Speech.Recognition.Choices> Objekts aus zwei <xref:System.Speech.Recognition.SemanticResultValue> -Objekten und bei der Erstellung eines-Objekts <xref:System.Speech.Recognition.Grammar> aus einem-Objekt verwendet <xref:System.Speech.Recognition.SemanticResultKey> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-499">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices>object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="09ae6-500">Die zu konvertierende Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="09ae6-500">The string to convert.</span></span></param>
        <summary><span data-ttu-id="09ae6-501">Konvertiert eine Zeichenfolge in ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt.</span><span class="sxs-lookup"><span data-stu-id="09ae6-501">Converts a string to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <returns><span data-ttu-id="09ae6-502">Die konvertierte Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="09ae6-502">The converted string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="09ae6-503">Bei der impliziten Konvertierung wird eine neue Instanz von erstellt <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-503">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="09ae6-504">Dieser Konvertierungs Operator entspricht dem Aufrufen von <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> und der Angabe desselben `phrase` .</span><span class="sxs-lookup"><span data-stu-id="09ae6-504">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying the same `phrase`.</span></span>  
  
 <span data-ttu-id="09ae6-505">Die äquivalente Methode für diesen Operator ist. <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="09ae6-505">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="09ae6-506">Im folgenden Beispiel  <xref:System.Speech.Recognition.GrammarBuilder> werden-und-Objekte verwendet, <xref:System.Speech.Recognition.Choices> um eine Grammatik zu erstellen, die einen der beiden Ausdrücke, "Make background *colorchoice*" oder "Set Background on *colorchoice*", erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="09ae6-506">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="09ae6-507">Nachdem Sie eine Liste zulässiger Werte für *colorchoice* mithilfe eines- <xref:System.Speech.Recognition.Choices> Objekts erstellt haben, werden im Beispiel zwei <xref:System.Speech.Recognition.GrammarBuilder> `makePhrase` -Objekte und mithilfe der `setPhrase` impliziten Konvertierung von Zeichen folgen Objekten initialisiert.</span><span class="sxs-lookup"><span data-stu-id="09ae6-507">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using implicit conversion from string objects.</span></span>  
  
 <span data-ttu-id="09ae6-508">Das Beispiel erstellt schließlich ein- <xref:System.Speech.Recognition.Grammar> Objekt aus einem-Objekt <xref:System.Speech.Recognition.Choices> , das in ein-Objekt umgewandelt wird <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="09ae6-508">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
  </Members>
</Type>
