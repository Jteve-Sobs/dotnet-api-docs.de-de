<Type Name="GrammarBuilder" FullName="System.Speech.Recognition.GrammarBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="125094cd1fd2efc74ce799d2503892290b372592" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48736806" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class GrammarBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GrammarBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.GrammarBuilder" />
  <TypeSignature Language="VB.NET" Value="Public Class GrammarBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class GrammarBuilder" />
  <TypeSignature Language="F#" Value="type GrammarBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="49d7b-101">Stellt einen Mechanismus für das programmgesteuerte Erstellen von Einschränkungen für eine Spracherkennungsgrammatik bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="49d7b-101">Provides a mechanism for programmatically building the constraints for a speech recognition grammar.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-102">Spracherkennungsgrammatiken werden häufig erstellt, in das XML-Format von definiert die [Speech Recognition Grammar Specification (SRGS), Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761).</span><span class="sxs-lookup"><span data-stu-id="49d7b-102">Speech recognition grammars are commonly authored in the XML format defined by the [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761).</span></span> <span data-ttu-id="49d7b-103">Wenn Sie mit SRGS, aber möchten Sie Grammatiken programmgesteuert generieren vertraut sind, können Sie mithilfe der <xref:System.Speech.Recognition.SrgsGrammar> , deren Mitglieder entsprechen die Elemente und Attribute definiert werden, indem SRGS-Namespace.</span><span class="sxs-lookup"><span data-stu-id="49d7b-103">If you are familiar with SRGS but want to generate the grammars programmatically, you can use the <xref:System.Speech.Recognition.SrgsGrammar> namespace, whose members correspond closely to the elements and attributes defined by SRGS.</span></span> <span data-ttu-id="49d7b-104">Wenn Sie mit der SRGS nicht vertraut sind oder Sie möchten einen einfachen, programmgesteuerten Ansatz zur Erstellung von Grammatiken, mit denen Sie viele allgemeine Szenarien effizient ausführen können. Sie können die <xref:System.Speech.Recognition.GrammarBuilder> und <xref:System.Speech.Recognition.Choices> Klassen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-104">If you are unfamiliar with SRGS, or you want a lightweight, programmatic approach to authoring grammars with which you can efficiently accomplish many common scenarios; you can use the <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> classes.</span></span>  
  
 <span data-ttu-id="49d7b-105">Verwendung <xref:System.Speech.Recognition.GrammarBuilder> Objekte zum Erstellen einer hierarchischen Struktur besteht aus <xref:System.Speech.Recognition.Choices> Objekte, die alternative Ausdrücken zu erhalten, zusammen mit der Präambel und nach der Amble-Ausdrücken in jedem Knoten, und das Seeding mit semantischen Werte, die Bedeutungen zu vermitteln enthalten zurück an die die Anwendung.</span><span class="sxs-lookup"><span data-stu-id="49d7b-105">Use <xref:System.Speech.Recognition.GrammarBuilder> objects to build a hierarchical tree composed of <xref:System.Speech.Recognition.Choices> objects that contain alternate phrases, interspersed with preamble and post-amble phrases at each node, and seeded with semantic values that convey  meaning back to the application.</span></span>  
  
 <span data-ttu-id="49d7b-106">Verwenden einer <xref:System.Speech.Recognition.GrammarBuilder> zum Erstellen einer <xref:System.Speech.Recognition.Grammar> Objekt, das die folgenden Schritte aus.</span><span class="sxs-lookup"><span data-stu-id="49d7b-106">To use a <xref:System.Speech.Recognition.GrammarBuilder> to create a <xref:System.Speech.Recognition.Grammar> object, use the following steps.</span></span>  
  
1.  <span data-ttu-id="49d7b-107">Erstellen eines <xref:System.Speech.Recognition.GrammarBuilder>-Objekts</span><span class="sxs-lookup"><span data-stu-id="49d7b-107">Create a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
2.  <span data-ttu-id="49d7b-108">Fügen Sie Einschränkungen, die die <xref:System.Speech.Recognition.GrammarBuilder>, z. B. <xref:System.String> Objekte <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, und andere <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die die Einschränkungen für die Grammatik zu definieren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-108">Append constraints to the <xref:System.Speech.Recognition.GrammarBuilder>, such as <xref:System.String> objects, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.DictationGrammar>, and other <xref:System.Speech.Recognition.GrammarBuilder> objects that define the constraints for the grammar.</span></span>  
  
3.  <span data-ttu-id="49d7b-109">Gehen Sie die <xref:System.Speech.Recognition.Grammar.%23ctor%2A> von Konstruktoren zum Erstellen einer <xref:System.Speech.Recognition.Grammar> Objekt aus das abgeschlossene <xref:System.Speech.Recognition.GrammarBuilder> Grammatik.</span><span class="sxs-lookup"><span data-stu-id="49d7b-109">Use one of the <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructors to create a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder> grammar.</span></span>  
  
 <span data-ttu-id="49d7b-110">Erstellen mit <xref:System.Speech.Recognition.GrammarBuilder> eignet sich am besten für Grammatiken, die eine einzelne Regel, Listen oder vielleicht Listen Listen enthält.</span><span class="sxs-lookup"><span data-stu-id="49d7b-110">Authoring with <xref:System.Speech.Recognition.GrammarBuilder> is best suited to grammars that have a single rule containing lists, or perhaps lists of lists.</span></span> <span data-ttu-id="49d7b-111">Um programmgesteuert zu Grammatiken erstellen, die über mehrere Regeln, oder verwenden müssen, um eine interne Regel verweisen, verwenden Sie die Klassen der <xref:System.Speech.Recognition.SrgsGrammar> Namespace.</span><span class="sxs-lookup"><span data-stu-id="49d7b-111">To programmatically build grammars that have multiple rules, or that need to make internal rule references, use the classes of the <xref:System.Speech.Recognition.SrgsGrammar> namespace.</span></span>  
  
 <span data-ttu-id="49d7b-112">Instanzen von <xref:System.Speech.Recognition.GrammarBuilder> können auch abgerufen werden, von impliziten Konvertierungen von bestimmte andere Klassen oder durch Kombinieren von einem <xref:System.Speech.Recognition.GrammarBuilder> mit einem zweiten Objekt an, die Einschränkungen für eine Grammatik enthält...</span><span class="sxs-lookup"><span data-stu-id="49d7b-112">Instances of <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained by implicit conversions from certain other classes or by combining a  <xref:System.Speech.Recognition.GrammarBuilder> with a second object that contains constraints for a grammar..</span></span> <span data-ttu-id="49d7b-113">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> und <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren und die <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-113">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators and the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods.</span></span>  
  
 <span data-ttu-id="49d7b-114">Zum Hinzufügen von Regeln zu einer vorhandenen <xref:System.Speech.Recognition.GrammarBuilder>, verwenden Sie die <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, und <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-114">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-115">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn eine spracherkennungsgrammatik zu verwenden, die enthält doppelte semantische Elemente mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt den Wert des gleichen Elements semantische ändern könnten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-115">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="49d7b-116">Debuggen, die <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> Eigenschaft gibt den aktuellen Status der <xref:System.Speech.Recognition.GrammarBuilder> als Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="49d7b-116">To help with debugging, the <xref:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases%2A> property returns the current status of the <xref:System.Speech.Recognition.GrammarBuilder> as a string.</span></span>  
  
 <span data-ttu-id="49d7b-117">Weitere Informationen zum Erstellen und Verwenden von spracherkennungsgrammatiken finden Sie unter [Spracherkennung](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) und ["grammarbuilder" Grammatiken erstellen](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="49d7b-117">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-118">Im folgenden Beispiel wird <xref:System.Speech.Recognition.GrammarBuilder> und <xref:System.Speech.Recognition.Choices> Objekte an eine Grammatik zu erstellen, die eines der zwei Ausdrücke, erkennen kann "Stellen Hintergrund *ColorChoice*" oder "Festlegen des Hintergrunds auf *ColorChoice*".</span><span class="sxs-lookup"><span data-stu-id="49d7b-118">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="49d7b-119">Im Beispiel wird eine <xref:System.Speech.Recognition.Choices> Objekt zum Erstellen einer Liste der zulässigen Werte für *ColorChoice* aus einem Array von <xref:System.String> Objekte.</span><span class="sxs-lookup"><span data-stu-id="49d7b-119">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="49d7b-120">Ein <xref:System.Speech.Recognition.Choices> Objekt ist analog zu den `one-of` Element in der SRGS-Spezifikation und enthält einen Satz von alternativen Ausdrücken zu erhalten, von denen erkannt werden können, während gesprochen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-120">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="49d7b-121">Im Beispiel verwendet auch eine <xref:System.Speech.Recognition.Choices> Objekt, das ein Array mit zwei Gruppe <xref:System.Speech.Recognition.GrammarBuilder> Objekte in ein paar andere Ausdrücke, die die resultierenden Grammatik erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="49d7b-121">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="49d7b-122">Alternative Worte oder Ausdrücke sind eine Komponente von Grammatiken für die meisten und <xref:System.Speech.Recognition.Choices> Objekt bietet folgende Funktionen für Grammatiken mit erstellt <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-122">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="49d7b-123">Im Beispiel wird schließlich erstellt eine <xref:System.Speech.Recognition.Grammar> -Objekt aus einem <xref:System.Speech.Recognition.GrammarBuilder> aus erstellt eine <xref:System.Speech.Recognition.Choices> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-123">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.Choices" />
    <altmember cref="T:System.Speech.Recognition.Grammar" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49d7b-124">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-124">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-125">Instanzen dieser Klasse können auch abgerufen werden, oder durch Kombinieren von impliziten Konvertierungen von anderen Klassen eine <xref:System.Speech.Recognition.GrammarBuilder> Objekt mit der ein zweites Objekt, das von einem neuen <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-125">Instances of this class can also be obtained by implicit conversions from other classes or by combining a <xref:System.Speech.Recognition.GrammarBuilder> object with a second object to from a new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="49d7b-126">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> und <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-126">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods.</span></span>  
  
 <span data-ttu-id="49d7b-127">Zum Hinzufügen von Einschränkungen zu einer vorhandenen <xref:System.Speech.Recognition.GrammarBuilder>, verwenden Sie die <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, und <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> Methoden, und die <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operator.</span><span class="sxs-lookup"><span data-stu-id="49d7b-127">To add constraints to an existing <xref:System.Speech.Recognition.GrammarBuilder>, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-128">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn eine spracherkennungsgrammatik zu verwenden, die enthält doppelte semantische Elemente mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt den Wert des gleichen Elements semantische ändern könnten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-128">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span>
  
 <span data-ttu-id="49d7b-129">Weitere Informationen zum Erstellen und Verwenden von spracherkennungsgrammatiken finden Sie unter [Spracherkennung](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) und ["grammarbuilder" Grammatiken erstellen](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="49d7b-129">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49d7b-130">Initialisiert eine neue leere Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-130">Initializes a new, empty instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-131">Zum Hinzufügen von Regeln zu einer vorhandenen <xref:System.Speech.Recognition.GrammarBuilder> -Objekts die <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, und <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> Methoden, und die <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operator.</span><span class="sxs-lookup"><span data-stu-id="49d7b-131">To add rules to an existing <xref:System.Speech.Recognition.GrammarBuilder> object, use the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A>, <xref:System.Speech.Recognition.GrammarBuilder.Append%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A>, <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A>, and <xref:System.Speech.Recognition.GrammarBuilder.AppendWildcard%2A> methods, and the <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operator.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-132">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn eine spracherkennungsgrammatik zu verwenden, die enthält doppelte semantische Elemente mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt den Wert des gleichen Elements semantische ändern könnten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-132">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="49d7b-133">Im folgenden Beispiel wird <xref:System.Speech.Recognition.GrammarBuilder> und <xref:System.Speech.Recognition.Choices> Objekte an eine Grammatik zu erstellen, die eines der zwei Ausdrücke, erkennen kann "Stellen Hintergrund *ColorChoice*" oder "Festlegen des Hintergrunds auf *ColorChoice*".</span><span class="sxs-lookup"><span data-stu-id="49d7b-133">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="49d7b-134">Im Beispiel wird eine <xref:System.Speech.Recognition.Choices> Objekt zum Erstellen einer Liste der zulässigen Werte für *ColorChoice* aus einem Array von <xref:System.String> Objekte.</span><span class="sxs-lookup"><span data-stu-id="49d7b-134">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="49d7b-135">Ein <xref:System.Speech.Recognition.Choices> Objekt ist analog zu den `one-of` Element in der SRGS-Spezifikation und enthält einen Satz von alternativen Ausdrücken zu erhalten, von denen erkannt werden kann, während gesprochen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-135">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any one of which can be recognized when spoken.</span></span> <span data-ttu-id="49d7b-136">Im Beispiel verwendet auch eine <xref:System.Speech.Recognition.Choices> Objekt, das ein Array mit zwei Gruppe <xref:System.Speech.Recognition.GrammarBuilder> Objekte in ein paar andere Ausdrücke, die die resultierenden Grammatik erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="49d7b-136">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="49d7b-137">Alternative Worte oder Ausdrücke sind eine Komponente von Grammatiken für die meisten und <xref:System.Speech.Recognition.Choices> Objekt bietet folgende Funktionen für Grammatiken mit erstellt <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-137">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="49d7b-138">Im Beispiel wird schließlich erstellt eine <xref:System.Speech.Recognition.Grammar> -Objekt aus einem <xref:System.Speech.Recognition.GrammarBuilder> aus erstellt eine <xref:System.Speech.Recognition.Choices> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-138">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  GrammarBuilder bothPhrases = new GrammarBuilder();  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  bothPhrases.Append(bothChoices);  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder alternateChoices" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="49d7b-139">Der Satz von Alternativen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-139">The set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-140">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse aus einer Gruppe von Alternativen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-140">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a set of alternatives.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-141">Weitere Informationen zum Erstellen einer spracherkennungsgrammatik, die alternativen enthält, finden Sie unter [mithilfe von Optionen zum Erstellen einer "grammarbuilder" Grammatik](http://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span><span class="sxs-lookup"><span data-stu-id="49d7b-141">For more information about building a speech recognition grammar that contains alternatives, see [Using Choices to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/5b18db18-a5f6-46a3-aa77-6d3141544efd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-142">Im folgenden Beispiel wird <xref:System.Speech.Recognition.GrammarBuilder> und <xref:System.Speech.Recognition.Choices> Objekte an eine Grammatik zu erstellen, die eines der zwei Ausdrücke, erkennen kann "Stellen Hintergrund *ColorChoice*" oder "Festlegen des Hintergrunds auf *ColorChoice*".</span><span class="sxs-lookup"><span data-stu-id="49d7b-142">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="49d7b-143">Im Beispiel wird eine <xref:System.Speech.Recognition.Choices> Objekt zum Erstellen einer Liste der zulässigen Werte für *ColorChoice* aus einem Array von <xref:System.String> Objekte.</span><span class="sxs-lookup"><span data-stu-id="49d7b-143">The example uses a <xref:System.Speech.Recognition.Choices> object  to create a list of acceptable values for *colorChoice* from an array of <xref:System.String> objects.</span></span> <span data-ttu-id="49d7b-144">Ein <xref:System.Speech.Recognition.Choices> Objekt ist analog zu den `one-of` Element in der SRGS-Spezifikation und enthält einen Satz von alternativen Ausdrücken zu erhalten, von denen erkannt werden können, während gesprochen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-144">A <xref:System.Speech.Recognition.Choices> object is analogous to the `one-of` element in the SRGS specification, and contains a set of alternate phrases, any of which can be recognized when spoken.</span></span> <span data-ttu-id="49d7b-145">Im Beispiel verwendet auch eine <xref:System.Speech.Recognition.Choices> Objekt, das ein Array mit zwei Gruppe <xref:System.Speech.Recognition.GrammarBuilder> Objekte in ein paar andere Ausdrücke, die die resultierenden Grammatik erkennen kann.</span><span class="sxs-lookup"><span data-stu-id="49d7b-145">The example also uses a <xref:System.Speech.Recognition.Choices> object to group an array of two <xref:System.Speech.Recognition.GrammarBuilder> objects into a pair of alternative phrases that the resultant grammar can recognize.</span></span> <span data-ttu-id="49d7b-146">Alternative Worte oder Ausdrücke sind eine Komponente von Grammatiken für die meisten und <xref:System.Speech.Recognition.Choices> Objekt bietet folgende Funktionen für Grammatiken mit erstellt <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-146">Alternate words or phrases are a component of most grammars, and the <xref:System.Speech.Recognition.Choices> object provides this functionality for grammars constructed with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="49d7b-147">Im Beispiel wird schließlich erstellt eine <xref:System.Speech.Recognition.Grammar> -Objekt aus einem <xref:System.Speech.Recognition.GrammarBuilder> aus erstellt eine <xref:System.Speech.Recognition.Choices> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-147">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.GrammarBuilder> constructed from a <xref:System.Speech.Recognition.Choices> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="49d7b-148">Der semantische Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-148">The semantic key.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-149">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse aus einem semantischen Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-150">Bei der Erstellung einer <xref:System.Speech.Recognition.GrammarBuilder> -Instanz aus einer <xref:System.Speech.Recognition.SemanticResultValue> -Objekts können Sie semantische Informationen hinzufügen, der Grammatik, die in das Erkennungsergebnis zurückgegeben werden können.</span><span class="sxs-lookup"><span data-stu-id="49d7b-150">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="49d7b-151">Sie erreichen die semantische Informationen in das Ergebnis mithilfe der <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> Eigenschaft <xref:System.Speech.Recognition.RecognizedPhrase>, steht in der der Handler für die `SpeechRecognized` Ereignis.</span><span class="sxs-lookup"><span data-stu-id="49d7b-151">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="49d7b-152">Wenn die <xref:System.Speech.Recognition.GrammarBuilder> definiert eine <xref:System.Speech.Recognition.SemanticResultKey>, dies kann verwendet werden, um die semantischen Informationen in einem Erkennungsergebnis abzurufen, die mit dem Schlüssel zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="49d7b-152">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="49d7b-153">Siehe das Beispiel für <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, und auch <xref:System.Speech.Recognition.SemanticResultValue> und <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-153">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-154">Beim Erstellen <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> -Instanzen, stellen Sie sicher, dass Sie keine doppelte semantische Elemente erstellen, mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt ändern könnten die <xref:System.Speech.Recognition.SemanticValue.Value%2A> -Eigenschaft einer <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-154">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-155">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-155">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="49d7b-156">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, das die zwei Ausdrücke, erkennen können "Stellen Hintergrund *ColorChoice*" und "Festlegen des Hintergrunds auf *ColorChoice*", wobei \* ColorChoice\* aus einem Satz von Farben aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="49d7b-156">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="49d7b-157">Die Grammatik ermöglicht es einem Benutzer, die verschiedene Farbe Namen sprechen und semantischen Informationen zu der erkannten Farbname an die Anwendung zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="49d7b-157">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="49d7b-158">Im Beispiel wird eine einzelne <xref:System.Speech.Recognition.SemanticResultKey> mit dem Sie abrufen können die <xref:System.Speech.Recognition.SemanticValue> , mit der Farbe, die vom Benutzer gesprochen verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="49d7b-158">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="49d7b-159">Wenn die Eingabe der Formulierung enthält z. B. "Set-Hintergrund in Rot", das Erkennungsergebnis enthält den semantischen Wert von "#ff0000", die Sie abrufen können, verwenden einen Handler für die `SpeechRecognized` Ereignis.</span><span class="sxs-lookup"><span data-stu-id="49d7b-159">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="49d7b-160">Im Beispiel wird <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, und <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die Einschränkungen zu erstellen, die alle in den letzten enthalten sind <xref:System.Speech.Recognition.GrammarBuilder> Objekt `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="49d7b-160">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="49d7b-161">Zum Schluss das Beispiel erstellt eine <xref:System.Speech.Recognition.Grammar> Objekt aus das abgeschlossene <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-161">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices object for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the Grammar object from the GrammarBuilder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="49d7b-162">Der semantische Wert oder das Name/Wert-Paar.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-162">The semantic value or name/value pair.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-163">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse aus einem semantischen Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-163">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a semantic value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-164">Bei der Erstellung einer <xref:System.Speech.Recognition.GrammarBuilder> -Instanz aus einer <xref:System.Speech.Recognition.SemanticResultValue> -Objekts können Sie semantische Informationen hinzufügen, der Grammatik, die in das Erkennungsergebnis zurückgegeben werden können.</span><span class="sxs-lookup"><span data-stu-id="49d7b-164">When you create a <xref:System.Speech.Recognition.GrammarBuilder> instance from a <xref:System.Speech.Recognition.SemanticResultValue> object, you add semantic information to the grammar that can be returned in the recognition result.</span></span> <span data-ttu-id="49d7b-165">Sie erreichen die semantische Informationen in das Ergebnis mithilfe der <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> Eigenschaft <xref:System.Speech.Recognition.RecognizedPhrase>, steht in der der Handler für die `SpeechRecognized` Ereignis.</span><span class="sxs-lookup"><span data-stu-id="49d7b-165">You can access the semantic information in the recognition result using the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property of <xref:System.Speech.Recognition.RecognizedPhrase>, which is available in the handler for the `SpeechRecognized` event.</span></span> <span data-ttu-id="49d7b-166">Wenn die <xref:System.Speech.Recognition.GrammarBuilder> definiert eine <xref:System.Speech.Recognition.SemanticResultKey>, dies kann verwendet werden, um die semantischen Informationen in einem Erkennungsergebnis abzurufen, die mit dem Schlüssel zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="49d7b-166">If the <xref:System.Speech.Recognition.GrammarBuilder> defines a <xref:System.Speech.Recognition.SemanticResultKey>, this can be used to retrieve the semantic information in a recognition result that is associated with the key.</span></span> <span data-ttu-id="49d7b-167">Siehe das Beispiel für <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, und auch <xref:System.Speech.Recognition.SemanticResultValue> und <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-167">See the example for <xref:System.Speech.Recognition.GrammarBuilder.Append%28System.Speech.Recognition.SemanticResultKey%29>, and also see <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-168">Beim Erstellen <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> -Instanzen, stellen Sie sicher, dass Sie keine doppelte semantische Elemente erstellen, mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt ändern könnten die <xref:System.Speech.Recognition.SemanticValue.Value%2A> -Eigenschaft einer <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-168">When you construct <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-169">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-169">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="49d7b-170">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, das die zwei Ausdrücke, erkennen können "Stellen Hintergrund *ColorChoice*" und "Festlegen des Hintergrunds auf *ColorChoice*", wobei \* ColorChoice\* aus einem Satz von Farben aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="49d7b-170">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *colorChoice*" and "Set background to *colorChoice*", where *colorChoice* is selected from a set of colors.</span></span> <span data-ttu-id="49d7b-171">Die Grammatik ermöglicht es einem Benutzer, die verschiedene Farbe Namen sprechen und semantischen Informationen zu der erkannten Farbname an die Anwendung zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="49d7b-171">The grammar lets a user speak any of several color names, and returns semantic information about the recognized color name to the application.</span></span>  
  
 <span data-ttu-id="49d7b-172">Im Beispiel wird eine einzelne <xref:System.Speech.Recognition.SemanticResultKey> mit dem Sie abrufen können die <xref:System.Speech.Recognition.SemanticValue> , mit der Farbe, die vom Benutzer gesprochen verknüpft ist.</span><span class="sxs-lookup"><span data-stu-id="49d7b-172">The example uses a single <xref:System.Speech.Recognition.SemanticResultKey> with which you can retrieve the <xref:System.Speech.Recognition.SemanticValue> that is associated with the color spoken by the user.</span></span> <span data-ttu-id="49d7b-173">Wenn die Eingabe der Formulierung enthält z. B. "Set-Hintergrund in Rot", das Erkennungsergebnis enthält den semantischen Wert von "#ff0000", die Sie abrufen können, verwenden einen Handler für die `SpeechRecognized` Ereignis.</span><span class="sxs-lookup"><span data-stu-id="49d7b-173">For example, if the input contains the phrase, "Set background to red", the recognition result contains the semantic value of "#FF0000", which you can retrieve using a handler for the `SpeechRecognized` event.</span></span>  
  
 <span data-ttu-id="49d7b-174">Im Beispiel wird <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, und <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die Einschränkungen zu erstellen, die alle in den letzten enthalten sind <xref:System.Speech.Recognition.GrammarBuilder> Objekt `bothPhrases`.</span><span class="sxs-lookup"><span data-stu-id="49d7b-174">The example uses <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and <xref:System.Speech.Recognition.GrammarBuilder> objects to build the constraints that are all contained in the last <xref:System.Speech.Recognition.GrammarBuilder> object, `bothPhrases`.</span></span> <span data-ttu-id="49d7b-175">Zum Schluss das Beispiel erstellt eine <xref:System.Speech.Recognition.Grammar> Objekt aus das abgeschlossene <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-175">Finally, the example constructs a <xref:System.Speech.Recognition.Grammar> object from the completed <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  // Include semantic information about each of the colors.  
  Choices colorChoice = new Choices();  
  
  GrammarBuilder colorBuilder = new GrammarBuilder("red");  
  SemanticResultValue colorValue =  
    new SemanticResultValue(colorBuilder, "#FF0000");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("green");  
  colorValue = new SemanticResultValue(colorBuilder, "#00FF00");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  colorBuilder = new GrammarBuilder("blue");  
  colorValue = new SemanticResultValue(colorBuilder, "#0000FF");  
  colorChoice.Add(new GrammarBuilder(colorValue));  
  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  // Create the semantic key for referencing the color information.  
  SemanticResultKey colorKey =  
    new SemanticResultKey("ColorCode", bothPhrases);  
  bothPhrases = new GrammarBuilder(colorKey);  
  
  // Construct the grammar from the grammar builder.  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder phrase" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="49d7b-176">Die Wortsequenz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-176">The sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-177">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse aus einer Sequenz von Wörtern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-177">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-178">Der Ausdruck stellt einen genaue gesprochenen Ausdruck, den die spracherkennungsgrammatik erkennen können.</span><span class="sxs-lookup"><span data-stu-id="49d7b-178">The phrase represents an exact spoken phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="49d7b-179">Weitere Informationen zum Erstellen einer spracherkennungsgrammatik, die Zeichenfolgen enthält, finden Sie unter [Verwendung von Zeichenfolgen zum Erstellen einer "grammarbuilder" Grammatik](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="49d7b-179">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-180">Im folgenden Beispiel wird <xref:System.Speech.Recognition.GrammarBuilder> und <xref:System.Speech.Recognition.Choices> Objekte an eine Grammatik zu erstellen, die eines der zwei Ausdrücke, erkennen kann "Stellen Hintergrund *ColorChoice*" oder "Festlegen des Hintergrunds auf *ColorChoice*".</span><span class="sxs-lookup"><span data-stu-id="49d7b-180">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="49d7b-181">Nach dem Erstellen einer Liste der zulässigen Werte für *ColorChoice* mithilfe einer <xref:System.Speech.Recognition.Choices> Objekt, das Beispiel initialisiert zwei <xref:System.Speech.Recognition.GrammarBuilder> Objekte `makePhrase` und `setPhrase`, mit einer Zeichenfolge als Argument.</span><span class="sxs-lookup"><span data-stu-id="49d7b-181">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using a string as an argument.</span></span>  
  
 <span data-ttu-id="49d7b-182">Im Beispiel wird schließlich erstellt eine <xref:System.Speech.Recognition.Grammar> -Objekt aus einem <xref:System.Speech.Recognition.Choices> Objekt umgewandelt wird, um eine <xref:System.Speech.Recognition.GrammarBuilder> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-182">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultKey" />
        <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * System.Speech.Recognition.SubsetMatchingMode -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, subsetMatchingCriteria)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="49d7b-183">Die Wortsequenz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-183">The sequence of words.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="49d7b-184">Der entsprechende Modus, den die Spracherkennungsgrammatik verwendet, um den Ausdruck zu erkennen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-184">The matching mode the speech recognition grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-185">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse für eine Teilmenge einer Sequenz von Wörtern.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-185">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class for a subset of a sequence of words.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-186">Die `phrase` Parameter darstellt, den Ausdruck, den die spracherkennungsgrammatik erkennen können.</span><span class="sxs-lookup"><span data-stu-id="49d7b-186">The `phrase` parameter represents the phrase that the speech recognition grammar can recognize.</span></span> <span data-ttu-id="49d7b-187">Die `subsetMatchingMode` Parameter gibt an, eine Teilmenge des Ausdrucks, der für eine erfolgreiche Erkennung des gesamten Ausdrucks gesprochen werden kann.</span><span class="sxs-lookup"><span data-stu-id="49d7b-187">The `subsetMatchingMode` parameter specifies a subset of the phrase that can be spoken to achieve successful recognition of the entire phrase.</span></span> <span data-ttu-id="49d7b-188">Sie können dies um eine Grammatik mit einer Liste von Einträgen zu erstellen, die lange Namen haben, ohne dass Benutzer, einen gesamten Namen entsprechend ein Element zu sprechen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-188">You can use this to create a grammar with a list of entries that have long names, without requiring users to speak an entire name to match an item.</span></span>  
  
 <span data-ttu-id="49d7b-189">Weitere Informationen zu den entsprechenden Modi finden Sie unter <xref:System.Speech.Recognition.SubsetMatchingMode>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-189">For more information about the matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode>.</span></span> <span data-ttu-id="49d7b-190">Weitere Informationen zum Erstellen einer spracherkennungsgrammatik, die Zeichenfolgen enthält, finden Sie unter [Verwendung von Zeichenfolgen zum Erstellen einer "grammarbuilder" Grammatik](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="49d7b-190">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-191">Das folgende Beispiel erstellt eine spracherkennungsgrammatik für jede <xref:System.Speech.Recognition.SubsetMatchingMode> Wert und eine Grammatik für die Wahl zwischen den entsprechenden Modus Grammatiken.</span><span class="sxs-lookup"><span data-stu-id="49d7b-191">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value and a grammar for choosing between the matching mode grammars.</span></span> <span data-ttu-id="49d7b-192">Wenn der Wert des `phrase` ist "ein zwei drei vier fünf sechs sieben", und klicken Sie dann die Grammatik Untersequenz die Eingabe erkennt "zwei drei vier", aber nicht die Eingabe "eine drei fünf".</span><span class="sxs-lookup"><span data-stu-id="49d7b-192">If the value of `phrase` is "one two three four five six seven", then the Subsequence grammar recognizes the input "two three four", but not the input "one three five".</span></span> <span data-ttu-id="49d7b-193">Die Grammatik sortiert Teilmenge erkennt jedoch beide dieser Eingaben.</span><span class="sxs-lookup"><span data-stu-id="49d7b-193">However, the Ordered Subset grammar recognizes both of these inputs.</span></span>  
  
```csharp  
  
private static IEnumerable<Grammar>  
  CreateMatchingModeGrammars(string phrase)  
{  
  List<Grammar> grammars = new List<Grammar>(5);  
  
  Choices modeChoice = new Choices();  
  Type enumType = typeof(SubsetMatchingMode);  
  foreach (SubsetMatchingMode mode in Enum.GetValues(enumType))  
  {  
    string modeName = Enum.GetName(enumType, mode);  
    modeName = BreakAtCaps(modeName);  
  
    GrammarBuilder builder = new GrammarBuilder(phrase, mode);  
    Grammar modeGrammar = new Grammar(builder);  
    modeGrammar.Name = modeName;  
    modeGrammar.Enabled = false;  
    grammars.Add(modeGrammar);  
  
    modeChoice.Add(modeName);  
  }  
  
  Grammar choiceGrammar = new Grammar(modeChoice);  
  choiceGrammar.Name = "choice";  
  grammars.Add(choiceGrammar);  
  
  return grammars;  
}  
  
// Insert spaces preceding each uppercase letter in a string.   
private static string BreakAtCaps(string item)  
{  
  if (item == null || item.Length == 0)  
  {  
    return item;  
  }  
  
  StringBuilder sb = new StringBuilder(item[0].ToString());  
  for (int i = 1; i < item.Length; i++)  
  {  
    char c = item[i];  
    if (char.IsUpper(c))  
    {  
      sb.Append(" ");  
    }  
    sb.Append(c);  
  }  
  
  return sb.ToString();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SubsetMatchingMode" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : System.Speech.Recognition.GrammarBuilder * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (builder, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="49d7b-194">Das wiederholte Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-194">The repeated element.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="49d7b-195">Die minimale Wiederholungsrate für eine Übereinstimmung der Eingabe mit dem durch <c>builder</c> definierten Element, nach der eine Übereinstimmung anerkannt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-195">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="49d7b-196">Die maximale Wiederholungsrate für eine Übereinstimmung der Eingabe mit dem durch <c>builder</c> definierten Element, nach der eine Übereinstimmung anerkannt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-196">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-197">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse aus einem wiederholten Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-197">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from a repeated element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-198">Wenn der Wert des `minRepeat` ist 0, und klicken Sie dann die neue <xref:System.Speech.Recognition.GrammarBuilder> ein optionales Element darstellt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-198">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="49d7b-199">Der Wert des `minRepeat` muss größer als oder gleich 0 und kleiner oder gleich dem Wert des `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="49d7b-199">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-200">Beim Angeben von Wiederholungen für <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> -Instanzen, stellen Sie sicher, dass Sie keine doppelten semantische Elemente mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt die ändernkönntenerstellen<xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft eine <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-200">When you specify repeats for <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-201">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-201">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="49d7b-202">Das folgende Beispiel erstellt eine spracherkennungsgrammatik für das bestellen einer Pizza: je.</span><span class="sxs-lookup"><span data-stu-id="49d7b-202">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="49d7b-203">Es beginnt mit einem Ausdruck optional ist, öffnen ein, gefolgt von einem bis vier Belags, und schließt mit dem Wort "Pizza".</span><span class="sxs-lookup"><span data-stu-id="49d7b-203">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object from a string array of alternative toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GrammarBuilder (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GrammarBuilder(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.GrammarBuilder : string * int * int -&gt; System.Speech.Recognition.GrammarBuilder" Usage="new System.Speech.Recognition.GrammarBuilder (phrase, minRepeat, maxRepeat)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="49d7b-204">Die wiederholte Wortsequenz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-204">The repeated sequence of words.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="49d7b-205">Die minimale Wiederholungsrate für eine Übereinstimmung der Eingabe mit der Phrase, nach der eine Übereinstimmung anerkannt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-205">The minimum number of times that input matching the phrase must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="49d7b-206">Die maximale Wiederholungsrate für eine Übereinstimmung der Eingabe mit der Phrase, nach der eine Übereinstimmung anerkannt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-206">The maximum number of times that input matching the phrase can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-207">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Klasse aus der Sequenz von Wörtern in einem <see cref="T:System.String" /> und gibt an, wie oft der <see cref="T:System.String" /> wiederholt werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-207">Initializes a new instance of the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> class from the sequence of words in a <see cref="T:System.String" /> and specifies how many times the <see cref="T:System.String" /> can be repeated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-208">Wenn der Wert des `minRepeat` ist 0, und klicken Sie dann die neue <xref:System.Speech.Recognition.GrammarBuilder> ein optionales Element darstellt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-208">If the value of `minRepeat` is 0, then the new <xref:System.Speech.Recognition.GrammarBuilder> represents an optional element.</span></span>  
  
 <span data-ttu-id="49d7b-209">Der Wert des `minRepeat` muss größer als oder gleich 0 und kleiner oder gleich dem Wert des `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="49d7b-209">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span> <span data-ttu-id="49d7b-210">Weitere Informationen zum Erstellen einer spracherkennungsgrammatik, die Zeichenfolgen enthält, finden Sie unter [Verwendung von Zeichenfolgen zum Erstellen einer "grammarbuilder" Grammatik](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="49d7b-210">For more information about building a speech recognition grammar that contains strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-211">Das folgende Beispiel erstellt eine spracherkennungsgrammatik für das bestellen einer Pizza: je.</span><span class="sxs-lookup"><span data-stu-id="49d7b-211">The following example creates a speech recognition grammar for ordering a pizza.</span></span> <span data-ttu-id="49d7b-212">Es beginnt mit einem Ausdruck optional ist, öffnen ein, gefolgt von einem bis vier Belags, und schließt mit dem Wort "Pizza".</span><span class="sxs-lookup"><span data-stu-id="49d7b-212">It starts with an optional, opening phrase, followed by one to four toppings, and closes with the word "pizza".</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Choices" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49d7b-213">Erstellt ein neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der eine Sequenz aus zwei Grammatikelementen enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-213">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-214">Die statische <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> Methoden bieten einen anderen Mechanismus, mit dem verschiedene Typen zum Erstellen unterschiedlicher Technologien können kombiniert werden, und Dank der Flexibilität bei der Grammatiken <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-214">The static <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods provide another mechanism by which you can combine various types to create diversity and flexibility in grammars built with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="49d7b-215">Diese Methoden entsprechen, an die statische <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> -Methoden, die auch für definiert sind die <xref:System.Speech.Recognition.GrammarBuilder> Klasse.</span><span class="sxs-lookup"><span data-stu-id="49d7b-215">These methods correspond to the static <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> methods, which are also defined on the <xref:System.Speech.Recognition.GrammarBuilder> class.</span></span> <span data-ttu-id="49d7b-216">Die Reihenfolge der Parameter bestimmt die Reihenfolge der Elemente in der neuen <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-216">The order of the parameters determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="49d7b-217">Ein <xref:System.Speech.Recognition.GrammarBuilder> kann auch von abgerufen werden <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, und [Zeichenfolge](http://go.microsoft.com/fwlink/?LinkId=159733) Objekte.</span><span class="sxs-lookup"><span data-stu-id="49d7b-217">A <xref:System.Speech.Recognition.GrammarBuilder> can also be obtained from <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.SemanticResultValue>, and [String](http://go.microsoft.com/fwlink/?LinkId=159733) objects.</span></span> <span data-ttu-id="49d7b-218">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> und <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-218">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-219">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn eine spracherkennungsgrammatik zu verwenden, die enthält doppelte semantische Elemente mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt den Wert des gleichen Elements semantische ändern könnten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-219">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="49d7b-220">Weitere Informationen zum Erstellen und Verwenden von spracherkennungsgrammatiken finden Sie unter [Spracherkennung](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) und ["grammarbuilder" Grammatiken erstellen](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="49d7b-220">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (choices, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="49d7b-221">Das erste Grammatikelement, das einen Satz von Alternativen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-221">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="49d7b-222">Das zweite Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-222">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-223">Erstellt einen neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der ein <see cref="T:System.Speech.Recognition.Choices" />-Objekt gefolgt von einem <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-223">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-224">Ein <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="choices" />-Elements gefolgt vom <paramref name="builder" />-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-224">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-225"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt die implizite Konvertierungen von den folgenden Klassen:</span><span class="sxs-lookup"><span data-stu-id="49d7b-225"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="49d7b-226">Diese Methode akzeptiert, die für die oben aufgeführten Objekte die `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="49d7b-226">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="49d7b-227">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> und <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-227">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-228">Wenn Sie kombinieren <xref:System.Speech.Recognition.Choices> und <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> -Instanzen, stellen Sie sicher, dass Sie keine doppelte semantische Elemente erstellen, mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt ändern könnten die <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft eine <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-228">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-229">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-229">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> <span data-ttu-id="49d7b-230">Weitere Informationen zum Erstellen einer spracherkennungsgrammatik, die semantischen Informationen enthält, finden Sie unter [Semantik hinzufügen, mit einer Grammatik "grammarbuilder"](https://msdn.microsoft.com/library/hh361581.aspx).</span><span class="sxs-lookup"><span data-stu-id="49d7b-230">For more information about building a speech recognition grammar that contains semantic information, see [Add Semantics to a GrammarBuilder Grammar](https://msdn.microsoft.com/library/hh361581.aspx).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, choices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="49d7b-231">Das erste Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-231">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="49d7b-232">Das zweite Grammatikelement, das einen Satz von Alternativen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-232">The second grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-233">Erstellt einen neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt gefolgt von einem <see cref="T:System.Speech.Recognition.Choices" />-Objekt enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-233">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-234">Ein <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="builder" />-Elements gefolgt vom <paramref name="choices" />-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-234">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="choices" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-235"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt die implizite Konvertierungen von den folgenden Klassen:</span><span class="sxs-lookup"><span data-stu-id="49d7b-235"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="49d7b-236">Diese Methode akzeptiert, die für die oben aufgeführten Objekte die `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="49d7b-236">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="49d7b-237">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> und <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-237">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-238">Wenn Sie kombinieren <xref:System.Speech.Recognition.Choices> und <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> -Instanzen mit anderen grammatikelementen, stellen Sie sicher, Sie vermeiden, doppelte semantische Elemente mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente erstellen, wiederholt ändern konnte die <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft eine <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-238">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-239">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-239">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="49d7b-240">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, das die zwei Ausdrücke, erkennen können "Stellen Hintergrund *Farbe*" und "Festlegen des Hintergrunds auf *Farbe*", wobei *Farbe* wird aus einem Satz von Farben ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-240">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="49d7b-241">Verschiedene Typen werden verwendet, um die endgültige Grammatik, z. B. erstellen [Zeichenfolge](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, und <xref:System.Speech.Recognition.GrammarBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="49d7b-241">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="49d7b-242">Die explizite Umwandlungsoperatoren in den Aufrufen der <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> Methoden sind optional.</span><span class="sxs-lookup"><span data-stu-id="49d7b-242">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder1, builder2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="49d7b-243">Das erste Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-243">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="49d7b-244">Das zweite Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-244">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-245">Erstellt einen neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der eine Sequenz aus zwei <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-245">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-246">Ein <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="builder1" />-Elements gefolgt vom <paramref name="builder2" />-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-246">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> element followed by the <paramref name="builder2" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-247"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt die implizite Konvertierungen von den folgenden Klassen:</span><span class="sxs-lookup"><span data-stu-id="49d7b-247"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="49d7b-248">Diese Methode akzeptiert, die für die oben aufgeführten Objekte die `builder1` oder `builder2` Parameter.</span><span class="sxs-lookup"><span data-stu-id="49d7b-248">This method accepts the objects listed above for the `builder1` or `builder2` parameter.</span></span>  
  
 <span data-ttu-id="49d7b-249">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> und <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-249">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-250">Wenn Sie kombinieren <xref:System.Speech.Recognition.Choices> und <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> -Instanzen mit anderen grammatikelementen, stellen Sie sicher, Sie vermeiden, doppelte semantische Elemente mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente erstellen, wiederholt ändern konnte die <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft eine <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-250">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-251">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-251">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="49d7b-252">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, das die zwei Ausdrücke, erkennen können "Stellen Hintergrund *Farbe*" und "Festlegen des Hintergrunds auf *Farbe*", wobei *Farbe* wird aus einem Satz von Farben ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-252">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="49d7b-253">Verschiedene Typen werden verwendet, um die endgültige Grammatik, z. B. erstellen [Zeichenfolge](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, und <xref:System.Speech.Recognition.GrammarBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="49d7b-253">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="49d7b-254">Die explizite Umwandlungsoperatoren in den Aufrufen der <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> Methoden sind optional.</span><span class="sxs-lookup"><span data-stu-id="49d7b-254">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member Add : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (builder, phrase)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="49d7b-255">Das erste Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-255">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="49d7b-256">Das zweite Grammatikelement, das eine Sequenz von Wörtern darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-256">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-257">Erstellt ein neues <see cref="T:System.Speech.Recognition.GrammarBuilder" />, das ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt gefolgt von einem Begriff enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-257">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-258">Ein <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="builder" />-Elements gefolgt vom <paramref name="phrase" />-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-258">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> element followed by the <paramref name="phrase" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-259"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt die implizite Konvertierungen von den folgenden Klassen:</span><span class="sxs-lookup"><span data-stu-id="49d7b-259"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="49d7b-260">Diese Methode akzeptiert, die für die oben aufgeführten Objekte die `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="49d7b-260">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="49d7b-261">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> und <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-261">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-262">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, das die zwei Ausdrücke, erkennen können "Stellen Hintergrund *Farbe*" und "Festlegen des Hintergrunds auf *Farbe*", wobei *Farbe* wird aus einem Satz von Farben ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-262">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="49d7b-263">Verschiedene Typen werden verwendet, um die endgültige Grammatik, z. B. erstellen [Zeichenfolge](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, und <xref:System.Speech.Recognition.GrammarBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="49d7b-263">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="49d7b-264">Die explizite Umwandlungsoperatoren in den Aufrufen der <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> Methoden sind optional.</span><span class="sxs-lookup"><span data-stu-id="49d7b-264">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder Add (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.GrammarBuilder Add(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Add(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Add (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ Add(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member Add : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.Add (phrase, builder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="49d7b-265">Das erste Grammatikelement, das eine Sequenz von Wörtern darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-265">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="49d7b-266">Das zweite Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-266">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-267">Erstellt ein neues <see cref="T:System.Speech.Recognition.GrammarBuilder" />, das einen Begriff gefolgt von einem <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-267">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-268">Ein <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="phrase" />-Elements gefolgt vom <paramref name="builder" />-Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-268">A <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> element followed by the <paramref name="builder" /> element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-269"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt die implizite Konvertierungen von den folgenden Klassen:</span><span class="sxs-lookup"><span data-stu-id="49d7b-269"><xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="49d7b-270">Diese Methode akzeptiert, die für die oben aufgeführten Objekte die `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="49d7b-270">This method accepts the objects listed above for the `builder` parameter.</span></span>  
  
 <span data-ttu-id="49d7b-271">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> und <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-271">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> and <xref:System.Speech.Recognition.GrammarBuilder.op_Addition%2A> operators.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-272">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, das die zwei Ausdrücke, erkennen können "Stellen Hintergrund *Farbe*" und "Festlegen des Hintergrunds auf *Farbe*", wobei *Farbe* wird aus einem Satz von Farben ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-272">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="49d7b-273">Verschiedene Typen werden verwendet, um die endgültige Grammatik, z. B. erstellen [Zeichenfolge](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, und <xref:System.Speech.Recognition.GrammarBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="49d7b-273">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span> <span data-ttu-id="49d7b-274">Die explizite Umwandlungsoperatoren in den Aufrufen der <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> Methoden sind optional.</span><span class="sxs-lookup"><span data-stu-id="49d7b-274">The explicit cast operators in the calls to the <xref:System.Speech.Recognition.GrammarBuilder.Add%2A> methods are optional.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    GrammarBuilder.Add((GrammarBuilder)"Make background", colorChoice);  
  GrammarBuilder setPhrase =  
    GrammarBuilder.Add("Set background to", (GrammarBuilder)colorChoice);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Append">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49d7b-275">Fügt der aktuellen Sequenz von Grammatikelementen eine Diktatgrammatik an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-275">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-276">Verwenden Sie diese Methoden zum Anfügen von grammatikelementen an eine vorhandene <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-276">Use these methods to append grammar elements to an existing <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="49d7b-277">Grammatikelementen erstellen, können Sie sie an der vorhandenen Generator, der die Einschränkungen für eine spracherkennungsgrammatik progressiv entwickeln anfügen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-277">As you create grammar elements, you can append them to the existing builder to progressively develop the constraints for a speech recognition grammar.</span></span> <span data-ttu-id="49d7b-278">Jedes Element wird am Ende der aktuellen Sequenz von Elementen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-278">Each element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="49d7b-279">Diese Methode verfügt über Überladungen, die zum Anfügen von <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, und <xref:System.Speech.Recognition.SemanticResultValue> Objekte.</span><span class="sxs-lookup"><span data-stu-id="49d7b-279">This method has overloads for appending <xref:System.Speech.Recognition.GrammarBuilder>, <xref:System.String>, <xref:System.Speech.Recognition.Choices>, <xref:System.Speech.Recognition.SemanticResultKey>, and <xref:System.Speech.Recognition.SemanticResultValue> objects.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-280">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn eine spracherkennungsgrammatik zu verwenden, die enthält doppelte semantische Elemente mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt den Wert des gleichen Elements semantische ändern könnten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-280">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="49d7b-281">Weitere Informationen zum Erstellen und Verwenden von spracherkennungsgrammatiken finden Sie unter [Spracherkennung](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) und ["grammarbuilder" Grammatiken erstellen](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="49d7b-281">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.Choices alternateChoices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.Choices alternateChoices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (alternateChoices As Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::Choices ^ alternateChoices);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.Choices -&gt; unit" Usage="grammarBuilder.Append alternateChoices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="alternateChoices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="alternateChoices">
          <span data-ttu-id="49d7b-282">Der Satz von Alternativen, die angefügt werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-282">The set of alternatives to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-283">Fügt einen Satz von Alternativen zur aktuellen Sequenz von Grammatikelementen an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-283">Appends a set of alternatives to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-284">`alternateChoices` wird am Ende der aktuellen Sequenz von Elementen hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-284">`alternateChoices` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-285">Wenn Sie anfügen <xref:System.Speech.Recognition.Choices> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> -Instanzen zu eine <xref:System.Speech.Recognition.GrammarBuilder> Objekt, stellen Sie sicher, dass Sie keine doppelten semantische Elemente erstellen, mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt Ändern der <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft eine <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-285">When you append <xref:System.Speech.Recognition.Choices> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-286">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-286">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="49d7b-287">Das folgende Beispiel erstellt eine spracherkennungsgrammatik für formulierungen wie z. B. "Call James bei der Arbeit" und "Aufruf Anne auf ihr Handy,", wobei das Wort "Phone" optional ist.</span><span class="sxs-lookup"><span data-stu-id="49d7b-287">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="49d7b-288">Das Beispiel zeigt die Verwendung von der <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="49d7b-288">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder -&gt; unit" Usage="grammarBuilder.Append builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="49d7b-289">Das anzufügende Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-289">The grammar element to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-290">Fügt der aktuellen Sequenz von Grammatikelementen eine Diktatgrammatik an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-290">Appends a grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-291">`builder` wird am Ende der aktuellen Sequenz von grammatikelementen hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-291">`builder` is added to the end of the current sequence of grammar elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="49d7b-292">Wenn Sie anfügen <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> -Instanzen zu eine <xref:System.Speech.Recognition.GrammarBuilder> Objekt, stellen Sie sicher, dass Sie keine doppelten semantische Elemente erstellen, mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt Ändern der <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft eine <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-292">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-293">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-293">The speech recognizer can throw an exception if it encounters these circumstances.</span></span> 
  
   
  
## Examples  
 <span data-ttu-id="49d7b-294">Das folgende Beispiel erstellt eine spracherkennungsgrammatik für formulierungen wie z. B. "Call James bei der Arbeit" und "Aufruf Anne auf ihr Handy,", wobei das Wort "Phone" optional ist.</span><span class="sxs-lookup"><span data-stu-id="49d7b-294">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="49d7b-295"><xref:System.Speech.Recognition.GrammarBuilder> und <xref:System.Speech.Recognition.Choices> Objekte werden verwendet, um die Grammatik zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-295"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="49d7b-296">Das Beispiel zeigt die Verwendung von der <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="49d7b-296">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultKey)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (key As SemanticResultKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultKey -&gt; unit" Usage="grammarBuilder.Append key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="49d7b-297">Der semantische Schlüssel, der angefügt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-297">The semantic key to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-298">Fügt der aktuellen Sequenz von Grammatikelementen einen semantischen Schlüssel an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-298">Appends a semantic key to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-299">`key` wird am Ende der aktuellen Sequenz von Elementen hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-299">`key` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-300">Sie anfügen, wenn <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> auf Instanzen einer <xref:System.Speech.Recognition.GrammarBuilder> Objekt, stellen Sie sicher, dass Sie keine doppelte semantische Elemente erstellen, mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt ändern könnten die <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft ein <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-300">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-301">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-301">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="49d7b-302">Im folgende Beispiel ist Teil einer Konsolenanwendung zum Ursprung und Ziel Städten für einen Flug auswählen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-302">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="49d7b-303">Die Anwendung erkennt Ausdrücke an, wie z. B. "Ich möchte über Miami nach Chicago fliegen."</span><span class="sxs-lookup"><span data-stu-id="49d7b-303">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="49d7b-304">Der Handler für die <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> Ereignis verwendet die <xref:System.Speech.Recognition.SemanticResultKey> zum Extrahieren der flughafencode, angegeben der <xref:System.Speech.Recognition.SemanticResultValue> für die Orte Ursprung und Ziel.</span><span class="sxs-lookup"><span data-stu-id="49d7b-304">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create a Choices object and add  cities and airport codes  
        // using SemanticResultValue objects.  
        Choices cities = new Choices();  
        cities.Add(new SemanticResultValue("Chicago", "ORD"));  
        cities.Add(new SemanticResultValue("Boston", "BOS"));  
        cities.Add(new SemanticResultValue("Miami", "MIA"));  
        cities.Add(new SemanticResultValue("Dallas", "DFW"));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.SemanticResultValue value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.SemanticResultValue value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.SemanticResultValue)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (value As SemanticResultValue)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::SemanticResultValue ^ value);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.SemanticResultValue -&gt; unit" Usage="grammarBuilder.Append value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="49d7b-305">Der anzufügende semantische Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-305">The semantic value to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-306">Fügt der aktuellen Sequenz von Grammatikelementen einen semantischen Schlüssel an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-306">Appends a semantic value to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-307">`value` wird am Ende der aktuellen Sequenz von Elementen hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-307">`value` is added to the end of the current sequence of elements.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-308">Sie anfügen, wenn <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> auf Instanzen einer <xref:System.Speech.Recognition.GrammarBuilder> Objekt, stellen Sie sicher, dass Sie keine doppelte semantische Elemente erstellen, mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt ändern könnten die <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft ein <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-308">When you append  <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-309">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-309">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="49d7b-310">Im folgende Beispiel ist Teil einer Konsolenanwendung zum Ursprung und Ziel Städten für einen Flug auswählen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-310">The following example is part of a console application for choosing origin and destination cities for a flight.</span></span> <span data-ttu-id="49d7b-311">Die Anwendung erkennt Ausdrücke an, wie z. B. "Ich möchte über Miami nach Chicago fliegen."</span><span class="sxs-lookup"><span data-stu-id="49d7b-311">The application recognizes phrases such as "I want to fly from Miami to Chicago."</span></span> <span data-ttu-id="49d7b-312">Der Handler für die <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> Ereignis verwendet die <xref:System.Speech.Recognition.SemanticResultKey> zum Extrahieren der flughafencode, angegeben der <xref:System.Speech.Recognition.SemanticResultValue> für die Orte Ursprung und Ziel.</span><span class="sxs-lookup"><span data-stu-id="49d7b-312">The handler for the <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized> event uses the <xref:System.Speech.Recognition.SemanticResultKey> to extract the airport code specified in the <xref:System.Speech.Recognition.SemanticResultValue> for the origin and destination cities.</span></span>  
  
```csharp  
  
using System;  
using System.Speech.Recognition;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create GrammarBuilder objects and append SemanticResultValue objects   
        // that contain cities and airport codes.  
  
        GrammarBuilder chicago = new GrammarBuilder();  
        chicago.Append(new SemanticResultValue("Chicago", "ORD"));  
  
        GrammarBuilder boston = new GrammarBuilder();  
        boston.Append(new SemanticResultValue("Boston", "BOS"));  
  
        GrammarBuilder miami = new GrammarBuilder();  
        miami.Append(new SemanticResultValue("Miami", "MIA"));  
  
        GrammarBuilder dallas = new GrammarBuilder();  
        dallas.Append(new SemanticResultValue("Dallas", "DFW"));  
  
        // Create a Choices object and add the cities using implicit conversion from   
        // SemanticResultValue to GrammarBuilder.  
        Choices cities = new Choices();  
        cities.Add(new Choices(new GrammarBuilder[] { chicago, boston, miami, dallas }));  
  
        // Build the phrase and add SemanticResultKeys.  
        GrammarBuilder chooseCities = new GrammarBuilder();  
        chooseCities.Append("I want to fly from");  
        chooseCities.Append(new SemanticResultKey("origin", cities));  
        chooseCities.Append("to");  
        chooseCities.Append(new SemanticResultKey("destination", cities));  
  
        // Build a Grammar object from the GrammarBuilder.  
        Grammar bookFlight = new Grammar(chooseCities);  
        bookFlight.Name = "Book Flight";  
  
        // Add a handler for the LoadGrammarCompleted event.  
        recognizer.LoadGrammarCompleted +=   
          new EventHandler<LoadGrammarCompletedEventArgs>(recognizer_LoadGrammarCompleted);  
  
        // Add a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=   
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Configure the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Load the grammar object and start recognition.  
        recognizer.LoadGrammarAsync(bookFlight);  
        recognizer.RecognizeAsync();  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
    // Handle the LoadGrammarCompleted event.  
    static void recognizer_LoadGrammarCompleted(object sender, LoadGrammarCompletedEventArgs e)  
    {  
      Console.WriteLine("Grammar loaded: " + e.Grammar.Name);  
      Console.WriteLine();  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("Speech recognized:  " + e.Result.Text);  
      Console.WriteLine();  
      Console.WriteLine("Semantic results:");  
      Console.WriteLine("  The flight origin is " + e.Result.Semantics["origin"].Value);  
      Console.WriteLine("  The flight destination is " + e.Result.Semantics["destination"].Value);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="member this.Append : string -&gt; unit" Usage="grammarBuilder.Append phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="49d7b-313">Die anzufügende Wortsequenz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-313">The sequence of words to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-314">Fügt der aktuellen Sequenz von Grammatikelementen einen Ausdruck an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-314">Appends a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-315">`phrase` wird am Ende der aktuellen Sequenz von Elementen hinzugefügt werden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-315">`phrase` is added to the end of the current sequence of elements.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, valuetype System.Speech.Recognition.SubsetMatchingMode subsetMatchingCriteria) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Speech.Recognition.SubsetMatchingMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, subsetMatchingCriteria As SubsetMatchingMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, System::Speech::Recognition::SubsetMatchingMode subsetMatchingCriteria);" />
      <MemberSignature Language="F#" Value="member this.Append : string * System.Speech.Recognition.SubsetMatchingMode -&gt; unit" Usage="grammarBuilder.Append (phrase, subsetMatchingCriteria)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="subsetMatchingCriteria" Type="System.Speech.Recognition.SubsetMatchingMode" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="49d7b-316">Die anzufügende Wortsequenz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-316">The sequence of words to append.</span>
          </span>
        </param>
        <param name="subsetMatchingCriteria">
          <span data-ttu-id="49d7b-317">Der entsprechende Modus, den die Grammatik verwendet, um den Ausdruck zu erkennen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-317">The matching mode the grammar uses to recognize the phrase.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-318">Fügt der aktuellen Sequenz von Grammatikelementen ein Element für eine Teilmenge eines Ausdrucks an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-318">Appends an element for a subset of a phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-319">Das Element der Teilmenge wird am Ende der aktuellen Sequenz von Elementen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-319">The subset element is added to the end of the current sequence of elements.</span></span> <span data-ttu-id="49d7b-320">Weitere Informationen zum Erstellen einer spracherkennungsgrammatik Verwendung von Zeichenfolgen finden Sie unter [Verwendung von Zeichenfolgen zum Erstellen einer "grammarbuilder" Grammatik](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span><span class="sxs-lookup"><span data-stu-id="49d7b-320">For more information about building a speech recognition grammar using strings, see [Using Strings to Create a GrammarBuilder Grammar](http://msdn.microsoft.com/library/0d87b445-a342-4369-9b3f-91d07fd7e114).</span></span>  
  
 <span data-ttu-id="49d7b-321">Ausführliche Informationen zur Verwendung der übereinstimmenden Modi Teilmenge finden Sie unter <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-321">For detailed information on the use of subset matching modes, see <xref:System.Speech.Recognition.SubsetMatchingMode?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-322">Das folgende Beispiel erstellt eine spracherkennungsgrammatik für jede <xref:System.Speech.Recognition.SubsetMatchingMode> Wert.</span><span class="sxs-lookup"><span data-stu-id="49d7b-322">The following example creates a speech recognition grammar for each <xref:System.Speech.Recognition.SubsetMatchingMode> value.</span></span> <span data-ttu-id="49d7b-323">Z. B. die generierten Grammatik `OrderedSubset` erkennt die Ausdrücke, "drei vier fünf" und "eine drei fünf", und die Grammatik `Subsequence` erkennt den Ausdruck "drei vier fünf", aber nicht den Ausdruck, "eine drei fünf".</span><span class="sxs-lookup"><span data-stu-id="49d7b-323">For example, the generated grammar `OrderedSubset` recognizes the phrases, "three four five" and "one three five", and the grammar `Subsequence` recognizes the phrase "three four five", but not the phrase, "one three five".</span></span>  
  
```csharp  
  
private Grammar[] CreateSubsetMatchTest()  
{  
  List<Grammar> grammars = new List<Grammar>(4);  
  
  string phrase = "one two three four five six";  
  foreach (SubsetMatchingMode mode in  
    Enum.GetValues(typeof(SubsetMatchingMode)))  
  {  
    GrammarBuilder gb = new GrammarBuilder();  
    gb.Append(phrase, mode);  
  
    Grammar grammar = new Grammar(gb);  
    grammar.Name = mode.ToString();  
    grammars.Add(grammar);  
  }  
  
  return grammars.ToArray();  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (System.Speech.Recognition.GrammarBuilder builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(class System.Speech.Recognition.GrammarBuilder builder, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.GrammarBuilder,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (builder As GrammarBuilder, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::Speech::Recognition::GrammarBuilder ^ builder, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : System.Speech.Recognition.GrammarBuilder * int * int -&gt; unit" Usage="grammarBuilder.Append (builder, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="49d7b-324">Das wiederholte anzufügende Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-324">The repeated grammar element to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="49d7b-325">Die minimale Wiederholungsrate für eine Übereinstimmung der Eingabe mit dem durch <c>builder</c> definierten Element, nach der eine Übereinstimmung anerkannt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-325">The minimum number of times that input matching the element defined by <c>builder</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="49d7b-326">Die maximale Wiederholungsrate für eine Übereinstimmung der Eingabe mit dem durch <c>builder</c> definierten Element, nach der eine Übereinstimmung anerkannt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-326">The maximum number of times that input matching the element defined by <c>builder</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-327">Fügt der aktuellen Sequenz von Grammatikelementen eine wiederholte Grammatik an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-327">Appends a repeated grammar element to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-328">Der Wert des `minRepeat` muss größer als oder gleich 0 und kleiner oder gleich dem Wert des `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="49d7b-328">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-329">Wenn Sie anfügen <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> -Instanzen zu eine <xref:System.Speech.Recognition.GrammarBuilder> Objekt, stellen Sie sicher, dass Sie keine doppelten semantische Elemente erstellen, mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt Ändern der <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft eine <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-329">When you append <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances to a <xref:System.Speech.Recognition.GrammarBuilder> object, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-330">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-330">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
   
  
## Examples  
 <span data-ttu-id="49d7b-331">Das folgende Beispiel erstellt eine spracherkennungsgrammatik für formulierungen wie z. B. "Call James bei der Arbeit" und "Aufruf Anne auf ihr Handy,", wobei das Wort "Phone" optional ist.</span><span class="sxs-lookup"><span data-stu-id="49d7b-331">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="49d7b-332"><xref:System.Speech.Recognition.GrammarBuilder> und <xref:System.Speech.Recognition.Choices> Objekte werden verwendet, um die Grammatik zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-332"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="49d7b-333">Das Beispiel zeigt die Verwendung von der <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="49d7b-333">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <Member MemberName="Append">
      <MemberSignature Language="C#" Value="public void Append (string phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Append(string phrase, int32 minRepeat, int32 maxRepeat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.Append(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Append (phrase As String, minRepeat As Integer, maxRepeat As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Append(System::String ^ phrase, int minRepeat, int maxRepeat);" />
      <MemberSignature Language="F#" Value="member this.Append : string * int * int -&gt; unit" Usage="grammarBuilder.Append (phrase, minRepeat, maxRepeat)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="minRepeat" Type="System.Int32" />
        <Parameter Name="maxRepeat" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="49d7b-334">Die wiederholte anzufügende Wortsequenz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-334">The repeated sequence of words to append.</span>
          </span>
        </param>
        <param name="minRepeat">
          <span data-ttu-id="49d7b-335">Die minimale Wiederholungsrate für eine Übereinstimmung der Eingabe mit <c>phrase</c>, nach der eine Übereinstimmung anerkannt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-335">The minimum number of times that input matching <c>phrase</c> must occur to constitute a match.</span>
          </span>
        </param>
        <param name="maxRepeat">
          <span data-ttu-id="49d7b-336">Die maximale Wiederholungsrate für eine Übereinstimmung der Eingabe mit <c>phrase</c>, nach der eine Übereinstimmung anerkannt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-336">The maximum number of times that input matching <c>phrase</c> can occur to constitute a match.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-337">Fügt der aktuellen Sequenz von Grammatikelementen einen wiederholten Ausdruck an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-337">Appends a repeated phrase to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-338">Der Wert des `minRepeat` muss größer als oder gleich 0 und kleiner oder gleich dem Wert des `maxRepeat`.</span><span class="sxs-lookup"><span data-stu-id="49d7b-338">The value of `minRepeat` must be greater than or equal to 0 and less than or equal to the value of `maxRepeat`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-339">Das folgende Beispiel erstellt eine spracherkennungsgrammatik für formulierungen wie z. B. "Call James bei der Arbeit" und "Aufruf Anne auf ihr Handy,", wobei das Wort "Phone" optional ist.</span><span class="sxs-lookup"><span data-stu-id="49d7b-339">The following example creates a speech recognition grammar for phrases such as "Call James at work" and "Call Anne on her cell phone", where the word "phone" is optional.</span></span> <span data-ttu-id="49d7b-340"><xref:System.Speech.Recognition.GrammarBuilder> und <xref:System.Speech.Recognition.Choices> Objekte werden verwendet, um die Grammatik zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-340"><xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects are used to construct the grammar.</span></span> <span data-ttu-id="49d7b-341">Das Beispiel zeigt die Verwendung von der <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="49d7b-341">The example highlights the use of the <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> method.</span></span>  
  
```csharp  
  
public static Grammar CreatePhonePhrase()  
{  
  // Create alternatives for person names, locations, devices, and pronouns.  
  Choices personChoice = new Choices(new string[] {"Anne", "James", "Mary", "Sam"});  
  Choices locationChoice = new Choices(new string[] {"home", "work"});  
  Choices deviceChoice = new Choices(new string[] {"home", "work", "cell"});  
  Choices pronounChoice = new Choices(new string[] {"his", "her"});  
  
  // Create a phrase for the receiving device, which optionally contains the word "phone".  
  GrammarBuilder devicePhrase = new GrammarBuilder(pronounChoice);  
  devicePhrase.Append(deviceChoice);  
  devicePhrase.Append("phone", 0, 1);  
  
  // Create alternatives for phrases specifying a device or a location.  
  GrammarBuilder atLocation = new GrammarBuilder("at");  
  atLocation.Append(locationChoice);  
  
  GrammarBuilder onDevice = new GrammarBuilder("on");  
  onDevice.Append(devicePhrase);  
  
  Choices howChoice = new Choices(new GrammarBuilder[] {atLocation, onDevice});  
  
  // Build the final phrase.  
  GrammarBuilder callWho = new GrammarBuilder("Call");  
  callWho.Append(personChoice);  
  callWho.Append(howChoice);  
  
  // Create the Grammar object.  
  Grammar callGrammar = new Grammar(callWho);  
  callGrammar.Name = "Call Grammar";  
  
  return callGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendDictation">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49d7b-342">Fügt der aktuellen Sequenz von Grammatikelementen eine Diktatgrammatik an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-342">Appends a dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-343">Die <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> Methoden ermöglichen es Ihnen als eine Regel, um die anzufügende eine diktatgrammatik einen <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-343">The <xref:System.Speech.Recognition.GrammarBuilder.AppendDictation%2A> methods allow you to append a dictation grammar as a rule to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="49d7b-344">Weitere Informationen zu den Diktatmodus Grammatiken, finden Sie unter <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-344">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation();" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : unit -&gt; unit" Usage="grammarBuilder.AppendDictation " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49d7b-345">Fügt der aktuellen Sequenz von Grammatikelementen eine Standarddiktatgrammatik an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-345">Appends the default dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-346">Weitere Informationen zu den Diktatmodus Grammatiken, finden Sie unter <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-346">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-347">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, die diktieren enthält.</span><span class="sxs-lookup"><span data-stu-id="49d7b-347">The following example creates a speech recognition grammar that incorporates dictation.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation();  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendDictation">
      <MemberSignature Language="C#" Value="public void AppendDictation (string category);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendDictation(string category) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendDictation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendDictation (category As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendDictation(System::String ^ category);" />
      <MemberSignature Language="F#" Value="member this.AppendDictation : string -&gt; unit" Usage="grammarBuilder.AppendDictation category" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="category" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="category">
          <span data-ttu-id="49d7b-348">Die Kategorie der anzufügenden Diktatgrammatik.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-348">The category of the dictation grammar to append.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-349">Fügt eine angegebene Diktatgrammatik der aktuellen Sequenz von Grammatikelementen an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-349">Appends the specified dictation grammar to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-350">Legen Sie zum verwenden die diktatgrammatik Rechtschreibung `category` zu `spelling`.</span><span class="sxs-lookup"><span data-stu-id="49d7b-350">To use the spelling dictation grammar, set `category` to `spelling`.</span></span>  
  
 <span data-ttu-id="49d7b-351">Weitere Informationen zu den Diktatmodus Grammatiken, finden Sie unter <xref:System.Speech.Recognition.DictationGrammar>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-351">For more information on dictation grammars, see <xref:System.Speech.Recognition.DictationGrammar>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-352">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, die Regeln für die Rechtschreibprüfung Diktat Grammatik enthält.</span><span class="sxs-lookup"><span data-stu-id="49d7b-352">The following example creates a speech recognition grammar that incorporates the spelling dictation grammar rules.</span></span>  
  
```csharp  
  
GrammarBuilder builder = new GrammarBuilder();  
builder.Append("begin");  
builder.AppendDictation("spelling");  
builder.Append("end");  
Grammar grammarWithDictation = new Grammar(builder);  
grammarWithDictation.Name = "Grammar with Dictation";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DictationGrammar" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AppendRuleReference">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49d7b-353">Fügt der aktuellen Sequenz von Grammatikelementen eine Grammatikdatei oder eine Grammatikregel an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-353">Appends a grammar file or a grammar rule to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-354">Die <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> Methoden können eine Grammatikdatei oder eine Grammatikregel aus einer Datei angefügt werden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-354">The <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> methods can append a grammar file or a grammar rule from a file.</span></span> <span data-ttu-id="49d7b-355">Diese Methoden ermöglichen es Anwendungen zu verwenden, der Grammatikregeln vorab bereitgestellt oder öffentlich verfügbar gemacht.</span><span class="sxs-lookup"><span data-stu-id="49d7b-355">These methods allow applications to make use of pre-deployed or publicly available grammar rules.</span></span> <span data-ttu-id="49d7b-356">Die Anwendung muss über Lesezugriff auf den Speicherort des angegebenen Grammatikdateien verfügen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-356">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="49d7b-357">Diese Methoden können eine spracherkennungsgrammatik aus den folgenden Formaten lesen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-357">These methods can read a speech recognition grammar from the following formats.</span></span>  
  
-   <span data-ttu-id="49d7b-358">XML-Formatdateien, die der W3C entsprechen [Speech Recognition Grammar Specification (SRGS), Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)</span><span class="sxs-lookup"><span data-stu-id="49d7b-358">XML-format files that conform to the W3C [Speech Recognition Grammar Specification (SRGS) Version 1.0](http://go.microsoft.com/fwlink/?LinkId=201761)</span></span>  
  
-   <span data-ttu-id="49d7b-359">Binärdateien, die das Microsoft Speech Recognition Grammatik Binärformat (.cfg-Erweiterung) entsprechen</span><span class="sxs-lookup"><span data-stu-id="49d7b-359">Binary files that conform to the Microsoft Speech Recognition Grammar Binary Format (.cfg file extension)</span></span>  
  
 <span data-ttu-id="49d7b-360">Kompiliert eine SRGS XML-Format kann Grammatikdatei an, eine binäre Grammatikdatei mit der .cfg-Erweiterung sucht nach einer Übereinstimmung, belegter verkürzen insbesondere dann, wenn die Grammatik der Erkennung einer großen Anzahl von Wörtern und Ausdrücken ist erforderlich.</span><span class="sxs-lookup"><span data-stu-id="49d7b-360">Compiling an XML-format SRGS grammar file to a binary grammar file with the .cfg extension can reduce the time consumed by searches for a match, especially if the grammar requires recognition of a large number of words and phrases.</span></span> <span data-ttu-id="49d7b-361">Informationen zum Kompilieren von SRGS-Grammatiken in das binäre CFG-Format finden Sie unter <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-361">For information about compiling SRGS grammars to the CFG binary format, see <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string -&gt; unit" Usage="grammarBuilder.AppendRuleReference path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="49d7b-362">Der Pfad oder der URI (Universal Resource Identifier) der Datei, die eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-362">The path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-363">Fügt der aktuellen Sequenz von Grammatikelementen eine Grammatikdefinitionsdatei an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-363">Appends a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-364">Der URI, den der `path` Argument kann lokal oder remote sein.</span><span class="sxs-lookup"><span data-stu-id="49d7b-364">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="49d7b-365">Die Anwendung muss über Lesezugriff auf den Speicherort des angegebenen Grammatikdateien verfügen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-365">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="49d7b-366">Eine Darstellung des W3C Speech Recognition Grammar Specification (SRGS), kann eine Stammregel definieren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-366">A W3C Speech Recognition Grammar Specification (SRGS) representation can define a root rule.</span></span> <span data-ttu-id="49d7b-367">Diese Methode fügt die Grammatik ab dessen Stammverzeichnis in Hunderterschritten, damit der aktuellen Sequenz von grammatikelementen an.</span><span class="sxs-lookup"><span data-stu-id="49d7b-367">This method appends the grammar, beginning with its root rule, to the current sequence of grammar elements.</span></span> <span data-ttu-id="49d7b-368">Um eine bestimmte Grammatikregel anzufügen, verwenden Sie die <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="49d7b-368">To append a specific grammar rule, use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-369">Das folgende C#-Beispiel erstellt eine spracherkennungsgrammatik, die die Regel verwendet `Cities` in einer lokalen Datei SRGS cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="49d7b-369">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="49d7b-370">Der Inhalt der Datei cities.grxml wird unterhalb der C#-Codebeispiel wird angezeigt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-370">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar1()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.AppendRuleReference("file://c:/temp/cities.grxml");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 1";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-16" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendRuleReference">
      <MemberSignature Language="C#" Value="public void AppendRuleReference (string path, string rule);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendRuleReference(string path, string rule) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendRuleReference (path As String, rule As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendRuleReference(System::String ^ path, System::String ^ rule);" />
      <MemberSignature Language="F#" Value="member this.AppendRuleReference : string * string -&gt; unit" Usage="grammarBuilder.AppendRuleReference (path, rule)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rule" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="49d7b-371">Der Dateipfad oder der URI (Universal Resource Identifier) der Datei, der eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-371">The file path or Universal Resource Identifier (URI) of the file that describes a speech recognition grammar in a supported format.</span>
          </span>
        </param>
        <param name="rule">
          <span data-ttu-id="49d7b-372">Der Bezeichner der Regel, die anzuwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikdatei anzuwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-372">The identifier of the rule to append, or <see langword="null" /> to append the default root rule of the grammar file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-373">Fügt die angegebene Regel einer Grammatikdefinitionsdatei der aktuellen Sequenz von Grammatikelementen an.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-373">Appends the specified rule of a grammar definition file to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-374">Der URI, den der `path` Argument kann lokal oder remote sein.</span><span class="sxs-lookup"><span data-stu-id="49d7b-374">The URI provided by the `path` argument may be local or remote.</span></span> <span data-ttu-id="49d7b-375">Die Anwendung muss über Lesezugriff auf den Speicherort des angegebenen Grammatikdateien verfügen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-375">The application must have read access to the location of specified grammar files.</span></span>  
  
 <span data-ttu-id="49d7b-376">Sie können die Verwendung der <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> -Methode, um eine Grammatik beginnend mit der Stammregel.</span><span class="sxs-lookup"><span data-stu-id="49d7b-376">You can use the use the <xref:System.Speech.Recognition.GrammarBuilder.AppendRuleReference%2A> method to append a grammar file beginning with its root rule.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-377">Das folgende C#-Beispiel erstellt eine spracherkennungsgrammatik, die die Regel verwendet `Cities` in einer lokalen Datei SRGS cities.grxml.</span><span class="sxs-lookup"><span data-stu-id="49d7b-377">The following C# example creates a speech recognition grammar that uses the rule named `Cities` in a local SRGS file, cities.grxml.</span></span> <span data-ttu-id="49d7b-378">Der Inhalt der Datei cities.grxml wird unterhalb der C#-Codebeispiel wird angezeigt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-378">The content of the cities.grxml file appears below the C# code example.</span></span>  
  
```csharp  
  
private static Grammar CreateCitiesGrammar2()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  builder.Append("Does");  
  builder.AppendRuleReference(@"c:\temp\cities.grxml", "Cities");  
  builder.Append("have a shuttle");  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.grxml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
        <altmember cref="T:System.Speech.Recognition.Grammar" />
      </Docs>
    </Member>
    <Member MemberName="AppendWildcard">
      <MemberSignature Language="C#" Value="public void AppendWildcard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AppendWildcard() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.AppendWildcard" />
      <MemberSignature Language="VB.NET" Value="Public Sub AppendWildcard ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AppendWildcard();" />
      <MemberSignature Language="F#" Value="member this.AppendWildcard : unit -&gt; unit" Usage="grammarBuilder.AppendWildcard " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="49d7b-379">Fügt ein Anerkennungsgrammatikelement an, das jeder Eingabe in die aktuelle Sequenz von Grammatikelementen entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-379">Appends a recognition grammar element that matches any input to the current sequence of grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-380">Das Platzhalterelement wird am Ende der aktuellen Sequenz von Elementen hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-380">The wildcard element is added to the end of the current sequence of elements.</span></span>  
  
 <span data-ttu-id="49d7b-381">Das Platzhalterelement entspricht einem beliebigen gesprochene Wort.</span><span class="sxs-lookup"><span data-stu-id="49d7b-381">The wildcard element matches any spoken word.</span></span> <span data-ttu-id="49d7b-382">Er entspricht nicht Hintergrundgeräusche oder Ruhe.</span><span class="sxs-lookup"><span data-stu-id="49d7b-382">It does not match background noise or silence.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-383">Das folgende Beispiel erstellt eine Grammatik, die Kennwort als Platzhalter akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="49d7b-383">The following example creates a grammar that accepts password input as a wildcard.</span></span> <span data-ttu-id="49d7b-384">Im Beispiel wird eine <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> -Ereignishandler der Grammatik, die überprüft, die Kennworteingabe ob.</span><span class="sxs-lookup"><span data-stu-id="49d7b-384">The example attaches a <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=nameWithType> event handler to the grammar that validates the password input.</span></span>  
  
```csharp  
private Grammar CreatePasswordGrammar()  
{  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey passwordKey =  
    new SemanticResultKey("Password", wildcardBuilder);  
  
  GrammarBuilder passwordBuilder =  
    new GrammarBuilder("My Password is");  
  passwordBuilder.Append(passwordKey);  
  
  Grammar passwordGrammar = new Grammar(passwordBuilder);  
  passwordGrammar.Name = "Password input";  
  
  passwordGrammar.SpeechRecognized +=  
    new EventHandler<SpeechRecognizedEventArgs>(  
      PasswordInputHandler);  
  
  return passwordGrammar;  
}  
  
// Handle the SpeechRecognized event for the password grammar.  
private void PasswordInputHandler(object sender, SpeechRecognizedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  RecognitionResult result = e.Result;  
  SemanticValue semantics = e.Result.Semantics;  
  
  if (semantics.ContainsKey("Password"))  
  {  
    RecognizedAudio passwordAudio =  
      result.GetAudioForWordRange(  
        result.Words[3], result.Words[result.Words.Count - 1]);  
  
    if (IsValidPassword(passwordAudio))  
    {  
      Console.WriteLine("Password accepted.");  
  
      // Add code to handle a valid password here.  
    }  
    else  
    {  
      Console.WriteLine("Invalid password.");  
  
      // Add code to handle an invalid password here.  
    }  
  }  
}  
  
// Validate the password input.   
private bool IsValidPassword(RecognizedAudio passwordAudio)  
{  
  Console.WriteLine("Validating password.");  
  
  // Add password validation code here.  
  
  return false;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Append(System.Speech.Recognition.Choices)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendDictation" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.AppendRuleReference(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Culture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo Culture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo Culture" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberSignature Language="VB.NET" Value="Public Property Culture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ Culture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Culture : System.Globalization.CultureInfo with get, set" Usage="System.Speech.Recognition.GrammarBuilder.Culture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49d7b-385">Ruft die Kultur der Spracherkennungsgrammatik auf oder legt diese fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-385">Gets or sets the culture of the speech recognition grammar.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49d7b-386">Die Kultur des <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-386">The culture of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
          <span data-ttu-id="49d7b-387">Der Standard ist die <see cref="P:System.Threading.Thread.CurrentUICulture" />-Eigenschaft des ausführenden Threads.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-387">The default is the executing thread's <see cref="P:System.Threading.Thread.CurrentUICulture" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-388">Die <xref:System.Speech.Recognition.Grammar.%23ctor%2A> -Konstruktor erstellt ein <xref:System.Speech.Recognition.Grammar> -Objekt, das von einer Spracherkennung aus der entsprechenden Kultur verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="49d7b-388">The <xref:System.Speech.Recognition.Grammar.%23ctor%2A> constructor creates a <xref:System.Speech.Recognition.Grammar> object that can be used by a speech recognizer of the corresponding culture.</span></span> <span data-ttu-id="49d7b-389">Nur die <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> Eigenschaft der <xref:System.Speech.Recognition.GrammarBuilder> , wie der Parameter an den Konstruktor der Grammatik, zum Festlegen der Kultur, die sich ergebende spracherkennungsgrammatik verwendet wird bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="49d7b-389">Only the <xref:System.Speech.Recognition.GrammarBuilder.Culture%2A> property of the <xref:System.Speech.Recognition.GrammarBuilder> that is provided as the parameter to the Grammar constructor is used to set the culture of the resulting speech recognition grammar.</span></span>  
  
 <span data-ttu-id="49d7b-390">Microsoft Windows und die "System.Speech"-API akzeptiert alle gültige Sprache / Land-Codes.</span><span class="sxs-lookup"><span data-stu-id="49d7b-390">Microsoft Windows and the System.Speech API accept all valid language-country codes.</span></span> <span data-ttu-id="49d7b-391">Zum Ausführen der Spracherkennung, die mit der Sprache, die im angegebenen die `Culture` -Eigenschaft, einer spracherkennungs-Engine, die unterstützt werden, dass Sprache / Land-Code installiert werden muss.</span><span class="sxs-lookup"><span data-stu-id="49d7b-391">To perform speech recognition using the language specified in the `Culture` property, a speech recognition engine that supports that language-country code must be installed.</span></span> <span data-ttu-id="49d7b-392">Spracherkennungsmoduls an, die mit den im Lieferumfang von Microsoft Windows 7 arbeiten Sie mit der folgenden Sprache / Land-Codes.</span><span class="sxs-lookup"><span data-stu-id="49d7b-392">The speech recognition engines that shipped with Microsoft Windows 7 work with the following language-country codes.</span></span>  
  
-   <span data-ttu-id="49d7b-393">En-GB.</span><span class="sxs-lookup"><span data-stu-id="49d7b-393">en-GB.</span></span> <span data-ttu-id="49d7b-394">Englisch (Vereinigtes Königreich)</span><span class="sxs-lookup"><span data-stu-id="49d7b-394">English (United Kingdom)</span></span>  
  
-   <span data-ttu-id="49d7b-395">En-US.</span><span class="sxs-lookup"><span data-stu-id="49d7b-395">en-US.</span></span> <span data-ttu-id="49d7b-396">Englisch (USA)</span><span class="sxs-lookup"><span data-stu-id="49d7b-396">English (United States)</span></span>  
  
-   <span data-ttu-id="49d7b-397">de-DE.</span><span class="sxs-lookup"><span data-stu-id="49d7b-397">de-DE.</span></span> <span data-ttu-id="49d7b-398">Deutsch (Deutschland)</span><span class="sxs-lookup"><span data-stu-id="49d7b-398">German (Germany)</span></span>  
  
-   <span data-ttu-id="49d7b-399">es-ES.</span><span class="sxs-lookup"><span data-stu-id="49d7b-399">es-ES.</span></span> <span data-ttu-id="49d7b-400">Spanisch (Spanien)</span><span class="sxs-lookup"><span data-stu-id="49d7b-400">Spanish (Spain)</span></span>  
  
-   <span data-ttu-id="49d7b-401">fr-FR.</span><span class="sxs-lookup"><span data-stu-id="49d7b-401">fr-FR.</span></span> <span data-ttu-id="49d7b-402">Französisch (Frankreich)</span><span class="sxs-lookup"><span data-stu-id="49d7b-402">French (France)</span></span>  
  
-   <span data-ttu-id="49d7b-403">ja-JP.</span><span class="sxs-lookup"><span data-stu-id="49d7b-403">ja-JP.</span></span> <span data-ttu-id="49d7b-404">Japanisch (Japan)</span><span class="sxs-lookup"><span data-stu-id="49d7b-404">Japanese (Japan)</span></span>  
  
-   <span data-ttu-id="49d7b-405">zh-CN.</span><span class="sxs-lookup"><span data-stu-id="49d7b-405">zh-CN.</span></span> <span data-ttu-id="49d7b-406">Chinesisch (China)</span><span class="sxs-lookup"><span data-stu-id="49d7b-406">Chinese (China)</span></span>  
  
-   <span data-ttu-id="49d7b-407">Zh-TW.</span><span class="sxs-lookup"><span data-stu-id="49d7b-407">zh-TW.</span></span> <span data-ttu-id="49d7b-408">Chinesisch (Taiwan)</span><span class="sxs-lookup"><span data-stu-id="49d7b-408">Chinese (Taiwan)</span></span>  
  
 <span data-ttu-id="49d7b-409">Zwei Buchstaben bestehenden Sprache Fehlercodes, wie z. B. "En", "fr", oder "es" sind ebenfalls zulässig.</span><span class="sxs-lookup"><span data-stu-id="49d7b-409">Two-letter language codes such as "en", "fr", or "es" are also permitted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="49d7b-410">Das folgende Beispiel erstellt eine spracherkennungsgrammatik für das bestellen einer Pizza mit bis zu vier Beläge.</span><span class="sxs-lookup"><span data-stu-id="49d7b-410">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="49d7b-411">Insbesondere wird die <xref:System.Speech.Recognition.GrammarBuilder> des Objekts zu verwendende Kultur Englisch (USA).</span><span class="sxs-lookup"><span data-stu-id="49d7b-411">It specifically sets the <xref:System.Speech.Recognition.GrammarBuilder> object's culture to English (United States).</span></span>  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.Grammar" />
        <altmember cref="T:System.Speech.Recognition.RecognizerInfo" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName="DebugShowPhrases">
      <MemberSignature Language="C#" Value="public string DebugShowPhrases { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DebugShowPhrases" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DebugShowPhrases As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DebugShowPhrases { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DebugShowPhrases : string" Usage="System.Speech.Recognition.GrammarBuilder.DebugShowPhrases" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="49d7b-412">Ruft eine Zeichenfolge ab, die den Inhalt und die Struktur der Grammatik angezeigt, die in <see cref="T:System.Speech.Recognition.GrammarBuilder" /> enthalten ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-412">Gets a string that shows the contents and structure of the grammar contained by the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="49d7b-413">Der aktuelle Inhalt und die aktuelle Struktur von <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-413">The current content and structure of the <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="49d7b-414">Das folgende Beispiel erstellt eine spracherkennungsgrammatik für das bestellen einer Pizza mit bis zu vier Beläge.</span><span class="sxs-lookup"><span data-stu-id="49d7b-414">The following example creates a speech recognition grammar for ordering a pizza with up to four toppings.</span></span> <span data-ttu-id="49d7b-415">Er schreibt den Status der <xref:System.Speech.Recognition.GrammarBuilder> an die Konsole vor dem Erstellen der Grammatik.</span><span class="sxs-lookup"><span data-stu-id="49d7b-415">It writes the status of the <xref:System.Speech.Recognition.GrammarBuilder> to the console before creating the grammar.</span></span> <span data-ttu-id="49d7b-416">Diese Methode wird die folgende Ausgabe generiert:</span><span class="sxs-lookup"><span data-stu-id="49d7b-416">This method generates the following output:</span></span>  
  
-   `GrammarBuilder status: I would like a [cheese,mushroom,tomato,onion,anchovy,chic ken,pepperoni] and [cheese,mushroom,tomato,onion,anchovy,chicken,pepperoni] pizza`  
  
```csharp  
  
private static Grammar CreatePizzaGrammar()  
{  
  
  // Create a Choices object with alternatives for toppings.  
  Choices toppings = new Choices(new string[] {  
    "cheese", "mushroom", "tomato", "onion",  
    "anchovy", "chicken", "pepperoni"});  
  
  // Create a GrammarBuilder and append the Choices object.  
  GrammarBuilder andToppings = new GrammarBuilder("and", 0, 1);  
  andToppings.Append(toppings);  
  
  // Construct the phrase.  
  GrammarBuilder gb = new GrammarBuilder("I would like a", 0, 1);  
  gb.Append(toppings);  
  gb.Append(new GrammarBuilder(andToppings, 0, 3));  
  gb.Append("pizza");  
  
  // Write the contents and structure of the GrammarBuilder to the console.  
  Console.WriteLine("Grammar content and structure: {0}", gb.DebugShowPhrases);  
  
  // Create the Grammar from the GrammarBuilder.  
  Grammar grammar = new Grammar(gb);  
  grammar.Name = "Pizza Order";  
  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361640(v%3doffice.14)">
          <span data-ttu-id="49d7b-417">Mithilfe von "grammarbuilder" Grammatiken erstellen</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-417">Create Grammars Using GrammarBuilder</span>
          </span>
        </related>
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Addition">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49d7b-418">Erstellt einen neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der einer Sequenz von zwei Grammatikelementen entspricht.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-418">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that corresponds to a sequence of two grammar elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-419">Die Reihenfolge der Operanden bestimmt die Reihenfolge der Elemente in der neuen <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-419">The order of the operands determines the order of the elements in the new <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-420">Vorsicht wird empfohlen, beim Kombinieren von <xref:System.Speech.Recognition.Choices> oder <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> Instanzen mit anderen grammatikelementen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-420">Caution is recommended when combining <xref:System.Speech.Recognition.Choices> or <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances with other grammar elements.</span></span> <span data-ttu-id="49d7b-421">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn eine spracherkennungsgrammatik zu verwenden, die enthält doppelte semantische Elemente mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt den Wert des gleichen Elements semantische ändern könnten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-421">The speech recognizer can throw an exception when using a speech recognition grammar that contains duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the value of the same semantic element.</span></span> 
  
 <span data-ttu-id="49d7b-422">Weitere Informationen zum Erstellen und Verwenden von spracherkennungsgrammatiken finden Sie unter [Spracherkennung](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) und ["grammarbuilder" Grammatiken erstellen](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span><span class="sxs-lookup"><span data-stu-id="49d7b-422">For more information about building and using speech recognition grammars, see [Speech Recognition](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)) and [Creating GrammarBuilder Grammars](http://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.Choices choices, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.Choices choices, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::Choices ^ choices, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.Choices * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="choices + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="49d7b-423">Das erste Grammatikelement, das einen Satz von Alternativen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-423">The first grammar element, which represents a set of alternatives.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="49d7b-424">Das zweite Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-424">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-425">Erstellt einen neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der ein <see cref="T:System.Speech.Recognition.Choices" />-Objekt gefolgt von einem <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-425">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.Choices" /> object followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-426">Gibt einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="choices" />-Parameters zurück, gefolgt vom Parameter <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-426">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="choices" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-427"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt die Konvertierungen von den folgenden Klassen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-427"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="49d7b-428">Diese Methode akzeptiert, die für die oben aufgeführten Objekte die `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="49d7b-428">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="49d7b-429">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-429">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-430">Wenn Sie kombinieren <xref:System.Speech.Recognition.Choices> und <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> -Instanzen, stellen Sie sicher, dass Sie keine doppelte semantische Elemente erstellen, mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt ändern könnten die <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft eine <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-430">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-431">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-431">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="49d7b-432">Die entsprechende Methode für diesen Operator ist <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="49d7b-432">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.Choices%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.Choices)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="49d7b-433">Das erste Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-433">The first grammar element.</span>
          </span>
        </param>
        <param name="choices">
          <span data-ttu-id="49d7b-434">Das zweite Grammatikelement, das einen Satz von alternativen Elementen darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-434">The second grammar element, which represents a set of alternative elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-435">Erstellt ein neues <see cref="T:System.Speech.Recognition.GrammarBuilder" />, das einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> gefolgt von einem <see cref="T:System.Speech.Recognition.Choices" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-435">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a <see cref="T:System.Speech.Recognition.Choices" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-436">Gibt einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="builder" />-Parameters zurück, gefolgt vom Parameter <paramref name="choices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-436">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="choices" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-437"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt die Konvertierungen von den folgenden Klassen:</span><span class="sxs-lookup"><span data-stu-id="49d7b-437"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes:</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="49d7b-438">Diese Methode akzeptiert, die für die oben aufgeführten Objekte die `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="49d7b-438">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="49d7b-439">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-439">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-440">Wenn Sie kombinieren <xref:System.Speech.Recognition.Choices> und <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> -Instanzen, stellen Sie sicher, dass Sie keine doppelte semantische Elemente erstellen, mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt ändern könnten die <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft eine <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-440">When you combine <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-441">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-441">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="49d7b-442">Die entsprechende Methode für diesen Operator ist <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="49d7b-442">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="49d7b-443">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, das die zwei Ausdrücke, erkennen können "Stellen Hintergrund *Farbe*" und "Festlegen des Hintergrunds auf *Farbe*", wobei *Farbe* wird aus einem Satz von Farben ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-443">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="49d7b-444">Verschiedene Typen werden verwendet, um die endgültige Grammatik, z. B. erstellen [Zeichenfolge](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, und <xref:System.Speech.Recognition.GrammarBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="49d7b-444">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the grammar from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder1, System.Speech.Recognition.GrammarBuilder builder2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder1, class System.Speech.Recognition.GrammarBuilder builder2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder1 As GrammarBuilder, builder2 As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder1, System::Speech::Recognition::GrammarBuilder ^ builder2);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder1 + builder2" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder1" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="builder2" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder1">
          <span data-ttu-id="49d7b-445">Das erste Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-445">The first grammar element.</span>
          </span>
        </param>
        <param name="builder2">
          <span data-ttu-id="49d7b-446">Das zweite Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-446">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-447">Erstellt einen neuen <see cref="T:System.Speech.Recognition.GrammarBuilder" />, der eine Sequenz aus zwei <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-447">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a sequence of two <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-448">Gibt einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="builder1" />-Parameters zurück, gefolgt vom Parameter <paramref name="builder2" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-448">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder1" /> parameter followed by the <paramref name="builder2" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-449"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt die Konvertierungen von den folgenden Klassen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-449"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="49d7b-450">Diese Methode akzeptiert, die für die oben aufgeführten Objekte die `builder1` und `builder2` Parameter.</span><span class="sxs-lookup"><span data-stu-id="49d7b-450">This method accepts the objects listed above for the `builder1` and `builder2` parameters.</span></span> <span data-ttu-id="49d7b-451">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-451">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="49d7b-452">Wenn Sie kombinieren <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die enthalten <xref:System.Speech.Recognition.SemanticResultValue> oder <xref:System.Speech.Recognition.SemanticResultKey> -Instanzen, stellen Sie sicher, dass Sie keine doppelte semantische Elemente erstellen, mit dem gleichen Schlüsselnamen oder mehrere semantische Elemente, die wiederholt ändern könnten die <xref:System.Speech.Recognition.SemanticValue.Value%2A> -Eigenschaft einer <xref:System.Speech.Recognition.SemanticValue> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-452">When you combine <xref:System.Speech.Recognition.GrammarBuilder> objects that contain <xref:System.Speech.Recognition.SemanticResultValue> or <xref:System.Speech.Recognition.SemanticResultKey> instances, make sure you avoid creating duplicate semantic elements with the same key name or multiple semantic elements that could repeatedly modify the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of a <xref:System.Speech.Recognition.SemanticValue> object.</span></span> <span data-ttu-id="49d7b-453">Die freigegebene Spracherkennung. kann eine Ausnahme auslösen, wenn diese Situationen auftreten.</span><span class="sxs-lookup"><span data-stu-id="49d7b-453">The speech recognizer can throw an exception if it encounters these circumstances.</span></span>
  
 <span data-ttu-id="49d7b-454">Die entsprechende Methode für diesen Operator ist <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="49d7b-454">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (System.Speech.Recognition.GrammarBuilder builder, string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(class System.Speech.Recognition.GrammarBuilder builder, string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.Speech.Recognition.GrammarBuilder,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (builder As GrammarBuilder, phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::Speech::Recognition::GrammarBuilder ^ builder, System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member ( + ) : System.Speech.Recognition.GrammarBuilder * string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="builder + phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="builder">
          <span data-ttu-id="49d7b-455">Das erste Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-455">The first grammar element.</span>
          </span>
        </param>
        <param name="phrase">
          <span data-ttu-id="49d7b-456">Das zweite Grammatikelement, das eine Sequenz von Wörtern darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-456">The second grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-457">Erstellt ein neues <see cref="T:System.Speech.Recognition.GrammarBuilder" />, das einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> gefolgt von einem Bergriff enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-457">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> followed by a phrase.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-458">Gibt einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="builder" />-Parameters zurück, gefolgt vom Parameter <paramref name="phrase" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-458">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="builder" /> parameter followed by the <paramref name="phrase" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-459"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt die Konvertierungen von den folgenden Klassen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-459"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="49d7b-460">Diese Methode akzeptiert, die für die oben aufgeführten Objekte die `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="49d7b-460">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="49d7b-461">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-461">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="49d7b-462">Die entsprechende Methode für diesen Operator ist <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="49d7b-462">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.Speech.Recognition.GrammarBuilder%2CSystem.String%29?displayProperty=nameWithType></span></span>]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <Member MemberName="op_Addition">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.GrammarBuilder operator + (string phrase, System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Addition(string phrase, class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Addition(System.String,System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator + (phrase As String, builder As GrammarBuilder) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::GrammarBuilder ^ operator +(System::String ^ phrase, System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="static member ( + ) : string * System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.GrammarBuilder" Usage="phrase + builder" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="49d7b-463">Das erste Grammatikelement, das eine Sequenz von Wörtern darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-463">The first grammar element, which represents a sequence of words.</span>
          </span>
        </param>
        <param name="builder">
          <span data-ttu-id="49d7b-464">Das zweite Grammatikelement.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-464">The second grammar element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-465">Erstellt ein neues <see cref="T:System.Speech.Recognition.GrammarBuilder" />, das einen Begriff gefolgt von einem <see cref="T:System.Speech.Recognition.GrammarBuilder" /> enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-465">Creates a new <see cref="T:System.Speech.Recognition.GrammarBuilder" /> that contains a phrase followed by a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-466">Gibt einen <see cref="T:System.Speech.Recognition.GrammarBuilder" /> für die Sequenz des <paramref name="phrase" />-Parameters zurück, gefolgt vom Parameter <paramref name="builder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-466">Returns a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> for the sequence of the <paramref name="phrase" /> parameter followed by the <paramref name="builder" /> parameter.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-467"><xref:System.Speech.Recognition.GrammarBuilder> unterstützt die Konvertierungen von den folgenden Klassen.</span><span class="sxs-lookup"><span data-stu-id="49d7b-467"><xref:System.Speech.Recognition.GrammarBuilder> supports conversions from the following classes.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="49d7b-468">Diese Methode akzeptiert, die für die oben aufgeführten Objekte die `builder` Parameter.</span><span class="sxs-lookup"><span data-stu-id="49d7b-468">This method accepts the objects listed above for the `builder` parameter.</span></span> <span data-ttu-id="49d7b-469">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> Operatoren.</span><span class="sxs-lookup"><span data-stu-id="49d7b-469">For more information, see the <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A> operators.</span></span>  
  
 <span data-ttu-id="49d7b-470">Die entsprechende Methode für diesen Operator ist <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="49d7b-470">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.Add%28System.String%2CSystem.Speech.Recognition.GrammarBuilder%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="49d7b-471">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, das die zwei Ausdrücke, erkennen können "Stellen Hintergrund *Farbe*" und "Festlegen des Hintergrunds auf *Farbe*", wobei *Farbe* wird aus einem Satz von Farben ausgewählt werden.</span><span class="sxs-lookup"><span data-stu-id="49d7b-471">The following example creates a speech recognition grammar that can recognize the two phrases, "Make background *color*" and "Set background to *color*", where *color* is selected from a set of colors.</span></span> <span data-ttu-id="49d7b-472">Verschiedene Typen werden verwendet, um die endgültige Grammatik, z. B. erstellen [Zeichenfolge](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, und <xref:System.Speech.Recognition.GrammarBuilder> Objekte.</span><span class="sxs-lookup"><span data-stu-id="49d7b-472">Various types are used to build the final grammar, such as [String](http://go.microsoft.com/fwlink/?LinkId=159733), <xref:System.Speech.Recognition.Choices>, and <xref:System.Speech.Recognition.GrammarBuilder> objects.</span></span>  
  
```csharp  
  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] { "red", "green", "blue" });  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase =  
    (GrammarBuilder)"Make background" + colorChoice;  
  GrammarBuilder setPhrase =  
    "Set background to" + (GrammarBuilder)colorChoice;  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] { makePhrase, setPhrase });  
  GrammarBuilder bothPhrases = new GrammarBuilder(bothChoices);  
  
  Grammar grammar = new Grammar(bothPhrases);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.Add(System.Speech.Recognition.Choices,System.Speech.Recognition.GrammarBuilder)" />
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="op_Implicit">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="49d7b-473">Konvertiert einen anderen Typ in ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-473">Converts another type to a <see cref="T:System.Speech.Recognition.GrammarBuilder" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-474">Implizite Konvertierung erstellt eine neue Instanz der <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-474">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="49d7b-475">Sie können die folgenden Klassen zum Umwandeln einer <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-475">You can cast each of the following classes to a <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
-   <xref:System.Speech.Recognition.Choices>  
  
-   <xref:System.Speech.Recognition.SemanticResultKey>  
  
-   <xref:System.Speech.Recognition.SemanticResultValue>  
  
-   <xref:System.String>  
  
 <span data-ttu-id="49d7b-476">Jede impliziten Umwandlungen entspricht dem Aufrufen des Konstruktors.</span><span class="sxs-lookup"><span data-stu-id="49d7b-476">Each of the implicit casts is equivalent to calling the constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.Choices choices);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.Choices choices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.Choices)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::Choices ^ choices);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.Choices -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit choices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="choices" Type="System.Speech.Recognition.Choices" />
      </Parameters>
      <Docs>
        <param name="choices">
          <span data-ttu-id="49d7b-477">Der Satz zum Alternativen, die konvertiert werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-477">The set of alternatives to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-478">Konvertiert ein <see cref="T:System.Speech.Recognition.Choices" />-Objekt in ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-478">Converts a <see cref="T:System.Speech.Recognition.Choices" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-479">Das konvertierte <see cref="T:System.Speech.Recognition.Choices" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-479">The converted <see cref="T:System.Speech.Recognition.Choices" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-480">Implizite Konvertierung erstellt eine neue Instanz der <xref:System.Speech.Recognition.GrammarBuilder>. Dieser Konvertierungsoperator entspricht dem Aufruf <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> und `choices` für die `alternateChoices`.</span><span class="sxs-lookup"><span data-stu-id="49d7b-480">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `choices` for the `alternateChoices`.</span></span>  
  
 <span data-ttu-id="49d7b-481">Die entsprechende Methode für diesen Operator ist <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="49d7b-481">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.Choices%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="49d7b-482">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, die eine Antwort auf ein "Yes" oder "no" Frage erkennen können.</span><span class="sxs-lookup"><span data-stu-id="49d7b-482">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="49d7b-483">Der implizite Konvertierungsoperator wird verwendet, bei der Erstellung von eine <xref:System.Speech.Recognition.SemanticResultValue> -Objekt aus einer <xref:System.Speech.Recognition.Choices> Objekt, bei der Erstellung von einer <xref:System.Speech.Recognition.Choices> Objekt aus zwei <xref:System.Speech.Recognition.SemanticResultValue> Objekte, und bei der Erstellung von eine <xref:System.Speech.Recognition.Grammar> Objekt aus einem <xref:System.Speech.Recognition.SemanticResultKey> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-483">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultKey semanticKey);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultKey semanticKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultKey)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticKey As SemanticResultKey) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultKey ^ semanticKey);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultKey -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticKey" Type="System.Speech.Recognition.SemanticResultKey" />
      </Parameters>
      <Docs>
        <param name="semanticKey">
          <span data-ttu-id="49d7b-484">Der zu konvertierende semantische Schlüssel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-484">The semantic key to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-485">Konvertiert ein <see cref="T:System.Speech.Recognition.SemanticResultKey" />-Objekt in ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-485">Converts a <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-486">Das konvertierte <see cref="T:System.Speech.Recognition.SemanticResultKey" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-486">The converted <see cref="T:System.Speech.Recognition.SemanticResultKey" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-487">Implizite Konvertierung erstellt eine neue Instanz der <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-487">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="49d7b-488">Dieser Konvertierungsoperator entspricht dem Aufruf <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> und `semanticKey` für die `key`.</span><span class="sxs-lookup"><span data-stu-id="49d7b-488">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticKey` for the `key`.</span></span>  
  
 <span data-ttu-id="49d7b-489">Die entsprechende Methode für diesen Operator ist <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="49d7b-489">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="49d7b-490">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, die eine Antwort auf ein "Yes" oder "no" Frage erkennen können.</span><span class="sxs-lookup"><span data-stu-id="49d7b-490">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="49d7b-491">Der implizite Konvertierungsoperator wird verwendet, bei der Erstellung von eine <xref:System.Speech.Recognition.SemanticResultValue> -Objekt aus einer <xref:System.Speech.Recognition.Choices> Objekt, bei der Erstellung von einer <xref:System.Speech.Recognition.Choices> Objekt aus zwei <xref:System.Speech.Recognition.SemanticResultValue> Objekte, und bei der Erstellung von eine <xref:System.Speech.Recognition.Grammar> Objekt aus einem <xref:System.Speech.Recognition.SemanticResultKey> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-491">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices> object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (System.Speech.Recognition.SemanticResultValue semanticValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(class System.Speech.Recognition.SemanticResultValue semanticValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.Speech.Recognition.SemanticResultValue)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (semanticValue As SemanticResultValue) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::Speech::Recognition::SemanticResultValue ^ semanticValue);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : System.Speech.Recognition.SemanticResultValue -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit semanticValue" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="semanticValue" Type="System.Speech.Recognition.SemanticResultValue" />
      </Parameters>
      <Docs>
        <param name="semanticValue">
          <span data-ttu-id="49d7b-492">Das zu konvertierende <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-492">The <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-493">Konvertiert ein <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Objekt in ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-493">Converts a <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-494">Das konvertierte <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-494">The converted <see cref="T:System.Speech.Recognition.SemanticResultValue" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-495">Implizite Konvertierung erstellt eine neue Instanz der <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-495">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="49d7b-496">Dieser Konvertierungsoperator entspricht dem Aufruf <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> und `semanticValue` für die `value`.</span><span class="sxs-lookup"><span data-stu-id="49d7b-496">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying `semanticValue` for the `value`.</span></span>  
  
 <span data-ttu-id="49d7b-497">Die entsprechende Methode für diesen Operator ist <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="49d7b-497">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="49d7b-498">Das folgende Beispiel erstellt eine spracherkennungsgrammatik, die eine Antwort auf ein "Yes" oder "no" Frage erkennen können.</span><span class="sxs-lookup"><span data-stu-id="49d7b-498">The following example creates a speech recognition grammar that can recognize a response to a "yes" or "no" question.</span></span> <span data-ttu-id="49d7b-499">Der implizite Konvertierungsoperator wird verwendet, bei der Erstellung von eine <xref:System.Speech.Recognition.SemanticResultValue> -Objekt aus einer <xref:System.Speech.Recognition.Choices>Objekt, bei der Erstellung von einer <xref:System.Speech.Recognition.Choices> Objekt aus zwei <xref:System.Speech.Recognition.SemanticResultValue> Objekte, und bei der Erstellung von eine <xref:System.Speech.Recognition.Grammar> Objekt aus einem <xref:System.Speech.Recognition.SemanticResultKey> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-499">The implicit conversion operator is used in the construction of a <xref:System.Speech.Recognition.SemanticResultValue> object from a <xref:System.Speech.Recognition.Choices>object, in the construction of a <xref:System.Speech.Recognition.Choices> object from two <xref:System.Speech.Recognition.SemanticResultValue> objects, and in the construction of a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  
  
```csharp  
Choices yesChoices = new Choices(new string[] {"yes", "yup", "yah"});  
SemanticResultValue yesValue =  
  new SemanticResultValue(yesChoices, true);  
  
Choices noChoices = new Choices(new string[] { "no", "nope", "nah" });  
SemanticResultValue noValue =  
  new SemanticResultValue(noChoices, false);  
  
SemanticResultKey yesnoKey =  
  new SemanticResultKey("yesno", new Choices(new GrammarBuilder[] { yesValue, noValue }));  
  
Grammar yesnoGrammar = new Grammar(yesnoKey);  
yesnoGrammar.Name = "yesno";  
  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="op_Implicit">
      <MemberSignature Language="C#" Value="public static implicit operator System.Speech.Recognition.GrammarBuilder (string phrase);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname class System.Speech.Recognition.GrammarBuilder op_Implicit(string phrase) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.GrammarBuilder.op_Implicit(System.String)~System.Speech.Recognition.GrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Shared Widening Operator CType (phrase As String) As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static operator System::Speech::Recognition::GrammarBuilder ^(System::String ^ phrase);" />
      <MemberSignature Language="F#" Value="static member op_Implicit : string -&gt; System.Speech.Recognition.GrammarBuilder" Usage="System.Speech.Recognition.GrammarBuilder.op_Implicit phrase" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="phrase">
          <span data-ttu-id="49d7b-500">Die zu konvertierende Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-500">The string to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="49d7b-501">Konvertiert eine Zeichenfolge in ein <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-501">Converts a string to a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="49d7b-502">Die konvertierte Zeichenfolge.</span>
          <span class="sxs-lookup">
            <span data-stu-id="49d7b-502">The converted string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="49d7b-503">Implizite Konvertierung erstellt eine neue Instanz der <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="49d7b-503">Implicit conversion creates a new instance of <xref:System.Speech.Recognition.GrammarBuilder>.</span></span> <span data-ttu-id="49d7b-504">Dieser Konvertierungsoperator entspricht dem Aufruf <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> und geben Sie die gleiche `phrase`.</span><span class="sxs-lookup"><span data-stu-id="49d7b-504">This conversion operator is equivalent to calling <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%2A> and specifying the same `phrase`.</span></span>  
  
 <span data-ttu-id="49d7b-505">Die entsprechende Methode für diesen Operator ist <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="49d7b-505">The equivalent method for this operator is <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.String%29?displayProperty=nameWithType></span></span>  
  
## Examples  
 <span data-ttu-id="49d7b-506">Im folgenden Beispiel wird <xref:System.Speech.Recognition.GrammarBuilder> und <xref:System.Speech.Recognition.Choices> Objekte an eine Grammatik zu erstellen, die eines der zwei Ausdrücke, erkennen kann "Stellen Hintergrund *ColorChoice*" oder "Festlegen des Hintergrunds auf *ColorChoice*".</span><span class="sxs-lookup"><span data-stu-id="49d7b-506">The following example uses  <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects to construct a grammar that can recognize either of the two phrases, "Make background *colorChoice*" or "Set background to *colorChoice*".</span></span>  
  
 <span data-ttu-id="49d7b-507">Nach dem Erstellen einer Liste der zulässigen Werte für *ColorChoice* mithilfe einer <xref:System.Speech.Recognition.Choices> Objekt, das Beispiel initialisiert zwei <xref:System.Speech.Recognition.GrammarBuilder> Objekte `makePhrase` und `setPhrase`, implizite Konvertierung von Zeichenfolge mit -Objekte.</span><span class="sxs-lookup"><span data-stu-id="49d7b-507">After creating a list of acceptable values for *colorChoice* using a <xref:System.Speech.Recognition.Choices> object, the example initializes two <xref:System.Speech.Recognition.GrammarBuilder> objects, `makePhrase` and `setPhrase`, using implicit conversion from string objects.</span></span>  
  
 <span data-ttu-id="49d7b-508">Im Beispiel wird schließlich erstellt eine <xref:System.Speech.Recognition.Grammar> -Objekt aus einem <xref:System.Speech.Recognition.Choices> Objekt umgewandelt wird, um eine <xref:System.Speech.Recognition.GrammarBuilder> Objekt.</span><span class="sxs-lookup"><span data-stu-id="49d7b-508">The example finally creates a <xref:System.Speech.Recognition.Grammar> object from a <xref:System.Speech.Recognition.Choices> object cast to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
```csharp  
private Grammar CreateColorGrammar()  
{  
  
  // Create a set of color choices.  
  Choices colorChoice = new Choices(new string[] {"red", "green", "blue"});  
  GrammarBuilder colorElement = new GrammarBuilder(colorChoice);  
  
  // Create grammar builders for the two versions of the phrase.  
  GrammarBuilder makePhrase = new GrammarBuilder("Make background");  
  makePhrase.Append(colorElement);  
  GrammarBuilder setPhrase = new GrammarBuilder("Set background to");  
  setPhrase.Append(colorElement);  
  
  // Create a Choices for the two alternative phrases, convert the Choices  
  // to a GrammarBuilder, and construct the Grammar object from the result.  
  Choices bothChoices = new Choices(new GrammarBuilder[] {makePhrase, setPhrase});  
  Grammar grammar = new Grammar((GrammarBuilder)bothChoices);  
  grammar.Name = "backgroundColor";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.GrammarBuilder.#ctor" />
      </Docs>
    </Member>
  </Members>
</Type>