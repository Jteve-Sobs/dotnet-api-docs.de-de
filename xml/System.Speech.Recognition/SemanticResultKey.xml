<Type Name="SemanticResultKey" FullName="System.Speech.Recognition.SemanticResultKey">
  <TypeSignature Language="C#" Value="public class SemanticResultKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultKey" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultKey" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_semanticKey.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="9817a-101">Ordnet <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Werten eine Schlüsselzeichenfolge zu, um <see cref="T:System.Speech.Recognition.SemanticValue" />-Objekte zu definieren.</span><span class="sxs-lookup"><span data-stu-id="9817a-101">Associates a key string with <see cref="T:System.Speech.Recognition.SemanticResultValue" /> values to define <see cref="T:System.Speech.Recognition.SemanticValue" /> objects.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9817a-102">Die grundlegende Einheit der semantischen Ausdruck in System.Speech ist die <xref:System.Speech.Recognition.SemanticValue>, dies ist ein Schlüssel/Wert-Paar.</span><span class="sxs-lookup"><span data-stu-id="9817a-102">The basic unit of semantic expression in System.Speech is the <xref:System.Speech.Recognition.SemanticValue>, which is a key/value pair.</span></span>  
  
 <span data-ttu-id="9817a-103">Mit <xref:System.Speech.Recognition.SemanticResultKey> Objekte, die Sie markieren <xref:System.Speech.Recognition.SemanticResultValue> in enthaltenen Instanzen <xref:System.Speech.Recognition.GrammarBuilder> Objekte und Zeigern auf Zeichenfolgen, sodass die Werte ohne weiteres aus zugegriffen werden können <xref:System.Speech.Recognition.SemanticValue> Instanzen über die Anerkennung.</span><span class="sxs-lookup"><span data-stu-id="9817a-103">Using <xref:System.Speech.Recognition.SemanticResultKey> objects, you tag <xref:System.Speech.Recognition.SemanticResultValue> instances contained in <xref:System.Speech.Recognition.GrammarBuilder> objects and strings so that the values may readily be accessed from <xref:System.Speech.Recognition.SemanticValue> instances on recognition.</span></span>  
  
 <span data-ttu-id="9817a-104">Können Sie <xref:System.Speech.Recognition.SemanticResultValue> und <xref:System.Speech.Recognition.SemanticResultKey> Objekte, die in Verbindung mit <xref:System.Speech.Recognition.GrammarBuilder> und <xref:System.Speech.Recognition.Choices> Objekte, um die semantische Struktur für eine Sprache Recognition Grammatik definieren.</span><span class="sxs-lookup"><span data-stu-id="9817a-104">You can use <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices> objects, to define the semantic structure for a speech recognition grammar.</span></span> <span data-ttu-id="9817a-105">Um die semantischen Informationen in einem Resultset Recognition zuzugreifen, erhalten Sie eine Instanz der <xref:System.Speech.Recognition.SemanticValue> über die <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> Eigenschaft <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="9817a-105">To access the semantic information in a recognition result, obtain an instance of <xref:System.Speech.Recognition.SemanticValue> through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
 <span data-ttu-id="9817a-106">Weitere Informationen zur Verwendung <xref:System.Speech.Recognition.SemanticResultValue> und <xref:System.Speech.Recognition.SemanticResultKey> Objekten finden Sie [Verständnis SemanticResultValue und SemanticResultKey Objekte](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) und [mithilfe einer SemanticResultKey zu extrahieren einer SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in der [System Spracherkennung Programmierhandbuch für .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span><span class="sxs-lookup"><span data-stu-id="9817a-106">For more information about using <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, see [Understanding SemanticResultValue and SemanticResultKey Objects](http://msdn.microsoft.com/library/0fea1236-5261-4608-89b3-9ce9ffc22a1c) and [Using a SemanticResultKey to Extract a SemanticResultValue](http://msdn.microsoft.com/library/198e29b8-845f-4cec-a25e-f55c0eaf46aa) in the [System Speech Programming Guide for .NET Framework 4.0](http://msdn.microsoft.com/library/610116c7-3817-40ff-857b-5d41e8511043).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9817a-107">Das folgende Beispiel erstellt eine <xref:System.Speech.Recognition.Grammar> Kennworteingabe des Formulars erkennen "Mein Kennwort is...", dem wird die tatsächliche Eingabe, mit einem Platzhalter übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="9817a-107">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="9817a-108">Der Platzhalter mit einem semantische Schlüssel gekennzeichnet ist und die <xref:System.Speech.Recognition.Grammar.SpeechRecognized> Handler überprüft das Vorhandensein dieses Tags, um sicherzustellen, dass eine Kennworteingabe aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="9817a-108">The wildcard is tagged with a semantic key, and the <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag to verify that a password input has occurred.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized += delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
  {  
    SemanticValue semantics = eventArgs.Result.Semantics;  
    RecognitionResult result=eventArgs.Result;  
  
    if (!semantics.ContainsKey("Password"))   
    {  
      SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
    }  
    else   
    {  
      RecognizedAudio pwdAudio = result.GetAudioForWordRange(result.Words[3], result.Words[result.Words.Count - 1]);  
      MemoryStream pwdMemoryStream = new MemoryStream();  
      pwdAudio.WriteToAudioStream(pwdMemoryStream);  
      if (!IsValidPwd(pwdMemoryStream))   
      {  
        string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
        FileStream waveStream = new FileStream(badPwd, FileMode.Create);  
        pwdAudio.WriteToWaveStream(waveStream);  
        waveStream.Flush();  
        waveStream.Close();  
        SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);  
  
      }  
    }  
  };  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.SemanticValue" />
    <altmember cref="T:System.Speech.Recognition.SemanticResultValue" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="9817a-109">Erstellt eine Instanz von <see cref="T:System.Speech.Recognition.SemanticResultKey" /> und ordnet den Schlüssel Grammatikkomponenten zu.</span><span class="sxs-lookup"><span data-stu-id="9817a-109">Constructs an instance of <see cref="T:System.Speech.Recognition.SemanticResultKey" /> and associates the key with grammar components.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9817a-110">Die Konstruktoren für <xref:System.Speech.Recognition.SemanticResultKey> Geben Sie ein Texttag (der semantischen Schlüssel) und einen Satz von Grammatik Komponenten aus einer Sprache Recognition Grammatik hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="9817a-110">The constructors for <xref:System.Speech.Recognition.SemanticResultKey> specify a text tag (the semantic key) and a set of grammar components to add to a speech recognition grammar.</span></span>  
  
 <span data-ttu-id="9817a-111">Die Grammatik Komponenten kann angegeben werden entweder als Array von <xref:System.Speech.Recognition.GrammarBuilder> Objekte, oder als ein Array von <xref:System.String> Instanzen.</span><span class="sxs-lookup"><span data-stu-id="9817a-111">The grammar components can be specified either as an array of <xref:System.Speech.Recognition.GrammarBuilder> objects, or as an array of <xref:System.String> instances.</span></span>  
  
 <span data-ttu-id="9817a-112">Wenn die Grammatik-Komponenten in die Erkennung verwendet werden, können Sie das zurückgegebene zugreifen <xref:System.Speech.Recognition.SemanticValue> mit dem Texttag an den Konstruktor des bereitgestellten <xref:System.Speech.Recognition.SemanticResultKey> als semantische Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="9817a-112">If the grammar components are used in recognition, you can access the returned <xref:System.Speech.Recognition.SemanticValue> using the text tag provided to the constructor of <xref:System.Speech.Recognition.SemanticResultKey> as a semantic key.</span></span> <span data-ttu-id="9817a-113">Die <xref:System.Speech.Recognition.SemanticValue.Value%2A> Eigenschaft von der <xref:System.Speech.Recognition.SemanticValue> Instanz hängt von der Grammatik-Komponenten in der Definition des verwendet <xref:System.Speech.Recognition.SemanticResultKey>.</span><span class="sxs-lookup"><span data-stu-id="9817a-113">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> instance will be determined by the grammar components used in the definition of <xref:System.Speech.Recognition.SemanticResultKey>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params System.Speech.Recognition.GrammarBuilder[] builders);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, class System.Speech.Recognition.GrammarBuilder[] builders) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.Speech.Recognition.GrammarBuilder[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray builders As GrammarBuilder())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::Speech::Recognition::GrammarBuilder ^&gt; ^ builders);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="builders" Type="System.Speech.Recognition.GrammarBuilder[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey"><span data-ttu-id="9817a-114">Das Tag, das als semantischer Schlüssel verwendet werden soll, um auf die <see cref="T:System.Speech.Recognition.SemanticValue" />-Instanz zuzugreifen, die den <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekten zugeordnet ist, die vom <c>builders</c>-Argument angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="9817a-114">The tag to be used as a semantic key to access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects specified by the <c>builders</c> argument.</span></span></param>
        <param name="builders"><span data-ttu-id="9817a-115">Ein Array von Grammatikkomponenten, die einem <see cref="T:System.Speech.Recognition.SemanticValue" />-Objekt zugeordnet werden, auf das mit dem in <c>semanticResultKey</c> definierten Tag zugegriffen werden kann.</span><span class="sxs-lookup"><span data-stu-id="9817a-115">An array of grammar components that will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <c>semanticResultKey</c>.</span></span></param>
        <summary><span data-ttu-id="9817a-116">Weist einem oder mehreren <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekten, die verwendet werden, um eine Spracherkennungsgrammatik zu erstellen einen semantischen Schlüssel zu.</span><span class="sxs-lookup"><span data-stu-id="9817a-116">Assigns a semantic key to one or more <see cref="T:System.Speech.Recognition.GrammarBuilder" /> objects used to create a speech recognition grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9817a-117">Aufgrund implizierter Konvertierungen die `builders` Argument unterstützt <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, und <xref:System.String> auch Objekte.</span><span class="sxs-lookup"><span data-stu-id="9817a-117">Because of implicit conversions, the `builders` argument supports <xref:System.Speech.Recognition.SemanticResultValue>, <xref:System.Speech.Recognition.SemanticResultKey>, <xref:System.Speech.Recognition.Choices>, and <xref:System.String> objects as well.</span></span> <span data-ttu-id="9817a-118">Weitere Informationen zu impliziten Konvertierungen finden Sie unter <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span><span class="sxs-lookup"><span data-stu-id="9817a-118">For more information on implicit conversions, see <xref:System.Speech.Recognition.GrammarBuilder.op_Implicit%2A>.</span></span>  
  
 <span data-ttu-id="9817a-119">Beim Ausführen eines Erkennungsvorgangs der <xref:System.Speech.Recognition.GrammarBuilder> -Objekte bereitgestellt, die der `builders` Argument werden sequenziell behandelt.</span><span class="sxs-lookup"><span data-stu-id="9817a-119">When performing a recognition operation, the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` argument are treated as sequential.</span></span> <span data-ttu-id="9817a-120">Z. B. wenn die folgenden <xref:System.Speech.Recognition.SemanticResultValue> dient zum Erstellen einer <xref:System.Speech.Recognition.Grammar>, Eingabe für das Erkennungsmodul darf die Wörter "the quick brown Fox" nacheinander erkannt werden.</span><span class="sxs-lookup"><span data-stu-id="9817a-120">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey(  
    "stringTest", new GrammarBuilder[] {  
    new GrammarBuilder("the"),  
    new GrammarBuilder("quick"),  
    new GrammarBuilder("brown"),  
    new GrammarBuilder("fox")});  
```  
  
 <span data-ttu-id="9817a-121">Die `semanticResultKey` -Argument enthält den verwendetes Tag für den Zugriff auf die <xref:System.Speech.Recognition.SemanticValue> der zurückgegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="9817a-121">The `semanticResultKey` argument contains the tag used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="9817a-122">Die <xref:System.Speech.Recognition.SemanticValue.Value%2A> von der <xref:System.Speech.Recognition.SemanticValue> richtet sich nach der <xref:System.Speech.Recognition.GrammarBuilder> gebotenen Instanzen der `builders` Parameter.</span><span class="sxs-lookup"><span data-stu-id="9817a-122">The <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> is determined by the <xref:System.Speech.Recognition.GrammarBuilder> instances provided by the `builders` parameter.</span></span>  
  
 <span data-ttu-id="9817a-123">Wenn die <xref:System.Speech.Recognition.GrammarBuilder> Objekte enthalten keine definierende Instanz <xref:System.Speech.Recognition.SemanticResultValue>, den Wert von der <xref:System.Speech.Recognition.SemanticValue> ist `null`.</span><span class="sxs-lookup"><span data-stu-id="9817a-123">If the <xref:System.Speech.Recognition.GrammarBuilder> objects contain no defining instances of <xref:System.Speech.Recognition.SemanticResultValue>, the value of the <xref:System.Speech.Recognition.SemanticValue> is `null`.</span></span>  
  
 <span data-ttu-id="9817a-124">Wenn die <xref:System.Speech.Recognition.GrammarBuilder> -Objekte bereitgestellt, die der `builders` Parameter Geben Sie einen nicht markierten (nicht zugeordnet eine <xref:System.Speech.Recognition.SemanticResultKey> Objekt) <xref:System.Speech.Recognition.SemanticResultValue> -Instanz, die von der Logik dieser Instanz von verwendet wird, <xref:System.Speech.Recognition.SemanticResultValue> definieren die <xref:System.Speech.Recognition.SemanticValue.Value%2A>Eigenschaft von der <xref:System.Speech.Recognition.SemanticValue> -Objekt generiert wird.</span><span class="sxs-lookup"><span data-stu-id="9817a-124">If the <xref:System.Speech.Recognition.GrammarBuilder> objects provided in the `builders` parameter provide an untagged (not associated with a <xref:System.Speech.Recognition.SemanticResultKey> object) <xref:System.Speech.Recognition.SemanticResultValue> instance that is used by the recognition logic, that instance of <xref:System.Speech.Recognition.SemanticResultValue> will define the <xref:System.Speech.Recognition.SemanticValue.Value%2A> property of the <xref:System.Speech.Recognition.SemanticValue> that is produced.</span></span>  
  
 <span data-ttu-id="9817a-125">Ein SqlEndAltersStep vorhanden sein, und nicht nur eine gekennzeichnet <xref:System.Speech.Recognition.SemanticResultValue> Instanz die <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die gemäß der `builders` Parameter.</span><span class="sxs-lookup"><span data-stu-id="9817a-125">There should be one, and only one, untagged <xref:System.Speech.Recognition.SemanticResultValue> instance in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter.</span></span> <span data-ttu-id="9817a-126">Wenn mehrere Instanzen von nicht gekennzeichnet <xref:System.Speech.Recognition.SemanticResultValue> zugeordnet sind die <xref:System.Speech.Recognition.SemanticResultKey>, jede wird versucht, den Satz den Wert des der <xref:System.Speech.Recognition.SemanticValue> im Recognition Ergebnis erzeugt.</span><span class="sxs-lookup"><span data-stu-id="9817a-126">If multiple instances of untagged <xref:System.Speech.Recognition.SemanticResultValue> are associated with the <xref:System.Speech.Recognition.SemanticResultKey>, each will attempt to the set the value of the <xref:System.Speech.Recognition.SemanticValue> produced in the recognition result.</span></span> <span data-ttu-id="9817a-127">Dies ist nicht zulässig, und die Erkennung wird eine Ausnahme generiert, wenn versucht wird, verwenden Sie eine <xref:System.Speech.Recognition.Grammar> erstellt haben, verwenden z. B. eine <xref:System.Speech.Recognition.SemanticResultKey> Instanz.</span><span class="sxs-lookup"><span data-stu-id="9817a-127">This is not permitted, and the recognizer will generate an exception when it attempts to use a <xref:System.Speech.Recognition.Grammar> created using such a <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
 <span data-ttu-id="9817a-128">Instanzen von <xref:System.Speech.Recognition.SemanticResultValue> enthalten sind, der <xref:System.Speech.Recognition.GrammarBuilder> Objekte, die gemäß der `builders` Parameter und die zugehörigen bereits mit einem anderen <xref:System.Speech.Recognition.SemanticResultKey> wirken sich nicht auf dem aktuellen <xref:System.Speech.Recognition.SemanticResultKey> Instanz.</span><span class="sxs-lookup"><span data-stu-id="9817a-128">Instances of <xref:System.Speech.Recognition.SemanticResultValue> contained in the <xref:System.Speech.Recognition.GrammarBuilder> objects specified by the `builders` parameter and already associated with another <xref:System.Speech.Recognition.SemanticResultKey> have no effect on the current <xref:System.Speech.Recognition.SemanticResultKey> instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9817a-129">Das folgende Beispiel erstellt eine <xref:System.Speech.Recognition.Grammar> Kennworteingabe des Formulars erkennen "Mein Kennwort is...", dem wird die tatsächliche Eingabe, mit einem Platzhalter übereinstimmen.</span><span class="sxs-lookup"><span data-stu-id="9817a-129">The following example creates a <xref:System.Speech.Recognition.Grammar> to recognize password input of the form "My password is …", where the actual input is matched with a wildcard.</span></span>  
  
 <span data-ttu-id="9817a-130">Der Platzhalter ist gekennzeichnet durch ein <xref:System.Speech.Recognition.SpeechRecognizer> , dessen Schlüsselwert ist "Password".</span><span class="sxs-lookup"><span data-stu-id="9817a-130">The wildcard is tagged by a <xref:System.Speech.Recognition.SpeechRecognizer> whose key value is "Password".</span></span> <span data-ttu-id="9817a-131">Die <xref:System.Speech.Recognition.Grammar.SpeechRecognized> Handler überprüft das Vorhandensein dieses Tags, erhält die audio Eingabe des Kennworts und das Kennwort überprüft.</span><span class="sxs-lookup"><span data-stu-id="9817a-131">The <xref:System.Speech.Recognition.Grammar.SpeechRecognized> handler checks for the presence of this tag, obtains the audio input of the password, and verifies the password.</span></span>  
  
```csharp  
private void pwdGrammar()   
{  
  GrammarBuilder pwdBuilder = new GrammarBuilder("My Password is");  
  GrammarBuilder wildcardBuilder = new GrammarBuilder();  
  wildcardBuilder.AppendWildcard();  
  SemanticResultKey wildcardKey= new SemanticResultKey("Password", wildcardBuilder);  
  pwdBuilder+=wildcardKey;  
  Grammar grammar = new Grammar(pwdBuilder);  
  grammar.Name = "Password input";  
  
  grammar.SpeechRecognized +=   
    delegate(object sender, SpeechRecognizedEventArgs eventArgs)   
    {  
      SemanticValue semantics = eventArgs.Result.Semantics;  
      RecognitionResult result=eventArgs.Result;  
  
      if (!semantics.ContainsKey("Password"))   
      {  
        SpeechUI.SendTextFeedback(eventArgs.Result, "No Password Provided", false);  
      }  
      else   
      {  
        RecognizedAudio pwdAudio = result.GetAudioForWordRange(  
                  result.Words[3],  
                  result.Words[result.Words.Count - 1]);  
                  MemoryStream pwdMemoryStream = new MemoryStream();  
                  pwdAudio.WriteToAudioStream(pwdMemoryStream);  
        if (!IsValidPwd(pwdMemoryStream))   
        {  
          string badPwd = System.IO.Path.GetTempPath() + "BadPwd" + (new Random()).Next().ToString() + ".wav";  
          FileStream waveStream = new FileStream(badPwd, FileMode.Create);    
          pwdAudio.WriteToWaveStream(waveStream);  
          waveStream.Flush();  
          waveStream.Close();  
          SpeechUI.SendTextFeedback(eventArgs.Result, "Invalid Password", false);      
        }  
      }  
    };  
  
  grammar.Enabled = true;  
  _recognizer.LoadGrammar(grammar);  
  UpdateGrammarTree(_grammarTreeView, _recognizer);  
  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultKey (string semanticResultKey, params string[] phrases);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string semanticResultKey, string[] phrases) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.#ctor(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (semanticResultKey As String, ParamArray phrases As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultKey(System::String ^ semanticResultKey, ... cli::array &lt;System::String ^&gt; ^ phrases);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="semanticResultKey" Type="System.String" />
        <Parameter Name="phrases" Type="System.String[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="semanticResultKey"><span data-ttu-id="9817a-132">Das Tag, das verwendet werden soll, um auf die <see cref="T:System.Speech.Recognition.SemanticValue" />-Instanz zuzugreifen, die den <see cref="T:System.String" />-Objekten zugeordnet ist, die vom <c>phrases</c>-Argument angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="9817a-132">The tag to be used access the <see cref="T:System.Speech.Recognition.SemanticValue" /> instance associated with the <see cref="T:System.String" /> objects specified by the <c>phrases</c> argument.</span></span></param>
        <param name="phrases"><span data-ttu-id="9817a-133">Eines oder mehrere <see cref="T:System.String" />-Objekte, deren verketteter Text einem <see cref="T:System.Speech.Recognition.SemanticValue" />-Objekt zugeordnet wird, auf das mit dem Tag zugegriffen werden kann, das in <c>semanticResultKey</c> definiert wird.</span><span class="sxs-lookup"><span data-stu-id="9817a-133">One or more <see cref="T:System.String" /> objects, whose concatenated text will be associated with a <see cref="T:System.Speech.Recognition.SemanticValue" /> object accessible with the tag defined in <c>semanticResultKey</c>.</span></span></param>
        <summary><span data-ttu-id="9817a-134">Weist einem oder mehreren <see cref="T:System.String" />-Instanzen, die verwendet werden, um eine Spracherkennungsgrammatik zu erstellen einen semantischen Schlüssel zu.</span><span class="sxs-lookup"><span data-stu-id="9817a-134">Assigns a semantic key to one or more <see cref="T:System.String" /> instances used to create a speech recognition grammar.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9817a-135">Beim Ausführen eines Erkennungsvorgangs der <xref:System.String> in verwendeten Objekte die `phrases` Parameter werden sequenziell behandelt.</span><span class="sxs-lookup"><span data-stu-id="9817a-135">When performing a recognition operation, the <xref:System.String> objects used in the `phrases` parameter are treated as sequential.</span></span> <span data-ttu-id="9817a-136">Z. B. wenn die folgenden <xref:System.Speech.Recognition.SemanticResultValue> dient zum Erstellen einer <xref:System.Speech.Recognition.Grammar>, Eingabe für das Erkennungsmodul darf die Wörter "the quick brown Fox" nacheinander erkannt werden.</span><span class="sxs-lookup"><span data-stu-id="9817a-136">For example, if the following <xref:System.Speech.Recognition.SemanticResultValue> is used to construct a <xref:System.Speech.Recognition.Grammar>, input to the recognition engine must contain the words "the quick brown fox" in sequence to be recognized.</span></span>  
  
```csharp  
SemanticResultKey stringTest=new SemanticResultKey("stringTest",   
                                new string[] {  
                                               "the",  
                                               "quick",  
                                               "brown",  
                                               "fox"});  
```  
  
 <span data-ttu-id="9817a-137">Die `semanticResultKey` Argument bestimmt den verwendeten Schlüssel für den Zugriff auf die <xref:System.Speech.Recognition.SemanticValue> der zurückgegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="9817a-137">The `semanticResultKey` argument determines the key used to access the <xref:System.Speech.Recognition.SemanticValue> which might be returned.</span></span>  
  
 <span data-ttu-id="9817a-138">Wenn Sie erstellen eine <xref:System.Speech.Recognition.Grammar> verwenden eine <xref:System.Speech.Recognition.GrammarBuilder> -Objekt, das einen semantische Schlüssel mit einem Array von String-Objekten enthält die <xref:System.Speech.Recognition.SemanticValue.Value%2A> von der <xref:System.Speech.Recognition.SemanticValue> von eines Erkennungsvorgangs erzeugten wird die Zeichenfolge, die in die Erkennung verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="9817a-138">If you construct a <xref:System.Speech.Recognition.Grammar> using a <xref:System.Speech.Recognition.GrammarBuilder> object that contains a semantic key with an array of string objects,  the <xref:System.Speech.Recognition.SemanticValue.Value%2A> of the <xref:System.Speech.Recognition.SemanticValue> produced by a recognition operation  will be the string used in recognition.</span></span> <span data-ttu-id="9817a-139">Im vorherigen Beispiel bedeutet dies, dass <xref:System.Speech.Recognition.SemanticValue.Value%2A> wäre "the quick brown Fox".</span><span class="sxs-lookup"><span data-stu-id="9817a-139">In the preceding example, this means that <xref:System.Speech.Recognition.SemanticValue.Value%2A> would be "the quick brown fox".</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9817a-140">Das folgende Beispiel erstellt eine <xref:System.Speech.Recognition.Grammar> aus einer <xref:System.Speech.Recognition.GrammarBuilder> -Objekt, das verwendet eine <xref:System.Speech.Recognition.SemanticResultKey>, die durch ein Array von definiert ist <xref:System.String> Objekte.</span><span class="sxs-lookup"><span data-stu-id="9817a-140">The following example creates a <xref:System.Speech.Recognition.Grammar> from a <xref:System.Speech.Recognition.GrammarBuilder> object that uses a <xref:System.Speech.Recognition.SemanticResultKey>, which is defined by an array of <xref:System.String> objects.</span></span>  
  
 <span data-ttu-id="9817a-141">Recognition-Modul verwendet die <xref:System.Speech.Recognition.Grammar> erstellt wird den Ausdruck "Color Rot Grün Blau 0 (null)" zu erkennen.</span><span class="sxs-lookup"><span data-stu-id="9817a-141">A recognition engine using the <xref:System.Speech.Recognition.Grammar> created will recognize the phrase "color red green blue zero".</span></span> <span data-ttu-id="9817a-142">Die Semantik von der <xref:System.Speech.Recognition.RecognizedPhrase> zurückgegebenes Recognition enthält eine <xref:System.Speech.Recognition.SemanticValue> mit einer <xref:System.Speech.Recognition.SemanticValue.Value%2A> "Rot-Grün-Blau".</span><span class="sxs-lookup"><span data-stu-id="9817a-142">The semantics of the <xref:System.Speech.Recognition.RecognizedPhrase> returned by recognition will contain a <xref:System.Speech.Recognition.SemanticValue> with a <xref:System.Speech.Recognition.SemanticValue.Value%2A> of "red green blue".</span></span> <span data-ttu-id="9817a-143">Sie können den Zugriff auf die <xref:System.Speech.Recognition.SemanticValue> mit dem Tag "Code".</span><span class="sxs-lookup"><span data-stu-id="9817a-143">You can access the <xref:System.Speech.Recognition.SemanticValue> using the "code" tag.</span></span>  
  
 <span data-ttu-id="9817a-144">Aufgrund der der `SemanticResultValue("zero", 5)` angefügt der <xref:System.Speech.Recognition.GrammarBuilder>, im Stammverzeichnis <xref:System.Speech.Recognition.SemanticValue> Objekt in der <xref:System.Speech.Recognition.RecognizedPhrase> einen Wert von 5.</span><span class="sxs-lookup"><span data-stu-id="9817a-144">Because of the `SemanticResultValue("zero", 5)` appended to the <xref:System.Speech.Recognition.GrammarBuilder>, the root <xref:System.Speech.Recognition.SemanticValue> object in the <xref:System.Speech.Recognition.RecognizedPhrase> will have a value of 5.</span></span>  
  
```csharp  
private void keyTest()   
{  
  // Say "color red green blue zero"  
  GrammarBuilder gb = new GrammarBuilder("color") +  
                        new SemanticResultKey("code",   
                          (new string[] {"red", "green", "blue"})) +  
                        new SemanticResultValue("zero", 5);  
  Grammar g = new Grammar(gb);  
  g.Name = "keyTest";  
  _recognizer.LoadGrammar(g);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9817a-145">Gibt eine Instanz von <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zurück, die aus der aktuellen <see cref="T:System.Speech.Recognition.SemanticResultKey" />-Instanz konstruiert wurde.</span><span class="sxs-lookup"><span data-stu-id="9817a-145">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultKey" /> instance.</span></span></summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9817a-146">Die Verwendung von <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> entspricht der <xref:System.Speech.Recognition.GrammarBuilder> Konstruktor nimmt <xref:System.Speech.Recognition.SemanticResultKey> als Argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span><span class="sxs-lookup"><span data-stu-id="9817a-146">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor which takes <xref:System.Speech.Recognition.SemanticResultKey> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultKey%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9817a-147">Das folgende Beispiel erstellt eine <xref:System.Speech.Recognition.Grammar> -Objekt, das Befehle aus, um die Hintergrundfarbe ändern unterstützt.</span><span class="sxs-lookup"><span data-stu-id="9817a-147">The following example creates a <xref:System.Speech.Recognition.Grammar> object that supports commands to change the background color.</span></span>  
  
 <span data-ttu-id="9817a-148">Ein <xref:System.Speech.Recognition.Choices> Objekt (`colorChoice`), enthält die Liste der Optionen für Hintergrundfarben gefüllt wird, mithilfe der <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> Methode mit <xref:System.Speech.Recognition.GrammarBuilder> Instanzen.</span><span class="sxs-lookup"><span data-stu-id="9817a-148">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances.</span></span> <span data-ttu-id="9817a-149">Die <xref:System.Speech.Recognition.GrammarBuilder> Instanzen werden abgerufen, bis die <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> Methode auf die <xref:System.Speech.Recognition.SemanticResultValue> von Farbe Zeichenfolgen erstellten Objekte.</span><span class="sxs-lookup"><span data-stu-id="9817a-149">The <xref:System.Speech.Recognition.GrammarBuilder> instances are obtained through the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the <xref:System.Speech.Recognition.SemanticResultValue> objects created from color strings.</span></span>  
  
 <span data-ttu-id="9817a-150">Ein <xref:System.Speech.Recognition.GrammarBuilder> wird dann durch den Aufruf abgerufen <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> auf eine <xref:System.Speech.Recognition.SemanticResultKey> -Instanz, die verwendet wird, um die semantische Auswahlmöglichkeiten im Schlüssel `colorChoice`.</span><span class="sxs-lookup"><span data-stu-id="9817a-150">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in `colorChoice`.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RGB.  
  // Choices constructors do not take SemanticResultValue parameters, so cast   
  // the SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
    SemanticResultValue colorValue=new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.  
    colorChoice.Add(colorValue.ToGrammarBuilder());      
  }  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with introductory phrase and the color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the Grammar object, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] {makeBackgroundBuilder, configureBackgroundBuilder}));  
  grammar.Name = "Make Background /Configure background as";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>