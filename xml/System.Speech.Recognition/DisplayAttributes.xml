<Type Name="DisplayAttributes" FullName="System.Speech.Recognition.DisplayAttributes">
  <Metadata><Meta Name="ms.openlocfilehash" Value="31c7b1010a519e2399193afd633a5fe0f4506ca1" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69145961" /></Metadata><TypeSignature Language="C#" Value="public enum DisplayAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DisplayAttributes extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.DisplayAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Enum DisplayAttributes" />
  <TypeSignature Language="C++ CLI" Value="public enum class DisplayAttributes" />
  <TypeSignature Language="F#" Value="type DisplayAttributes = " />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="20d80-101">Listet die Optionen auf, die das <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />-Objekt verwenden kann, um Leerräume für die Anzeige eines Worts oder Satzzeichens anzugeben.</span><span class="sxs-lookup"><span data-stu-id="20d80-101">Lists the options that the <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> object can use to specify white space for the display of a word or punctuation mark.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="20d80-102">Windows Desktop Speech gibt erkannte Ausdrücke als Auflistungen <xref:System.Speech.Recognition.ReplacementText> von <xref:System.Speech.Recognition.RecognizedWordUnit> -Objekten oder-Objekten zurück.</span><span class="sxs-lookup"><span data-stu-id="20d80-102">Windows Desktop Speech returns recognized phrases as collections of <xref:System.Speech.Recognition.RecognizedWordUnit> or <xref:System.Speech.Recognition.ReplacementText> objects.</span></span> <span data-ttu-id="20d80-103">Jedes-Objekt entspricht einem einzelnen Wort oder Satzzeichen.</span><span class="sxs-lookup"><span data-stu-id="20d80-103">Each object corresponds to a single word or punctuation mark.</span></span> <span data-ttu-id="20d80-104">Die `DisplayAttributes` -Eigenschaft <xref:System.Speech.Recognition.RecognizedWordUnit> eines oder <xref:System.Speech.Recognition.ReplacementText> verwendet einen Member der <xref:System.Speech.Recognition.DisplayAttributes> -Enumeration, um zu beschreiben, wie der Druck Abstand um ein bestimmtes Wort oder Satzzeichen behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="20d80-104">The `DisplayAttributes` property of a <xref:System.Speech.Recognition.RecognizedWordUnit> or <xref:System.Speech.Recognition.ReplacementText> uses a member of the <xref:System.Speech.Recognition.DisplayAttributes> enumeration to describe how print spacing is handled around a given word or punctuation mark.</span></span>  
  
 <span data-ttu-id="20d80-105">Mindestens zwei Member der `DisplayAttributes` -Enumeration können mit einer bitweisen `OR` Kombination kombiniert werden, um anzugeben, wie ein bestimmtes Wort angezeigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="20d80-105">Two or more members of the `DisplayAttributes` enumeration may be combined by a bit-wise `OR` to specify how a particular word should be displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="20d80-106">Die Anzeige Formatierung, die von der Spracherkennung verwendet wird, ist sprachspezifisch.</span><span class="sxs-lookup"><span data-stu-id="20d80-106">The display formatting that the speech recognizer uses is language specific.</span></span>  
  
 <span data-ttu-id="20d80-107">Nehmen wir beispielsweise an, dass der Eingabe Ausdruck für eine Erkennungs-Engine, die die <xref:System.Speech.Recognition.DictationGrammar> von bereitgestellte Standardsystem Grammatik verwendet, "Hello Comma, said period" lautet.</span><span class="sxs-lookup"><span data-stu-id="20d80-107">For example, suppose the input phrase to a recognition engine using the default system grammar provided by <xref:System.Speech.Recognition.DictationGrammar> is "Hello comma he said period".</span></span> <span data-ttu-id="20d80-108">Anschließend gibt die Erkennungs-Engine <xref:System.Speech.Recognition.RecognizedPhrase> eine mit <xref:System.Speech.Recognition.RecognizedWordUnit> fünf Objekten zurück, die die folgenden Zeichen `DisplayAttributes` folgen mit den folgenden Werten enthalten.</span><span class="sxs-lookup"><span data-stu-id="20d80-108">Then the recognition engine returns a <xref:System.Speech.Recognition.RecognizedPhrase> containing five <xref:System.Speech.Recognition.RecognizedWordUnit> objects containing the following strings with the following `DisplayAttributes` values.</span></span>  
  
|<span data-ttu-id="20d80-109">Element</span><span class="sxs-lookup"><span data-stu-id="20d80-109">Item</span></span>|`DisplayAttributes`|  
|----------|-------------------------|  
|<span data-ttu-id="20d80-110">Hello</span><span class="sxs-lookup"><span data-stu-id="20d80-110">Hello</span></span>|<span data-ttu-id="20d80-111">OneTrailingSpace</span><span class="sxs-lookup"><span data-stu-id="20d80-111">OneTrailingSpace</span></span>|  
|<span data-ttu-id="20d80-112">,</span><span class="sxs-lookup"><span data-stu-id="20d80-112">,</span></span>|<span data-ttu-id="20d80-113">Onetrailingspace &#124; consumeleadingspaces</span><span class="sxs-lookup"><span data-stu-id="20d80-113">OneTrailingSpace &#124; ConsumeLeadingSpaces</span></span>|  
|<span data-ttu-id="20d80-114">er</span><span class="sxs-lookup"><span data-stu-id="20d80-114">he</span></span>|<span data-ttu-id="20d80-115">OneTrailingSpace</span><span class="sxs-lookup"><span data-stu-id="20d80-115">OneTrailingSpace</span></span>|  
|<span data-ttu-id="20d80-116">hat</span><span class="sxs-lookup"><span data-stu-id="20d80-116">said</span></span>|<span data-ttu-id="20d80-117">OneTrailingSpace</span><span class="sxs-lookup"><span data-stu-id="20d80-117">OneTrailingSpace</span></span>|  
|<span data-ttu-id="20d80-118">sein.</span><span class="sxs-lookup"><span data-stu-id="20d80-118">.</span></span>|<span data-ttu-id="20d80-119">Onetrailingspace &#124; consumeleadingspaces</span><span class="sxs-lookup"><span data-stu-id="20d80-119">OneTrailingSpace &#124; ConsumeLeadingSpaces</span></span>|  
  
 <span data-ttu-id="20d80-120">Der für diesen erkannten Ausdruck zurückgegebene Text wird wie folgt gedruckt: "Hallo, er hat gesagt."</span><span class="sxs-lookup"><span data-stu-id="20d80-120">The text returned for this recognized phrase is printed as: "Hello, he said."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="20d80-121">Im folgenden Beispiel wird die <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> -Eigenschaft einer Liste von <xref:System.Speech.Recognition.RecognizedWordUnit> -Objekten verwendet, um die Wörter als Ausdruck zu formatieren.</span><span class="sxs-lookup"><span data-stu-id="20d80-121">The following example uses the <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property of a list of <xref:System.Speech.Recognition.RecognizedWordUnit> objects to format the words as a phrase.</span></span>  
  
```csharp  
  
// Use the DisplayAttributes property to format speech as text.   
  
static string GetDisplayText(List<RecognizedWordUnit> words)  
{  
  StringBuilder sb = new StringBuilder();  
  
  // Concatenate the word units together. Use the DisplayAttributes  
  // property of each word unit to add or remove white space around  
  // the word unit.  
  foreach (RecognizedWordUnit word in words)  
  {  
    if ((word.DisplayAttributes  
      & DisplayAttributes.ConsumeLeadingSpaces) != 0))  
    {  
      sb = new StringBuilder(sb.ToString().TrimEnd());  
    }  
  
    sb.Append(word.Text);  
  
    if ((word.DisplayAttributes  
      & DisplayAttributes.OneTrailingSpace) != 0)  
    {  
      sb.Append(" ");  
    }  
    else if ((word.DisplayAttributes  
      & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      sb.Append("  ");  
    }  
  }  
  
  return sb.ToString();  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognizedPhrase" />
    <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
    <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
    <altmember cref="T:System.Speech.Recognition.ReplacementText" />
  </Docs>
  <Members>
    <Member MemberName="ConsumeLeadingSpaces">
      <MemberSignature Language="C#" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes ConsumeLeadingSpaces = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces" />
      <MemberSignature Language="VB.NET" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="C++ CLI" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="F#" Value="ConsumeLeadingSpaces = 16" Usage="System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary><span data-ttu-id="20d80-122">Vor dem Element stehen keine Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="20d80-122">The item has no spaces preceding it.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Speech.Recognition.DisplayAttributes.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="20d80-123">Das Element gibt nicht an, wie Leerzeichen behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="20d80-123">The item does not specify how white space is handled.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="OneTrailingSpace">
      <MemberSignature Language="C#" Value="OneTrailingSpace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes OneTrailingSpace = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.OneTrailingSpace" />
      <MemberSignature Language="VB.NET" Value="OneTrailingSpace" />
      <MemberSignature Language="C++ CLI" Value="OneTrailingSpace" />
      <MemberSignature Language="F#" Value="OneTrailingSpace = 4" Usage="System.Speech.Recognition.DisplayAttributes.OneTrailingSpace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary><span data-ttu-id="20d80-124">Dem Element folgt ein Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="20d80-124">The item has one space following it.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="TwoTrailingSpaces">
      <MemberSignature Language="C#" Value="TwoTrailingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes TwoTrailingSpaces = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces" />
      <MemberSignature Language="VB.NET" Value="TwoTrailingSpaces" />
      <MemberSignature Language="C++ CLI" Value="TwoTrailingSpaces" />
      <MemberSignature Language="F#" Value="TwoTrailingSpaces = 8" Usage="System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary><span data-ttu-id="20d80-125">Dem Element folgen zwei Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="20d80-125">The item has two spaces following it.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="ZeroTrailingSpaces">
      <MemberSignature Language="C#" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes ZeroTrailingSpaces = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces" />
      <MemberSignature Language="VB.NET" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="C++ CLI" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="F#" Value="ZeroTrailingSpaces = 2" Usage="System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="20d80-126">Dem Element folgen keine Leerzeichen.</span><span class="sxs-lookup"><span data-stu-id="20d80-126">The item has no spaces following it.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
