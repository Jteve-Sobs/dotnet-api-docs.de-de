<Type Name="DisplayAttributes" FullName="System.Speech.Recognition.DisplayAttributes">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e2f352bf8093aff4e5db419c8f2fd2350126dac2" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39728942" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum DisplayAttributes" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed DisplayAttributes extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.DisplayAttributes" />
  <TypeSignature Language="VB.NET" Value="Public Enum DisplayAttributes" />
  <TypeSignature Language="C++ CLI" Value="public enum class DisplayAttributes" />
  <TypeSignature Language="F#" Value="type DisplayAttributes = " />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="cd310-101">Listet die Optionen auf, die das <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />-Objekt verwenden kann, um Leerräume für die Anzeige eines Worts oder Satzzeichens anzugeben.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cd310-101">Lists the options that the <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" /> object can use to specify white space for the display of a word or punctuation mark.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cd310-102">Windows Desktop Speech gibt erkannten Ausdrücke als Auflistungen von <xref:System.Speech.Recognition.RecognizedWordUnit> oder <xref:System.Speech.Recognition.ReplacementText> Objekte.</span><span class="sxs-lookup"><span data-stu-id="cd310-102">Windows Desktop Speech returns recognized phrases as collections of <xref:System.Speech.Recognition.RecognizedWordUnit> or <xref:System.Speech.Recognition.ReplacementText> objects.</span></span> <span data-ttu-id="cd310-103">Jedes Objekt entspricht einer einzelnen Worts oder Satzzeichens.</span><span class="sxs-lookup"><span data-stu-id="cd310-103">Each object corresponds to a single word or punctuation mark.</span></span> <span data-ttu-id="cd310-104">Die `DisplayAttributes` Eigenschaft eine <xref:System.Speech.Recognition.RecognizedWordUnit> oder <xref:System.Speech.Recognition.ReplacementText> verwendet ein Element der <xref:System.Speech.Recognition.DisplayAttributes> Enumeration beschrieben, wie print Abstand zu einer bestimmten Worts oder Satzzeichens behandelt wird.</span><span class="sxs-lookup"><span data-stu-id="cd310-104">The `DisplayAttributes` property of a <xref:System.Speech.Recognition.RecognizedWordUnit> or <xref:System.Speech.Recognition.ReplacementText> uses a member of the <xref:System.Speech.Recognition.DisplayAttributes> enumeration to describe how print spacing is handled around a given word or punctuation mark.</span></span>  
  
 <span data-ttu-id="cd310-105">Zwei oder mehr Mitglieder der `DisplayAttributes` Enumeration kann kombiniert werden, indem eine bitweise `OR` angeben, wie ein bestimmtes Wort angezeigt werden soll.</span><span class="sxs-lookup"><span data-stu-id="cd310-105">Two or more members of the `DisplayAttributes` enumeration may be combined by a bit-wise `OR` to specify how a particular word should be displayed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="cd310-106">Die anzeigeformatierung, dass die Spracherkennung verwendet ist sprachspezifisch.</span><span class="sxs-lookup"><span data-stu-id="cd310-106">The display formatting that the speech recognizer uses is language specific.</span></span>  
  
 <span data-ttu-id="cd310-107">Nehmen wir beispielsweise an der eingabebegriff zu einer erkennungs-Engine, die mit der Standard-System-Abfragegrammatik gebotenen <xref:System.Speech.Recognition.DictationGrammar> ist das "Hello Komma er Zeitraum sagte".</span><span class="sxs-lookup"><span data-stu-id="cd310-107">For example, suppose the input phrase to a recognition engine using the default system grammar provided by <xref:System.Speech.Recognition.DictationGrammar> is "Hello comma he said period".</span></span> <span data-ttu-id="cd310-108">Die erkennungs-Engine gibt einen <xref:System.Speech.Recognition.RecognizedPhrase> mit fünf <xref:System.Speech.Recognition.RecognizedWordUnit> , enthält die folgenden Objekte durch den folgenden Zeichenfolgen `DisplayAttributes` Werte.</span><span class="sxs-lookup"><span data-stu-id="cd310-108">Then the recognition engine returns a <xref:System.Speech.Recognition.RecognizedPhrase> containing five <xref:System.Speech.Recognition.RecognizedWordUnit> objects containing the following strings with the following `DisplayAttributes` values.</span></span>  
  
|<span data-ttu-id="cd310-109">Element</span><span class="sxs-lookup"><span data-stu-id="cd310-109">Item</span></span>|`DisplayAttributes`|  
|----------|-------------------------|  
|<span data-ttu-id="cd310-110">Hello</span><span class="sxs-lookup"><span data-stu-id="cd310-110">Hello</span></span>|<span data-ttu-id="cd310-111">OneTrailingSpace</span><span class="sxs-lookup"><span data-stu-id="cd310-111">OneTrailingSpace</span></span>|  
|<span data-ttu-id="cd310-112">,</span><span class="sxs-lookup"><span data-stu-id="cd310-112">,</span></span>|<span data-ttu-id="cd310-113">OneTrailingSpace &#124; ConsumeLeadingSpaces</span><span class="sxs-lookup"><span data-stu-id="cd310-113">OneTrailingSpace &#124; ConsumeLeadingSpaces</span></span>|  
|<span data-ttu-id="cd310-114">er</span><span class="sxs-lookup"><span data-stu-id="cd310-114">he</span></span>|<span data-ttu-id="cd310-115">OneTrailingSpace</span><span class="sxs-lookup"><span data-stu-id="cd310-115">OneTrailingSpace</span></span>|  
|<span data-ttu-id="cd310-116">als</span><span class="sxs-lookup"><span data-stu-id="cd310-116">said</span></span>|<span data-ttu-id="cd310-117">OneTrailingSpace</span><span class="sxs-lookup"><span data-stu-id="cd310-117">OneTrailingSpace</span></span>|  
|<span data-ttu-id="cd310-118">sein.</span><span class="sxs-lookup"><span data-stu-id="cd310-118">.</span></span>|<span data-ttu-id="cd310-119">OneTrailingSpace &#124; ConsumeLeadingSpaces</span><span class="sxs-lookup"><span data-stu-id="cd310-119">OneTrailingSpace &#124; ConsumeLeadingSpaces</span></span>|  
  
 <span data-ttu-id="cd310-120">Der Text zurückgegeben, für wie dieser erkannte Ausdruck ausgegeben wird: "Hello, er sagte."</span><span class="sxs-lookup"><span data-stu-id="cd310-120">The text returned for this recognized phrase is printed as: "Hello, he said."</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="cd310-121">Im folgenden Beispiel wird die <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> Eigenschaft aus einer Liste von <xref:System.Speech.Recognition.RecognizedWordUnit> Objekte, die Wörter als einen Ausdruck zu formatieren.</span><span class="sxs-lookup"><span data-stu-id="cd310-121">The following example uses the <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property of a list of <xref:System.Speech.Recognition.RecognizedWordUnit> objects to format the words as a phrase.</span></span>  
  
```csharp  
  
// Use the DisplayAttributes property to format speech as text.   
  
static string GetDisplayText(List<RecognizedWordUnit> words)  
{  
  StringBuilder sb = new StringBuilder();  
  
  // Concatenate the word units together. Use the DisplayAttributes  
  // property of each word unit to add or remove white space around  
  // the word unit.  
  foreach (RecognizedWordUnit word in words)  
  {  
    if ((word.DisplayAttributes  
      & DisplayAttributes.ConsumeLeadingSpaces) != 0))  
    {  
      sb = new StringBuilder(sb.ToString().TrimEnd());  
    }  
  
    sb.Append(word.Text);  
  
    if ((word.DisplayAttributes  
      & DisplayAttributes.OneTrailingSpace) != 0)  
    {  
      sb.Append(" ");  
    }  
    else if ((word.DisplayAttributes  
      & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      sb.Append("  ");  
    }  
  }  
  
  return sb.ToString();  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognizedPhrase" />
    <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
    <altmember cref="T:System.Speech.Recognition.RecognizedWordUnit" />
    <altmember cref="T:System.Speech.Recognition.ReplacementText" />
  </Docs>
  <Members>
    <Member MemberName="ConsumeLeadingSpaces">
      <MemberSignature Language="C#" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes ConsumeLeadingSpaces = int32(16)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces" />
      <MemberSignature Language="VB.NET" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="C++ CLI" Value="ConsumeLeadingSpaces" />
      <MemberSignature Language="F#" Value="ConsumeLeadingSpaces = 16" Usage="System.Speech.Recognition.DisplayAttributes.ConsumeLeadingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>16</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd310-122">Vor dem Element stehen keine Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd310-122">The item has no spaces preceding it.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes None = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Speech.Recognition.DisplayAttributes.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd310-123">Das Element gibt nicht an, wie Leerzeichen behandelt werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd310-123">The item does not specify how white space is handled.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="OneTrailingSpace">
      <MemberSignature Language="C#" Value="OneTrailingSpace" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes OneTrailingSpace = int32(4)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.OneTrailingSpace" />
      <MemberSignature Language="VB.NET" Value="OneTrailingSpace" />
      <MemberSignature Language="C++ CLI" Value="OneTrailingSpace" />
      <MemberSignature Language="F#" Value="OneTrailingSpace = 4" Usage="System.Speech.Recognition.DisplayAttributes.OneTrailingSpace" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>4</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd310-124">Dem Element folgt ein Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd310-124">The item has one space following it.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="TwoTrailingSpaces">
      <MemberSignature Language="C#" Value="TwoTrailingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes TwoTrailingSpaces = int32(8)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces" />
      <MemberSignature Language="VB.NET" Value="TwoTrailingSpaces" />
      <MemberSignature Language="C++ CLI" Value="TwoTrailingSpaces" />
      <MemberSignature Language="F#" Value="TwoTrailingSpaces = 8" Usage="System.Speech.Recognition.DisplayAttributes.TwoTrailingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>8</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd310-125">Dem Element folgen zwei Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd310-125">The item has two spaces following it.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ZeroTrailingSpaces">
      <MemberSignature Language="C#" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Speech.Recognition.DisplayAttributes ZeroTrailingSpaces = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces" />
      <MemberSignature Language="VB.NET" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="C++ CLI" Value="ZeroTrailingSpaces" />
      <MemberSignature Language="F#" Value="ZeroTrailingSpaces = 2" Usage="System.Speech.Recognition.DisplayAttributes.ZeroTrailingSpaces" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="cd310-126">Dem Element folgen keine Leerzeichen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cd310-126">The item has no spaces following it.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>