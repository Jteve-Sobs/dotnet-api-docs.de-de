<Type Name="SemanticResultValue" FullName="System.Speech.Recognition.SemanticResultValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="653a138a06a6f44dd5fd94ba82b6a4bf339e421e" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48732698" /></Metadata><TypeSignature Language="C#" Value="public class SemanticResultValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultValue" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultValue" />
  <TypeSignature Language="F#" Value="type SemanticResultValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="96097-101">Stellt einen semantischen Wert dar und ordnet optional den Wert einer Komponente einer Spracherkennungsgrammatik zu.</span><span class="sxs-lookup"><span data-stu-id="96097-101">Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96097-102">Verwenden von <xref:System.Speech.Recognition.SemanticResultValue> und <xref:System.Speech.Recognition.SemanticResultKey> Objekte, die in Verbindung mit <xref:System.Speech.Recognition.GrammarBuilder> und <xref:System.Speech.Recognition.Choices>, ist die einfachste Möglichkeit zum Entwerfen einer semantischen Struktur für eine <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="96097-102">Use of <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="96097-103">Semantische Informationen nach einem Ausdruck erfolgt durch Abrufen einer Instanz von <xref:System.Speech.Recognition.SemanticValue>, über die <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> Eigenschaft <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="96097-103">Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="96097-104">Werte, die von verwalteten <xref:System.Speech.Recognition.SemanticResultValue> Objekte definieren, indem <xref:System.Object> Instanzen an die Konstruktoren zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="96097-104">Values managed by <xref:System.Speech.Recognition.SemanticResultValue> objects are defined by <xref:System.Object> instances passed to their constructors.</span></span> <span data-ttu-id="96097-105">Der zugrunde liegende Typ dieses <xref:System.Object> muss `bool`, `int`, `float`, oder `string`.</span><span class="sxs-lookup"><span data-stu-id="96097-105">The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`.</span></span> <span data-ttu-id="96097-106">Ein anderen Typ wird verhindert, dass die Erstellung von einem <xref:System.Speech.Recognition.Grammar> -Instanz mit der <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="96097-106">Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="96097-107">Der typischen Verwendung von einer <xref:System.Speech.Recognition.SemanticResultValue> Instanz ordnet die Instanz eine erkennbare Komponente von einer <xref:System.Speech.Recognition.Grammar>, z. B. ein Ausdruck, der in der Regel oder ein <xref:System.Speech.Recognition.Choices> Objekt.</span><span class="sxs-lookup"><span data-stu-id="96097-107">The typical use of a <xref:System.Speech.Recognition.SemanticResultValue> instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object.</span></span> <span data-ttu-id="96097-108">Wenn die zugeordnete Komponente als Teil eines Erkennungsvorgangs dient der <xref:System.Speech.Recognition.SemanticResultValue> wird verwendet, um einen Wert in der Semantik von der zurückgegebene Ausdruck definieren.</span><span class="sxs-lookup"><span data-stu-id="96097-108">If the associated component is used as part of a recognition operation, the <xref:System.Speech.Recognition.SemanticResultValue> is used to define a value in the semantics of the returned phrase.</span></span>  
  
 <span data-ttu-id="96097-109">Es gibt zwei grundlegende Methoden zum Zuordnen einer <xref:System.Speech.Recognition.SemanticResultValue> -Instanz mit einem grammatikelement, je nach den Konstruktor zum Erstellen der <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="96097-109">There are two basic methods for associating a <xref:System.Speech.Recognition.SemanticResultValue> instance with a grammar element, depending on the constructor used to create the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
-   <span data-ttu-id="96097-110">Wenn nur der Wert (angegeben, die von einer Instanz von <xref:System.Object>) Dient zum Erstellen einer <xref:System.Speech.Recognition.SemanticResultValue> -Objekt, der <xref:System.Speech.Recognition.SemanticResultValue> bezieht sich auf die Grammatik-Komponente, die sie zusätzlich zu vorangestellt eine <xref:System.Speech.Recognition.GrammarBuilder> Objekt.</span><span class="sxs-lookup"><span data-stu-id="96097-110">If only the value (specified by an instance of <xref:System.Object>) is used to construct a <xref:System.Speech.Recognition.SemanticResultValue> object, the <xref:System.Speech.Recognition.SemanticResultValue> is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
     <span data-ttu-id="96097-111">Z. B. im Code-Fragment folgenden eine <xref:System.Speech.Recognition.Grammar> SCCM.ext. vex_gs_computer_system dies <xref:System.Speech.Recognition.GrammarBuilder> Instanz erkennt das Wort "Hintergrund", Wert `true` bei erkannten Ausdruck festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="96097-111">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
    ```csharp  
    GrammarBuilder backgroundGB=new GrammarBuilder("background");  
    backgroundGB.Append(new SemanticResultValue(true));  
    ```  
  
     <span data-ttu-id="96097-112">Weitere Informationen finden Sie in der Beschreibung von <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="96097-112">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="96097-113">Ob eine Zeichenfolge-Wert-Ausdruck oder eine spezifische <xref:System.Speech.Recognition.GrammarBuilder> Instanz ist, verwendet wird, zusammen mit einer <xref:System.Object> , der angibt eine <xref:System.Speech.Recognition.SemanticResultValue> Wert, der Wert automatisch auf den String-Wert-Ausdruck zugeordnet ist oder die <xref:System.Speech.Recognition.GrammarBuilder> Instanz.</span><span class="sxs-lookup"><span data-stu-id="96097-113">If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a <xref:System.Speech.Recognition.SemanticResultValue> value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.</span></span>  <span data-ttu-id="96097-114">Wenn der Ausdruck oder <xref:System.Speech.Recognition.GrammarBuilder> betriebssystemobjekts wird gerade verwendet, den Wert der Semantik von dem erkannten Ausdruck zugewiesen wird.</span><span class="sxs-lookup"><span data-stu-id="96097-114">If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.</span></span>  
  
     <span data-ttu-id="96097-115">Im folgenden Beispiel veranschaulicht dies, und ist funktionell gleichwertig mit der im vorherigen Beispiel, das explizite Aufrufe verwendet <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> und <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="96097-115">The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span> <span data-ttu-id="96097-116">Wenn die Logik der Wert das Wort "Hintergrund", verwendet `true` der erkannten Semantik hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="96097-116">If the recognition logic uses the word "background", the value `true` will be added to the recognized semantics.</span></span>  
  
    ```csharp  
    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background", true));  
    ```  
  
     <span data-ttu-id="96097-117">Weitere Informationen finden Sie unter der Beschreibung der <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> und <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="96097-117">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="96097-118">Von verwendet werden eine <xref:System.Speech.Recognition.Grammar> in der Erkennung, alle <xref:System.Speech.Recognition.SemanticResultValue> Instanzen müssen mit einer der verknüpft werden die <xref:System.Speech.Recognition.SemanticValue> -Objekten, die von diesem verwendet <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="96097-118">To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all <xref:System.Speech.Recognition.SemanticResultValue> instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="96097-119">Dies erfolgt durch Zuordnen von einen semantischen Schlüssel mit dem <xref:System.Speech.Recognition.SemanticResultValue>.</span><span class="sxs-lookup"><span data-stu-id="96097-119">This is done by associating a semantic key with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="96097-120">Semantische Schlüssel angefügt werden können explizit eine <xref:System.Speech.Recognition.SemanticResultValue>mithilfe einer <xref:System.Speech.Recognition.SemanticResultKey> Objekt.</span><span class="sxs-lookup"><span data-stu-id="96097-120">Semantic keys can be explicitly attached to a <xref:System.Speech.Recognition.SemanticResultValue>, using a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  <span data-ttu-id="96097-121"><xref:System.Speech.Recognition.SemanticResultValue> der Schlüssel des Stammzertifikats der Standard-Instanzen, die nicht explizit auf einen Schlüssel angefügt zugeordnet sind <xref:System.Speech.Recognition.SemanticValue>.</span><span class="sxs-lookup"><span data-stu-id="96097-121"><xref:System.Speech.Recognition.SemanticResultValue> instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.</span></span>  
  
 <span data-ttu-id="96097-122">Nach einer <xref:System.Speech.Recognition.SemanticResultValue> wurde verwendet, um das Festlegen der <xref:System.Speech.Recognition.SemanticValue.Value%2A>, ob es mit den standardmäßigen Stamm-Schlüssel oder eine bestimmte gekennzeichnet ist <xref:System.Speech.Recognition.SemanticResultKey>, dieser Wert darf nicht geändert werden, oder eine Ausnahme kommt es während der Erkennungsvorgänge.</span><span class="sxs-lookup"><span data-stu-id="96097-122">After a <xref:System.Speech.Recognition.SemanticResultValue> has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.</span></span>  
  
 <span data-ttu-id="96097-123">Im folgende Beispiel wird eine Ausnahme ausgelöst, da er legt fest, und anschließend den Stamm ändert <xref:System.Speech.Recognition.SemanticValue.Value%2A> von einem <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="96097-123">The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
```csharp  
GrammarBuilder gb=new GrammarBuilder();  
gb.Append(new SemanticResultValue("One"));  
gb.Append(new SemanticResultValue("Two"));  
```  
  
 <span data-ttu-id="96097-124">Auf der anderen Seite ist der Code im folgenden Beispiel zulässig.</span><span class="sxs-lookup"><span data-stu-id="96097-124">On the other hand, the code in the following example is permitted.</span></span> <span data-ttu-id="96097-125">Obwohl sie mehrere Instanzen von definiert <xref:System.Speech.Recognition.SemanticResultValue>, sie sind in enthalten eine <xref:System.Speech.Recognition.Choices> -Objekt, und nur eine jemals zum Festlegen des Werts des Schlüssels verwendet wird `bgOrfgText`.</span><span class="sxs-lookup"><span data-stu-id="96097-125">Although it defines multiple instances of <xref:System.Speech.Recognition.SemanticResultValue>, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.</span></span>  
  
```csharp  
Choices fgOrbgChoice = new Choices();  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background"));  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground"));  
SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgText", fgOrbgChoice);  
```
  
## Examples  
 <span data-ttu-id="96097-126">Das folgende Beispiel gibt eine <xref:System.Speech.Recognition.Grammar> , erkennt den Befehl "Set/ändern/Alter Vordergrund-/Hintergrund...</span><span class="sxs-lookup"><span data-stu-id="96097-126">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="96097-127">[List "Farbe"] ".</span><span class="sxs-lookup"><span data-stu-id="96097-127">[color list]".</span></span>  <span data-ttu-id="96097-128"><xref:System.Speech.Recognition.SemanticResultValue> und <xref:System.Speech.Recognition.SemanticResultKey> Instanzen (in Verbindung mit <xref:System.Speech.Recognition.Choices> und <xref:System.Speech.Recognition.GrammarBuilder> Objekte) werden verwendet, um definieren über die Anerkennung-Semantik, die analysiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="96097-128"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="96097-129">Die analysierte Semantik bestimmen, welche Farbe angefordert wurde und ob Vorder- oder Hintergrund ist, geändert werden.</span><span class="sxs-lookup"><span data-stu-id="96097-129">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(new SemanticResultValue(introGB, String.Format("Command: {0}", introString)));  
  }    
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                       cmdIntro,  
                       new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361587(v%3doffice.14)"><span data-ttu-id="96097-130">Verwenden eine SemanticResultKey, um eine SemanticResultValue zu extrahieren</span><span class="sxs-lookup"><span data-stu-id="96097-130">Using a SemanticResultKey to Extract a SemanticResultValue</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="96097-131">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="96097-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96097-132">Die `SemanticResultValue` Konstruktoren unterstützen das Angeben einer <xref:System.Object> -Instanz mit einer zugrunde liegenden Datentyp des `bool`, `int`, `float`, oder `string`.</span><span class="sxs-lookup"><span data-stu-id="96097-132">The `SemanticResultValue` constructors support specifying an <xref:System.Object> instance with an underlying data type of `bool`, `int`, `float`, or `string`.</span></span>  
  
 <span data-ttu-id="96097-133">Erstellen Sie ein Konstruktor kann eine `SemanticResultValue` -Instanz in einer der beiden Umstände:</span><span class="sxs-lookup"><span data-stu-id="96097-133">A constructor can create a `SemanticResultValue` instance in either of two circumstances:</span></span>  
  
-   <span data-ttu-id="96097-134">Die `SemanticResultValue` Instanz muss explizit ein grammatikelement zugeordnet sein, wenn mit einer <xref:System.Speech.Recognition.GrammarBuilder> zum Erstellen einer <xref:System.Speech.Recognition.Grammar>.</span><span class="sxs-lookup"><span data-stu-id="96097-134">The `SemanticResultValue` instance must be explicitly associated with a grammar element when using a <xref:System.Speech.Recognition.GrammarBuilder> to construct a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
-   <span data-ttu-id="96097-135">Die `SemanticResultValue` ist bereits ein String-Wert-Ausdruck zugeordnet oder <xref:System.Speech.Recognition.GrammarBuilder> Objekt.</span><span class="sxs-lookup"><span data-stu-id="96097-135">The `SemanticResultValue` is already associated with a string value phrase or a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="96097-136">Der Wert, der von <see cref="T:System.Speech.Recognition.SemanticResultValue" /> gesteuert wird.</span><span class="sxs-lookup"><span data-stu-id="96097-136">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="96097-137">Der Wert muss vom Typ <see langword="bool" />, <see langword="int" />, <see langword="float" /> oder <see langword="string" /> sein.</span><span class="sxs-lookup"><span data-stu-id="96097-137">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="96097-138">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Klasse und gibt einen semantischen Wert an.</span><span class="sxs-lookup"><span data-stu-id="96097-138">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and specifies a semantic value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96097-139">Ein `SemanticResultValue` zurückgegeben, die von diesem Konstruktor ist nicht mit einem bestimmten grammatikelement verknüpft.</span><span class="sxs-lookup"><span data-stu-id="96097-139">A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element.</span></span> <span data-ttu-id="96097-140">Die Zuordnung erfolgen muss explizit mit der Instanz von `SemanticResultValue` in Verbindung mit <xref:System.Speech.Recognition.GrammarBuilder>.</span><span class="sxs-lookup"><span data-stu-id="96097-140">The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="96097-141">Z. B. im Code-Fragment folgenden eine <xref:System.Speech.Recognition.Grammar> SCCM.ext. vex_gs_computer_system dies <xref:System.Speech.Recognition.GrammarBuilder> Instanz erkennt das Wort "Hintergrund", Wert `true` bei erkannten Ausdruck festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="96097-141">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
```csharp  
GrammarBuilder backgroundGB=new GrammarBuilder("background");  
backgroundGB.Append(new SemanticResultValue(true));  
```  
  
   
  
## Examples  
 <span data-ttu-id="96097-142">Das folgende Beispiel gibt eine <xref:System.Speech.Recognition.Grammar> , erkennt den Befehl "Set/ändern/Alter Vordergrund-/Hintergrund...</span><span class="sxs-lookup"><span data-stu-id="96097-142">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="96097-143">[List "Farbe"] ".</span><span class="sxs-lookup"><span data-stu-id="96097-143">[color list]".</span></span> <span data-ttu-id="96097-144"><xref:System.Speech.Recognition.SemanticResultValue> und <xref:System.Speech.Recognition.SemanticResultKey> Instanzen (in Verbindung mit <xref:System.Speech.Recognition.Choices> und <xref:System.Speech.Recognition.GrammarBuilder> Objekte) werden verwendet, um definieren über die Anerkennung-Semantik, die analysiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="96097-144"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="96097-145">Die analysierte Semantik bestimmen, welche Farbe angefordert wurde und ob Vorder- oder Hintergrund ist, geändert werden.</span><span class="sxs-lookup"><span data-stu-id="96097-145">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
        cmdIntro,   
        new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Speech::Recognition::GrammarBuilder ^ builder, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : System.Speech.Recognition.GrammarBuilder * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (builder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="96097-146">Eine in der Erkennung verwendete Grammatikkomponente.</span><span class="sxs-lookup"><span data-stu-id="96097-146">A grammar component to be used in recognition.</span></span></param>
        <param name="value"><span data-ttu-id="96097-147">Der Wert, der von <see cref="T:System.Speech.Recognition.SemanticResultValue" /> gesteuert wird.</span><span class="sxs-lookup"><span data-stu-id="96097-147">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="96097-148">Der Wert muss vom Typ <see langword="bool" />, <see langword="int" />, <see langword="float" /> oder <see langword="string" /> sein.</span><span class="sxs-lookup"><span data-stu-id="96097-148">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="96097-149">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Klasse und ordnet einem <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt einen semantischen Wert zu.</span><span class="sxs-lookup"><span data-stu-id="96097-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96097-150">Wenn das grammatikelement von angegeben <xref:System.Speech.Recognition.GrammarBuilder> werden in der Logik, `value` wird in der Semantik der erkannten Ausgabe festgelegt.</span><span class="sxs-lookup"><span data-stu-id="96097-150">If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="96097-151">Im folgenden Codefragment wird die Logik mit erstellt die <xref:System.Speech.Recognition.GrammarBuilder> Instanz (`myGb`) verwendet die <xref:System.Speech.Recognition.Choices> Objekt (`myChoice`) Eingabe zum Identifizieren des Werts `true` der erkannten Semantik hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="96097-151">In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue(myChoice, true);  
```  
  
 <span data-ttu-id="96097-152">Als <xref:System.Speech.Recognition.GrammarBuilder> unterstützt die implizite Konvertierung für <xref:System.Speech.Recognition.Choices>, `SemanticResultValue`, und <xref:System.Speech.Recognition.SemanticResultKey>, diesen Konstruktor kann diese Objekte ebenfalls verwenden.</span><span class="sxs-lookup"><span data-stu-id="96097-152">As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96097-153">Das folgende Beispiel gibt eine <xref:System.Speech.Recognition.Grammar> , erkennt den Befehl "Set/ändern/Alter Vordergrund-/Hintergrund...</span><span class="sxs-lookup"><span data-stu-id="96097-153">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="96097-154">[List "Farbe"] ".</span><span class="sxs-lookup"><span data-stu-id="96097-154">[color list]".</span></span> <span data-ttu-id="96097-155"><xref:System.Speech.Recognition.SemanticResultValue> und <xref:System.Speech.Recognition.SemanticResultKey> Instanzen (in Verbindung mit <xref:System.Speech.Recognition.Choices> und <xref:System.Speech.Recognition.GrammarBuilder> Objekte) werden verwendet, um definieren über die Anerkennung-Semantik, die analysiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="96097-155"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="96097-156">Die analysierte Semantik bestimmen, welche Farbe angefordert wurde und ob Vorder- oder Hintergrund ist, geändert werden.</span><span class="sxs-lookup"><span data-stu-id="96097-156">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
    }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                      cmdIntro,  
                      new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (string phrase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::String ^ phrase, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : string * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (phrase, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="96097-157">Ein Ausdruck, der in der Erkennung verwendetet werden soll.</span><span class="sxs-lookup"><span data-stu-id="96097-157">A phrase to be used in recognition.</span></span></param>
        <param name="value"><span data-ttu-id="96097-158">Der Wert, der von <see cref="T:System.Speech.Recognition.SemanticResultValue" /> gesteuert wird.</span><span class="sxs-lookup"><span data-stu-id="96097-158">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="96097-159">Der Wert muss vom Typ <see langword="bool" />, <see langword="int" />, <see langword="float" /> oder <see langword="string" /> sein.</span><span class="sxs-lookup"><span data-stu-id="96097-159">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="96097-160">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Klasse und ordnet einem <see cref="T:System.String" />-Objekt einen semantischen Wert zu.</span><span class="sxs-lookup"><span data-stu-id="96097-160">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.String" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96097-161">Wenn die Zeichenfolge angegebenen `phrase` werden in der Logik, `value` wird in der Semantik der erkannten Ausgabe festgelegt.</span><span class="sxs-lookup"><span data-stu-id="96097-161">If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="96097-162">Im folgenden Codefragment, wenn mit der Logik erstellt die <xref:System.Speech.Recognition.GrammarBuilder> Instanz (`myGb`) verwendet die Zeichenfolge "Meine Hypothek" Eingabe identifizieren den Wert `true` der erkannten Semantik hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="96097-162">In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string "my mortgage" to identify input, the value `true` will be added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue("my mortgage", true);  
```  
  
   
  
## Examples  
 <span data-ttu-id="96097-163">Das folgende Beispiel gibt eine <xref:System.Speech.Recognition.Grammar> , erkennt den Befehl "Set/ändern/Alter Vordergrund-/Hintergrund...</span><span class="sxs-lookup"><span data-stu-id="96097-163">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="96097-164">[List "Farbe"] ".</span><span class="sxs-lookup"><span data-stu-id="96097-164">[color list]".</span></span> <span data-ttu-id="96097-165"><xref:System.Speech.Recognition.SemanticResultValue> und <xref:System.Speech.Recognition.SemanticResultKey> Instanzen (in Verbindung mit <xref:System.Speech.Recognition.Choices> und <xref:System.Speech.Recognition.GrammarBuilder> Objekte) werden verwendet, um definieren über die Anerkennung-Semantik, die analysiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="96097-165"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="96097-166">Die analysierte Semantik bestimmen, welche Farbe angefordert wurde und ob Vorder- oder Hintergrund ist, geändert werden.</span><span class="sxs-lookup"><span data-stu-id="96097-166">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }  
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(cmdIntro,  
                         new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="semanticResultValue.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96097-167">Gibt eine Instanz von <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zurück, die aus der aktuellen <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Instanz konstruiert wurde.</span><span class="sxs-lookup"><span data-stu-id="96097-167">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span></span></summary>
        <returns><span data-ttu-id="96097-168">Gibt eine Instanz von <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zurück, die aus der aktuellen <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Instanz konstruiert wurde.</span><span class="sxs-lookup"><span data-stu-id="96097-168">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="96097-169">Die Verwendung von <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> ist äquivalent zur Verwendung der <xref:System.Speech.Recognition.GrammarBuilder> Konstruktor, eine <xref:System.Speech.Recognition.SemanticResultValue> als Argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span><span class="sxs-lookup"><span data-stu-id="96097-169">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="96097-170">Das folgende Beispiel erstellt <xref:System.Speech.Recognition.Grammar> Objekte, die Befehle zum Ändern der Hintergrundfarbe zu unterstützen.</span><span class="sxs-lookup"><span data-stu-id="96097-170">The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.</span></span>  
  
 <span data-ttu-id="96097-171">Ein <xref:System.Speech.Recognition.Choices> Objekt (`colorChoice`) mit der Liste der Optionen für die Hintergrundfarben gefüllt ist, mit der <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> -Methode mit <xref:System.Speech.Recognition.GrammarBuilder> -Instanzen, die aus abgerufen werden die <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> Methode für die `SemanticResultValue` erstellte Objekte von Color-Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="96097-171">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.</span></span>  
  
 <span data-ttu-id="96097-172">Ein <xref:System.Speech.Recognition.GrammarBuilder> wird dann durch den Aufruf abgerufen <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> auf eine <xref:System.Speech.Recognition.SemanticResultKey> -Instanz, die verwendet wird, um den semantischen Optionen im Schlüssel der `colorChoice` Instanz.</span><span class="sxs-lookup"><span data-stu-id="96097-172">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RBG.  
  // Choices constructors do not take a SemanticResultValue parameter, so  
  // cast SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    SemanticResultValue colorValue =   
        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
    colorChoice.Add(colorValue.ToGrammarBuilder());  
  }  
  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with an introductory phrase and the  
  // color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the final grammar, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  
  grammar.Name = "Set Background Color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>