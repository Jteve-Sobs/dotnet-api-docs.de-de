<Type Name="SemanticResultValue" FullName="System.Speech.Recognition.SemanticResultValue">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e59411ada9795ac6013ddec8b95b90064bd1f58d" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86826561" /></Metadata><TypeSignature Language="C#" Value="public class SemanticResultValue" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SemanticResultValue extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SemanticResultValue" />
  <TypeSignature Language="VB.NET" Value="Public Class SemanticResultValue" />
  <TypeSignature Language="C++ CLI" Value="public ref class SemanticResultValue" />
  <TypeSignature Language="F#" Value="type SemanticResultValue = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Diagnostics.DebuggerDisplay("{_tag.DebugSummary}")&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e67b8-101">Stellt einen semantischen Wert dar und ordnet optional den Wert einer Komponente einer Spracherkennungsgrammatik zu.</span><span class="sxs-lookup"><span data-stu-id="e67b8-101">Represents a semantic value and optionally associates the value with a component of a speech recognition grammar.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67b8-102">Die Verwendung von <xref:System.Speech.Recognition.SemanticResultValue> -Objekten und- <xref:System.Speech.Recognition.SemanticResultKey> Objekten in Verbindung mit <xref:System.Speech.Recognition.GrammarBuilder> und <xref:System.Speech.Recognition.Choices> ist die einfachste Möglichkeit, eine semantische Struktur für einen zu entwerfen <xref:System.Speech.Recognition.Grammar> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-102">Use of <xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> objects, in conjunction with <xref:System.Speech.Recognition.GrammarBuilder> and <xref:System.Speech.Recognition.Choices>, is the easiest way to design a semantic structure for a <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="e67b8-103">Der Zugriff auf Semantik Informationen für einen Ausdruck erfolgt durch Abrufen einer Instanz von <xref:System.Speech.Recognition.SemanticValue> über die- <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> Eigenschaft für <xref:System.Speech.Recognition.RecognizedPhrase> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-103">Semantic information for a phrase is accessed by obtaining an instance of <xref:System.Speech.Recognition.SemanticValue>, through the <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> property on <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e67b8-104">Die von- <xref:System.Speech.Recognition.SemanticResultValue> Objekten verwalteten Werte werden durch- <xref:System.Object> Instanzen definiert, die an Ihre Konstruktoren übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="e67b8-104">Values managed by <xref:System.Speech.Recognition.SemanticResultValue> objects are defined by <xref:System.Object> instances passed to their constructors.</span></span> <span data-ttu-id="e67b8-105">Der zugrunde liegende Typ dieses <xref:System.Object> muss `bool` , `int` , oder sein `float` `string` .</span><span class="sxs-lookup"><span data-stu-id="e67b8-105">The underlying type of this <xref:System.Object> must be `bool`, `int`, `float`, or `string`.</span></span> <span data-ttu-id="e67b8-106">Jeder andere Typ verhindert die Erstellung einer- <xref:System.Speech.Recognition.Grammar> Instanz mit dem <xref:System.Speech.Recognition.SemanticResultValue> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-106">Any other type will prevent construction of a <xref:System.Speech.Recognition.Grammar> instance with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="e67b8-107">Die typische Verwendung einer- <xref:System.Speech.Recognition.SemanticResultValue> Instanz ordnet die-Instanz einer erkennbaren Komponente eines zu <xref:System.Speech.Recognition.Grammar> , z. b. eines Ausdrucks, einer Regel oder eines- <xref:System.Speech.Recognition.Choices> Objekts.</span><span class="sxs-lookup"><span data-stu-id="e67b8-107">The typical use of a <xref:System.Speech.Recognition.SemanticResultValue> instance associates the instance with a recognizable component of a <xref:System.Speech.Recognition.Grammar>, such as a phrase, a rule, or a <xref:System.Speech.Recognition.Choices> object.</span></span> <span data-ttu-id="e67b8-108">Wenn die zugeordnete Komponente im Rahmen einer Erkennungs Operation verwendet wird, <xref:System.Speech.Recognition.SemanticResultValue> wird der verwendet, um einen Wert in der Semantik des zurückgegebenen Ausdrucks zu definieren.</span><span class="sxs-lookup"><span data-stu-id="e67b8-108">If the associated component is used as part of a recognition operation, the <xref:System.Speech.Recognition.SemanticResultValue> is used to define a value in the semantics of the returned phrase.</span></span>  
  
 <span data-ttu-id="e67b8-109">Es gibt zwei grundlegende Methoden zum Zuordnen einer- <xref:System.Speech.Recognition.SemanticResultValue> Instanz zu einem Grammatik Element, abhängig vom Konstruktor, der zum Erstellen von verwendet wird <xref:System.Speech.Recognition.SemanticResultValue> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-109">There are two basic methods for associating a <xref:System.Speech.Recognition.SemanticResultValue> instance with a grammar element, depending on the constructor used to create the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
-   <span data-ttu-id="e67b8-110">Wenn nur der Wert (angegeben durch eine Instanz von <xref:System.Object> ) verwendet wird, um ein-Objekt zu erstellen <xref:System.Speech.Recognition.SemanticResultValue> , wird der der <xref:System.Speech.Recognition.SemanticResultValue> Grammatik Komponente, die ihm vorangestellt ist, zusätzlich zu einem- <xref:System.Speech.Recognition.GrammarBuilder> Objekt zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="e67b8-110">If only the value (specified by an instance of <xref:System.Object>) is used to construct a <xref:System.Speech.Recognition.SemanticResultValue> object, the <xref:System.Speech.Recognition.SemanticResultValue> is associated with the grammar component that preceded it, in addition to a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
     <span data-ttu-id="e67b8-111">Beispielsweise wird im folgenden Code Fragment, wenn ein, das <xref:System.Speech.Recognition.Grammar> mit dieser Instanz erstellt wurde, <xref:System.Speech.Recognition.GrammarBuilder> das Wort "Background" erkennt, der Wert `true` in der erkannten Ausdrucks Semantik festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="e67b8-111">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
    ```csharp  
    GrammarBuilder backgroundGB=new GrammarBuilder("background");  
    backgroundGB.Append(new SemanticResultValue(true));  
    ```  
  
     <span data-ttu-id="e67b8-112">Weitere Informationen finden Sie in der Beschreibung von <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span><span class="sxs-lookup"><span data-stu-id="e67b8-112">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span>  
  
-   <span data-ttu-id="e67b8-113">Wenn ein Zeichen folgen Wertausdruck oder eine bestimmte- <xref:System.Speech.Recognition.GrammarBuilder> Instanz zusammen mit einem verwendet wird, der <xref:System.Object> einen- <xref:System.Speech.Recognition.SemanticResultValue> Wert angibt, wird dieser Wert automatisch dem Zeichen folgen Wertausdruck oder der- <xref:System.Speech.Recognition.GrammarBuilder> Instanz zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="e67b8-113">If a string value phrase or specific <xref:System.Speech.Recognition.GrammarBuilder> instance is used, together with a <xref:System.Object> that specifies a <xref:System.Speech.Recognition.SemanticResultValue> value, that value is automatically associated with the string value phrase or the <xref:System.Speech.Recognition.GrammarBuilder> instance.</span></span>  <span data-ttu-id="e67b8-114">Wenn der Ausdruck oder das <xref:System.Speech.Recognition.GrammarBuilder> Objekt im Erkennungsprozess verwendet wird, wird der Wert der Semantik des erkannten Ausdrucks zugewiesen.</span><span class="sxs-lookup"><span data-stu-id="e67b8-114">If the phrase or <xref:System.Speech.Recognition.GrammarBuilder> object is used in the process of recognition, the value will be assigned to the semantics of the recognized phrase.</span></span>  
  
     <span data-ttu-id="e67b8-115">Dies wird im folgenden Beispiel veranschaulicht und ist funktional äquivalent zum vorherigen Beispiel, in dem explizite Aufrufe von und verwendet werden <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-115">The following example illustrates this, and is functionally equivalent to the preceding example, which used explicit calls to <xref:System.Speech.Recognition.GrammarBuilder.Append%2A> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Object%29>.</span></span> <span data-ttu-id="e67b8-116">Wenn die Erkennungs Logik das Wort "Background" verwendet, wird der Wert der `true` erkannten Semantik hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="e67b8-116">If the recognition logic uses the word "background", the value `true` will be added to the recognized semantics.</span></span>  
  
    ```csharp  
    fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background", true));  
    ```  
  
     <span data-ttu-id="e67b8-117">Weitere Informationen finden Sie in der Beschreibung von <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> und <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-117">For more information, see the description of <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.Speech.Recognition.GrammarBuilder%2CSystem.Object%29> and <xref:System.Speech.Recognition.SemanticResultValue.%23ctor%28System.String%2CSystem.Object%29>.</span></span>  
  
 <span data-ttu-id="e67b8-118">Um von einem als Erkennungs verwendet werden zu können <xref:System.Speech.Recognition.Grammar> , <xref:System.Speech.Recognition.SemanticResultValue> müssen alle Instanzen einem der-Objekte zugeordnet werden, die <xref:System.Speech.Recognition.SemanticValue> von diesem verwendet werden <xref:System.Speech.Recognition.Grammar> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-118">To be used by a <xref:System.Speech.Recognition.Grammar> in recognition, all <xref:System.Speech.Recognition.SemanticResultValue> instances must be associated with one of the <xref:System.Speech.Recognition.SemanticValue> objects used by that <xref:System.Speech.Recognition.Grammar>.</span></span> <span data-ttu-id="e67b8-119">Dies erfolgt durch Zuordnen eines Semantik Schlüssels zum <xref:System.Speech.Recognition.SemanticResultValue> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-119">This is done by associating a semantic key with the <xref:System.Speech.Recognition.SemanticResultValue>.</span></span>  
  
 <span data-ttu-id="e67b8-120">Semantische Schlüssel können mithilfe eines-Objekts explizit an einen angefügt werden <xref:System.Speech.Recognition.SemanticResultValue> <xref:System.Speech.Recognition.SemanticResultKey> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-120">Semantic keys can be explicitly attached to a <xref:System.Speech.Recognition.SemanticResultValue>, using a <xref:System.Speech.Recognition.SemanticResultKey> object.</span></span>  <span data-ttu-id="e67b8-121"><xref:System.Speech.Recognition.SemanticResultValue> Instanzen, die nicht explizit an einen Schlüssel angefügt sind, werden an den Stamm Schlüssel der Standardeinstellung angefügt <xref:System.Speech.Recognition.SemanticValue> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-121"><xref:System.Speech.Recognition.SemanticResultValue> instances not explicitly attached to a key are attached to the root key of the default <xref:System.Speech.Recognition.SemanticValue>.</span></span>  
  
 <span data-ttu-id="e67b8-122">Nachdem ein <xref:System.Speech.Recognition.SemanticResultValue> verwendet wurde, um das festzulegen <xref:System.Speech.Recognition.SemanticValue.Value%2A> , d. h., ob es mit dem Standard Stamm Schlüssel oder einem bestimmten gekennzeichnet ist <xref:System.Speech.Recognition.SemanticResultKey> , darf dieser Wert nicht geändert werden, oder es tritt eine Ausnahme während der Erkennungs Vorgänge auf.</span><span class="sxs-lookup"><span data-stu-id="e67b8-122">After a <xref:System.Speech.Recognition.SemanticResultValue> has been used to set the <xref:System.Speech.Recognition.SemanticValue.Value%2A>, whether it is tagged with the default root key or by any particular <xref:System.Speech.Recognition.SemanticResultKey>, that value must not be modified or an exception will occur during recognition operations.</span></span>  
  
 <span data-ttu-id="e67b8-123">Im folgenden Beispiel wird eine Ausnahme ausgelöst, da Sie den Stamm eines festlegt und dann ändert <xref:System.Speech.Recognition.SemanticValue.Value%2A> <xref:System.Speech.Recognition.Grammar> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-123">The following example will cause an exception because it sets and then modifies the root <xref:System.Speech.Recognition.SemanticValue.Value%2A> of a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
```csharp  
GrammarBuilder gb=new GrammarBuilder();  
gb.Append(new SemanticResultValue("One"));  
gb.Append(new SemanticResultValue("Two"));  
```  
  
 <span data-ttu-id="e67b8-124">Der Code im folgenden Beispiel ist dagegen zulässig.</span><span class="sxs-lookup"><span data-stu-id="e67b8-124">On the other hand, the code in the following example is permitted.</span></span> <span data-ttu-id="e67b8-125">Obwohl mehrere Instanzen von definiert <xref:System.Speech.Recognition.SemanticResultValue> sind, sind Sie in einem <xref:System.Speech.Recognition.Choices> -Objekt enthalten, und es wird immer nur eine verwendet, um den Wert des Schlüssels festzulegen `bgOrfgText` .</span><span class="sxs-lookup"><span data-stu-id="e67b8-125">Although it defines multiple instances of <xref:System.Speech.Recognition.SemanticResultValue>, they are included in a <xref:System.Speech.Recognition.Choices> object, and only one will ever be used to set the value of the key `bgOrfgText`.</span></span>  
  
```csharp  
Choices fgOrbgChoice = new Choices();  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("background"));  
fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground"));  
SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgText", fgOrbgChoice);  
```
  
## Examples  
 <span data-ttu-id="e67b8-126">Im folgenden Beispiel wird ein-Wert zurückgegeben <xref:System.Speech.Recognition.Grammar> , der den Befehl "Set/Change/Alter Vordergrund/Hintergrund...</span><span class="sxs-lookup"><span data-stu-id="e67b8-126">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="e67b8-127">[Farbliste] ".</span><span class="sxs-lookup"><span data-stu-id="e67b8-127">[color list]".</span></span>  <span data-ttu-id="e67b8-128"><xref:System.Speech.Recognition.SemanticResultValue> -und- <xref:System.Speech.Recognition.SemanticResultKey> Instanzen (in Verbindung mit <xref:System.Speech.Recognition.Choices> -und- <xref:System.Speech.Recognition.GrammarBuilder> Objekten) werden verwendet, um Semantik zu definieren, die bei der Erkennung analysiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="e67b8-128"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="e67b8-129">Die analysierte Semantik bestimmt, welche Farbe angefordert wurde und ob der Vordergrund oder der Hintergrund geändert werden muss.</span><span class="sxs-lookup"><span data-stu-id="e67b8-129">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(new SemanticResultValue(introGB, String.Format("Command: {0}", introString)));  
  }    
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
        (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                       cmdIntro,  
                       new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361587(v%3doffice.14)"><span data-ttu-id="e67b8-130">Verwenden von semantikresultkey zum Extrahieren eines semantikresultvalue</span><span class="sxs-lookup"><span data-stu-id="e67b8-130">Using a SemanticResultKey to Extract a SemanticResultValue</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="e67b8-131">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="e67b8-131">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67b8-132">Die `SemanticResultValue` Konstruktoren unterstützen die Angabe einer <xref:System.Object> Instanz mit dem zugrunde liegenden Datentyp `bool` , `int` , `float` oder `string` .</span><span class="sxs-lookup"><span data-stu-id="e67b8-132">The `SemanticResultValue` constructors support specifying an <xref:System.Object> instance with an underlying data type of `bool`, `int`, `float`, or `string`.</span></span>  
  
 <span data-ttu-id="e67b8-133">Ein Konstruktor kann eine- `SemanticResultValue` Instanz in einem der beiden folgenden Situationen erstellen:</span><span class="sxs-lookup"><span data-stu-id="e67b8-133">A constructor can create a `SemanticResultValue` instance in either of two circumstances:</span></span>  
  
-   <span data-ttu-id="e67b8-134">Die- `SemanticResultValue` Instanz muss explizit einem Grammatik Element zugeordnet werden, wenn ein verwendet wird <xref:System.Speech.Recognition.GrammarBuilder> , um eine zu erstellen <xref:System.Speech.Recognition.Grammar> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-134">The `SemanticResultValue` instance must be explicitly associated with a grammar element when using a <xref:System.Speech.Recognition.GrammarBuilder> to construct a <xref:System.Speech.Recognition.Grammar>.</span></span>  
  
-   <span data-ttu-id="e67b8-135">Der `SemanticResultValue` ist bereits einem Zeichen folgen Wertausdruck oder einem- <xref:System.Speech.Recognition.GrammarBuilder> Objekt zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="e67b8-135">The `SemanticResultValue` is already associated with a string value phrase or a <xref:System.Speech.Recognition.GrammarBuilder> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue value" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="e67b8-136">Der Wert, der von <see cref="T:System.Speech.Recognition.SemanticResultValue" /> gesteuert wird.</span><span class="sxs-lookup"><span data-stu-id="e67b8-136">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="e67b8-137">Der Wert muss vom Typ <see langword="bool" />, <see langword="int" />, <see langword="float" /> oder <see langword="string" /> sein.</span><span class="sxs-lookup"><span data-stu-id="e67b8-137">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="e67b8-138">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Klasse und gibt einen semantischen Wert an.</span><span class="sxs-lookup"><span data-stu-id="e67b8-138">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and specifies a semantic value.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67b8-139">Ein, `SemanticResultValue` der von diesem Konstruktor zurückgegeben wird, ist keinem bestimmten Grammatik Element zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="e67b8-139">A `SemanticResultValue` returned by this constructor is not associated with any particular grammar element.</span></span> <span data-ttu-id="e67b8-140">Die Zuordnung muss explizit erfolgen, indem die Instanz von `SemanticResultValue` in Verbindung mit verwendet wird <xref:System.Speech.Recognition.GrammarBuilder> .</span><span class="sxs-lookup"><span data-stu-id="e67b8-140">The association must be made explicit by using the instance of `SemanticResultValue` in conjunction with <xref:System.Speech.Recognition.GrammarBuilder>.</span></span>  
  
 <span data-ttu-id="e67b8-141">Beispielsweise wird im folgenden Code Fragment, wenn ein, das <xref:System.Speech.Recognition.Grammar> mit dieser Instanz erstellt wurde, <xref:System.Speech.Recognition.GrammarBuilder> das Wort "Background" erkennt, der Wert `true` in der erkannten Ausdrucks Semantik festgelegt wird.</span><span class="sxs-lookup"><span data-stu-id="e67b8-141">For instance, in the code fragment below, if a <xref:System.Speech.Recognition.Grammar> constructed using this <xref:System.Speech.Recognition.GrammarBuilder> instance recognizes the word "background", a value of `true` is set in the recognized phrase semantics.</span></span>  
  
```csharp  
GrammarBuilder backgroundGB=new GrammarBuilder("background");  
backgroundGB.Append(new SemanticResultValue(true));  
```  
  
   
  
## Examples  
 <span data-ttu-id="e67b8-142">Im folgenden Beispiel wird ein-Wert zurückgegeben <xref:System.Speech.Recognition.Grammar> , der den Befehl "Set/Change/Alter Vordergrund/Hintergrund...</span><span class="sxs-lookup"><span data-stu-id="e67b8-142">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="e67b8-143">[Farbliste] ".</span><span class="sxs-lookup"><span data-stu-id="e67b8-143">[color list]".</span></span> <span data-ttu-id="e67b8-144"><xref:System.Speech.Recognition.SemanticResultValue> -und- <xref:System.Speech.Recognition.SemanticResultKey> Instanzen (in Verbindung mit <xref:System.Speech.Recognition.Choices> -und- <xref:System.Speech.Recognition.GrammarBuilder> Objekten) werden verwendet, um Semantik zu definieren, die bei der Erkennung analysiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="e67b8-144"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="e67b8-145">Die analysierte Semantik bestimmt, welche Farbe angefordert wurde und ob der Vordergrund oder der Hintergrund geändert werden muss.</span><span class="sxs-lookup"><span data-stu-id="e67b8-145">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
                 (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
        cmdIntro,   
        new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (System.Speech.Recognition.GrammarBuilder builder, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.Speech.Recognition.GrammarBuilder,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::Speech::Recognition::GrammarBuilder ^ builder, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : System.Speech.Recognition.GrammarBuilder * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (builder, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="builder"><span data-ttu-id="e67b8-146">Eine in der Erkennung verwendete Grammatikkomponente.</span><span class="sxs-lookup"><span data-stu-id="e67b8-146">A grammar component to be used in recognition.</span></span></param>
        <param name="value"><span data-ttu-id="e67b8-147">Der Wert, der von <see cref="T:System.Speech.Recognition.SemanticResultValue" /> gesteuert wird.</span><span class="sxs-lookup"><span data-stu-id="e67b8-147">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="e67b8-148">Der Wert muss vom Typ <see langword="bool" />, <see langword="int" />, <see langword="float" /> oder <see langword="string" /> sein.</span><span class="sxs-lookup"><span data-stu-id="e67b8-148">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="e67b8-149">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Klasse und ordnet einem <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt einen semantischen Wert zu.</span><span class="sxs-lookup"><span data-stu-id="e67b8-149">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.Speech.Recognition.GrammarBuilder" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67b8-150">Wenn das von angegebene Grammatik Element <xref:System.Speech.Recognition.GrammarBuilder> in der Erkennungs Logik verwendet wird, `value` wird in der Semantik der erkannten Ausgabe festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e67b8-150">If the grammar element specified by <xref:System.Speech.Recognition.GrammarBuilder> is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="e67b8-151">Wenn im folgenden Code Fragment die Erkennungs Logik, die mit der- <xref:System.Speech.Recognition.GrammarBuilder> Instanz ( `myGb` ) erstellt wurde, das- <xref:System.Speech.Recognition.Choices> Objekt ( `myChoice` ) zum Identifizieren der Eingabe verwendet, wird der Wert der `true` erkannten Semantik hinzugefügt.</span><span class="sxs-lookup"><span data-stu-id="e67b8-151">In the code fragment below, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the <xref:System.Speech.Recognition.Choices> object (`myChoice`) to identify input, the value `true` is added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue(myChoice, true);  
```  
  
 <span data-ttu-id="e67b8-152">Da <xref:System.Speech.Recognition.GrammarBuilder> die implizite Konvertierung für <xref:System.Speech.Recognition.Choices> ,  `SemanticResultValue` und unterstützt <xref:System.Speech.Recognition.SemanticResultKey> , kann dieser Konstruktor auch diese Objekte verwenden.</span><span class="sxs-lookup"><span data-stu-id="e67b8-152">As <xref:System.Speech.Recognition.GrammarBuilder> supports implicit conversion for <xref:System.Speech.Recognition.Choices>,  `SemanticResultValue`, and <xref:System.Speech.Recognition.SemanticResultKey>, this constructor can use those objects as well.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e67b8-153">Im folgenden Beispiel wird ein-Wert zurückgegeben <xref:System.Speech.Recognition.Grammar> , der den Befehl "Set/Change/Alter Vordergrund/Hintergrund...</span><span class="sxs-lookup"><span data-stu-id="e67b8-153">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="e67b8-154">[Farbliste] ".</span><span class="sxs-lookup"><span data-stu-id="e67b8-154">[color list]".</span></span> <span data-ttu-id="e67b8-155"><xref:System.Speech.Recognition.SemanticResultValue> -und- <xref:System.Speech.Recognition.SemanticResultKey> Instanzen (in Verbindung mit <xref:System.Speech.Recognition.Choices> -und- <xref:System.Speech.Recognition.GrammarBuilder> Objekten) werden verwendet, um Semantik zu definieren, die bei der Erkennung analysiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="e67b8-155"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="e67b8-156">Die analysierte Semantik bestimmt, welche Farbe angefordert wurde und ob der Vordergrund oder der Hintergrund geändert werden muss.</span><span class="sxs-lookup"><span data-stu-id="e67b8-156">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```csharp  
  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow the command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }           
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
              (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
    }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(  
                      cmdIntro,  
                      new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SemanticResultValue (string phrase, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string phrase, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (phrase As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SemanticResultValue(System::String ^ phrase, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.SemanticResultValue : string * obj -&gt; System.Speech.Recognition.SemanticResultValue" Usage="new System.Speech.Recognition.SemanticResultValue (phrase, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="phrase" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="phrase"><span data-ttu-id="e67b8-157">Ein Ausdruck, der in der Erkennung verwendetet werden soll.</span><span class="sxs-lookup"><span data-stu-id="e67b8-157">A phrase to be used in recognition.</span></span></param>
        <param name="value"><span data-ttu-id="e67b8-158">Der Wert, der von <see cref="T:System.Speech.Recognition.SemanticResultValue" /> gesteuert wird.</span><span class="sxs-lookup"><span data-stu-id="e67b8-158">The value managed by <see cref="T:System.Speech.Recognition.SemanticResultValue" />.</span></span> <span data-ttu-id="e67b8-159">Der Wert muss vom Typ <see langword="bool" />, <see langword="int" />, <see langword="float" /> oder <see langword="string" /> sein.</span><span class="sxs-lookup"><span data-stu-id="e67b8-159">Must be of type <see langword="bool" />, <see langword="int" />, <see langword="float" />, or <see langword="string" />.</span></span></param>
        <summary><span data-ttu-id="e67b8-160">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Klasse und ordnet einem <see cref="T:System.String" />-Objekt einen semantischen Wert zu.</span><span class="sxs-lookup"><span data-stu-id="e67b8-160">Initializes a new instance of the <see cref="T:System.Speech.Recognition.SemanticResultValue" /> class and associates a semantic value with a <see cref="T:System.String" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67b8-161">Wenn die von angegebene Zeichenfolge `phrase` in der Erkennungs Logik verwendet wird, `value` wird in der Semantik der erkannten Ausgabe festgelegt.</span><span class="sxs-lookup"><span data-stu-id="e67b8-161">If the string specified by `phrase` is used in the recognition logic, `value` will be set in the semantics of the recognized output.</span></span>  
  
 <span data-ttu-id="e67b8-162">Im folgenden Code Fragment wird der Wert der erkannten Semantik hinzugefügt, wenn die Erkennungs Logik, die mit der- <xref:System.Speech.Recognition.GrammarBuilder> Instanz ( `myGb` ) erstellt wurde, die Zeichenfolge "My Hypotheken" verwendet, um die Eingabe zu identifizieren `true` .</span><span class="sxs-lookup"><span data-stu-id="e67b8-162">In the following code fragment, if the recognition logic constructed with the <xref:System.Speech.Recognition.GrammarBuilder> instance (`myGb`) uses the string "my mortgage" to identify input, the value `true` will be added to the recognized semantics.</span></span>  
  
```csharp  
myGb.Append(new SemanticResultValue("my mortgage", true);  
```  
  
   
  
## Examples  
 <span data-ttu-id="e67b8-163">Im folgenden Beispiel wird ein-Wert zurückgegeben <xref:System.Speech.Recognition.Grammar> , der den Befehl "Set/Change/Alter Vordergrund/Hintergrund...</span><span class="sxs-lookup"><span data-stu-id="e67b8-163">The following example returns a <xref:System.Speech.Recognition.Grammar> that recognizes the command "Set/Change/Alter Foreground/Background …</span></span> <span data-ttu-id="e67b8-164">[Farbliste] ".</span><span class="sxs-lookup"><span data-stu-id="e67b8-164">[color list]".</span></span> <span data-ttu-id="e67b8-165"><xref:System.Speech.Recognition.SemanticResultValue> -und- <xref:System.Speech.Recognition.SemanticResultKey> Instanzen (in Verbindung mit <xref:System.Speech.Recognition.Choices> -und- <xref:System.Speech.Recognition.GrammarBuilder> Objekten) werden verwendet, um Semantik zu definieren, die bei der Erkennung analysiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="e67b8-165"><xref:System.Speech.Recognition.SemanticResultValue> and <xref:System.Speech.Recognition.SemanticResultKey> instances (in conjunction with <xref:System.Speech.Recognition.Choices> and <xref:System.Speech.Recognition.GrammarBuilder> objects) are used to define semantics that can be parsed on recognition.</span></span>  <span data-ttu-id="e67b8-166">Die analysierte Semantik bestimmt, welche Farbe angefordert wurde und ob der Vordergrund oder der Hintergrund geändert werden muss.</span><span class="sxs-lookup"><span data-stu-id="e67b8-166">The parsed semantics will determine which color was requested and whether the foreground or background is to be modified.</span></span>  
  
```  
private Grammar FgBgColorGrammar()   
{  
  Grammar grammar = null;  
  
  // Allow command to begin with set, alter, change.  
  Choices introChoices = new Choices();  
  foreach (string introString in new string[] { "Change", "Set", "Alter" })   
  {  
    GrammarBuilder introGB = new GrammarBuilder(introString);  
    introChoices.Add(  
                  new SemanticResultValue(introGB,  
                  String.Format("Command: {0}", introString)));  
  }  
  
  GrammarBuilder cmdIntro = new GrammarBuilder(introChoices);  
  
  // Define the arguments for the command to select foreground or background   
  // and to change their color as semantic values.  
  Choices fgOrbgChoice = new Choices();  
  GrammarBuilder backgroundGB=new GrammarBuilder("background");  
  backgroundGB.Append(new SemanticResultValue(true));  
  fgOrbgChoice.Add(backgroundGB);  
  fgOrbgChoice.Add((GrammarBuilder)new SemanticResultValue("foreground", false));  
  SemanticResultKey fgOrbgChoiceKey = new SemanticResultKey("BgOrFgBool", fgOrbgChoice);  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    colorChoice.Add(  
          (GrammarBuilder) (new SemanticResultValue(colorName, (Color.FromName(colorName)).Name)));  
  }  
  
  // Create a GrammarBuilder for CmdArgs to be appended to CmdIntro using  
  // semantic keys.  
  GrammarBuilder cmdArgs = new GrammarBuilder();  
  cmdArgs.Append(new SemanticResultKey("BgOrFgBool", fgOrbgChoice));  
  cmdArgs.AppendWildcard();  
  cmdArgs.Append(new SemanticResultKey("colorStringList", colorChoice));  
  
  GrammarBuilder cmds =   
      GrammarBuilder.Add(cmdIntro,  
                         new GrammarBuilder(new SemanticResultKey("Cmd Args", cmdArgs)));  
  grammar = new Grammar(cmds);  
  grammar.Name = "Tree [Set,change,alter] [foreground,background] * color";  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToGrammarBuilder">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.GrammarBuilder ToGrammarBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Speech.Recognition.GrammarBuilder ToGrammarBuilder() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder" />
      <MemberSignature Language="VB.NET" Value="Public Function ToGrammarBuilder () As GrammarBuilder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Speech::Recognition::GrammarBuilder ^ ToGrammarBuilder();" />
      <MemberSignature Language="F#" Value="member this.ToGrammarBuilder : unit -&gt; System.Speech.Recognition.GrammarBuilder" Usage="semanticResultValue.ToGrammarBuilder " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.GrammarBuilder</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e67b8-167">Gibt eine Instanz von <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zurück, die aus der aktuellen <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Instanz konstruiert wurde.</span><span class="sxs-lookup"><span data-stu-id="e67b8-167">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span></span></summary>
        <returns><span data-ttu-id="e67b8-168">Gibt eine Instanz von <see cref="T:System.Speech.Recognition.GrammarBuilder" /> zurück, die aus der aktuellen <see cref="T:System.Speech.Recognition.SemanticResultValue" />-Instanz konstruiert wurde.</span><span class="sxs-lookup"><span data-stu-id="e67b8-168">Returns an instance of <see cref="T:System.Speech.Recognition.GrammarBuilder" /> constructed from the current <see cref="T:System.Speech.Recognition.SemanticResultValue" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e67b8-169">Die Verwendung von <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> entspricht der Verwendung des- <xref:System.Speech.Recognition.GrammarBuilder> Konstruktors, der einen <xref:System.Speech.Recognition.SemanticResultValue> als Argument annimmt ( <xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29> ).</span><span class="sxs-lookup"><span data-stu-id="e67b8-169">The use of <xref:System.Speech.Recognition.SemanticResultValue.ToGrammarBuilder%2A> is equivalent to using the <xref:System.Speech.Recognition.GrammarBuilder> constructor that takes a <xref:System.Speech.Recognition.SemanticResultValue> as an argument (<xref:System.Speech.Recognition.GrammarBuilder.%23ctor%28System.Speech.Recognition.SemanticResultValue%29>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e67b8-170">Im folgenden Beispiel werden- <xref:System.Speech.Recognition.Grammar> Objekte erstellt, die Befehle zum Ändern der Hintergrundfarbe unterstützen.</span><span class="sxs-lookup"><span data-stu-id="e67b8-170">The following example creates <xref:System.Speech.Recognition.Grammar> objects that support commands to change the background color.</span></span>  
  
 <span data-ttu-id="e67b8-171">Ein- <xref:System.Speech.Recognition.Choices> Objekt ( `colorChoice` ), das die Liste der Optionen für Hintergrundfarben enthält, wird mithilfe der- <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> Methode mit-Instanzen aufgefüllt, die <xref:System.Speech.Recognition.GrammarBuilder> von der- <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> Methode für die aus Farb Zeichenfolgen `SemanticResultValue` erstellten Objekte abgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="e67b8-171">A <xref:System.Speech.Recognition.Choices> object (`colorChoice`) containing the list of options for background colors is filled using the <xref:System.Speech.Recognition.Choices.Add%28System.Speech.Recognition.GrammarBuilder%5B%5D%29> method with <xref:System.Speech.Recognition.GrammarBuilder> instances that are obtained from the <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> method on the `SemanticResultValue` objects created from color strings.</span></span>  
  
 <span data-ttu-id="e67b8-172">Eine <xref:System.Speech.Recognition.GrammarBuilder> wird dann durch Aufrufen von <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> für eine- <xref:System.Speech.Recognition.SemanticResultKey> Instanz abgerufen, die zum Schlüssel der semantischen Auswahl in der-Instanz verwendet wird `colorChoice` .</span><span class="sxs-lookup"><span data-stu-id="e67b8-172">A <xref:System.Speech.Recognition.GrammarBuilder> is then obtained by calling <xref:System.Speech.Recognition.SemanticResultKey.ToGrammarBuilder> on a <xref:System.Speech.Recognition.SemanticResultKey> instance, which will be used to key the semantic choices in the `colorChoice` instance.</span></span>  
  
```csharp  
  
private Grammar CreateGrammarBuilderRGBSemantics()   
{  
  
  // Create a set of choices, each a lookup from a color name to RBG.  
  // Choices constructors do not take a SemanticResultValue parameter, so  
  // cast SemanticResultValue to GrammarBuilder.  
  Choices colorChoice = new Choices();  
  foreach (string colorName in System.Enum.GetNames(typeof(KnownColor)))   
  {  
  
    // Use implicit conversion of SemanticResultValue to GrammarBuilder.      
    SemanticResultValue colorValue =   
        new SemanticResultValue(colorName, Color.FromName(colorName).ToArgb());  
    colorChoice.Add(colorValue.ToGrammarBuilder());  
  }  
  
  SemanticResultKey choiceKey = new SemanticResultKey("rgb", colorChoice);  
  GrammarBuilder choiceBuilder = choiceKey.ToGrammarBuilder();  
  
  // Create two intermediate grammars with an introductory phrase and the  
  // color choice.  
  GrammarBuilder makeBackgroundBuilder = "Make background";  
  makeBackgroundBuilder.Append(choiceBuilder);  
  
  GrammarBuilder configureBackgroundBuilder = new GrammarBuilder("Configure background as");  
  configureBackgroundBuilder.Append((new SemanticResultKey("rgb", colorChoice)).ToGrammarBuilder());  
  
  // Create the final grammar, which recognizes either intermediate grammar.  
  Grammar grammar = new Grammar(new Choices(new GrammarBuilder[] { makeBackgroundBuilder, configureBackgroundBuilder }));  
  grammar.Name = "Set Background Color";  
  
  return grammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
