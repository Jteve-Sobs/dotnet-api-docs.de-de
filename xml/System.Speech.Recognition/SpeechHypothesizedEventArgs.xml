<Type Name="SpeechHypothesizedEventArgs" FullName="System.Speech.Recognition.SpeechHypothesizedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c9d9389ef70b801abb3cace1a741a7858e21a227" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86590006" /></Metadata><TypeSignature Language="C#" Value="public class SpeechHypothesizedEventArgs : System.Speech.Recognition.RecognitionEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SpeechHypothesizedEventArgs extends System.Speech.Recognition.RecognitionEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SpeechHypothesizedEventArgs&#xA;Inherits RecognitionEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechHypothesizedEventArgs : System::Speech::Recognition::RecognitionEventArgs" />
  <TypeSignature Language="F#" Value="type SpeechHypothesizedEventArgs = class&#xA;    inherit RecognitionEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.RecognitionEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName Language="C#">[System.Serializable]</AttributeName>
      <AttributeName Language="F#">[&lt;System.Serializable&gt;]</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ce050-101">Gibt eine Benachrichtigung von <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" /> oder von <see cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />-Ereignissen zurück.</span><span class="sxs-lookup"><span data-stu-id="ce050-101">Returns notification from <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" /> or <see cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" /> events.</span></span>  
  
<span data-ttu-id="ce050-102">Diese Klasse unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Anwendungscode vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="ce050-102">This class supports the .NET Framework infrastructure and is not intended to be used directly from application code.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ce050-103">Ein `SpeechHypothesized` -Ereignis wird von der <xref:System.Speech.Recognition.SpeechRecognizer> -Klasse und der- <xref:System.Speech.Recognition.SpeechRecognitionEngine> Klasse ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="ce050-103">A `SpeechHypothesized` event is raised by the <xref:System.Speech.Recognition.SpeechRecognizer> and <xref:System.Speech.Recognition.SpeechRecognitionEngine> classes.</span></span>  
  
 <span data-ttu-id="ce050-104">Ausführliche Informationen zu einem vorläufig erkannten Ausdruck können Sie mithilfe der-Eigenschaft abrufen <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> .</span><span class="sxs-lookup"><span data-stu-id="ce050-104">You can obtain detailed information about a tentatively recognized phrase by using the <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> property.</span></span>  
  
 <span data-ttu-id="ce050-105">`SpeechHypothesized`Es werden zahlreiche Ereignisse generiert, wenn eine Erkennungs-Engine versucht, einen Eingabe Ausdruck zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="ce050-105">Numerous `SpeechHypothesized` events are generated as a recognition engine attempts to identify an input phrase.</span></span> <span data-ttu-id="ce050-106">In der Regel ist die Verarbeitung dieser Ereignisse nur für das Debuggen hilfreich.</span><span class="sxs-lookup"><span data-stu-id="ce050-106">Typically, handling these events is useful only for debugging.</span></span>  
  
 <span data-ttu-id="ce050-107">`SpeechHypothesizedEventArgs` wird von <xref:System.Speech.Recognition.RecognitionEventArgs> abgeleitet.</span><span class="sxs-lookup"><span data-stu-id="ce050-107">`SpeechHypothesizedEventArgs` derives from <xref:System.Speech.Recognition.RecognitionEventArgs>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ce050-108">Im folgenden Beispiel wird ein-Handler für- <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized?displayProperty=nameWithType> oder- <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized?displayProperty=nameWithType> Ereignisse erstellt.</span><span class="sxs-lookup"><span data-stu-id="ce050-108">The example below creates a handler for <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized?displayProperty=nameWithType> or <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="ce050-109">Der Handler verwendet eine Instanz von `SpeechHypothesizedEventArgs` , um Informationen zu einem vorläufig erkannten Ausdruck zurückzugeben und anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="ce050-109">The handler uses an instance of `SpeechHypothesizedEventArgs` to return and display information about a tentatively recognized phrase.</span></span>  
  
```  
// Create a handler for the SpeechHypothesized event.  
recognizer.SpeechHypothesized += new EventHandler<SpeechHypothesizedEventArgs>(recognizer_SpeechHypothesized);  
  
// Handle the event and display the hypothesized result.  
void recognizer_SpeechHypothesized (object sender, SpeechHypothesizedEventArgs e)  
  {  
    Console.WriteLine("Hypothesized text: " + e.Result.Text);  
  }  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognitionEventArgs" />
    <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected" />
  </Docs>
  <Members />
</Type>
