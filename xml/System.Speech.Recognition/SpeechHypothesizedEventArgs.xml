<Type Name="SpeechHypothesizedEventArgs" FullName="System.Speech.Recognition.SpeechHypothesizedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69fe0581c017d3edf0600fb9291edaec1083d62a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70621682" /></Metadata><TypeSignature Language="C#" Value="public class SpeechHypothesizedEventArgs : System.Speech.Recognition.RecognitionEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit SpeechHypothesizedEventArgs extends System.Speech.Recognition.RecognitionEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.SpeechHypothesizedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SpeechHypothesizedEventArgs&#xA;Inherits RecognitionEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SpeechHypothesizedEventArgs : System::Speech::Recognition::RecognitionEventArgs" />
  <TypeSignature Language="F#" Value="type SpeechHypothesizedEventArgs = class&#xA;    inherit RecognitionEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Speech.Recognition.RecognitionEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt eine Benachrichtigung von <see cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" /> oder von <see cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />-Ereignissen zurück.  
  
Diese Klasse unterstützt die .NET Framework-Infrastruktur und ist nicht für die direkte Verwendung in Anwendungscode vorgesehen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein `SpeechHypothesized` -Ereignis wird von der <xref:System.Speech.Recognition.SpeechRecognizer> - <xref:System.Speech.Recognition.SpeechRecognitionEngine> Klasse und der-Klasse ausgelöst.  
  
 Ausführliche Informationen zu einem vorläufig erkannten Ausdruck können Sie mithilfe der <xref:System.Speech.Recognition.RecognitionEventArgs.Result%2A> -Eigenschaft abrufen.  
  
 Es `SpeechHypothesized` werden zahlreiche Ereignisse generiert, wenn eine Erkennungs-Engine versucht, einen Eingabe Ausdruck zu identifizieren. In der Regel ist die Verarbeitung dieser Ereignisse nur für das Debuggen hilfreich.  
  
 `SpeechHypothesizedEventArgs` wird von <xref:System.Speech.Recognition.RecognitionEventArgs> abgeleitet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein-Handler <xref:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized?displayProperty=nameWithType> für <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized?displayProperty=nameWithType> -oder-Ereignisse erstellt. Der Handler verwendet eine Instanz von `SpeechHypothesizedEventArgs` , um Informationen zu einem vorläufig erkannten Ausdruck zurückzugeben und anzuzeigen.  
  
```  
// Create a handler for the SpeechHypothesized event.  
recognizer.SpeechHypothesized += new EventHandler<SpeechHypothesizedEventArgs>(recognizer_SpeechHypothesized);  
  
// Handle the event and display the hypothesized result.  
void recognizer_SpeechHypothesized (object sender, SpeechHypothesizedEventArgs e)  
  {  
    Console.WriteLine("Hypothesized text: " + e.Result.Text);  
  }  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.RecognitionEventArgs" />
    <altmember cref="T:System.Speech.Recognition.RecognitionResult" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognizedEventArgs" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechHypothesized" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechHypothesized" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognitionRejectedEventArgs" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.SpeechRecognitionRejected" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognitionRejected" />
  </Docs>
  <Members />
</Type>
