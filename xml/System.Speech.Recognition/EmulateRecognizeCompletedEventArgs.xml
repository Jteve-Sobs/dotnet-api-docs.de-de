<Type Name="EmulateRecognizeCompletedEventArgs" FullName="System.Speech.Recognition.EmulateRecognizeCompletedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6e20c270f69a78f886b3d99122e70fd1a53df548" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86590267" /></Metadata><TypeSignature Language="C#" Value="public class EmulateRecognizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EmulateRecognizeCompletedEventArgs extends System.ComponentModel.AsyncCompletedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class EmulateRecognizeCompletedEventArgs&#xA;Inherits AsyncCompletedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class EmulateRecognizeCompletedEventArgs : System::ComponentModel::AsyncCompletedEventArgs" />
  <TypeSignature Language="F#" Value="type EmulateRecognizeCompletedEventArgs = class&#xA;    inherit AsyncCompletedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.AsyncCompletedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see langword="EmulateRecognizeCompleted" />-Ereignis der <see cref="T:System.Speech.Recognition.SpeechRecognizer" />- und der <see cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />-Klasse bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Instanz von <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> wird erstellt, wenn das- <xref:System.Speech.Recognition.SpeechRecognitionEngine> Objekt das- <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> Ereignis auslöst. Um Informationen zum Erkennungs Ergebnis abzurufen, greifen Sie auf die- <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> Eigenschaft im-Handler für das-Ereignis zu.  
  
 Bei der Emulation handelt es sich um den Prozess, mit dem Text anstelle von Audiodaten die Eingabe für eine Spracherkennungs-Engine ist. Um die Audioeingaben für ein- <xref:System.Speech.Recognition.SpeechRecognitionEngine> Objekt während der Emulation zu umgehen, verwenden Sie die- <xref:System.Speech.Recognition.SpeechRecognitionEngine.SetInputToNull%2A> Methode.  
  
 Wenn beim Erkennungs Vorgang eine Ausnahme auftritt, <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> wird die-Eigenschaft auf die-Ausnahme festgelegt, und die- <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> Eigenschaft wird auf festgelegt `null` .  
  
 <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs> wird von <xref:System.ComponentModel.AsyncCompletedEventArgs> abgeleitet.  
  
   
  
## Examples  
 Im folgenden Beispiel wird einem ein Ereignishandler für das-Ereignis hinzugefügt <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted> <xref:System.Speech.Recognition.SpeechRecognitionEngine> . Der Handler Ruft den erkannten Text aus der- <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> Eigenschaft ab.  
  
```csharp  
  
private SpeechRecognitionEngine sre;  
  
// Initialize the speech recognition engine.   
private void Initialize()  
{  
  sre = new SpeechRecognitionEngine();  
  
  // Add a handler for the EmulateRecognizeCompleted event.  
  sre.EmulateRecognizeCompleted += new EventHandler<EmulateRecognizeCompletedEventArgs>(sre_EmulateRecognizeCompleted);  
  
  // Add other initialization code here.  
}  
  
// Handle the EmulateRecognizeCompleted event.   
void sre_EmulateRecognizeCompleted(object sender, EmulateRecognizeCompletedEventArgs e)  
{  
  if (e.Result == null) return;  
  
  string phrase = e.Result.Text;  
  
  // Add event handler code here.  
}  
  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted" />
    <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted" />
  </Docs>
  <Members>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.RecognitionResult Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Speech.Recognition.RecognitionResult Result" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As RecognitionResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::RecognitionResult ^ Result { System::Speech::Recognition::RecognitionResult ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : System.Speech.Recognition.RecognitionResult" Usage="System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.RecognitionResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Ergebnisse der emulierten Erkennung ab.</summary>
        <value>Ausführliche Informationen über die Ergebnisse der Erkennung oder <see langword="null" />, wenn ein Fehler aufgetreten ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Speech.Recognition.RecognitionResult> -Objekt wird von abgeleitet <xref:System.Speech.Recognition.RecognizedPhrase> und enthält vollständige Informationen zu einem Ausdruck, der von einem Erkennungs Vorgang zurückgegeben wird. Sie können eine Liste aller Erkennungs Kandidaten aus der-Eigenschaft abrufen <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> .  
  
 Wenn beim Erkennungs Vorgang eine Ausnahme auftritt, <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A> wird die-Eigenschaft auf die-Ausnahme festgelegt, und die- <xref:System.Speech.Recognition.EmulateRecognizeCompletedEventArgs.Result%2A> Eigenschaft wird auf festgelegt `null` .  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeCompleted" />
        <altmember cref="E:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeCompleted" />
      </Docs>
    </Member>
  </Members>
</Type>
