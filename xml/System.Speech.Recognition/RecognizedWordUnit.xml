<Type Name="RecognizedWordUnit" FullName="System.Speech.Recognition.RecognizedWordUnit">
  <Metadata><Meta Name="ms.openlocfilehash" Value="771e992ed34a53bfc517be9343f1c99f5d7fbd96" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55320095" /></Metadata><TypeSignature Language="C#" Value="public class RecognizedWordUnit" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RecognizedWordUnit extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.RecognizedWordUnit" />
  <TypeSignature Language="VB.NET" Value="Public Class RecognizedWordUnit" />
  <TypeSignature Language="C++ CLI" Value="public ref class RecognizedWordUnit" />
  <TypeSignature Language="F#" Value="type RecognizedWordUnit = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Text: {Text}")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="72a15-101">Stellt die unteilbare Einheit der erkannten Sprache bereit.</span><span class="sxs-lookup"><span data-stu-id="72a15-101">Provides the atomic unit of recognized speech.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a15-102">Alle von einer erkennungs-Engine zurückgegebenen Ergebnisse werden erstellt, der <xref:System.Speech.Recognition.RecognizedWordUnit> Objekte.</span><span class="sxs-lookup"><span data-stu-id="72a15-102">All results returned by a recognition engine are constructed of <xref:System.Speech.Recognition.RecognizedWordUnit> objects.</span></span>  
  
 <span data-ttu-id="72a15-103">Ein Array von <xref:System.Speech.Recognition.RecognizedWordUnit> Objekte kann zugegriffen werden, für jeden Erkennungsvorgang über die <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Eigenschaft für die <xref:System.Speech.Recognition.RecognizedPhrase> Objekt.</span><span class="sxs-lookup"><span data-stu-id="72a15-103">An array of <xref:System.Speech.Recognition.RecognizedWordUnit> objects is accessible for any recognition operation through the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
 <span data-ttu-id="72a15-104">Zusätzlich zur Bereitstellung von ein Maß für die Zuverlässigkeit der Erkennung (<xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A>) eine <xref:System.Speech.Recognition.RecognizedWordUnit> -Instanzen bieten:</span><span class="sxs-lookup"><span data-stu-id="72a15-104">In addition to providing a measure of recognition certainty (<xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A>) a <xref:System.Speech.Recognition.RecognizedWordUnit> instance provides:</span></span>  
  
-   <span data-ttu-id="72a15-105">Normalisierte und genaue (oder lexikalische) Textdarstellungen für ein erkanntes Wort.</span><span class="sxs-lookup"><span data-stu-id="72a15-105">Normalized and exact (or lexical) text representations for a recognized word.</span></span> <span data-ttu-id="72a15-106">Weitere Informationen finden Sie unter <xref:System.Speech.Recognition.ReplacementText>, <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A> und <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>.</span><span class="sxs-lookup"><span data-stu-id="72a15-106">For more information, see <xref:System.Speech.Recognition.ReplacementText>, <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>, and <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>.</span></span>  
  
-   <span data-ttu-id="72a15-107">Aussprache-Informationen, die mithilfe von Zeichen aus einem unterstützten Lautalphabet, wie z. B. dem internationalen Lautalphabet (IPA) oder dem universellen Sprachlautsatz (UPS).</span><span class="sxs-lookup"><span data-stu-id="72a15-107">Pronunciation information using characters from a supported phonetic alphabet, such as the International Phonetic Alphabet (IPA) or the Universal Phone Set (UPS).</span></span> <span data-ttu-id="72a15-108">Weitere Informationen finden Sie unter <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>.</span><span class="sxs-lookup"><span data-stu-id="72a15-108">For more information see <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>.</span></span>  
  
-   <span data-ttu-id="72a15-109">Formatierung für den Druck.</span><span class="sxs-lookup"><span data-stu-id="72a15-109">Formatting for printing.</span></span> <span data-ttu-id="72a15-110">Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.DisplayAttributes> Klasse und die zugehörige <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="72a15-110">For more information see the <xref:System.Speech.Recognition.DisplayAttributes> class and its <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72a15-111">Das folgende Beispiel zeigt eine Hilfsprogramm-Routine (`stringFromWordArray`), die Zeichenfolgen generiert.</span><span class="sxs-lookup"><span data-stu-id="72a15-111">The following example shows a utility routine (`stringFromWordArray`) that generates strings.</span></span> <span data-ttu-id="72a15-112">Die Zeichenfolgen enthalten lexikalische Ausgabe (mithilfe von <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalisierte Text (mit <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), oder phonetische Zeichen aus dem internationalen Lautalphabet (mit <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span><span class="sxs-lookup"><span data-stu-id="72a15-112">The strings contain lexical output (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized text (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), or phonetic characters from the International Phonetic Alphabet (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="72a15-113">Zeichenfolgen werden mithilfe von formatiert <xref:System.Speech.Recognition.DisplayAttributes> Objekte abgerufen, von der <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> Eigenschaft aus einem <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> von <xref:System.Speech.Recognition.RecognizedWordUnit> Objekte.</span><span class="sxs-lookup"><span data-stu-id="72a15-113">Strings are formatted using <xref:System.Speech.Recognition.DisplayAttributes> objects obtained from the <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property from a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects.</span></span> <span data-ttu-id="72a15-114">Die <xref:System.Speech.Recognition.RecognizedWordUnit> Objekte erhalten Sie vom der <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Eigenschaft für die <xref:System.Speech.Recognition.RecognizedPhrase> Objekt.</span><span class="sxs-lookup"><span data-stu-id="72a15-114">The <xref:System.Speech.Recognition.RecognizedWordUnit> objects are obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(ReadOnlyCollection<RecognizedWordUnit> words, WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }   
    else if (type == WordType.Pronunciation)   
    {  
      wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(String.Format("[0}: is not a valid input", type));  
    }  
    // Use display attribute  
  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)  
    {  
      wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  
  }  
  return text;  
}  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RecognizedWordUnit (string text, float confidence, string pronunciation, string lexicalForm, System.Speech.Recognition.DisplayAttributes displayAttributes, TimeSpan audioPosition, TimeSpan audioDuration);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, float32 confidence, string pronunciation, string lexicalForm, valuetype System.Speech.Recognition.DisplayAttributes displayAttributes, valuetype System.TimeSpan audioPosition, valuetype System.TimeSpan audioDuration) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.RecognizedWordUnit.#ctor(System.String,System.Single,System.String,System.String,System.Speech.Recognition.DisplayAttributes,System.TimeSpan,System.TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RecognizedWordUnit(System::String ^ text, float confidence, System::String ^ pronunciation, System::String ^ lexicalForm, System::Speech::Recognition::DisplayAttributes displayAttributes, TimeSpan audioPosition, TimeSpan audioDuration);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.RecognizedWordUnit : string * single * string * string * System.Speech.Recognition.DisplayAttributes * TimeSpan * TimeSpan -&gt; System.Speech.Recognition.RecognizedWordUnit" Usage="new System.Speech.Recognition.RecognizedWordUnit (text, confidence, pronunciation, lexicalForm, displayAttributes, audioPosition, audioDuration)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="confidence" Type="System.Single" />
        <Parameter Name="pronunciation" Type="System.String" />
        <Parameter Name="lexicalForm" Type="System.String" />
        <Parameter Name="displayAttributes" Type="System.Speech.Recognition.DisplayAttributes" />
        <Parameter Name="audioPosition" Type="System.TimeSpan" />
        <Parameter Name="audioDuration" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="text"><span data-ttu-id="72a15-115">Der normalisierte Text für ein erkanntes Wort.</span><span class="sxs-lookup"><span data-stu-id="72a15-115">The normalized text for a recognized word.</span></span>  
  
<span data-ttu-id="72a15-116">Dieser Wert kann <see langword="null" />, "" oder <see cref="F:System.String.Empty" /> sein.</span><span class="sxs-lookup"><span data-stu-id="72a15-116">This value can be <see langword="null" />, "", or <see cref="F:System.String.Empty" />.</span></span></param>
        <param name="confidence"><span data-ttu-id="72a15-117">Ein <see langword="float" />-Wert von 0,0 bis 1,0, der die Sicherheit der Worterkennung angibt.</span><span class="sxs-lookup"><span data-stu-id="72a15-117">A <see langword="float" /> value from 0.0 through 1.0 indicating the certainty of word recognition.</span></span></param>
        <param name="pronunciation"><span data-ttu-id="72a15-118">Die Lautrechtschreibung eines erkannten Worts.</span><span class="sxs-lookup"><span data-stu-id="72a15-118">The phonetic spelling of a recognized word.</span></span>  
  
<span data-ttu-id="72a15-119">Dieser Wert kann <see langword="null" />, "" oder <see cref="F:System.String.Empty" /> sein.</span><span class="sxs-lookup"><span data-stu-id="72a15-119">This value can be <see langword="null" />, "", or <see cref="F:System.String.Empty" />.</span></span></param>
        <param name="lexicalForm"><span data-ttu-id="72a15-120">Der nicht normalisierte Text für ein erkanntes Wort.</span><span class="sxs-lookup"><span data-stu-id="72a15-120">The unnormalized text for a recognized word.</span></span>  
  
<span data-ttu-id="72a15-121">Dieses Argument ist erforderlich und darf nicht <see langword="null" />, "" oder <see cref="F:System.String.Empty" /> sein.</span><span class="sxs-lookup"><span data-stu-id="72a15-121">This argument is required and may not be <see langword="null" />, "", or <see cref="F:System.String.Empty" />.</span></span></param>
        <param name="displayAttributes"><span data-ttu-id="72a15-122">Definiert die Verwendung von Leerzeichen, um bekannte Wörter anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="72a15-122">Defines the use of white space to display recognized words.</span></span></param>
        <param name="audioPosition"><span data-ttu-id="72a15-123">Die Position des erkannten Worts im Audioeingabestream.</span><span class="sxs-lookup"><span data-stu-id="72a15-123">The location of the recognized word in the audio input stream.</span></span>  
  
<span data-ttu-id="72a15-124">Dieser Wert kann <see cref="F:System.TimeSpan.Zero" /> sein.</span><span class="sxs-lookup"><span data-stu-id="72a15-124">This value can be <see cref="F:System.TimeSpan.Zero" />.</span></span></param>
        <param name="audioDuration"><span data-ttu-id="72a15-125">Die Länge der Audioeingabe entsprechend dem erkannten Wort.</span><span class="sxs-lookup"><span data-stu-id="72a15-125">The length of the audio input corresponding to the recognized word.</span></span>  
  
<span data-ttu-id="72a15-126">Dieser Wert kann <see cref="F:System.TimeSpan.Zero" /> sein.</span><span class="sxs-lookup"><span data-stu-id="72a15-126">This value can be <see cref="F:System.TimeSpan.Zero" />.</span></span></param>
        <summary><span data-ttu-id="72a15-127">Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.RecognizedWordUnit" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="72a15-127">Initializes a new instance of the <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a15-128">Wenn `text` oder `pronunciation` sind `null`, "", oder <xref:System.String.Empty> und <xref:System.Speech.Recognition.RecognizedWordUnit> wird verwendet, bei der ein Erkennungsvorgang, generiert die erkennungs-Engine entsprechende Werte in der Ausgabe <xref:System.Speech.Recognition.RecognizedWordUnit> Instanz.</span><span class="sxs-lookup"><span data-stu-id="72a15-128">If `text` or `pronunciation` are `null`, "", or <xref:System.String.Empty> and the <xref:System.Speech.Recognition.RecognizedWordUnit> is used in a recognition operation, the recognition engine will generate appropriate values in any output <xref:System.Speech.Recognition.RecognizedWordUnit> instance.</span></span>  
  
 <span data-ttu-id="72a15-129">Direkte Erstellung von <xref:System.Speech.Recognition.RecognizedWordUnit> Instanzen wird normalerweise verwendet, nur dann, wenn mit Erkennungsvorgänge emulieren die <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize%2A> oder <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync%2A> Methoden der <xref:System.Speech.Recognition.SpeechRecognitionEngine> Klasse und die <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize%2A> oder <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync%2A> Methoden der <xref:System.Speech.Recognition.SpeechRecognizer> Klasse.</span><span class="sxs-lookup"><span data-stu-id="72a15-129">Direct construction of <xref:System.Speech.Recognition.RecognizedWordUnit> instances is typically used only when emulating recognition operations using the <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognize%2A> or <xref:System.Speech.Recognition.SpeechRecognitionEngine.EmulateRecognizeAsync%2A> methods of the <xref:System.Speech.Recognition.SpeechRecognitionEngine> class and the <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognize%2A> or <xref:System.Speech.Recognition.SpeechRecognizer.EmulateRecognizeAsync%2A> methods of the <xref:System.Speech.Recognition.SpeechRecognizer> class.</span></span>  
  
 <span data-ttu-id="72a15-130">Für die eigentlichen Anwendungen werden nicht direkt erstellt <xref:System.Speech.Recognition.RecognizedWordUnit>, stattdessen erhalten Sie über die <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Eigenschaft für die <xref:System.Speech.Recognition.RecognizedPhrase> Objekt.</span><span class="sxs-lookup"><span data-stu-id="72a15-130">For actual applications, do not directly construct <xref:System.Speech.Recognition.RecognizedWordUnit>, rather obtain it through the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72a15-131">Im folgende Beispiel wird ein etwas aus der Luft gegriffen Test Emulation ",", in dem neue Begriffe aus der Eingabe generiert und an den Emulator übergeben und dann überprüft.</span><span class="sxs-lookup"><span data-stu-id="72a15-131">The following example is a somewhat contrived test of emulation, where new words are generated from the input and passed to the emulator, and then verified.</span></span>  
  
```csharp  
private void _emulateAndVerify_Click(object sender, EventArgs e)   
{  
  char[] delimiterChars = { ' ', ',', '.', ':', ';', '\t' };  
  string text = _emulateTextBox.Text;  
  string[] words = text.Split(delimiterChars);  
  
  RecognizedWordUnit[] InputWordUnits = new RecognizedWordUnit[words.Length];  
  for (int i = 0; i < words.Length; i++)   
  {  
    InputWordUnits[i] = new RecognizedWordUnit(  
        "",   
        0,   
        "",  
        words[i].ToLower(),   
        DisplayAttributes.OneTrailingSpace,   
        new TimeSpan(),   
        new TimeSpan());  
  }  
  
  RecognitionResult rec = _recognizer.EmulateRecognize(  
        InputWordUnits,   
        System.Globalization.CompareOptions.IgnoreCase);  
  if (rec == null)   
  {  
    MessageBox.Show(String.Format("Recognition emulation for {0} failed.\n", text));  
  }   
  else if (InputWordUnits.Length != rec.Words.Count)   
  {  
    MessageBox.Show(  
       String.Format("Length mismatch: Input was {0} words, Recognition has {1} words.\n}"));  
  }   
  else   
  {  
    for (int i = 0; i < InputWordUnits.Length; i++)   
    {  
  
      if (rec.Words[i].LexicalForm.ToLower() != InputWordUnits[i].LexicalForm.ToLower())   
      {  
        MessageBox.Show(  
          String.Format("Input word {0} \"{1}\" not found. Recognition output is {2}",  
          i, InputWordUnits[i].LexicalForm, rec.Words[i].LexicalForm));  
        continue;  
      }  
    }  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=58363"><span data-ttu-id="72a15-132">Internationalen Lautalphabet</span><span class="sxs-lookup"><span data-stu-id="72a15-132">International Phonetic Alphabet</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Confidence">
      <MemberSignature Language="C#" Value="public float Confidence { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Confidence" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.Confidence" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Confidence As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Confidence { float get(); };" />
      <MemberSignature Language="F#" Value="member this.Confidence : single" Usage="System.Speech.Recognition.RecognizedWordUnit.Confidence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72a15-133">Ruft einen durch die Erkennung zugewiesenen Wert ab, der die Wahrscheinlichkeit angibt, dass ein erkanntes Wort mit einer angegebenen Eingabe übereinstimmt.</span><span class="sxs-lookup"><span data-stu-id="72a15-133">Gets a value, assigned by the recognizer, that represents the likelihood that a recognized word matches a given input.</span></span></summary>
        <value><span data-ttu-id="72a15-134">Eine relative Maßnahme der Sicherheit der richtigen Erkennung für ein Wort.</span><span class="sxs-lookup"><span data-stu-id="72a15-134">A relative measure of the certainty of correct recognition for a word.</span></span> <span data-ttu-id="72a15-135">Der Wert liegt zwischen 0,0 und 1,0 (geringes bis hohes Vertrauen).</span><span class="sxs-lookup"><span data-stu-id="72a15-135">The value is from 0.0 to 1.0, for low to high confidence, respectively.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a15-136">Vertrauensergebnisse nicht die absolute Wahrscheinlichkeit an, dass ein Wort richtig erkannt wurde.</span><span class="sxs-lookup"><span data-stu-id="72a15-136">Confidence scores do not indicate the absolute likelihood that a word was recognized correctly.</span></span> <span data-ttu-id="72a15-137">Vertrauensergebnisse wird stattdessen einen Mechanismus zum Vergleichen der relativen Genauigkeit von mehreren Erkennungsalternativen für eine angegebene Eingabe bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="72a15-137">Instead, confidence scores provide a mechanism for comparing the relative accuracy of multiple recognition alternates for a given input.</span></span> <span data-ttu-id="72a15-138">Dies erleichtert die genaueste Erkennungsergebnis zurückgeben.</span><span class="sxs-lookup"><span data-stu-id="72a15-138">This facilitates returning the most accurate recognition result.</span></span> <span data-ttu-id="72a15-139">Beispielsweise verfügt ein erkanntes Wort ein vertrauensergebnis 0,8, bedeutet dies nicht, dass das Wort ein 80 % Wahrscheinlichkeit der ordnungsgemäße Übereinstimmung für die Eingabe hat.</span><span class="sxs-lookup"><span data-stu-id="72a15-139">For example, if a recognized word has a confidence score of 0.8, this does not mean that the word has an 80% chance of being the correct match for the input.</span></span>  <span data-ttu-id="72a15-140">Dies bedeutet, dass das Wort höherer Wahrscheinlichkeit, dass die ordnungsgemäße Übereinstimmung für die Eingabe als andere Ergebnisse, die darauf vertrauen, die kleiner als 0,8 bewertet.</span><span class="sxs-lookup"><span data-stu-id="72a15-140">It means that the word is more likely to be the correct match for the input than other results that have confidence scores less than 0.8.</span></span>  
  
 <span data-ttu-id="72a15-141">Ein vertrauensergebnis allein ist nicht sinnvoll, es sei denn, Sie alternative Ergebnisse, berücksichtigt werden sollen, entweder über den gleichen Erkennungsvorgang oder über vorherige Erkennungsvorgänge von derselben Eingabe verglichen werden soll.</span><span class="sxs-lookup"><span data-stu-id="72a15-141">A confidence score on its own is not meaningful unless you have alternative results to compare against, either from the same recognition operation or from previous recognitions of the same input.</span></span>  
  
 <span data-ttu-id="72a15-142">Die Rückgabewerte <xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A> jedes erkennungs-Engine relative und eindeutig sind.</span><span class="sxs-lookup"><span data-stu-id="72a15-142">The values returned by <xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A> are relative and unique to each recognition engine.</span></span> <span data-ttu-id="72a15-143">Es ist keine Definition konfidenzwerte zwischen zwei verschiedenen Erkennungsmodule wie vergleichen zu können, noch wie die <xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A> einzelner <xref:System.Speech.Recognition.RecognizedWordUnit> Objekte definieren die <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> von einer <xref:System.Speech.Recognition.RecognizedPhrase>.</span><span class="sxs-lookup"><span data-stu-id="72a15-143">There is no definition of how confidence values between two different recognition engines compare, nor how the <xref:System.Speech.Recognition.RecognizedWordUnit.Confidence%2A> of individual <xref:System.Speech.Recognition.RecognizedWordUnit> objects define the <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A> of a <xref:System.Speech.Recognition.RecognizedPhrase>.</span></span>  
  
 <span data-ttu-id="72a15-144">Eine spracherkennungs-Engine kann gesprochener Eingabe ein niedriges vertrauensergebnis aus unterschiedlichen Gründen, z. B. Hintergrund Störungen, inarticulate-Sprache, oder unvorhergesehene Wörter oder wortsequenzen zuweisen.</span><span class="sxs-lookup"><span data-stu-id="72a15-144">A speech recognition engine may assign a low confidence score to spoken input for various reasons, including background interference, inarticulate speech, or unanticipated words or word sequences.</span></span> <span data-ttu-id="72a15-145">Wenn Ihre Anwendung verwendet eine <xref:System.Speech.Recognition.SpeechRecognitionEngine> Instanz können Sie ändern, den Vertrauensgrad, auf welche Sprache Eingabe akzeptiert oder abgelehnt, die mit einem, der <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="72a15-145">If your application is using a <xref:System.Speech.Recognition.SpeechRecognitionEngine> instance, you can modify the confidence level at which speech input is accepted or rejected with one of the <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> methods.</span></span> <span data-ttu-id="72a15-146">Vertrauen Schwellenwerte für die freigegebene Erkennung, die von verwalteten <xref:System.Speech.Recognition.SpeechRecognizer>, ein Benutzerprofil zugeordnet und in der Windows-Registrierung gespeichert sind.</span><span class="sxs-lookup"><span data-stu-id="72a15-146">Confidence thresholds for the shared recognizer, managed by <xref:System.Speech.Recognition.SpeechRecognizer>, are associated with a user profile and stored in the Windows registry.</span></span> <span data-ttu-id="72a15-147">Anwendungen sollten Änderungen an der Registrierung für die Eigenschaften der freigegebenen Erkennung nicht geschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="72a15-147">Applications should not write changes to the registry for the properties of the shared recognizer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayAttributes">
      <MemberSignature Language="C#" Value="public System.Speech.Recognition.DisplayAttributes DisplayAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Speech.Recognition.DisplayAttributes DisplayAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayAttributes As DisplayAttributes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Speech::Recognition::DisplayAttributes DisplayAttributes { System::Speech::Recognition::DisplayAttributes get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayAttributes : System.Speech.Recognition.DisplayAttributes" Usage="System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.DisplayAttributes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72a15-148">Ruft die Formatierungsinformationen ab, die verwendet werden, um die Textausgabe aus der aktuellen <see cref="T:System.Speech.Recognition.RecognizedWordUnit" />-Instanz zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="72a15-148">Gets formatting information used to create the text output from the current <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> instance.</span></span></summary>
        <value><span data-ttu-id="72a15-149">Bezeichnet die Verwendung von Leerstellen, die von den Inhalten eines <see cref="T:System.Speech.Recognition.RecognizedWordUnit" />-Objekts angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="72a15-149">Specifies the use of white space to display of the contents of a <see cref="T:System.Speech.Recognition.RecognizedWordUnit" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a15-150">Die <xref:System.Speech.Recognition.DisplayAttributes> zurückgegebenes Objekt der <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> Eigenschaft gibt die führenden und nachgestellten Leerzeichen mit einem bestimmten Wort, verwendet werden, sofern vorhanden.</span><span class="sxs-lookup"><span data-stu-id="72a15-150">The <xref:System.Speech.Recognition.DisplayAttributes> object returned by the <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property specifies the leading and trailing spaces to be used with a given word, if any.</span></span>  
  
 <span data-ttu-id="72a15-151">Weitere Informationen zur Verwendung dieser Formatierungsinformationen finden Sie unter den <xref:System.Speech.Recognition.DisplayAttributes> Enumeration.</span><span class="sxs-lookup"><span data-stu-id="72a15-151">For more information about how to use this formatting information, see the <xref:System.Speech.Recognition.DisplayAttributes> enumeration.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72a15-152">Das folgende Beispiel zeigt eine Hilfsprogramm-Routine (`stringFromWordArray`), generiert eine Zeichenfolge, die formatiert wird, in einer von drei Methoden: lexikalisch (mit <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalisierte (mit <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), oder phonetisch (mit <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span><span class="sxs-lookup"><span data-stu-id="72a15-152">The following example shows a utility routine (`stringFromWordArray`) that generates a string that is formatted in one of three ways: lexically (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), or phonetically (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="72a15-153">Die Textausgabe aus einer der <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> Eigenschaft für eine <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> von <xref:System.Speech.Recognition.RecognizedWordUnit> -Objekte, die aus abgerufen werden die <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Eigenschaft für eine <xref:System.Speech.Recognition.RecognizedPhrase> Objekt.</span><span class="sxs-lookup"><span data-stu-id="72a15-153">The text output is obtained from the <xref:System.Speech.Recognition.RecognizedWordUnit.DisplayAttributes%2A> property on a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects, which is obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on a <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(  
        ReadOnlyCollection<RecognizedWordUnit> words,   
        WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }  
    else if (type == WordType.Pronunciation)   
    {  
       wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(  
         String.Format("[0}: is not a valid input", type));  
    }  
  
    // Use display attribute  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)  
    {  
      wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  
  }  
  return text;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
      </Docs>
    </Member>
    <Member MemberName="LexicalForm">
      <MemberSignature Language="C#" Value="public string LexicalForm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LexicalForm" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.LexicalForm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LexicalForm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LexicalForm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LexicalForm : string" Usage="System.Speech.Recognition.RecognizedWordUnit.LexicalForm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72a15-154">Ruft den nicht normalisierten Text eines erkannten Worts ab.</span><span class="sxs-lookup"><span data-stu-id="72a15-154">Gets the unnormalized text of a recognized word.</span></span></summary>
        <value><span data-ttu-id="72a15-155">Gibt eine <see cref="T:System.String" /> zurück, das den Text eines erkannten Worts ohne eine Normalisierung enthält.</span><span class="sxs-lookup"><span data-stu-id="72a15-155">Returns a <see cref="T:System.String" /> containing the text of a recognized word, without any normalization.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a15-156">In den meisten Fällen die Rückgabewerte <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A> und <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A> identisch sind.</span><span class="sxs-lookup"><span data-stu-id="72a15-156">In most cases the values returned by <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A> and <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A> are identical.</span></span> <span data-ttu-id="72a15-157">Allerdings können Erkennungsmodule Spracherkennung Normalisierung verwenden, mehr benutzerfreundliche oder Umgangssprachlich Textdarstellungen der Audioeingabe zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="72a15-157">However, recognition engines may use speech normalization to return more user-friendly or colloquial text representations of audio input.</span></span>  
  
 <span data-ttu-id="72a15-158">Normalisierung der Sprache ist die Verwendung von sonderkonstrukte oder Symbole zum Sprache im Schreiben von Ausdrücken.</span><span class="sxs-lookup"><span data-stu-id="72a15-158">Speech normalization is the use of special constructs or symbols to express speech in writing.</span></span> <span data-ttu-id="72a15-159">Beispielsweise kann Normalisierung der gesprochenen Worte "einen Dollar und sechzehn Cent" mit "$1.16" in der Output-Text ersetzen.</span><span class="sxs-lookup"><span data-stu-id="72a15-159">For example, normalization can replace the spoken words "a dollar and sixteen cents" with "$1.16" in output text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72a15-160">Das folgende Beispiel zeigt eine Hilfsprogramm-Routine, die Text in einem der drei Formate generiert: lexikalische (mit <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalisierte (mit <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), und phonetische (mit <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span><span class="sxs-lookup"><span data-stu-id="72a15-160">The following example shows a utility routine that generates text in one of three formats: lexical (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), and phonetic (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="72a15-161">Die Textausgabe aus einer eine <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> von <xref:System.Speech.Recognition.RecognizedWordUnit> -Objekte, die aus abgerufen werden die <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Eigenschaft für die <xref:System.Speech.Recognition.RecognizedPhrase> Objekt.</span><span class="sxs-lookup"><span data-stu-id="72a15-161">The text output is obtained from a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects, which is obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(  
         ReadOnlyCollection<RecognizedWordUnit> words,   
         WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }   
    else if (type == WordType.Pronunciation)   
    {  
      wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(  
          String.Format("[0}: is not a valid input", type));  
    }  
  
    // Use display attribute  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)  
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)  
    {  
    wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  
  }  
  return text;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
      </Docs>
    </Member>
    <Member MemberName="Pronunciation">
      <MemberSignature Language="C#" Value="public string Pronunciation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Pronunciation" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.Pronunciation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Pronunciation As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Pronunciation { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Pronunciation : string" Usage="System.Speech.Recognition.RecognizedWordUnit.Pronunciation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72a15-162">Ruft die Lautrechtschreibung eines erkannten Worts ab.</span><span class="sxs-lookup"><span data-stu-id="72a15-162">Gets the phonetic spelling of a recognized word.</span></span></summary>
        <value><span data-ttu-id="72a15-163">Eine Zeichenfolge von einem unterstützten Lautalphabet, wie dem internationalen Lautalphabet (IPA) oder dem universellen Sprachlautsatz (UPS).</span><span class="sxs-lookup"><span data-stu-id="72a15-163">A string of characters from a supported phonetic alphabet, such as the International Phonetic Alphabet (IPA) or the Universal Phone Set (UPS).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a15-164">Der Inhalt des <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A> geben die Aussprache der spracherkennungs-Engine verwendet die Spracheingabe in eines seiner geladenen <xref:System.Speech.Recognition.Grammar> Objekte.</span><span class="sxs-lookup"><span data-stu-id="72a15-164">The contents of <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A> indicate which pronunciation the speech recognition engine used to match speech input to one of its loaded <xref:System.Speech.Recognition.Grammar> objects.</span></span> <span data-ttu-id="72a15-165">Aussprache können definiert werden, in das Spracherkennungsmodul im internen Lexikon vorhanden, in ein Lexikon-Dokument, das über eine Grammatik für die Erkennung einer geladenen verlinkt sind <xref:System.Speech.Recognition.Grammar> Objekt oder Inline in einer Grammatik Erkennung einer geladenen <xref:System.Speech.Recognition.Grammar> Objekt.</span><span class="sxs-lookup"><span data-stu-id="72a15-165">Pronunciations may be defined in the speech recognition engine's internal lexicon, in a lexicon document that is linked from a recognition grammar in a loaded <xref:System.Speech.Recognition.Grammar> object, or inline in a recognition grammar in a loaded <xref:System.Speech.Recognition.Grammar> object.</span></span> <span data-ttu-id="72a15-166">Eine spracherkennungs-Engine erstellt auch möglicherweise die Aussprache für ungewöhnlich, dass Wörter, deren Aussprache nicht definiert sind, in ein Lexikon oder Grammatik, die auf die die spracherkennungs-Engine derzeit Zugriff hat.</span><span class="sxs-lookup"><span data-stu-id="72a15-166">A speech recognition engine may also create pronunciations for uncommon words whose pronunciations are not defined in a lexicon or grammar to which the speech recognition engine currently has access.</span></span>  
  
 <span data-ttu-id="72a15-167">Viele Windows-basierten Unicode-Schriftarten, z. B. Courier New, unterstützen die Anzeige der IPA-Zeichenfolgen.</span><span class="sxs-lookup"><span data-stu-id="72a15-167">Many Windows-based Unicode fonts, such as Courier New, support the display of IPA strings.</span></span> <span data-ttu-id="72a15-168">Weitere Informationen finden Sie unter [internationalen Lautalphabet](https://go.microsoft.com/fwlink/?LinkId=58363).</span><span class="sxs-lookup"><span data-stu-id="72a15-168">For more information, see [International Phonetic Alphabet](https://go.microsoft.com/fwlink/?LinkId=58363).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72a15-169">Das folgende Beispiel zeigt eine Hilfsprogramm-Routine, die eine Zeichenfolge mit einem der drei möglichen Formate generiert: lexikalische (mit <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalisierte (mit <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), und phonetische (mit <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span><span class="sxs-lookup"><span data-stu-id="72a15-169">The following example shows a utility routine that generates a string with one of three possible formats: lexical (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), and phonetic (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="72a15-170">Die Textausgabe aus einer eine <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> von <xref:System.Speech.Recognition.RecognizedWordUnit> -Objekte, die aus abgerufen werden die <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Eigenschaft für die <xref:System.Speech.Recognition.RecognizedPhrase> Objekt.</span><span class="sxs-lookup"><span data-stu-id="72a15-170">The text output is obtained from a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects, which is obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(  
          ReadOnlyCollection<RecognizedWordUnit> words,   
          WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }   
    else if (type == WordType.Pronunciation)   
    {  
      wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(  
          String.Format("[0}: is not a valid input", type));  
    }  
    // Use display attribute  
  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)   
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)   
    {  
      wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  }  
  return text;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.DisplayAttributes" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=58363"><span data-ttu-id="72a15-171">Internationalen Lautalphabet</span><span class="sxs-lookup"><span data-stu-id="72a15-171">International Phonetic Alphabet</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.RecognizedWordUnit.Text" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Text : string" Usage="System.Speech.Recognition.RecognizedWordUnit.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72a15-172">Ruft den normalisierten Text für ein erkanntes Wort ab.</span><span class="sxs-lookup"><span data-stu-id="72a15-172">Gets the normalized text for a recognized word.</span></span></summary>
        <value><span data-ttu-id="72a15-173">Eine Zeichenfolge, die die normalisierte Textausgabe für ein angegebenes Eingabewort enthält.</span><span class="sxs-lookup"><span data-stu-id="72a15-173">A string that contains the normalized text output for a given input word.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72a15-174">In den meisten Fällen die Rückgabewerte <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A> und <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A> identisch.</span><span class="sxs-lookup"><span data-stu-id="72a15-174">In most cases the values returned by <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A> and <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A> will be identical.</span></span> <span data-ttu-id="72a15-175">Allerdings können Erkennungsmodule Spracherkennung Normalisierung verwenden, mehr benutzerfreundliche oder Umgangssprachlich Textdarstellungen der Audioeingabe zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="72a15-175">However, recognition engines may use speech normalization to return more user-friendly or colloquial text representations of audio input.</span></span>  
  
 <span data-ttu-id="72a15-176">Normalisierung der Sprache ist die Verwendung von sonderkonstrukte oder Symbole zum Sprache im Schreiben von Ausdrücken.</span><span class="sxs-lookup"><span data-stu-id="72a15-176">Speech normalization is the use of special constructs or symbols to express speech in writing.</span></span> <span data-ttu-id="72a15-177">Beispielsweise kann Normalisierung der gesprochenen Worte "einen Dollar und sechzehn Cent" mit "$1.16" in der Output-Text ersetzen.</span><span class="sxs-lookup"><span data-stu-id="72a15-177">For example, normalization can replace the spoken words "a dollar and sixteen cents" with "$1.16" in output text.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="72a15-178">Das folgende Beispiel zeigt eine Hilfsprogramm-Routine, die eine Zeichenfolge in einem der drei Formate generiert: lexikalische (mit <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalisierte (mit <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), und phonetische (mit <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span><span class="sxs-lookup"><span data-stu-id="72a15-178">The following example shows a utility routine that generates a string in one of three formats: lexical (using <xref:System.Speech.Recognition.RecognizedWordUnit.LexicalForm%2A>), normalized (using <xref:System.Speech.Recognition.RecognizedWordUnit.Text%2A>), and phonetic (using <xref:System.Speech.Recognition.RecognizedWordUnit.Pronunciation%2A>).</span></span> <span data-ttu-id="72a15-179">Die Textausgabe aus einer eine <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> von <xref:System.Speech.Recognition.RecognizedWordUnit> -Objekte, die aus abgerufen werden die <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Eigenschaft für die <xref:System.Speech.Recognition.RecognizedPhrase> Objekt.</span><span class="sxs-lookup"><span data-stu-id="72a15-179">The text output is obtained from a <xref:System.Collections.ObjectModel.ReadOnlyCollection%601> of <xref:System.Speech.Recognition.RecognizedWordUnit> objects, which is obtained from the <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> property on the <xref:System.Speech.Recognition.RecognizedPhrase> object.</span></span>  
  
```csharp  
  
internal enum WordType   
{  
  Text,  
  Normalized = Text,  
  Lexical,  
  Pronunciation  
}  
```  
  
```csharp  
internal static string stringFromWordArray(  
          ReadOnlyCollection<RecognizedWordUnit> words,   
          WordType type)   
{  
  string text = "";  
  foreach (RecognizedWordUnit word in words)   
  {  
    string wordText = "";  
    if (type == WordType.Text || type == WordType.Normalized)   
    {  
      wordText = word.Text;  
    }   
    else if (type == WordType.Lexical)   
    {  
      wordText = word.LexicalForm;  
    }   
    else if (type == WordType.Pronunciation)   
    {  
      wordText = word.Pronunciation;  
    }   
    else   
    {  
      throw new InvalidEnumArgumentException(  
           String.Format("[0}: is not a valid input", type));  
    }  
  
    // Use display attribute  
    if ((word.DisplayAttributes & DisplayAttributes.OneTrailingSpace) != 0)   
    {  
      wordText += " ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.TwoTrailingSpaces) != 0)   
    {  
      wordText += "  ";  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ConsumeLeadingSpaces) != 0)   
    {  
      wordText = wordText.TrimStart();  
    }  
    if ((word.DisplayAttributes & DisplayAttributes.ZeroTrailingSpaces) != 0)   
    {  
      wordText = wordText.TrimEnd();  
    }  
  
    text += wordText;  
  
  }  
  return text;  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>