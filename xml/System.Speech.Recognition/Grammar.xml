<Type Name="Grammar" FullName="System.Speech.Recognition.Grammar">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1e8a7757cdbb2cd463dcccaa8ce68a6de2defeec" /><Meta Name="ms.sourcegitcommit" Value="c573d537afba2d4c1463538f1095f2f155025464" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/16/2019" /><Meta Name="ms.locfileid" Value="72408062" /></Metadata><TypeSignature Language="C#" Value="public class Grammar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Grammar extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.Grammar" />
  <TypeSignature Language="VB.NET" Value="Public Class Grammar" />
  <TypeSignature Language="C++ CLI" Value="public ref class Grammar" />
  <TypeSignature Language="F#" Value="type Grammar = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Diagnostics.DebuggerDisplay("Grammar: {(_uri != null ? "uri=" + _uri.ToString () + " " : "") + "rule=" + _ruleName }")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ein Laufzeitobjekt, das auf eine Spracherkennungsgrammatik verweist, die eine Anwendung verwenden kann, um die Einschränkungen für Spracherkennung zu definieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine sprach Erkennungs Grammatik ist ein Satz von Regeln oder Einschränkungen, mit denen definiert wird, was eine Spracherkennungs-Engine als sinnvolle Eingaben erkennen kann. Weitere Informationen zum Erstellen und Verwenden von sprach Erkennungs Grammatiken finden Sie unter [Spracherkennung](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)), [Erstellen von Grammatiken mithilfe von XML](https://msdn.microsoft.com/library/2d799487-49c6-4cc9-b42f-f71cd3824fe1), Erstellen von [Grammatiken mithilfe von grammatimarbuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae)und [Erstellen von Grammatiken mithilfe von SrgsGrammar](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)).  
  
 Nachdem Sie eine Grammatik erstellt haben, müssen Sie Sie in einem <xref:System.Speech.Recognition.Grammar>-Objekt erstellen, das von einer sprach Erkennungs-Engine geladen werden kann und die die Anwendung zur Laufzeit zur Verwaltung der Spracherkennung verwenden kann. Sie können einen <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-Konstruktor verwenden, um eine <xref:System.Speech.Recognition.Grammar>-Instanz aus einem <xref:System.Speech.Recognition.GrammarBuilder>-oder einem <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>-Objekt oder aus einer Datei oder einer <xref:System.IO.Stream> zu erstellen, die eine Beschreibung einer Grammatik in einem unterstützten Format enthält. Folgende Formate werden unterstützt:  
  
-   XML-Format Dateien, die der W3C- [Spezifikation für die sprach Erkennungs Grammatik (SRGS), Version 1,0](https://go.microsoft.com/fwlink/?LinkId=201761) , entsprechen  
  
-   Grammatiken, die in eine Binärdatei mit der Dateierweiterung ". cfg" kompiliert wurden  
  
 Grammatik Konstruktoren, die Grammatik Dateien im XML-Format in ihren Argumenten akzeptieren, kompilieren die XML-Grammatiken in ein binäres Format, um Sie für das Laden und die Verwendung durch eine Spracherkennungs-Engine zu optimieren. Sie können den Zeitaufwand für das Erstellen eines <xref:System.Speech.Recognition.Grammar>-Objekts aus einer Grammatik im XML-Format verringern, indem Sie die Grammatik im Vorfeld mithilfe einer der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>-Methoden kompilieren.  
  
 Die sprach Erkennungs-Engine einer Anwendung, die von einem <xref:System.Speech.Recognition.SpeechRecognizer>-oder <xref:System.Speech.Recognition.SpeechRecognitionEngine>-Objekt verwaltet wird, kann mehrere sprach Erkennungs Grammatiken laden. Die Anwendung kann einzelne Grammatiken unabhängig aktivieren bzw. deaktivieren, indem Sie die <xref:System.Speech.Recognition.Grammar.Enabled%2A>-Eigenschaft festlegt und das Erkennungs Verhalten durch <xref:System.Speech.Recognition.Grammar>-Eigenschaften, wie z. b. die <xref:System.Speech.Recognition.Grammar.Priority%2A>-und <xref:System.Speech.Recognition.Grammar.Weight%2A>-Eigenschaften, ändern.  
  
 Das <xref:System.Speech.Recognition.Grammar.SpeechRecognized>-Ereignis der Grammatik wird ausgelöst, wenn die Eingabe mit einem Pfad über die Grammatik übereinstimmt.  
  
> [!NOTE]
>  Es ist eine bewährte Vorgehensweise, die Sicherheit von URI oder dll zu überprüfen, die zum Erstellen eines <xref:System.Speech.Recognition.Grammar>-Objekts verwendet werden.  
>   
>  Windows und die Sprachplattform bieten Sicherheit für Anwendungen, die eine <xref:System.Speech.Recognition.Grammar>-Instanz aus einer DLL oder einer Grammatik erstellen, die Skripterstellung unterstützt.  
>   
>  Skripts in <xref:System.Speech.Recognition.Grammar>-Objekten werden immer so ausgeführt, als ob Sie von einer Webseite in der `Internet Zone` heruntergeladen werden. Die Common Language Runtime (CLR) isoliert alle geladenen DLL-Elemente, um eine Grammatik Definition zu erhalten.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Speech.Recognition.Grammar>-Objekt aus einer sprach Erkennungs Grammatik erstellt, die in einer XML-Datei (Cities. Xml) definiert ist. Der Inhalt der Datei "Cities. xml" wird im folgenden XML-Beispiel angezeigt.  
  
```csharp  
// Load a cities grammar from a local file and return the grammar object.   
private static Grammar CreateGrammarFromFile()  
{  
  Grammar citiesGrammar = new Grammar(@"c:\temp\cities.xml");  
  citiesGrammar.Name = "SRGS File Cities Grammar";  
  return citiesGrammar;  
}  
  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Sprach Erkennungs Grammatik-Spezifikation</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sie können einen <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-Konstruktor verwenden, um eine <xref:System.Speech.Recognition.Grammar>-Instanz aus einem <xref:System.Speech.Recognition.GrammarBuilder>-oder <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>-Objekt oder aus einer Datei oder einer <xref:System.IO.Stream>-Instanz zu erstellen, die eine Beschreibung einer Grammatik in einem unterstützten Format enthält. Folgende Formate werden unterstützt:  
  
-   XML-Format Dateien, die der W3C- [Spezifikation für die sprach Erkennungs Grammatik (SRGS), Version 1,0](https://go.microsoft.com/fwlink/?LinkId=201761) , entsprechen  
  
-   Grammatiken, die in eine Binärdatei mit der Dateierweiterung ". cfg" kompiliert wurden  
  
 Grammatik Konstruktoren, die Grammatik Dateien im XML-Format in ihren Argumenten akzeptieren, kompilieren die XML-Grammatiken in ein binäres Format, um Sie für das Laden und die Verwendung durch eine Spracherkennungs-Engine zu optimieren. Sie können den Zeitaufwand für das Erstellen eines <xref:System.Speech.Recognition.Grammar>-Objekts aus einer Grammatik im XML-Format verringern, indem Sie die Grammatik im Vorfeld mithilfe einer der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>-Methoden kompilieren.  
  
 Eine sprach Erkennungs Grammatik kann eine Stamm Regel definieren. Zum Erstellen eines <xref:System.Speech.Recognition.Grammar>-Objekts, das angibt, welche Regel als Stamm Regel verwendet werden soll, verwenden Sie einen-Konstruktor, der den `ruleName`-Parameter akzeptiert.  
  
 Zum Erstellen eines <xref:System.Speech.Recognition.Grammar>-Objekts, das einen Basis-URI angibt, um relative Regel Verweise aufzulösen, verwenden Sie einen-Konstruktor, der den `baseUri`-Parameter annimmt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Grammar ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Grammar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Ein Stream, der eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse mit einer <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt keine Parameter an den Initialisierungs Handler, und die Beschreibung sollte keinen Initialisierungs Handler definieren, der Argumente erfordert.  
  
 Dieser Konstruktor kann eine <xref:System.Speech.Recognition.Grammar>-Instanz aus den folgenden Formaten erstellen:  
  
-   XML-Format Dateien, die der W3C- [Spezifikation für die sprach Erkennungs Grammatik (SRGS), Version 1,0](https://go.microsoft.com/fwlink/?LinkId=201761) , entsprechen  
  
-   Grammatiken, die in eine Binärdatei mit der Dateierweiterung ". cfg" kompiliert wurden  
  
 Dieser Konstruktor kompiliert Grammatik Dateien im XML-Format in ein binäres Format, um Sie für das Laden und die Verwendung durch eine Spracherkennungs-Engine zu optimieren. Sie können den Zeitaufwand für das Erstellen eines <xref:System.Speech.Recognition.Grammar>-Objekts aus einer Grammatik im XML-Format verringern, indem Sie die Grammatik im Vorfeld mithilfe einer der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>-Methoden kompilieren.  
  
 Eine SRGS-Grammatik kann eine Stamm Regel definieren. Um ein <xref:System.Speech.Recognition.Grammar>-Objekt aus einem Stream zu erstellen und eine Stamm Regel anzugeben, verwenden Sie den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-oder <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-Konstruktor.  
  
 Verwenden Sie den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-Konstruktor, um ein <xref:System.Speech.Recognition.Grammar>-Objekt aus einem Stream zu erstellen und einen Basis-URI anzugeben, der zum Auflösen relativer Regel Verweise verwendet werden soll.  
  
   
  
## Examples  
 Im folgenden Beispiel wird mithilfe eines Datei Datenstroms eine sprach Erkennungs Grammatik aus einer lokalen SRGS-Datei (Cities. Xml) erstellt. Der Inhalt der Datei Cities. XML wird im folgenden C# Beispiel angezeigt.  
  
```csharp  
  
// Load a cities grammar from an I/O stream and    
// return the new grammar.   
private static Grammar CreateGrammarFromStream()  
{  
  string fileName = @"c:\temp\cities.xml";  
  Grammar citiesGrammar =  
    new Grammar(new FileStream(fileName, FileMode.Open));  
  citiesGrammar.Name = "Stream Cities Grammar";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="stream" /> beschreibt eine Grammatik, die keine Stammregel enthält.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Der Stream enthält keine gültige Beschreibung einer Grammatik oder beschreibt eine Grammatik, die einen Regelverweis enthält, der nicht aufgelöst werden kann.</exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Sprach Erkennungs Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">Eine Instanz von <see cref="T:System.Speech.Recognition.GrammarBuilder" />, die die Einschränkungen für die Spracherkennungsgrammatik enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse mit einem <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Verwendung der <xref:System.Speech.Recognition.GrammarBuilder>-Klasse zum Definieren einer Grammatik finden Sie unter [Erstellen von Grammatiken mithilfe von grammatimarbuilder](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Spracherkennungs-Grammatik mithilfe von <xref:System.Speech.Recognition.Choices>-und <xref:System.Speech.Recognition.GrammarBuilder>-Objekten erstellt. Der <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-Konstruktor erstellt ein <xref:System.Speech.Recognition.Grammar>-Objekt aus dem <xref:System.Speech.Recognition.GrammarBuilder>-Objekt.  
  
```csharp  
  
// Create a grammar using a GrammarBuilder and return the new grammar.   
private static Grammar CreateGrammarBuilderGrammar()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  
  Choices cityChoice = new Choices (new string[]   
  {"Seattle", "New York", "Miami", "Los Angeles"});  
  
  builder.Append("I would like to fly from");  
  builder.Append(cityChoice);  
  builder.Append("to");  
  builder.Append(cityChoice);  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "GrammarBuilder Cities Grammar";  
  
  return citiesGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar srgsDocument" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">Die Einschränkungen für die Spracherkennungsgrammatik.</param>
        <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Speech.Recognition.Grammar" />-Klasse aus einem <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt keine Parameter an den Initialisierungs Handler, und der <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> darf keinen Initialisierungs Handler enthalten, der Argumente erfordert.  
  
 Ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> kann eine root-Regel aufweisen. Verwenden Sie den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-oder <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-Konstruktor, um ein <xref:System.Speech.Recognition.Grammar>-Objekt zu erstellen, das eine Stamm Regel angibt.  
  
 Verwenden Sie den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-Konstruktor, um eine sprach Erkennungs <xref:System.Speech.Recognition.Grammar> aus einem <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> zu erstellen und einen Basis-URI anzugeben, der zum Auflösen relativer Regel Verweise verwendet werden soll.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine sprach Erkennungs Grammatik in einer <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>-Instanz erstellt, die dann zum Erstellen eines <xref:System.Speech.Recognition.Grammar>-Objekts verwendet wird.  
  
```csharp  
private static Grammar CreateSrgsDocumentGrammar()  
{  
  // Create the SrgsDocument.  
  SrgsDocument document = new SrgsDocument();  
  
  // Create the Cities rule and add it to the document.  
  SrgsRule citiesRule = new SrgsRule("Cities");  
  
  SrgsOneOf cityChoice = new SrgsOneOf();  
  cityChoice.Add(new SrgsItem("Seattle"));  
  cityChoice.Add(new SrgsItem("Los Angeles"));  
  cityChoice.Add(new SrgsItem("New York"));  
  cityChoice.Add(new SrgsItem("Miami"));  
  
  citiesRule.Add(cityChoice);  
  document.Rules.Add(citiesRule);  
  
  // Create the Main rule and add it to the document.  
  SrgsRule mainRule = new SrgsRule("Main");  
  mainRule.Scope = SrgsRuleScope.Public;  
  
  SrgsItem item = new SrgsItem("I would like to fly from");  
  item.Add(new SrgsRuleRef(citiesRule));  
  item.Add(new SrgsText("to"));  
  item.Add(new SrgsRuleRef(citiesRule));  
  
  mainRule.Add(item);  
  document.Rules.Add(mainRule);  
  
  // Set the root rule.  
  document.Root = mainRule;  
  
  // Create the Grammar object.  
  Grammar citiesGrammar = new Grammar(document);  
  citiesGrammar.Name = "SrgsDocument Cities Grammar";  
  
  return citiesGrammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="srgsDocument" /> enthält keine Stammregel.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="srgsDocument" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="srgsDocument" /> enthält einen Regelverweis, der nicht aufgelöst werden kann.</exception>
        <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Sprach Erkennungs Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad der Datei, die eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse aus einer Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt keine Parameter an den Initialisierungs Handler, und die Beschreibung sollte keinen Initialisierungs Handler definieren, der Argumente erfordert.  
  
 Dieser Konstruktor kann eine <xref:System.Speech.Recognition.Grammar>-Instanz aus den folgenden Formaten erstellen:  
  
-   XML-Format Dateien, die der W3C- [Spezifikation für die sprach Erkennungs Grammatik (SRGS), Version 1,0](https://go.microsoft.com/fwlink/?LinkId=201761) , entsprechen  
  
-   Grammatiken, die in eine Binärdatei mit der Dateierweiterung ". cfg" kompiliert wurden  
  
 Dieser Konstruktor kompiliert Grammatik Dateien im XML-Format in ein binäres Format, um Sie für das Laden und die Verwendung durch eine Spracherkennungs-Engine zu optimieren. Sie können den Zeitaufwand für das Erstellen eines <xref:System.Speech.Recognition.Grammar>-Objekts aus einer Grammatik im XML-Format verringern, indem Sie die Grammatik im Vorfeld mithilfe einer der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>-Methoden kompilieren.  
  
 Eine SRGS-Grammatik kann eine Stamm Regel definieren. Um ein <xref:System.Speech.Recognition.Grammar>-Objekt aus einer Zeichenfolge zu erstellen und eine Stamm Regel anzugeben, verwenden Sie den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-Konstruktor.  
  
 Zum Erstellen eines <xref:System.Speech.Recognition.Grammar>-Objekts, das einen Basis-URI angibt, der zum Auflösen relativer Regel Verweise verwendet werden soll, öffnen Sie die Datei in einem Dateistream, und verwenden Sie den <xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=nameWithType>-Konstruktor.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine sprach Erkennungs Grammatik aus einer lokalen SRGS-Datei geladen, um ein <xref:System.Speech.Recognition.Grammar>-Objekt zu erstellen. Der Inhalt der Datei Cities. XML wird im XML-Beispiel angezeigt, das auf C# das Beispiel folgt.  
  
```csharp  
// Load a cities grammar from a local file and  
// return the new grammar.   
private static Grammar CreateGrammarFromFile()  
{  
  Grammar citiesGrammar = new Grammar(@"c:\temp\cities.xml");  
  citiesGrammar.Name = "SRGS File Cities Grammar";  
  return citiesGrammar;  
}  
  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="path" /> enthält die leere Zeichenfolge (""), oder die Datei beschreibt eine Grammatik, die keine Stammregel enthält.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Die Datei enthält keine gültige Beschreibung oder beschreibt eine Grammatik, die einen Regelverweis enthält, der nicht aufgelöst werden kann.</exception>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Sprach Erkennungs Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">Ein Stream, der eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse aus <see cref="T:System.IO.Stream" /> und gibt eine Stammregel an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt keine Parameter an den Initialisierungs Handler, und die Beschreibung sollte keinen Initialisierungs Handler definieren, der Argumente erfordert.  
  
 Dieser Konstruktor kann eine <xref:System.Speech.Recognition.Grammar>-Instanz aus den folgenden Formaten erstellen:  
  
-   XML-Format Dateien, die der W3C- [Spezifikation für die sprach Erkennungs Grammatik (SRGS), Version 1,0](https://go.microsoft.com/fwlink/?LinkId=201761) , entsprechen  
  
-   Grammatiken, die in eine Binärdatei mit der Dateierweiterung ". cfg" kompiliert wurden  
  
 Dieser Konstruktor kompiliert Grammatik Dateien im XML-Format in ein binäres Format, um Sie für das Laden und die Verwendung durch eine Spracherkennungs-Engine zu optimieren. Sie können den Zeitaufwand für das Erstellen eines <xref:System.Speech.Recognition.Grammar>-Objekts aus einer Grammatik im XML-Format verringern, indem Sie die Grammatik im Vorfeld mithilfe einer der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>-Methoden kompilieren.  
  
 Verwenden Sie den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-Konstruktor, um ein <xref:System.Speech.Recognition.Grammar> aus einem Stream zu erstellen und einen Basis-URI anzugeben, der zum Auflösen relativer Regel Verweise verwendet werden soll.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine lokale SRGS-Datei (Cities. Xml) aus einem Dateistream geladen, und es wird eine Regel angegeben, die als Stamm der Grammatik verwendet werden soll. Der Inhalt der Datei Cities. XML wird im XML-Beispiel angezeigt, das auf C# das Beispiel folgt.  
  
```csharp  
  
// Load a cities grammar from an I/O stream, use a specific  
// rule as the root of the grammar, and return the new grammar.   
private static Grammar CreateGrammarFromStream2()  
{  
  FileInfo file = new FileInfo(@"c:\temp\cities.xml");  
  Grammar citiesGrammar = new Grammar(file.OpenRead(), "Main");  
  citiesGrammar.Name = "Stream Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="ruleName" /> kann nicht aufgelöst werden oder ist nicht öffentlich, oder <paramref name="ruleName" /> ist <see langword="null" /> und die Grammatikbeschreibung definiert keine Stammregel.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Der Stream enthält keine gültige Beschreibung oder beschreibt eine Grammatik, die einen Regelverweis enthält, der nicht aufgelöst werden kann.</exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Sprach Erkennungs Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">Die Einschränkungen für die Spracherkennungsgrammatik.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> zu verwenden.</param>
        <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Speech.Recognition.Grammar" />-Klasse von einem <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />-Objekt und gibt eine Stammregel an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt keine Parameter an den Initialisierungs Handler, und der <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> darf keinen Initialisierungs Handler enthalten, der Argumente erfordert.  
  
 Verwenden Sie den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-Konstruktor, um ein <xref:System.Speech.Recognition.Grammar>-Objekt aus einem <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> zu erstellen und einen Basis-URI anzugeben, der zum Auflösen relativer Regel Verweise verwendet werden soll.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine sprach Erkennungs Grammatik in einer <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>-Instanz erstellt, und es wird eine Regel angegeben, die als Stamm Regel der Grammatik verwendet werden soll. Im Beispiel wird ein <xref:System.Speech.Recognition.Grammar>-Objekt aus der <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument>-Instanz erstellt und in das sprach Erkennungs Modul geladen.  
  
```csharp  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create the SrgsDocument.  
        SrgsDocument document = new SrgsDocument();  
  
        // Create the Cities rule and add it to the document.  
        SrgsRule citiesRule = new SrgsRule("Cities");  
        citiesRule.Scope = SrgsRuleScope.Public;  
  
        SrgsOneOf cityChoice = new SrgsOneOf();  
        cityChoice.Add(new SrgsItem("Seattle"));  
        cityChoice.Add(new SrgsItem("Los Angeles"));  
        cityChoice.Add(new SrgsItem("New York"));  
        cityChoice.Add(new SrgsItem("Miami"));  
  
        citiesRule.Add(cityChoice);  
        document.Rules.Add(citiesRule);  
  
        // Create the Main rule and add it to the document.  
        SrgsRule mainRule = new SrgsRule("Main");  
        mainRule.Scope = SrgsRuleScope.Public;  
  
        mainRule.Add(new SrgsItem("I would like to fly from"));  
        mainRule.Add(new SrgsRuleRef(citiesRule));  
        mainRule.Add(new SrgsItem("to"));  
        mainRule.Add(new SrgsRuleRef(citiesRule));  
  
        document.Rules.Add(mainRule);  
  
        // Create the Grammar object and specify which rule to use as the root.  
        Grammar citiesGrammar = new Grammar(document,"Main");  
  
        // Load the grammar object to the recognizer.  
        recognizer.LoadGrammarAsync(citiesGrammar);  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=  
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Set the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Start recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting asynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("  Speech recognized: " + e.Result.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="ruleName" /> kann nicht aufgelöst werden oder ist nicht öffentlich oder <paramref name="ruleName" /> ist <see langword="null" /> und <paramref name="srgsDocument" /> enthält keine Stammregel.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="srgsDocument" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="srgsDocument" /> enthält einen Regelverweis, der nicht aufgelöst werden kann.</exception>
        <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Sprach Erkennungs Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (string path, string ruleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string ruleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ruleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::String ^ path, System::String ^ ruleName);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : string * string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (path, ruleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="ruleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad der Datei, die eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse aus einer Datei und gibt eine Stammregel an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt keine Parameter an den Initialisierungs Handler, und die Beschreibung sollte keinen Initialisierungs Handler definieren, der Argumente erfordert.  
  
 Dieser Konstruktor kann eine <xref:System.Speech.Recognition.Grammar>-Instanz aus den folgenden Formaten erstellen:  
  
-   XML-Format Dateien, die der W3C- [Spezifikation für die sprach Erkennungs Grammatik (SRGS), Version 1,0](https://go.microsoft.com/fwlink/?LinkId=201761) , entsprechen  
  
-   Grammatiken, die in eine Binärdatei mit der Dateierweiterung ". cfg" kompiliert wurden  
  
 Dieser Konstruktor kompiliert Grammatik Dateien im XML-Format in ein binäres Format, um Sie für das Laden und die Verwendung durch eine Spracherkennungs-Engine zu optimieren. Sie können den Zeitaufwand für das Erstellen eines <xref:System.Speech.Recognition.Grammar>-Objekts aus einer Grammatik im XML-Format verringern, indem Sie die Grammatik im Vorfeld mithilfe einer der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>-Methoden kompilieren.  
  
 Zum Erstellen eines <xref:System.Speech.Recognition.Grammar>, das einen Basis-URI angibt, der zum Auflösen relativer Regel Verweise verwendet werden soll, öffnen Sie einen Dateistream für die Datei, und verwenden Sie den <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-Konstruktor.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine lokale SRGS-Datei (Cities. Xml) aus einer Datei geladen und eine Regel angegeben, die als Stamm der Grammatik verwendet werden soll. Der Inhalt der Datei Cities. XML wird im XML-Beispiel angezeigt, das auf C# das Beispiel folgt.  
  
```csharp  
  
// Load a cities grammar from a local file, use a specific  
// rule as the root of the grammar, and return the new grammar.  
private static Grammar CreateGrammarFromFile2()  
{  
  Grammar citiesGrammar = new Grammar(@"c:\temp\cities.xml", "Main");  
  citiesGrammar.Name = "SRGS File Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="ruleName" /> kann nicht aufgelöst werden oder ist nicht öffentlich, ist <paramref name="path" /> die leere Zeichenfolge ("") oder <paramref name="ruleName" /> ist <see langword="null" />, und die Grammatikbeschreibung definiert keine Stammregel.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Die Datei enthält keine gültige Beschreibung oder beschreibt eine Grammatik, die einen Regelverweis enthält, der nicht aufgelöst werden kann.</exception>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Sprach Erkennungs Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="stream">Ein <see cref="T:System.IO.Stream" />, der an ein Eingabe/Ausgabe Objekt an geschlossen ist (einschließlich Dateien, VisualStudio-Ressourcen und DLLs), das eine Grammatikspezifikation enthält.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <param name="parameters">Parameter, die an den Initialisierungshandler zu übergeben sind, angegeben durch die <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />-Eigenschaft für den Einstiegspunkt oder die Stammregel der zu erstellenden <see cref="T:System.Speech.Recognition.Grammar" />. Dieser Parameter kann NULL sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse aus <see cref="T:System.IO.Stream" /> und gibt eine Stammregel an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parameter für einen Initialisierungs Handler können ebenfalls angegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="stream" /> ist mit einer Grammatik verbunden, die 
–   Enthält keine in <paramref name="ruleName" /> angegebene Regel  
  
–   Erfordert die Initialisierungsparameter, die sich von denen unterscheiden, die in <paramref name="parameters" /> angegeben werden  
  
–   Enthält einen relativen Regelverweis, der nicht von der <see cref="T:System.Uri" /> Standardbasisregel für Grammatiken aufgelöst werden kann</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName, class System.Uri baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName, Uri ^ baseUri);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string * Uri -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName, baseUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="stream">Ein Stream, der eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <param name="baseUri">Der Basis-URI, der zur Auflösung von jedem relativen Regelverweis in der Grammatikbeschreibung zu verwenden ist, oder <see langword="null" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse von einem Stream, gibt eine Stammregel an und definiert einen grundlegenden Uniform Resource Identifier (URI), um relative Regelverweise aufzulösen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt keine Parameter an den Initialisierungs Handler, und die Beschreibung sollte keinen Initialisierungs Handler definieren, der Argumente erfordert.  
  
 Dieser Konstruktor kann eine <xref:System.Speech.Recognition.Grammar>-Instanz aus den folgenden Formaten erstellen:  
  
-   XML-Format Dateien, die der W3C- [Spezifikation für die sprach Erkennungs Grammatik (SRGS), Version 1,0](https://go.microsoft.com/fwlink/?LinkId=201761) , entsprechen  
  
-   Grammatiken, die in eine Binärdatei mit der Dateierweiterung ". cfg" kompiliert wurden  
  
 Dieser Konstruktor kompiliert Grammatik Dateien im XML-Format in ein binäres Format, um Sie für das Laden und die Verwendung durch eine Spracherkennungs-Engine zu optimieren. Sie können den Zeitaufwand für das Erstellen eines <xref:System.Speech.Recognition.Grammar>-Objekts aus einer Grammatik im XML-Format verringern, indem Sie die Grammatik im Vorfeld mithilfe einer der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A>-Methoden kompilieren.  
  
 Dieser Konstruktor überprüft nicht `baseUri`. Die `LoadGrammar`-Methode eines <xref:System.Speech.Recognition.SpeechRecognitionEngine>-oder <xref:System.Speech.Recognition.SpeechRecognizer>-Objekts löst jedoch eine Ausnahme aus, wenn nicht alle Regel Verweise in der Grammatik Beschreibung aufgelöst werden können. Wenn `baseUri` nicht `null` ist, verwendet die `LoadGrammar`-Methode den URI, um alle Regel Verweise aufzulösen, die andernfalls nicht aufgelöst werden können. Wenn `baseUri` eine Datei darstellt, verwendet `LoadGrammar` die festgelegte Datei und das Verzeichnis der Datei, wenn versucht wird, relative Regel Verweise aufzulösen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine lokale SRGS-Datei ("Shuttle. xml") aus einem Dateistream geladen. Die Datei enthält einen relativen Regel Verweis auf eine Regel in der Datei "Cities. xml" und gibt einen Basis-URI an, der zum Auflösen des Regel Verweises verwendet werden soll. Der Inhalt der Dateien "Shuttle. xml" und "Cities. xml" wird in den XML- C# Beispielen angezeigt, die dem Beispiel folgen.  
  
```csharp  
  
private static Grammar CreateGrammarFromStream3()  
{  
  FileInfo file = new FileInfo(@".\shuttle.xml");  
  Uri baseUri = new Uri(@"file://c:\temp\");  
  Grammar citiesGrammar = new Grammar(file.OpenRead(), null, baseUri);  
  citiesGrammar.Name = "Stream Cities Grammar 3";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- shuttle.xml:   
    Defines an SRGS grammar for asking about a shuttle service. This grammar  
    references a Cities rule that is defined in the cities.xml grammar. -->  
  
  <rule id="Main">  
    <item>  
      Can I get a shuttle in  
      <ruleref uri="cities.xml#Cities"/>  
    </item>  
  </rule>  
</grammar>  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="ruleName" /> kann nicht aufgelöst werden oder ist nicht öffentlich, oder <paramref name="ruleName" /> ist <see langword="null" /> und die Grammatikbeschreibung definiert keine Stammregel.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Der Stream enthält keine gültige Beschreibung oder beschreibt eine Grammatik, die einen Regelverweis enthält, der nicht aufgelöst werden kann.</exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Sprach Erkennungs Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">Eine Instanz von <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />, die die Einschränkungen für die Spracherkennungsgrammatik enthält.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <param name="parameters">Parameter, die an den Initialisierungshandler zu übergeben sind, angegeben durch die <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />-Eigenschaft für den Einstiegspunkt oder die Stammregel der zu erstellenden <see cref="T:System.Speech.Recognition.Grammar" />. Dieser Parameter kann NULL sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse von einer Instanz von <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> und gibt den Namen einer Regel an, die der Einstiegspunkt der Grammatik sein soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parameter für einen Initialisierungs Handler können ebenfalls angegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">–   Einer der Parameter enthält einen ungültigen Wert.  
  
–   Das <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />, das vom <paramref name="srgsDocument" /> angegeben wird, enthält nicht die Regel, die von <paramref name="ruleName" /> angegeben wird.  
  
–   Der Inhalt der Arrayparameter stimmt nicht mit den Argumenten von einem der Initialisierungshandler der Regel überein.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, class System.Uri baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName, Uri ^ baseUri);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string * Uri -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName, baseUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">Die Einschränkungen für die Spracherkennungsgrammatik.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> zu verwenden.</param>
        <param name="baseUri">Der Basis-URI, der zur Auflösung von jedem relativen Regelverweis in der <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> oder der <see langword="null" /> zu verwenden ist.</param>
        <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Speech.Recognition.Grammar" />-Klasse von einem <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />-Objekt, gibt eine Stammregel an und definiert einen grundlegenden Uniform Resource Identifier (URI), um relative Regelverweise aufzulösen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt keine Parameter an den Initialisierungs Handler, und der <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> darf keinen Initialisierungs Handler enthalten, der Argumente erfordert.  
  
 Dieser Konstruktor überprüft nicht `baseUri`. Die `LoadGrammar`-Methode eines <xref:System.Speech.Recognition.SpeechRecognitionEngine>-oder <xref:System.Speech.Recognition.SpeechRecognizer>-Objekts löst jedoch eine Ausnahme aus, wenn nicht alle Regel Verweise in der Grammatik Beschreibung aufgelöst werden können. Wenn `baseUri` nicht `null` ist, verwendet die `LoadGrammar`-Methode den URI, um alle Regel Verweise aufzulösen, die andernfalls nicht aufgelöst werden können. Wenn `baseUri` eine Datei darstellt, verwendet die `LoadGrammar`-Methode die angegebene Datei und das Verzeichnis der Datei, wenn versucht wird, relative Regel Verweise aufzulösen.  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine sprach Erkennungs Grammatik in einem <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> erstellt, das einen relativen Regel Verweis auf die Datei Cities. XML enthält, und gibt einen URI an, der zum Auflösen des Regel Verweises verwendet werden soll. Der Inhalt der Datei Cities. XML wird im XML-Beispiel angezeigt, das auf C# das Beispiel folgt.  
  
```csharp  
  
private static Grammar CreateSrgsDocumentGrammar3()  
{  
  // Create the SrgsDocument.  
  SrgsDocument document = new SrgsDocument();  
  
  // Create the Main rule and add it to the document.  
  SrgsRule mainRule = new SrgsRule("Main");  
  mainRule.Scope = SrgsRuleScope.Public;  
  
  SrgsItem item = new SrgsItem("Can I get a shuttle in");  
  
  // Create a relative URI for the cities rule.  
  Uri ruleUri = new Uri("cities.xml#Cities", UriKind.Relative);  
  
  item.Add(new SrgsRuleRef(ruleUri));  
  
  mainRule.Add(item);  
  document.Rules.Add(mainRule);  
  
  // Set the root rule.  
  document.Root = mainRule;  
  
  // Create the grammar.  
  Uri baseUri = new Uri(@"file://c:\temp\");  
  Grammar citiesGrammar = new Grammar(document, null, baseUri);  
  citiesGrammar.Name = "SrgsDocument Cities Grammar 3";  
  
  return citiesGrammar;  
}  
  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="ruleName" /> kann nicht aufgelöst werden oder ist nicht öffentlich oder <paramref name="ruleName" /> ist <see langword="null" /> und <paramref name="srgsDocument" /> enthält keine Stammregel.</exception>
        <exception cref="T:System.ArgumentNullException"><paramref name="srgsDocument" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException"><paramref name="srgsDocument" /> enthält einen Regelverweis, der nicht aufgelöst werden kann.</exception>
        <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Sprach Erkennungs Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (string path, string ruleName, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string ruleName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ruleName As String, parameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::String ^ path, System::String ^ ruleName, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : string * string * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (path, ruleName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad zu einer Datei (einschließlich DLL), die eine Grammatikspezifikation enthält.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <param name="parameters">Parameter, die an den Initialisierungshandler zu übergeben sind, angegeben durch die <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />-Eigenschaft für den Einstiegspunkt oder die Stammregel der zu erstellenden <see cref="T:System.Speech.Recognition.Grammar" />. Dieser Parameter kann null sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse aus einer Datei, die eine Grammatikdefinition enthält, und gibt den Namen einer Regel an, die der Einstiegspunkt der Grammatik sein soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parameter für einen Initialisierungs Handler können ebenfalls angegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">–   Einer der Parameter enthält einen ungültigen Wert.  
  
–   Die Datei, die von <paramref name="path" /> angegeben wird, enthält keine gültige Grammatik oder Regel, die in <paramref name="ruleName" /> angegeben wurde.  
  
–   Der Inhalt der Arrayparameter stimmt nicht mit den Argumenten von einem der Initialisierungshandler der Regel überein.  
  
–   Die Grammatik enthält einen relativen Regelverweis, der nicht von der standardmäßigen <see cref="T:System.Uri" />-Basisregel für Grammatiken aufgelöst werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName, class System.Uri baseUri, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName, Uri ^ baseUri, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string * Uri * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName, baseUri, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="stream">Ein <see cref="T:System.IO.Stream" />, der an ein Eingabe/Ausgabe Objekt an geschlossen ist (einschließlich Dateien, VisualStudio-Ressourcen und DLLs), das eine Grammatikspezifikation enthält.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <param name="baseUri">Der Basis-URI, der zur Auflösung von jedem relativen Regelverweis in der Grammatikbeschreibung zu verwenden ist, oder <see langword="null" />.</param>
        <param name="parameters">Parameter, die an den Initialisierungshandler zu übergeben sind, angegeben durch die <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />-Eigenschaft für den Einstiegspunkt oder die Stammregel der zu erstellenden <see cref="T:System.Speech.Recognition.Grammar" />. Dieser Parameter kann NULL sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse eines <see cref="T:System.IO.Stream" /> und gibt eine Stammregel und einen Basis-URI an, um relative Verweise aufzulösen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parameter für einen Initialisierungs Handler können ebenfalls angegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">–   Einer der Parameter enthält einen ungültigen Wert.  
  
–   Der <paramref name="stream" /> wird an eine Grammatik gebunden, die nicht die Regel enthält, die durch <paramref name="ruleName" /> angegeben wird.  
  
–   Der Inhalt der Arrayparameter stimmt nicht mit den Argumenten von einem der Initialisierungshandler der Regel überein.  
  
–   Die Grammatik enthält einen relativen Regelverweis, der nicht von der standardmäßigen <see cref="T:System.Uri" />-Basisregel für Grammatiken oder vom URI, der von <paramref name="baseUri" /> bereitgestellt wird, aufgelöst werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, class System.Uri baseUri, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName, Uri ^ baseUri, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string * Uri * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName, baseUri, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">Eine Instanz von <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />, die die Einschränkungen für die Spracherkennungsgrammatik enthält.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <param name="baseUri">Der Basis-URI, der zur Auflösung von jedem relativen Regelverweis in der Grammatikbeschreibung zu verwenden ist, oder <see langword="null" />.</param>
        <param name="parameters">Parameter, die an den Initialisierungshandler zu übergeben sind, angegeben durch die  <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />-Eigenschaft für den Einstiegspunkt oder die Stammregel der zu erstellenden <see cref="T:System.Speech.Recognition.Grammar" />. Dieser Parameter kann NULL sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse von einer Instanz von <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> und gibt den Namen einer Regel an, die der Einstiegspunkt der Grammatik sein soll, und einen Basis-URI, um relative Verweise aufzulösen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parameter für einen Initialisierungs Handler können ebenfalls angegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">–   Einer der Parameter enthält einen ungültigen Wert.  
  
–   Das <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />, das vom <paramref name="srgsDocument" /> angegeben wird, enthält nicht die Regel, die in <paramref name="ruleName" /> angegeben wird.  
  
–   Der Inhalt der Arrayparameter stimmt nicht mit den Argumenten von einem der Initialisierungshandler der Regel überein.  
  
–   Die Grammatik enthält einen relativen Regelverweis, der nicht von der standardmäßigen <see cref="T:System.Uri" />-Basisregel für Grammatiken oder vom URI, der von <paramref name="baseUri" /> bereitgestellt wird, aufgelöst werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Speech.Recognition.Grammar.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt diesen fest, welcher steuert, ob eine <see cref="T:System.Speech.Recognition.Grammar" /> von einem Spracherkennungsmodul verwendet werden kann, um eine Erkennung durchzuführen.</summary>
        <value>Die <see langword="Enabled" />-Eigenschaft gibt <see langword="true" /> zurück, wenn eine Spracherkennung mithilfe der sprach Erkennungs Grammatik eine Erkennung durchführen kann. Andernfalls gibt die-Eigenschaft <see langword="false" /> zurück. Die Standardeinstellung ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Instanz von <xref:System.Speech.Recognition.Grammar> kann aktiviert oder deaktiviert werden, unabhängig davon, dass Sie von einer sprach Erkennungs-Engine geladen wird.  
  
   
  
## Examples  
 Im folgenden Beispiel werden Informationen zu einem <xref:System.Speech.Recognition.Grammar>-Objekt in die [Konsole](https://go.microsoft.com/fwlink/?LinkId=159613)geschrieben.  
  
```csharp  
  
private static void DumpGrammarStatus(Grammar item)  
{  
  Console.WriteLine("Grammar name is {0}:", item.Name);  
  Console.WriteLine("  The Grammar {0} loaded.",  
    item.Loaded ? "is" : "is not");  
  Console.WriteLine("  The Grammar {0} enabled.",  
    item.Enabled ? "is" : "is not");  
  if (item.RuleName != null)  
  {  
    Console.WriteLine("  The root rule is {0}.", item.RuleName);  
  }  
  else  
  {  
    Console.WriteLine("  The Grammar does not specify a root rule.");  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Loaded" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Sprach Erkennungs Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName="IsStg">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsStg { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStg" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.IsStg" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property IsStg As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool IsStg { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStg : bool" Usage="System.Speech.Recognition.Grammar.IsStg" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob eine Grammatik stark typisiert ist.</summary>
        <value>Die <see langword="IsStg" />-Eigenschaft gibt <see langword="true" /> zurück, wenn die Grammatik stark typisiert ist; andernfalls gibt die Eigenschaft <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein stark typisiertes <xref:System.Speech.Recognition.Grammar>-Objekt (`IsStg` entspricht `true`) kann stark typisierte Ergebnisse (Objekte anstelle von Rohtext) an eine Client Anwendung zurückgeben. Eine stark typisierte Grammatik kann z. b. <xref:System.DateTime>-Objekte anstelle von unformatierten Eingabedaten zurückgeben.  
  
 Sie können stark typisierte Grammatiken implementieren, indem Sie Code an die Regeln einer Grammatik anhängen. Wenn eine Erkennungs-Engine eine beliebige Regel verarbeitet und als Eingabe die aktuellen partiellen Ergebnisse annimmt, wird der zugehörige Code ausgeführt, und die Textinformationen werden zu Rich-Type-Objekten. Dies ermöglicht es einem Client, die erweiterte Semantik Überprüfung, die Unterstützung mehrerer Kulturen und die interne Grammatik Logik einfacher zu nutzen.  
  
 Instanzen von stark typisierten <xref:System.Speech.Recognition.Grammar>-Objekten werden in der Regel aus Ressourcen in einer Assembly als <xref:System.Type> der Common Language Runtime (CLR) abgerufen. Die lokalisierten Typen, die zur Unterstützung verschiedener Sprachen verwendet werden, sind Beispiele für solche <xref:System.Speech.Recognition.Grammar>-Objekte.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Stark typisierte Grammatiken, die von <see cref="T:System.Speech.Recognition.Grammar" /> erben, müssen das Standardverhalten <see langword="IsStg" /> überschreiben, das <see langword="false" /> zurückgeben soll.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public bool Loaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loaded" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Loaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Loaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loaded : bool" Usage="System.Speech.Recognition.Grammar.Loaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob <see cref="T:System.Speech.Recognition.Grammar" /> von einer Spracherkennung geladen wurde.</summary>
        <value>Die <see langword="Loaded" />-Eigenschaft gibt <see langword="true" /> zurück, wenn die referenzierte Spracherkennungsgrammatik momentan in einer Spracherkennung geladen ist. Andernfalls gibt die Eigenschaft <see langword="false" /> zurück. Die Standardeinstellung ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem ein <xref:System.Speech.Recognition.Grammar> geladen wurde, können die Werte <xref:System.Speech.Recognition.Grammar.Weight%2A> und <xref:System.Speech.Recognition.Grammar.Priority%2A> nicht geändert werden.  
  
   
  
## Examples  
 Im folgenden Beispiel werden Informationen zu einem <xref:System.Speech.Recognition.Grammar>-Objekt in die [Konsole](https://go.microsoft.com/fwlink/?LinkId=159613)geschrieben.  
  
```csharp  
  
private static void DumpGrammarStatus(Grammar item)  
{  
  Console.WriteLine("Grammar name is {0}:", item.Name);  
  Console.WriteLine("  The Grammar {0} loaded.",  
    item.Loaded ? "is" : "is not");  
  Console.WriteLine("  The Grammar {0} enabled.",  
    item.Enabled ? "is" : "is not");  
  if (item.RuleName != null)  
  {  
    Console.WriteLine("  The root rule is {0}.", item.RuleName);  
  }  
  else  
  {  
    Console.WriteLine("  The Grammar does not specify a root rule.");  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Enabled" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="LoadLocalizedGrammarFromType">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType (Type type, params object[] onInitParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType(class System.Type type, object[] onInitParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::Grammar ^ LoadLocalizedGrammarFromType(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ onInitParameters);" />
      <MemberSignature Language="F#" Value="static member LoadLocalizedGrammarFromType : Type * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType (type, onInitParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.Grammar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="onInitParameters" Type="System.Object[]">
          <Attributes>
            <Attribute FrameworkAlternate="netframework-3.0">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">In einer Assembly der <see cref="T:System.Type" />-Objekts, das auf <see cref="T:System.Speech.Recognition.Grammar" /> basiert.</param>
        <param name="onInitParameters">Parameter, die an eine Initialisierungsmethode des lokalisierten Objekts auf Grundlage von <see cref="T:System.Speech.Recognition.Grammar" /> übergeben werden sollen. Dieser Parameter kann NULL sein.</param>
        <summary>Die <see langword="LoadLocalizedGrammarFromType" />-Methode gibt eine lokalisierte Instanz eines <see cref="T:System.Speech.Recognition.Grammar" />-Objekts zurück, das von <see cref="T:System.Type" /> abgeleitet ist.</summary>
        <returns>Die <see langword="LoadLocalizedGrammarFromType" />-Methode gibt ein gültiges Objekt auf Grundlage von <see cref="T:System.Speech.Recognition.Grammar" />zurück oder <see langword="null" />, falls ein Fehler aufgetreten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lokalisierte Grammatiken, die mit `LoadLocalizedGrammarFromType` abgerufen werden, sind in der Regel stark typisiert (Weitere Informationen zu stark typisierten Grammatiken finden Sie unter <xref:System.Speech.Recognition.Grammar.IsStg%2A>). Wenn `onInitParameters` ein NULL-Verweis ist (Nothing in Visual Basic), sollte die lokalisierte Grammatik entweder keine Initialisierungs Methode oder keine Methode haben, die keine Argumente annimmt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Speech.Recognition.Grammar.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen eines <see cref="T:System.Speech.Recognition.Grammar" />-Objekts ab oder legt ihn fest.</summary>
        <value>Die <see langword="Name" />-Eigenschaft gibt den Namen des <see cref="T:System.Speech.Recognition.Grammar" />-Objekts zurück. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel werden zwei <xref:System.Speech.Recognition.Grammar>-Objekte erstellt, eine für Ziffern und eine für Bruchzahlen. Den Grammatik Objekten werden Namen und relative Gewichtungen und Prioritäten zugewiesen und von einem Prozess internen sprach Erkennungs Modul geladen. Die Methoden "`CreateDigitsGrammar`", "`CreateFractionsGrammar`" und "`recognizer_SpeechRecognized`" werden hier nicht angezeigt.  
  
```csharp  
  
// Create a Grammar for recognizing numeric digits.  
Grammar digitsGrammar = CreateDigitsGrammar();  
digitsGrammar.Name = "Digits Grammar";  
digitsGrammar.Priority = 2;  
digitsGrammar.Weight = 0.6f;  
  
// Create a Grammar for recognizing fractions.  
Grammar fractionsGrammar = CreateFractionsGrammar();  
fractionsGrammar.Name = "Fractions Grammar";  
fractionsGrammar.Priority = 1;  
fractionsGrammar.Weight = 1f;  
  
// Create an in-process speech recognizer.  
SpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  
  
recognizer.SpeechRecognized +=  
  new EventHandler<SpeechRecognizedEventArgs>(  
    recognizer_SpeechRecognized);  
  
// Load the digits and fractions Grammar objects.  
recognizer.LoadGrammar(digitsGrammar);  
recognizer.LoadGrammar(fractionsGrammar);  
  
// Start recognition.  
recognizer.SetInputToDefaultAudioDevice();  
recognizer.RecognizeAsync(RecognizeMode.Multiple);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int with get, set" Usage="System.Speech.Recognition.Grammar.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert der Priorität eines <see cref="T:System.Speech.Recognition.Grammar" />-Objekts ab oder legt diesen fest.</summary>
        <value>Die <see langword="Priority" />-Eigenschaft gibt einen ganzzahligen Wert zurück, der die relative Priorität einer bestimmten <see cref="T:System.Speech.Recognition.Grammar" /> darstellt. Der Bereich reicht von -128 bis 127 (inklusive). Der Standard ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaft "`Priority`" wird verwendet, um eine Grammatik auszuwählen, wenn mehr als eine Grammatik ein identisches Erkennungs Ergebnis erzeugt. Wenn eine Spracherkennung mehr als eine sprach Erkennungs Grammatik geladen und aktiviert hat, die mit der Eingabe identisch ist, und die Stimmung das beste Ergebnis der Erkennung ist, verwendet die Erkennung die Grammatik mit der höchsten `Priority`. Wenn die Grammatiken, die das identische Erkennungs Ergebnis ergeben, auch denselben `Priority`-Wert aufweisen, ist die von der Erkennung verwendete Grammatik nicht definiert.  
  
   
  
## Examples  
 Im folgenden Beispiel werden zwei <xref:System.Speech.Recognition.Grammar>-Objekte erstellt, eine für Ziffern und eine für Bruchzahlen. Den <xref:System.Speech.Recognition.Grammar>-Objekten werden Namen und relative Gewichtungen und Prioritäten zugewiesen und von einer Prozess internen Spracherkennung geladen. Die Methoden "`CreateDigitsGrammar`", "`CreateFractionsGrammar`" und "`recognizer_SpeechRecognized`" werden hier nicht angezeigt.  
  
```csharp  
  
// Create a Grammar for recognizing numeric digits.  
Grammar digitsGrammar = CreateDigitsGrammar();  
digitsGrammar.Name = "Digits Grammar";  
digitsGrammar.Priority = 2;  
digitsGrammar.Weight = 0.6f;  
  
// Create a Grammar for recognizing fractions.  
Grammar fractionsGrammar = CreateFractionsGrammar();  
fractionsGrammar.Name = "Fractions Grammar";  
fractionsGrammar.Priority = 1;  
fractionsGrammar.Weight = 1f;  
  
// Create an in-process speech recognizer.  
SpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  
  
recognizer.SpeechRecognized +=  
  new EventHandler<SpeechRecognizedEventArgs>(  
    recognizer_SpeechRecognized);  
  
// Load the digits and fractions Grammar objects.  
recognizer.LoadGrammar(digitsGrammar);  
recognizer.LoadGrammar(fractionsGrammar);  
  
// Start recognition.  
recognizer.SetInputToDefaultAudioDevice();  
recognizer.RecognizeAsync(RecognizeMode.Multiple);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Loaded" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Enabled" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Weight" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="ResourceName">
      <MemberSignature Language="C#" Value="protected string ResourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceName" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.ResourceName" />
      <MemberSignature Language="VB.NET" Value="Protected Property ResourceName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ResourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceName : string with get, set" Usage="System.Speech.Recognition.Grammar.ResourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt diesen fest mit einer binären Ressource, welche für das Laden der aktuellen <see cref="T:System.Speech.Recognition.Grammar" /> verwendet wurde.</summary>
        <value>Die <see langword="ResourceName" />-Eigenschaft gibt den Namen der binären Ressource zurück, von der die stark typisierte Grammatik, die von <see cref="T:System.Speech.Recognition.Grammar" /> benutzt wird, geladen wurde.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleName">
      <MemberSignature Language="C#" Value="public string RuleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RuleName" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.RuleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RuleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RuleName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RuleName : string" Usage="System.Speech.Recognition.Grammar.RuleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Stammregel oder des Einstiegpunkts eines <see cref="T:System.Speech.Recognition.Grammar" />-Objekts ab.</summary>
        <value>Die <see langword="RuleName" />-Eigenschaft gibt den Bezeichner für die Stammregel der referenzierten Spracherkennungsgrammatik zurück. Die Standardeinstellung ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Um ein <xref:System.Speech.Recognition.Grammar>-Objekt zu erstellen und den Namen der Stamm Regel festzulegen, verwenden Sie einen der <xref:System.Speech.Recognition.Grammar.%23ctor%2A>-Konstruktoren, der den `ruleName`-Parameter annimmt.  
  
 Wenn die Stamm Regel eines <xref:System.Speech.Recognition.Grammar> keinen Namen hat, gibt die Eigenschaft `null` zurück.  
  
 Die Stamm Regeln von <xref:System.Speech.Recognition.Grammar>-Instanzen, die aus <xref:System.Speech.Recognition.GrammarBuilder>-Objekten erstellt wurden, haben in der Regel keinen Namen, deshalb gibt <xref:System.Speech.Recognition.Grammar.RuleName%2A> `null` zurück.  
  
   
  
## Examples  
 Im folgenden Beispiel werden Informationen zu einem <xref:System.Speech.Recognition.Grammar>-Objekt in die [Konsole](https://go.microsoft.com/fwlink/?LinkId=159613)geschrieben.  
  
```csharp  
  
private static void DumpGrammarStatus(Grammar item)  
{  
  Console.WriteLine("Grammar name is {0}:", item.Name);  
  Console.WriteLine("  The Grammar {0} loaded.",  
    item.Loaded ? "is" : "is not");  
  Console.WriteLine("  The Grammar {0} enabled.",  
    item.Enabled ? "is" : "is not");  
  if (item.RuleName != null)  
  {  
    Console.WriteLine("  The root rule is {0}.", item.RuleName);  
  }  
  else  
  {  
    Console.WriteLine("  The Grammar does not specify a root rule.");  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="SpeechRecognized">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt; SpeechRecognized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Recognition.SpeechRecognizedEventArgs&gt; SpeechRecognized" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Recognition.Grammar.SpeechRecognized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SpeechRecognized As EventHandler(Of SpeechRecognizedEventArgs) " FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Recognition::SpeechRecognizedEventArgs ^&gt; ^ SpeechRecognized;" />
      <MemberSignature Language="F#" Value="member this.SpeechRecognized : EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt; " Usage="member this.SpeechRecognized : System.EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt; " />
      <MemberSignature Language="VB.NET" Value="Public Event SpeechRecognized As EventHandler(Of SpeechRecognizedEventArgs) " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn eine Spracherkennung die Erkennung mithilfe des <see cref="T:System.Speech.Recognition.Grammar" />-Objekts ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Spracherkennung löst auch ein `SpeechRecognized`-Ereignis aus, wenn die Eingabe erkannt wird. Das <xref:System.Speech.Recognition.Grammar.SpeechRecognized>-Ereignis des <xref:System.Speech.Recognition.Grammar>-Objekts wird vor dem `SpeechRecognized`-Ereignis der Spracherkennung ausgelöst. Weitere Informationen finden Sie in den Ereignissen <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>, <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType> und <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted>.  
  
 Alle für eine bestimmte Grammatik spezifischen Aufgaben sollten immer von Handlern für das <xref:System.Speech.Recognition.Grammar.SpeechRecognized>-Ereignis des <xref:System.Speech.Recognition.Grammar>-Objekts behandelt werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Verwendung eines Ereignis Handlers für das <xref:System.Speech.Recognition.Grammar.SpeechRecognized>-Ereignis des <xref:System.Speech.Recognition.Grammar>-Objekts. Die Erkennungsergebnisse werden an die [Konsole](https://go.microsoft.com/fwlink/?LinkId=159613)ausgegeben.  
  
```csharp  
public partial class Form1 : Form  
{  
  SpeechRecognitionEngine sre;  
  
  public Form1()  
  {  
  InitializeComponent();  
  
  // Create an in-process speech recognizer.  
  sre = new SpeechRecognitionEngine();  
  
  // Configure input to the speech recognizer.  
  sre.SetInputToDefaultAudioDevice();  
  
  // Create a simple grammar and load it.  
  Grammar testGrammar = new Grammar(new GrammarBuilder("testing"));  
  sre.LoadGrammarAsync(testGrammar);  
  
  // Add a handler for the grammar's speech recognized event.  
  testGrammar.SpeechRecognized += new EventHandler<SpeechRecognizedEventArgs>(testGrammar_SpeechRecognized);  
  
  // Start asynchronous speech recognition.  
  sre.RecognizeAsync();  
  }  
  
  // Handle the grammar's SpeechRecognized event, output the recognized text.  
  void testGrammar_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
  {  
    Console.WriteLine("Recognized text: " + e.Result.Text);  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="StgInit">
      <MemberSignature Language="C#" Value="protected void StgInit (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void StgInit(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub StgInit (parameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void StgInit(cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.StgInit : obj[] -&gt; unit" Usage="grammar.StgInit parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters">Parameter, die übergeben werden sollen, um die stark typisierte Grammatik zu initialisieren. Dieser Parameter kann NULL sein.</param>
        <summary>Die <see langword="StgInit" />-Methode initialisiert eine stark typisierte Grammatik.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein stark typisiertes <xref:System.Speech.Recognition.Grammar>-Objekt (`IsStg` entspricht `true`) kann stark typisierte Ergebnisse (Objekte anstelle von Rohtext) an eine Client Anwendung zurückgeben. Eine stark typisierte Grammatik kann z. b. <xref:System.DateTime>-Objekte anstelle von unformatierten Eingabedaten zurückgeben.  
  
 Sie können stark typisierte Grammatiken implementieren, indem Sie Code an die Regeln einer Grammatik anhängen. Wenn eine Erkennungs-Engine eine beliebige Regel verarbeitet und als Eingabe die aktuellen partiellen Ergebnisse annimmt, wird der zugehörige Code ausgeführt, und die Textinformationen werden zu Rich-Type-Objekten. Dies ermöglicht es einem Client, die erweiterte Semantik Überprüfung, die Unterstützung mehrerer Kulturen und die interne Grammatik Logik einfacher zu nutzen.  
  
 Instanzen von stark typisierten <xref:System.Speech.Recognition.Grammar>-Objekten werden in der Regel aus Ressourcen in einer Assembly als <xref:System.Type> der Common Language Runtime (CLR) abgerufen. Die lokalisierten Typen, die zur Unterstützung verschiedener Sprachen verwendet werden, sind Beispiele für solche <xref:System.Speech.Recognition.Grammar>-Objekte.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>Wenn für eine stark typisierte Grammatik eine Initialisierung erforderlich ist, muss <see langword="StgInit" /> in einem Konstruktor oder einer Initialisierungs Methode aufgerufen werden.</para></block>
      </Docs>
    </Member>
    <Member MemberName="Weight">
      <MemberSignature Language="C#" Value="public float Weight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Weight" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Weight" />
      <MemberSignature Language="VB.NET" Value="Public Property Weight As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Weight { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Weight : single with get, set" Usage="System.Speech.Recognition.Grammar.Weight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert der Stärke eines <see cref="T:System.Speech.Recognition.Grammar" />-Objekts ab oder legt diesen fest.</summary>
        <value>Die <see langword="Weight" />-Eigenschaft gibt einen Gleit Komma Wert zurück, der die relative Gewichtung angibt, die eine Erkennungs-Engine-Instanz bei der Verarbeitung der Spracheingabe der Grammatik zuweisen soll. Der Bereich liegt zwischen 0,0 und 1,0. Der Standardwert ist 1,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufgrund der Komplexität der Verwendung von **Gewichtung**einer Erkennungs-Engine ist die Auswirkung auf die Leistung einer bestimmten Grammatik nicht so direkt vorhersagbar wie <xref:System.Speech.Recognition.Grammar.Priority%2A>.  
  
 Die Spracherkennung ist ein gewichtetes System. Alle möglichen Erkennungs Pfade werden basierend auf einer Kombination aus der Gewichtung der Grammatik, den Gewichtungen, die für Alternativen innerhalb der Grammatik definiert sind, und den von Sprachmodellen definierten Wahrscheinlichkeiten ausgewertet. Die Spracherkennungs-Engine verwendet die Kombination dieser Gewichtungen und Wahrscheinlichkeiten, um potenzielle alternative Erkennungen zu ordnen. Grammatiken mit höheren Gewichtungen tragen eher zur Rangfolge von Erkennungs Alternativen als Grammatiken mit geringeren Gewichtungen bei.  
  
 Die Auswirkung der <xref:System.Speech.Recognition.Grammar.Weight%2A>-Eigenschaft auf eine Spracherkennung hängt von der Implementierung der Erkennung ab. Obwohl die <xref:System.Speech.Recognition.Grammar.Weight%2A>-Eigenschaft verwendet werden kann, um die Genauigkeit der Spracherkennung für eine Anwendung zu optimieren, sollte Sie nur nach der kontrollierten Diagnose Studie einer bestimmten Erkennungs Umgebung und mit vollständigen Informationen über die Erkennungs-Engine unter verwendet werden. Konsum.  
  
   
  
## Examples  
 Im folgenden Beispiel werden zwei <xref:System.Speech.Recognition.Grammar>-Objekte erstellt, eine für Ziffern und eine für Bruchzahlen. Den <xref:System.Speech.Recognition.Grammar>-Objekten werden Namen und relative Gewichtungen und Prioritäten zugewiesen und von einer Prozess internen Spracherkennung geladen. Die Methoden "`CreateDigitsGrammar`", "`CreateFractionsGrammar`" und "`recognizer_SpeechRecognized`" werden hier nicht angezeigt.  
  
```csharp  
  
// Create a Grammar for recognizing numeric digits.  
Grammar digitsGrammar = CreateDigitsGrammar();  
digitsGrammar.Name = "Digits Grammar";  
digitsGrammar.Priority = 2;  
digitsGrammar.Weight = 0.6f;  
  
// Create a Grammar for recognizing fractions.  
Grammar fractionsGrammar = CreateFractionsGrammar();  
fractionsGrammar.Name = "Fractions Grammar";  
fractionsGrammar.Priority = 1;  
fractionsGrammar.Weight = 1f;  
  
// Create an in-process speech recognizer.  
SpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  
  
recognizer.SpeechRecognized +=  
  new EventHandler<SpeechRecognizedEventArgs>(  
    recognizer_SpeechRecognized);  
  
// Load the digits and fractions Grammar objects.  
recognizer.LoadGrammar(digitsGrammar);  
recognizer.LoadGrammar(fractionsGrammar);  
  
// Start recognition.  
recognizer.SetInputToDefaultAudioDevice();  
recognizer.RecognizeAsync(RecognizeMode.Multiple);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Loaded" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Enabled" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Priority" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
  </Members>
</Type>
