<Type Name="Grammar" FullName="System.Speech.Recognition.Grammar">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ccd45a2dbd52748120e6275bc23577e2d9079235" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51883716" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Grammar" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Grammar extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Speech.Recognition.Grammar" />
  <TypeSignature Language="VB.NET" Value="Public Class Grammar" />
  <TypeSignature Language="C++ CLI" Value="public ref class Grammar" />
  <TypeSignature Language="F#" Value="type Grammar = class" />
  <AssemblyInfo>
    <AssemblyName>System.Speech</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Diagnostics.DebuggerDisplay("Grammar: {(_uri != null ? "uri=" + _uri.ToString () + " " : "") + "rule=" + _ruleName }")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ein Laufzeitobjekt, das auf eine Spracherkennungsgrammatik verweist, die eine Anwendung verwenden kann, um die Einschränkungen für Spracherkennung zu definieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine spracherkennungsgrammatik ist eine Reihe von Regeln oder Einschränkungen, die definieren, was eine spracherkennungs-Engine als sinnvolle Eingabe erkennen kann. Weitere Informationen zum Erstellen und Verwenden von spracherkennungsgrammatiken finden Sie unter [Spracherkennung](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361633(v=office.14)), [Erstellen von Grammatiken mithilfe von XML](https://msdn.microsoft.com/library/2d799487-49c6-4cc9-b42f-f71cd3824fe1), [erstellen Grammatiken mithilfe von "grammarbuilder"](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae), und [mit SrgsGrammar Grammatiken erstellen](https://docs.microsoft.com/previous-versions/office/developer/speech-technologies/hh361680(v%3doffice.14)).  
  
 Nachdem Sie eine Grammatik erstellen, müssen Sie erstellen, ihn in eine <xref:System.Speech.Recognition.Grammar> Objekt, eine spracherkennungs-Engine geladen werden kann und dass es sich bei Ihrer Anwendung zur Laufzeit verwenden kann, um die Spracherkennung zu verwalten. Können Sie eine <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor zur Erstellung eine <xref:System.Speech.Recognition.Grammar> -Instanz aus einer <xref:System.Speech.Recognition.GrammarBuilder> oder ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> -Objekt, oder aus einer Datei oder ein <xref:System.IO.Stream> , enthält eine Beschreibung einer Grammatik in einem unterstützten Format. Zu den unterstützten Formaten gehören folgende:  
  
-   XML-Formatdateien, die der W3C entsprechen [Speech Recognition Grammar Specification (SRGS), Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   Grammatik, die in eine Binärdatei mit der .cfg Erweiterung kompiliert wurden  
  
 Grammatik-Konstruktoren, die XML-Format Grammatikdateien in ihrer Argumente akzeptieren kompilieren Sie die XML-Grammatiken auf ein binäres Format, die sie von einer spracherkennungs-Engine zum Laden und Nutzung zu optimieren. Sie können die Zeitspanne, die zum Erstellen erforderlich Reduzieren einer <xref:System.Speech.Recognition.Grammar> Objekt aus einer XML-Format-Grammatik, durch das Kompilieren der Grammatik im voraus mit einer der der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> Methoden.  
  
 Eine Anwendung die spracherkennungs-Engine, da von verwaltet eine <xref:System.Speech.Recognition.SpeechRecognizer> oder <xref:System.Speech.Recognition.SpeechRecognitionEngine> Objekt, das mehrere spracherkennungsgrammatiken geladen werden können. Die Anwendung kann unabhängig voneinander aktivieren oder deaktivieren Sie einzelne Grammatiken durch Festlegen der <xref:System.Speech.Recognition.Grammar.Enabled%2A> -Eigenschaft, und ändern Sie die Erkennung von Verhalten über <xref:System.Speech.Recognition.Grammar> Eigenschaften, z. B. die <xref:System.Speech.Recognition.Grammar.Priority%2A> und <xref:System.Speech.Recognition.Grammar.Weight%2A> Eigenschaften.  
  
 Der Grammatik der <xref:System.Speech.Recognition.Grammar.SpeechRecognized> Ereignis wird ausgelöst, bei der Eingabe entspricht, die einen Pfad durch die Grammatik.  
  
> [!NOTE]
>  Es ist eine bewährte Methode, um zu überprüfen, ob die Sicherheit aller URI oder eine DLL, die zum Erstellen einer <xref:System.Speech.Recognition.Grammar> Objekt.  
>   
>  Windows und die Sprachplattform bieten Sicherheit für Anwendungen, die Erstellung einer <xref:System.Speech.Recognition.Grammar> Instanz aus einer DLL oder eine Grammatik, die Skripterstellung unterstützt.  
>   
>  Skripts im <xref:System.Speech.Recognition.Grammar> Objekte werden immer ausgeführt, als ob von einer Webseite in heruntergeladen der `Internet Zone`. Die Common Language Runtime (CLR) isoliert DLLs geladen werden, um eine grammatikdefinition zu erhalten.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Speech.Recognition.Grammar> Objekt aus der eine spracherkennungsgrammatik in einem XML-Datei (cities.xml) definiert. Im folgenden XML-Beispiel wird der Inhalt der Datei cities.xml angezeigt.  
  
```csharp  
// Load a cities grammar from a local file and return the grammar object.   
private static Grammar CreateGrammarFromFile()  
{  
  Grammar citiesGrammar = new Grammar(@"c:\temp\cities.xml");  
  citiesGrammar.Name = "SRGS File Cities Grammar";  
  return citiesGrammar;  
}  
  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item> Seattle </item>  
      <item> Los Angeles </item>  
      <item> New York </item>  
      <item> Miami </item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
    <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
    <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Speech Recognition-Grammatik-Spezifikation</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Können Sie eine <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor zur Erstellung eine <xref:System.Speech.Recognition.Grammar> -Instanz aus einer <xref:System.Speech.Recognition.GrammarBuilder> oder <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> -Objekt, oder aus einer Datei oder ein <xref:System.IO.Stream> , enthält eine Beschreibung einer Grammatik in einem unterstützten Format. Zu den unterstützten Formaten gehören folgende:  
  
-   XML-Formatdateien, die der W3C entsprechen [Speech Recognition Grammar Specification (SRGS), Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   Grammatik, die in eine Binärdatei mit der .cfg Erweiterung kompiliert wurden  
  
 Grammatik-Konstruktoren, die XML-Format Grammatikdateien in ihrer Argumente akzeptieren kompilieren Sie die XML-Grammatiken auf ein binäres Format, die sie von einer spracherkennungs-Engine zum Laden und Nutzung zu optimieren. Sie können die Zeitspanne, die zum Erstellen erforderlich Reduzieren einer <xref:System.Speech.Recognition.Grammar> Objekt aus einer XML-Format-Grammatik, durch das Kompilieren der Grammatik im voraus mit einer der der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> Methoden.  
  
 Eine spracherkennungsgrammatik kann eine Stammregel definieren. Zum Erstellen einer <xref:System.Speech.Recognition.Grammar> -Objekt, das die Regel für die Verwendung als die Stammregel gibt an, verwenden Sie einen Konstruktor, akzeptiert die `ruleName` Parameter.  
  
 Zum Erstellen einer <xref:System.Speech.Recognition.Grammar> -Objekt, das einen Basis-URI um relative Regelverweise aufzulösen gibt an, verwenden Sie einen Konstruktor, akzeptiert die `baseUri` Parameter.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Grammar ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Grammar();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar stream" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Ein Stream, der eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse mit einer <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt die keine Parameter an den initialisierungshandler zu, und die Beschreibung darf keine definieren einen initialisierungshandler für die, der Argumente erfordert.  
  
 Erstellen Sie diesen Konstruktor kann eine <xref:System.Speech.Recognition.Grammar> Instanz aus den folgenden Formaten:  
  
-   XML-Formatdateien, die der W3C entsprechen [Speech Recognition Grammar Specification (SRGS), Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   Grammatik, die in eine Binärdatei mit der .cfg Erweiterung kompiliert wurden  
  
 Dieser Konstruktor kompiliert XML-Format Grammatikdateien auf ein binäres Format, die sie von einer spracherkennungs-Engine zum Laden und Nutzung zu optimieren. Sie können die Zeitspanne, die zum Erstellen erforderlich Reduzieren einer <xref:System.Speech.Recognition.Grammar> Objekt aus einer XML-Format-Grammatik, durch das Kompilieren der Grammatik im voraus mit einer der der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> Methoden.  
  
 Eine SRGS-Grammatik kann eine Stammregel definieren. Zum Erstellen einer <xref:System.Speech.Recognition.Grammar> Objekt aus einem Stream und geben Sie eine Stammregel, verwenden Sie die <xref:System.Speech.Recognition.Grammar.%23ctor%2A> oder <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor.  
  
 Zum Erstellen einer <xref:System.Speech.Recognition.Grammar> -Objekt aus einem Stream und geben Sie einen Basis-URI zu verwenden, um relative Regelverweise aufzulösen der <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine spracherkennungsgrammatik aus einer lokalen SRGS-Datei (cities.xml) mit einem Dateistream. C#-Beispiel wird der Inhalt der Datei cities.xml angezeigt.  
  
```csharp  
  
// Load a cities grammar from an I/O stream and    
// return the new grammar.   
private static Grammar CreateGrammarFromStream()  
{  
  string fileName = @"c:\temp\cities.xml";  
  Grammar citiesGrammar =  
    new Grammar(new FileStream(fileName, FileMode.Open));  
  citiesGrammar.Name = "Stream Cities Grammar";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="stream" /> beschreibt eine Grammatik, die keine Stammregel enthält.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Der Stream enthält keine gültige Beschreibung einer Grammatik oder beschreibt eine Grammatik, die einen Regelverweis enthält, der nicht aufgelöst werden kann.</exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Speech Recognition-Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.GrammarBuilder builder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.GrammarBuilder builder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.GrammarBuilder)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (builder As GrammarBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::GrammarBuilder ^ builder);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.GrammarBuilder -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar builder" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="builder" Type="System.Speech.Recognition.GrammarBuilder" />
      </Parameters>
      <Docs>
        <param name="builder">Eine Instanz von <see cref="T:System.Speech.Recognition.GrammarBuilder" />, die die Einschränkungen für die Spracherkennungsgrammatik enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse mit einem <see cref="T:System.Speech.Recognition.GrammarBuilder" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Weitere Informationen zur Verwendung der <xref:System.Speech.Recognition.GrammarBuilder> Klasse zum Definieren einer Grammatik finden Sie unter [erstellen Grammatiken mithilfe von "grammarbuilder"](https://msdn.microsoft.com/library/7e2cc577-cb05-4318-9da3-7c8675d3d9ae).  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine Grammatik mit Speech Recognition <xref:System.Speech.Recognition.Choices> und <xref:System.Speech.Recognition.GrammarBuilder> Objekte. Die <xref:System.Speech.Recognition.Grammar.%23ctor%2A> -Konstruktor erstellt ein <xref:System.Speech.Recognition.Grammar> -Objekt aus der <xref:System.Speech.Recognition.GrammarBuilder> Objekt.  
  
```csharp  
  
// Create a grammar using a GrammarBuilder and return the new grammar.   
private static Grammar CreateGrammarBuilderGrammar()  
{  
  GrammarBuilder builder = new GrammarBuilder();  
  
  Choices cityChoice = new Choices (new string[]   
  {"Seattle", "New York", "Miami", "Los Angeles"});  
  
  builder.Append("I would like to fly from");  
  builder.Append(cityChoice);  
  builder.Append("to");  
  builder.Append(cityChoice);  
  
  Grammar citiesGrammar = new Grammar(builder);  
  citiesGrammar.Name = "GrammarBuilder Cities Grammar";  
  
  return citiesGrammar;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.GrammarBuilder" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar srgsDocument" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">Die Einschränkungen für die Spracherkennungsgrammatik.</param>
        <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Speech.Recognition.Grammar" />-Klasse aus einem <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />-Objekt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor ist nicht Parameter an den initialisierungshandler zu übergeben und die <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> sollten keinen initialisierungshandler für die, die Argumente erfordert.  
  
 Ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> Stammregel haben. Zum Erstellen einer <xref:System.Speech.Recognition.Grammar> -Objekt, das gibt eine Stammregel, verwenden die <xref:System.Speech.Recognition.Grammar.%23ctor%2A> oder <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor.  
  
 Zum Erstellen von einer Spracherkennung <xref:System.Speech.Recognition.Grammar> aus ein <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> und geben Sie einen Basis-URI zu verwenden, um relative Regelverweise aufzulösen verwenden die <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine spracherkennungsgrammatik in einem <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> -Instanz, die dann, zum Erstellen verwendet wird einer <xref:System.Speech.Recognition.Grammar> Objekt.  
  
```csharp  
private static Grammar CreateSrgsDocumentGrammar()  
{  
  // Create the SrgsDocument.  
  SrgsDocument document = new SrgsDocument();  
  
  // Create the Cities rule and add it to the document.  
  SrgsRule citiesRule = new SrgsRule("Cities");  
  
  SrgsOneOf cityChoice = new SrgsOneOf();  
  cityChoice.Add(new SrgsItem("Seattle"));  
  cityChoice.Add(new SrgsItem("Los Angeles"));  
  cityChoice.Add(new SrgsItem("New York"));  
  cityChoice.Add(new SrgsItem("Miami"));  
  
  citiesRule.Add(cityChoice);  
  document.Rules.Add(citiesRule);  
  
  // Create the Main rule and add it to the document.  
  SrgsRule mainRule = new SrgsRule("Main");  
  mainRule.Scope = SrgsRuleScope.Public;  
  
  SrgsItem item = new SrgsItem("I would like to fly from");  
  item.Add(new SrgsRuleRef(citiesRule));  
  item.Add(new SrgsText("to"));  
  item.Add(new SrgsRuleRef(citiesRule));  
  
  mainRule.Add(item);  
  document.Rules.Add(mainRule);  
  
  // Set the root rule.  
  document.Root = mainRule;  
  
  // Create the Grammar object.  
  Grammar citiesGrammar = new Grammar(document);  
  citiesGrammar.Name = "SrgsDocument Cities Grammar";  
  
  return citiesGrammar;  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="srgsDocument" /> enthält keine Stammregel.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="srgsDocument" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="srgsDocument" /> enthält einen Regelverweis, der nicht aufgelöst werden kann.</exception>
        <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Speech Recognition-Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::String ^ path);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar path" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad der Datei, die eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse aus einer Datei.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt die keine Parameter an den initialisierungshandler zu, und die Beschreibung darf keine definieren einen initialisierungshandler für die, der Argumente erfordert.  
  
 Erstellen Sie diesen Konstruktor kann eine <xref:System.Speech.Recognition.Grammar> Instanz aus den folgenden Formaten:  
  
-   XML-Formatdateien, die der W3C entsprechen [Speech Recognition Grammar Specification (SRGS), Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   Grammatik, die in eine Binärdatei mit der .cfg Erweiterung kompiliert wurden  
  
 Dieser Konstruktor kompiliert XML-Format Grammatikdateien auf ein binäres Format, die sie von einer spracherkennungs-Engine zum Laden und Nutzung zu optimieren. Sie können die Zeitspanne, die zum Erstellen erforderlich Reduzieren einer <xref:System.Speech.Recognition.Grammar> Objekt aus einer XML-Format-Grammatik, durch das Kompilieren der Grammatik im voraus mit einer der der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> Methoden.  
  
 Eine SRGS-Grammatik kann eine Stammregel definieren. Zum Erstellen einer <xref:System.Speech.Recognition.Grammar> -Objekt aus einer Zeichenfolge und eine Stammregel angeben, verwenden Sie die <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor.  
  
 Zum Erstellen einer <xref:System.Speech.Recognition.Grammar> -Objekt, das eine Basis-URI zu verwenden, um relative Regelverweise aufzulösen gibt an, öffnen Sie die Datei in einer Datei-Stream und Verwenden der <xref:System.Speech.Recognition.Grammar.%23ctor%2A?displayProperty=nameWithType> Konstruktor.  
  
   
  
## Examples  
 Das folgende Beispiel lädt eine spracherkennungsgrammatik aus einer lokalen SRGS-Datei zum Erstellen einer <xref:System.Speech.Recognition.Grammar> Objekt. In der XML-Beispiel, das folgende c#-Beispiel wird der Inhalt der Datei cities.xml angezeigt.  
  
```csharp  
// Load a cities grammar from a local file and  
// return the new grammar.   
private static Grammar CreateGrammarFromFile()  
{  
  Grammar citiesGrammar = new Grammar(@"c:\temp\cities.xml");  
  citiesGrammar.Name = "SRGS File Cities Grammar";  
  return citiesGrammar;  
}  
  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> enthält die leere Zeichenfolge (""), oder die Datei beschreibt eine Grammatik, die keine Stammregel enthält.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Die Datei enthält keine gültige Beschreibung oder beschreibt eine Grammatik, die einen Regelverweis enthält, der nicht aufgelöst werden kann.</exception>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Speech Recognition-Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="stream">Ein Stream, der eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse aus <see cref="T:System.IO.Stream" /> und gibt eine Stammregel an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt die keine Parameter an den initialisierungshandler zu, und die Beschreibung darf keine definieren einen initialisierungshandler für die, der Argumente erfordert.  
  
 Erstellen Sie diesen Konstruktor kann eine <xref:System.Speech.Recognition.Grammar> Instanz aus den folgenden Formaten:  
  
-   XML-Formatdateien, die der W3C entsprechen [Speech Recognition Grammar Specification (SRGS), Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   Grammatik, die in eine Binärdatei mit der .cfg Erweiterung kompiliert wurden  
  
 Dieser Konstruktor kompiliert XML-Format Grammatikdateien auf ein binäres Format, die sie von einer spracherkennungs-Engine zum Laden und Nutzung zu optimieren. Sie können die Zeitspanne, die zum Erstellen erforderlich Reduzieren einer <xref:System.Speech.Recognition.Grammar> Objekt aus einer XML-Format-Grammatik, durch das Kompilieren der Grammatik im voraus mit einer der der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> Methoden.  
  
 Zum Erstellen einer <xref:System.Speech.Recognition.Grammar> aus einem Stream und geben Sie einen Basis-URI zu verwenden, um relative Regelverweise aufzulösen verwenden die <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor.  
  
   
  
## Examples  
 Im folgenden Beispiel lädt eine lokale SRGS-Datei (cities.xml) aus einem Dateistream und gibt eine Regel für die Verwendung als Stamm der Grammatik. In der XML-Beispiel, das folgende c#-Beispiel wird der Inhalt der Datei cities.xml angezeigt.  
  
```csharp  
  
// Load a cities grammar from an I/O stream, use a specific  
// rule as the root of the grammar, and return the new grammar.   
private static Grammar CreateGrammarFromStream2()  
{  
  FileInfo file = new FileInfo(@"c:\temp\cities.xml");  
  Grammar citiesGrammar = new Grammar(file.OpenRead(), "Main");  
  citiesGrammar.Name = "Stream Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> kann nicht aufgelöst werden oder ist nicht öffentlich, oder <paramref name="ruleName" /> ist <see langword="null" /> und die Grammatikbeschreibung definiert keine Stammregel.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Der Stream enthält keine gültige Beschreibung oder beschreibt eine Grammatik, die einen Regelverweis enthält, der nicht aufgelöst werden kann.</exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Speech Recognition-Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">Die Einschränkungen für die Spracherkennungsgrammatik.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> zu verwenden.</param>
        <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Speech.Recognition.Grammar" />-Klasse von einem <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />-Objekt und gibt eine Stammregel an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor ist nicht Parameter an den initialisierungshandler zu übergeben und die <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> sollten keinen initialisierungshandler für die, die Argumente erfordert.  
  
 Zum Erstellen einer <xref:System.Speech.Recognition.Grammar> -Objekt aus einer <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> und geben Sie einen Basis-URI zu verwenden, um relative Regelverweise aufzulösen der <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine spracherkennungsgrammatik in einem <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> -Instanz und gibt eine Regel, die als die Stammregel der Grammatik verwendet. Das Beispiel erstellt eine <xref:System.Speech.Recognition.Grammar> -Objekt aus der <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> -Instanz und lädt sie in der spracherkennungs-Engine.  
  
```csharp  
using System;  
using System.Speech.Recognition;  
using System.Speech.Recognition.SrgsGrammar;  
  
namespace SampleRecognition  
{  
  class Program  
  {  
    static void Main(string[] args)  
  
    // Initialize an in-process speech recognition engine.  
    {  
      using (SpeechRecognitionEngine recognizer =  
         new SpeechRecognitionEngine())  
      {  
  
        // Create the SrgsDocument.  
        SrgsDocument document = new SrgsDocument();  
  
        // Create the Cities rule and add it to the document.  
        SrgsRule citiesRule = new SrgsRule("Cities");  
        citiesRule.Scope = SrgsRuleScope.Public;  
  
        SrgsOneOf cityChoice = new SrgsOneOf();  
        cityChoice.Add(new SrgsItem("Seattle"));  
        cityChoice.Add(new SrgsItem("Los Angeles"));  
        cityChoice.Add(new SrgsItem("New York"));  
        cityChoice.Add(new SrgsItem("Miami"));  
  
        citiesRule.Add(cityChoice);  
        document.Rules.Add(citiesRule);  
  
        // Create the Main rule and add it to the document.  
        SrgsRule mainRule = new SrgsRule("Main");  
        mainRule.Scope = SrgsRuleScope.Public;  
  
        mainRule.Add(new SrgsItem("I would like to fly from"));  
        mainRule.Add(new SrgsRuleRef(citiesRule));  
        mainRule.Add(new SrgsItem("to"));  
        mainRule.Add(new SrgsRuleRef(citiesRule));  
  
        document.Rules.Add(mainRule);  
  
        // Create the Grammar object and specify which rule to use as the root.  
        Grammar citiesGrammar = new Grammar(document,"Main");  
  
        // Load the grammar object to the recognizer.  
        recognizer.LoadGrammarAsync(citiesGrammar);  
  
        // Attach a handler for the SpeechRecognized event.  
        recognizer.SpeechRecognized +=  
          new EventHandler<SpeechRecognizedEventArgs>(recognizer_SpeechRecognized);  
  
        // Set the input to the recognizer.  
        recognizer.SetInputToDefaultAudioDevice();  
  
        // Start recognition.  
        recognizer.RecognizeAsync();  
        Console.WriteLine("Starting aynchronous recognition...");  
  
        // Keep the console window open.  
        Console.ReadLine();  
      }  
    }  
  
    // Handle the SpeechRecognized event.  
    static void recognizer_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
    {  
      Console.WriteLine("  Speech recognized: " + e.Result.Text);  
    }  
  }  
}  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> kann nicht aufgelöst werden oder ist nicht öffentlich oder <paramref name="ruleName" /> ist <see langword="null" /> und <paramref name="srgsDocument" /> enthält keine Stammregel.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="srgsDocument" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="srgsDocument" /> enthält einen Regelverweis, der nicht aufgelöst werden kann.</exception>
        <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Speech Recognition-Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (string path, string ruleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string ruleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ruleName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::String ^ path, System::String ^ ruleName);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : string * string -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (path, ruleName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="ruleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad der Datei, die eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse aus einer Datei und gibt eine Stammregel an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt die keine Parameter an den initialisierungshandler zu, und die Beschreibung darf keine definieren einen initialisierungshandler für die, der Argumente erfordert.  
  
 Erstellen Sie diesen Konstruktor kann eine <xref:System.Speech.Recognition.Grammar> Instanz aus den folgenden Formaten:  
  
-   XML-Formatdateien, die der W3C entsprechen [Speech Recognition Grammar Specification (SRGS), Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   Grammatik, die in eine Binärdatei mit der .cfg Erweiterung kompiliert wurden  
  
 Dieser Konstruktor kompiliert XML-Format Grammatikdateien auf ein binäres Format, die sie von einer spracherkennungs-Engine zum Laden und Nutzung zu optimieren. Sie können die Zeitspanne, die zum Erstellen erforderlich Reduzieren einer <xref:System.Speech.Recognition.Grammar> Objekt aus einer XML-Format-Grammatik, durch das Kompilieren der Grammatik im voraus mit einer der der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> Methoden.  
  
 Zum Erstellen einer <xref:System.Speech.Recognition.Grammar> , angibt, dass einen Basis-URI zu verwenden, um relative Regelverweise zu beheben, öffnen Sie einen Dateistream für die Datei aus, und verwenden Sie die <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktor.  
  
   
  
## Examples  
 Im folgenden Beispiel lädt eine lokale SRGS-Datei (cities.xml) aus einer Datei und gibt eine Regel für die Verwendung als Stamm der Grammatik. In der XML-Beispiel, das folgende c#-Beispiel wird der Inhalt der Datei cities.xml angezeigt.  
  
```csharp  
  
// Load a cities grammar from a local file, use a specific  
// rule as the root of the grammar, and return the new grammar.  
private static Grammar CreateGrammarFromFile2()  
{  
  Grammar citiesGrammar = new Grammar(@"c:\temp\cities.xml", "Main");  
  citiesGrammar.Name = "SRGS File Cities Grammar 2";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> kann nicht aufgelöst werden oder ist nicht öffentlich, ist <paramref name="path" /> die leere Zeichenfolge ("") oder <paramref name="ruleName" /> ist <see langword="null" />, und die Grammatikbeschreibung definiert keine Stammregel.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Die Datei enthält keine gültige Beschreibung oder beschreibt eine Grammatik, die einen Regelverweis enthält, der nicht aufgelöst werden kann.</exception>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Speech Recognition-Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="stream">Ein <see cref="T:System.IO.Stream" />, der an ein Eingabe/Ausgabe Objekt an geschlossen ist (einschließlich Dateien, VisualStudio-Ressourcen und DLLs), das eine Grammatikspezifikation enthält.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <param name="parameters">Parameter, die an den Initialisierungshandler zu übergeben sind, angegeben durch die <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />-Eigenschaft für den Einstiegspunkt oder die Stammregel der zu erstellenden <see cref="T:System.Speech.Recognition.Grammar" />. Dieser Parameter kann NULL sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse aus <see cref="T:System.IO.Stream" /> und gibt eine Stammregel an.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parameter für einen initialisierungshandler für die können auch angegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Die <paramref name="stream" /> ist mit einer Grammatik verbunden, die 
–   Enthält keine in <paramref name="ruleName" /> angegebene Regel  
  
–   Erfordert die Initialisierungsparameter, die sich von denen unterscheiden, die in <paramref name="parameters" /> angegeben werden  
  
–   Enthält einen relativen Regelverweis, der nicht von der <see cref="T:System.Uri" /> Standardbasisregel für Grammatiken aufgelöst werden kann</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName, class System.Uri baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName, Uri ^ baseUri);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string * Uri -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName, baseUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="stream">Ein Stream, der eine Spracherkennungsgrammatik in einem unterstützten Format beschreibt.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <param name="baseUri">Der Basis-URI, der zur Auflösung von jedem relativen Regelverweis in der Grammatikbeschreibung zu verwenden ist, oder <see langword="null" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse von einem Stream, gibt eine Stammregel an und definiert einen grundlegenden Uniform Resource Identifier (URI), um relative Regelverweise aufzulösen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor übergibt die keine Parameter an den initialisierungshandler zu, und die Beschreibung darf keine definieren einen initialisierungshandler für die, der Argumente erfordert.  
  
 Erstellen Sie diesen Konstruktor kann eine <xref:System.Speech.Recognition.Grammar> Instanz aus den folgenden Formaten:  
  
-   XML-Formatdateien, die der W3C entsprechen [Speech Recognition Grammar Specification (SRGS), Version 1.0](https://go.microsoft.com/fwlink/?LinkId=201761)  
  
-   Grammatik, die in eine Binärdatei mit der .cfg Erweiterung kompiliert wurden  
  
 Dieser Konstruktor kompiliert XML-Format Grammatikdateien auf ein binäres Format, die sie von einer spracherkennungs-Engine zum Laden und Nutzung zu optimieren. Sie können die Zeitspanne, die zum Erstellen erforderlich Reduzieren einer <xref:System.Speech.Recognition.Grammar> Objekt aus einer XML-Format-Grammatik, durch das Kompilieren der Grammatik im voraus mit einer der der <xref:System.Speech.Recognition.SrgsGrammar.SrgsGrammarCompiler.Compile%2A> Methoden.  
  
 Dieser Konstruktor führt keine Validierung `baseUri`. Allerdings die `LoadGrammar` Methode eine <xref:System.Speech.Recognition.SpeechRecognitionEngine> oder <xref:System.Speech.Recognition.SpeechRecognizer> Objekt löst eine Ausnahme aus, falls alle Referenzen Regel in der grammatikbeschreibung aufgelöst werden kann. Wenn `baseUri` nicht `null`, `LoadGrammar` Methode verwendet den URI, um alle Regelverweise aufzulösen, die sie andernfalls nicht auflösen kann. Wenn `baseUri` repräsentiert eine Datei, und klicken Sie dann die `LoadGrammar` verwendet die festgelegte Datei und das Verzeichnis der Datei, wenn versucht wird, die relative Regelverweise aufzulösen.  
  
   
  
## Examples  
 Das folgende Beispiel lädt eine lokale SRGS-Datei (shuttle.xml) aus einem Dateistream. Die Datei enthält einen relativen Regelverweis, einer Regel in der Datei cities.xml und gibt an, eine Basis-URI zu verwenden, um den Verweis auf eine Regel zu beheben. In den XML-Beispielen, die Folgen der c#-Beispiel wird der Inhalt der Dateien shuttle.xml und cities.xml angezeigt.  
  
```csharp  
  
private static Grammar CreateGrammarFromStream3()  
{  
  FileInfo file = new FileInfo(@".\shuttle.xml");  
  Uri baseUri = new Uri(@"file://c:\temp\");  
  Grammar citiesGrammar = new Grammar(file.OpenRead(), null, baseUri);  
  citiesGrammar.Name = "Stream Cities Grammar 3";  
  return citiesGrammar;  
}  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- shuttle.xml:   
    Defines an SRGS grammar for asking about a shuttle service. This grammar  
    references a Cities rule that is defined in the cities.xml grammar. -->  
  
  <rule id="Main">  
    <item>  
      Can I get a shuttle in  
      <ruleref uri="cities.xml#Cities"/>  
    </item>  
  </rule>  
</grammar>  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> kann nicht aufgelöst werden oder ist nicht öffentlich, oder <paramref name="ruleName" /> ist <see langword="null" /> und die Grammatikbeschreibung definiert keine Stammregel.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="stream" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">Der Stream enthält keine gültige Beschreibung oder beschreibt eine Grammatik, die einen Regelverweis enthält, der nicht aufgelöst werden kann.</exception>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Speech Recognition-Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">Eine Instanz von <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />, die die Einschränkungen für die Spracherkennungsgrammatik enthält.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <param name="parameters">Parameter, die an den Initialisierungshandler zu übergeben sind, angegeben durch die <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />-Eigenschaft für den Einstiegspunkt oder die Stammregel der zu erstellenden <see cref="T:System.Speech.Recognition.Grammar" />. Dieser Parameter kann NULL sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse von einer Instanz von <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> und gibt den Namen einer Regel an, die der Einstiegspunkt der Grammatik sein soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parameter für einen initialisierungshandler für die können auch angegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">–   Einer der Parameter enthält einen ungültigen Wert.  
  
–   Das <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />, das vom <paramref name="srgsDocument" /> angegeben wird, enthält nicht die Regel, die von <paramref name="ruleName" /> angegeben wird.  
  
–   Der Inhalt der Arrayparameter stimmt nicht mit den Argumenten von einem der Initialisierungshandler der Regel überein.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, class System.Uri baseUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName, Uri ^ baseUri);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string * Uri -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName, baseUri)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">Die Einschränkungen für die Spracherkennungsgrammatik.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> zu verwenden.</param>
        <param name="baseUri">Der Basis-URI, der zur Auflösung von jedem relativen Regelverweis in der <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> oder der <see langword="null" /> zu verwenden ist.</param>
        <summary>Initialisiert eine neue Instanz einer <see cref="T:System.Speech.Recognition.Grammar" />-Klasse von einem <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />-Objekt, gibt eine Stammregel an und definiert einen grundlegenden Uniform Resource Identifier (URI), um relative Regelverweise aufzulösen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Konstruktor ist nicht Parameter an den initialisierungshandler zu übergeben und die <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> sollten keinen initialisierungshandler für die, die Argumente erfordert.  
  
 Dieser Konstruktor führt keine Validierung `baseUri`. Allerdings die `LoadGrammar` Methode eine <xref:System.Speech.Recognition.SpeechRecognitionEngine> oder <xref:System.Speech.Recognition.SpeechRecognizer> Objekt löst eine Ausnahme aus, falls alle Referenzen Regel in der grammatikbeschreibung aufgelöst werden kann. Wenn `baseUri` nicht `null`, `LoadGrammar` Methode verwendet den URI, um alle Regelverweise aufzulösen, die sie andernfalls nicht auflösen kann. Wenn `baseUri` repräsentiert eine Datei, und klicken Sie dann die `LoadGrammar` Methode verwendet die angegebene Datei und das Verzeichnis der Datei, wenn versucht wird, um relative Regelverweise aufzulösen.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine spracherkennungsgrammatik in einem <xref:System.Speech.Recognition.SrgsGrammar.SrgsDocument> enthält einen relativen Regelverweis in der Datei cities.xml und gibt einen URI zu verwenden, um den Verweis auf eine Regel zu beheben. In der XML-Beispiel, das folgende c#-Beispiel wird der Inhalt der Datei cities.xml angezeigt.  
  
```csharp  
  
private static Grammar CreateSrgsDocumentGrammar3()  
{  
  // Create the SrgsDocument.  
  SrgsDocument document = new SrgsDocument();  
  
  // Create the Main rule and add it to the document.  
  SrgsRule mainRule = new SrgsRule("Main");  
  mainRule.Scope = SrgsRuleScope.Public;  
  
  SrgsItem item = new SrgsItem("Can I get a shuttle in");  
  
  // Create a relative URI for the cities rule.  
  Uri ruleUri = new Uri("cities.xml#Cities", UriKind.Relative);  
  
  item.Add(new SrgsRuleRef(ruleUri));  
  
  mainRule.Add(item);  
  document.Rules.Add(mainRule);  
  
  // Set the root rule.  
  document.Root = mainRule;  
  
  // Create the grammar.  
  Uri baseUri = new Uri(@"file://c:\temp\");  
  Grammar citiesGrammar = new Grammar(document, null, baseUri);  
  citiesGrammar.Name = "SrgsDocument Cities Grammar 3";  
  
  return citiesGrammar;  
}  
  
```  
  
```xml  
  
<?xml version="1.0" encoding="UTF-8" ?>  
<grammar version="1.0" xml:lang="en-US"  
         xmlns="http://www.w3.org/2001/06/grammar"  
         tag-format="semantics/1.0" root="Main">  
  
  <!-- cities.xml:   
    Defines an SRGS grammar for requesting a flight. This grammar includes  
    a Cities rule that lists the cities that can be used for departures  
    and destinations. -->  
  
  <rule id="Main">  
    <item>  
      I would like to fly from <ruleref uri="#Cities"/>  
      to <ruleref uri="#Cities"/>  
    </item>  
  </rule>  
  
  <rule id="Cities" scope="public">  
    <one-of>  
      <item>Seattle</item>  
      <item>Los Angeles</item>  
      <item>New York</item>  
      <item>Miami</item>  
    </one-of>  
  </rule>  
</grammar>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="ruleName" /> kann nicht aufgelöst werden oder ist nicht öffentlich oder <paramref name="ruleName" /> ist <see langword="null" /> und <paramref name="srgsDocument" /> enthält keine Stammregel.</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="srgsDocument" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.FormatException">
          <paramref name="srgsDocument" /> enthält einen Regelverweis, der nicht aufgelöst werden kann.</exception>
        <altmember cref="N:System.Speech.Recognition.SrgsGrammar" />
        <altmember cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Speech Recognition-Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (string path, string ruleName, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, string ruleName, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.String,System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ruleName As String, parameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::String ^ path, System::String ^ ruleName, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : string * string * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (path, ruleName, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="path">Der Pfad zu einer Datei (einschließlich DLL), die eine Grammatikspezifikation enthält.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <param name="parameters">Parameter, die an den Initialisierungshandler zu übergeben sind, angegeben durch die <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />-Eigenschaft für den Einstiegspunkt oder die Stammregel der zu erstellenden <see cref="T:System.Speech.Recognition.Grammar" />. Dieser Parameter kann NULL sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse aus einer Datei, die eine Grammatikdefinition enthält, und gibt den Namen einer Regel an, die der Einstiegspunkt der Grammatik sein soll.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parameter für einen initialisierungshandler für die können auch angegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">–   Einer der Parameter enthält einen ungültigen Wert.  
  
–   Die Datei, die von <paramref name="path" /> angegeben wird, enthält keine gültige Grammatik oder Regel, die in <paramref name="ruleName" /> angegeben wurde.  
  
–   Der Inhalt der Arrayparameter stimmt nicht mit den Argumenten von einem der Initialisierungshandler der Regel überein.  
  
–   Die Grammatik enthält einen relativen Regelverweis, der nicht von der standardmäßigen <see cref="T:System.Uri" />-Basisregel für Grammatiken aufgelöst werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.IO.Stream stream, string ruleName, Uri baseUri, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream, string ruleName, class System.Uri baseUri, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream,System.String,System.Uri,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::IO::Stream ^ stream, System::String ^ ruleName, Uri ^ baseUri, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.IO.Stream * string * Uri * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (stream, ruleName, baseUri, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="stream">Ein <see cref="T:System.IO.Stream" />, der an ein Eingabe/Ausgabe Objekt an geschlossen ist (einschließlich Dateien, VisualStudio-Ressourcen und DLLs), das eine Grammatikspezifikation enthält.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <param name="baseUri">Der Basis-URI, der zur Auflösung von jedem relativen Regelverweis in der Grammatikbeschreibung zu verwenden ist, oder <see langword="null" />.</param>
        <param name="parameters">Parameter, die an den Initialisierungshandler zu übergeben sind, angegeben durch die <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />-Eigenschaft für den Einstiegspunkt oder die Stammregel der zu erstellenden <see cref="T:System.Speech.Recognition.Grammar" />. Dieser Parameter kann NULL sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse eines <see cref="T:System.IO.Stream" /> und gibt eine Stammregel und einen Basis-URI an, um relative Verweise aufzulösen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parameter für einen initialisierungshandler für die können auch angegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">–   Einer der Parameter enthält einen ungültigen Wert.  
  
–   Der <paramref name="stream" /> wird an eine Grammatik gebunden, die nicht die Regel enthält, die durch <paramref name="ruleName" /> angegeben wird.  
  
–   Der Inhalt der Arrayparameter stimmt nicht mit den Argumenten von einem der Initialisierungshandler der Regel überein.  
  
–   Die Grammatik enthält einen relativen Regelverweis, der nicht von der standardmäßigen <see cref="T:System.Uri" />-Basisregel für Grammatiken oder vom URI, der von <paramref name="baseUri" /> bereitgestellt wird, aufgelöst werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Grammar (System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, Uri baseUri, object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Speech.Recognition.SrgsGrammar.SrgsDocument srgsDocument, string ruleName, class System.Uri baseUri, object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.#ctor(System.Speech.Recognition.SrgsGrammar.SrgsDocument,System.String,System.Uri,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Grammar(System::Speech::Recognition::SrgsGrammar::SrgsDocument ^ srgsDocument, System::String ^ ruleName, Uri ^ baseUri, cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="new System.Speech.Recognition.Grammar : System.Speech.Recognition.SrgsGrammar.SrgsDocument * string * Uri * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="new System.Speech.Recognition.Grammar (srgsDocument, ruleName, baseUri, parameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="srgsDocument" Type="System.Speech.Recognition.SrgsGrammar.SrgsDocument" />
        <Parameter Name="ruleName" Type="System.String" />
        <Parameter Name="baseUri" Type="System.Uri" />
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="srgsDocument">Eine Instanz von <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />, die die Einschränkungen für die Spracherkennungsgrammatik enthält.</param>
        <param name="ruleName">Der Bezeichner der Regel, die als Einstiegspunkt der Spracherkennungsgrammatik zu verwenden ist, oder <see langword="null" />, um die standardmäßige Stammregel der Grammatikbeschreibung zu verwenden.</param>
        <param name="baseUri">Der Basis-URI, der zur Auflösung von jedem relativen Regelverweis in der Grammatikbeschreibung zu verwenden ist, oder <see langword="null" />.</param>
        <param name="parameters">Parameter, die an den Initialisierungshandler zu übergeben sind, angegeben durch die  <see cref="P:System.Speech.Recognition.SrgsGrammar.SrgsRule.OnInit" />-Eigenschaft für den Einstiegspunkt oder die Stammregel der zu erstellenden <see cref="T:System.Speech.Recognition.Grammar" />. Dieser Parameter kann NULL sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Speech.Recognition.Grammar" />-Klasse von einer Instanz von <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" /> und gibt den Namen einer Regel an, die der Einstiegspunkt der Grammatik sein soll, und einen Basis-URI, um relative Verweise aufzulösen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Parameter für einen initialisierungshandler für die können auch angegeben werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">–   Einer der Parameter enthält einen ungültigen Wert.  
  
–   Das <see cref="T:System.Speech.Recognition.SrgsGrammar.SrgsDocument" />, das vom <paramref name="srgsDocument" /> angegeben wird, enthält nicht die Regel, die in <paramref name="ruleName" /> angegeben wird.  
  
–   Der Inhalt der Arrayparameter stimmt nicht mit den Argumenten von einem der Initialisierungshandler der Regel überein.  
  
–   Die Grammatik enthält einen relativen Regelverweis, der nicht von der standardmäßigen <see cref="T:System.Uri" />-Basisregel für Grammatiken oder vom URI, der von <paramref name="baseUri" /> bereitgestellt wird, aufgelöst werden kann.</exception>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Speech.Recognition.Grammar.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt diesen fest, welcher steuert, ob eine <see cref="T:System.Speech.Recognition.Grammar" /> von einem Spracherkennungsmodul verwendet werden kann, um eine Erkennung durchzuführen.</summary>
        <value>Die <see langword="Enabled" /> -Eigenschaft gibt <see langword="true" /> , wenn eine Spracherkennung die Erkennung unter Verwendung der spracherkennungsgrammatik durchführen, kann die Eigenschaft andernfalls <see langword="false" />. Der Standardwert ist <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Eine Instanz von <xref:System.Speech.Recognition.Grammar> kann aktiviert oder deaktiviert werden, unabhängig von einer spracherkennungs-Engine geladen werden.  
  
   
  
## Examples  
 Im folgende Beispiel schreibt Informationen über eine <xref:System.Speech.Recognition.Grammar> -Objekt an die [Konsole](https://go.microsoft.com/fwlink/?LinkId=159613).  
  
```csharp  
  
private static void DumpGrammarStatus(Grammar item)  
{  
  Console.WriteLine("Grammar name is {0}:", item.Name);  
  Console.WriteLine("  The Grammar {0} loaded.",  
    item.Loaded ? "is" : "is not");  
  Console.WriteLine("  The Grammar {0} enabled.",  
    item.Enabled ? "is" : "is not");  
  if (item.RuleName != null)  
  {  
    Console.WriteLine("  The root rule is {0}.", item.RuleName);  
  }  
  else  
  {  
    Console.WriteLine("  The Grammar does not specify a root rule.");  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Loaded" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=15143">Speech Recognition-Grammatik-Spezifikation</related>
      </Docs>
    </Member>
    <Member MemberName="IsStg">
      <MemberSignature Language="C#" Value="protected internal virtual bool IsStg { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsStg" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.IsStg" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property IsStg As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool IsStg { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsStg : bool" Usage="System.Speech.Recognition.Grammar.IsStg" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob eine Grammatik stark typisiert ist.</summary>
        <value>Die <see langword="IsStg" />-Eigenschaft gibt <see langword="true" /> zurück, wenn die Grammatik stark typisiert ist; andernfalls gibt die Eigenschaft <see langword="false" /> zurück.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein stark typisiertes <xref:System.Speech.Recognition.Grammar> Objekt (`IsStg` gleich `true`) können stark typisierte Ergebnisse (Objekte, anstelle von unformatierten Text) an eine Clientanwendung zurück. Beispielsweise könnte eine stark typisierte Grammatik zurückgeben <xref:System.DateTime> anstatt zu rohdateneingabe erkannten Objekte.  
  
 Sie können Code anfügen, die den Regeln für eine Grammatik stark typisierte Grammatik implementieren. Während eine erkennungs-Engine eine bestimmte Regel verarbeitet werden, erstellen, die als Eingabe die aktuelle Teilergebnisse, wird der zugehörige Code ausgeführt, und die Textinformationen wird umfangreiche Type-Objekten. Dadurch kann einen Client, leichter verwenden der erweiterten semantische Überprüfung und Unterstützung für mehrere Kulturen und interne Grammatik Logik.  
  
 Instanzen von stark typisierten <xref:System.Speech.Recognition.Grammar> Objekte erhalten Sie in der Regel von Ressourcen in einer Assembly als eine <xref:System.Type> der Common Language Runtime (CLR). Die lokalisierten Typen verwendet, um verschiedene Sprachen zu unterstützen sind Beispiele solcher <xref:System.Speech.Recognition.Grammar> Objekte.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Stark typisierte Grammatik, die Vererbung von <see cref="T:System.Speech.Recognition.Grammar" /> das Standardverhalten außer Kraft setzen müssen <see langword="IsStg" />, d.h. zurückgeben <see langword="false" />.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public bool Loaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Loaded" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Loaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Loaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Loaded : bool" Usage="System.Speech.Recognition.Grammar.Loaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob <see cref="T:System.Speech.Recognition.Grammar" /> von einer Spracherkennung geladen wurde.</summary>
        <value>Die <see langword="Loaded" />-Eigenschaft gibt <see langword="true" /> zurück, wenn die referenzierte Spracherkennungsgrammatik momentan in einer Spracherkennung geladen ist. Andernfalls gibt die Eigenschaft <see langword="false" /> zurück. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Sobald eine <xref:System.Speech.Recognition.Grammar> geladen wurde, die Werte der <xref:System.Speech.Recognition.Grammar.Weight%2A>, und <xref:System.Speech.Recognition.Grammar.Priority%2A> kann nicht geändert werden.  
  
   
  
## Examples  
 Im folgende Beispiel schreibt Informationen über eine <xref:System.Speech.Recognition.Grammar> -Objekt an die [Konsole](https://go.microsoft.com/fwlink/?LinkId=159613).  
  
```csharp  
  
private static void DumpGrammarStatus(Grammar item)  
{  
  Console.WriteLine("Grammar name is {0}:", item.Name);  
  Console.WriteLine("  The Grammar {0} loaded.",  
    item.Loaded ? "is" : "is not");  
  Console.WriteLine("  The Grammar {0} enabled.",  
    item.Enabled ? "is" : "is not");  
  if (item.RuleName != null)  
  {  
    Console.WriteLine("  The root rule is {0}.", item.RuleName);  
  }  
  else  
  {  
    Console.WriteLine("  The Grammar does not specify a root rule.");  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Enabled" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="LoadLocalizedGrammarFromType">
      <MemberSignature Language="C#" Value="public static System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType (Type type, params object[] onInitParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Speech.Recognition.Grammar LoadLocalizedGrammarFromType(class System.Type type, object[] onInitParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType(System.Type,System.Object[])" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Speech::Recognition::Grammar ^ LoadLocalizedGrammarFromType(Type ^ type, ... cli::array &lt;System::Object ^&gt; ^ onInitParameters);" />
      <MemberSignature Language="F#" Value="static member LoadLocalizedGrammarFromType : Type * obj[] -&gt; System.Speech.Recognition.Grammar" Usage="System.Speech.Recognition.Grammar.LoadLocalizedGrammarFromType (type, onInitParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Speech.Recognition.Grammar</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="onInitParameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="type">In einer Assembly der <see cref="T:System.Type" />-Objekts, das auf <see cref="T:System.Speech.Recognition.Grammar" /> basiert.</param>
        <param name="onInitParameters">Parameter, die an eine Initialisierungsmethode des localizedobject übergeben werden sollen, auf Grundlage von <see cref="T:System.Speech.Recognition.Grammar" />. Dieser Parameter kann NULL sein.</param>
        <summary>Die <see langword="LoadLocalizedGrammarFromType" />-Methode gibt eine lokalisierte Instanz eines <see cref="T:System.Speech.Recognition.Grammar" />-Objekts zurück, das von <see cref="T:System.Type" /> abgeleitet ist.</summary>
        <returns>Die <see langword="LoadLocalizedGrammarFromType" />-Methode gibt ein gültiges Objekt auf Grundlage von <see cref="T:System.Speech.Recognition.Grammar" />zurück oder <see langword="null" />, falls ein Fehler aufgetreten ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Lokalisierte Grammatiken mit bezogen `LoadLocalizedGrammarFromType` sind in der Regel stark typisierte (finden Sie unter <xref:System.Speech.Recognition.Grammar.IsStg%2A> für Weitere Informationen zu stark typisierte Grammatik). Wenn `onInitParameters` ist ein null-Verweis (Nothing in Visual Basic) der lokalisierten Grammatik müssen keine Initialisierungsmethode oder eine Methode, die keine Argumente akzeptiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Speech.Recognition.Grammar.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen eines <see cref="T:System.Speech.Recognition.Grammar" />-Objekts ab oder legt ihn fest.</summary>
        <value>Die <see langword="Name" />-Eigenschaft gibt den Namen des <see cref="T:System.Speech.Recognition.Grammar" />-Objekts zurück. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Das folgende Beispiel erstellt zwei <xref:System.Speech.Recognition.Grammar> Objekte, eine für Ziffern und eine für Sekundenbruchteile. "Grammar"-Objekte sind Namen und die relativen Gewichtungen und Prioritäten zugewiesen, und von einer in-Process-Spracherkennung geladen. Die `CreateDigitsGrammar`, `CreateFractionsGrammar`, und `recognizer_SpeechRecognized` Methoden werden hier nicht angezeigt.  
  
```csharp  
  
// Create a Grammar for recognizing numeric digits.  
Grammar digitsGrammar = CreateDigitsGrammar();  
digitsGrammar.Name = "Digits Grammar";  
digitsGrammar.Priority = 2;  
digitsGrammar.Weight = 0.6f;  
  
// Create a Grammar for recognizing fractions.  
Grammar fractionsGrammar = CreateFractionsGrammar();  
fractionsGrammar.Name = "Fractions Grammar";  
fractionsGrammar.Priority = 1;  
fractionsGrammar.Weight = 1f;  
  
// Create an in-process speech recognizer.  
SpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  
  
recognizer.SpeechRecognized +=  
  new EventHandler<SpeechRecognizedEventArgs>(  
    recognizer_SpeechRecognized);  
  
// Load the digits and fractions Grammar objects.  
recognizer.LoadGrammar(digitsGrammar);  
recognizer.LoadGrammar(fractionsGrammar);  
  
// Start recognition.  
recognizer.SetInputToDefaultAudioDevice();  
recognizer.RecognizeAsync(RecognizeMode.Multiple);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="Priority">
      <MemberSignature Language="C#" Value="public int Priority { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Priority" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Priority" />
      <MemberSignature Language="VB.NET" Value="Public Property Priority As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Priority { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Priority : int with get, set" Usage="System.Speech.Recognition.Grammar.Priority" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert der Priorität eines <see cref="T:System.Speech.Recognition.Grammar" />-Objekts ab oder legt diesen fest.</summary>
        <value>Die <see langword="Priority" />-Eigenschaft gibt einen ganzzahligen Wert zurück, der die relative Priorität einer bestimmten <see cref="T:System.Speech.Recognition.Grammar" /> darstellt. Der Bereich reicht von -128 bis 127 (inklusive). Der Standard ist 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die `Priority` Eigenschaft wird verwendet, um eine Grammatik zu wählen, wenn mehr als eine Grammatik eine identische Erkennungsergebnis erzeugt. Wenn eine Spracherkennung die Erkennung hat mehr als eine spracherkennungsgrammatik geladen und aktiviert, die die Eingabe, erfüllen die entspricht das beste Ergebnis der Erkennung, und die Erkennung verwendet die Grammatik, die die besten `Priority`. Wenn die Grammatiken, die das identische Erkennungsergebnis erzeugen auch die gleiche haben `Priority` Wert, und klicken Sie dann die Grammatik, die die Erkennung verwendet nicht definiert ist.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt zwei <xref:System.Speech.Recognition.Grammar> Objekte, eine für Ziffern und eine für Sekundenbruchteile. Die <xref:System.Speech.Recognition.Grammar> Objekte Namen und die relativen Gewichtungen und Prioritäten zugewiesen sind, und von einer in-Process-Spracherkennung geladen. Die `CreateDigitsGrammar`, `CreateFractionsGrammar`, und `recognizer_SpeechRecognized` Methoden werden hier nicht angezeigt.  
  
```csharp  
  
// Create a Grammar for recognizing numeric digits.  
Grammar digitsGrammar = CreateDigitsGrammar();  
digitsGrammar.Name = "Digits Grammar";  
digitsGrammar.Priority = 2;  
digitsGrammar.Weight = 0.6f;  
  
// Create a Grammar for recognizing fractions.  
Grammar fractionsGrammar = CreateFractionsGrammar();  
fractionsGrammar.Name = "Fractions Grammar";  
fractionsGrammar.Priority = 1;  
fractionsGrammar.Weight = 1f;  
  
// Create an in-process speech recognizer.  
SpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  
  
recognizer.SpeechRecognized +=  
  new EventHandler<SpeechRecognizedEventArgs>(  
    recognizer_SpeechRecognized);  
  
// Load the digits and fractions Grammar objects.  
recognizer.LoadGrammar(digitsGrammar);  
recognizer.LoadGrammar(fractionsGrammar);  
  
// Start recognition.  
recognizer.SetInputToDefaultAudioDevice();  
recognizer.RecognizeAsync(RecognizeMode.Multiple);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Loaded" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Enabled" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Weight" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="ResourceName">
      <MemberSignature Language="C#" Value="protected string ResourceName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ResourceName" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.ResourceName" />
      <MemberSignature Language="VB.NET" Value="Protected Property ResourceName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::String ^ ResourceName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ResourceName : string with get, set" Usage="System.Speech.Recognition.Grammar.ResourceName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt diesen fest mit einer binären Ressource, welche für das Laden der aktuellen <see cref="T:System.Speech.Recognition.Grammar" /> verwendet wurde.</summary>
        <value>Die <see langword="ResourceName" />-Eigenschaft gibt den Namen der binären Ressource zurück, von der die stark typisierte Grammatik, die von <see cref="T:System.Speech.Recognition.Grammar" /> benutzt wird, geladen wurde.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RuleName">
      <MemberSignature Language="C#" Value="public string RuleName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RuleName" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.RuleName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RuleName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RuleName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RuleName : string" Usage="System.Speech.Recognition.Grammar.RuleName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen der Stammregel oder des Einstiegpunkts eines <see cref="T:System.Speech.Recognition.Grammar" />-Objekts ab.</summary>
        <value>Die <see langword="RuleName" />-Eigenschaft gibt den Bezeichner für die Stammregel der referenzierten Spracherkennungsgrammatik zurück. Der Standardwert ist <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Zum Erstellen einer <xref:System.Speech.Recognition.Grammar> Objekt und legen Sie den Namen für die Stammregel, gehen Sie die <xref:System.Speech.Recognition.Grammar.%23ctor%2A> Konstruktoren, die akzeptiert die `ruleName` Parameter.  
  
 Wenn die Stammregel der ein <xref:System.Speech.Recognition.Grammar> verfügt über keine Namen, die Eigenschaft zurückgibt `null`.  
  
 Die Stamm-Regeln für <xref:System.Speech.Recognition.Grammar> Instanzen von erstellt <xref:System.Speech.Recognition.GrammarBuilder> Objekte in der Regel keinen Namen haben, also <xref:System.Speech.Recognition.Grammar.RuleName%2A> gibt `null`.  
  
   
  
## Examples  
 Im folgende Beispiel schreibt Informationen über eine <xref:System.Speech.Recognition.Grammar> -Objekt an die [Konsole](https://go.microsoft.com/fwlink/?LinkId=159613).  
  
```csharp  
  
private static void DumpGrammarStatus(Grammar item)  
{  
  Console.WriteLine("Grammar name is {0}:", item.Name);  
  Console.WriteLine("  The Grammar {0} loaded.",  
    item.Loaded ? "is" : "is not");  
  Console.WriteLine("  The Grammar {0} enabled.",  
    item.Enabled ? "is" : "is not");  
  if (item.RuleName != null)  
  {  
    Console.WriteLine("  The root rule is {0}.", item.RuleName);  
  }  
  else  
  {  
    Console.WriteLine("  The Grammar does not specify a root rule.");  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Speech.Recognition.Grammar.#ctor(System.IO.Stream)" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="SpeechRecognized">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt; SpeechRecognized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Speech.Recognition.SpeechRecognizedEventArgs&gt; SpeechRecognized" />
      <MemberSignature Language="DocId" Value="E:System.Speech.Recognition.Grammar.SpeechRecognized" />
      <MemberSignature Language="VB.NET" Value="Public Event SpeechRecognized As EventHandler(Of SpeechRecognizedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Speech::Recognition::SpeechRecognizedEventArgs ^&gt; ^ SpeechRecognized;" />
      <MemberSignature Language="F#" Value="member this.SpeechRecognized : EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt; " Usage="member this.SpeechRecognized : System.EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Speech.Recognition.SpeechRecognizedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Wird ausgelöst, wenn eine Spracherkennung die Erkennung mithilfe des <see cref="T:System.Speech.Recognition.Grammar" />-Objekts ausführt.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Spracherkennung löst auch eine `SpeechRecognized` Ereignis aus, wenn die Eingabe erkennt. Die <xref:System.Speech.Recognition.Grammar> des Objekts <xref:System.Speech.Recognition.Grammar.SpeechRecognized> Ereignis wird ausgelöst, bevor Sie der Spracherkennung `SpeechRecognized` Ereignis. Weitere Informationen finden Sie unter den <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=nameWithType>, <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=nameWithType>, und <xref:System.Speech.Recognition.SpeechRecognitionEngine.RecognizeCompleted> Ereignisse.  
  
 Alle Aufgaben, die spezifisch für eine bestimmte Grammatik von Handlern für immer behandelt werden sollen die <xref:System.Speech.Recognition.Grammar> des Objekts <xref:System.Speech.Recognition.Grammar.SpeechRecognized> Ereignis.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt die Verwendung eines ereignishandlers für das <xref:System.Speech.Recognition.Grammar> des Objekts <xref:System.Speech.Recognition.Grammar.SpeechRecognized> Ereignis. Er gibt die Erkennungsergebnisse in der [Konsole](https://go.microsoft.com/fwlink/?LinkId=159613).  
  
```csharp  
public partial class Form1 : Form  
{  
  SpeechRecognitionEngine sre;  
  
  public Form1()  
  {  
  InitializeComponent();  
  
  // Create an in-process speech recognizer.  
  sre = new SpeechRecognitionEngine();  
  
  // Configure input to the speech recognizer.  
  sre.SetInputToDefaultAudioDevice();  
  
  // Create a simple grammar and load it.  
  Grammar testGrammar = new Grammar(new GrammarBuilder("testing"));  
  sre.LoadGrammarAsync(testGrammar);  
  
  // Add a handler for the grammar's speech recognized event.  
  testGrammar.SpeechRecognized += new EventHandler<SpeechRecognizedEventArgs>(testGrammar_SpeechRecognized);  
  
  // Start asynchronous speech recognition.  
  sre.RecognizeAsync();  
  }  
  
  // Handle the grammar's SpeechRecognized event, output the recognized text.  
  void testGrammar_SpeechRecognized(object sender, SpeechRecognizedEventArgs e)  
  {  
    Console.WriteLine("Recognized text: " + e.Result.Text);  
  }  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
    <Member MemberName="StgInit">
      <MemberSignature Language="C#" Value="protected void StgInit (object[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void StgInit(object[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Speech.Recognition.Grammar.StgInit(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Protected Sub StgInit (parameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void StgInit(cli::array &lt;System::Object ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.StgInit : obj[] -&gt; unit" Usage="grammar.StgInit parameters" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameters" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="parameters">Parameter, die übergeben werden sollen, um die stark typisierte Grammatik zu initialisieren. Dieser Parameter kann NULL sein.</param>
        <summary>Die <see langword="StgInit" />-Methode initialisiert eine stark typisierte Grammatik.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein stark typisiertes <xref:System.Speech.Recognition.Grammar> Objekt (`IsStg` gleich `true`) können stark typisierte Ergebnisse (Objekte, anstelle von unformatierten Text) an eine Clientanwendung zurück. Beispielsweise könnte eine stark typisierte Grammatik zurückgeben <xref:System.DateTime> anstatt zu rohdateneingabe erkannten Objekte.  
  
 Sie können Code anfügen, die den Regeln für eine Grammatik stark typisierte Grammatik implementieren. Während eine erkennungs-Engine eine bestimmte Regel verarbeitet werden, erstellen, die als Eingabe die aktuelle Teilergebnisse, wird der zugehörige Code ausgeführt, und die Textinformationen wird umfangreiche Type-Objekten. Dadurch kann einen Client, leichter verwenden der erweiterten semantische Überprüfung und Unterstützung für mehrere Kulturen und interne Grammatik Logik.  
  
 Instanzen von stark typisierten <xref:System.Speech.Recognition.Grammar> Objekte erhalten Sie in der Regel von Ressourcen in einer Assembly als eine <xref:System.Type> der Common Language Runtime (CLR). Die lokalisierten Typen verwendet, um verschiedene Sprachen zu unterstützen sind Beispiele solcher <xref:System.Speech.Recognition.Grammar> Objekte.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Wenn eine stark typisierte Grammatik Initialisierung erfordert <see langword="StgInit" /> in einem Konstruktor oder eine Initialisierungsmethode aufgerufen werden soll.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Weight">
      <MemberSignature Language="C#" Value="public float Weight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 Weight" />
      <MemberSignature Language="DocId" Value="P:System.Speech.Recognition.Grammar.Weight" />
      <MemberSignature Language="VB.NET" Value="Public Property Weight As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float Weight { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.Weight : single with get, set" Usage="System.Speech.Recognition.Grammar.Weight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Speech</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert der Stärke eines <see cref="T:System.Speech.Recognition.Grammar" />-Objekts ab oder legt diesen fest.</summary>
        <value>Die <see langword="Weight" /> -Eigenschaft-gibt ein Gleitkommawert, der angibt, der relativen Gewichts, die eine Erkennung-Engine-Instanz der Grammatik zuweisen soll, wenn Sie Spracheingabe verarbeitet. Der Bereich liegt zwischen 0.0 bis einschließlich 1.0. Der Standardwert ist 1,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Aufgrund der Komplexität der Verwendung einer erkennungs-Engine **Gewichtung**, deren Auswirkung auf die Leistung für eine bestimmte Grammatik ist nicht direkt als vorhersagbar ist, wie der <xref:System.Speech.Recognition.Grammar.Priority%2A>.  
  
 Spracherkennung ist ein gewichteter. Er wertet alle möglichen Recognition-Pfade, die basierend auf einer Kombination aus, der die Gewichtung der Grammatik, die Gewichtungen für die alternativen, in der Grammatik definiert und die Wahrscheinlichkeiten von Sprachmodelle definiert. Die spracherkennungs-Engine verwendet die Kombination dieser Gewichtungen und Wahrscheinlichkeiten, Rang mögliche Alternativen Erkennungsvorgänge. Grammatik mit höherer Gewichtung werden mehr um die Rangfolge der Erkennung von alternativen als Grammatiken mit niedrigeren Gewichtungen beitragen.  
  
 Die Auswirkungen der <xref:System.Speech.Recognition.Grammar.Weight%2A> Eigenschaft für eine Spracherkennung die Erkennung ist abhängig von der Implementierung der Erkennung. Obwohl die <xref:System.Speech.Recognition.Grammar.Weight%2A> Eigenschaft kann verwendet werden, um die Genauigkeit der Spracherkennung für eine Anwendung zu optimieren, und sollte verwendet werden, nur nach dem diagnostische Studie von einer bestimmten Erkennung-Umgebung und mit der vollständigen Informationen über die erkennungs-Engine gesteuert Verwenden Sie unter.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt zwei <xref:System.Speech.Recognition.Grammar> Objekte, eine für Ziffern und eine für Sekundenbruchteile. Die <xref:System.Speech.Recognition.Grammar> Objekte Namen und die relativen Gewichtungen und Prioritäten zugewiesen sind, und von einer in-Process-Spracherkennung geladen. Die `CreateDigitsGrammar`, `CreateFractionsGrammar`, und `recognizer_SpeechRecognized` Methoden werden hier nicht angezeigt.  
  
```csharp  
  
// Create a Grammar for recognizing numeric digits.  
Grammar digitsGrammar = CreateDigitsGrammar();  
digitsGrammar.Name = "Digits Grammar";  
digitsGrammar.Priority = 2;  
digitsGrammar.Weight = 0.6f;  
  
// Create a Grammar for recognizing fractions.  
Grammar fractionsGrammar = CreateFractionsGrammar();  
fractionsGrammar.Name = "Fractions Grammar";  
fractionsGrammar.Priority = 1;  
fractionsGrammar.Weight = 1f;  
  
// Create an in-process speech recognizer.  
SpeechRecognitionEngine recognizer = new SpeechRecognitionEngine();  
  
recognizer.SpeechRecognized +=  
  new EventHandler<SpeechRecognizedEventArgs>(  
    recognizer_SpeechRecognized);  
  
// Load the digits and fractions Grammar objects.  
recognizer.LoadGrammar(digitsGrammar);  
recognizer.LoadGrammar(fractionsGrammar);  
  
// Start recognition.  
recognizer.SetInputToDefaultAudioDevice();  
recognizer.RecognizeAsync(RecognizeMode.Multiple);  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Speech.Recognition.Grammar.Loaded" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Enabled" />
        <altmember cref="P:System.Speech.Recognition.Grammar.Priority" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognizer" />
        <altmember cref="T:System.Speech.Recognition.SpeechRecognitionEngine" />
      </Docs>
    </Member>
  </Members>
</Type>