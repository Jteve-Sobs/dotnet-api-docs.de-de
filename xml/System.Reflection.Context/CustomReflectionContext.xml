<Type Name="CustomReflectionContext" FullName="System.Reflection.Context.CustomReflectionContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="67523d89b710e9dcff82dcc815b99bd51a7e74c9" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64055630" /></Metadata><TypeSignature Language="C#" Value="public abstract class CustomReflectionContext : System.Reflection.ReflectionContext" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit CustomReflectionContext extends System.Reflection.ReflectionContext" />
  <TypeSignature Language="DocId" Value="T:System.Reflection.Context.CustomReflectionContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class CustomReflectionContext&#xA;Inherits ReflectionContext" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomReflectionContext abstract : System::Reflection::ReflectionContext" />
  <TypeSignature Language="F#" Value="type CustomReflectionContext = class&#xA;    inherit ReflectionContext" />
  <AssemblyInfo>
    <AssemblyName>System.Reflection.Context</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.3.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Reflection.ReflectionContext</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f72bb-101">Stellt einen benutzerdefinierten Reflektionskontext dar.</span><span class="sxs-lookup"><span data-stu-id="f72bb-101">Represents a customizable reflection context.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f72bb-102"><xref:System.Reflection.Context.CustomReflectionContext> bietet eine Möglichkeit zum Hinzufügen oder benutzerdefinierte Attribute Reflection-Objekte, hinzufügen oder daraus entfernen dummy-Eigenschaften für diese Objekte, ohne das vollständige Reflektionsmodell erneut zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="f72bb-102"><xref:System.Reflection.Context.CustomReflectionContext> provides a way for you to add or remove custom attributes from reflection objects, or add dummy properties to those objects, without re-implementing the complete reflection model.</span></span> <span data-ttu-id="f72bb-103">Der Standardwert <xref:System.Reflection.Context.CustomReflectionContext> einfach die Reflexion umschließt Objekte, ohne Änderungen vorzunehmen, aber von Unterklassen und überschreiben die relevanten Methoden, Sie können hinzufügen, entfernen, ändern Sie die Attribute, die auf jedem wiedergegebenen Parameters oder der Member anwenden oder neue Eigenschaften hinzufügen, eine reflektierten Typ.</span><span class="sxs-lookup"><span data-stu-id="f72bb-103">The default <xref:System.Reflection.Context.CustomReflectionContext> simply wraps reflection objects without making any changes, but by subclassing and overriding the relevant methods, you can add, remove, or change the attributes that apply to any reflected parameter or member, or add new properties to a reflected type.</span></span>  
  
 <span data-ttu-id="f72bb-104">Nehmen wir beispielsweise an, dass Ihr Code die Konvention der Anwendung eines bestimmten Attributs Factorymethoden folgt, aber Sie müssen sich jetzt mit Code von Drittanbietern arbeiten, die nicht über Attribute verfügt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-104">For example, suppose that your code follows the convention of applying a particular attribute to factory methods, but you are now required to work with third-party code that lacks attributes.</span></span> <span data-ttu-id="f72bb-105">Sie können <xref:System.Reflection.Context.CustomReflectionContext> an eine Regel zum Identifizieren der Objekte, die Attribute haben sollten, und die Objekte mit diesen Attributen angeben, wenn sie aus dem Code angezeigt werden.</span><span class="sxs-lookup"><span data-stu-id="f72bb-105">You can use <xref:System.Reflection.Context.CustomReflectionContext> to specify a rule for identifying the objects that should have attributes and to supply the objects with those attributes when they are viewed from your code.</span></span>  
  
 <span data-ttu-id="f72bb-106">Verwendung von <xref:System.Reflection.Context.CustomReflectionContext> effektiv, muss der Code die reflektierte Objekte verwendet unterstützen das Konzept angeben Reflektionskontext, nicht davon ausgegangen, dass alle wiedergegeben werden Objekte der Common Language Runtime und Reflektionskontext zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="f72bb-106">To use <xref:System.Reflection.Context.CustomReflectionContext> effectively, the code that uses the reflected objects must support the notion of specifying a reflection context, instead of assuming that all reflected objects are associated with the runtime reflection context.</span></span> <span data-ttu-id="f72bb-107">Viele Reflektion in .NET Framework dienen einem <xref:System.Reflection.ReflectionContext> Parameter für diesen Zweck.</span><span class="sxs-lookup"><span data-stu-id="f72bb-107">Many reflection methods in the .NET Framework provide a <xref:System.Reflection.ReflectionContext> parameter for this purpose.</span></span>  
  
 <span data-ttu-id="f72bb-108">Um die Attribute zu ändern, die auf einen wiedergegebenen Parameters oder einen Member angewendet werden, überschreiben die <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> oder <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> Methode.</span><span class="sxs-lookup"><span data-stu-id="f72bb-108">To modify the attributes that are applied to a reflected parameter or member, override the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.ParameterInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> or <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%28System.Reflection.MemberInfo%2CSystem.Collections.Generic.IEnumerable%7BSystem.Object%7D%29> method.</span></span> <span data-ttu-id="f72bb-109">Diese Methoden nehmen Sie das reflektierte Objekt und die Liste der Attribute in der aktuellen Reflektionskontext und Zurückgeben der Liste der Attribute, die sie in der benutzerdefinierten Reflektionskontext haben soll.</span><span class="sxs-lookup"><span data-stu-id="f72bb-109">These methods take the reflected object and the list of attributes under its current reflection context, and return the list of attributes it should have under the custom reflection context.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="f72bb-110"><xref:System.Reflection.Context.CustomReflectionContext> Methoden sollten nicht auf die Liste der Attribute einer reflektiertes-Objekt oder die Methode zugreifen, direkt durch Aufrufen der <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> Methode für das bereitgestellte <xref:System.Reflection.MemberInfo> oder <xref:System.Reflection.ParameterInfo> -Instanz verwenden soll, sondern die `declaredAttributes` Liste, die als Parameter übergeben wird um die <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> Überladungen der Methode.</span><span class="sxs-lookup"><span data-stu-id="f72bb-110"><xref:System.Reflection.Context.CustomReflectionContext> methods should not access the list of attributes of a reflected object or method directly by calling the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method on the provided <xref:System.Reflection.MemberInfo> or <xref:System.Reflection.ParameterInfo> instance, but should instead use the `declaredAttributes` list, which is passed as a parameter to the <xref:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes%2A> method overloads.</span></span>  
  
 <span data-ttu-id="f72bb-111">Um Eigenschaften zu einem reflektierten Typ hinzuzufügen, überschreiben die <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f72bb-111">To add properties to a reflected type, override the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span> <span data-ttu-id="f72bb-112">Die Methode akzeptiert einen Parameter, der gibt den reflektierten Typ und gibt eine Liste von zusätzlichen Eigenschaften zurück.</span><span class="sxs-lookup"><span data-stu-id="f72bb-112">The method accepts a parameter that specifies the reflected type, and returns a list of additional properties.</span></span> <span data-ttu-id="f72bb-113">Verwenden Sie die <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> Methode zum Erstellen von Property-Objekte zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="f72bb-113">You should use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method to create property objects to return.</span></span> <span data-ttu-id="f72bb-114">Sie können Delegaten angeben, wenn die Eigenschaft zu erstellen, als-Accessor der Eigenschaft dient, und Sie können einen der Accessoren zum Erstellen einer schreibgeschützten oder lesegeschützten Eigenschaft auslassen.</span><span class="sxs-lookup"><span data-stu-id="f72bb-114">You can specify delegates when creating the property that will serve as the property accessor, and you can omit one of the accessors to create a read-only or write-only property.</span></span> <span data-ttu-id="f72bb-115">Beachten Sie, dass solche dummy-Eigenschaften ohne Metadaten oder Common Intermediate Language (CIL) sichern.</span><span class="sxs-lookup"><span data-stu-id="f72bb-115">Note that such dummy properties have no metadata or Common Intermediate Language (CIL) backing.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="f72bb-116">Seien Sie vorsichtig bezüglich der Gleichheit zwischen reflektierte Objekten bei der Arbeit mit reflektionskontexte, da Objekte reflektierte dasselbe Objekt in mehreren Kontexten darstellen können.</span><span class="sxs-lookup"><span data-stu-id="f72bb-116">Be cautious about equality among reflected objects when you work with reflection contexts, because objects may represent the same reflected object in multiple contexts.</span></span> <span data-ttu-id="f72bb-117">Sie können die <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> Methode zum Abrufen der Reflektionskontext für eine bestimmte Version eines Objekts wiedergegeben.</span><span class="sxs-lookup"><span data-stu-id="f72bb-117">You can use the <xref:System.Reflection.Context.CustomReflectionContext.MapType%2A> method to obtain a particular reflection context's version of a reflected object.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="f72bb-118">Ein <xref:System.Reflection.Context.CustomReflectionContext> Objekt ändert die Attribute zurückgegeben, die für einen bestimmten Reflection-Objekt, z. B. abgerufen, indem die <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f72bb-118">A <xref:System.Reflection.Context.CustomReflectionContext> object alters the attributes returned by a particular reflection object, such as those obtained by the <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A> method.</span></span> <span data-ttu-id="f72bb-119">Es ändert keinen vom zurückgegebenen benutzerdefinierten Attributdaten die <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> -Methode, und diese beiden Listen werden nicht überein, bei der Verwendung einer benutzerdefinierten Reflektionskontexts.</span><span class="sxs-lookup"><span data-stu-id="f72bb-119">It does not alter the custom attribute data returned by the <xref:System.Reflection.MemberInfo.GetCustomAttributesData%2A> method, and these two lists will not match when you use a custom reflection context.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f72bb-120">Im folgende Beispiel wird veranschaulicht, wie Sie die Unterklasse <xref:System.Reflection.Context.CustomReflectionContext> zum Hinzufügen eines benutzerdefinierten Attributs auf alle Member eines bestimmten Typs, deren Namen beginnen mit "Zu".</span><span class="sxs-lookup"><span data-stu-id="f72bb-120">The following example demonstrates how to subclass  <xref:System.Reflection.Context.CustomReflectionContext> to add a custom attribute to all the members of a given type whose names begin with "To".</span></span> <span data-ttu-id="f72bb-121">Um diesen Code auszuführen, fügen Sie ihn in eine leere Konsolenprojekt, und achten Sie darauf, einen Verweis auf System.Reflection.Context.dll enthalten.</span><span class="sxs-lookup"><span data-stu-id="f72bb-121">To run this code, paste it into an empty console project, and make sure to include a reference to System.Reflection.Context.dll.</span></span>  
  
 [!code-csharp[System.Reflection.Context.CustomReflectionContext#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.reflection.context.customreflectioncontext/cs/program.cs#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f72bb-122">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.Context.CustomReflectionContext" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="f72bb-122">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f72bb-123">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.Context.CustomReflectionContext" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="f72bb-123">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected CustomReflectionContext (System.Reflection.ReflectionContext source);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Reflection.ReflectionContext source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.#ctor(System.Reflection.ReflectionContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (source As ReflectionContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; CustomReflectionContext(System::Reflection::ReflectionContext ^ source);" />
      <MemberSignature Language="F#" Value="new System.Reflection.Context.CustomReflectionContext : System.Reflection.ReflectionContext -&gt; System.Reflection.Context.CustomReflectionContext" Usage="new System.Reflection.Context.CustomReflectionContext source" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Reflection.ReflectionContext" />
      </Parameters>
      <Docs>
        <param name="source"><span data-ttu-id="f72bb-124">Der als Basisklasse verwendete Reflexionskontext.</span><span class="sxs-lookup"><span data-stu-id="f72bb-124">The reflection context to use as a base.</span></span></param>
        <summary><span data-ttu-id="f72bb-125">Initialisiert eine neue Instanz der <see cref="T:System.Reflection.Context.CustomReflectionContext" />-Klasse mit der angegebenen Codebasis und Reflektionskontext als Grundlage</span><span class="sxs-lookup"><span data-stu-id="f72bb-125">Initializes a new instance of the <see cref="T:System.Reflection.Context.CustomReflectionContext" /> class with the specified reflection context as a base.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddProperties">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt; AddProperties (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Reflection.PropertyInfo&gt; AddProperties(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Reflection::PropertyInfo ^&gt; ^ AddProperties(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;&#xA;override this.AddProperties : Type -&gt; seq&lt;System.Reflection.PropertyInfo&gt;" Usage="customReflectionContext.AddProperties type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Context.CustomReflectionContext/&lt;AddProperties&gt;d__1))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Reflection.Context.CustomReflectionContext/&lt;AddProperties&gt;d__8))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Reflection.PropertyInfo&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f72bb-126">Der Typ dem Eigenschaften hinzugefügt werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f72bb-126">The type to add properties to.</span></span></param>
        <summary><span data-ttu-id="f72bb-127">Stellt beim Überschreiben in einer abgeleiteten Klasse eine Auflistung für zusätzliche Eigenschaften für den angegebenen Typ bereit, wie in diesem Reflexionskontext dargestellt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-127">When overridden in a derived class, provides a collection of additional properties for the specified type, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="f72bb-128">Eine Sammlung von zusätzlichen Eigenschaften für den angegebenen Typ.</span><span class="sxs-lookup"><span data-stu-id="f72bb-128">A collection of additional properties for the specified type.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f72bb-129">Überschreiben Sie diese Methode, um anzugeben, welche Eigenschaften eines bestimmten Typs hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="f72bb-129">Override this method to specify which properties should be added to a given type.</span></span> <span data-ttu-id="f72bb-130">Um die Eigenschaften zu erstellen, verwenden Sie die <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f72bb-130">To create the properties, use the <xref:System.Reflection.Context.CustomReflectionContext.CreateProperty%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateProperty">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f72bb-131">Erstellt ein Objekt, das eine Eigenschaft darstellt, die einem Typ hinzugefügt werden soll, wie von der <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />-Methode angegeben.</span><span class="sxs-lookup"><span data-stu-id="f72bb-131">Creates an object that represents a property to be added to a type, as specified by the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType"><span data-ttu-id="f72bb-132">Der Typ der zu erstellenden Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f72bb-132">The type of the property to create.</span></span></param>
        <param name="name"><span data-ttu-id="f72bb-133">Der Name der zu erstellenden Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f72bb-133">The name of the property to create.</span></span></param>
        <param name="getter"><span data-ttu-id="f72bb-134">Ein Objekt, das den <see langword="get" />-Accessor der Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-134">An object that represents the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setter"><span data-ttu-id="f72bb-135">Ein Objekt, das den <see langword="set" />-Accessor der Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-135">An object that represents the property's <see langword="set" /> accessor.</span></span></param>
        <summary><span data-ttu-id="f72bb-136">Erstellt ein Objekt, das eine Eigenschaft darstellt, die einem Typ hinzugefügt werden soll, der von der <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />-Methode verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f72bb-136">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method.</span></span></summary>
        <returns><span data-ttu-id="f72bb-137">Ein Objekt, das die Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-137">An object that represents the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f72bb-138">Objekte, die von dieser Methode zurückgegeben werden, sind nicht vollständig <xref:System.Reflection.PropertyInfo> Objekte aus, und sollte verwendet werden, nur im Kontext des der <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f72bb-138">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateProperty">
      <MemberSignature Language="C#" Value="protected System.Reflection.PropertyInfo CreateProperty (Type propertyType, string name, Func&lt;object,object&gt; getter, Action&lt;object,object&gt; setter, System.Collections.Generic.IEnumerable&lt;Attribute&gt; propertyCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; getterCustomAttributes, System.Collections.Generic.IEnumerable&lt;Attribute&gt; setterCustomAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Reflection.PropertyInfo CreateProperty(class System.Type propertyType, string name, class System.Func`2&lt;object, object&gt; getter, class System.Action`2&lt;object, object&gt; setter, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; propertyCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; getterCustomAttributes, class System.Collections.Generic.IEnumerable`1&lt;class System.Attribute&gt; setterCustomAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.CreateProperty(System.Type,System.String,System.Func{System.Object,System.Object},System.Action{System.Object,System.Object},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute},System.Collections.Generic.IEnumerable{System.Attribute})" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateProperty (propertyType As Type, name As String, getter As Func(Of Object, Object), setter As Action(Of Object, Object), propertyCustomAttributes As IEnumerable(Of Attribute), getterCustomAttributes As IEnumerable(Of Attribute), setterCustomAttributes As IEnumerable(Of Attribute)) As PropertyInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Reflection::PropertyInfo ^ CreateProperty(Type ^ propertyType, System::String ^ name, Func&lt;System::Object ^, System::Object ^&gt; ^ getter, Action&lt;System::Object ^, System::Object ^&gt; ^ setter, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ propertyCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ getterCustomAttributes, System::Collections::Generic::IEnumerable&lt;Attribute ^&gt; ^ setterCustomAttributes);" />
      <MemberSignature Language="F#" Value="member this.CreateProperty : Type * string * Func&lt;obj, obj&gt; * Action&lt;obj, obj&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; * seq&lt;Attribute&gt; -&gt; System.Reflection.PropertyInfo" Usage="customReflectionContext.CreateProperty (propertyType, name, getter, setter, propertyCustomAttributes, getterCustomAttributes, setterCustomAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.PropertyInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="getter" Type="System.Func&lt;System.Object,System.Object&gt;" />
        <Parameter Name="setter" Type="System.Action&lt;System.Object,System.Object&gt;" />
        <Parameter Name="propertyCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="getterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
        <Parameter Name="setterCustomAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Attribute&gt;" />
      </Parameters>
      <Docs>
        <param name="propertyType"><span data-ttu-id="f72bb-139">Der Typ der zu erstellenden Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f72bb-139">The type of the property to create.</span></span></param>
        <param name="name"><span data-ttu-id="f72bb-140">Der Name der zu erstellenden Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="f72bb-140">The name of the property to create.</span></span></param>
        <param name="getter"><span data-ttu-id="f72bb-141">Ein Objekt, das den <see langword="get" />-Accessor der Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-141">An object that represents the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setter"><span data-ttu-id="f72bb-142">Ein Objekt, das den <see langword="set" />-Accessor der Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-142">An object that represents the property's <see langword="set" /> accessor.</span></span></param>
        <param name="propertyCustomAttributes"><span data-ttu-id="f72bb-143">Eine Sammlung benutzerdefinierter Attribute auf die Eigenschaft angewendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f72bb-143">A collection of custom attributes to apply to the property.</span></span></param>
        <param name="getterCustomAttributes"><span data-ttu-id="f72bb-144">Eine Sammlung benutzerdefinierter Attribute, die auf den <see langword="get" />-Accessor der Eigenschaft angewendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f72bb-144">A collection of custom attributes to apply to the property's <see langword="get" /> accessor.</span></span></param>
        <param name="setterCustomAttributes"><span data-ttu-id="f72bb-145">Eine Sammlung benutzerdefinierter Attribute, die auf den <see langword="set" />-Accessor der Eigenschaft angewendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="f72bb-145">A collection of custom attributes to apply to the property's <see langword="set" /> accessor.</span></span></param>
        <summary><span data-ttu-id="f72bb-146">Erstellt ein Objekt, das eine Eigenschaft darstellt, die einem Typ hinzugefügt werden soll, der von der <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" />-Methode verwendet werden soll und die angegebenen benutzerdefinierten Attribute verwendet.</span><span class="sxs-lookup"><span data-stu-id="f72bb-146">Creates an object that represents a property to be added to a type, to be used with the <see cref="M:System.Reflection.Context.CustomReflectionContext.AddProperties(System.Type)" /> method and using the specified custom attributes.</span></span></summary>
        <returns><span data-ttu-id="f72bb-147">Ein Objekt, das die Eigenschaft darstellt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-147">An object that represents the property.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f72bb-148">Objekte, die von dieser Methode zurückgegeben werden, sind nicht vollständig <xref:System.Reflection.PropertyInfo> Objekte aus, und sollte verwendet werden, nur im Kontext des der <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="f72bb-148">Objects that are returned by this method are not complete <xref:System.Reflection.PropertyInfo> objects, and should be used only in the context of the <xref:System.Reflection.Context.CustomReflectionContext.AddProperties%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCustomAttributes">
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f72bb-149">Stellt beim Überschreiben in einer abgeleiteten Klasse eine geänderte Auflistung benutzerdefinierter Attribute für das angegebene Objekt bereit, wie in diesem Reflexionskontext dargestellt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-149">When overridden in a derived class, provides a modified collection of custom attributes for the specified object, as represented in this reflection context.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.MemberInfo member, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.MemberInfo member, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.MemberInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (member As MemberInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::MemberInfo ^ member, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.MemberInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (member, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="member" Type="System.Reflection.MemberInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="member"><span data-ttu-id="f72bb-150">Der Member, deren benutzerdefinierte Attribute zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="f72bb-150">The member whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="f72bb-151">Eine Sammlung der Attribute des Members im aktuellen Kontext.</span><span class="sxs-lookup"><span data-stu-id="f72bb-151">A collection of the member's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="f72bb-152">Stellt beim Überschreiben in einer abgeleiteten Klasse eine Liste benutzerdefinierter Attribute für den angegebenen Member bereit, wie in diesem Reflexionskontext dargestellt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-152">When overridden in a derived class, provides a list of custom attributes for the specified member, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="f72bb-153">Eine Sammlung, die die benutzerdefinierten Attribute des angegebenen Members in diesem Reflexionskontext darstellt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-153">A collection that represents the custom attributes of the specified member in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomAttributes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;object&gt; GetCustomAttributes (System.Reflection.ParameterInfo parameter, System.Collections.Generic.IEnumerable&lt;object&gt; declaredAttributes);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;object&gt; GetCustomAttributes(class System.Reflection.ParameterInfo parameter, class System.Collections.Generic.IEnumerable`1&lt;object&gt; declaredAttributes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.GetCustomAttributes(System.Reflection.ParameterInfo,System.Collections.Generic.IEnumerable{System.Object})" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCustomAttributes (parameter As ParameterInfo, declaredAttributes As IEnumerable(Of Object)) As IEnumerable(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ GetCustomAttributes(System::Reflection::ParameterInfo ^ parameter, System::Collections::Generic::IEnumerable&lt;System::Object ^&gt; ^ declaredAttributes);" />
      <MemberSignature Language="F#" Value="abstract member GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;&#xA;override this.GetCustomAttributes : System.Reflection.ParameterInfo * seq&lt;obj&gt; -&gt; seq&lt;obj&gt;" Usage="customReflectionContext.GetCustomAttributes (parameter, declaredAttributes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameter" Type="System.Reflection.ParameterInfo" />
        <Parameter Name="declaredAttributes" Type="System.Collections.Generic.IEnumerable&lt;System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="parameter"><span data-ttu-id="f72bb-154">Der Parameter, dessen benutzerdefinierte Attribute zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="f72bb-154">The parameter whose custom attributes will be returned.</span></span></param>
        <param name="declaredAttributes"><span data-ttu-id="f72bb-155">Eine Sammlung der Attribute des Parameters im aktuellen Kontext.</span><span class="sxs-lookup"><span data-stu-id="f72bb-155">A collection of the parameter's attributes in its current context.</span></span></param>
        <summary><span data-ttu-id="f72bb-156">Stellt beim Überschreiben in einer abgeleiteten Klasse eine Liste benutzerdefinierter Attribute für den angegebenen Parameter bereit, wie in diesem Reflexionskontext dargestellt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-156">When overridden in a derived class, provides a list of custom attributes for the specified parameter, as represented in this reflection context.</span></span></summary>
        <returns><span data-ttu-id="f72bb-157">Eine Sammlung, die die benutzerdefinierten Attribute des angegebenen Parameters in diesem Reflexionskontext darstellt.</span><span class="sxs-lookup"><span data-stu-id="f72bb-157">A collection that represents the custom attributes of the specified parameter in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapAssembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly MapAssembly (System.Reflection.Assembly assembly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.Assembly MapAssembly(class System.Reflection.Assembly assembly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapAssembly(System.Reflection.Assembly)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::Assembly ^ MapAssembly(System::Reflection::Assembly ^ assembly);" />
      <MemberSignature Language="F#" Value="override this.MapAssembly : System.Reflection.Assembly -&gt; System.Reflection.Assembly" Usage="customReflectionContext.MapAssembly assembly" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assembly" Type="System.Reflection.Assembly" />
      </Parameters>
      <Docs>
        <param name="assembly"><span data-ttu-id="f72bb-158">Die externe Darstellung der in diesem Kontext darzustellenden Assembly.</span><span class="sxs-lookup"><span data-stu-id="f72bb-158">The external representation of the assembly to represent in this context.</span></span></param>
        <summary><span data-ttu-id="f72bb-159">Ruft die Darstellung einer Assembly, die durch ein Objekt aus einem anderen Reflexionskontext dargestellt wird, in diesem Reflexionskontext ab.</span><span class="sxs-lookup"><span data-stu-id="f72bb-159">Gets the representation, in this reflection context, of an assembly that is represented by an object from another reflection context.</span></span></summary>
        <returns><span data-ttu-id="f72bb-160">Die Darstellung der Assembly in diesem Reflexionskontext.</span><span class="sxs-lookup"><span data-stu-id="f72bb-160">The representation of the assembly in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MapType">
      <MemberSignature Language="C#" Value="public override System.Reflection.TypeInfo MapType (System.Reflection.TypeInfo type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Reflection.TypeInfo MapType(class System.Reflection.TypeInfo type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Reflection.Context.CustomReflectionContext.MapType(System.Reflection.TypeInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function MapType (type As TypeInfo) As TypeInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Reflection::TypeInfo ^ MapType(System::Reflection::TypeInfo ^ type);" />
      <MemberSignature Language="F#" Value="override this.MapType : System.Reflection.TypeInfo -&gt; System.Reflection.TypeInfo" Usage="customReflectionContext.MapType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Reflection.Context</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.TypeInfo</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Reflection.TypeInfo" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="f72bb-161">Die externe Darstellung des in diesem Kontext darzustellenden Typs.</span><span class="sxs-lookup"><span data-stu-id="f72bb-161">The external representation of the type to represent in this context.</span></span></param>
        <summary><span data-ttu-id="f72bb-162">Ruft die Darstellung eines Typs, der durch ein Objekt aus einem anderen Reflexionskontext dargestellt wird, in diesem Reflexionskontext ab.</span><span class="sxs-lookup"><span data-stu-id="f72bb-162">Gets the representation, in this reflection context, of a type represented by an object from another reflection context.</span></span></summary>
        <returns><span data-ttu-id="f72bb-163">Die Darstellung des Typs in diesem Reflexionskontext.</span><span class="sxs-lookup"><span data-stu-id="f72bb-163">The representation of the type in this reflection context.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>