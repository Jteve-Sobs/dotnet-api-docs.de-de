<Type Name="EntityReference&lt;TEntity&gt;" FullName="System.Data.Objects.DataClasses.EntityReference&lt;TEntity&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e4e09577ab7da75e40b592ffc90d0a05e9439736" /><Meta Name="ms.sourcegitcommit" Value="83d757eaee63e682417f41094d711281691d9aba" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/10/2020" /><Meta Name="ms.locfileid" Value="78957355" /></Metadata><TypeSignature Language="C#" Value="public sealed class EntityReference&lt;TEntity&gt; : System.Data.Objects.DataClasses.EntityReference where TEntity : class, IEntityWithRelationships" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityReference`1&lt;class (class System.Data.Objects.DataClasses.IEntityWithRelationships) TEntity&gt; extends System.Data.Objects.DataClasses.EntityReference" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.EntityReference`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityReference(Of TEntity)&#xA;Inherits EntityReference" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : class, IEntityWithRelationshipspublic ref class EntityReference sealed : System::Data::Objects::DataClasses::EntityReference" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="F#" Value="type EntityReference&lt;'Entity (requires 'Entity : null and 'Entity :&gt; IEntityWithRelationships)&gt; = class&#xA;    inherit EntityReference" FrameworkAlternate="netframework-3.5" />
  <TypeSignature Language="C#" Value="public sealed class EntityReference&lt;TEntity&gt; : System.Data.Objects.DataClasses.EntityReference where TEntity : class" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityReference`1&lt;class TEntity&gt; extends System.Data.Objects.DataClasses.EntityReference" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class EntityReference sealed : System::Data::Objects::DataClasses::EntityReference" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <TypeSignature Language="F#" Value="type EntityReference&lt;'Entity (requires 'Entity : null)&gt; = class&#xA;    inherit EntityReference" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.EntityReference</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <typeparam name="TEntity">Der Entitätstyp des Verweises.</typeparam>
    <summary>Stellt ein verknüpftes Ende einer Zuordnung mit einer Multiplizität von null oder eins dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks
 Eine Navigationseigenschaft gibt ein <xref:System.Data.Objects.DataClasses.EntityReference%601>-Objekt zurück, wenn das verknüpfte Ende eine Multiplizität von null oder eins hat. Weitere Informationen finden Sie unter [NavigationProperty-Element (CSDL)](https://msdn.microsoft.com/library/5829a238-a50e-4c81-901d-7b54fc00f27e).

 Zu einem <xref:System.Data.Objects.DataClasses.EntityReference%601>-Objekt kann eine <xref:System.Data.Objects.DataClasses.EntityCollection%601> (1:n-Beziehung) oder ein <xref:System.Data.Objects.DataClasses.EntityReference%601> (1:1-Beziehung) am anderen Ende der Beziehung gehören. Wenn ein <xref:System.Data.Objects.DataClasses.EntityReference%601> und eine <xref:System.Data.Objects.DataClasses.EntityCollection%601> entgegengesetzte Enden derselben Beziehung modellieren, wird die Integrität der Beziehung auf der Objektebene bewahrt.

 Diese Klasse kann nicht vererbt werden.



## Examples
 In diesem Beispiel wird aufgezeigt, wie das <xref:System.Data.Objects.DataClasses.EntityReference%601>-Objekt verwendet wird, um die Beziehung zwischen einem `SalesOrderHeader`-Objekt und einem verbundenen `Address`-Objekt zu ändern, das die Lieferadresse der Bestellung darstellt.

 [!code-csharp[DP ObjectServices Concepts#ChangeObjectRelationship](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#changeobjectrelationship)]
 [!code-vb[DP ObjectServices Concepts#ChangeObjectRelationship](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#changeobjectrelationship)]

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityReference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityReference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Erstellt eine neue Instanz von <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Attach : 'Entity -&gt; unit" Usage="entityReference.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">Das anzufügende Objekt.</param>
        <summary>Erstellt eine m:1- oder 1:1-Beziehung zwischen zwei Objekten im Objektkontext.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Die <xref:System.Data.Objects.DataClasses.EntityReference%601.Attach%2A>-Methode wird verwendet, um eine Beziehung zwischen einem Objekt und einem verbundenen Objekt zu definieren, wenn beide Objekte bereits einem Objektkontext angefügt wurden. Das verbundene Objekt wird auf die <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A>-Eigenschaft festgelegt, wenn das verbundene Objekt noch nicht dem Objektkontext angefügt wurde. Wenn beide Objekte getrennt sind, kann die Beziehung auch definiert werden, indem das verbundene Objekt auf die <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A>-Eigenschaft festgelegt und anschließend das Stammobjekt im Objektdiagramm angefügt wird. Weitere Informationen finden Sie unter Anfügen [und trennen von Objekten](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb738470(v=vs.100)).

 Das mit dieser <xref:System.Data.Objects.DataClasses.EntityReference%601> verknüpfte Objekt sowie alle Objekte, die daran angefügt werden, müssen den Status <xref:System.Data.EntityState.Unchanged> oder <xref:System.Data.EntityState.Modified> aufweisen.

 Ein Objekt im Status <xref:System.Data.EntityState.Deleted> kann nur angefügt werden, wenn der <xref:System.Data.Objects.ObjectStateManager> die Beziehungsinstanz bereits nachverfolgt.

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Wenn die <paramref name="entity" /><see langword="null" /> ist.</exception>
        <exception cref="T:System.InvalidOperationException">Wenn <paramref name="entity" /> nicht mit dem aktuell verknüpften Ende verknüpft werden kann. Dies kann auftreten, wenn die Zuordnung im konzeptionellen Schema keine Beziehungen zwischen den beiden Typen unterstützt.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceQuery">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TEntity&gt; CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!TEntity&gt; CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSourceQuery () As ObjectQuery(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;TEntity&gt; ^ CreateSourceQuery();" />
      <MemberSignature Language="F#" Value="override this.CreateSourceQuery : unit -&gt; System.Data.Objects.ObjectQuery&lt;'Entity (requires 'Entity : null and 'Entity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt;" Usage="entityReference.CreateSourceQuery " FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="override this.CreateSourceQuery : unit -&gt; System.Data.Objects.ObjectQuery&lt;'Entity (requires 'Entity : null)&gt;" Usage="entityReference.CreateSourceQuery " FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine äquivalente Objektabfrage, die das verbundene Objekt zurückgibt.</summary>
        <returns>Eine <see cref="T:System.Data.Objects.ObjectQuery`1" />, die das verbundene Objekt zurückgibt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode wird verwendet, um eine neue Instanz von <xref:System.Data.Objects.ObjectQuery%601> abzurufen, die bei ihrer Ausführung das verbundene Objekt zurückgibt. Dies ist als Anfangspunkt für eine komplexere Join-, Vereinigungs- oder gefilterte Abfrage nützlich, oder um das Objekt, auf das verwiesen wird, mithilfe der <xref:System.Data.Objects.MergeOption.NoTracking>-Option in einem getrennten Zustand zurückzugeben.

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wenn das Objekt den Status <see cref="F:System.Data.EntityState.Added" /> aufweist.

- oder -

Wenn das Objekt den Status <see cref="F:System.Data.EntityState.Detached" /> aufweist und für <see cref="P:System.Data.Objects.ObjectQuery.MergeOption" /> nicht <see cref="F:System.Data.Objects.MergeOption.NoTracking" /> festgelegt ist.</exception>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Load (mergeOption As MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Load : System.Data.Objects.MergeOption -&gt; unit" Usage="entityReference.Load mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">Gibt an, wie das Objekt zurückgegeben werden soll, wenn es bereits im <see cref="T:System.Data.Objects.ObjectContext" /> vorhanden ist.</param>
        <summary>Lädt das verbundene Objekt für diesen <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> mit der angegebenen Mergeoption.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Diese Methode wird verwendet, um das verbundene Objekt zu laden.

 Nachdem es geladen wurde, wird auf das verbundene Objekt mit der <xref:System.Data.Objects.DataClasses.EntityReference%601.Value%2A>-Eigenschaft zugegriffen.

 Um verknüpfte Objekte explizit zu laden, müssen Sie die `Load`-Methode für das verknüpfte Ende abrufen, das von der Navigations Eigenschaft zurückgegeben wird. Rufen Sie für eine 1:n-Beziehung die <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A>-Methode für <xref:System.Data.Objects.DataClasses.EntityCollection%601> auf und für eine 1:1-Beziehung die <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A>-Methode für <xref:System.Data.Objects.DataClasses.EntityReference%601>. Dadurch werden die Daten der verbundenen Objekte in den Objektkontext geladen. Wenn eine Abfrageergebnisse zurückgibt, können Sie die Auflistung von-Objekten mithilfe einer `foreach`-Schleife (`For Each...Next` in Visual Basic) durchlaufen und die `Load`-Methode bedingt für <xref:System.Data.Objects.DataClasses.EntityReference%601>-und <xref:System.Data.Objects.DataClasses.EntityCollection%601>-Eigenschaften für jede Entität in den Ergebnissen aufzurufen.

 Die <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A>-Methode lädt verbundene Objekte aus der Datenquelle, unabhängig davon, ob <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> `true`ist.

> [!NOTE]
>  Beim Aufruf der <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A>-Methode in einer `foreach` (C#)- oder `For Each` (Visual Basic)-Enumeration wird von Object Services ein neuer Datenleser geöffnet. Diese Operation schlägt fehl, es sei denn, es wurde "Multiple Active Result Sets" aktiviert, indem in der Verbindungszeichenfolge `multipleactiveresultsets=true` angegeben wurde. Das Ergebnis der Abfrage kann auch in eine <xref:System.Collections.Generic.List%601>-Auflistung geladen werden. Dadurch wird der Datenreader geschlossen, und die Auflistung kann durchlaufen werden, um Objekte, auf die verwiesen wird, zu laden.

Diese Methode ruft die interne `RelatedEnd.ValidateLoad`-Methode auf, bevor das verknüpfte Objekt geladen wird, das überprüft, ob ein Aufruf von <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> über die korrekten Bedingungen verfügt. Die `RelatedEnd.ValidateLoad`-Methode überprüft Folgendes:

* Es ist ein gültiger <xref:System.Data.Objects.ObjectContext> vorhanden.
* Die Entität befindet sich nicht in einem <xref:System.Data.EntityState.Deleted> Zustand.
* <xref:System.Data.Objects.MergeOption> für <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> muss nur dann <xref:System.Data.Objects.MergeOption.NoTracking> werden, wenn die Quell Entität <xref:System.Data.Objects.MergeOption.NoTracking>ist. Wenn die Quell Entität mit einer anderen <xref:System.Data.Objects.MergeOption>abgerufen wurde, kann der <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> alles als <xref:System.Data.Objects.MergeOption.NoTracking> sein (z. b. wurde die Entität mit <xref:System.Data.Objects.MergeOption.OverwriteChanges> geladen, und die <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>-Option kann <xref:System.Data.Objects.MergeOption.AppendOnly>werden).
* Wenn `mergeOption` <xref:System.Data.Objects.MergeOption.NoTracking>ist, wird <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> nicht für eine bereits geladene Entität aufgerufen und <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> nicht für eine nicht-leere, nicht verfolgte <xref:System.Data.Objects.DataClasses.RelatedEnd>aufgerufen.

 Wenn das verbundene Objekt bereits in den <xref:System.Data.Objects.ObjectContext>geladen ist, erzwingt die <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A>-Methode die vom `mergeOption`-Parameter angegebene <xref:System.Data.Objects.MergeOption>. Weitere Informationen finden Sie unter [Identitäts Auflösung, Zustands Verwaltung und Änderungsnachverfolgung](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896269(v=vs.100)).

 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Quelle der <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> ist <see langword="null" />.

- oder -

Eine Abfrage hat mehr als ein verknüpftes Ende zurückgegeben.

- oder -

Eine Abfrage hat keine verknüpften Enden zurückgegeben, obwohl ein verknüpftes Ende erwartet wurde.</exception>
        <related type="Article" href="~/docs/framework/data/adonet/ef/querying-a-conceptual-model.md">Abfragen von Daten als Objekte (Entity Framework)</related>
      </Docs>
    </Member>
    <Member MemberName="OnRefDeserialized">
      <MemberSignature Language="C#" Value="public void OnRefDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnRefDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnRefDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnRefDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnRefDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnRefDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityReference.OnRefDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context">Der serialisierte Stream.</param>
        <summary>Diese Methode wird intern verwendet, um verknüpfte Entitätsobjekte zu serialisieren.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityReference`1.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnSerializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSerializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnSerializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityReference.OnSerializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnSerializing</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context">Der serialisierte Stream.</param>
        <summary>Diese Methode wird intern verwendet, um verknüpfte Entitätsobjekte zu serialisieren.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public TEntity Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TEntity Value" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityReference`1.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As TEntity" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TEntity Value { TEntity get(); void set(TEntity value); };" />
      <MemberSignature Language="F#" Value="member this.Value : 'Entity with get, set" Usage="System.Data.Objects.DataClasses.EntityReference&lt;'Entity (requires 'Entity : null and 'Entity :&gt; System.Data.Objects.DataClasses.IEntityWithRelationships)&gt;.Value" FrameworkAlternate="netframework-3.5" />
      <MemberSignature Language="F#" Value="member this.Value : 'Entity with get, set" Usage="System.Data.Objects.DataClasses.EntityReference&lt;'Entity (requires 'Entity : null)&gt;.Value" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.SoapIgnore</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>TEntity</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das von diesem <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> zurückgegebene verbundene Objekt ab oder legt dieses fest.</summary>
        <value>Das von diesem <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> zurückgegebene Objekt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks
 Es wird kein Wert zugewiesen, wenn der Wert, der festgelegt wird, sich nicht vom aktuellen Wert unterscheidet.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
