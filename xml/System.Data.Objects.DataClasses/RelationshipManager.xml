<Type Name="RelationshipManager" FullName="System.Data.Objects.DataClasses.RelationshipManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="00e3559657d336f90ccc7415e98a17049b780594" /><Meta Name="ms.sourcegitcommit" Value="e7974886b08aa83a8fb461e8550f31a7d4331ee3" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/23/2019" /><Meta Name="ms.locfileid" Value="68395714" /></Metadata><TypeSignature Language="C#" Value="public class RelationshipManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit RelationshipManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.RelationshipManager" />
  <TypeSignature Language="VB.NET" Value="Public Class RelationshipManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class RelationshipManager" />
  <TypeSignature Language="F#" Value="type RelationshipManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Wird verwendet, um Beziehungen zwischen Objekten im Objektkontext nachzuverfolgen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.RelationshipManager> wird verwendet, um Beziehungen zwischen Objekten in einem Objektkontext nachzuverfolgen. Es gibt für jede im Objektkontext nachverfolgte Beziehung eine Instanz der <xref:System.Data.Objects.DataClasses.RelationshipManager>-Klasse. Beziehungen werden durch Zuordnungen in einem konzeptionellen Modell definiert. Weitere Informationen finden Sie unter [Zuordnungselement (CSDL)](https://msdn.microsoft.com/library/c305169a-8af7-432f-9ba7-800a163aed41).  
  
   
  
## Examples  
 Das Beispiel in diesem Thema basiert auf dem [AdventureWorks Sales-Modell](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). Im Beispiel werden der `SalesOrderHeader` `Contact` -Entität neue Entitäten hinzugefügt. Anschließend werden alle verknüpften Enden von der `Contact` Entität abgerufen und der Beziehungs Name, der Quell Rollenname und der Ziel Rollenname für jedes verknüpfte Ende angezeigt.  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Data.Objects.DataClasses.RelationshipManager Create (System.Data.Objects.DataClasses.IEntityWithRelationships owner);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Data.Objects.DataClasses.RelationshipManager Create(class System.Data.Objects.DataClasses.IEntityWithRelationships owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.Create(System.Data.Objects.DataClasses.IEntityWithRelationships)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (owner As IEntityWithRelationships) As RelationshipManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::Objects::DataClasses::RelationshipManager ^ Create(System::Data::Objects::DataClasses::IEntityWithRelationships ^ owner);" />
      <MemberSignature Language="F#" Value="static member Create : System.Data.Objects.DataClasses.IEntityWithRelationships -&gt; System.Data.Objects.DataClasses.RelationshipManager" Usage="System.Data.Objects.DataClasses.RelationshipManager.Create owner" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.RelationshipManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="owner" Type="System.Data.Objects.DataClasses.IEntityWithRelationships" />
      </Parameters>
      <Docs>
        <param name="owner">Verweis auf die Entität, die diese Methode aufruft.</param>
        <summary>Erstellt ein neues <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />-Objekt.</summary>
        <returns>Der angeforderte <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.Objects.DataClasses.RelationshipManager.Create%2A>-Methode wird von Objekten verwendet, die <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> implementieren. Wenn Object Services die <xref:System.Data.Objects.DataClasses.RelationshipManager>-Eigenschaft eines Objekts anfordert, das <xref:System.Data.Objects.DataClasses.IEntityWithRelationships> implementiert, und für das Objekt noch kein Beziehungs-Manager vorhanden ist, wird die <xref:System.Data.Objects.DataClasses.RelationshipManager.Create%2A>-Methode aufgerufen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllRelatedEnds">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Objects.DataClasses.IRelatedEnd&gt; GetAllRelatedEnds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.DataClasses.IRelatedEnd&gt; GetAllRelatedEnds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds" />
      <MemberSignature Language="VB.NET" Value="Public Iterator Function GetAllRelatedEnds () As IEnumerable(Of IRelatedEnd)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Objects::DataClasses::IRelatedEnd ^&gt; ^ GetAllRelatedEnds();" />
      <MemberSignature Language="F#" Value="member this.GetAllRelatedEnds : unit -&gt; seq&lt;System.Data.Objects.DataClasses.IRelatedEnd&gt;" Usage="relationshipManager.GetAllRelatedEnds " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Data.Objects.DataClasses.RelationshipManager/&lt;GetAllRelatedEnds&gt;d__40))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.6">
          <AttributeName>System.Runtime.CompilerServices.IteratorStateMachine(typeof(System.Data.Objects.DataClasses.RelationshipManager/&lt;GetAllRelatedEnds&gt;d__1))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.DataClasses.IRelatedEnd&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Enumeration aller verknüpften Enden zurück, die vom Beziehungs-Manager verwaltet werden.</summary>
        <returns>Ein <see cref="T:System.Collections.Generic.IEnumerable`1" /> von Objekten, die <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" /> implementieren. Es wird eine leere Enumeration zurückgegeben, wenn die Beziehungen noch nicht aufgefüllt sind.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.Objects.DataClasses.RelationshipManager.GetAllRelatedEnds%2A> -Methode gibt eine Enumeration <xref:System.Data.Objects.DataClasses.EntityCollection%601> von <xref:System.Data.Objects.DataClasses.EntityReference%601> -Objekten und-Objekten zurück. <xref:System.Data.Objects.DataClasses.EntityCollection%601>und <xref:System.Data.Objects.DataClasses.EntityReference%601> sind konkrete Typen, die von <xref:System.Data.Objects.DataClasses.RelatedEnd>abgeleitet werden. Die <xref:System.Data.Objects.DataClasses.RelatedEnd> abstrakte-Klasse implementiert <xref:System.Data.Objects.DataClasses.IRelatedEnd> die-Schnittstelle.  
  
   
  
## Examples  
 Das Beispiel in diesem Thema basiert auf dem [AdventureWorks Sales-Modell](https://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832). Im Beispiel werden der `SalesOrderHeader` `Contact` -Entität neue Entitäten hinzugefügt. Anschließend werden alle verknüpften Enden von der `Contact` Entität abgerufen und Beziehungs Name, Quell Rollenname und Ziel Rollenname für jedes verknüpfte Ende angezeigt.  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedCollection&lt;TTargetEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt; GetRelatedCollection&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName) where TTargetEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.EntityCollection`1&lt;!!TTargetEntity&gt; GetRelatedCollection&lt;class TTargetEntity&gt;(string relationshipName, string targetRoleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedCollection``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedCollection(Of TTargetEntity As Class) (relationshipName As String, targetRoleName As String) As EntityCollection(Of TTargetEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class System::Data::Objects::DataClasses::EntityCollection&lt;TTargetEntity&gt; ^ GetRelatedCollection(System::String ^ relationshipName, System::String ^ targetRoleName);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedCollection : string * string -&gt; System.Data.Objects.DataClasses.EntityCollection&lt;'argetEntity (requires 'argetEntity : null)&gt; (requires 'argetEntity : null)" Usage="relationshipManager.GetRelatedCollection (relationshipName, targetRoleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTargetEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TTargetEntity">Der Typ der zurückgegebenen <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</typeparam>
        <param name="relationshipName">Der Name der Beziehung, zu der navigiert werden soll. Der Beziehungsname ist nicht durch Namespace gekennzeichnet.</param>
        <param name="targetRoleName">Der Name der Zielrolle für die Navigation. Gibt die Richtung der Navigation in der Beziehung an.</param>
        <summary>Ruft eine <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> von verknüpften Objekten mit dem angegebenen Beziehungsnamen und Zielrollennamen ab.</summary>
        <returns>Die <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> verknüpfter Objekte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ruft eine <xref:System.Data.Objects.DataClasses.EntityCollection%601> von verknüpften Objekten mit dem angegebenen Beziehungs- und Zielrollennamen ab.  
  
 Der Beziehungsname sollte kein namespacequalifizierter Name sein. Es tritt ein Fehler auf, wenn Sie den Namespace dem Beziehungsnamen voranstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die angegebene Rolle hat statt einer <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> einen <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> zurückgegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedEnd">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.IRelatedEnd GetRelatedEnd (string relationshipName, string targetRoleName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.IRelatedEnd GetRelatedEnd(string relationshipName, string targetRoleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedEnd(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedEnd (relationshipName As String, targetRoleName As String) As IRelatedEnd" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::DataClasses::IRelatedEnd ^ GetRelatedEnd(System::String ^ relationshipName, System::String ^ targetRoleName);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedEnd : string * string -&gt; System.Data.Objects.DataClasses.IRelatedEnd" Usage="relationshipManager.GetRelatedEnd (relationshipName, targetRoleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.IRelatedEnd</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="relationshipName">Der Name der Beziehung, in der <paramref name="targetRoleName" /> definiert ist. Der Beziehungsname ist nicht durch Namespace gekennzeichnet.</param>
        <param name="targetRoleName">Die Zielrolle, mit der das andere Ende von <paramref name="relationshipName" /> abgerufen werden soll.</param>
        <summary>Gibt eine <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> oder einen <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> vom ordnungsgemäßen Typ für die angegebene Zielrolle in einer Beziehung zurück.</summary>
        <returns>Das <see cref="T:System.Data.Objects.DataClasses.IRelatedEnd" />, das die abgerufene <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> oder den abgerufenen <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> darstellt.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode ist für Szenarios gedacht, in denen der Benutzer über keine vollständigen Metadaten verfügt, einschließlich der Informationen zum statischen Typ für beide Enden der Beziehung. Diese Metadaten sind für jeden Entitätstyp der Beziehung im <xref:System.Data.Objects.DataClasses.EdmRelationshipAttribute>-Objekt angegeben, sodass sie vom Metadatensystem abhängig vom angegebenen Beziehungsnamen und Zielrollennamen abgerufen werden können.  
  
 Der Beziehungsname sollte kein namespacequalifizierter Name sein. Es tritt ein Fehler auf, wenn Sie den Namespace dem Beziehungsnamen voranstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="relationshipName" /> oder <paramref name="targetRoleName" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Der Quelltyp entspricht nicht dem Typ des Besitzers.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="targetRoleName" /> ist ungültig.  
  
- oder - 
Der Beziehungstyp konnte in den Metadaten nicht gefunden werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelatedReference&lt;TTargetEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt; GetRelatedReference&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName) where TTargetEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.EntityReference`1&lt;!!TTargetEntity&gt; GetRelatedReference&lt;class TTargetEntity&gt;(string relationshipName, string targetRoleName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.GetRelatedReference``1(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelatedReference(Of TTargetEntity As Class) (relationshipName As String, targetRoleName As String) As EntityReference(Of TTargetEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class System::Data::Objects::DataClasses::EntityReference&lt;TTargetEntity&gt; ^ GetRelatedReference(System::String ^ relationshipName, System::String ^ targetRoleName);" />
      <MemberSignature Language="F#" Value="member this.GetRelatedReference : string * string -&gt; System.Data.Objects.DataClasses.EntityReference&lt;'argetEntity (requires 'argetEntity : null)&gt; (requires 'argetEntity : null)" Usage="relationshipManager.GetRelatedReference (relationshipName, targetRoleName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTargetEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
      </Parameters>
      <Docs>
        <typeparam name="TTargetEntity">Der Typ der zurückgegebenen <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</typeparam>
        <param name="relationshipName">Der Name der Beziehung, zu der navigiert werden soll. Der Beziehungsname ist nicht durch Namespace gekennzeichnet.</param>
        <param name="targetRoleName">Der Name der Zielrolle für die Navigation. Gibt die Richtung der Navigation in der Beziehung an.</param>
        <summary>Ruft mit der angegebenen Kombination von Beziehungsname und Zielrollenname die <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> für ein verknüpftes Objekt ab.</summary>
        <returns>Die <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> eines verknüpften Objekts.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Beziehungsname sollte kein namespacequalifizierter Name sein. Es tritt ein Fehler auf, wenn Sie den Namespace dem Beziehungsnamen voranstellen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die angegebene Rolle hat statt einer <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> einen <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> zurückgegeben.</exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeRelatedCollection&lt;TTargetEntity&gt;">
      <MemberSignature Language="C#" Value="public void InitializeRelatedCollection&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName, System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt; entityCollection) where TTargetEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitializeRelatedCollection&lt;class TTargetEntity&gt;(string relationshipName, string targetRoleName, class System.Data.Objects.DataClasses.EntityCollection`1&lt;!!TTargetEntity&gt; entityCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection``1(System.String,System.String,System.Data.Objects.DataClasses.EntityCollection{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeRelatedCollection(Of TTargetEntity As Class) (relationshipName As String, targetRoleName As String, entityCollection As EntityCollection(Of TTargetEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class void InitializeRelatedCollection(System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::Objects::DataClasses::EntityCollection&lt;TTargetEntity&gt; ^ entityCollection);" />
      <MemberSignature Language="F#" Value="member this.InitializeRelatedCollection : string * string * System.Data.Objects.DataClasses.EntityCollection&lt;'argetEntity (requires 'argetEntity : null)&gt; -&gt; unit (requires 'argetEntity : null)" Usage="relationshipManager.InitializeRelatedCollection (relationshipName, targetRoleName, entityCollection)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTargetEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
        <Parameter Name="entityCollection" Type="System.Data.Objects.DataClasses.EntityCollection&lt;TTargetEntity&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TTargetEntity">Der Typ der <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />, die initialisiert wird.</typeparam>
        <param name="relationshipName">Der Beziehungsname.</param>
        <param name="targetRoleName">Der Rollenname des verknüpften Endes.</param>
        <param name="entityCollection">Die zu initialisierende <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</param>
        <summary>Initialisiert eine vorhandene <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />, die mit dem parameterlosen Konstruktor erstellt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection%2A> -Methode initialisiert eine <xref:System.Data.Objects.DataClasses.EntityCollection%601> vorhandene, die mit dem Parameter losen Konstruktor erstellt wurde. Die <xref:System.Data.Objects.DataClasses.EntityCollection%601> wird mit dem bereitgestellten Beziehungs- und Zielrollennamen initialisiert.  
  
 Die <xref:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedCollection%2A>-Methode wird nur während der Deserialisierung verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wenn der bereitgestellte <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> bereits initialisiert ist.  
  
- oder - 
Wenn der Beziehungs-Manager bereits an einen <see cref="T:System.Data.Objects.ObjectContext" /> angefügt ist.  
  
- oder - 
Wenn der Beziehungs-Manager bereits eine Beziehung mit diesem Namen und dieser Zielrolle enthält.</exception>
      </Docs>
    </Member>
    <Member MemberName="InitializeRelatedReference&lt;TTargetEntity&gt;">
      <MemberSignature Language="C#" Value="public void InitializeRelatedReference&lt;TTargetEntity&gt; (string relationshipName, string targetRoleName, System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt; entityReference) where TTargetEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InitializeRelatedReference&lt;class TTargetEntity&gt;(string relationshipName, string targetRoleName, class System.Data.Objects.DataClasses.EntityReference`1&lt;!!TTargetEntity&gt; entityReference) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference``1(System.String,System.String,System.Data.Objects.DataClasses.EntityReference{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub InitializeRelatedReference(Of TTargetEntity As Class) (relationshipName As String, targetRoleName As String, entityReference As EntityReference(Of TTargetEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TTargetEntity&gt;&#xA; where TTargetEntity : class void InitializeRelatedReference(System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::Objects::DataClasses::EntityReference&lt;TTargetEntity&gt; ^ entityReference);" />
      <MemberSignature Language="F#" Value="member this.InitializeRelatedReference : string * string * System.Data.Objects.DataClasses.EntityReference&lt;'argetEntity (requires 'argetEntity : null)&gt; -&gt; unit (requires 'argetEntity : null)" Usage="relationshipManager.InitializeRelatedReference (relationshipName, targetRoleName, entityReference)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TTargetEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
        <Parameter Name="entityReference" Type="System.Data.Objects.DataClasses.EntityReference&lt;TTargetEntity&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TTargetEntity">Der Typ der <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />, die initialisiert wird.</typeparam>
        <param name="relationshipName">Der Beziehungsname.</param>
        <param name="targetRoleName">Der Rollenname des verknüpften Endes.</param>
        <param name="entityReference">Die zu initialisierende <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />.</param>
        <summary>Initialisiert eine vorhandene <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" />, die mit dem parameterlosen Konstruktor erstellt wurde.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference%2A> -Methode initialisiert eine <xref:System.Data.Objects.DataClasses.EntityReference%601> vorhandene, die mit dem Parameter losen Konstruktor erstellt wurde. Die <xref:System.Data.Objects.DataClasses.EntityReference%601> wird mit dem bereitgestellten Beziehungs- und Zielrollennamen initialisiert.  
  
 Die <xref:System.Data.Objects.DataClasses.RelationshipManager.InitializeRelatedReference%2A>-Methode wird nur während der Deserialisierung verwendet.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Wenn der bereitgestellte <see cref="T:System.Data.Objects.DataClasses.EntityReference`1" /> bereits initialisiert ist.  
  
- oder - 
Wenn der Beziehungs-Manager bereits an einen <see cref="T:System.Data.Objects.ObjectContext" /> angefügt ist.  
  
- oder - 
Wenn der Beziehungs-Manager bereits eine Beziehung mit diesem Namen und dieser Zielrolle enthält.</exception>
      </Docs>
    </Member>
    <Member MemberName="OnDeserialized">
      <MemberSignature Language="C#" Value="public void OnDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.OnDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="relationshipManager.OnDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" Index="0" FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="context">Der serialisierte Stream.</param>
        <summary>Wird intern verwendet, um Entitätsobjekte gemeinsam mit den <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />-Instanzen zu deserialisieren.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.RelationshipManager.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnSerializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSerializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnSerializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="relationshipManager.OnSerializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnSerializing</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">Beschreibt die Quelle und das Ziel eines angegebenen serialisierten Streams und stellt einen zusätzlichen aufruferdefinierten Kontext bereit.</param>
        <summary>Wird von Object Services aufgerufen, um einen <see cref="T:System.Data.EntityKey" /> für die binäre Serialisierung mit einer serialisierten Beziehung vorzubereiten.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Es werden nur binäre Serialisierungen von Beziehungen unterstützt. Vollständige Objektdiagramme, einschließlich der Beziehungen, werden bei Windows Communication Foundation- und XML-Serialisierungen nicht unterstützt. Weitere Informationen finden Sie unter [Serialisieren von Objekten](https://msdn.microsoft.com/library/06c77f9b-5b2e-4c78-b3e3-8c148ba0ea99).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>