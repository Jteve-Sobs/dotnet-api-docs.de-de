<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XsdDataContractImporter.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d1e9a9c7ca5420f198e5489d5848a82e872d5211.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d1e9a9c7ca5420f198e5489d5848a82e872d5211</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Allows the transformation of a set of XML schema files (.xsd) into common language runtime (CLR) types.</source>
          <target state="translated">Ermöglicht die Transformation einer Reihe von XML-Schemadateien (.xsd) in Common Language Runtime (CLR)-Typen.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> if you are creating a Web service that must interoperate with an existing Web service, or to create data contract types from XML schemas.</source>
          <target state="translated">Verwenden Sie den <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph>, wenn Sie einen Webdienst erstellen, der mit einem bestehenden Webdienst zusammenarbeiten muss, oder um Datenvertragstypen aus XML-Schemas zu erstellen.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source><ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> will transform a set of XML schemas and create the <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph> types that represent the data contract in a selected programming language.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> transformiert eine Gruppe von XML-Schemas und erstellt die <ph id="ph2">[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]</ph>-Typen, die den Datenvertrag in einer ausgewählten Programmiersprache darstellen.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>To create the code, use the classes in the <ph id="ph1">&lt;xref:System.CodeDom&gt;</ph> namespace.</source>
          <target state="translated">Um den Code zu erstellen, verwenden Sie die Klassen im <ph id="ph1">&lt;xref:System.CodeDom&gt;</ph>-Namespace.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Conversely, use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> class when you have created a Web service that incorporates data represented by CLR types and when you need to export XML schemas for each data type to be consumed by other Web services.</source>
          <target state="translated">Umgekehrt können Sie die <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph>-Klasse verwenden, wenn Sie einen Webdienst erstellt haben, der Daten enthält, die als CLR-Typen dargestellt werden, und wenn Sie für die von anderen Webdiensten zu verwendenden Datentypen XML-Schemas exportieren wollen.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>That is, <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> transforms a set of CLR types into a set of XML schemas.</source>
          <target state="translated">Dies bedeutet, dass <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractExporter&gt;</ph> einen Satz von CLR-Typen in einen Satz von XML-Schemas transformiert.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>To generate CLR types from XML schemas at design time, use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.</source>
          <target state="translated">Verwenden Sie zum Generieren von CLR-Typen aus XML-Schemas zur Entwurfszeit die <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>To generated code from XSD files, use the <ph id="ph1">`/dataContractOnly`</ph> switch of the tool.</source>
          <target state="translated">Verwenden Sie erzeugt Code aus XSD-Dateien, die <ph id="ph1">`/dataContractOnly`</ph> -Schalter des Tools.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>You can also use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> if you need more control over the process or need to do it programmatically.</source>
          <target state="translated">Sie können auch den <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> verwenden, wenn Sie mehr Kontrolle über den Vorgang benötigen oder wenn dieser programmgesteuert sein muss.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> method to create a <ph id="ph3">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird ein  <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> erstellt und die <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph>-Methode aufgerufen, um einen <ph id="ph3">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> zu erstellen.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> is then used to create both Visual C# and Visual Basic code files.</source>
          <target state="translated">Der <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> wird dann verwendet, um sowohl Visual C#- als auch Visual Basic-Codedateien zu erstellen.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)">
          <source>The <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> that will be used to store the code.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>, der zum Speichern des Codes verwendet wird.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /&gt;</ph> class with the <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> that will be used to generate CLR code.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /&gt;</ph>-Klasse mit dem <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>, der zur Generierung von CLR-Code verwendet wird.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)">
          <source>Use this constructor to add more code into a <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> that has already been generated.</source>
          <target state="translated">Verwenden Sie diesen Konstruktor, um einem <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>, der bereits generiert wurde, mehr Code hinzuzufügen.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> and calls the <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> method to create a <ph id="ph3">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird ein  <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> erstellt und die <ph id="ph2">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph>-Methode aufgerufen, um einen <ph id="ph3">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> zu erstellen.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.#ctor(System.CodeDom.CodeCompileUnit)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> is then used to create both Visual C# and Visual Basic code files.</source>
          <target state="translated">Der <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> wird dann verwendet, um sowohl Visual C#- als auch Visual Basic-Codedateien zu erstellen.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Gets a value that indicates whether the schemas can be transformed into a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die Schemas in einen <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> transformiert werden können.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>For more information about types that can be imported, see <bpt id="p1">[</bpt>Types Supported by the Data Contract Serializer<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Typen, die importiert werden können, finden Sie unter <bpt id="p1">[</bpt>Typen unterstützt, durch den Datenvertragsserialisierer<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schemas to transform.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, der die zu transformierenden Schemas enthält.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
          <source>Gets a value that indicates whether the schemas contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> can be transformed into a <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die in einem <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> enthaltenen Schemas in einen <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> transformiert werden können.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schemas can be transformed to data contract types; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Schemas in Datenvertragstypen transformiert werden können, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
          <source>The following example calls the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A&gt;</ph> method to determine whether the <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> can be generated.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A&gt;</ph>-Methode aufgerufen, um festzustellen, ob der <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> generiert werden kann.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet)">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">Ein in den Import einbezogener Datenvertrag ist ungültig.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schemas to transform.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, der die zu transformierenden Schemas enthält.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents the set of schema types to import.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> von <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>, der den zu importierenden Satz von Schematypen darstellt.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>Gets a value that indicates whether the specified set of types contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> can be transformed into CLR types generated into a <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">Ruft einen Wert ab, der anzeigt, ob der in einem <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> enthaltene angegebene Typensatz in CLR-Typen transformiert werden kann, die in einen <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> generiert werden.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schemas can be transformed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Schemas transformiert werden können, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeNames" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph>-Parameter oder der <ph id="ph2">&lt;paramref name="typeNames" /&gt;</ph>-Parameter ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">Ein in den Import einbezogener Datenvertrag ist ungültig.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to import.</source>
          <target state="translated">Ein zu importierender <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>A specific <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph> to check in the set of schemas.</source>
          <target state="translated">Ein bestimmter <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, um den Schemasatz zu prüfen.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>Gets a value that indicates whether a specific schema element contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> can be imported.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein bestimmtes in einem <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> enthaltenes Schemaelement importiert werden kann.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the element can be imported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Element importiert werden kann, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>This method checks the type and all schema types referenced from it.</source>
          <target state="translated">Diese Methode prüft den Typ und alle Schematypen, auf die sie verweist.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> or <ph id="ph2">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph>-Parameter oder der <ph id="ph2">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">Ein in den Import einbezogener Datenvertrag ist ungültig.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schema representations.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, der die Schemadarstellungen enthält.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that specifies the names of the schema types that need to be imported from the <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> von <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>, der die Namen der Schematypen angibt, die vom <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> importiert werden müssen.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>Gets a value that indicates whether the schemas contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> can be transformed into a <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob die in einem <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> enthaltenen Schemas in einen <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> transformiert werden können.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schemas can be transformed to data contract types; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Schemas in Datenvertragstypen transformiert werden können, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>For more information about types that can be imported, see <bpt id="p1">[</bpt>Types Supported by the Data Contract Serializer<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.</source>
          <target state="translated">Weitere Informationen zu Typen, die importiert werden können, finden Sie unter <bpt id="p1">[</bpt>Typen unterstützt, durch den Datenvertragsserialisierer<ept id="p1">](~/docs/framework/wcf/feature-details/types-supported-by-the-data-contract-serializer.md)</ept>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph>-Parameter oder der <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph>-Parameter ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.CanImport(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>A data contract involved in the import is invalid.</source>
          <target state="translated">Ein in den Import einbezogener Datenvertrag ist ungültig.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit">
          <source>Gets a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> used for storing the CLR types generated.</source>
          <target state="translated">Ruft einen <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> auf, der zum Speichern der generierten CLR-Typen verwendet wird.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> used to store the CLR types generated.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>, der verwendet wird, um die generierten CLR-Typen zu speichern.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit">
          <source>Call this property after importing schemas using the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> to access the <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> in which all the generated code is stored.</source>
          <target state="translated">Rufen Sie diese Eigenschaft nach dem Import von Schemas auf, indem Sie den <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter&gt;</ph> verwenden, um auf den <ph id="ph2">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> zuzugreifen, in dem der gesamte generierte Code gespeichert ist.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit">
          <source>The following example uses creates a <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</source>
          <target state="translated">Im folgenden Beispiel wird ein <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> erstellt.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractImporter.CodeCompileUnit">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> is then used to create both a Visual C# and Visual Basic code file.</source>
          <target state="translated">Der <ph id="ph1">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> wird dann verwendet, um sowohl eine Visual C#- als auch eine Visual Basic-Codedatei zu erstellen.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> for the specified element.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> für ein angegebenes Element zurück.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that specifies the schema type to look up.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>, der den zu suchenden Schematyp angibt.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> to the CLR type generated for the schema type with the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> an den CLR-Typ zurück, der für den Schematyp mit dem angegebenen <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> generiert wurde.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> reference to the CLR type generated for the schema type with the <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> specified.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Verweis auf den CLR-Typ, der für den Schematyp mit dem angegebenen <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> generiert wurde.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)">
          <source>Use this method to look up the reference to a generated CLR type after calling the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> method.</source>
          <target state="translated">Verwenden Sie diese Methode, um nach dem Verweis auf einen generierten CLR-Typ zu suchen, nachdem Sie die <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph>-Methode aufgerufen haben.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> contains the name of the generated type and can be used to look up the corresponding <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph> in the <ph id="ph3">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> enthält den Namen des generierten Typs und kann verwendet werden, um den entsprechenden <ph id="ph2">&lt;xref:System.CodeDom.CodeTypeDeclaration&gt;</ph> im <ph id="ph3">&lt;xref:System.CodeDom.CodeCompileUnit&gt;</ph> zu suchen.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that specifies the XML qualified name of the schema type to look up.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>, der den qualifizierten XML-Namen des Schematyps zurückgibt, nach dem gesucht werden soll.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph> that specifies an element in an XML schema.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, der ein Element in einem XML-Schema angibt.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> for the specified XML qualified element and schema element.</source>
          <target state="translated">Gibt einen <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> für das angegebene qualifizierte XML-Element und Schemaelement zurück.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>A <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> that represents the type that was generated for the specified schema type.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>, der den Typ darstellt, der für den angegebenen Schematyp generiert wurde.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>The schema element is needed for data about the type that is specified at the element scope.</source>
          <target state="translated">Das Schemaelement wird für Daten über den Typ benötigt, der beim Gültigbeitsbereich des Elements angegeben ist.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>The main example of this is the XSD attribute <ph id="ph1">`nillable`</ph>.</source>
          <target state="translated">Das wichtigste Beispiel hierfür ist das XSD-Attribut<ph id="ph1">`nillable`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>In schema, setting <ph id="ph1">`nillable`</ph> to <ph id="ph2">`true`</ph> is specified on the containing schema element whereas the concept of null is expressed in the CLR type <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph>.</source>
          <target state="translated">Im Schema wird die Einstellung von <ph id="ph1">`nillable`</ph> auf <ph id="ph2">`true`</ph> im entsprechenden Schemaelement angegeben, wogegen das Konzept NULL im CLR-Typ <ph id="ph3">&lt;xref:System.Nullable%601&gt;</ph> ausgedrückt wird.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>The element is passed in so that this importer can look up the element-level information and return the correct type reference accordingly.</source>
          <target state="translated">Das Element wird übergeben, sodass dieser Importer die Elementebeneninformation suchen und den korrekten Typverweis zurückgeben kann. </target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetCodeTypeReference(System.Xml.XmlQualifiedName,System.Xml.Schema.XmlSchemaElement)">
          <source>When importing WSDL, each parameter is imported separately and therefore the parameter elements need to be passed in separately.</source>
          <target state="translated">Beim WDSL-Import wird jeder Parameter separat importiert, deshalb müssen die Parameterelemente separat übergeben werden.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents the schema type to look up known types for.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>, der den Schematyp darstellt, für den bekannte Typen gesucht werden sollen.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>Returns a list of <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph> objects that represents the known types generated when generating code for the specified schema type.</source>
          <target state="translated">Gibt eine Liste von <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>-Objekten zurück, die die bekannten Typen darstellt, die bei der Generierung von Code für den angegebenen Schematyp erstellt wurden.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> of type <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.Generic.IList`1" /&gt;</ph> vom Typ <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeTypeReference" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>When generating CLR types for schema types, known types are also generated for all derived types that are present in the schema.</source>
          <target state="translated">Bei der Generierung von CLR-Typen für Schematypen werden auch bekannte Typen für alle abgeleiteten Typen erstellt, die im Schema vorhanden sind.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>In many cases, these known types are added using attributes to the generated code.</source>
          <target state="translated">In vielen Fällen werden diese bekannten Typen dem generierten Code mit Attributen hinzugefügt.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>(For example, see the <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> class.</source>
          <target state="translated">(Z. B. finden Sie unter der <ph id="ph1">&lt;xref:System.Runtime.Serialization.KnownTypeAttribute&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>) However, for the top-level type, there needs to be a way to return the set of known types generated.</source>
          <target state="translated">) Für den Typ der obersten Ebene, es muss jedoch eine Möglichkeit zum Zurückgeben der Satz bekannter Typen, die generiert werden.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>This method returns the <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> for known types that were generated for a specific schema type.</source>
          <target state="translated">Diese Methode gibt den <ph id="ph1">&lt;xref:System.CodeDom.CodeTypeReference&gt;</ph> für bekannte Typen zurück, die für einen bestimmten Schematyp generiert wurden.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.GetKnownTypeReferences(System.Xml.XmlQualifiedName)">
          <source>For more information, see <bpt id="p1">[</bpt>Data Contract Known Types<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-known-types.md)</ept>.</source>
          <target state="translated">Weitere Informationen finden Sie unter <bpt id="p1">[</bpt>Datenvertragstypen bezeichnet<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-known-types.md)</ept>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.XsdDataContractImporter">
          <source>Transforms a set of XML schemas into a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> used to generate CLR code.</source>
          <target state="translated">Transformiert einen Satz von XML-Schemas in einen <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>, der zur Generierung von CLR-Code verwendet wird.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schema representations to generate CLR types for.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, der die Schemadarstellungen enthält, für die CLR-Typen generiert werden sollen.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)">
          <source>Transforms the specified set of XML schemas contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> into a <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">Transformiert den angegebenen Satz von XML-Schemas, die in einem <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> enthalten sind, in einen <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A&gt;</ph> method to test whether a set of schemas can be imported.</source>
          <target state="translated">Im folgenden Beispiel wird mit der <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A&gt;</ph>-Methode getestet, ob ein Schemasatz importiert werden kann.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A&gt;</ph> method returns <ph id="ph2">`true`</ph>, the code invokes the <ph id="ph3">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph> method.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.CanImport%2A&gt;</ph>-Methode <ph id="ph2">`true`</ph> zurückgibt, ruft der Code die <ph id="ph3">&lt;xref:System.Runtime.Serialization.XsdDataContractImporter.Import%2A&gt;</ph>-Methode auf.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph>-Parameter ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schema representations.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, der die Schemadarstellungen enthält.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>A <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> (of <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>) that represents the set of schema types to import.</source>
          <target state="translated">Eine <ph id="ph1">&lt;see cref="T:System.Collections.Generic.ICollection`1" /&gt;</ph> (von <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>), die den zu importierenden Satz von Schematypen darstellt.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Collections.Generic.ICollection{System.Xml.XmlQualifiedName})">
          <source>Transforms the specified set of schema types contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> into CLR types generated into a <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">Transformiert den angegebenen Satz von Schematypen, der in einem <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> enthalten ist, in CLR-Typen, die in einen <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> generiert werden.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schemas to transform.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, der die zu transformierenden Schemas enthält.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph> that represents the specific schema element to transform.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaElement" /&gt;</ph>, der das zu transformierende Schemaelement darstellt.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>Transforms the specified schema element in the set of specified XML schemas into a <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> and returns an <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents the data contract name for the specified element.</source>
          <target state="translated">Transformiert das angegebene Schemaelement in dem Satz angegebener XML-Schemas in einen <ph id="ph1">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph> und gibt einen <ph id="ph2">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> zurück, der den Datenvertragsnamen für das angegebene Element darstellt.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents the specified element.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> , der das angegebene Element darstellt.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.Schema.XmlSchemaElement)">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> or <ph id="ph2">&lt;paramref name="element" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph>-Parameter oder der <ph id="ph2">&lt;paramref name="element" /&gt;</ph>-Parameter ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that contains the schema representations.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, der die Schemadarstellungen enthält.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph> that represents a specific schema type to import.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Xml.XmlQualifiedName" /&gt;</ph>, der einen bestimmten zu importierenden Schematyp darstellt.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>Transforms the specified XML schema type contained in an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> into a <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</source>
          <target state="translated">Transformiert den angegebenen, in einem <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> enthaltenen XML-Schematyp in einen <ph id="ph2">&lt;see cref="T:System.CodeDom.CodeCompileUnit" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.XsdDataContractImporter.Import(System.Xml.Schema.XmlSchemaSet,System.Xml.XmlQualifiedName)">
          <source>The <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph> or <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="schemas" /&gt;</ph>-Parameter oder der <ph id="ph2">&lt;paramref name="typeName" /&gt;</ph>-Parameter ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.XsdDataContractImporter.Options">
          <source>Gets or sets an <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ImportOptions" /&gt;</ph> that contains settable options for the import operation.</source>
          <target state="translated">Ruft einen <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ImportOptions" /&gt;</ph> auf, der festlegbare Optionen für den Importvorgang enthält, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractImporter.Options">
          <source>A <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ImportOptions" /&gt;</ph> that contains settable options.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.ImportOptions" /&gt;</ph>, der festlegbare Optionen enthält.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.XsdDataContractImporter.Options">
          <source>Use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ImportOptions&gt;</ph> class to customize how the CLR types are generated during schema import.</source>
          <target state="translated">Verwenden Sie die <ph id="ph1">&lt;xref:System.Runtime.Serialization.ImportOptions&gt;</ph>-Klasse, um die Generierung der CLR-Typen während des Schemaimports anzupassen.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>