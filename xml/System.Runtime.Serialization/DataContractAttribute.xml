<Type Name="DataContractAttribute" FullName="System.Runtime.Serialization.DataContractAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db3b27208fbee128c55a4f26504bee403a782e93" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39756034" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataContractAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataContractAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.DataContractAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataContractAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataContractAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type DataContractAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-2.0;xamarinmac-3.0">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Enum | System.AttributeTargets.Struct, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;xamarinandroid-7.1;xamarinios-10.8">
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Enum, AllowMultiple=false, Inherited=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Gibt an, dass der Typ einen Datenvertrag definiert oder implementiert und mit einem Serialisierer wie dem <see cref="T:System.Runtime.Serialization.DataContractSerializer" /> serialisierbar ist. Um ihren Typ serialisierbar zu machen, müssen die Autoren hierfür einen Datenvertrag definieren.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenden Sie das <xref:System.Runtime.Serialization.DataContractAttribute>-Attribut auf Typen (Klassen, Strukturen oder Enumerationen) an, die bei Serialisierungs- und Deserialisierungsvorgängen vom <xref:System.Runtime.Serialization.DataContractSerializer> verwendet werden. Wenn Sie zu senden oder Empfangen von Nachrichten mithilfe der Windows Communication Foundation (WCF)-Infrastruktur, Sie sollten auch anwenden, die <xref:System.Runtime.Serialization.DataContractAttribute> auf alle Klassen, die in Nachrichten gesendeten Daten enthalten und bearbeiten. Weitere Informationen zu Datenverträgen finden Sie unter [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
 Sie müssen den <xref:System.Runtime.Serialization.DataMemberAttribute> auch auf alle Felder, Eigenschaften oder Ereignisse anwenden, die Werte enthalten, die Sie serialisieren möchten. Indem Sie den <xref:System.Runtime.Serialization.DataContractAttribute> anwenden, aktivieren Sie explizit den <xref:System.Runtime.Serialization.DataContractSerializer> zum Serialisieren und Deserialisieren der Daten.  
  
> [!CAUTION]
>  Sie können den <xref:System.Runtime.Serialization.DataMemberAttribute> auf private Felder anwenden. Beachten Sie, dass die von dem Feld zurückgegebenen Daten (auch bei privaten Feldern) serialisiert und deserialisiert werden und daher von böswilligen Benutzern oder Vorgängen angezeigt oder abgefangen werden können.  
  
 Weitere Informationen zu Datenverträgen finden Sie unter den Themen in [Using Data Contracts](~/docs/framework/wcf/feature-details/using-data-contracts.md).  
  
## <a name="data-contracts"></a>Datenverträge  
 Ein *Datenvertrag* ist eine abstrakte Beschreibung einer Gruppe von Feldern mit einem Namen und Typ für jedes Feld. Der Datenvertrag befindet sich außerhalb einzelner Implementierungen, um die Zusammenarbeit zwischen den Diensten verschiedener Plattformen zu ermöglichen. Solange die zwischen den Diensten übermittelten Daten demselben Vertrag entsprechen, können sie von allen Diensten verarbeitet werden. Diese Verarbeitung wird auch eine *lose verbundenes System*. Ein Datenvertrag ist auch mit einer Schnittstelle vergleichbar, da der Vertrag angibt, wie die Daten zu übermitteln sind, um von einer Anwendung verarbeitet werden zu können. Der Datenvertrag kann beispielsweise einen Datentyp mit der Bezeichnung 	'Person' erfordern, der zwei Textfelder mit der Bezeichnung 'Vorname' und 'Nachname' enthält. Um einen Datenvertrag zu erstellen, können Sie den <xref:System.Runtime.Serialization.DataContractAttribute> auf die Klasse anwenden und den <xref:System.Runtime.Serialization.DataMemberAttribute> auf Felder oder Eigenschaften anwenden, die serialisiert werden müssen. Wenn die Daten serialisiert sind, entsprechen sie dem implizit in den Typ integrierten Datenvertrag.  
  
> [!NOTE]
>  Ein Datenvertrag unterscheidet sich in seinem Vererbungsverhalten deutlich von einer tatsächlichen Schnittstelle. Schnittstellen werden an abgeleitete Typen vererbt. Wenn Sie den <xref:System.Runtime.Serialization.DataContractAttribute> auf eine Basisklasse anwenden, erben die abgeleiteten Typen das Attribut oder das Verhalten nicht. Wenn ein abgeleiteter Typ jedoch einen Datenvertrag hat, werden die Datenmember der Basisklasse serialisiert. Sie müssen den <xref:System.Runtime.Serialization.DataMemberAttribute> jedoch auf neue Member in einer abgeleiteten Klasse anwenden, um sie serialisierbar zu machen.  
  
## <a name="xml-schema-documents-and-the-svcutil-tool"></a>XML-Schemadokumente und das Tool SvcUtil  
 Wenn Sie Daten mit anderen Diensten austauschen, muss der Datenvertrag beschrieben werden. Für die aktuelle Version des <xref:System.Runtime.Serialization.DataContractSerializer> kann ein XML-Schema verwendet werden, um Datenverträge zu definieren. (Andere Formen von Metadaten/Beschreibungen können zum selben Zweck verwendet werden.) Verwenden Sie zum Erstellen eines XML-Schemas aus Ihrer Anwendung die [ServiceModel Metadata Utility Tool (Svcutil.exe)](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md) mit der **/dconly** -Befehlszeilenoption. Wenn das Input in Ihr Tool eine Assembly ist, generiert das Tool standardmäßig eine Gruppe von XML-Schemas, die alle in dieser Assembly gefundenen Datenvertragstypen definieren. Umgekehrt können Sie das Tool Svcutil.exe auch verwenden, um den Anforderungen von XML-Schemas entsprechende Klassendefinitionen für Visual Basic oder C# zu erstellen, die Konstrukte verwenden, die durch Datenverträge ausgedrückt werden können. In diesem Fall die **/dconly** Befehlszeilenoption ist nicht erforderlich.  
  
 Wenn in das Tool Svcutil.exe ein XML-Schema eingegeben wird, erstellt das Tool standardmäßig eine Reihe von Klassen. Wenn Sie diese Klassen prüfen, stellen Sie fest, dass der <xref:System.Runtime.Serialization.DataContractAttribute> verwendet wurde. Sie können diese Klassen verwenden, um eine neue Anwendung zur Verarbeitung von Daten zu erstellen, die mit anderen Diensten ausgetauscht werden müssen.  
  
 Sie können auch das Tool ausführen, die gegen einen Endpunkt, der ein Dokument Web Services Description Language (WSDL), um den Code und die Konfiguration zur Erstellung eines Windows Communication Foundation (WCF)-Clients automatisch zu generieren. Der generierte Code schließt Typen ein, die mit dem <xref:System.Runtime.Serialization.DataContractAttribute> gekennzeichnet sind.  
  
## <a name="reusing-existing-types"></a>Wiederverwendung vorhandener Typen  
 Ein Datenvertrag verfügt über zwei grundlegende Anforderungen: einen stabilen Namen und eine Liste von Membern. Der stabile Name besteht aus dem Namespace-URI (Uniform Resource Identifier) und dem lokalen Namen des Vertrags. Standardmäßig wird beim Anwenden der <xref:System.Runtime.Serialization.DataContractAttribute> auf eine Klasse, verwendet es den Klassennamen als lokalen Namen und den Namespace der Klasse (mit dem Präfix "http://schemas.datacontract.org/2004/07/") als Namespace-URI. Diese Standardwerte können durch Festlegen der Eigenschaften <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A> und <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> überschrieben werden. Sie können auch den Namespace ändern, indem Sie den <xref:System.Runtime.Serialization.ContractNamespaceAttribute> auf den Namespace anwenden. Sie können diese Fähigkeit bei einem bestehenden Typ nutzen, der Daten genau nach Ihren Anforderungen verarbeitet, jedoch einen anderen Namespace und Klassennamen aufweist als im Datenvertrag. Durch Überschreiben der Standardwerte können Sie Ihren vorhandenen Typ wiederverwenden und gewährleisten, dass die serialisierten Daten dem Datenvertrag entsprechen.  
  
> [!NOTE]
>  In jedem Code können Sie das Wort `DataContract` anstelle des längeren <xref:System.Runtime.Serialization.DataContractAttribute> verwenden.  
  
## <a name="versioning"></a>Versionskontrolle  
 Ein Datenvertrag kann auch höhere Versionen seiner selbst nutzen. Wenn eine höhere Version des Vertrags zusätzliche Daten enthält, werden diese Daten gespeichert und unverändert an den Absender zurückgegeben. Hierzu müssen Sie die <xref:System.Runtime.Serialization.IExtensibleDataObject>-Schnittstelle implementieren.  
  
 Weitere Informationen zur versionsverwaltung finden Sie unter [Versionsverwaltung von Datenverträgen](~/docs/framework/wcf/feature-details/data-contract-versioning.md).  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine Klasse mit dem Namen `Person` serialisiert und deserialisiert, auf die der <xref:System.Runtime.Serialization.DataContractAttribute> angewendet wurde. Beachten Sie, dass für die <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A>-Eigenschaft und die <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A>-Eigenschaft Werte festgelegt wurden, die die Standardeinstellungen überschreiben.  
  
 [!code-csharp[DataContractAttribute#1](~/samples/snippets/csharp/VS_Snippets_CFX/datacontractattribute/cs/overview.cs#1)]
 [!code-vb[DataContractAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/datacontractattribute/vb/overview.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.IExtensibleDataObject" />
    <altmember cref="T:System.Runtime.Serialization.ExtensionDataObject" />
    <altmember cref="T:System.Runtime.Serialization.DataContractSerializer" />
    <altmember cref="T:System.Runtime.Serialization.DataMemberAttribute" />
    <altmember cref="T:System.Runtime.Serialization.ISerializable" />
    <altmember cref="T:System.Runtime.Serialization.KnownTypeAttribute" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataContractAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.DataContractAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataContractAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNameSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNameSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob <see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /> explizit festgelegt wurde.</summary>
        <value>Gibt <see langword="true" /> , wenn der Name explizit festgelegt ist, andernfalls wurde <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNamespaceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsNamespaceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNamespaceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNamespaceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNamespaceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsNamespaceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob <see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /> explizit festgelegt wurde.</summary>
        <value>Gibt <see langword="true" /> Wenn wurde der Namespace explizit festgelegt ist, andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReference">
      <MemberSignature Language="C#" Value="public bool IsReference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReference" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberSignature Language="VB.NET" Value="Public Property IsReference As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReference { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsReference : bool with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.IsReference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob Objektverweisdaten beizubehalten sind.</summary>
        <value>
          <see langword="true" />, um Objektverweisdaten mit Standard-XML zu behalten; andernfalls <see langword="false" />. Der Standardwert ist <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie die `IsReference`-Eigenschaft, um das <xref:System.Runtime.Serialization.DataContractSerializer> anzuweisen, XML-Konstrukte einzufügen, die die Objektverweisinformationen beibehalten.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Runtime.Serialization.DataContractSerializer.PreserveObjectReferences" />
      </Docs>
    </Member>
    <Member MemberName="IsReferenceSetExplicitly">
      <MemberSignature Language="C#" Value="public bool IsReferenceSetExplicitly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReferenceSetExplicitly" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReferenceSetExplicitly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReferenceSetExplicitly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReferenceSetExplicitly : bool" Usage="System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft ab, ob <see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /> explizit festgelegt wurde.</summary>
        <value>
          <see langword="true" /> Wenn der Verweis explizit festgelegt wurde; andernfalls <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Datenvertrags für den Typ ab oder legt ihn fest.</summary>
        <value>Der lokale Name des Datenvertrags. Der Standardwert ist der Name der Klasse, auf den das Attribut angewendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A>-Eigenschaft wird verwendet, um einem Datenvertrag einen Namen zu geben, der dem Namen des Typs im XML-Schema entspricht. Weitere Informationen finden Sie unter [Data Contract Names](~/docs/framework/wcf/feature-details/data-contract-names.md).  
  
 Der Name des Datenvertrags ist standardmäßig der Name des Typs, auf den der <xref:System.Runtime.Serialization.DataContractAttribute> angewendet wird. Es kann jedoch Gründe dafür geben, den Standardnamen zu ändern. Ein solcher Grund liegt vor, wenn für einen vorhandenen Typ zugelassen werden soll, dass dieser Daten verarbeitet, die einem vorhandenen Datenvertrag entsprechen müssen. Beispiel: Ein Typ mit dem Namen `Person` ist vorhanden, doch der in einem XML-Schema enthaltene Datenvertrag erfordert, dass der Name `Customer` lautet. Der Vertrag kann eingehalten werden, indem der Eigenschaftswert auf `Customer` gesetzt wird.  
  
 Ein zweiter Grund liegt vor, wenn die Generierung von Namen zugelassen werden soll, die als Typnamen ungültig sind. Beispiel: Wenn ein Datenvertrag einen Namen erfordert, der als Typname nicht zulässig ist, muss der Eigenschaftswert auf diesen unzulässigen Namen festgelegt werden. Beispielsweise ist die Zeichenfolge '$value' als Typname unzulässig, aber als <xref:System.Runtime.Serialization.DataContractAttribute.Name%2A>-Eigenschaftswert erlaubt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespace">
      <MemberSignature Language="C#" Value="public string Namespace { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Namespace" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberSignature Language="VB.NET" Value="Public Property Namespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Namespace { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Namespace : string with get, set" Usage="System.Runtime.Serialization.DataContractAttribute.Namespace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Primitives</AssemblyName>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namespace des Datenvertrags für den Typ ab oder legt ihn fest.</summary>
        <value>Der Namespace des Vertrags.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diese Eigenschaft, um einen bestimmten Namespace anzugeben, wenn Ihr Typ Daten zurückgeben muss, die einem bestimmten Datenvertrag entsprechen.  
  
> [!TIP]
>  Zur erfolgreichen Datenübertragung muss der Name der Daten in einem Datenvertrag auf dem Client und dem Server übereinstimmen. Visual Basic-Projekten hinzufügen, indem standardmäßig ein Präfix dem Namespace definiert, die in jeder Datei (namens "Stamm-Namespace," nach dem Projekt benannt). Das Hinzufügen dieses Präfixes bewirkt, dass Client- und Servernamespaces sich für den gleichen Typ unterscheiden. Die Lösung besteht darin, legen Sie die <xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A> Eigenschaft auf "", oder der datenvertragsnamespace explizit in dieser Eigenschaft fest.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>