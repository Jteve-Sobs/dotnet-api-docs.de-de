<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ISerializable.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e472d101330ad3fe07ac415fe5b90af0a16de62b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e472d101330ad3fe07ac415fe5b90af0a16de62b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Allows an object to control its own serialization and deserialization.</source>
          <target state="translated">Ermöglicht einem Objekt, die eigene Serialisierung und Deserialisierung zu überwachen.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Any class that might be serialized must be marked with the <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph>.</source>
          <target state="translated">Jede Klasse, die möglicherweise serialisiert werden muss markiert werden, mit der <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>If a class needs to control its serialization process, it can implement the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface.</source>
          <target state="translated">Wenn eine Klasse ihren Serialisierungsprozess steuern muss, können Sie implementieren die <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> Schnittstelle.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> calls the <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> at serialization time and populates the supplied <ph id="ph3">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> with all the data required to represent the object.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> Aufrufe der <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> bei der Serialisierung und füllt die angegebene <ph id="ph3">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> mit den Daten, die zur Darstellung des Objekts erforderlich.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> with the type of the object in the graph.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.Serialization.Formatter&gt;</ph> erstellt eine <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> mit dem Typ des Objekts im Diagramm.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Objects that need to send proxies for themselves can use the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A&gt;</ph> methods on <ph id="ph3">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> to change the transmitted information.</source>
          <target state="translated">Objekte, die Proxys senden selbst verwenden können, müssen die <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A&gt;</ph> und <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A&gt;</ph> Methoden auf <ph id="ph3">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> so ändern Sie die übertragene Informationen.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>In the case of class inheritance, it is possible to serialize a class that derives from a base class that implements <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</source>
          <target state="translated">Im Fall von klassenvererbung, es ist möglich, eine Klasse serialisieren können, die von einer Basisklasse abgeleitet wird, implementiert <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>In this case, the derived class should call the base class implementation of <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> inside its implementation of <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph>.</source>
          <target state="translated">In diesem Fall sollte die abgeleitete Klasse die Implementierung der Basisklasse aufrufen <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> in seiner Implementierung von <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Otherwise, the data from the base class will not be serialized.</source>
          <target state="translated">Andernfalls werden die Daten von der Basisklasse nicht serialisiert werden.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface implies a constructor with the signature constructor (<ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> information, <ph id="ph3">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> context).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> Schnittstelle impliziert einen Konstruktor mit der Signaturkonstruktor (<ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> Informationen <ph id="ph3">&lt;xref:System.Runtime.Serialization.StreamingContext&gt;</ph> Kontext).</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>At deserialization time, the current constructor is called only after the data in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> has been deserialized by the formatter.</source>
          <target state="translated">Während der Deserialisierung der aktuellen Konstruktor aufgerufen wird, nur nach den Daten in der <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> vom Formatierungsprogramm deserialisiert wurde.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>In general, this constructor should be protected if the class is not sealed.</source>
          <target state="translated">Dieser Konstruktor sollte im Allgemeinen geschützt werden, wenn die Klasse nicht versiegelt ist.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The order in which objects are deserialized cannot be guaranteed.</source>
          <target state="translated">Die Reihenfolge, in der Objekte deserialisiert werden, kann nicht garantiert werden.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>For example, if one type references a type that has not been deserialized yet, an exception will occur.</source>
          <target state="translated">Z. B. wenn ein Typ einen Typ, der noch nicht deserialisiert wurde verweist, wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>If you are creating types that have such dependencies, you can work around the problem by implementing the <ph id="ph1">`IDeserializationCallback`</ph> interface and the <ph id="ph2">`OnDeserialization`</ph> method.</source>
          <target state="translated">Wenn Sie Typen, die solche Abhängigkeiten aufweisen erstellen, Sie können das Problem umgehen durch Implementieren der <ph id="ph1">`IDeserializationCallback`</ph> Schnittstelle und die <ph id="ph2">`OnDeserialization`</ph> Methode.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The serialization architecture handles object types that extend <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph> the same as types that extend <ph id="ph2">&lt;xref:System.Object&gt;</ph>.</source>
          <target state="translated">Die Serialisierungsarchitektur behandelt Objekttypen, die erweitern <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph> wie Typen, die erweitern <ph id="ph2">&lt;xref:System.Object&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>These types can be marked with the <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph> and implement the <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface as any other object type.</source>
          <target state="translated">Diese Typen können gekennzeichnet werden, mit der <ph id="ph1">&lt;xref:System.SerializableAttribute&gt;</ph> und Implementieren der <ph id="ph2">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> Schnittstelle wie jeden anderen Objekttyp.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Their object state will be captured and persisted onto the stream.</source>
          <target state="translated">Der Objektzustand wird aufgezeichnet und in den Stream beibehalten werden.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>When these types are being used through <ph id="ph1">&lt;xref:System.Runtime.Remoting&gt;</ph>, the remoting infrastructure provides a surrogate that preempts typical serialization and instead serializes a proxy to the <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph>.</source>
          <target state="translated">Wenn diese Typen verwendet werden wird, über <ph id="ph1">&lt;xref:System.Runtime.Remoting&gt;</ph>, die Remotinginfrastruktur enthält ein Ersatzzeichen, die Vorrang vor der normalen Serialisierung hat und stattdessen serialisiert einen Proxy für die <ph id="ph2">&lt;xref:System.MarshalByRefObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>A surrogate is a helper that knows how to serialize and deserialize objects of a particular type.</source>
          <target state="translated">Ein Ersatzzeichen ist ein Hilfsprogramm, die weiß, wie zum Serialisieren und Deserialisieren von Objekten eines bestimmten Typs.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The proxy, invisible to the user in most cases, will be of type <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph>.</source>
          <target state="translated">Der Proxy für den Benutzer in den meisten Fällen nicht sichtbar werden vom Typ <ph id="ph1">&lt;xref:System.Runtime.Remoting.ObjRef&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>As a general design pattern, it would be unusual for a class to be both marked with the serializable attribute and extend <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph>.</source>
          <target state="translated">Als ein allgemeiner Entwurfsmuster, wäre es für eine Klasse mit dem serializable-Attribut markiert, und erweitern ungewöhnliche <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Developers should think carefully about the possible serialization and remoting scenarios when combining these two characteristics.</source>
          <target state="translated">Entwickler sollten die möglichen Szenarien für die Serialisierung und Remoting sorgfältig überlegen, wenn Kombination dieser beiden Merkmale.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>One example where this might be applicable is with a <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph>.</source>
          <target state="translated">Ein Beispiel, in denen dies ist möglicherweise anwendbar, ist eine <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>While the base class of <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> (<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>) extends from <ph id="ph3">&lt;xref:System.MarshalByRefObject&gt;</ph>, it is possible to capture the state of a <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph> and restore it at will.</source>
          <target state="translated">Während die Basisklasse von <ph id="ph1">&lt;xref:System.IO.MemoryStream&gt;</ph> (<ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph>) erstreckt sich von <ph id="ph3">&lt;xref:System.MarshalByRefObject&gt;</ph>, es ist möglich, den Status des Aufzeichnen einer <ph id="ph4">&lt;xref:System.IO.MemoryStream&gt;</ph> und wiederhergestellt werden.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>It might, therefore, be meaningful to serialize the state of this stream into a database and restore it at some later point in time.</source>
          <target state="translated">Daher möglicherweise sinnvoll, den Zustand dieses Streams in einer Datenbank zu serialisieren und zeitlich zu einem späteren Zeitpunkt wiederherzustellen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>However, when used through remoting, an object of this type would be proxied.</source>
          <target state="translated">Wenn mithilfe von-Remoting verwendet wird, wäre ein Objekt dieses Typs Proxyanforderungen jedoch.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>For more information about serialization of classes that extend <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph>, see <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector&gt;</ph>.</source>
          <target state="translated">Weitere Informationen über die Serialisierung von Klassen, die erweitern <ph id="ph1">&lt;xref:System.MarshalByRefObject&gt;</ph>, finden Sie unter <ph id="ph2">&lt;xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>For more information about implementing <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>, see <bpt id="p1">[</bpt>Custom Serialization<ept id="p1">](~/docs/standard/serialization/custom-serialization.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Implementierung <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>benutzerdefinierte Serialisierung<ept id="p1">](~/docs/standard/serialization/custom-serialization.md)</ept>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>The following code example demonstrates the use of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> interface to define custom serialization behavior for a class.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable&gt;</ph> Schnittstelle, um benutzerdefinierte Serialisierungsverhalten für eine Klasse zu definieren.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.ISerializable">
          <source>Implement this interface to allow an object to take part in its own serialization and deserialization.</source>
          <target state="translated">Implementieren Sie diese Schnittstelle, um ein Objekt in seine eigene Serialisierung und Deserialisierung zu ermöglichen.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> to populate with data.</source>
          <target state="translated">Die mit Daten zu füllende <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination (see <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>) for this serialization.</source>
          <target state="translated">Das Ziel (siehe <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.StreamingContext" /&gt;</ph>) dieser Serialisierung.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Populates a <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> with the data needed to serialize the target object.</source>
          <target state="translated">Füllt eine <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Any objects that are included in the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> are automatically tracked and serialized by the formatter.</source>
          <target state="translated">Alle Objekte, die in enthaltenen der <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> automatisch nachverfolgt und vom Formatierungsprogramm serialisiert werden.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Code that calls <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> requires the <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> for providing serialization services.</source>
          <target state="translated">Code, der Aufrufe <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> erfordert die <ph id="ph2">&lt;xref:System.Security.Permissions.SecurityPermission&gt;</ph> für das Bereitstellen von Serialisierungsdiensten.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Zugeordnete Enumeration: <ph id="ph1">&lt;xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType&gt;</ph></target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>It is not guaranteed that this method will be called only once per object instance during serialization.</source>
          <target state="translated">Es ist nicht sichergestellt, dass diese Methode wird während der Serialisierung nur einmal pro Objektinstanz aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Therefore, the method should be implemented in such a way that its behavior will be the same regardless of the number of times it is called.</source>
          <target state="translated">Aus diesem Grund sollte die Methode so implementiert werden, dass das Verhalten identisch, unabhängig davon, wie oft werden, wenn er aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> method to set alternate values for a serialized object.</source>
          <target state="translated">Im folgenden Beispiel wird die <ph id="ph1">&lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A&gt;</ph> Methode, um alternative Werte für ein serialisiertes Objekt festgelegt.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The code uses the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> class to store the alternate values when the object is serialized.</source>
          <target state="translated">Der Code verwendet die <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A&gt;</ph> Methode der <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> Klasse, um die alternative Werte zu speichern, wenn das Objekt serialisiert wird.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Conversely, when the constructor of the <ph id="ph1">`Person`</ph> class is called during deserialization, the alternatve values are retrieved using the <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A&gt;</ph> method and reassigned to the object's fields.</source>
          <target state="translated">Umgekehrt, wenn der Konstruktor der der <ph id="ph1">`Person`</ph> Klasse während der Deserialisierung aufgerufen wird, mithilfe der alternativen Werte abgerufen die <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A&gt;</ph> Methode und den Feldern des Objekts zugewiesen.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The caller does not have the required permission.</source>
          <target state="translated">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>