<Type Name="ISerializable" FullName="System.Runtime.Serialization.ISerializable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="7c877f7730b05717781eb5589ed1ee6c38ad2dbb" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78830592" /></Metadata><TypeSignature Language="C#" Value="public interface ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISerializable" />
  <TypeSignature Language="F#" Value="type ISerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="System.Runtime.Serialization.Formatters" FromVersion="4.0.2.0" To="System.Runtime" ToVersion="4.2.0.0" FrameworkAlternate="netcore-2.0" />
    <TypeForwarding From="System.Runtime.Serialization.Formatters" FromVersion="4.0.3.0" To="System.Runtime" ToVersion="4.2.1.0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0" />
    <TypeForwarding From="System.Runtime.Serialization.Formatters" FromVersion="4.0.4.0" To="System.Runtime" ToVersion="4.2.2.0" FrameworkAlternate="netcore-3.1" />
  </TypeForwardingChain>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ermöglicht einem Objekt, die eigene Serialisierung und Deserialisierung zu überwachen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Jede Klasse, die möglicherweise serialisiert werden muss, muss mit dem <xref:System.SerializableAttribute> markiert werden. Wenn eine Klasse ihren Serialisierungsprozess steuern muss, kann sie die Schnittstelle <xref:System.Runtime.Serialization.ISerializable> implementieren. Der Namespace <xref:System.Runtime.Serialization.Formatter> ruft <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> während der Serialisierung auf und füllt die angegebene <xref:System.Runtime.Serialization.SerializationInfo> mit allen Daten auf, die zur Darstellung des Objekts erforderlich sind. Der <xref:System.Runtime.Serialization.Formatter> erstellt eine <xref:System.Runtime.Serialization.SerializationInfo> mit dem Typ des Objekts im Diagramm. Objekte, die Proxys für sich selbst senden müssen, können die Methoden <xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> und <xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A> unter <xref:System.Runtime.Serialization.SerializationInfo> verwenden, um die übermittelten Informationen zu ändern.  
  
 Bei der Klassen Vererbung ist es möglich, eine Klasse zu serialisieren, die von einer Basisklasse abgeleitet wird, die <xref:System.Runtime.Serialization.ISerializable>implementiert. In diesem Fall sollte die abgeleitete Klasse die Basisklassen Implementierung von <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> in der Implementierung von <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>abrufen. Andernfalls werden die Daten aus der Basisklasse nicht serialisiert.  
  
 Die <xref:System.Runtime.Serialization.ISerializable>-Schnittstelle impliziert einen Konstruktor mit dem Signatur-Konstruktor (<xref:System.Runtime.Serialization.SerializationInfo> Informationen, <xref:System.Runtime.Serialization.StreamingContext> Kontext). Zum Zeitpunkt der Deserialisierung wird der aktuelle Konstruktor erst aufgerufen, nachdem die Daten in der <xref:System.Runtime.Serialization.SerializationInfo> vom Formatierer deserialisiert wurden. Im Allgemeinen sollte dieser Konstruktor geschützt werden, wenn die Klasse nicht versiegelt ist.  
  
 Die Reihenfolge, in der Objekte deserialisiert werden, kann nicht garantiert werden. Wenn ein Typ z. b. auf einen Typ verweist, der noch nicht deserialisiert wurde, wird eine Ausnahme ausgelöst. Wenn Sie Typen erstellen, die solche Abhängigkeiten aufweisen, können Sie das Problem umgehen, indem Sie die `IDeserializationCallback`-Schnittstelle und die `OnDeserialization`-Methode implementieren.  
  
 Die serialisierungstechnologie behandelt Objekttypen, die <xref:System.MarshalByRefObject> identisch mit Typen erweitern, die <xref:System.Object>erweitern. Diese Typen können mit dem <xref:System.SerializableAttribute> gekennzeichnet und die <xref:System.Runtime.Serialization.ISerializable> Schnittstelle wie jeder andere Objekttyp implementiert werden. Der Objektzustand wird aufgezeichnet und im Stream persistent gespeichert.  
  
 Wenn diese Typen über <xref:System.Runtime.Remoting>verwendet werden, stellt die Remoting-Infrastruktur ein Ersatz Zeichen bereit, das eine typische Serialisierung vorzeitig verwendet und stattdessen einen Proxy in den <xref:System.MarshalByRefObject>serialisiert. Ein Ersatz Zeichen ist ein Hilfsprogramm, das die Serialisierung und Deserialisierung von Objekten eines bestimmten Typs weiß. Der Proxy, der für den Benutzer in den meisten Fällen unsichtbar ist, ist vom Typ <xref:System.Runtime.Remoting.ObjRef>.  
  
 Als allgemeines Entwurfsmuster wäre es nicht ungewöhnlich, dass eine Klasse mit dem serialisierbaren Attribut gekennzeichnet ist und <xref:System.MarshalByRefObject>erweitert wird. Entwickler sollten bei der Kombination dieser beiden Eigenschaften sorgfältig die möglichen Serialisierungs-und Remotingszenarien berücksichtigen. Ein Beispiel hierfür ist eine <xref:System.IO.MemoryStream>. Obwohl die Basisklasse von <xref:System.IO.MemoryStream> (<xref:System.IO.Stream>) sich von <xref:System.MarshalByRefObject>erstreckt, ist es möglich, den Zustand einer <xref:System.IO.MemoryStream> aufzuzeichnen und Sie in der Datei wiederherzustellen. Daher kann es sinnvoll sein, den Zustand dieses Streams in eine Datenbank zu serialisieren und zu einem späteren Zeitpunkt wiederherzustellen. Wenn Sie jedoch über Remoting verwendet wird, würde ein Objekt dieses Typs per Proxy verwendet werden.  
  
 Weitere Informationen zur Serialisierung von Klassen, die <xref:System.MarshalByRefObject>erweitern, finden Sie unter <xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>. Weitere Informationen zum Implementieren von <xref:System.Runtime.Serialization.ISerializable>finden Sie unter [benutzerdefinierte Serialisierung](~/docs/standard/serialization/custom-serialization.md).  
  
   
  
## Examples  
 Das folgende Codebeispiel veranschaulicht die Verwendung der Schnittstelle <xref:System.Runtime.Serialization.ISerializable>, um das benutzerdefinierte Serialisierungsverhalten für eine Klasse zu definieren.  
  
 [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>Implementieren Sie diese Schnittstelle, damit ein Objekt an der eigenen Serialisierung und Deserialisierung teilnehmen kann.</para></block>
    <altmember cref="T:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector" />
    <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML- und SOAP-Serialisierung</related>
    <related type="Article" href="~/docs/standard/serialization/custom-serialization.md">Benutzerdefinierte Serialisierung</related>
  </Docs>
  <Members>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="iSerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Die mit Daten zu füllende <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</param>
        <param name="context">Das Ziel (siehe <see cref="T:System.Runtime.Serialization.StreamingContext" />) dieser Serialisierung.</param>
        <summary>Füllt eine <see cref="T:System.Runtime.Serialization.SerializationInfo" /> mit den Daten auf, die zum Serialisieren des Zielobjekts erforderlich sind.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Objekte, die in der <xref:System.Runtime.Serialization.SerializationInfo> enthalten sind, werden vom Formatierer automatisch nachverfolgt und serialisiert.  
  
 Code, der <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> aufruft, erfordert die <xref:System.Security.Permissions.SecurityPermission>, um Serialisierungsdienste bereitzustellen. Zugeordnete Enumeration: <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType>  
  
> [!NOTE]
>  Es ist nicht garantiert, dass diese Methode nur einmal pro Objektinstanz während der Serialisierung aufgerufen wird. Daher sollte die-Methode so implementiert werden, dass Ihr Verhalten unabhängig von der Häufigkeit, mit der Sie aufgerufen wird, identisch ist.  
  
   
  
## Examples  
 Im folgenden Beispiel wird die <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>-Methode verwendet, um alternative Werte für ein serialisiertes Objekt festzulegen. Der Code verwendet die <xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A>-Methode der <xref:System.Runtime.Serialization.SerializationInfo>-Klasse, um die alternativen Werte zu speichern, wenn das Objekt serialisiert wird. Wenn umgekehrt der Konstruktor der `Person`-Klasse während der Deserialisierung aufgerufen wird, werden die alternativen Werte mithilfe der <xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A>-Methode abgerufen und den Feldern des Objekts neu zugewiesen.  
  
 [!code-csharp[ISerializable_GetObjectData#0](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable_GetObjectData/cs/ISerializable_GetObjectData.cs#0)]
 [!code-vb[ISerializable_GetObjectData#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable_GetObjectData/vb/ISerializable_GetObjectData.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">Der Aufrufer verfügt nicht über die erforderliche Berechtigung.</exception>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <related type="Article" href="~/docs/standard/serialization/custom-serialization.md">Benutzerdefinierte Serialisierung</related>
      </Docs>
    </Member>
  </Members>
</Type>
