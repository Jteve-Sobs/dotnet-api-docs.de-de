<Type Name="ImportOptions" FullName="System.Runtime.Serialization.ImportOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="02235ae6dcff5b028f499bb896df476b0296c29f" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51901018" /></Metadata><TypeSignature Language="C#" Value="public class ImportOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ImportOptions extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ImportOptions" />
  <TypeSignature Language="VB.NET" Value="Public Class ImportOptions" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportOptions" />
  <TypeSignature Language="F#" Value="type ImportOptions = class" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="7e9e2-101">Stellt die Optionen dar, die auf einen <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" /> festgelegt werden können.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-101">Represents the options that can be set on an <see cref="T:System.Runtime.Serialization.XsdDataContractImporter" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e9e2-102">Der <xref:System.Runtime.Serialization.XsdDataContractImporter> wird verwendet, um mit dem [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] CodeDOM Code aus dem XML-Schema zu generieren.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-102">The <xref:System.Runtime.Serialization.XsdDataContractImporter> is used to generate code from XML schema using the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] CodeDOM.</span></span> <span data-ttu-id="7e9e2-103">Um ein XML-Schema aus einer Assembly zu generieren, verwenden Sie den <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-103">To generate an XML schema from an assembly, use the <xref:System.Runtime.Serialization.XsdDataContractExporter>.</span></span>  
  
 <span data-ttu-id="7e9e2-104">Weitere Informationen zum Importieren und Exportieren von Schemas finden Sie unter [Schema importieren und exportieren](~/docs/framework/wcf/feature-details/schema-import-and-export.md) und [Importieren von Schemas zum Generieren von Klassen](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md).</span><span class="sxs-lookup"><span data-stu-id="7e9e2-104">For more information about importing and exporting schemas, see [Schema Import and Export](~/docs/framework/wcf/feature-details/schema-import-and-export.md) and [Importing Schema to Generate Classes](~/docs/framework/wcf/feature-details/importing-schema-to-generate-classes.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7e9e2-105">Im folgenden Beispiel wird eine Instanz der <xref:System.Runtime.Serialization.ImportOptions>-Klasse erstellt, und die <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A>-Eigenschaft und die <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A>-Eigenschaft werden festgelegt.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-105">The following example creates an instance of the <xref:System.Runtime.Serialization.ImportOptions> class and sets the <xref:System.Runtime.Serialization.ImportOptions.EnableDataBinding%2A> and <xref:System.Runtime.Serialization.ImportOptions.GenerateInternal%2A> properties.</span></span>  
  
 [!code-csharp[XsdDataContractImporter#3](~/samples/snippets/csharp/VS_Snippets_CFX/xsddatacontractimporter/cs/xsddatacontractimporterexample.cs#3)]
 [!code-vb[XsdDataContractImporter#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/xsddatacontractimporter/vb/xsddatacontractimporterexample.vb#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractImporter" />
    <altmember cref="T:System.Runtime.Serialization.XsdDataContractExporter" />
    <altmember cref="T:System.Runtime.Serialization.ExportOptions" />
    <related type="Article" href="https://msdn.microsoft.com/library/0da32b50-ccd9-463a-844c-7fe803d3bf44"><span data-ttu-id="7e9e2-106">Import und Export von Schemas</span><span class="sxs-lookup"><span data-stu-id="7e9e2-106">Schema Import and Export</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/b9170583-8c34-43bd-97bb-6c0c8dddeee0"><span data-ttu-id="7e9e2-107">Importieren von Schemas zum Generieren von Klassen</span><span class="sxs-lookup"><span data-stu-id="7e9e2-107">Importing Schema To Generate Classes</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ImportOptions.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportOptions();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7e9e2-108">Initialisiert eine neue Instanz der <see cref="T:System.Runtime.Serialization.ImportOptions" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-108">Initializes a new instance of the <see cref="T:System.Runtime.Serialization.ImportOptions" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeProvider">
      <MemberSignature Language="C#" Value="public System.CodeDom.Compiler.CodeDomProvider CodeProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.CodeDom.Compiler.CodeDomProvider CodeProvider" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.CodeProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property CodeProvider As CodeDomProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::CodeDom::Compiler::CodeDomProvider ^ CodeProvider { System::CodeDom::Compiler::CodeDomProvider ^ get(); void set(System::CodeDom::Compiler::CodeDomProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CodeProvider : System.CodeDom.Compiler.CodeDomProvider with get, set" Usage="System.Runtime.Serialization.ImportOptions.CodeProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.Compiler.CodeDomProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e9e2-109">Ruft eine <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />-Instanz ab, die die Möglichkeit bietet, zu überprüfen, ob bestimmte Optionen für eine Zielsprache unterstützt werden, oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-109">Gets or sets a <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> instance that provides the means to check whether particular options for a target language are supported.</span></span></summary>
        <value><span data-ttu-id="7e9e2-110">Ein <see cref="T:System.CodeDom.Compiler.CodeDomProvider" />, der die Möglichkeit bietet, zu überprüfen, ob bestimmte Optionen für eine Zielsprache unterstützt werden.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-110">A <see cref="T:System.CodeDom.Compiler.CodeDomProvider" /> that provides the means to check whether particular options for a target language are supported.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e9e2-111">Um die Codegenerierung für verschiedene Sprachen besser zu unterstützen, muss die Information darüber, was von der Zielsprache unterstützt wird, an den Schemaimporter übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-111">To support better code generation for different languages, information about what is supported by the target language needs to be passed to the schema importer.</span></span> <span data-ttu-id="7e9e2-112">Dies erfolgt durch Übergabe einer Instanz der <xref:System.CodeDom.Compiler.CodeDomProvider>-Klasse, was eine <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A>-Methode darstellt, um zu prüfen, ob sie bestimmte <xref:System.CodeDom.Compiler.CodeGeneratorOptions> unterstützt.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-112">This is done by passing an instance of the <xref:System.CodeDom.Compiler.CodeDomProvider> class, which provides a <xref:System.CodeDom.Compiler.CodeDomProvider.Supports%2A> method to check whether it supports particular <xref:System.CodeDom.Compiler.CodeGeneratorOptions>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContractSurrogate">
      <MemberSignature Language="C#" Value="public System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Serialization.IDataContractSurrogate DataContractSurrogate" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.DataContractSurrogate" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContractSurrogate As IDataContractSurrogate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Runtime::Serialization::IDataContractSurrogate ^ DataContractSurrogate { System::Runtime::Serialization::IDataContractSurrogate ^ get(); void set(System::Runtime::Serialization::IDataContractSurrogate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataContractSurrogate : System.Runtime.Serialization.IDataContractSurrogate with get, set" Usage="System.Runtime.Serialization.ImportOptions.DataContractSurrogate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Serialization.IDataContractSurrogate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e9e2-113">Ruft ein Datenvertrag-Ersatzzeichen ab, das zur Änderung des während einer Importoperation generierten Codes verwendet werden kann, oder legt es fest.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-113">Gets or sets a data contract surrogate that can be used to modify the code generated during an import operation.</span></span></summary>
        <value><span data-ttu-id="7e9e2-114">Eine Implementierung der <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" />-Schnittstelle, die Schemaimport behandelt.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-114">An implementation of the <see cref="T:System.Runtime.Serialization.IDataContractSurrogate" /> interface that handles schema import.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDataBinding">
      <MemberSignature Language="C#" Value="public bool EnableDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.EnableDataBinding" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDataBinding { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDataBinding : bool with get, set" Usage="System.Runtime.Serialization.ImportOptions.EnableDataBinding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e9e2-115">Ruft einen Wert ab, der angibt, ob Typen in generiertem Code die <see cref="T:System.ComponentModel.INotifyPropertyChanged" />-Schnittstelle implementieren sollen, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-115">Gets or sets a value that specifies whether types in generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface.</span></span></summary>
        <value><span data-ttu-id="7e9e2-116"><see langword="true" />, wenn der generierte Code die <see cref="T:System.ComponentModel.INotifyPropertyChanged" />-Schnittstelle implementieren soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-116"><see langword="true" /> if the generated code should implement the <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> interface; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7e9e2-117">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-117">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e9e2-118">Diese Schnittstelle wird von [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]-Komponenten wie Windows Forms oder Windows Presentation Foundation verwendet, um Datenänderungen für Benutzerschnittstellenupdates zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-118">This interface is used by [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] components, such as Windows Forms or Windows Presentation Foundation, to capture data changes for user interface updates.</span></span> <span data-ttu-id="7e9e2-119">Durch die generierten Eigenschaften wird bei Änderung des Werts ein Eigenschaftenänderungsereignis herbeigeführt, wodurch die Benutzeroberflächen-Hooks entsprechend reagieren können.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-119">The generated properties raise a property-changed event when the value changes, allowing UI hooks to act accordingly.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateInternal">
      <MemberSignature Language="C#" Value="public bool GenerateInternal { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateInternal" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateInternal" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateInternal As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateInternal { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateInternal : bool with get, set" Usage="System.Runtime.Serialization.ImportOptions.GenerateInternal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e9e2-120">Ruft einen Wert ab, der angibt, ob generierter Code als intern oder öffentlich markiert werden soll, oder legt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-120">Gets or sets a value that specifies whether generated code will be marked internal or public.</span></span></summary>
        <value><span data-ttu-id="7e9e2-121"><see langword="true" />, wenn der Code als <see langword="internal" /> markiert werden soll, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-121"><see langword="true" /> if the code will be marked <see langword="internal" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7e9e2-122">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-122">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GenerateSerializable">
      <MemberSignature Language="C#" Value="public bool GenerateSerializable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool GenerateSerializable" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.GenerateSerializable" />
      <MemberSignature Language="VB.NET" Value="Public Property GenerateSerializable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool GenerateSerializable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.GenerateSerializable : bool with get, set" Usage="System.Runtime.Serialization.ImportOptions.GenerateSerializable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e9e2-123">Ruft einen Wert ab, der angibt, ob generierte Datenvertragsklassen zusätzlich zum <see cref="T:System.SerializableAttribute" />-Attribut mit dem <see cref="T:System.Runtime.Serialization.DataContractAttribute" />-Attribut markiert werden sollen, oder setzt ihn fest.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-123">Gets or sets a value that specifies whether generated data contract classes will be marked with the <see cref="T:System.SerializableAttribute" /> attribute in addition to the <see cref="T:System.Runtime.Serialization.DataContractAttribute" /> attribute.</span></span></summary>
        <value><span data-ttu-id="7e9e2-124"><see langword="true" />, um Klassen mit dem angewendeten <see cref="T:System.SerializableAttribute" /> zu generieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-124"><see langword="true" /> to generate classes with the <see cref="T:System.SerializableAttribute" /> applied; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7e9e2-125">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-125">The default is <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ImportXmlType">
      <MemberSignature Language="C#" Value="public bool ImportXmlType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ImportXmlType" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ImportXmlType" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportXmlType As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ImportXmlType { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ImportXmlType : bool with get, set" Usage="System.Runtime.Serialization.ImportOptions.ImportXmlType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e9e2-126">Ruft einen Wert ab, der bestimmt, ob alle XML-Schematypen, einschließlich derer, die keinem Datenvertragsschema entsprechen, importiert werden sollen, oder legt ihn fest. </span><span class="sxs-lookup"><span data-stu-id="7e9e2-126">Gets or sets a value that determines whether all XML schema types, even those that do not conform to a data contract schema, will be imported.</span></span></summary>
        <value><span data-ttu-id="7e9e2-127"><see langword="true" />, um alle Schematypen zu importieren, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-127"><see langword="true" /> to import all schema types; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7e9e2-128">Der Standardwert ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-128">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e9e2-129">Normalerweise schlägt der Import eines Typs, der keinem gültigen Datenvertragsschema entspricht, fehl.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-129">Normally, importing a type that does not conform to a valid data contract schema will fail.</span></span> <span data-ttu-id="7e9e2-130">Wenn diese Eigenschaft jedoch auf `true` festgelegt ist, werden diese Typen als Typen importiert, die die <xref:System.Xml.Serialization.IXmlSerializable>-Schnittstelle implementieren.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-130">However, when this property is set to `true`, all such types will be imported as types that implement the <xref:System.Xml.Serialization.IXmlSerializable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Namespaces">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,string&gt; Namespaces { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, string&gt; Namespaces" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.Namespaces" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Namespaces As IDictionary(Of String, String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ Namespaces { System::Collections::Generic::IDictionary&lt;System::String ^, System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Namespaces : System.Collections.Generic.IDictionary&lt;string, string&gt;" Usage="System.Runtime.Serialization.ImportOptions.Namespaces" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e9e2-131">Ruft ein Wörterbuch ab, das die Zuordnung von Datenvertragsnamespaces zu den CLR-Namespaces enthält, die zur Generierung von Code während eines Importvorgangs verwendet werden müssen.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-131">Gets a dictionary that contains the mapping of data contract namespaces to the CLR namespaces that must be used to generate code during an import operation.</span></span></summary>
        <value><span data-ttu-id="7e9e2-132">Ein <see cref="T:System.Collections.Generic.IDictionary`2" />, der die Namespacezuordnungen enthält.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-132">A <see cref="T:System.Collections.Generic.IDictionary`2" /> that contains the namespace mappings.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedCollectionTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedCollectionTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedCollectionTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedCollectionTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedCollectionTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedCollectionTypes : System.Collections.Generic.ICollection&lt;Type&gt;" Usage="System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e9e2-133">Ruft eine Auflistung von Typen ab, die Datenvertragsauflistungen darstellt, auf die bei der Generierung von Code für Auflistungen wie Listen oder Wörterbücher von Elementen verwiesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-133">Gets a collection of types that represents data contract collections that should be referenced when generating code for collections, such as lists or dictionaries of items.</span></span></summary>
        <value><span data-ttu-id="7e9e2-134">Ein <see cref="T:System.Collections.Generic.ICollection`1" />, der die Auflistungstypen enthält, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-134">An <see cref="T:System.Collections.Generic.ICollection`1" /> that contains the referenced collection types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7e9e2-135">Standardmäßig wird beim Importieren eines Auflistungsschemas ein Array generiert (es sei denn, das Schema enthält eine Anmerkung, die einen anderen Typ beschreibt).</span><span class="sxs-lookup"><span data-stu-id="7e9e2-135">By default, an array will be generated when importing a collection schema (unless the schema has a special annotation that mentions a different type).</span></span> <span data-ttu-id="7e9e2-136">Wenn in der <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A>-Auflistung jedoch ein übereinstimmender Typ vorhanden ist, wird dieser Typ verwendet.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-136">However, if there is a matching type in the <xref:System.Runtime.Serialization.ImportOptions.ReferencedCollectionTypes%2A> collection, that type will be used.</span></span> <span data-ttu-id="7e9e2-137">Beispielsweise wird beim Importieren eines Schemas, das eine Liste ganzer Zahlen enthält, normalerweise ein Array von Ganzzahlen generiert.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-137">For example, when importing schema that contains a list of integers, an array of integers will normally be generated.</span></span> <span data-ttu-id="7e9e2-138">Wenn die Auflistung jedoch den <xref:System.Collections.Generic.LinkedList%601> vom Typ Integer enthält, wird dieser Typ anstelle des Arrays verwendet.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-138">However, if the collection contains the <xref:System.Collections.Generic.LinkedList%601> of type integer, that type will be used instead of the array.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;Type&gt; ReferencedTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;class System.Type&gt; ReferencedTypes" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Serialization.ImportOptions.ReferencedTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReferencedTypes As ICollection(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;Type ^&gt; ^ ReferencedTypes { System::Collections::Generic::ICollection&lt;Type ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReferencedTypes : System.Collections.Generic.ICollection&lt;Type&gt;" Usage="System.Runtime.Serialization.ImportOptions.ReferencedTypes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7e9e2-139">Ruft einen <see cref="T:System.Collections.Generic.IList`1" /> ab, der Typen enthält, auf die in generiertem Code verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-139">Gets a <see cref="T:System.Collections.Generic.IList`1" /> containing types referenced in generated code.</span></span></summary>
        <value><span data-ttu-id="7e9e2-140">Ein <see cref="T:System.Collections.Generic.IList`1" />, der die Typen enthält, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="7e9e2-140">A <see cref="T:System.Collections.Generic.IList`1" /> that contains the referenced types.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>