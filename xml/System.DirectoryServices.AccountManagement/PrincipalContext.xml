<Type Name="PrincipalContext" FullName="System.DirectoryServices.AccountManagement.PrincipalContext">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c3a1f55195e9666b0bd26f1c4e3d487d2b1f5f61" /><Meta Name="ms.sourcegitcommit" Value="9e3550fb2088d4faf2043f0acb29da4555519937" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/12/2018" /><Meta Name="ms.locfileid" Value="53300570" /></Metadata><TypeSignature Language="C#" Value="public class PrincipalContext : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PrincipalContext extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.PrincipalContext" />
  <TypeSignature Language="VB.NET" Value="Public Class PrincipalContext&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class PrincipalContext : IDisposable" />
  <TypeSignature Language="F#" Value="type PrincipalContext = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kapselt den Server oder die Domäne, mit denen alle Vorgänge ausgeführt werden, sowie den zugrunde liegenden Container für diese Vorgänge und die darin verwendeten Anmeldeinformationen.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für Suchvorgänge der Prinzipalkontext definiert die Suchbasis und für Insert-Vorgänge definiert der Kontext der Container, die an dem das Objekt eingefügt wird.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.DirectoryServices.AccountManagement.PrincipalContext> Konstruktoren validiert die Parameter und der Server, jedoch nicht versuchen Sie nicht, Anmeldeinformationen zu überprüfen.  
  
 Wenn Prinzipalkontextobjekt ohne Angabe eines Containers erstellt wird, kann es verwendet werden, um mehrere unterschiedliche Container darzustellen. Ein Container kann als Grundlage für Abfragevorgänge verwendet werden, während zusätzliche Container neu erstellten principal-Objekten enthalten können. Verwendet die AccountManagement-API beim Einfügen von Benutzern oder Gruppen in den Typ des möglich, z. B. den bekannten Benutzer Standardcontainer, "CN = Users, DC = Fabrikam, DC = com". Wenn der Computer in den Speicher eingefügt werden, verwendet die API die "CN = Computers, DC = Fabrikam, DC = com" Container. Beachten Sie, dass die Standardnamen für den Container, die vom Domänenadministrator geändert werden können. Da die Konstruktoren für die principal-Objekt nur eine Prinzipalkontext angeben können, werden zusätzliche Kontexten als Standardverhalten verfügbar gemacht, wenn die Anwendung einen Domänenkontext erstellt, ohne Angabe eines Containers. Da das Anwendungsverzeichnis keine bekannte Container besitzt, muss die Anwendung einen Container im Konstruktor angeben oder die <xref:System.ArgumentException> ausgelöst. SAM weist keine Container, eine <xref:System.ArgumentException> wird ausgelöst, wenn die Anwendung versucht, einen Container im Konstruktor angeben.  
  
 In den einzelnen Versionen des Konstruktors, der einen Benutzernamen als Parameter akzeptiert die `userName` Zeichenfolge kann in unterschiedlichen Formaten sein. Die drei unterstützten NameFormats für sind Nt4Name "userPrincipalName" und "sAMAccountName". Weitere Informationen zu Namen im Format, finden Sie in der Dokumentation ADS_NAME_TYPE_ENUM [hier](https://go.microsoft.com/fwlink/?LinkID=99942).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext contextType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
      </Parameters>
      <Docs>
        <param name="contextType">Ein <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert, der den Speichertyp für den Prinzipalkontext angibt.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Klasse mit dem angegebenen Kontexttyp.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Bei Verwendung des Anwendungsverzeichniskontexts muss ein Name oder ein Container angegeben werden.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der <paramref name="contextType" />-Parameter enthält keinen gültigen <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">Ein <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert, der den Speichertyp für den Prinzipalkontext angibt.</param>
        <param name="name">Der Name der Domäne oder des Servers für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />-Kontexttypen, der Computername für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttypen, oder der Name des Servers und der Name des Ports, die die <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Instanz hosten.  
  
Wenn der Name für einen <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />-Kontexttyp <see langword="null" /> lautet, dann stellt dieser Kontexttyp einen Domänencontroller für die Domäne des Benutzerprinzipals dar, unter dem der Thread ausgeführt wird. Wenn der Name für einen <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttyp <see langword="null" /> lautet, ist dies der Name des lokalen Computers. Dieser Parameter kann für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Kontexttypen nicht <see langword="null" /> sein.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Klasse unter Verwendung des angegebenen Kontexttyps und des angegebenen Namens.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Wenn <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> im <paramref name="contextType" />-Parameter angegeben wird, muss ein Name angegeben werden.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der <paramref name="contextType" />-Parameter enthält keinen gültigen <see cref="F:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, container)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">Ein <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert, der den Speichertyp für den Prinzipalkontext angibt.</param>
        <param name="name">Der Name der Domäne oder des Servers für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />-Kontexttypen, der Computername für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttypen, oder der Name des Servers und der Name des Ports, die die <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Instanz hosten.  
  
Wenn der Name für einen <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />-Kontexttyp <see langword="null" /> lautet, dann stellt dieser Kontexttyp einen Domänencontroller für die Domäne des Benutzerprinzipals dar, unter dem der Thread ausgeführt wird. Wenn der Name für einen <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttyp <see langword="null" /> lautet, ist dies der Name des lokalen Computers. Dieser Parameter kann für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Kontexttypen nicht <see langword="null" /> sein.</param>
        <param name="container">Der Container für den Speicher, der als Stamm des Kontexts verwendet werden soll. Alle Abfragen erfolgen unter diesem Stammort, und alle Einfügevorgänge werden in diesem Container ausgeführt.  
  
Bei <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />- und <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Kontexttypen stellt dieser Parameter den Distinguished Name eines Containerobjekts dar.  
  
Bei <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttypen muss dieser Parameter auf <see langword="null" /> festgelegt werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Klasse mit dem angegebenen Kontexttyp, dem angegebenen Namen und dem angegebenen Container.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.InvalidOperationException> ausgelöst werden, in nachfolgendes Verzeichnis, das Vorgänge aufrufen, die mit dem Server hergestellt werden soll, wenn der Container für angegeben ein <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> Prinzipalkontext ist kein gültiger Container. Ein Container wird definiert, wie ein Objekt, dessen Schemaklasse verfügt über die Prinzipalklassen, entweder auf Benutzer-, Gruppen- oder Computer in der PossibleInferiors-Attribut.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wenn der <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttyp im <paramref name="contextType" />-Parameter angegeben wird, kann kein Container angegeben werden.  
  
Wenn <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> im <paramref name="contextType" />-Parameter angegeben wird, muss ein Name oder ein Container angegeben werden.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der <paramref name="contextType" />-Parameter enthält keinen gültigen <see cref="F:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, System.DirectoryServices.AccountManagement.ContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, valuetype System.DirectoryServices.AccountManagement.ContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container, System::DirectoryServices::AccountManagement::ContextOptions options);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string * System.DirectoryServices.AccountManagement.ContextOptions -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, container, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.AccountManagement.ContextOptions" />
      </Parameters>
      <Docs>
        <param name="contextType">Ein <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert, der den Speichertyp für den Prinzipalkontext angibt.</param>
        <param name="name">Der Name der Domäne oder des Servers für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />-Kontexttypen, der Computername für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttypen, oder der Name des Servers und der Name des Ports, die die <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Instanz hosten.  
  
Wenn der Name für einen <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />-Kontexttyp <see langword="null" /> lautet, dann stellt dieser Kontexttyp einen Domänencontroller für die Domäne des Benutzerprinzipals dar, unter dem der Thread ausgeführt wird. Wenn der Name für einen <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttyp <see langword="null" /> lautet, ist dies der Name des lokalen Computers. Dieser Parameter kann für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Kontexttypen nicht <see langword="null" /> sein.</param>
        <param name="container">Der Container für den Speicher, der als Stamm des Kontexts verwendet werden soll. Alle Abfragen erfolgen unter diesem Stammort, und alle Einfügevorgänge werden in diesem Container ausgeführt.  
  
Bei <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />- und <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Kontexttypen stellt dieser Parameter den Distinguished Name eines Containerobjekts dar.  
  
Bei <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttypen muss dieser Parameter auf <see langword="null" /> festgelegt werden.</param>
        <param name="options">Eine Kombination aus einem oder mehreren <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" />-Enumerationswerten, die die Optionen für die Serverbindung angeben. Wenn dieser Parameter <see langword="null" /> ist, sind die Standardoptionen ContextOptions.Negotiate, ContextOptions.Signing und ContextOptions.Sealing.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Klasse mit dem angegebenen Kontexttyp, dem angegebenen Namen, dem angegebenen Container sowie Kontextoptionen.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.InvalidOperationException> ausgelöst werden, in nachfolgendes Verzeichnis, das Vorgänge aufrufen, die mit dem Server hergestellt werden soll, wenn der Container für angegeben ein <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> Prinzipalkontext ist kein gültiger Container. Ein Container wird definiert, wie ein Objekt, dessen Schemaklasse verfügt über die Prinzipalklassen, entweder auf Benutzer-, Gruppen- oder Computer in der PossibleInferiors-Attribut.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Wenn der <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttyp im <paramref name="contextType" />-Parameter angegeben wird, kann kein Container angegeben werden.  
  
Wenn <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> im <paramref name="contextType" />-Parameter angegeben wird, muss ein Name oder ein Container angegeben werden.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der <paramref name="contextType" />-Parameter enthält keinen gültigen <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert.  
  
Der <paramref name="options" />-Parameter enthält keine Kombination aus gültigen <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" />-Enumerationswerten.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">Ein <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert, der den Speichertyp für den Prinzipalkontext angibt.</param>
        <param name="name">Der Name der Domäne oder des Servers für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />-Kontexttypen, der Computername für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttypen, oder der Name des Servers und der Name des Ports, die die <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Instanz hosten.  
  
Wenn der Name für einen <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />-Kontexttyp <see langword="null" /> lautet, dann stellt dieser Kontexttyp einen Domänencontroller für die Domäne des Benutzerprinzipals dar, unter dem der Thread ausgeführt wird. Wenn der Name für einen <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttyp <see langword="null" /> lautet, ist dies der Name des lokalen Computers. Dieser Parameter kann für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Kontexttypen nicht <see langword="null" /> sein.</param>
        <param name="userName">Der Benutzername zum Herstellen einer Verbindung mit dem Speicher. Wenn die Parameter <paramref name="userName" /> und <paramref name="password" /> jeweils <see langword="null" /> sind, werden die Anmeldeinformationen des aktuellen Prozesses verwendet. Wenn sowohl der <paramref name="userName" />-Parameter als auch der <paramref name="password" />-Parameter ungleich NULL sind, werden die von diesen Parametern angegebenen Anmeldeinformationen zum Herstellen einer Verbindung mit dem Speicher verwendet.</param>
        <param name="password">Das Kennwort, das verwendet wird, um eine Verbindung mit dem Speicher herzustellen. Wenn die Parameter <paramref name="userName" /> und <paramref name="password" /> jeweils <see langword="null" /> sind, werden die Anmeldeinformationen des aktuellen Prozesses verwendet. Wenn sowohl der <paramref name="userName" />-Parameter als auch der <paramref name="password" />-Parameter ungleich NULL sind, werden die von diesen Parametern angegebenen Anmeldeinformationen zum Herstellen einer Verbindung mit dem Speicher verwendet.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Klasse mit dem angegebenen Kontexttyp, dem angegebenen Namen, dem angegebenen Benutzernamen und dem angegebenen Kennwort.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="username" />-Parameter und der <paramref name="password" />-Parameter müssen entweder <see langword="null" /> sein oder einen Wert enthalten.  
  
Wenn <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> im <paramref name="contextType" />-Parameter angegeben wird, muss ein Name angegeben werden.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der <paramref name="contextType" />-Parameter enthält keinen gültigen <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string * string * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, container, userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">Ein <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert, der den Speichertyp für den Prinzipalkontext angibt.</param>
        <param name="name">Der Name der Domäne oder des Servers für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />-Kontexttypen, der Computername für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttypen, oder der Name des Servers und der Name des Ports, die die <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Instanz hosten.  
  
Wenn der Name für einen <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />-Kontexttyp <see langword="null" /> lautet, dann stellt dieser Kontexttyp einen Domänencontroller für die Domäne des Benutzerprinzipals dar, unter dem der Thread ausgeführt wird. Wenn der Name für einen <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttyp <see langword="null" /> lautet, ist dies der Name des lokalen Computers. Dieser Parameter kann für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Kontexttypen nicht <see langword="null" /> sein.</param>
        <param name="container">Der Container für den Speicher, der als Stamm des Kontexts verwendet werden soll. Alle Abfragen erfolgen unter diesem Stammort, und alle Einfügevorgänge werden in diesem Container ausgeführt.  
  
Bei <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />- und <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Kontexttypen stellt dieser Parameter den Distinguished Name eines Containerobjekts dar.  
  
Bei <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttypen muss dieser Parameter auf <see langword="null" /> festgelegt werden.</param>
        <param name="userName">Der Benutzername zum Herstellen einer Verbindung mit dem Speicher. Wenn der <paramref name="userName" />-Parameter und der <paramref name="password" />-Parameter <see langword="null" /> sind, werden die Standardanmeldeinformationen des aktuellen Prinzipals verwendet. Wenn sowohl der <paramref name="userName" />-Parameter als auch der <paramref name="password" />-Parameter ungleich NULL sind, werden die von diesen Parametern angegebenen Anmeldeinformationen zum Herstellen einer Verbindung mit dem Speicher verwendet.</param>
        <param name="password">Das Kennwort, das verwendet wird, um eine Verbindung mit dem Speicher herzustellen. Wenn der <paramref name="userName" />-Parameter und der <paramref name="password" />-Parameter <see langword="null" /> sind, werden die Standardanmeldeinformationen des aktuellen Prinzipals verwendet. Wenn sowohl der <paramref name="userName" />-Parameter als auch der <paramref name="password" />-Parameter ungleich NULL sind, werden die von diesen Parametern angegebenen Anmeldeinformationen zum Herstellen einer Verbindung mit dem Speicher verwendet.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Klasse mit dem angegebenen Kontexttyp, dem angegebenen Namen, dem angegebenen Container, dem angegebenen Benutzernamen und dem angegebenen Kennwort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.InvalidOperationException> ausgelöst werden, in nachfolgendes Verzeichnis, das Vorgänge aufrufen, die mit dem Server hergestellt werden soll, wenn der Container für angegeben ein <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> Prinzipalkontext ist kein gültiger Container. Ein Container wird definiert, wie ein Objekt, dessen Schemaklasse verfügt über die Prinzipalklassen, entweder auf Benutzer-, Gruppen- oder Computer in der PossibleInferiors-Attribut.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="username" />-Parameter und der <paramref name="password" />-Parameter müssen entweder <see langword="null" /> sein oder einen Wert enthalten.  
  
Wenn der <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttyp im <paramref name="contextType" />-Parameter angegeben wird, kann kein Container angegeben werden.  
  
Ein <paramref name="name" /> oder ein <paramref name="container" /> muss angegeben werden, wenn <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> im <paramref name="contextType" />-Parameter angegeben wird.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der <paramref name="contextType" />-Parameter enthält keinen gültigen <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PrincipalContext (System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, System.DirectoryServices.AccountManagement.ContextOptions options, string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.DirectoryServices.AccountManagement.ContextType contextType, string name, string container, valuetype System.DirectoryServices.AccountManagement.ContextOptions options, string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.#ctor(System.DirectoryServices.AccountManagement.ContextType,System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PrincipalContext(System::DirectoryServices::AccountManagement::ContextType contextType, System::String ^ name, System::String ^ container, System::DirectoryServices::AccountManagement::ContextOptions options, System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.PrincipalContext : System.DirectoryServices.AccountManagement.ContextType * string * string * System.DirectoryServices.AccountManagement.ContextOptions * string * string -&gt; System.DirectoryServices.AccountManagement.PrincipalContext" Usage="new System.DirectoryServices.AccountManagement.PrincipalContext (contextType, name, container, options, userName, password)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="contextType" Type="System.DirectoryServices.AccountManagement.ContextType" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="container" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.AccountManagement.ContextOptions" />
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="contextType">Ein <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert, der den Speichertyp für den Prinzipalkontext angibt.</param>
        <param name="name">Der Name der Domäne oder des Servers für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />-Kontexttypen, der Computername für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttypen, oder der Name des Servers und der Name des Ports, die die <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Instanz hosten.  
  
Wenn der Name für einen <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />-Kontexttyp <see langword="null" /> lautet, dann stellt dieser Kontexttyp einen Domänencontroller für die Domäne des Benutzerprinzipals dar, unter dem der Thread ausgeführt wird. Wenn der Name für einen <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttyp <see langword="null" /> lautet, ist dies der Name des lokalen Computers. Dieser Parameter kann für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Kontexttypen nicht <see langword="null" /> sein.</param>
        <param name="container">Der Container für den Speicher, der als Stamm des Kontexts verwendet werden soll. Alle Abfragen erfolgen unter diesem Stammort, und alle Einfügevorgänge werden in diesem Container ausgeführt.  
  
Bei <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" />- und <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" />-Kontexttypen stellt dieser Parameter den Distinguished Name eines Containerobjekts dar.  
  
Bei <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttypen muss dieser Parameter auf <see langword="null" /> festgelegt werden.</param>
        <param name="options">Eine Kombination aus einem oder mehreren <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" />-Enumerationswerten, die die Optionen für die Serverbindung angeben. Wenn dieser Parameter <see langword="null" /> ist, sind die Standardoptionen ContextOptions.Negotiate, ContextOptions.Signing und ContextOptions.Sealing.</param>
        <param name="userName">Der Benutzername zum Herstellen einer Verbindung mit dem Speicher. Wenn der <paramref name="userName" />-Parameter und der <paramref name="password" />-Parameter <see langword="null" /> sind, werden die Standardanmeldeinformationen des aktuellen Prinzipals verwendet. Wenn sowohl der <paramref name="userName" />-Parameter als auch der <paramref name="password" />-Parameter ungleich NULL sind, werden die von diesen Parametern angegebenen Anmeldeinformationen zum Herstellen einer Verbindung mit dem Speicher verwendet.</param>
        <param name="password">Das Kennwort, das verwendet wird, um eine Verbindung mit dem Speicher herzustellen. Wenn der <paramref name="userName" />-Parameter und der <paramref name="password" />-Parameter <see langword="null" /> sind, werden die Standardanmeldeinformationen des aktuellen Prinzipals verwendet. Wenn sowohl der <paramref name="userName" />-Parameter als auch der <paramref name="password" />-Parameter ungleich NULL sind, werden die von diesen Parametern angegebenen Anmeldeinformationen zum Herstellen einer Verbindung mit dem Speicher verwendet.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Klasse mit dem angegebenen Kontexttyp, dem angegebenen Namen, dem angegebenen Container, den angegebenen Kontextoptionen, dem angegebenen Benutzernamen und dem angegebenen Kennwort.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.InvalidOperationException> ausgelöst werden, in nachfolgendes Verzeichnis, das Vorgänge aufrufen, die mit dem Server hergestellt werden soll, wenn der Container für angegeben ein <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> Prinzipalkontext ist kein gültiger Container. Ein Container wird definiert, wie ein Objekt, dessen Schemaklasse verfügt über die Prinzipalklassen, entweder auf Benutzer-, Gruppen- oder Computer in der PossibleInferiors-Attribut.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="username" />-Parameter und der <paramref name="password" />-Parameter müssen entweder <see langword="null" /> sein oder einen Wert enthalten.  
  
Wenn der <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" />-Kontexttyp im <paramref name="contextType" />-Parameter angegeben wird, kann kein Container angegeben werden.  
  
Wenn <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> im <paramref name="contextType" />-Parameter angegeben wird, muss ein Name oder ein Container angegeben werden.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der <paramref name="contextType" />-Parameter enthält keinen gültigen <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert.  
  
Der <paramref name="options" />-Parameter enthält keine Kombination aus gültigen <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" />-Enumerationswerten.</exception>
      </Docs>
    </Member>
    <Member MemberName="ConnectedServer">
      <MemberSignature Language="C#" Value="public string ConnectedServer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectedServer" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.ConnectedServer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConnectedServer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectedServer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ConnectedServer : string" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.ConnectedServer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des Servers ab, mit dem der Prinzipalkontext verbunden ist.</summary>
        <value>Der Name des Servers mit dem der Prinzipalkontext verbunden ist oder <see langword="null" /> , wenn der Prinzipalkontext nicht mit einem Server verbunden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Kontexttyp ist <xref:System.DirectoryServices.AccountManagement.ContextType.Domain>, diese Eigenschaft gibt den Namen der Domäne-Controller oder einer Anwendung Directory-Instanz zurück. Wenn der Kontexttyp ist <xref:System.DirectoryServices.AccountManagement.ContextType.Machine>, diese Eigenschaft gibt den Computernamen zurück.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Container">
      <MemberSignature Language="C#" Value="public string Container { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Container" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.Container" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Container As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Container { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Container : string" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.Container" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der im Containerparameter des Konstruktors angegeben ist.</summary>
        <value>Der Container im Speicher für die Verwendung als Stamm des Kontexts oder <see langword="null" /> Wenn der Container nicht angegeben ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Alle Abfragen erfolgen unter diesem Stammort, und alle Einfügevorgänge werden in diesem Container ausgeführt. Für <xref:System.DirectoryServices.AccountManagement.ContextType.Domain> und <xref:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory> -Kontexttypen stellt dieser Eigenschaft ist der distinguished Name eines Containerobjekts. Für <xref:System.DirectoryServices.AccountManagement.ContextType.Machine> -Kontexttypen stellt dieser Eigenschaft muss `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.ContextType ContextType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.AccountManagement.ContextType ContextType" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContextType As ContextType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::ContextType ContextType { System::DirectoryServices::AccountManagement::ContextType get(); };" />
      <MemberSignature Language="F#" Value="member this.ContextType : System.DirectoryServices.AccountManagement.ContextType" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.ContextType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.ContextType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Kontexttyp ab, der den Speichertyp für den Prinzipalkontext angibt.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.AccountManagement.ContextType" />-Enumerationswert, der den Zieltyp für die Verbindung angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft wird verwendet, wenn die Anwendung nicht direkt den Prinzipalkontext erstellen, und geben Sie den Kontext. Wenn die Anwendung der Gruppenmitgliedschaft aufgezählt wird, kann z. B. diese Eigenschaft verwendet werden, die den Typ des Speichers zu ermitteln, zu dem der Prinzipal gehört.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="principalContext.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verwirft die aktuelle Instanz des <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />-Objekts.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der als <paramref name="name" />-Parameter im Konstruktor angegeben wurde.</summary>
        <value>Der Name der Domäne oder des Servers für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Domain" /> Kontexttypen, der Hostname für <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> Kontexttypen, der Name des Servers der <see cref="F:System.DirectoryServices.AccountManagement.ContextType.ApplicationDirectory" /> -Instanz oder <see langword="null" /> , wenn kein Name festgelegt wurde.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Options">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.ContextOptions Options { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DirectoryServices.AccountManagement.ContextOptions Options" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.Options" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Options As ContextOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::ContextOptions Options { System::DirectoryServices::AccountManagement::ContextOptions get(); };" />
      <MemberSignature Language="F#" Value="member this.Options : System.DirectoryServices.AccountManagement.ContextOptions" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.Options" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.ContextOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Optionen ab, die im <paramref name="contextOptions" />-Parameter des Konstruktors angegeben wurden.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" />-Enumerationswert, der den Zieltyp für die Verbindung angibt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UserName">
      <MemberSignature Language="C#" Value="public string UserName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserName" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.PrincipalContext.UserName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserName : string" Usage="System.DirectoryServices.AccountManagement.PrincipalContext.UserName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der im Benutzernamenparameter des Konstruktors angegeben ist.</summary>
        <value>Der Benutzername, der zur Verbindung mit dem Store oder <see langword="null" /> , wenn kein Benutzername vorhanden ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft kann festgelegt werden, indem sie einen Benutzernamen in einer der unterschiedlichen Formaten übergeben. Eine vollständige Liste der zulässigen Typen von Formaten, finden Sie in der Dokumentation ADS_NAME_TYPE_ENUM [hier](https://go.microsoft.com/fwlink/?LinkID=99942).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateCredentials">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Erstellt die Verbindung zum Server und überprüft die angegebenen Anmeldeinformationen, wenn die Verbindung erstellt werden konnte.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Die `userName` -Argument in beide Überladungen dieser Methode werden in der Form muss *Benutzername* (z. B. *Mcampbell*) statt *"Domäne\Benutzername"* oder *Benutzername\@Domäne*.   
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateCredentials">
      <MemberSignature Language="C#" Value="public bool ValidateCredentials (string userName, string password);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateCredentials(string userName, string password) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateCredentials (userName As String, password As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateCredentials(System::String ^ userName, System::String ^ password);" />
      <MemberSignature Language="F#" Value="member this.ValidateCredentials : string * string -&gt; bool" Usage="principalContext.ValidateCredentials (userName, password)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="userName">Der Benutzername, der auf dem Server überprüft wird. Weitere Informationen zum Format von <paramref name="userName" /> finden Sie im Abschnitt „Hinweise“.</param>
        <param name="password">Das Kennwort, das auf dem Server überprüft wird.</param>
        <summary>Stellt die Verbindungen mit dem Server her und gibt einen booleschen Wert zurück, der angibt, ob der angegebene Benutzername und das Kennwort gültig sind.</summary>
        <returns><see langword="true" />, wenn die Anmeldeinformationen gültig sind; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials%2A> Methode bindet an den Server, die im Konstruktor angegeben. Wenn die `username` und `password` Argumente sind `null`, diese Methode überprüft, ob die Standardanmeldeinformationen für den aktuellen Prinzipal.  

Die `userName` Argument muss das Formular annehmen *Benutzername* (z. B. *Mcampbell*) statt *"Domäne\Benutzername"* oder *Benutzername\@Domäne*.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateCredentials">
      <MemberSignature Language="C#" Value="public bool ValidateCredentials (string userName, string password, System.DirectoryServices.AccountManagement.ContextOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ValidateCredentials(string userName, string password, valuetype System.DirectoryServices.AccountManagement.ContextOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials(System.String,System.String,System.DirectoryServices.AccountManagement.ContextOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function ValidateCredentials (userName As String, password As String, options As ContextOptions) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ValidateCredentials(System::String ^ userName, System::String ^ password, System::DirectoryServices::AccountManagement::ContextOptions options);" />
      <MemberSignature Language="F#" Value="member this.ValidateCredentials : string * string * System.DirectoryServices.AccountManagement.ContextOptions -&gt; bool" Usage="principalContext.ValidateCredentials (userName, password, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userName" Type="System.String" />
        <Parameter Name="password" Type="System.String" />
        <Parameter Name="options" Type="System.DirectoryServices.AccountManagement.ContextOptions" />
      </Parameters>
      <Docs>
        <param name="userName">Der Benutzername, der auf dem Server überprüft wird. Informationen zum Format von <paramref name="userName" /> finden Sie im Abschnitt „Hinweise“.</param>
        <param name="password">Das Kennwort, das auf dem Server überprüft wird.</param>
        <param name="options">Eine Kombination aus einem oder mehreren <see cref="T:System.DirectoryServices.AccountManagement.ContextOptions" />-Enumerationswerten, die die Optionen für die Serverbindung angeben. Dieser Parameter kann nur eine einfache Bindung mit oder ohne SSL oder eine Aushandlungsbindung angeben.</param>
        <summary>Stellt die Verbindungen mit dem Server her und gibt einen booleschen Wert zurück, der angibt, ob der angegebene Benutzername und das Kennwort gültig sind. Diese Methode führt eine schnelle Überprüfung von Benutzername und Kennwort durch.</summary>
        <returns><see langword="true" />, wenn die Anmeldeinformationen gültig sind; andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.DirectoryServices.AccountManagement.PrincipalContext.ValidateCredentials%2A> Methode bindet an den Server, die im Konstruktor angegeben. Wenn die `username` und `password` Parameter sind `null`, diese Methode überprüft, ob die Standardanmeldeinformationen für den aktuellen Prinzipal.  

Die `userName` Argument muss das Formular annehmen *Benutzername* (z. B. *Mcampbell*) statt *"Domäne\Benutzername"* oder *Benutzername\@Domäne*. 
 
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der <paramref name="options" />-Parameter muss <see cref="F:System.DirectoryServices.AccountManagement.ContextOptions.Negotiate" /> angeben, wenn der Kontexttyp <see cref="F:System.DirectoryServices.AccountManagement.ContextType.Machine" /> ist.</exception>
      </Docs>
    </Member>
  </Members>
</Type>