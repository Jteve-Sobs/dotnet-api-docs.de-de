<Type Name="GroupPrincipal" FullName="System.DirectoryServices.AccountManagement.GroupPrincipal">
  <Metadata><Meta Name="ms.openlocfilehash" Value="55fe7d113a837fed199a641106f2625cca3a196e" /><Meta Name="ms.sourcegitcommit" Value="8ae9a18b248625c8e1851e607c00346a64849587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="12/17/2019" /><Meta Name="ms.locfileid" Value="75136897" /></Metadata><TypeSignature Language="C#" Value="public class GroupPrincipal : System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit GroupPrincipal extends System.DirectoryServices.AccountManagement.Principal" />
  <TypeSignature Language="DocId" Value="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />
  <TypeSignature Language="VB.NET" Value="Public Class GroupPrincipal&#xA;Inherits Principal" />
  <TypeSignature Language="C++ CLI" Value="public ref class GroupPrincipal : System::DirectoryServices::AccountManagement::Principal" />
  <TypeSignature Language="F#" Value="type GroupPrincipal = class&#xA;    inherit Principal" />
  <AssemblyInfo>
    <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.DirectoryServices.AccountManagement.Principal</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netcore-2.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;dotnet-plat-ext-2.1;dotnet-plat-ext-2.2;dotnet-plat-ext-3.0;dotnet-plat-ext-3.1">
      <AttributeName>System.DirectoryServices.AccountManagement.DirectoryRdnPrefix("CN")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Kapselt Gruppenkonten. Gruppenkonten können beliebige Auflistungen von Prinzipalobjekten oder Konten sein, die zu Verwaltungszwecken erstellt werden.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.GroupPrincipal : System.DirectoryServices.AccountManagement.PrincipalContext -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="new System.DirectoryServices.AccountManagement.GroupPrincipal context" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
      </Parameters>
      <Docs>
        <param name="context">Der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />, der den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />-Klasse unter Verwendung des angegebenen Kontexts.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Gruppen Prinzipal Konto wird nicht permanent gespeichert, wenn es erstellt wird. Um das Konto beizubehalten, nennen Sie die <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>-Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public GroupPrincipal (System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.DirectoryServices.AccountManagement.PrincipalContext context, string samAccountName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.#ctor(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (context As PrincipalContext, samAccountName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; GroupPrincipal(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ samAccountName);" />
      <MemberSignature Language="F#" Value="new System.DirectoryServices.AccountManagement.GroupPrincipal : System.DirectoryServices.AccountManagement.PrincipalContext * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="new System.DirectoryServices.AccountManagement.GroupPrincipal (context, samAccountName)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="samAccountName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />, der den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <param name="samAccountName">Der SAM-Kontoname für diesen Prinzipal</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />-Klasse und weist diese dem angegebenen Kontext und dem angegebenen SAM zu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das Gruppen Prinzipal Konto wird nicht permanent gespeichert, wenn es erstellt wird. Um das Konto beizubehalten, nennen Sie die <xref:System.DirectoryServices.AccountManagement.Principal.Save%2A>-Methode.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public override void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Dispose();" />
      <MemberSignature Language="F#" Value="override this.Dispose : unit -&gt; unit" Usage="groupPrincipal.Dispose " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verwirft die aktuelle Instanz des <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />-Objekts.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="FindByIdentity">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt ein Gruppenprinzipalobjekt zurück, das mit dem angegebenen Identitätswert übereinstimmt.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindByIdentity (context As PrincipalContext, identityValue As String) As GroupPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::String ^ identityValue);" />
      <MemberSignature Language="F#" Value="static member FindByIdentity : System.DirectoryServices.AccountManagement.PrincipalContext * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity (context, identityValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />, der den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <param name="identityValue">Die Identität des Gruppenprinzipals. Dieser Parameter kann ein beliebiges Format aufweisen, das in der <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />-Enumeration enthalten ist.</param>
        <summary>Gibt ein Gruppenprinzipalobjekt zurück, das mit dem angegebenen Identitätswert übereinstimmt.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />-Objekt, das dem angegebenen Identitätswert und -typ entspricht, oder NULL, wenn keine Übereinstimmungen gefunden werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException">Es wurden mehrere Gruppenprinzipalobjekte gefunden, die mit dem aktuellen Gruppenobjekt übereinstimmen.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindByIdentity">
      <MemberSignature Language="C#" Value="public static System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity (System.DirectoryServices.AccountManagement.PrincipalContext context, System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.DirectoryServices.AccountManagement.GroupPrincipal FindByIdentity(class System.DirectoryServices.AccountManagement.PrincipalContext context, valuetype System.DirectoryServices.AccountManagement.IdentityType identityType, string identityValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity(System.DirectoryServices.AccountManagement.PrincipalContext,System.DirectoryServices.AccountManagement.IdentityType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::DirectoryServices::AccountManagement::GroupPrincipal ^ FindByIdentity(System::DirectoryServices::AccountManagement::PrincipalContext ^ context, System::DirectoryServices::AccountManagement::IdentityType identityType, System::String ^ identityValue);" />
      <MemberSignature Language="F#" Value="static member FindByIdentity : System.DirectoryServices.AccountManagement.PrincipalContext * System.DirectoryServices.AccountManagement.IdentityType * string -&gt; System.DirectoryServices.AccountManagement.GroupPrincipal" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity (context, identityType, identityValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.GroupPrincipal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.DirectoryServices.AccountManagement.PrincipalContext" />
        <Parameter Name="identityType" Type="System.DirectoryServices.AccountManagement.IdentityType" />
        <Parameter Name="identityValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="context">Der <see cref="T:System.DirectoryServices.AccountManagement.PrincipalContext" />, der den Server oder die Domäne angibt, für den bzw. die Vorgänge ausgeführt werden.</param>
        <param name="identityType">Ein <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />-Enumerationswert, der das Format des <paramref name="identityValue" />-Parameters angibt.</param>
        <param name="identityValue">Die Identität des Gruppenprinzipals. Dieser Parameter kann ein beliebiges Format aufweisen, das in der <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />-Enumeration enthalten ist.</param>
        <summary>Gibt ein Gruppenprinzipalobjekt zurück, das mit dem angegebenen Identitätstyp und dem angegebenen Identitätswert übereinstimmt. Diese Version der <see cref="Overload:System.DirectoryServices.AccountManagement.GroupPrincipal.FindByIdentity" />-Methode bestimmt das Format des Identitätswerts.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.AccountManagement.GroupPrincipal" />-Objekt, das mit dem angegebenen Identitätswert und mit dem angegebenen Identitätstyp übereinstimmt, oder NULL, wenn keine Übereinstimmungen gefunden werden.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.DirectoryServices.AccountManagement.MultipleMatchesException">Es wurden mehrere Gruppenprinzipalobjekte gefunden, die mit dem aktuellen Gruppenobjekt übereinstimmen.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Der Identitätswert ist kein gültiger <see cref="T:System.DirectoryServices.AccountManagement.IdentityType" />-Enumerationswert.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetMembers">
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Gibt eine Auflistung der Prinzipalobjekte zurück, die in der Gruppe enthalten ist.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers () As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers();" />
      <MemberSignature Language="F#" Value="member this.GetMembers : unit -&gt; System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;" Usage="groupPrincipal.GetMembers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Gibt eine Auflistung der Prinzipalobjekte zurück, die in der Gruppe enthalten ist.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />-Objekt mit den Prinzipalobjekten, die Member der Gruppe sind, oder eine leere Auflistung, wenn die Gruppe keine Member aufweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Methode wird die aktuelle Gruppe nicht rekursiv durchsucht. Daher können Gruppen Objekte in der Prinzipal Objekt Auflistung zurückgegeben werden.  
  
 Member werden ohne Berücksichtigung des Kontexts zurückgegeben. Wenn beispielsweise ein AD DS Kontext auf der Grundlage von "CN = specialusers, DC = fabrikam, DC = com" angezeigt wird, enthält die Gruppe "principalfindresult" Gruppenmitglieder, die sich unter "CN = normal users, DC = fabrikam, DC = com" befinden, auch wenn Sie in einen Bereich fallen, der nicht Teil der der Kontext, der durchsucht wird. Die zurückgegebene Prinzipal Auflistung kann auch Elemente enthalten, die sich in einem anderen Speicher als die Gruppe befinden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMembers">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt; GetMembers (bool recursive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.DirectoryServices.AccountManagement.PrincipalSearchResult`1&lt;class System.DirectoryServices.AccountManagement.Principal&gt; GetMembers(bool recursive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.DirectoryServices.AccountManagement.GroupPrincipal.GetMembers(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMembers (recursive As Boolean) As PrincipalSearchResult(Of Principal)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::DirectoryServices::AccountManagement::PrincipalSearchResult&lt;System::DirectoryServices::AccountManagement::Principal ^&gt; ^ GetMembers(bool recursive);" />
      <MemberSignature Language="F#" Value="member this.GetMembers : bool -&gt; System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;" Usage="groupPrincipal.GetMembers recursive" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalSearchResult&lt;System.DirectoryServices.AccountManagement.Principal&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="recursive" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="recursive">Ein boolescher Wert, der angibt, ob die Gruppe rekursiv durchsucht wird.</param>
        <summary>Gibt eine Auflistung der Prinzipalobjekte zurück, die in der Gruppe enthalten ist. Wenn das rekursive Flag auf true festgelegt ist, wird die aktuelle Gruppe von der Methode rekursiv durchsucht und alle geschachtelten Gruppenmember werden zurückgegeben.</summary>
        <returns>Ein <see cref="T:System.DirectoryServices.AccountManagement.PrincipalSearchResult`1" />-Objekt mit den Prinzipalobjekten, die Member der Gruppe sind, oder eine leere Auflistung, wenn die Gruppe keine Member aufweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die zurückgegebene Prinzipal Auflistung enthält keine Gruppen Objekte, wenn das rekursive Flag auf `true`festgelegt ist. Es werden nur Blattknoten zurückgegeben. Wenn z. b. eine Gruppe, die ein Computer Objekt und ein Gruppen Objekt enthält (nur mit Benutzer Prinzipalen), rekursiv durchsucht wird, enthält die zurückgegebene Auflistung das Computer Objekt und die Benutzer Prinzipal Objekte in der gruppierten Gruppe. Da das Group-Objekt kein Blatt ist, auch wenn es leer ist, wird es nicht in der rekursiven Suche zurückgegeben.  Wenn das rekursive Flag auf `false`festgelegt ist, enthält die zurückgegebene Auflistung möglicherweise Gruppen Objekte.  
  
 Member werden ohne Berücksichtigung des Kontexts zurückgegeben. Wenn beispielsweise ein AD DS Kontext auf der Grundlage von "CN = specialusers, DC = fabrikam, DC = com" angezeigt wird, enthält die Gruppe "principalfindresult" Gruppenmitglieder, die sich unter "CN = normal users, DC = fabrikam, DC = com" befinden, auch wenn Sie in einen Bereich fallen, der nicht Teil der der Kontext, der durchsucht wird. Die zurückgegebene Prinzipal Auflistung kann auch Elemente enthalten, die sich in einem anderen Speicher als die Gruppe befinden.  
  
   
  
## Examples  
 Der folgende Code stellt eine Verbindung mit der LDAP-Domäne "fabrikam.com" her, wobei der Benutzername auf "Administrator" festgelegt und das Kennwort im <xref:System.DirectoryServices.AccountManagement.PrincipalContext>-Konstruktor auf "SecretPwd123" festgelegt ist.  
  
 Es wird eine Suche durchgeführt, um nach der Gruppe mit dem Namen "Domänen-Admins" in dem Container zu suchen, der im <xref:System.DirectoryServices.AccountManagement.PrincipalContext>-Konstruktor "DC = fabrikam, DC = com" angegeben ist. Wenn die Gruppe gefunden wird, werden alle Prinzipale, die Mitglieder dieser Gruppe sind, einschließlich rekursiver Member, aufgelistet.  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                      
                                            "fabrikam.com",   
                                            "DC=fabrikam,DC=com",   
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    foreach (Principal p in grp.GetMembers(true))  
    {  
         Console.WriteLine(p.Name);  
    }  
    grp.Dispose();  
}  
  
ctx.Dispose();   
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupScope">
      <MemberSignature Language="C#" Value="public Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;valuetype System.DirectoryServices.AccountManagement.GroupScope&gt; GroupScope" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupScope As Nullable(Of GroupScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; GroupScope { Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; get(); void set(Nullable&lt;System::DirectoryServices::AccountManagement::GroupScope&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.GroupScope : Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt; with get, set" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.GroupScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.DirectoryServices.AccountManagement.GroupScope&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" />-Enumeration ab, die NULL-Werte zulässt, und die den Bereich für diesen Gruppenprinzipal angibt, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.AccountManagement.GroupScope" />-Enumerationswert, der NULL sein kann, und der den Bereich für diesen Gruppenprinzipal angibt, oder NULL, wenn kein Bereich festgelegt wurde.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Diese Eigenschaft kann von der Anwendung nicht auf NULL festgelegt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="IsSecurityGroup">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; IsSecurityGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; IsSecurityGroup" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property IsSecurityGroup As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; IsSecurityGroup { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.IsSecurityGroup : Nullable&lt;bool&gt; with get, set" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen booleschen Wert ab, der NULL sein kann, und der angibt, ob die Sicherheit für die Gruppe aktiviert wurde.</summary>
        <value><see langword="true" />, wenn die Sicherheit für die Gruppe aktiviert wurde, oder NULL, wenn die Gruppe nicht beibehalten wurde; andernfalls <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft false zurückgibt, ist die Gruppe vorübergehend nicht für die Sicherheit aktiviert. Wenn die <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.IsSecurityGroup>-Eigenschaft später auf true zurückgesetzt wird, verfügt die Gruppe über die gleichen Eigenschaften wie, bevor Sie auf false festgelegt wurde.  
  
 Wenn der Prinzipal nicht im Speicher beibehalten wurde, gibt diese Eigenschaft NULL zurück. Nachdem der Prinzipal persistent gespeichert wurde, ist die Standardeinstellung für die Sicherheitseinstellung vom Speicher abhängig. Der AD DS und AD LDS speichert neue Prinzipale, wenn Sie persistent gespeichert werden, während Sam neue Prinzipale aktiviert, wenn Sie persistent gespeichert werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Diese Eigenschaft kann von der Anwendung nicht auf NULL festgelegt werden.</exception>
      </Docs>
    </Member>
    <Member MemberName="Members">
      <MemberSignature Language="C#" Value="public System.DirectoryServices.AccountManagement.PrincipalCollection Members { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.DirectoryServices.AccountManagement.PrincipalCollection Members" />
      <MemberSignature Language="DocId" Value="P:System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Members As PrincipalCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::DirectoryServices::AccountManagement::PrincipalCollection ^ Members { System::DirectoryServices::AccountManagement::PrincipalCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Members : System.DirectoryServices.AccountManagement.PrincipalCollection" Usage="System.DirectoryServices.AccountManagement.GroupPrincipal.Members" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.DirectoryServices.AccountManagement</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DirectoryServices.AccountManagement.PrincipalCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft eine Auflistung von Prinzipalobjekten ab, die die Member der Gruppe darstellen.</summary>
        <value>Ein <see cref="T:System.DirectoryServices.AccountManagement.PrincipalCollection" />-Objekt mit den Prinzipalobjekten, die die Member der Gruppe darstellen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bei AD DS Gruppen enthält die <xref:System.DirectoryServices.AccountManagement.GroupPrincipal.Members%2A>-Eigenschaft Benutzer Prinzipale, die Mitglieder der Gruppe sind, aufgrund ihres PrimaryID-Attributs. Wenn die Gruppe diese Typen von Membern enthält, gelten die folgenden Einschränkungen:  
  
-   Die <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Remove*>-Methode kann nicht zum Entfernen von Membern verwendet werden, die Teil der Gruppe sind, weil ihr PrimaryID-Attribut verwendet wird.  
  
-   Die <xref:System.DirectoryServices.AccountManagement.PrincipalCollection.Clear*>-Methode kann nicht zum Löschen von Membern verwendet werden, die aufgrund ihres PrimaryID-Attributs Teil der Gruppe sind.  
  
   
  
## Examples  
 Der folgende Code stellt eine Verbindung mit der LDAP-Domäne "fabrikam.com" her, wobei der Benutzername auf "Administrator" festgelegt und das Kennwort im <xref:System.DirectoryServices.AccountManagement.PrincipalContext>-Konstruktor auf "SecretPwd123" festgelegt ist.  
  
 Es wird eine Suche durchgeführt, um nach der Gruppe mit dem Namen "Domänen-Admins" in dem Container zu suchen, der im <xref:System.DirectoryServices.AccountManagement.PrincipalContext>-Konstruktor "DC = fabrikam, DC = com" angegeben ist. Wenn die Gruppe gefunden wird, wird der Benutzer mit dem Namen "John Smith" aus der Gruppe entfernt, und der Benutzer mit dem Namen "Jim Daly" wird der Gruppe hinzugefügt.  
  
```  
PrincipalContext ctx = new PrincipalContext(ContextType.Domain,                                                                       
                                            "fabrikam.com",                                                                               
                                            "DC=fabrikam,DC=com",                                                                 
                                            "administrator",   
                                            "SecretPwd123");  
  
GroupPrincipal grp = GroupPrincipal.FindByIdentity(ctx,   
                                                   IdentityType.Name,   
                                                   "Domain Admins");  
  
if (grp != null)  
{  
    grp.Members.Remove(ctx, IdentityType.Name, "John Smith");            
    grp.Members.Add(ctx, IdentityType.Name, "Jim Daly");  
    grp.Save();  
    grp.Dispose();  
}  
ctx.Dispose();  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
