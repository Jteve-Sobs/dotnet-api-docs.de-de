<Type Name="MouseDevice" FullName="System.Windows.Input.MouseDevice">
  <TypeSignature Language="C#" Value="public abstract class MouseDevice : System.Windows.Input.InputDevice" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MouseDevice extends System.Windows.Input.InputDevice" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseDevice" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MouseDevice&#xA;Inherits InputDevice" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseDevice abstract : System::Windows::Input::InputDevice" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f841e-101">Stellt ein Mausgerät dar.</span><span class="sxs-lookup"><span data-stu-id="f841e-101">Represents a mouse device.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f841e-102">Die <xref:System.Windows.Input.MouseDevice> unterstützt die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Infrastruktur und sollte nicht direkt aus Ihrem Code verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="f841e-102">The <xref:System.Windows.Input.MouseDevice> supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 <span data-ttu-id="f841e-103">Für auf Maustasten bezogene Eingabe, verwenden die <xref:System.Windows.Input.Mouse> Klasse.</span><span class="sxs-lookup"><span data-stu-id="f841e-103">For mouse related input, use the <xref:System.Windows.Input.Mouse> class.</span></span>  <span data-ttu-id="f841e-104">Die <xref:System.Windows.Input.Mouse> Klasse stellt die Maus zu einer Anwendung dar und bietet Methoden, Eigenschaften und Ereignisse, die den Zustand der Maus widerspiegeln.</span><span class="sxs-lookup"><span data-stu-id="f841e-104">The <xref:System.Windows.Input.Mouse> class represents the mouse to an application and provides methods, properties, and events that reflect the state of the mouse.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.Mouse" />
  </Docs>
  <Members>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.ActiveSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActiveSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::PresentationSource ^ ActiveSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f841e-105">Ruft die <see cref="T:System.Windows.PresentationSource" /> ab, die Eingaben für dieses Gerät meldet.</span><span class="sxs-lookup"><span data-stu-id="f841e-105">Gets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span></span></summary>
        <value><span data-ttu-id="f841e-106">Die Eingabequelle für dieses Gerät.</span><span class="sxs-lookup"><span data-stu-id="f841e-106">The source of input for this device.</span></span></value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="f841e-107">zum Abrufen der aktiven Quelle.</span><span class="sxs-lookup"><span data-stu-id="f841e-107">for getting the active source.</span></span>  <span data-ttu-id="f841e-108">Zugeordnete Enumerationen:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span><span class="sxs-lookup"><span data-stu-id="f841e-108">Associated enumerations:  <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span></span></permission>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f841e-109">Erfasst Mauseingaben für das angegebene Element.</span><span class="sxs-lookup"><span data-stu-id="f841e-109">Captures mouse input to the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f841e-110">Wenn ein Element die Maus erfasst hat, empfängt es Mauseingaben, und zwar unabhängig davon, ob der Cursor innerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="f841e-110">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="f841e-111">Wenn eine <xref:System.Windows.Input.CaptureMode> nicht angegeben ist, der Standardwert <xref:System.Windows.Input.CaptureMode> ist <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="f841e-111">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="f841e-112">Rufen Sie zum Freigeben von Mauseingaben aufzufangen <xref:System.Windows.Input.MouseDevice.Capture%2A> übergeben `null` als das Element zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="f841e-112">To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="f841e-113">Wenn die Maus erfasst wird bei einem <xref:System.Windows.Input.Mouse.MouseDown> oder <xref:System.Windows.Input.Mouse.MouseUp> Ereignis wird ausgelöst, und die Eingabe wird nicht auf das Element unterhalb der Maus <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> und <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> zuerst ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="f841e-113">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="f841e-114">Dies ermöglicht das erfasste Element die Erfassung freigeben, bevor die <xref:System.Windows.Input.Mouse.MouseDown> und <xref:System.Windows.Input.Mouse.MouseUp> Ereignisse weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="f841e-114">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="f841e-115">Das Element, für das die Maus erfasst werden soll.</span><span class="sxs-lookup"><span data-stu-id="f841e-115">The element to capture the mouse.</span></span></param>
        <summary><span data-ttu-id="f841e-116">Erfasst Mausereignisse für das angegebene Element.</span><span class="sxs-lookup"><span data-stu-id="f841e-116">Captures mouse events to the specified element.</span></span></summary>
        <returns>
          <span data-ttu-id="f841e-117"><see langword="true" />, wenn das Element die Maus erfassen konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f841e-117"><see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f841e-118">Wenn ein Element die Maus erfasst hat, empfängt es Mauseingaben, ob der Cursor innerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="f841e-118">When an element captures the mouse, it receives mouse input whether the cursor is within its borders</span></span>  
  
 <span data-ttu-id="f841e-119">Wenn eine <xref:System.Windows.Input.CaptureMode> nicht angegeben ist, der Standardwert <xref:System.Windows.Input.CaptureMode> ist <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="f841e-119">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="f841e-120">Rufen Sie zum Freigeben von Mauseingaben aufzufangen <xref:System.Windows.Input.MouseDevice.Capture%2A> übergeben `null` als das Element zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="f841e-120">To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="f841e-121">Wenn die Maus erfasst wird bei einem <xref:System.Windows.Input.Mouse.MouseDown> oder <xref:System.Windows.Input.Mouse.MouseUp> Ereignis wird ausgelöst, und die Eingabe wird nicht auf das Element unterhalb der Maus <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> und <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> zuerst ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="f841e-121">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="f841e-122">Dies ermöglicht das erfasste Element die Erfassung freigeben, bevor die <xref:System.Windows.Input.Mouse.MouseDown> und <xref:System.Windows.Input.Mouse.MouseUp> Ereignisse weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="f841e-122">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f841e-123"><paramref name="element" /> ist kein <see cref="T:System.Windows.UIElement" /> und keine <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="f841e-123"><paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="f841e-124">Das Element, für das die Maus erfasst werden soll.</span><span class="sxs-lookup"><span data-stu-id="f841e-124">The element to capture the mouse..</span></span></param>
        <param name="captureMode"><span data-ttu-id="f841e-125">Die zu verwendende Erfassungsrichtlinie.</span><span class="sxs-lookup"><span data-stu-id="f841e-125">The capture policy to use.</span></span></param>
        <summary><span data-ttu-id="f841e-126">Erfasst Mauseingaben für das angegebene Element mit dem angegebenen <see cref="T:System.Windows.Input.CaptureMode" />.</span><span class="sxs-lookup"><span data-stu-id="f841e-126">Captures mouse input to the specified element using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span></span></summary>
        <returns>
          <span data-ttu-id="f841e-127"><see langword="true" />, wenn das Element die Maus erfassen konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f841e-127"><see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f841e-128">Wenn ein Element die Maus erfasst hat, empfängt es Mauseingaben, und zwar unabhängig davon, ob der Cursor innerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="f841e-128">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="f841e-129">Rufen Sie zum Freigeben von Mauseingaben aufzufangen <xref:System.Windows.Input.MouseDevice.Capture%2A> übergeben `null` als das Element zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="f841e-129">To release mouse capture, call <xref:System.Windows.Input.MouseDevice.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="f841e-130">Wenn die Maus erfasst wird bei einem <xref:System.Windows.Input.Mouse.MouseDown> oder <xref:System.Windows.Input.Mouse.MouseUp> Ereignis wird ausgelöst, und die Eingabe wird nicht auf das Element unterhalb der Maus <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> und <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> zuerst ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="f841e-130">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="f841e-131">Dies ermöglicht das erfasste Element die Erfassung freigeben, bevor die <xref:System.Windows.Input.Mouse.MouseDown> und <xref:System.Windows.Input.Mouse.MouseUp> Ereignisse weitergeleitet werden.</span><span class="sxs-lookup"><span data-stu-id="f841e-131">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f841e-132"><paramref name="element" /> ist kein <see cref="T:System.Windows.UIElement" /> und keine <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="f841e-132"><paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="f841e-133"><paramref name="captureMode" /> ist kein gültiger <see cref="T:System.Windows.Input.CaptureMode" />.</span><span class="sxs-lookup"><span data-stu-id="f841e-133"><paramref name="captureMode" /> is not a valid <see cref="T:System.Windows.Input.CaptureMode" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.Captured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f841e-134">Ruft das <see cref="T:System.Windows.IInputElement" /> ab, das von der Maus erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="f841e-134">Gets the <see cref="T:System.Windows.IInputElement" /> that is captured by the mouse.</span></span></summary>
        <value><span data-ttu-id="f841e-135">Das Element, das von der Maus erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="f841e-135">The element which is captured by the mouse.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f841e-136">Wenn ein Element die Maus erfasst hat, empfängt es Mauseingaben, und zwar unabhängig davon, ob der Cursor innerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="f841e-136">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f841e-137">Ruft das Element ab, über dem sich der Mauszeiger befindet.</span><span class="sxs-lookup"><span data-stu-id="f841e-137">Gets the element that the mouse pointer is directly over.</span></span></summary>
        <value><span data-ttu-id="f841e-138">Das Element, über dem sich der Mauszeiger befindet.</span><span class="sxs-lookup"><span data-stu-id="f841e-138">The element the mouse pointer is over.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f841e-139">Die Maus ist direkt über ein Steuerelement betrachtet, wenn die Maus für dieses Element erfasst wurden hat.</span><span class="sxs-lookup"><span data-stu-id="f841e-139">The mouse is considered directly over an element if the mouse has been captured to that element.</span></span>  
  
 <span data-ttu-id="f841e-140">Steuerelemente können aus mehreren Elementen bestehen.</span><span class="sxs-lookup"><span data-stu-id="f841e-140">Controls can be composed of multiple elements.</span></span> <span data-ttu-id="f841e-141"><xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> meldet das spezifische Element in der zusammengesetzten Steuerelements, das der Mauszeiger über befindet und nicht das Steuerelement selbst.</span><span class="sxs-lookup"><span data-stu-id="f841e-141"><xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself.</span></span>  <span data-ttu-id="f841e-142">Beispielsweise je nach welchem Teil einer <xref:System.Windows.Controls.Button> der Zeiger ist, die <xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> Eigenschaft könnte folgenden Bericht die <xref:System.Windows.Controls.TextBox> von der <xref:System.Windows.Controls.ContentControl.Content%2A> Eigenschaft oder die <xref:Microsoft.Windows.Themes.ButtonChrome>.</span><span class="sxs-lookup"><span data-stu-id="f841e-142">For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.MouseDevice.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.</span></span>  
  
 <span data-ttu-id="f841e-143">Verwenden der <xref:System.Windows.IInputElement.IsMouseOver%2A> Eigenschaft <xref:System.Windows.UIElement> und <xref:System.Windows.ContentElement> zu bestimmen, ob die Maus über ein Element einschließlich seiner untergeordneten visuellen Elemente oder Elemente Compositing steuern.</span><span class="sxs-lookup"><span data-stu-id="f841e-143">Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetButtonState">
      <MemberSignature Language="C#" Value="protected System.Windows.Input.MouseButtonState GetButtonState (System.Windows.Input.MouseButton mouseButton);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Input.MouseButtonState GetButtonState(valuetype System.Windows.Input.MouseButton mouseButton) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetButtonState(System.Windows.Input.MouseButton)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Input::MouseButtonState GetButtonState(System::Windows::Input::MouseButton mouseButton);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mouseButton" Type="System.Windows.Input.MouseButton" />
      </Parameters>
      <Docs>
        <param name="mouseButton"><span data-ttu-id="f841e-144">Die Taste, die abgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="f841e-144">The button which is being queried.</span></span></param>
        <summary><span data-ttu-id="f841e-145">Ruft den Zustand der angegebenen Maustaste ab.</span><span class="sxs-lookup"><span data-stu-id="f841e-145">Gets the state of the specified mouse button.</span></span></summary>
        <returns><span data-ttu-id="f841e-146">Der Zustand der Taste.</span><span class="sxs-lookup"><span data-stu-id="f841e-146">The state of the button.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetClientPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f841e-147">Berechnet die Position des Mauszeigers in Clientkoordinaten.</span><span class="sxs-lookup"><span data-stu-id="f841e-147">Calculates the position of the mouse pointer, in client coordinates.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetClientPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetClientPosition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetClientPosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetClientPosition" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetClientPosition () As Point" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetClientPosition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f841e-148">Berechnet die Position des Mauszeigers in Clientkoordinaten.</span><span class="sxs-lookup"><span data-stu-id="f841e-148">Calculates the position of the mouse pointer, in client coordinates.</span></span></summary>
        <returns><span data-ttu-id="f841e-149">Die Position des Mauszeigers in Clientkoordinaten.</span><span class="sxs-lookup"><span data-stu-id="f841e-149">The position of the mouse pointer, in client coordinates.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetClientPosition (System.Windows.PresentationSource presentationSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetClientPosition(class System.Windows.PresentationSource presentationSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetClientPosition(System.Windows.PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetClientPosition(System::Windows::PresentationSource ^ presentationSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="presentationSource" Type="System.Windows.PresentationSource" />
      </Parameters>
      <Docs>
        <param name="presentationSource"><span data-ttu-id="f841e-150">Die Quelle, in der die Mausposition abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="f841e-150">The source in which to obtain the mouse position.</span></span></param>
        <summary><span data-ttu-id="f841e-151">Berechnet die Position des Mauszeigers in der angegebenen <see cref="T:System.Windows.PresentationSource" /> in Clientkoordinaten.</span><span class="sxs-lookup"><span data-stu-id="f841e-151">Calculates the position of the mouse pointer, in client coordinates, in the specified <see cref="T:System.Windows.PresentationSource" />.</span></span></summary>
        <returns><span data-ttu-id="f841e-152">Die Position des Mauszeigers in der angegebenen <see cref="T:System.Windows.PresentationSource" /> in Clientkoordinaten.</span><span class="sxs-lookup"><span data-stu-id="f841e-152">The position of the mouse pointer, in client coordinates, in the specified <see cref="T:System.Windows.PresentationSource" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="f841e-153">Der Verweisrahmen, in dem die Position der Maus berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f841e-153">The frame of reference in which to calculate the position of the mouse.</span></span></param>
        <summary><span data-ttu-id="f841e-154">Ruft die Position der Maus relativ zu einem angegebenen Element ab.</span><span class="sxs-lookup"><span data-stu-id="f841e-154">Gets the position of the mouse relative to a specified element.</span></span></summary>
        <returns><span data-ttu-id="f841e-155">Die Position der Maus relativ zum <paramref name="relativeTo" />-Parameter.</span><span class="sxs-lookup"><span data-stu-id="f841e-155">The position of the mouse relative to the parameter <paramref name="relativeTo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f841e-156">Wird berechnet, die Position des Mauszeigers relativ zum angegebenen <xref:System.Windows.IInputElement> mit der linken oberen Ecke des Elements wird zum Zeitpunkt des Ursprung 0,0.</span><span class="sxs-lookup"><span data-stu-id="f841e-156">The position of the mouse pointer is calculated relative to the specified <xref:System.Windows.IInputElement> with the upper-left corner of element being the point of origin, 0,0.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f841e-157"><paramref name="relativeTo" /> ist <see langword="null" /> oder kein <see cref="T:System.Windows.UIElement" /> und kein <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="f841e-157"><paramref name="relativeTo" /> is <see langword="null" /> or is not a <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetScreenPosition">
      <MemberSignature Language="C#" Value="protected System.Windows.Point GetScreenPosition ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance valuetype System.Windows.Point GetScreenPosition() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.GetScreenPosition" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetScreenPosition () As Point" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Point GetScreenPosition();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f841e-158">Berechnet die Bildschirmposition des Mauszeigers.</span><span class="sxs-lookup"><span data-stu-id="f841e-158">Calculates the screen position of the mouse pointer.</span></span></summary>
        <returns><span data-ttu-id="f841e-159">Die Position des Mauszeigers.</span><span class="sxs-lookup"><span data-stu-id="f841e-159">The position of the mouse pointer.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f841e-160">Ruft den Zustand der linken Maustaste dieses Mausgeräts ab.</span><span class="sxs-lookup"><span data-stu-id="f841e-160">Gets the state of the left mouse button of this mouse device.</span></span></summary>
        <value><span data-ttu-id="f841e-161">Der Zustand der Taste.</span><span class="sxs-lookup"><span data-stu-id="f841e-161">The state of the button.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f841e-162">Der Zustand der mittleren Taste dieses Mausgeräts.</span><span class="sxs-lookup"><span data-stu-id="f841e-162">The state of the middle button of this mouse device.</span></span></summary>
        <value><span data-ttu-id="f841e-163">Der Zustand der Taste.</span><span class="sxs-lookup"><span data-stu-id="f841e-163">The state of the button.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Cursor ^ OverrideCursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f841e-164">Ruft den Cursor für die gesamte Anwendung ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="f841e-164">Gets or sets the cursor for the entire application.</span></span></summary>
        <value><span data-ttu-id="f841e-165">Der überschreibende Cursor oder <see langword="null" />, wenn <see cref="P:System.Windows.Input.MouseDevice.OverrideCursor" /> nicht festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="f841e-165">The override cursor or <see langword="null" /> if <see cref="P:System.Windows.Input.MouseDevice.OverrideCursor" /> is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f841e-166">Die <xref:System.Windows.Input.Cursor> , <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> ist festgelegt auf die gesamte Anwendung angewendet werden.</span><span class="sxs-lookup"><span data-stu-id="f841e-166">The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> is set to will be applied to the whole application.</span></span>  
  
 <span data-ttu-id="f841e-167">So löschen Sie die Außerkraftsetzung <xref:System.Windows.Input.Cursor>legen <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> auf `null`.</span><span class="sxs-lookup"><span data-stu-id="f841e-167">To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> to `null`.</span></span>  
  
 <span data-ttu-id="f841e-168">Festlegen von <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> auf <xref:System.Windows.Input.Cursors.None%2A> erzwingt, dass der Mauszeiger nicht angezeigt werden, aber Mausereignisse werden weiterhin verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="f841e-168">Setting <xref:System.Windows.Input.MouseDevice.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f841e-169">Ruft den Zustand der rechten Taste dieses Mausgeräts ab.</span><span class="sxs-lookup"><span data-stu-id="f841e-169">Gets the state of the right button of this mouse device.</span></span></summary>
        <value><span data-ttu-id="f841e-170">Der Zustand der Taste.</span><span class="sxs-lookup"><span data-stu-id="f841e-170">The state of the button.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetCursor">
      <MemberSignature Language="C#" Value="public bool SetCursor (System.Windows.Input.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool SetCursor(class System.Windows.Input.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.SetCursor(System.Windows.Input.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SetCursor(System::Windows::Input::Cursor ^ cursor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Input.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor"><span data-ttu-id="f841e-171">Der Cursor, auf den der Mauszeiger festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="f841e-171">The cursor to set the mouse pointer to.</span></span></param>
        <summary><span data-ttu-id="f841e-172">Legt den Mauszeiger auf den angegebenen <see cref="T:System.Windows.Input.Cursor" /> fest.</span><span class="sxs-lookup"><span data-stu-id="f841e-172">Sets the mouse pointer to the specified <see cref="T:System.Windows.Input.Cursor" /></span></span></summary>
        <returns>
          <span data-ttu-id="f841e-173"><see langword="true" />, wenn der Mauszeiger festgelegt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f841e-173"><see langword="true" /> if the mouse cursor is set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f841e-174">Beachten Sie, dass dieser Cursor kein bestimmte gilt <xref:System.Windows.UIElement>, sondern gilt für die gesamte Anwendung.</span><span class="sxs-lookup"><span data-stu-id="f841e-174">Note that this cursor does not apply any particular <xref:System.Windows.UIElement>, but rather it applies to the whole application.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Synchronize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f841e-175">Erzwingt das Neusynchronisieren der Maus.</span><span class="sxs-lookup"><span data-stu-id="f841e-175">Forces the mouse to resynchronize.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f841e-176">Die <xref:System.Windows.Input.MouseDevice> überwacht Änderungen am Layout und ruft <xref:System.Windows.Input.MouseDevice.Synchronize%2A>.</span><span class="sxs-lookup"><span data-stu-id="f841e-176">The <xref:System.Windows.Input.MouseDevice> monitors layout changes and calls <xref:System.Windows.Input.MouseDevice.Synchronize%2A>.</span></span>  <span data-ttu-id="f841e-177">Es gibt Fälle, in denen der Eingabesystem Maus erzwungen werden muss, dafür Reaktion auf Änderungen zu aktualisieren.</span><span class="sxs-lookup"><span data-stu-id="f841e-177">There are cases in which the mouse input system must be forced to update for it to respond to changes.</span></span>  <span data-ttu-id="f841e-178">Beispielsweise müssen Sie die Maus auf einen Zeitgeber erneut synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="f841e-178">For example, you must resynchronize the mouse on a timer.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Target As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::IInputElement ^ Target { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f841e-179">Ruft das <see cref="T:System.Windows.IInputElement" /> ab, an das die Eingaben von diesem Mausgerät gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="f841e-179">Gets the <see cref="T:System.Windows.IInputElement" /> that the input from this mouse device is sent to.</span></span></summary>
        <value><span data-ttu-id="f841e-180">Das Element, das die Eingaben empfängt.</span><span class="sxs-lookup"><span data-stu-id="f841e-180">The element that receives the input.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f841e-181">Das Ziel für eine <xref:System.Windows.Input.MouseDevice> ist das Objekt, das die Maus über ist oder das Objekt mit Mauseingaben aufzufangen.</span><span class="sxs-lookup"><span data-stu-id="f841e-181">The target for a <xref:System.Windows.Input.MouseDevice> is the object the mouse is over or the object with mouse capture.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseDevice.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateCursor();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f841e-182">Erzwingt die Aktualisierung des Mauszeigers.</span><span class="sxs-lookup"><span data-stu-id="f841e-182">Forces the mouse cursor to update.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f841e-183">Ruft den Zustand der ersten erweiterten Taste dieses Mausgeräts ab.</span><span class="sxs-lookup"><span data-stu-id="f841e-183">Gets the state of the first extended button on this mouse device.</span></span></summary>
        <value><span data-ttu-id="f841e-184">Der Zustand der Taste.</span><span class="sxs-lookup"><span data-stu-id="f841e-184">The state of the button.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseDevice.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f841e-185">Ruft den Zustand der zweiten erweiterten Taste dieses Mausgeräts ab.</span><span class="sxs-lookup"><span data-stu-id="f841e-185">Gets the state of the second extended button of this mouse device.</span></span></summary>
        <value><span data-ttu-id="f841e-186">Der Zustand der Taste.</span><span class="sxs-lookup"><span data-stu-id="f841e-186">The state of the button.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>