<Type Name="ExecutedRoutedEventArgs" FullName="System.Windows.Input.ExecutedRoutedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e88940fce169a35a2890f5f79cd5f4ab43947616" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83973621" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExecutedRoutedEventArgs : System.Windows.RoutedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExecutedRoutedEventArgs extends System.Windows.RoutedEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExecutedRoutedEventArgs&#xA;Inherits RoutedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExecutedRoutedEventArgs sealed : System::Windows::RoutedEventArgs" />
  <TypeSignature Language="F#" Value="type ExecutedRoutedEventArgs = class&#xA;    inherit RoutedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.RoutedEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="74e0a-101">Stellt Daten für die Routingereignisse <see cref="E:System.Windows.Input.CommandManager.Executed" /> und <see cref="E:System.Windows.Input.CommandManager.PreviewExecuted" /> bereit.</span><span class="sxs-lookup"><span data-stu-id="74e0a-101">Provides data for the <see cref="E:System.Windows.Input.CommandManager.Executed" /> and <see cref="E:System.Windows.Input.CommandManager.PreviewExecuted" /> routed events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74e0a-102"><xref:System.Windows.Input.ExecutedRoutedEventHandler> stellt die Methode dar, die die Befehls Logik eines <xref:System.Windows.Input.RoutedCommand>implementiert.</span><span class="sxs-lookup"><span data-stu-id="74e0a-102"><xref:System.Windows.Input.ExecutedRoutedEventHandler> represents the method that implements the command logic of a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="74e0a-103">Durch das Trennen der Implementierungs Logik vom Befehl kann der Befehl aus unterschiedlichen Quellen und Typen aufgerufen werden, und es wird die Zentralisierung der Befehls Logik ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="74e0a-103">Separating the implementation logic from the command allows the command to be invoked from different sources and types and enables the centralization of command logic.</span></span>  
  
 <span data-ttu-id="74e0a-104">Diese Ereignisdaten Klasse wird auch für <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> und <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>verwendet.</span><span class="sxs-lookup"><span data-stu-id="74e0a-104">This event data class is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>.</span></span> <span data-ttu-id="74e0a-105">Die meisten praktischen Handler behandeln jedoch die <xref:System.Windows.Input.CommandBinding.Executed> Ereignisse von einem bestimmten <xref:System.Windows.Input.CommandBinding>, anstatt auf <xref:System.Windows.Input.CommandManager> Ebene zu arbeiten.</span><span class="sxs-lookup"><span data-stu-id="74e0a-105">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="74e0a-106">Weitere Informationen über Befehle finden Sie unter [Befehlsübersicht](/dotnet/framework/wpf/advanced/commanding-overview).</span><span class="sxs-lookup"><span data-stu-id="74e0a-106">For more information on commanding, see [Commanding Overview](/dotnet/framework/wpf/advanced/commanding-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74e0a-107">Im folgenden Beispiel wird eine <xref:System.Windows.Input.ExecutedRoutedEventHandler> erstellt, die beim Ausführen des Befehls eine <xref:System.Windows.MessageBox> öffnet.</span><span class="sxs-lookup"><span data-stu-id="74e0a-107">The following example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> that opens a <xref:System.Windows.MessageBox> when the command is executed.</span></span>  
  
 [!code-csharp[commandwithhandler#CommandHandlerExecutedHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlerexecutedhandler)]
 [!code-vb[commandwithhandler#CommandHandlerExecutedHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlerexecutedhandler)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventHandler" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CanExecuteRoutedEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ExecutedRoutedEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.ExecutedRoutedEventArgs.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74e0a-108">Ruft den Befehl ab, der aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="74e0a-108">Gets the command that was invoked.</span></span></summary>
        <value><span data-ttu-id="74e0a-109">Der diesem Ereignis zugeordnete Befehl.</span><span class="sxs-lookup"><span data-stu-id="74e0a-109">The command associated with this event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74e0a-110">Der Befehl, der dem-Ereignis zugeordnet ist, kann in die spezifische Implementierung von <xref:System.Windows.Input.ICommand>umgewandelt werden, z. b. ein <xref:System.Windows.Input.RoutedCommand>, wenn der Typ bekannt ist.</span><span class="sxs-lookup"><span data-stu-id="74e0a-110">The command associated with the event can be cast to the specific implementation of <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>, if the type is known.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74e0a-111">Im folgenden Beispiel wird eine <xref:System.Windows.Input.ExecutedRoutedEventHandler> erstellt, die mehrere Befehle verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="74e0a-111">The following example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> that handles multiple commands.</span></span> <span data-ttu-id="74e0a-112">Der Handler überprüft die <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A>-Eigenschaft des <xref:System.Windows.Input.ExecutedRoutedEventArgs>, um zu bestimmen, welche Methode aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="74e0a-112">The handler checks the <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> property on the <xref:System.Windows.Input.ExecutedRoutedEventArgs> to determine which method to call.</span></span>  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewMultipleCmdHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewmultiplecmdhandler)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewMultipleCmdHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewmultiplecmdhandler)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventHandler" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object target);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ExecutedRoutedEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, target As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ target);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="executedRoutedEventArgs.InvokeEventHandler (genericHandler, target)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="target" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="target">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parameter">
      <MemberSignature Language="C#" Value="public object Parameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Parameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Parameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parameter : obj" Usage="System.Windows.Input.ExecutedRoutedEventArgs.Parameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="74e0a-113">Ruft Datenparameter des Befehls ab.</span><span class="sxs-lookup"><span data-stu-id="74e0a-113">Gets data parameter of the command.</span></span></summary>
        <value><span data-ttu-id="74e0a-114">Die befehlsspezifischen Daten.</span><span class="sxs-lookup"><span data-stu-id="74e0a-114">The command-specific data.</span></span> <span data-ttu-id="74e0a-115">Standardwert: <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="74e0a-115">The default value is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74e0a-116">Diese Eigenschaft stellt einen generischen Daten Parameter dar, der durch den jeweiligen Befehl definiert wird.</span><span class="sxs-lookup"><span data-stu-id="74e0a-116">This property represents a generic data parameter that is defined by the particular command.</span></span>  
  
 <span data-ttu-id="74e0a-117">Wenn dieser Parameter nicht benötigt wird, können `null` übergeben werden.</span><span class="sxs-lookup"><span data-stu-id="74e0a-117">If this parameter is not needed, `null` can be passed.</span></span>  
  
 <span data-ttu-id="74e0a-118">Normalerweise wird der <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> verwendet, um bestimmte Informationen an den Befehl zu übergeben, wenn er ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="74e0a-118">Normally, the <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> is used to pass specific information to the command when it is executed.</span></span>  <span data-ttu-id="74e0a-119">Der Typ der Daten wird durch den-Befehl definiert.</span><span class="sxs-lookup"><span data-stu-id="74e0a-119">The type of the data is defined by the command.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="74e0a-120">Im folgenden Beispiel wird eine <xref:System.Windows.Input.ExecutedRoutedEventHandler> für eine benutzerdefinierte <xref:System.Windows.Input.RoutedCommand>erstellt.</span><span class="sxs-lookup"><span data-stu-id="74e0a-120">The following example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> for a custom <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="74e0a-121">Der-Handler aktualisiert eine <xref:System.Windows.Controls.TextBox> mit der aktuellen Uhrzeit und der <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A>-Eigenschaft eines <xref:System.Windows.Controls.Slider>-Steuer Elements, das über die <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A?displayProperty=nameWithType>an den Handler übermittelt wird.</span><span class="sxs-lookup"><span data-stu-id="74e0a-121">The handler updates a <xref:System.Windows.Controls.TextBox> with the current time and the <xref:System.Windows.Controls.Primitives.RangeBase.Value%2A> property of a <xref:System.Windows.Controls.Slider> control that is passed to the handler through the <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[invalidaterequerywithdispatchertimer#InvalidateSampleExecuted](~/samples/snippets/csharp/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/CSharp/Window1.xaml.cs#invalidatesampleexecuted)]
 [!code-vb[invalidaterequerywithdispatchertimer#InvalidateSampleExecuted](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InvalidateRequeryWithDispatcherTimer/visualbasic/window1.xaml.vb#invalidatesampleexecuted)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ExecutedRoutedEventHandler" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
      </Docs>
    </Member>
  </Members>
</Type>
