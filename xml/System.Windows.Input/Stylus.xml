<Type Name="Stylus" FullName="System.Windows.Input.Stylus">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c830fa33ae79cf3feb43348f724b029254b36799" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70705805" /></Metadata><TypeSignature Language="C#" Value="public static class Stylus" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Stylus extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Stylus" />
  <TypeSignature Language="VB.NET" Value="Public Class Stylus" />
  <TypeSignature Language="C++ CLI" Value="public ref class Stylus abstract sealed" />
  <TypeSignature Language="F#" Value="type Stylus = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="3cd9f-101">Stellt den Zugriff auf allgemeine Informationen über einen Tablettstift bereit.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-101">Provides access to general information about a tablet pen.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3cd9f-102">Im folgenden Beispiel wird veranschaulicht, wie die Koordinaten des Tablettstifts aufgezeichnet werden, auch wenn der Tablettstift die Begrenzungen <xref:System.Windows.Controls.TextBox>eines verlässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-102">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3cd9f-103">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1`es einen aufgerufenen <xref:System.Windows.Input.Stylus.StylusDown>gibt und dass <xref:System.Windows.Input.Stylus.StylusMove> die Ereignisse, <xref:System.Windows.Input.Stylus.StylusUp>und mit Ereignis Handlern verbunden sind.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-103">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddGotStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-104">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-104">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-105">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-105">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-106">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-106">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddLostStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-107">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-108">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-108">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-109">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-109">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-110">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-111">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-111">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-112">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-112">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-113">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-114">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-114">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-115">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-115">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-116">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-117">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-117">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-118">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-118">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-119">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-120">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-120">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-121">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-121">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-122">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-123">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-123">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-124">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-124">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-125">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-126">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-126">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-127">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-127">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-128">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-129">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-129">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-130">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-130">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-131">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-132">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-132">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-133">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-133">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddPreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddPreviewStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-134">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-135">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-135">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-136">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-136">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-137">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-138">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-138">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-139">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-139">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-140">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-141">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-141">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-142">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-142">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-143">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-144">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-144">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-145">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusDown" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-145">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusEnterHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusEnterHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-146">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-147">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-147">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-148">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-148">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-149">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-150">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-150">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-151">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-151">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-152">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-153">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-153">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-154">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-154">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusLeaveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-155">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-155">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-156">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-156">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-157">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-157">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-158">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-158">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-159">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-159">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-160">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusMove" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-160">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-161">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-161">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-162">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-162">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-163">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-163">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-164">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-164">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-165">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-165">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-166">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> -Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-166">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void AddStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.AddStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.AddStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-167">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-167">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-168">Der hinzuzufügende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-168">The event handler to add.</span></span></param>
        <summary><span data-ttu-id="3cd9f-169">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusUp" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-169">Adds a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-170">Zeichnet den Tablettstift auf, der an ein bestimmtes Element gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-170">Captures the stylus that is bound to a particular element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement -&gt; bool" Usage="System.Windows.Input.Stylus.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-171">Das Element, für das der Tablettstift aufgezeichnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-171">The element to capture the stylus to.</span></span></param>
        <summary><span data-ttu-id="3cd9f-172">Zeichnet den Tablettstift für das angegebene Element auf.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-172">Captures the stylus to the specified element.</span></span></summary>
        <returns><span data-ttu-id="3cd9f-173"><see langword="true" />, wenn der Tablettstift für <paramref name="element" /> aufgezeichnet wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-173"><see langword="true" /> if the stylus is captured to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-174">Verwenden Sie <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> die-Methode, `element` um sicherzustellen, dass die Tablettstiftereignisse empfängt, auch wenn der Cursor aus den Begrenzungen der Elemente geht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-174">Use the <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> method to ensure that `element` receives stylus events even when the cursor goes out of the elements' bounds.</span></span> <span data-ttu-id="3cd9f-175">Um den Tablettstift freizugeben <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> , wird <xref:System.Windows.Input.CaptureMode> aufgerufen, <xref:System.Windows.Input.CaptureMode.None>wobei auf festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-175">To release the stylus, call <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> with the <xref:System.Windows.Input.CaptureMode> set to <xref:System.Windows.Input.CaptureMode.None>.</span></span>  
  
 <span data-ttu-id="3cd9f-176">Die <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> Methode gibt `false` zurück `element` , wenn nicht sichtbar oder aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-176">The <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%29> method returns `false` if `element` is not visible or enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-177">Im folgenden Beispiel wird veranschaulicht, wie die Koordinaten des Tablettstifts aufgezeichnet werden, auch wenn der Tablettstift die Begrenzungen <xref:System.Windows.Controls.TextBox>eines verlässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-177">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3cd9f-178">In diesem Beispiel wird davon ausgegangen <xref:System.Windows.Controls.TextBox> , `textBox1`dass ein mit dem <xref:System.Windows.Input.Stylus.StylusDown>Namen vorhanden ist <xref:System.Windows.Input.Stylus.StylusMove> und dass die Ereignisse, <xref:System.Windows.Input.Stylus.StylusUp>und mit Ereignis Handlern verbunden sind.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-178">This example assumes there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="System.Windows.Input.Stylus.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-179">Das Element, für das der Tablettstift aufgezeichnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-179">The element to capture the stylus to.</span></span></param>
        <param name="captureMode"><span data-ttu-id="3cd9f-180">Einer der <see cref="T:System.Windows.Input.CaptureMode" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-180">One of the <see cref="T:System.Windows.Input.CaptureMode" /> values.</span></span></param>
        <summary><span data-ttu-id="3cd9f-181">Zeichnet den Tablettstift für das angegebene Element auf.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-181">Captures the stylus to the specified element.</span></span></summary>
        <returns><span data-ttu-id="3cd9f-182"><see langword="true" />, wenn der Tablettstift für <paramref name="element" /> aufgezeichnet wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-182"><see langword="true" /> if the stylus is captured to <paramref name="element" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-183">Verwenden Sie <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> die-Methode, `element` um sicherzustellen, dass die Tablettstiftereignisse empfängt, auch wenn der Cursor aus den Begrenzungen der Elemente geht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-183">Use the <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> method to ensure that `element` receives stylus events even when the cursor goes out of the elements' bounds.</span></span> <span data-ttu-id="3cd9f-184">Um den Tablettstift freizugeben <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> , wird <xref:System.Windows.Input.CaptureMode> aufgerufen, <xref:System.Windows.Input.CaptureMode.None>wobei auf festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-184">To release the stylus, call <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> with the <xref:System.Windows.Input.CaptureMode> set to <xref:System.Windows.Input.CaptureMode.None>.</span></span>  
  
 <span data-ttu-id="3cd9f-185">Die <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> Methode gibt `false` zurück `element` , wenn nicht sichtbar oder aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-185">The <xref:System.Windows.Input.Stylus.Capture%28System.Windows.IInputElement%2CSystem.Windows.Input.CaptureMode%29> method returns `false` if `element` is not visible or enabled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-186">Im folgenden Beispiel wird veranschaulicht, wie die Koordinaten des Tablettstifts aufgezeichnet werden, auch wenn der Tablettstift die Begrenzungen <xref:System.Windows.Controls.TextBox>eines verlässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-186">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3cd9f-187">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1`es einen aufgerufenen <xref:System.Windows.Input.Stylus.StylusDown>gibt und dass <xref:System.Windows.Input.Stylus.StylusMove> die Ereignisse, <xref:System.Windows.Input.Stylus.StylusUp>und mit den Ereignis Handlern verbunden sind.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-187">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.Stylus.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-188">Ruft das Element ab, an das der Tablettstift gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-188">Gets the element to which the stylus is bound.</span></span></summary>
        <value><span data-ttu-id="3cd9f-189">Das <see cref="T:System.Windows.IInputElement" />, an das der Tablettstift gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-189">The <see cref="T:System.Windows.IInputElement" /> to which the stylus is bound.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3cd9f-190">Im folgenden Beispiel wird veranschaulicht, wie sichergestellt wird, dass der Tablettstift nicht aufgezeichnet wird, wenn der Benutzer den Tablettstift für den Digitalisierer berührt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-190">The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the digitizer.</span></span> <span data-ttu-id="3cd9f-191">In diesem Beispiel wird davon <xref:System.Windows.Input.Stylus.PreviewStylusDown> ausgegangen, dass das-Ereignis mit dem-Ereignishandler verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-191">This example assumes that the <xref:System.Windows.Input.Stylus.PreviewStylusDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[StylusSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentStylusDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.StylusDevice CurrentStylusDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.StylusDevice CurrentStylusDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.CurrentStylusDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentStylusDevice As StylusDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::StylusDevice ^ CurrentStylusDevice { System::Windows::Input::StylusDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentStylusDevice : System.Windows.Input.StylusDevice" Usage="System.Windows.Input.Stylus.CurrentStylusDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.StylusDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-192">Ruft den Tablettstift ab, der den derzeit verwendeten Tablettstift darstellt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-192">Gets the stylus that represents the stylus currently in use.</span></span></summary>
        <value><span data-ttu-id="3cd9f-193">Das <see cref="T:System.Windows.Input.StylusDevice" />, das den derzeit verwendeten Tablettstift darstellt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-193">The <see cref="T:System.Windows.Input.StylusDevice" /> that represents the stylus currently in use.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3cd9f-194">Im folgenden Beispiel wird veranschaulicht, wie der Text, der mit einem umgekehrten Tablettstift ausgewählt wird, gelöscht wird.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-194">The following example demonstrates how to erase the text that is selected with an inverted stylus.</span></span> <span data-ttu-id="3cd9f-195">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1` es einen aufgerufenen gibt und dass das <xref:System.Windows.Input.Stylus.StylusUpEvent> Ereignis mit dem Ereignishandler verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-195">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusUpEvent> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#8](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#8)]
 [!code-vb[StylusSamples#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.Stylus.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-196">Ruft das Element ab, das sich direkt unter dem Tablettstift befindet.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-196">Gets the element that is directly beneath the stylus.</span></span></summary>
        <value><span data-ttu-id="3cd9f-197">Das <see cref="T:System.Windows.IInputElement" />, das sich direkt unter dem Tablettstift befindet.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-197">The <see cref="T:System.Windows.IInputElement" /> that is directly beneath the stylus.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3cd9f-198">Im folgenden Beispiel wird veranschaulicht, wie Sie bestimmen, auf welchem Element der Tablettstift positioniert ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-198">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="3cd9f-199">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1` es einen aufgerufenen gibt und dass das <xref:System.Windows.Input.Stylus.StylusInAirMove> Ereignis mit dem Ereignishandler verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-199">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[StylusSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsFlicksEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsFlicksEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFlicksEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsFlicksEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFlicksEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFlicksEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFlicksEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsFlicksEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-200">Ein <see cref="T:System.Windows.UIElement" /> oder <see cref="T:System.Windows.ContentElement" />, für das bestimmt werden soll, ob Streichbewegungen aktiviert sind.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-200">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether flicks are enabled.</span></span></param>
        <summary><span data-ttu-id="3cd9f-201">Ruft den Wert der angefügten <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" />-Eigenschaft des angegebenen Elements ab.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-201">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="3cd9f-202"><see langword="true" />, wenn für das angegebene Element Streichbewegungen aktiviert sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-202"><see langword="true" /> if the specified element has flicks enabled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-203">In Windows Vista ist ein Flick, eine der möglichen System Gesten, ein kurzer, kurzer und kurzer Strich, der einem Navigations-oder Verknüpfungs Befehl zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-203">In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="3cd9f-204">Standardmäßig sind schnelle Stift Bewegungen in <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>und <xref:System.Windows.Controls.Primitives.ScrollBar>deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-204">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="3cd9f-205">Flicks sind für alle anderen Steuerelemente aktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-205">Flicks are enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-206">Im folgenden Beispiel wird veranschaulicht, wie Sie bestimmen können, ob schnelle Stift Bewegungen <xref:System.Windows.Controls.Canvas>in einem aktiviert sind.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-206">The following example demonstrates how to determine whether flicks are enabled on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#6](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#6)]
 [!code-vb[GestureSample#6](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsPressAndHoldEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsPressAndHoldEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsPressAndHoldEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsPressAndHoldEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsPressAndHoldEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsPressAndHoldEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsPressAndHoldEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-207">Ein <see cref="T:System.Windows.UIElement" /> oder <see cref="T:System.Windows.ContentElement" />, für das bestimmt werden soll, ob das Gedrückthalten aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-207">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether press and hold is enabled.</span></span></param>
        <summary><span data-ttu-id="3cd9f-208">Ruft den Wert der angefügten <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />-Eigenschaft des angegebenen Elements ab.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-208">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="3cd9f-209"><see langword="true" />, wenn für das angegebene Element das Gedrückthalten aktiviert ist, andernfalls <see langword="false" />;</span><span class="sxs-lookup"><span data-stu-id="3cd9f-209"><see langword="true" /> if the specified element has press and hold enabled; otherwise, <see langword="false" />;</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3cd9f-210">Im folgenden Beispiel wird veranschaulicht, wie Sie Press und Hold auf <xref:System.Windows.Controls.Slider>einem aktivieren können.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-210">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span> <span data-ttu-id="3cd9f-211">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.Slider> dass `horizontalSlider1`es einen aufgerufenen gibt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-211">This example assumes that there is a <xref:System.Windows.Controls.Slider> called `horizontalSlider1`.</span></span>  
  
 [!code-csharp[StylusSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[StylusSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsTapFeedbackEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsTapFeedbackEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsTapFeedbackEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsTapFeedbackEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsTapFeedbackEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsTapFeedbackEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsTapFeedbackEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Windows.AttachedPropertyBrowsableForType(typeof(System.Windows.DependencyObject))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-212">Ein <see cref="T:System.Windows.UIElement" /> oder ein <see cref="T:System.Windows.ContentElement" />, für das ermittelt werden soll, ob das Feedback durch Tippen aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-212">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether tap feedback enabled.</span></span></param>
        <summary><span data-ttu-id="3cd9f-213">Ruft den Wert der angefügten <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />-Eigenschaft des angegebenen Elements ab.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-213">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="3cd9f-214"><see langword="true" />, wenn für das angegebene Element das Feedback durch Tippen aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-214"><see langword="true" /> if the specified element has tap feedback enabled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-215">In Windows Vista erfolgt eine kurze Animation, wenn der Benutzer auf das-Steuerelement tippt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-215">In Windows Vista, a short animation occurs when the user taps the control.</span></span>  <span data-ttu-id="3cd9f-216">Standardmäßig ist auf Feedback tippen in <xref:System.Windows.Controls.InkCanvas>deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-216">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3cd9f-217">Es ist für alle anderen Steuerelemente aktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-217">It is enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-218">Im folgenden Beispiel wird veranschaulicht, wie Sie feststellen können, ob Tap <xref:System.Windows.Controls.Canvas>Feedback auf einem aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-218">The following example demonstrates how to determine whether tap feedback is enabled on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#5](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#5)]
 [!code-vb[GestureSample#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsTouchFeedbackEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsTouchFeedbackEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsTouchFeedbackEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsTouchFeedbackEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsTouchFeedbackEnabled : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.Stylus.GetIsTouchFeedbackEnabled element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-219">Ein <see cref="T:System.Windows.UIElement" /> oder ein <see cref="T:System.Windows.ContentElement" />, für das ermittelt werden soll, ob Toucheingabefeedback aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-219">A <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to determine whether touch input feedback enabled.</span></span></param>
        <summary><span data-ttu-id="3cd9f-220">Ruft den Wert der angefügten <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" />-Eigenschaft des angegebenen Elements ab.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-220">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <returns><span data-ttu-id="3cd9f-221"><see langword="true" />, wenn Toucheingabefeedback aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-221"><see langword="true" /> if touch input feedback is enabled, otherwise <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3cd9f-222">Im folgenden Beispiel wird veranschaulicht, wie Sie feststellen können, ob Tap <xref:System.Windows.Controls.InkCanvas>Feedback auf einem aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-222">The following example demonstrates how to determine whether tap feedback is enabled on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[GestureSample#7](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#7)]
 [!code-vb[GestureSample#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotStylusCapture">
      <MemberSignature Language="C#" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.GotStylusCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" Usage="see AddGotStylusCaptureHandler, and RemoveGotStylusCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-223">Tritt auf, wenn ein Element die Stiftereignisse erfasst.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-223">Occurs when an element captures the stylus events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-224">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-224">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-225">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-225">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-226">Angefügte Ereignisse sind grundlegend ein [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sprach Konzept, mit dem auf Ereignisse verwiesen wird, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-226">Attached events are, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> <span data-ttu-id="3cd9f-227">Mit [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] werden die Funktionen eines angefügten Ereignisses erweitert, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-227">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-228">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-228">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-229">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-229">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_GotStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-230">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-230">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-231">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-231">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.GotStylusCaptureEvent>|  
|<span data-ttu-id="3cd9f-232">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-232">Routing strategy</span></span>|<span data-ttu-id="3cd9f-233">Blasen</span><span class="sxs-lookup"><span data-stu-id="3cd9f-233">Bubbling</span></span>|  
|<span data-ttu-id="3cd9f-234">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-234">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-235">Im folgenden Beispiel wird veranschaulicht, wie die Hintergrundfarbe <xref:System.Windows.Controls.TextBox> eines geändert wird, wenn die <xref:System.Windows.Controls.TextBox> Tablettstiftereignisse erfasst und freigibt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-235">The following example demonstrates how to change the background color of a <xref:System.Windows.Controls.TextBox> when the <xref:System.Windows.Controls.TextBox> captures and releases stylus events.</span></span> <span data-ttu-id="3cd9f-236">In diesem Beispiel wird davon ausgegangen, dass ein Textfeld mit dem `textBox1` <xref:System.Windows.Input.Stylus.GotStylusCapture> Namen und <xref:System.Windows.Input.Stylus.LostStylusCapture> das-Ereignis und das-Ereignis mit Ereignis Handlern verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-236">This example assumes that there is a textbox called `textBox1`, and that the <xref:System.Windows.Input.Stylus.GotStylusCapture> and <xref:System.Windows.Input.Stylus.LostStylusCapture> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#10)]
 [!code-vb[StylusSamples#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.GotStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="GotStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.GotStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.GotStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-237">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-237">Identifies the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlicksEnabled">
      <MemberSignature Language="C#" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsFlicksEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberSignature Language="F#" Value="see GetIsFlicksEnabled, and SetIsFlicksEnabled" Usage="see GetIsFlicksEnabled, and SetIsFlicksEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-238">Ruft einen Wert ab, der angibt, ob schnelle Stiftbewegungen aktiviert sind, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-238">Gets or sets a value indicating whether flicks are enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-239">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)]handelt es sich bei einem Flick, einer der möglichen System Gesten, um einen kurzen, kurzen, geraden Strich, der einem Navigations-oder Verknüpfungs Befehl zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-239">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="3cd9f-240">Standardmäßig sind schnelle Stift Bewegungen in <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>und <xref:System.Windows.Controls.Primitives.ScrollBar>deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-240">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="3cd9f-241">Flicks sind für alle anderen Steuerelemente aktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-241">Flicks are enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsFlicksEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3cd9f-242">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="3cd9f-242">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-243">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-243">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsFlicksEnabledProperty>|  
|<span data-ttu-id="3cd9f-244">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="3cd9f-244">Metadata properties set to `true`</span></span>|<span data-ttu-id="3cd9f-245">Keine</span><span class="sxs-lookup"><span data-stu-id="3cd9f-245">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-246">Im folgenden Beispiel wird veranschaulicht, wie Sie schnelle Stift Bewegungen auf <xref:System.Windows.Controls.Canvas>einem deaktivieren können.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-246">The following example demonstrates how to disable flicks on a <xref:System.Windows.Controls.Canvas>.</span></span>  

```xaml
<Canvas Name="canvas1" Stylus.IsFlicksEnabled="False" ></Canvas>
```
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFlicksEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFlicksEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFlicksEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsFlicksEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFlicksEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFlicksEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFlicksEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsFlicksEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-247">Bezeichnet die angefügte <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-247">Identifies the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberSignature Language="F#" Value="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" Usage="see GetIsPressAndHoldEnabled, and SetIsPressAndHoldEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-248">Ruft einen Wert ab, der angibt, ob Gedrückthalten aktiviert ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-248">Gets or sets a values indicating whether press and hold is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-249">Halten Sie mit der rechten Maustaste auf die Karte, und halten Sie sie gedrückt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-249">Press and hold maps to a right-click on a mouse.</span></span> <span data-ttu-id="3cd9f-250">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] können Sie dieses Verhalten für Elemente deaktivieren, wenn Sie eine Situation sehen, in der der Benutzer den Tablettstift gedrückt halten kann, ohne einen Rechtsklick zu simulieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-250">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)] you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</span></span>  
  
<a name="dependencyPropertyInfo_IsPressAndHoldEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3cd9f-251">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="3cd9f-251">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-252">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-252">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty>|  
|<span data-ttu-id="3cd9f-253">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="3cd9f-253">Metadata properties set to `true`</span></span>|<span data-ttu-id="3cd9f-254">Keine</span><span class="sxs-lookup"><span data-stu-id="3cd9f-254">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-255">Im folgenden Beispiel wird veranschaulicht, wie Sie Press und Hold auf <xref:System.Windows.Controls.Slider>einem aktivieren können.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-255">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span>  

```xaml
<Slider Name="horizontalSlider1" Stylus.IsPressAndHoldEnabled="True" />
```
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPressAndHoldEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsPressAndHoldEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsPressAndHoldEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsPressAndHoldEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsPressAndHoldEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsPressAndHoldEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsPressAndHoldEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-256">Bezeichnet die angefügte <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-256">Identifies the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberSignature Language="F#" Value="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" Usage="see GetIsTapFeedbackEnabled, and SetIsTapFeedbackEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-257">Ruft einen Wert ab, der angibt, ob Tippfeedback aktiviert ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-257">Gets or sets whether a value indicating whether tap feedback is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-258">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)]erfolgt eine kurze Animation, wenn der Benutzer auf das-Steuerelement tippt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-258">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a short animation occurs when the user taps the control.</span></span> <span data-ttu-id="3cd9f-259">Standardmäßig ist auf Feedback tippen in <xref:System.Windows.Controls.InkCanvas>deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-259">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3cd9f-260">Es ist für alle anderen Steuerelemente aktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-260">It is enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsTapFeedbackEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3cd9f-261">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="3cd9f-261">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-262">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-262">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty>|  
|<span data-ttu-id="3cd9f-263">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="3cd9f-263">Metadata properties set to `true`</span></span>|<span data-ttu-id="3cd9f-264">Keine</span><span class="sxs-lookup"><span data-stu-id="3cd9f-264">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-265">Im folgenden Beispiel wird das Tippen von Feedback auf <xref:System.Windows.Controls.Canvas>einem deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-265">The following example disables tap feedback on a <xref:System.Windows.Controls.Canvas>.</span></span>  

```xaml
<Canvas Name="canvas1" Stylus.IsTapFeedbackEnabled="False"></Canvas>
```
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTapFeedbackEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTapFeedbackEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTapFeedbackEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTapFeedbackEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTapFeedbackEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTapFeedbackEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsTapFeedbackEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-266">Bezeichnet die angefügte <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-266">Identifies the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="ILAsm" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" />
      <MemberSignature Language="VB.NET" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberSignature Language="F#" Value="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" Usage="see GetIsTouchFeedbackEnabled, and SetIsTouchFeedbackEnabled" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-267">Ruft einen Wert ab, der angibt, ob Berührungsfeedback aktiviert ist, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-267">Gets or sets whether a value indicating whether touch feedback is enabled.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-268">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)]erfolgt eine kurze Animation, wenn der Benutzer das Steuerelement mit einem Finger berührt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-268">In [!INCLUDE[TLA#tla_winvista](~/includes/tlasharptla-winvista-md.md)], a short animation occurs when the user touches the control with a finger.</span></span> <span data-ttu-id="3cd9f-269">Standardmäßig ist das touchfeedback auf dem <xref:System.Windows.Controls.InkCanvas>deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-269">By default, touch feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3cd9f-270">Es ist für alle anderen Steuerelemente aktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-270">It is enabled on all other controls.</span></span>  
  
<a name="dependencyPropertyInfo_IsTouchFeedbackEnabled"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="3cd9f-271">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="3cd9f-271">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-272">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-272">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty>|  
|<span data-ttu-id="3cd9f-273">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="3cd9f-273">Metadata properties set to `true`</span></span>|<span data-ttu-id="3cd9f-274">Keine</span><span class="sxs-lookup"><span data-stu-id="3cd9f-274">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-275">Im folgenden Beispiel wird das touchfeedback auf <xref:System.Windows.Controls.InkCanvas>einem-Gerät aktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-275">The following example enables touch feedback on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  

```xaml
<InkCanvas Name="inkCanvas1" Stylus.IsTouchFeedbackEnabled="True" />
```

 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTouchFeedbackEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsTouchFeedbackEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsTouchFeedbackEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsTouchFeedbackEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsTouchFeedbackEnabledProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsTouchFeedbackEnabledProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.Stylus.IsTouchFeedbackEnabledProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-276">Bezeichnet die angefügte <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-276">Identifies the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostStylusCapture">
      <MemberSignature Language="C#" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.LostStylusCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" Usage="see AddLostStylusCaptureHandler, and RemoveLostStylusCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-277">Tritt auf, wenn ein Element Stiftereignisse freigibt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-277">Occurs when an element releases stylus events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-278">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-278">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-279">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-279">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-280">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-280">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-281">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-281">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-282">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-282">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-283">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-283">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_LostStylusCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-284">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-284">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-285">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-285">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.LostStylusCaptureEvent>|  
|<span data-ttu-id="3cd9f-286">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-286">Routing strategy</span></span>|<span data-ttu-id="3cd9f-287">Blasen</span><span class="sxs-lookup"><span data-stu-id="3cd9f-287">Bubbling</span></span>|  
|<span data-ttu-id="3cd9f-288">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-288">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-289">Im folgenden Beispiel wird veranschaulicht, wie die Hintergrundfarbe <xref:System.Windows.Controls.TextBox> eines geändert wird, wenn die <xref:System.Windows.Controls.TextBox> Tablettstiftereignisse erfasst und freigibt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-289">The following example demonstrates how to change the background color of a <xref:System.Windows.Controls.TextBox> when the <xref:System.Windows.Controls.TextBox> captures and releases stylus events.</span></span> <span data-ttu-id="3cd9f-290">In diesem Beispiel wird davon ausgegangen, dass ein Textfeld mit dem `textBox1`Namen <xref:System.Windows.Input.Stylus.GotStylusCapture> und <xref:System.Windows.Input.Stylus.LostStylusCapture> das-Ereignis und das-Ereignis mit den Ereignis Handlern im Beispiel verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-290">This example assumes that there is a textbox called `textBox1`, and that the <xref:System.Windows.Input.Stylus.GotStylusCapture> and <xref:System.Windows.Input.Stylus.LostStylusCapture> events are connected to the event handlers in the example.</span></span>  
  
 [!code-csharp[StylusSamples#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#10)]
 [!code-vb[StylusSamples#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.LostStylusCapture" />
      </Docs>
    </Member>
    <Member MemberName="LostStylusCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostStylusCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostStylusCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.LostStylusCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostStylusCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostStylusCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostStylusCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.LostStylusCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-291">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-291">Identifies the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDown">
      <MemberSignature Language="C#" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" Usage="see AddPreviewStylusButtonDownHandler, and RemovePreviewStylusButtonDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-292">Tritt auf, wenn der Benutzer auf eine der Tasten des Tablettstifts drückt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-292">Occurs when the user presses one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-293">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-293">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-294">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-294">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-295">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-295">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-296">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-296">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-297">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-297">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-298">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-298">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-299">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-299">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-300">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-300">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent>|  
|<span data-ttu-id="3cd9f-301">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-301">Routing strategy</span></span>|<span data-ttu-id="3cd9f-302">Tunneling</span><span class="sxs-lookup"><span data-stu-id="3cd9f-302">Tunneling</span></span>|  
|<span data-ttu-id="3cd9f-303">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-303">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-304">Im folgenden Beispiel wird veranschaulicht, wie bestimmt wird, welche <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> Schaltfläche das Ereignis ausgelöst hat.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-304">The following example demonstrates how to determine which button raised the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> event.</span></span> <span data-ttu-id="3cd9f-305">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1` es einen aufgerufenen gibt und dass das <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> Ereignis mit den Ereignis Handlern verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-305">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusButtonDown> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#13](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#13)]
 [!code-vb[StylusSamples#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#13)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-306">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-306">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUp">
      <MemberSignature Language="C#" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" Usage="see AddPreviewStylusButtonUpHandler, and RemovePreviewStylusButtonUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-307">Tritt auf, wenn der Benutzer eine der Schaltflächen des Tablettstifts loslässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-307">Occurs when the user releases one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-308">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-308">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-309">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-309">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-310">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-310">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-311">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-311">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-312">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-312">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-313">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-313">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-314">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-314">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-315">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-315">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent>|  
|<span data-ttu-id="3cd9f-316">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-316">Routing strategy</span></span>|<span data-ttu-id="3cd9f-317">Tunneling</span><span class="sxs-lookup"><span data-stu-id="3cd9f-317">Tunneling</span></span>|  
|<span data-ttu-id="3cd9f-318">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-318">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-319">Im folgenden Beispiel wird veranschaulicht, wie bestimmt wird, welche <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> Schaltfläche das Ereignis ausgelöst hat.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-319">The following example demonstrates how to determine which button raised the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> event.</span></span> <span data-ttu-id="3cd9f-320">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1` es einen aufgerufenen gibt und dass das <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> Ereignis mit den Ereignis Handlern verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-320">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusButtonUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#14](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#14)]
 [!code-vb[StylusSamples#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#14)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-321">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-321">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDown">
      <MemberSignature Language="C#" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" Usage="see AddPreviewStylusDownHandler, and RemovePreviewStylusDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-322">Tritt auf, wenn der Benutzer das Tablet mit der Spitze des Tablettstifts berührt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-322">Occurs when user touches the tip of the stylus to the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-323">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-323">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-324">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-324">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-325">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-325">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-326">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-326">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-327">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-327">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-328">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-328">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-329">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-330">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-330">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusDownEvent>|  
|<span data-ttu-id="3cd9f-331">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-331">Routing strategy</span></span>|<span data-ttu-id="3cd9f-332">Tunneling</span><span class="sxs-lookup"><span data-stu-id="3cd9f-332">Tunneling</span></span>|  
|<span data-ttu-id="3cd9f-333">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-333">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-334">Im folgenden Beispiel wird veranschaulicht, wie sichergestellt wird, dass der Tablettstift nicht aufgezeichnet wird, wenn der Benutzer den Tablettstift auf das Tablet berührt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-334">The following example demonstrates how to ensure that the stylus is not captured when the user touches the stylus to the tablet.</span></span> <span data-ttu-id="3cd9f-335">In diesem Beispiel wird davon <xref:System.Windows.Input.Stylus.PreviewStylusDown> ausgegangen, dass das-Ereignis mit dem-Ereignishandler verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-335">This example assumes that the <xref:System.Windows.Input.Stylus.PreviewStylusDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#5)]
 [!code-vb[StylusSamples#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusDown" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-336">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-336">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMove">
      <MemberSignature Language="C#" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" Usage="see AddPreviewStylusInAirMoveHandler, and RemovePreviewStylusInAirMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-337">Tritt auf, wenn sich der Stift bewegt, während er sich im Bereich des Tablets befindet (ohne es zu berühren).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-337">Occurs if the stylus moves while it is within range of (but not touching) the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-338">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-338">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-339">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-339">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-340">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-340">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-341">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-341">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-342">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-342">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-343">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-343">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-344">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-344">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-345">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-345">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent>|  
|<span data-ttu-id="3cd9f-346">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-346">Routing strategy</span></span>|<span data-ttu-id="3cd9f-347">Tunneling</span><span class="sxs-lookup"><span data-stu-id="3cd9f-347">Tunneling</span></span>|  
|<span data-ttu-id="3cd9f-348">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-348">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-349">Im folgenden Beispiel wird veranschaulicht, wie Sie bestimmen, auf welchem Element der Tablettstift positioniert ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-349">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="3cd9f-350">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1`es einen aufgerufenen <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove> gibt und dass das Ereignis mit dem Ereignishandler verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-350">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.PreviewStylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#15)]
 [!code-vb[StylusSamples#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#15)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-351">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-351">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRange">
      <MemberSignature Language="C#" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusInRange" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" Usage="see AddPreviewStylusInRangeHandler, and RemovePreviewStylusInRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-352">Tritt auf, wenn der Tablettstift in den Bereich des Tablets gelangt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-352">Occurs when the stylus comes within range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-353">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-353">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-354">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-354">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-355">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-355">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-356">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-356">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-357">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-357">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-358">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-358">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-359">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-359">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-360">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-360">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusInRangeEvent>|  
|<span data-ttu-id="3cd9f-361">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-361">Routing strategy</span></span>|<span data-ttu-id="3cd9f-362">Tunneling</span><span class="sxs-lookup"><span data-stu-id="3cd9f-362">Tunneling</span></span>|  
|<span data-ttu-id="3cd9f-363">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-363">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-364">Im folgenden Beispiel wird veranschaulicht, wie bestimmt wird, ob der Tablettstift umgekehrt ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-364">The following example demonstrates how to determine whether the stylus is inverted.</span></span> <span data-ttu-id="3cd9f-365">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1` es einen aufgerufenen gibt und dass das <xref:System.Windows.Input.Stylus.PreviewStylusInRange> Ereignis mit den Ereignis Handlern verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-365">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusInRange> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#21)]
 [!code-vb[StylusSamples#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-366">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-366">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMove">
      <MemberSignature Language="C#" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" Usage="see AddPreviewStylusMoveHandler, and RemovePreviewStylusMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-367">Tritt auf, wenn sich der Tablettstift bewegt, während er den Tablet berührt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-367">Occurs when the stylus moves while it is touching the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-368">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-369">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-369">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-370">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-370">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-371">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-371">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-372">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-372">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-373">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-373">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-374">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-374">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-375">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-375">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusMoveEvent>|  
|<span data-ttu-id="3cd9f-376">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-376">Routing strategy</span></span>|<span data-ttu-id="3cd9f-377">Tunneling</span><span class="sxs-lookup"><span data-stu-id="3cd9f-377">Tunneling</span></span>|  
|<span data-ttu-id="3cd9f-378">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-378">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-379">Im Beispiel wird veranschaulicht, wie die Position des Tablettstifts bei der Verschiebung bestimmt wird.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-379">The example demonstrates how to determine the position of the stylus when it moves.</span></span> <span data-ttu-id="3cd9f-380">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1` es einen aufgerufenen gibt und dass das <xref:System.Windows.Input.Stylus.PreviewStylusMove> Ereignis mit den Ereignis Handlern verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-380">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusMove> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#16)]
 [!code-vb[StylusSamples#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#16)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusMove" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-381">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-381">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRange">
      <MemberSignature Language="C#" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" Usage="see AddPreviewStylusOutOfRangeHandler, and RemovePreviewStylusOutOfRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-382">Tritt auf, wenn der Tablettstift den Bereich des Tablets verlässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-382">Occurs when the stylus goes out of range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-383">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-383">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-384">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-384">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-385">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-385">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-386">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-386">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-387">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-388">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-388">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-389">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-390">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-390">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent>|  
|<span data-ttu-id="3cd9f-391">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-391">Routing strategy</span></span>|<span data-ttu-id="3cd9f-392">Tunneling</span><span class="sxs-lookup"><span data-stu-id="3cd9f-392">Tunneling</span></span>|  
|<span data-ttu-id="3cd9f-393">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-393">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-394">Im folgenden Beispiel wird veranschaulicht, wie bestimmt wird, ob der Tablettstift umgekehrt ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-394">The following example demonstrates how to determine whether the stylus is inverted.</span></span> <span data-ttu-id="3cd9f-395">In diesem Beispiel wird davon ausgegangen <xref:System.Windows.Controls.TextBox> , `textBox1` dass ein mit <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange> dem Namen vorhanden ist und dass das Ereignis mit den Ereignis Handlern verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-395">This example assumes there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusOutOfRange> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#20)]
 [!code-vb[StylusSamples#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-396">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-396">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGesture">
      <MemberSignature Language="C#" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" Usage="see AddPreviewStylusSystemGestureHandler, and RemovePreviewStylusSystemGestureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-397">Tritt auf, wenn der Benutzer eine Geste für Systemereignisse mit diesem Stift macht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-397">Occurs when the user makes a system gesture with this stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-398">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-398">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-399">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-399">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-400">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-400">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-401">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-401">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-402">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-402">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-403">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-403">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-404">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-404">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-405">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-405">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent>|  
|<span data-ttu-id="3cd9f-406">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-406">Routing strategy</span></span>|<span data-ttu-id="3cd9f-407">Tunneling</span><span class="sxs-lookup"><span data-stu-id="3cd9f-407">Tunneling</span></span>|  
|<span data-ttu-id="3cd9f-408">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-408">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-409">Im folgenden Beispiel wird veranschaulicht, wie die System Geste bestimmt wird, <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> die das-Ereignis ausgelöst hat.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-409">The following example demonstrates how to determine the system gesture that raised the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> event.</span></span> <span data-ttu-id="3cd9f-410">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1` es einen aufgerufenen gibt und dass das <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> Ereignis mit den Ereignis Handlern verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-410">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusSystemGesture> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#17](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#17)]
 [!code-vb[StylusSamples#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#17)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-411">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-411">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUp">
      <MemberSignature Language="C#" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.PreviewStylusUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" Usage="see AddPreviewStylusUpHandler, and RemovePreviewStylusUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-412">Tritt auf, wenn der Benutzer den Tablettstift vom Tablet abhebt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-412">Occurs when the user lifts the stylus from the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-413">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-413">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-414">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-414">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-415">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-415">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-416">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-416">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-417">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-417">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-418">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-418">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewStylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-419">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-419">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-420">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-420">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.PreviewStylusUpEvent>|  
|<span data-ttu-id="3cd9f-421">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-421">Routing strategy</span></span>|<span data-ttu-id="3cd9f-422">Tunneling</span><span class="sxs-lookup"><span data-stu-id="3cd9f-422">Tunneling</span></span>|  
|<span data-ttu-id="3cd9f-423">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-423">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-424">Im folgenden Beispiel wird veranschaulicht, wie die Position des Tablettstifts festgelegt wird, wenn der Benutzer ihn vom Tablet zuweist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-424">The following example demonstrates how to determine the position of the stylus when the user lifts it from the tablet.</span></span> <span data-ttu-id="3cd9f-425">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1` es einen aufgerufenen gibt und dass das <xref:System.Windows.Input.Stylus.PreviewStylusUp> Ereignis mit den Ereignis Handlern verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-425">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.PreviewStylusUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#22](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#22)]
 [!code-vb[StylusSamples#22](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#22)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.PreviewStylusUp" />
      </Docs>
    </Member>
    <Member MemberName="PreviewStylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewStylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewStylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.PreviewStylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewStylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewStylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewStylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.PreviewStylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-426">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-426">Identifies the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveGotStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-427">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-427">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-428">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-428">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-429">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-429">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.GotStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostStylusCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostStylusCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostStylusCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostStylusCaptureHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostStylusCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostStylusCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveLostStylusCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-430">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-430">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-431">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-431">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-432">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-432">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.LostStylusCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-433">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-433">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-434">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-434">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-435">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-435">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-436">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-437">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-437">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-438">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-438">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-439">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-439">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-440">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-440">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-441">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-441">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-442">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-442">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-443">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-443">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-444">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-444">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-445">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-445">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-446">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-446">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-447">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-447">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-448">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-449">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-449">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-450">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-450">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-451">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-451">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-452">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-452">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-453">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-453">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-454">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-454">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-455">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-455">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-456">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-456">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemovePreviewStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemovePreviewStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-457">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-457">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-458">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-458">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-459">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-459">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.PreviewStylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusButtonDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusButtonDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusButtonDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusButtonDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusButtonDownHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusButtonDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusButtonDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusButtonDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-460">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-461">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-461">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-462">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-462">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusButtonUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusButtonUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusButtonUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusButtonUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusButtonUpHandler (element As DependencyObject, handler As StylusButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusButtonUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusButtonUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusButtonUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-463">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-463">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-464">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-464">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-465">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-465">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusDownHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusDownEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusDownEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusDownHandler(System.Windows.DependencyObject,System.Windows.Input.StylusDownEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusDownHandler (element As DependencyObject, handler As StylusDownEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusDownEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusDownHandler : System.Windows.DependencyObject * System.Windows.Input.StylusDownEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusDownEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-466">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-466">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-467">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-467">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-468">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusDown" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-468">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusEnterHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusEnterHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusEnterHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-469">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-469">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-470">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-470">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-471">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-471">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusInAirMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusInAirMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusInAirMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusInAirMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusInAirMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusInAirMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusInAirMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-472">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-472">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-473">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-473">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-474">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-474">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusInRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusInRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusInRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusInRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusInRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusInRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusInRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusInRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-475">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-475">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-476">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-476">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-477">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-477">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusLeaveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-478">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-478">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-479">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-479">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-480">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-480">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusMoveHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusMoveHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusMoveHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-481">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-481">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-482">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-482">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-483">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusMove" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-483">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusOutOfRangeHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusOutOfRangeHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusOutOfRangeHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusOutOfRangeHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusOutOfRangeHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusOutOfRangeHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusOutOfRangeHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-484">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-484">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-485">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-485">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-486">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-486">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusSystemGestureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusSystemGestureHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusSystemGestureEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusSystemGestureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusSystemGestureEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler(System.Windows.DependencyObject,System.Windows.Input.StylusSystemGestureEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusSystemGestureHandler (element As DependencyObject, handler As StylusSystemGestureEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusSystemGestureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusSystemGestureEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusSystemGestureHandler : System.Windows.DependencyObject * System.Windows.Input.StylusSystemGestureEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusSystemGestureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusSystemGestureEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-487">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-487">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-488">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-488">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-489">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> -Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-489">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveStylusUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveStylusUpHandler (System.Windows.DependencyObject element, System.Windows.Input.StylusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveStylusUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.StylusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.RemoveStylusUpHandler(System.Windows.DependencyObject,System.Windows.Input.StylusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveStylusUpHandler (element As DependencyObject, handler As StylusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveStylusUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::StylusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveStylusUpHandler : System.Windows.DependencyObject * System.Windows.Input.StylusEventHandler -&gt; unit" Usage="System.Windows.Input.Stylus.RemoveStylusUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.StylusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-490">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-490">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="3cd9f-491">Der zu entfernende Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-491">The event handler to remove.</span></span></param>
        <summary><span data-ttu-id="3cd9f-492">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Stylus.StylusUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-492">Removes a handler for the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFlicksEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsFlicksEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFlicksEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsFlicksEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFlicksEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFlicksEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsFlicksEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsFlicksEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-493">Das <see cref="T:System.Windows.UIElement" /> oder <see cref="T:System.Windows.ContentElement" />, für das Streichen aktiviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-493">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable flicks.</span></span></param>
        <param name="enabled"><span data-ttu-id="3cd9f-494"><see langword="true" />, um Streichen zu aktivieren, <see langword="false" />, um Streichen zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-494"><see langword="true" /> to enable flicks; <see langword="false" /> to disable flicks.</span></span></param>
        <summary><span data-ttu-id="3cd9f-495">Ruft den Wert der angefügten <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" />-Eigenschaft des angegebenen Elements ab.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-495">Gets the value of the <see cref="P:System.Windows.Input.Stylus.IsFlicksEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-496">In Windows Vista ist ein Flick, eine der möglichen System Gesten, ein kurzer, kurzer und kurzer Strich, der einem Navigations-oder Verknüpfungs Befehl zugeordnet werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-496">In Windows Vista, a flick, one of the possible system gestures, is a short, quick, straight stroke that can be mapped to a navigation or shortcut command.</span></span> <span data-ttu-id="3cd9f-497">Standardmäßig sind schnelle Stift Bewegungen in <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>und <xref:System.Windows.Controls.Primitives.ScrollBar>deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-497">By default, flicks are disabled on the <xref:System.Windows.Controls.InkCanvas>, <xref:System.Windows.Controls.InkPresenter>, and <xref:System.Windows.Controls.Primitives.ScrollBar>.</span></span> <span data-ttu-id="3cd9f-498">Flicks sind für alle anderen Steuerelemente aktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-498">Flicks are enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-499">Im folgenden Beispiel wird veranschaulicht, wie Sie schnelle Stift Bewegungen auf <xref:System.Windows.Controls.Canvas>einem deaktivieren können.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-499">The following example demonstrates how to disable flicks on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#2](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#2)]
 [!code-vb[GestureSample#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsPressAndHoldEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsPressAndHoldEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsPressAndHoldEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsPressAndHoldEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsPressAndHoldEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsPressAndHoldEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsPressAndHoldEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsPressAndHoldEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-500">Das <see cref="T:System.Windows.UIElement" /> oder <see cref="T:System.Windows.ContentElement" />, für das Drücken und Halten aktiviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-500">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable press and hold.</span></span></param>
        <param name="enabled"><span data-ttu-id="3cd9f-501"><see langword="true" /> , um Drücken und Halten zu aktivieren, <see langword="false" /> um Drücken und Halten zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-501"><see langword="true" /> to enable press and hold; <see langword="false" /> to disable press and hold.</span></span></param>
        <summary><span data-ttu-id="3cd9f-502">Legt den Wert der angefügten <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" />-Eigenschaft für das angegebene Element fest.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-502">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsPressAndHoldEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-503">Halten Sie mit der rechten Maustaste auf die Karte, und halten Sie sie gedrückt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-503">Press and hold maps to the right-click on a mouse.</span></span> <span data-ttu-id="3cd9f-504">In Windows Vista können Sie dieses Verhalten für Elemente deaktivieren, wenn Sie eine Situation sehen, in der der Benutzer den Tablet-Stift gedrückt halten kann, ohne einen Rechtsklick zu simulieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-504">In Windows Vista, you can disable this behavior on elements if you foresee a situation where the user might hold the tablet pen down without intending to simulate a right-click.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-505">Im folgenden Beispiel wird veranschaulicht, wie Sie Press und Hold auf <xref:System.Windows.Controls.Slider>einem aktivieren können.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-505">The following example demonstrates how to enable press and hold on a <xref:System.Windows.Controls.Slider>.</span></span> <span data-ttu-id="3cd9f-506">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.Slider> dass `horizontalSlider1`es einen aufgerufenen gibt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-506">This example assumes that there is a <xref:System.Windows.Controls.Slider> called `horizontalSlider1`.</span></span>  
  
 [!code-csharp[StylusSamples#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#9)]
 [!code-vb[StylusSamples#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsTapFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsTapFeedbackEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsTapFeedbackEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsTapFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsTapFeedbackEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsTapFeedbackEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsTapFeedbackEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsTapFeedbackEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-507">Das <see cref="T:System.Windows.UIElement" /> oder <see cref="T:System.Windows.ContentElement" />, für das Feedback durch Tippen aktiviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-507">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</span></span></param>
        <param name="enabled"><span data-ttu-id="3cd9f-508"><see langword="true" /> , um Feedback durch Tippen zu aktivieren, <see langword="false" /> , um Feedback durch Tippen zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-508"><see langword="true" /> to enable tap feedback; <see langword="false" /> to disable tap feedback.</span></span></param>
        <summary><span data-ttu-id="3cd9f-509">Legt den Wert der angefügten <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" />-Eigenschaft für das angegebene Element fest.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-509">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTapFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-510">In Windows Vista erfolgt eine kurze Animation, wenn der Benutzer auf das-Steuerelement tippt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-510">In Windows Vista, a short animation occurs when the user taps the control.</span></span> <span data-ttu-id="3cd9f-511">Standardmäßig ist auf Feedback tippen in <xref:System.Windows.Controls.InkCanvas>deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-511">By default, tap feedback is disabled on the <xref:System.Windows.Controls.InkCanvas>.</span></span> <span data-ttu-id="3cd9f-512">Es ist für alle anderen Steuerelemente aktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-512">It is enabled on all other controls.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-513">Im folgenden Beispiel wird das Tippen von Feedback auf <xref:System.Windows.Controls.Canvas>einem deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-513">The following example disables tap feedback on a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[GestureSample#4](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#4)]
 [!code-vb[GestureSample#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsTouchFeedbackEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsTouchFeedbackEnabled (System.Windows.DependencyObject element, bool enabled);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsTouchFeedbackEnabled(class System.Windows.DependencyObject element, bool enabled) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsTouchFeedbackEnabled (element As DependencyObject, enabled As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsTouchFeedbackEnabled(System::Windows::DependencyObject ^ element, bool enabled);" />
      <MemberSignature Language="F#" Value="static member SetIsTouchFeedbackEnabled : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.Stylus.SetIsTouchFeedbackEnabled (element, enabled)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="enabled" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="3cd9f-514">Das <see cref="T:System.Windows.UIElement" /> oder <see cref="T:System.Windows.ContentElement" />, für das Feedback durch Tippen aktiviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-514">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> on which to enable tap feedback.</span></span></param>
        <param name="enabled"><span data-ttu-id="3cd9f-515"><see langword="true" />, um Feedback durch Toucheingabe zu aktivieren, <see langword="false" />, um Feedback durch Toucheingabe zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-515"><see langword="true" /> to enable touch input feedback; <see langword="false" /> to disable touch input feedback.</span></span></param>
        <summary><span data-ttu-id="3cd9f-516">Legt den Wert der angefügten <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" />-Eigenschaft für das angegebene Element fest.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-516">Sets the value of the <see cref="P:System.Windows.Input.Stylus.IsTouchFeedbackEnabled" /> attached property on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="3cd9f-517">Im folgenden Beispiel wird das touchfeedback auf <xref:System.Windows.Controls.InkCanvas>einem-Gerät aktiviert.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-517">The following example enables touch feedback on an <xref:System.Windows.Controls.InkCanvas>.</span></span>  
  
 [!code-csharp[GestureSample#8](~/samples/snippets/csharp/VS_Snippets_Wpf/GestureSample/CSharp/Window1.xaml.cs#8)]
 [!code-vb[GestureSample#8](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GestureSample/VisualBasic/Window1.xaml.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDown">
      <MemberSignature Language="C#" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusButtonDown" />
      <MemberSignature Language="VB.NET" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberSignature Language="F#" Value="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" Usage="see AddStylusButtonDownHandler, and RemoveStylusButtonDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-518">Tritt auf, wenn der Benutzer auf eine der Tasten des Tablettstifts drückt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-518">Occurs when the user presses one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-519">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-519">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-520">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-520">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-521">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-521">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-522">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-522">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-523">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-523">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-524">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-524">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-525">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-525">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-526">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-526">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusButtonDownEvent>|  
|<span data-ttu-id="3cd9f-527">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-527">Routing strategy</span></span>|<span data-ttu-id="3cd9f-528">Blasen</span><span class="sxs-lookup"><span data-stu-id="3cd9f-528">Bubbling</span></span>|  
|<span data-ttu-id="3cd9f-529">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-529">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-530">Im folgenden Beispiel wird veranschaulicht, wie ein Kontextmenü angezeigt wird, wenn der Benutzer die Schaltfläche "Barrel" auf einem Tablettstift drückt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-530">The following example demonstrates how to show a shortcut menu when the user presses the barrel button on a stylus.</span></span> <span data-ttu-id="3cd9f-531">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1`es einen aufgerufenen `textBoxContextMenu`und einen <xref:System.Windows.Controls.ContextMenu> aufgerufenen <xref:System.Windows.Input.Stylus.StylusButtonDown> gibt und dass das Ereignis mit dem Ereignishandler verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-531">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and a <xref:System.Windows.Controls.ContextMenu> called `textBoxContextMenu`, and that the <xref:System.Windows.Input.Stylus.StylusButtonDown> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#2)]
 [!code-vb[StylusSamples#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusButtonDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusButtonDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-532">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-532">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUp">
      <MemberSignature Language="C#" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusButtonUp" />
      <MemberSignature Language="VB.NET" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberSignature Language="F#" Value="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" Usage="see AddStylusButtonUpHandler, and RemoveStylusButtonUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-533">Tritt auf, wenn der Benutzer eine der Schaltflächen des Tablettstifts loslässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-533">Occurs when the user releases one of the buttons on the stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-534">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-534">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-535">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-535">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-536">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-536">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-537">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-537">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-538">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-538">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-539">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-539">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusButtonUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-540">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-540">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-541">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-541">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusButtonUpEvent>|  
|<span data-ttu-id="3cd9f-542">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-542">Routing strategy</span></span>|<span data-ttu-id="3cd9f-543">Blasen</span><span class="sxs-lookup"><span data-stu-id="3cd9f-543">Bubbling</span></span>|  
|<span data-ttu-id="3cd9f-544">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-544">Delegate</span></span>|<xref:System.Windows.Input.StylusButtonEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-545">Im folgenden Beispiel wird veranschaulicht, wie der ausgewählte Text kopiert wird, wenn der Benutzer die Schaltfläche "Barrel" auf einem Tablettstift loslässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-545">The following example demonstrates how to copy the selected text when the user releases the barrel button on a stylus.</span></span> <span data-ttu-id="3cd9f-546">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1`es einen aufgerufenen <xref:System.Windows.Input.Stylus.StylusButtonUp> gibt und dass das Ereignis mit den Ereignis Handlern verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-546">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusButtonUp> event is connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#11)]
 [!code-vb[StylusSamples#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusButtonUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusButtonUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusButtonUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusButtonUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusButtonUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusButtonUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusButtonUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusButtonUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusButtonUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-547">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-547">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusButtonUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusDown">
      <MemberSignature Language="C#" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusDown" />
      <MemberSignature Language="VB.NET" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberSignature Language="F#" Value="see AddStylusDownHandler, and RemoveStylusDownHandler" Usage="see AddStylusDownHandler, and RemoveStylusDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-548">Tritt auf, wenn der Benutzer das Tablet mit der Spitze des Tablettstifts berührt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-548">Occurs when the user touches the tip of the stylus to the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-549">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-549">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-550">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-550">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-551">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-551">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-552">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-552">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-553">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-553">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-554">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-554">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-555">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-555">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-556">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-556">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusDownEvent>|  
|<span data-ttu-id="3cd9f-557">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-557">Routing strategy</span></span>|<span data-ttu-id="3cd9f-558">Blasen</span><span class="sxs-lookup"><span data-stu-id="3cd9f-558">Bubbling</span></span>|  
|<span data-ttu-id="3cd9f-559">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-559">Delegate</span></span>|<xref:System.Windows.Input.StylusDownEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-560">Im folgenden Beispiel wird veranschaulicht, wie die Koordinaten des Tablettstifts aufgezeichnet werden, auch wenn der Tablettstift die Begrenzungen <xref:System.Windows.Controls.TextBox>eines verlässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-560">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3cd9f-561">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1`es einen aufgerufenen <xref:System.Windows.Input.Stylus.StylusDown>gibt und dass <xref:System.Windows.Input.Stylus.StylusMove> die Ereignisse, <xref:System.Windows.Input.Stylus.StylusUp>und mit den Ereignis Handlern verbunden sind.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-561">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusDown" />
      </Docs>
    </Member>
    <Member MemberName="StylusDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-562">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.StylusDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-562">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusEnter">
      <MemberSignature Language="C#" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusEnter" />
      <MemberSignature Language="VB.NET" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberSignature Language="F#" Value="see AddStylusEnterHandler, and RemoveStylusEnterHandler" Usage="see AddStylusEnterHandler, and RemoveStylusEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-563">Tritt auf, wenn der Stiftcursor in den Bereich des Elements eintritt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-563">Occurs when the stylus cursor enters the bounds of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-564">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-564">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-565">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-565">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-566">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-566">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-567">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-567">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-568">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-568">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-569">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-569">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-570">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-570">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-571">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-571">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusEnterEvent>|  
|<span data-ttu-id="3cd9f-572">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-572">Routing strategy</span></span>|<span data-ttu-id="3cd9f-573">Direkt</span><span class="sxs-lookup"><span data-stu-id="3cd9f-573">Direct</span></span>|  
|<span data-ttu-id="3cd9f-574">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-574">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-575">Im folgenden Beispiel wird veranschaulicht, wie die Farbe eines <xref:System.Windows.Controls.Button> geändert wird, wenn der Tablettstiftcursor in seine Grenzen wechselt und seine Grenzen verlässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-575">The following example demonstrates how to change the color of a <xref:System.Windows.Controls.Button> when the stylus cursor enters and leaves its bounds.</span></span> <span data-ttu-id="3cd9f-576">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.Button> dass `button1` es einen aufgerufenen <xref:System.Windows.Input.Stylus.StylusLeave> gibt und dass die <xref:System.Windows.Input.Stylus.StylusEnter> -und-Ereignisse mit den Ereignis Handlern verbunden sind.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-576">This example assumes that there is a <xref:System.Windows.Controls.Button> called `button1` and that the <xref:System.Windows.Input.Stylus.StylusEnter> and <xref:System.Windows.Input.Stylus.StylusLeave> events are connected to the event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[StylusSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusEnter" />
      </Docs>
    </Member>
    <Member MemberName="StylusEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-577">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.StylusEnter" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-577">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMove">
      <MemberSignature Language="C#" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusInAirMove" />
      <MemberSignature Language="VB.NET" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" Usage="see AddStylusInAirMoveHandler, and RemoveStylusInAirMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-578">Tritt auf, wenn sich der Stift bewegt, während er sich in der Nähe des Tablets befindet, ohne es zu berühren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-578">Occurs when the stylus moves while it is in range of, but not touching, the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-579">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-579">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-580">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-580">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-581">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-581">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-582">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-582">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-583">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-583">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-584">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-584">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInAirMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-585">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-585">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-586">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-586">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusInAirMoveEvent>|  
|<span data-ttu-id="3cd9f-587">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-587">Routing strategy</span></span>|<span data-ttu-id="3cd9f-588">Blasen</span><span class="sxs-lookup"><span data-stu-id="3cd9f-588">Bubbling</span></span>|  
|<span data-ttu-id="3cd9f-589">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-589">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-590">Im folgenden Beispiel wird veranschaulicht, wie Sie bestimmen, auf welchem Element der Tablettstift positioniert ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-590">The following example demonstrates how to determine which element the stylus is positioned over.</span></span> <span data-ttu-id="3cd9f-591">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1` es einen aufgerufenen gibt und dass das <xref:System.Windows.Input.Stylus.StylusInAirMove> Ereignis mit dem Ereignishandler verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-591">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusInAirMove> event is connected to the event handler.</span></span>  
  
 [!code-csharp[StylusSamples#3](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#3)]
 [!code-vb[StylusSamples#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInAirMove" />
      </Docs>
    </Member>
    <Member MemberName="StylusInAirMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInAirMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInAirMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusInAirMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInAirMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInAirMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInAirMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusInAirMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-592">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-592">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInAirMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusInRange">
      <MemberSignature Language="C#" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusInRange" />
      <MemberSignature Language="VB.NET" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberSignature Language="F#" Value="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" Usage="see AddStylusInRangeHandler, and RemoveStylusInRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-593">Tritt auf, wenn der Tablettstift in den Bereich des Tablets gelangt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-593">Occurs when the stylus comes within range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-594">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-594">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-595">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-595">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-596">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-596">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-597">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-597">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-598">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-598">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-599">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-599">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusInRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-600">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-600">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-601">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-601">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusInRangeEvent>|  
|<span data-ttu-id="3cd9f-602">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-602">Routing strategy</span></span>|<span data-ttu-id="3cd9f-603">Blasen</span><span class="sxs-lookup"><span data-stu-id="3cd9f-603">Bubbling</span></span>|  
|<span data-ttu-id="3cd9f-604">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-604">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-605">Im folgenden Beispiel wird veranschaulicht, wie die <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> -Eigenschaft <xref:System.Windows.Controls.InkCanvas> von auf <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> festgelegt wird, wenn der Tablettstift umgekehrt wird.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-605">The following example demonstrates how to set the <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> property of an <xref:System.Windows.Controls.InkCanvas> to <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByStroke> when the stylus is inverted.</span></span> <span data-ttu-id="3cd9f-606">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.InkCanvas> dass `inkCanvas1` ein-Ereignis <xref:System.Windows.Input.Stylus.StylusInRange> mit dem Namen vorhanden ist und dass das Ereignis mit den Ereignis Handlern verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-606">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and that the <xref:System.Windows.Input.Stylus.StylusInRange> event is connected to the event handlers.</span></span> <span data-ttu-id="3cd9f-607">Um die Cursor Änderung anzuzeigen, legen Sie <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> `true` die-Eigenschaft `inkCanvas1`auf ein fest.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-607">To see the cursor change, set the <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> property to `true` on `inkCanvas1`.</span></span>  
  
 [!code-csharp[StylusSamples#18](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#18)]
 [!code-vb[StylusSamples#18](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#18)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusInRange" />
      </Docs>
    </Member>
    <Member MemberName="StylusInRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusInRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusInRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusInRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusInRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusInRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusInRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusInRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-608">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.StylusInRange" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-608">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusInRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusLeave">
      <MemberSignature Language="C#" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusLeave" />
      <MemberSignature Language="VB.NET" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" Usage="see AddStylusLeaveHandler, and RemoveStylusLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-609">Tritt auf, wenn der Stiftcursor den Bereich eines Elements verlässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-609">Occurs when the stylus cursor leaves the bounds of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-610">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-610">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-611">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-611">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-612">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-612">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-613">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-613">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-614">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-614">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-615">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-615">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusLeave"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-616">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-616">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-617">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-617">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusLeaveEvent>|  
|<span data-ttu-id="3cd9f-618">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-618">Routing strategy</span></span>|<span data-ttu-id="3cd9f-619">Direkt</span><span class="sxs-lookup"><span data-stu-id="3cd9f-619">Direct</span></span>|  
|<span data-ttu-id="3cd9f-620">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-620">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-621">Im folgenden Beispiel wird veranschaulicht, wie die Farbe eines <xref:System.Windows.Controls.Button> geändert wird, wenn der Tablettstiftcursor in seine Grenzen wechselt und seine Grenzen verlässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-621">The following example demonstrates how to change the color of a <xref:System.Windows.Controls.Button> when the stylus cursor enters and leaves its bounds.</span></span> <span data-ttu-id="3cd9f-622">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.Button> dass `button1` es einen aufgerufenen <xref:System.Windows.Input.Stylus.StylusLeave> gibt und dass die <xref:System.Windows.Input.Stylus.StylusEnter> -und-Ereignisse mit Ereignis Handlern verbunden sind.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-622">This example assumes that there is a <xref:System.Windows.Controls.Button> called `button1` and that the <xref:System.Windows.Input.Stylus.StylusEnter> and <xref:System.Windows.Input.Stylus.StylusLeave> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#4](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#4)]
 [!code-vb[StylusSamples#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusLeave" />
      </Docs>
    </Member>
    <Member MemberName="StylusLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-623">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.StylusLeave" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-623">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusMove">
      <MemberSignature Language="C#" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusMove" />
      <MemberSignature Language="VB.NET" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberSignature Language="F#" Value="see AddStylusMoveHandler, and RemoveStylusMoveHandler" Usage="see AddStylusMoveHandler, and RemoveStylusMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-624">Tritt auf, wenn sich der Tablettstift bewegt, während er den Tablet berührt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-624">Occurs when the stylus moves while it is touching the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-625">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-625">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-626">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-626">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-627">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-627">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-628">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-628">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-629">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-629">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-630">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-630">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-631">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-631">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-632">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-632">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusMoveEvent>|  
|<span data-ttu-id="3cd9f-633">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-633">Routing strategy</span></span>|<span data-ttu-id="3cd9f-634">Blasen</span><span class="sxs-lookup"><span data-stu-id="3cd9f-634">Bubbling</span></span>|  
|<span data-ttu-id="3cd9f-635">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-635">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-636">Im folgenden Beispiel wird veranschaulicht, wie die Koordinaten des Tablettstifts aufgezeichnet werden, auch wenn der Tablettstift die Begrenzungen <xref:System.Windows.Controls.TextBox>eines verlässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-636">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3cd9f-637">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1`es einen aufgerufenen <xref:System.Windows.Input.Stylus.StylusDown>gibt und dass <xref:System.Windows.Input.Stylus.StylusMove> die Ereignisse, <xref:System.Windows.Input.Stylus.StylusUp>und mit Ereignis Handlern verbunden sind.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-637">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusMove" />
      </Docs>
    </Member>
    <Member MemberName="StylusMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-638">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.StylusMove" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-638">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRange">
      <MemberSignature Language="C#" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusOutOfRange" />
      <MemberSignature Language="VB.NET" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberSignature Language="F#" Value="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" Usage="see AddStylusOutOfRangeHandler, and RemoveStylusOutOfRangeHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-639">Tritt auf, wenn der Tablettstift den Bereich des Tablets verlässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-639">Occurs when the stylus goes out of range of the tablet.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-640">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-640">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-641">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-641">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-642">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-642">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-643">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-643">further expands an attached event's capabilities, allowing it to traverse a route.</span></span>  <span data-ttu-id="3cd9f-644">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-644">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-645">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-645">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusOutOfRange"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-646">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-646">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-647">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-647">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusOutOfRangeEvent>|  
|<span data-ttu-id="3cd9f-648">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-648">Routing strategy</span></span>|<span data-ttu-id="3cd9f-649">Blasen</span><span class="sxs-lookup"><span data-stu-id="3cd9f-649">Bubbling</span></span>|  
|<span data-ttu-id="3cd9f-650">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-650">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-651">Im folgenden Beispiel wird veranschaulicht, wie der Cursor in einen Pfeil geändert wird, wenn der Tablettstift den Bereich verlässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-651">The following example demonstrates how to change the cursor to an arrow when the stylus goes out of range.</span></span> <span data-ttu-id="3cd9f-652">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.InkCanvas> dass `inkCanvas1` ein-Ereignis <xref:System.Windows.Input.Stylus.StylusOutOfRange> mit dem Namen vorhanden ist und dass das Ereignis mit einem Ereignishandler verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-652">This example assumes that there is an <xref:System.Windows.Controls.InkCanvas> called `inkCanvas1` and that the <xref:System.Windows.Input.Stylus.StylusOutOfRange> event is connected to an event handler.</span></span> <span data-ttu-id="3cd9f-653">Um die Cursor Änderung anzuzeigen, legen Sie <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> `true` die-Eigenschaft `inkCanvas1`auf ein fest.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-653">To see the cursor change, set the <xref:System.Windows.Controls.InkCanvas.UseCustomCursor%2A> property to `true` on `inkCanvas1`.</span></span>  
  
 [!code-csharp[StylusSamples#19](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#19)]
 [!code-vb[StylusSamples#19](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#19)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusOutOfRange" />
      </Docs>
    </Member>
    <Member MemberName="StylusOutOfRangeEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusOutOfRangeEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusOutOfRangeEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusOutOfRangeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusOutOfRangeEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusOutOfRangeEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusOutOfRangeEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusOutOfRangeEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-654">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-654">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusOutOfRange" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGesture">
      <MemberSignature Language="C#" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusSystemGesture" />
      <MemberSignature Language="VB.NET" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberSignature Language="F#" Value="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" Usage="see AddStylusSystemGestureHandler, and RemoveStylusSystemGestureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-655">Tritt auf, wenn der Benutzer eine Geste für Systemereignisse mit diesem Stift macht.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-655">Occurs when the user makes a system gesture with this stylus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-656">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-656">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-657">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-657">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-658">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-658">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-659">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-659">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-660">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-660">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-661">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-661">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusSystemGesture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-662">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-662">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-663">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-663">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusSystemGestureEvent>|  
|<span data-ttu-id="3cd9f-664">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-664">Routing strategy</span></span>|<span data-ttu-id="3cd9f-665">Blasen</span><span class="sxs-lookup"><span data-stu-id="3cd9f-665">Bubbling</span></span>|  
|<span data-ttu-id="3cd9f-666">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-666">Delegate</span></span>|<xref:System.Windows.Input.StylusSystemGestureEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-667">Im folgenden Beispiel wird veranschaulicht, wie die System Geste bestimmt wird, <xref:System.Windows.Input.Stylus.StylusSystemGesture> die das-Ereignis ausgelöst hat.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-667">The following example demonstrates how to determine the system gesture that raised the <xref:System.Windows.Input.Stylus.StylusSystemGesture> event.</span></span> <span data-ttu-id="3cd9f-668">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1` es einen aufgerufenen gibt und dass das <xref:System.Windows.Input.Stylus.StylusSystemGesture> Ereignis mit einem Ereignishandler verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-668">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1` and that the <xref:System.Windows.Input.Stylus.StylusSystemGesture> event is connected to an event handler.</span></span>  
  
 [!code-csharp[StylusSamples#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#12)]
 [!code-vb[StylusSamples#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusSystemGesture" />
      </Docs>
    </Member>
    <Member MemberName="StylusSystemGestureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusSystemGestureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusSystemGestureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusSystemGestureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusSystemGestureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusSystemGestureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusSystemGestureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusSystemGestureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-669">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-669">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusSystemGesture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StylusUp">
      <MemberSignature Language="C#" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Stylus.StylusUp" />
      <MemberSignature Language="VB.NET" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberSignature Language="F#" Value="see AddStylusUpHandler, and RemoveStylusUpHandler" Usage="see AddStylusUpHandler, and RemoveStylusUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="3cd9f-670">Tritt auf, wenn der Benutzer den Tablettstift vom Tablet PC anhebt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-670">Occurs when the user raises the stylus from the Tablet PC.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-671">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-671">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-672">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-672">implements attached events as routed events.</span></span> <span data-ttu-id="3cd9f-673">Ein angefügtes Ereignis ist im Grunde [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] genommen ein sprach Konzept, das verwendet wird, um auf Ereignisse zu verweisen, die für Objekte behandelt werden, die keine Ereignisse definieren.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-673">An attached event is, fundamentally, a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept used to reference events that are handled on objects that do not, themselves, define events.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]<span data-ttu-id="3cd9f-674">erweitert die Funktionen des angefügten Ereignisses weiter, sodass eine Route durchlaufen werden kann.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-674">further expands an attached event's capabilities, allowing it to traverse a route.</span></span> <span data-ttu-id="3cd9f-675">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. um Handler für ein Routing Ereignis im Code anzufügen, verwenden Sie eine bestimmte Methode zum Hinzufügen von \* Handlern.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-675">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, use a designated Add\*Handler method.</span></span> <span data-ttu-id="3cd9f-676">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3cd9f-676">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_StylusUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="3cd9f-677">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="3cd9f-677">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="3cd9f-678">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="3cd9f-678">Identifier field</span></span>|<xref:System.Windows.Input.Stylus.StylusUpEvent>|  
|<span data-ttu-id="3cd9f-679">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="3cd9f-679">Routing strategy</span></span>|<span data-ttu-id="3cd9f-680">Blasen</span><span class="sxs-lookup"><span data-stu-id="3cd9f-680">Bubbling</span></span>|  
|<span data-ttu-id="3cd9f-681">delegate</span><span class="sxs-lookup"><span data-stu-id="3cd9f-681">Delegate</span></span>|<xref:System.Windows.Input.StylusEventHandler>|  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-682">Im folgenden Beispiel wird veranschaulicht, wie die Koordinaten des Tablettstifts aufgezeichnet werden, auch wenn der Tablettstift die Begrenzungen <xref:System.Windows.Controls.TextBox>eines verlässt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-682">The following example demonstrates how to record the coordinates of the stylus, even if the stylus leaves the bounds of a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="3cd9f-683">In diesem Beispiel wird davon ausgegangen, <xref:System.Windows.Controls.TextBox> dass `textBox1`es einen aufgerufenen <xref:System.Windows.Input.Stylus.StylusDown>gibt und dass <xref:System.Windows.Input.Stylus.StylusMove> die Ereignisse, <xref:System.Windows.Input.Stylus.StylusUp>und mit Ereignis Handlern verbunden sind.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-683">This example assumes that there is a <xref:System.Windows.Controls.TextBox> called `textBox1`, and that the <xref:System.Windows.Input.Stylus.StylusDown>, <xref:System.Windows.Input.Stylus.StylusUp>, and <xref:System.Windows.Input.Stylus.StylusMove> events are connected to event handlers.</span></span>  
  
 [!code-csharp[StylusSamples#1](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window1.xaml.cs#1)]
 [!code-vb[StylusSamples#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window1.xaml.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.StylusUp" />
      </Docs>
    </Member>
    <Member MemberName="StylusUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent StylusUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent StylusUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Stylus.StylusUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StylusUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ StylusUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable StylusUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Stylus.StylusUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="3cd9f-684">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Stylus.StylusUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-684">Identifies the <see cref="E:System.Windows.Input.Stylus.StylusUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Stylus.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberSignature Language="F#" Value="static member Synchronize : unit -&gt; unit" Usage="System.Windows.Input.Stylus.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="3cd9f-685">Synchronisiert den Cursor und die Benutzeroberfläche.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-685">Synchronizes the cursor and the user interface.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3cd9f-686">Anwendungen müssen möglicherweise das Element bestimmen, auf dem sich der Cursor befindet.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-686">Applications may need to determine the element on which the cursor is located.</span></span> <span data-ttu-id="3cd9f-687">Wenn die Anwendung Animation verwendet, gibt <xref:System.Windows.Input.Stylus.DirectlyOver%2A> die Methode möglicherweise ein Element zurück, das aus dem Cursor heraus verschoben wurde.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-687">If the application uses animation, the <xref:System.Windows.Input.Stylus.DirectlyOver%2A> method might return an element that has moved out from under the cursor.</span></span> <span data-ttu-id="3cd9f-688">Wird <xref:System.Windows.Input.Stylus.Synchronize%2A> aufgerufen, um sicher <xref:System.Windows.Input.Stylus.DirectlyOver%2A> zustellen, dass das richtige-Element zurückgibt.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-688">Call <xref:System.Windows.Input.Stylus.Synchronize%2A> to be sure that <xref:System.Windows.Input.Stylus.DirectlyOver%2A> returns the proper element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3cd9f-689">Im folgenden Beispiel wird veranschaulicht, wie das Element, das sich unter dem Cursor befindet, angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="3cd9f-689">The following example demonstrates how to get the element that is under the cursor.</span></span> <span data-ttu-id="3cd9f-690">Durch <xref:System.Windows.Input.Stylus.Synchronize%2A> Aufrufen von <xref:System.Windows.Input.Stylus.DirectlyOver%2A> wird sichergestellt, dass das richtige-Element</span><span class="sxs-lookup"><span data-stu-id="3cd9f-690">Calling <xref:System.Windows.Input.Stylus.Synchronize%2A> ensures that <xref:System.Windows.Input.Stylus.DirectlyOver%2A> returns the correct element.</span></span>  
  
 [!code-csharp[StylusSamples#24](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#24)]
 [!code-vb[StylusSamples#24](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#24)]  
[!code-csharp[StylusSamples#25](~/samples/snippets/csharp/VS_Snippets_Wpf/StylusSamples/CSharp/Window2.xaml.cs#25)]
[!code-vb[StylusSamples#25](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StylusSamples/VisualBasic/Window2.xaml.vb#25)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
