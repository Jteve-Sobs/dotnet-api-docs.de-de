<Type Name="MouseWheelEventArgs" FullName="System.Windows.Input.MouseWheelEventArgs">
  <TypeSignature Language="C#" Value="public class MouseWheelEventArgs : System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit MouseWheelEventArgs extends System.Windows.Input.MouseEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.MouseWheelEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class MouseWheelEventArgs&#xA;Inherits MouseEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class MouseWheelEventArgs : System::Windows::Input::MouseEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.MouseEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6d504-101">Stellt Daten für eine Reihe von Ereignissen bereit, die Änderungen an den Deltawert eines Mausrads melden.</span><span class="sxs-lookup"><span data-stu-id="6d504-101">Provides data for various events that report changes to the mouse wheel delta value of a mouse device.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d504-102"><xref:System.Windows.Input.MouseWheelEventArgs> wird mit den folgenden Ereignissen verwendet werden:</span><span class="sxs-lookup"><span data-stu-id="6d504-102"><xref:System.Windows.Input.MouseWheelEventArgs> is used with the following events:</span></span>  
  
-   <xref:System.Windows.UIElement.MouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.MouseWheel?displayProperty=nameWithType>  
  
-   <span data-ttu-id="6d504-103"><xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> (angefügtes Ereignis)</span><span class="sxs-lookup"><span data-stu-id="6d504-103"><xref:System.Windows.Input.Mouse.MouseWheel?displayProperty=nameWithType> (attached event)</span></span>  
  
-   <xref:System.Windows.UIElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewMouseWheel?displayProperty=nameWithType>  
  
-   <span data-ttu-id="6d504-104"><xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> (angefügtes Ereignis)</span><span class="sxs-lookup"><span data-stu-id="6d504-104"><xref:System.Windows.Input.Mouse.PreviewMouseWheel?displayProperty=nameWithType> (attached event)</span></span>  
  
 <span data-ttu-id="6d504-105">Die <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> Eigenschaft ist positiv, wenn das Mausrad nach oben verschoben wird oder vorwärts (Weg von der Benutzer) oder negativ ist, wenn das Mausrad nach unten verschoben wird oder (bis der Benutzer).</span><span class="sxs-lookup"><span data-stu-id="6d504-105">The <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> property is positive if the mouse wheel is moved upward or forward (away from the user) or negative if the mouse wheel is moved downward or backward (toward the user).</span></span>  
  
 <span data-ttu-id="6d504-106">Dieses Ereignis wird auch für kleine Wheel mausbewegungen ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="6d504-106">This event is raised even for small mouse wheel movements.</span></span> <span data-ttu-id="6d504-107">Für einige Szenarien eignet sich die Handler zu implementieren, die Drosselung kleine Maus Wheel Deltas überprüfen, ob das Delta einen bestimmten Schwellenwert überschreitet.</span><span class="sxs-lookup"><span data-stu-id="6d504-107">For some scenarios, it is appropriate to implement handlers that throttle small mouse wheel deltas by checking whether the delta exceeds a certain threshold.</span></span> <span data-ttu-id="6d504-108">Andernfalls können Sie den Handler für Fälle aufrufen, bei denen die Maus Wheel Delta so klein war, dass Benutzeroberflächen, die an das Mausrad gebunden wird nicht aktualisiert werden würde.</span><span class="sxs-lookup"><span data-stu-id="6d504-108">Otherwise, you might invoke your handler for cases where the mouse wheel delta was so small that any UI that is tied to the mouse wheel movement would not update.</span></span> <span data-ttu-id="6d504-109">Genau wie Sie das Schwellenwert-Verhalten implementieren, in einem Ereignishandler und was dieses Schwellenwerts wird vollständig implementierungsspezifische.</span><span class="sxs-lookup"><span data-stu-id="6d504-109">Exactly how you implement the threshold behavior in a handler and what that threshold should be is entirely implementation-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d504-110">Im folgenden Beispiel wird eine <xref:System.Windows.Controls.TextBox> werden, wenn das Mausrad <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> positiv ist, und verschiebt die <xref:System.Windows.Controls.TextBox> unten If das Mausrad <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="6d504-110">The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative.</span></span> <span data-ttu-id="6d504-111">Die <xref:System.Windows.Controls.TextBox> angefügt ist eine <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="6d504-111">The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
    </remarks>
    <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MouseWheelEventArgs (System.Windows.Input.MouseDevice mouse, int timestamp, int delta);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.MouseDevice mouse, int32 timestamp, int32 delta) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.#ctor(System.Windows.Input.MouseDevice,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (mouse As MouseDevice, timestamp As Integer, delta As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MouseWheelEventArgs(System::Windows::Input::MouseDevice ^ mouse, int timestamp, int delta);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="mouse" Type="System.Windows.Input.MouseDevice" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="delta" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="mouse"><span data-ttu-id="6d504-112">Das diesem Ereignis zugeordnete Mausgerät.</span><span class="sxs-lookup"><span data-stu-id="6d504-112">The mouse device associated with this event.</span></span></param>
        <param name="timestamp"><span data-ttu-id="6d504-113">Die Zeit der Eingabe.</span><span class="sxs-lookup"><span data-stu-id="6d504-113">The time when the input occurred.</span></span></param>
        <param name="delta"><span data-ttu-id="6d504-114">Der Änderungswert des Rads.</span><span class="sxs-lookup"><span data-stu-id="6d504-114">The amount the wheel has changed.</span></span></param>
        <summary><span data-ttu-id="6d504-115">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.MouseWheelEventArgs" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="6d504-115">Initializes a new instance of the <see cref="T:System.Windows.Input.MouseWheelEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Delta">
      <MemberSignature Language="C#" Value="public int Delta { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Delta" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.MouseWheelEventArgs.Delta" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Delta As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Delta { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6d504-116">Ruft einen Wert ab, der den Änderungsgrad des Mausrads angibt.</span><span class="sxs-lookup"><span data-stu-id="6d504-116">Gets a value that indicates the amount that the mouse wheel has changed.</span></span></summary>
        <value><span data-ttu-id="6d504-117">Der Änderungswert des Rads.</span><span class="sxs-lookup"><span data-stu-id="6d504-117">The amount the wheel has changed.</span></span> <span data-ttu-id="6d504-118">Dieser Wert ist positiv, wenn das Mausrad nach oben gedreht wird (weg vom Benutzer), und negativ, wenn das Mausrad nach unten gedreht wird (zum Benutzer hin).</span><span class="sxs-lookup"><span data-stu-id="6d504-118">This value is positive if the mouse wheel is rotated in an upward direction (away from the user) or negative if the mouse wheel is rotated in a downward direction (toward the user).</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d504-119">Die effektive oberen und unteren Bereiche dieses Werts stammen möglicherweise aus Gerät Implementierungen oder andere Aufrufer, die das Ereignis ausgelöst hat, und sind daher nicht definiert.</span><span class="sxs-lookup"><span data-stu-id="6d504-119">The effective upper and lower ranges of this value potentially come from device implementations or other callers that raised the event, and are therefore not defined.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6d504-120">Im folgenden Beispiel wird eine <xref:System.Windows.Controls.TextBox> werden, wenn das Mausrad <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> positiv ist, und verschiebt die <xref:System.Windows.Controls.TextBox> unten If das Mausrad <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> ist ein negativer Wert.</span><span class="sxs-lookup"><span data-stu-id="6d504-120">The following example moves a <xref:System.Windows.Controls.TextBox> up if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is positive and moves the <xref:System.Windows.Controls.TextBox> down if the mouse wheel <xref:System.Windows.Input.MouseWheelEventArgs.Delta%2A> is negative.</span></span> <span data-ttu-id="6d504-121">Die <xref:System.Windows.Controls.TextBox> angefügt ist eine <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="6d504-121">The <xref:System.Windows.Controls.TextBox> is attached to a <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 [!code-csharp[mousesnippetsample#MouseWheelDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseSnippetSample/CSharp/Window1.xaml.cs#mousewheeldelta)]
 [!code-vb[mousesnippetsample#MouseWheelDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseSnippetSample/visualbasic/window1.xaml.vb#mousewheeldelta)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.MouseWheelEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler"><span data-ttu-id="6d504-122">Der generische Handler, der auf typspezifische Weise aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="6d504-122">The generic handler to call in a type-specific way.</span></span></param>
        <param name="genericTarget"><span data-ttu-id="6d504-123">Das Ziel, für das der Handler aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="6d504-123">The target to call the handler on.</span></span></param>
        <summary><span data-ttu-id="6d504-124">Ruft Ereignishandler auf typspezifische Weise auf, wodurch sich die Effizienz des Ereignissystems erhöhen kann.</span><span class="sxs-lookup"><span data-stu-id="6d504-124">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6d504-125">Diese Implementierung wandelt den generischen Handler als eine <xref:System.Windows.Input.MouseWheelEventHandler> und ruft ihn dann auf.</span><span class="sxs-lookup"><span data-stu-id="6d504-125">This implementation casts the generic handler as a <xref:System.Windows.Input.MouseWheelEventHandler> and then invokes it.</span></span> <span data-ttu-id="6d504-126">Ausführliche Informationen zu diesem Implementierungsmuster und die Gründe dafür, finden Sie unter <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> und [Ereignisübersicht weitergeleitet](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6d504-126">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>