<Type Name="NavigationCommands" FullName="System.Windows.Input.NavigationCommands">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1a449f3a77aca05651ea5d6b720c6b7c906c252b" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37504487" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class NavigationCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit NavigationCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.NavigationCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class NavigationCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type NavigationCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt einen Standardsatz von navigationsbezogenen Befehlen bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Input.NavigationCommands> Klasse stellt einen Standardsatz von navigationsbezogenen Befehlen, einschließlich Browser- und Navigation.  
  
 Weitere Informationen zu Befehlen und Befehle, finden Sie unter [Befehlsübersicht](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Documents.EditingCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
  </Docs>
  <Members>
    <Member MemberName="BrowseBack">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BrowseBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BrowseBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.BrowseBack" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BrowseBack As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ BrowseBack { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BrowseBack : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.BrowseBack" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Browse Back" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> ALT + nach-links </description></item><item><term> UI Text </term><description> zurück  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass zurück zur vorherigen Seite im Journal navigieren.  
  
 <xref:System.Windows.Controls.Frame> und <xref:System.Windows.Navigation.NavigationWindow> implementieren die Unterstützung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.BrowseBack%2A>, obwohl Sie nicht für die Verwendung erforderlich sind; in vielen Fällen ist die Implementierung als Reaktion auf dieses Befehls die Verantwortung für die Anwendungs-Writer.  
  
<a name="xamlAttributeUsage_BrowseBack"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.BrowseBack"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit <xref:System.Windows.Input.NavigationCommands.BrowseBack%2A> in Verbindung mit einem <xref:System.Windows.Controls.Frame>. Die <xref:System.Windows.Controls.Frame> stellt eine Implementierung, die auf reagiert die <xref:System.Windows.Input.NavigationCommands.BrowseBack%2A> Befehl navigieren die <xref:System.Windows.Controls.Frame> zu sichern, wenn es die Journaleinträge im Rückwärtsstapel gibt.  
  
 [!code-xaml[NavigationCommandsSnippets#BrowseBackMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseBack.xaml#browsebackmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#BrowseBackMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseBack.xaml#browsebackmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#BrowseBackMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseBack.xaml#browsebackmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#BrowseBackMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseBack.xaml#browsebackmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="BrowseForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BrowseForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BrowseForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.BrowseForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BrowseForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ BrowseForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BrowseForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.BrowseForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Browse Forward" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> ALT + nach-rechts </description></item><item><term> UI Text </term><description> weiterleiten  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass die nächste Seite in das Journal vorwärts zu navigieren.  
  
 <xref:System.Windows.Controls.Frame> und <xref:System.Windows.Navigation.NavigationWindow> implementieren die Unterstützung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.BrowseForward%2A> Befehl, obwohl Sie nicht für die Verwendung erforderlich sind; in vielen Fällen ist die Implementierung als Reaktion auf dieses Befehls die Verantwortung für die Anwendungs-Writer.  
  
<a name="xamlAttributeUsage_BrowseForward"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.BrowseForward"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit <xref:System.Windows.Input.NavigationCommands.BrowseForward%2A> in Verbindung mit einem <xref:System.Windows.Controls.Frame>. Die <xref:System.Windows.Controls.Frame> stellt eine Implementierung, die auf reagiert die <xref:System.Windows.Input.NavigationCommands.BrowseForward%2A> Befehl durch Navigieren die <xref:System.Windows.Controls.Frame> weitergeleitet wird, wenn Journaleinträge auf der Vorwärtsstapel vorhanden sind.  
  
 [!code-xaml[NavigationCommandsSnippets#BrowseForwardMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseForward.xaml#browseforwardmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#BrowseForwardMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseForward.xaml#browseforwardmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#BrowseForwardMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseForward.xaml#browseforwardmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#BrowseForwardMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseForward.xaml#browseforwardmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="BrowseHome">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BrowseHome { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BrowseHome" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.BrowseHome" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BrowseHome As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ BrowseHome { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHome : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.BrowseHome" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Browse Home" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> ALT + POS1 </description></item><item><term> UI Text </term><description> Startseite  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass Startseite zu navigieren.  
  
 Es ist keine Implementierung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.BrowseHome%2A> Befehl auf einem gegebenen [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] Klasse. Daher müssen Sie eine geeignete Implementierung, bereitstellen, die im Beispiel gezeigt wird.  
  
<a name="xamlAttributeUsage_BrowseHome"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.BrowseHome"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Code implementieren, auf die reagiert die <xref:System.Windows.Input.NavigationCommands.BrowseHome%2A> -Befehls in Verbindung mit einem <xref:System.Windows.Controls.Frame>.  
  
 [!code-xaml[NavigationCommandsSnippets#BrowseHomeMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml#browsehomemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#BrowseHomeMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml#browsehomemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#BrowseHomeMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml#browsehomemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#BrowseHomeMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml#browsehomemarkup4)]  
  
 [!code-csharp[NavigationCommandsSnippets#BrowseHomeCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseHome.xaml.cs#browsehomecodebehind)]
 [!code-vb[NavigationCommandsSnippets#BrowseHomeCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationCommandsSnippets/visualbasic/browsehome.xaml.vb#browsehomecodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="BrowseStop">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand BrowseStop { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand BrowseStop" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.BrowseStop" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property BrowseStop As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ BrowseStop { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BrowseStop : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.BrowseStop" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Browse Stop" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> ALT-Taste + ESC </description></item><item><term> Benutzeroberflächentext  </term><description> Beenden  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass das Laden des Browsers zu beenden.  
  
 <xref:System.Windows.Controls.Frame> und <xref:System.Windows.Navigation.NavigationWindow> implementieren die Unterstützung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.BrowseStop%2A> Befehl, obwohl Sie nicht für die Verwendung erforderlich sind; in vielen Fällen ist die Implementierung als Reaktion auf dieses Befehls die Verantwortung für die Anwendungs-Writer.  
  
<a name="xamlAttributeUsage_BrowseStop"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.BrowseStop"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit <xref:System.Windows.Input.NavigationCommands.BrowseStop%2A> in Verbindung mit einem <xref:System.Windows.Controls.Frame>. Die <xref:System.Windows.Controls.Frame> stellt eine Implementierung, die auf reagiert die <xref:System.Windows.Input.NavigationCommands.BrowseStop%2A> Befehl beendet die aktuelle <xref:System.Windows.Controls.Frame> Navigation.  
  
 [!code-xaml[NavigationCommandsSnippets#BrowseStopMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseStop.xaml#browsestopmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#BrowseStopMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseStop.xaml#browsestopmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#BrowseStopMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseStop.xaml#browsestopmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#BrowseStopMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/BrowseStop.xaml#browsestopmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseZoom">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseZoom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseZoom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.DecreaseZoom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseZoom As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseZoom { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseZoom : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.DecreaseZoom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Decrease Zoom" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> n/v </description></item><item><term> Benutzeroberflächentext  </term><description> Zoom verringern  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass für den Zoomfaktor zu verringern.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, und <xref:System.Windows.Controls.FlowDocumentPageViewer> implementieren die Unterstützung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.DecreaseZoom%2A> Befehl, obwohl Sie nicht für die Verwendung erforderlich sind; in vielen Fällen ist die Implementierung als Reaktion auf dieses Befehls die Verantwortung der Anwendung Writer.  
  
<a name="xamlAttributeUsage_DecreaseZoom"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.DecreaseZoom"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit <xref:System.Windows.Input.NavigationCommands.DecreaseZoom%2A> in Verbindung mit einem <xref:System.Windows.Controls.FlowDocumentPageViewer>. Die <xref:System.Windows.Controls.FlowDocumentPageViewer> stellt eine Implementierung, die auf reagiert die <xref:System.Windows.Input.NavigationCommands.DecreaseZoom%2A> -Befehl verringert den Zoomprozentwert.  
  
 [!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup1)]  
[!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup2)]  
[!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup3)]  
[!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup4)]  
[!code-xaml[NavigationCommandsSnippets#DecreaseZoomMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/DecreaseZoom.xaml#decreasezoommarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Favorites">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Favorites { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Favorites" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.Favorites" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Favorites As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Favorites { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Favorites : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.Favorites" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Favorites" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> STRG + I </description></item><item><term> Benutzeroberflächentext  </term><description> Favoriten  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt die Absicht an, zu verwalten, und navigieren zu Favoriten an.  
  
 Es ist keine Implementierung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.Favorites%2A> Befehl auf einem gegebenen [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] Klasse. Daher müssen Sie eine geeignete Implementierung, bereitstellen, die im Beispiel gezeigt wird.  
  
<a name="xamlAttributeUsage_Favorites"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.Favorites"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Code implementieren, auf die reagiert die <xref:System.Windows.Input.NavigationCommands.Favorites%2A> -Befehls in Verbindung mit einem <xref:System.Windows.Controls.Frame>.  
  
 [!code-xaml[NavigationCommandsSnippets#FavoritesMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Favorites.xaml#favoritesmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#FavoritesMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Favorites.xaml#favoritesmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#FavoritesMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Favorites.xaml#favoritesmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#FavoritesMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Favorites.xaml#favoritesmarkup4)]  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="FirstPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand FirstPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand FirstPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.FirstPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FirstPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ FirstPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FirstPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.FirstPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="First Page" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> n/v </description></item><item><term> Benutzeroberflächentext  </term><description> Erste Seite  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass auf die erste Seite zu wechseln.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, und <xref:System.Windows.Controls.FlowDocumentPageViewer> implementieren die Unterstützung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.FirstPage%2A> Befehl, obwohl Sie nicht für die Verwendung erforderlich sind; in vielen Fällen ist die Implementierung als Reaktion auf dieses Befehls die Verantwortung der Anwendung Writer.  
  
<a name="xamlAttributeUsage_FirstPage"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.FirstPage"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit <xref:System.Windows.Input.NavigationCommands.FirstPage%2A> in Verbindung mit einem <xref:System.Windows.Controls.FlowDocumentPageViewer>. Die <xref:System.Windows.Controls.FlowDocumentPageViewer> stellt eine Implementierung, die auf reagiert die <xref:System.Windows.Input.NavigationCommands.FirstPage%2A> Befehl, indem Sie auf der ersten Seite.  
  
 [!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#FirstPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/FirstPage.xaml#firstpagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="GoToPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand GoToPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand GoToPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.GoToPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property GoToPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ GoToPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GoToPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.GoToPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Go To Page" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> n/v </description></item><item><term> Benutzeroberflächentext  </term><description> Jdi NA Stranu  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass für den Zoomfaktor zu ändern.  
  
 <xref:System.Windows.Controls.DocumentViewer> und <xref:System.Windows.Controls.FlowDocumentPageViewer> implementieren die Unterstützung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.GoToPage%2A> Befehl, obwohl Sie nicht für die Verwendung erforderlich sind; in vielen Fällen ist die Implementierung als Reaktion auf dieses Befehls die Verantwortung für die Anwendungs-Writer.  
  
<a name="xamlAttributeUsage_GoToPage"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.GoToPage"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Windows.Input.NavigationCommands.GoToPage%2A> -Befehls in Verbindung mit einem <xref:System.Windows.Controls.FlowDocumentPageViewer>. Die <xref:System.Windows.Controls.FlowDocumentPageViewer> stellt eine Implementierung, die auf reagiert die <xref:System.Windows.Input.NavigationCommands.GoToPage%2A> Befehl, indem Sie auf der Seite, die durch den Textwert des angegebenen ein <xref:System.Windows.Controls.TextBox> Steuerelement.  
  
 [!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#GoToPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/GoToPage.xaml#gotopagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseZoom">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseZoom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseZoom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.IncreaseZoom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseZoom As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseZoom { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseZoom : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.IncreaseZoom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Increase Zoom" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> n/v </description></item><item><term> Benutzeroberflächentext  </term><description> Zoom verstärken  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass für den Zoomfaktor zu erhöhen.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, und <xref:System.Windows.Controls.FlowDocumentPageViewer> implementieren die Unterstützung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.IncreaseZoom%2A> Befehl, obwohl Sie nicht für die Verwendung erforderlich sind; in vielen Fällen ist die Implementierung als Reaktion auf dieses Befehls die Verantwortung der Anwendung Writer.  
  
<a name="xamlAttributeUsage_IncreaseZoom"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.IncreaseZoom"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit <xref:System.Windows.Input.NavigationCommands.IncreaseZoom%2A> in Verbindung mit einem <xref:System.Windows.Controls.FlowDocumentPageViewer>. Die <xref:System.Windows.Controls.FlowDocumentPageViewer> stellt eine Implementierung, die auf reagiert die <xref:System.Windows.Input.NavigationCommands.IncreaseZoom%2A> -Befehl verringert den Zoomprozentwert.  
  
 [!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup1)]  
[!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup2)]  
[!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup3)]  
[!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup4)]  
[!code-xaml[NavigationCommandsSnippets#IncreaseZoomMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/IncreaseZoom.xaml#increasezoommarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="LastPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand LastPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand LastPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.LastPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LastPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ LastPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LastPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.LastPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Last Page" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> n/v </description></item><item><term> Benutzeroberflächentext  </term><description> Letzte Seite  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass auf die letzte Seite zu wechseln.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, und <xref:System.Windows.Controls.FlowDocumentPageViewer> implementieren die Unterstützung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.LastPage%2A> Befehl, obwohl Sie nicht für die Verwendung erforderlich sind; in vielen Fällen ist die Implementierung als Reaktion auf dieses Befehls die Verantwortung der Anwendung Writer.  
  
<a name="xamlAttributeUsage_LastPage"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.LastPage"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit <xref:System.Windows.Input.NavigationCommands.LastPage%2A> in Verbindung mit einem <xref:System.Windows.Controls.FlowDocumentPageViewer>. Die <xref:System.Windows.Controls.FlowDocumentPageViewer> stellt eine Implementierung, die auf reagiert die <xref:System.Windows.Input.NavigationCommands.LastPage%2A> Befehl durch Aufrufen der letzten Seite.  
  
 [!code-xaml[NavigationCommandsSnippets#LastPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#LastPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#LastPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#LastPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#LastPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/LastPage.xaml#lastpagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="NavigateJournal">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NavigateJournal { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NavigateJournal" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.NavigateJournal" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NavigateJournal As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ NavigateJournal { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NavigateJournal : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.NavigateJournal" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Navigate Journal" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> n/v </description></item><item><term> Benutzeroberflächentext  </term><description> Journalnavigation  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass im Journal navigieren.  
  
 <xref:System.Windows.Controls.Frame> und <xref:System.Windows.Navigation.NavigationWindow> implementieren die Unterstützung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.NavigateJournal%2A> Befehl, obwohl Sie nicht für die Verwendung erforderlich sind; in vielen Fällen ist die Implementierung als Reaktion auf dieses Befehls die Verantwortung für die Anwendungs-Writer.  
  
<a name="xamlAttributeUsage_NavigateJournal"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.NavigateJournal"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit <xref:System.Windows.Input.NavigationCommands.NavigateJournal%2A> in Verbindung mit einem <xref:System.Windows.Controls.Frame>. Die <xref:System.Windows.Controls.Frame> stellt eine Implementierung, die auf reagiert die <xref:System.Windows.Input.NavigationCommands.NavigateJournal%2A> durch Navigieren zu der angegebenen Journaleintrag für die vorwärts oder zurück-Stapel der Befehl die <xref:System.Windows.Controls.Frame>. Die Journaleinträge werden bereitgestellt, durch die <xref:System.Windows.Navigation.JournalEntryUnifiedViewConverter> der obersten Ebene `Navigate Journal` <xref:System.Windows.Controls.MenuItem>. Jedem Journaleintrag gebunden ist, auf ein untergeordnetes Element <xref:System.Windows.Controls.MenuItem> , verwendet der <xref:System.Windows.Input.NavigationCommands.NavigateJournal%2A> Befehl.  
  
 [!code-xaml[NavigationCommandsSnippets#NavigateJournalMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NavigateJournal.xaml#navigatejournalmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#NavigateJournalMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NavigateJournal.xaml#navigatejournalmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#NavigateJournalMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NavigateJournal.xaml#navigatejournalmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#NavigateJournalMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NavigateJournal.xaml#navigatejournalmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="NextPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand NextPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand NextPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.NextPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property NextPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ NextPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NextPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.NextPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Next Page" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> n/v </description></item><item><term> Benutzeroberflächentext  </term><description> Nächste Seite  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass mit der nächsten Seite wechseln.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, und <xref:System.Windows.Controls.FlowDocumentPageViewer> implementieren die Unterstützung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.NextPage%2A> Befehl, obwohl Sie nicht für die Verwendung erforderlich sind; in vielen Fällen ist die Implementierung als Reaktion auf dieses Befehls die Verantwortung der Anwendung Writer.  
  
<a name="xamlAttributeUsage_NextPage"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.NextPage"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit <xref:System.Windows.Input.NavigationCommands.NextPage%2A> in Verbindung mit einem <xref:System.Windows.Controls.FlowDocumentPageViewer>. Die <xref:System.Windows.Controls.FlowDocumentPageViewer> stellt eine Implementierung, die auf reagiert die <xref:System.Windows.Input.NavigationCommands.NextPage%2A> Befehl, indem Sie auf der nächsten Seite.  
  
 [!code-xaml[NavigationCommandsSnippets#NextPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#NextPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#NextPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#NextPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#NextPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/NextPage.xaml#nextpagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="PreviousPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand PreviousPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand PreviousPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.PreviousPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PreviousPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ PreviousPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PreviousPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.PreviousPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Previous Page" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> n/v </description></item><item><term> Benutzeroberflächentext  </term><description> Vorherige Seite  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass zur vorherigen Seite wechseln.  
  
 <xref:System.Windows.Controls.DocumentViewer>, <xref:System.Windows.Controls.FlowDocumentReader>, <xref:System.Windows.Controls.FlowDocumentScrollViewer>, und <xref:System.Windows.Controls.FlowDocumentPageViewer> implementieren die Unterstützung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.PreviousPage%2A> Befehl, obwohl Sie nicht für die Verwendung erforderlich sind; in vielen Fällen ist die Implementierung als Reaktion auf dieses Befehls die Verantwortung der Anwendung Writer.  
  
<a name="xamlAttributeUsage_PreviousPage"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.PreviousPage"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit <xref:System.Windows.Input.NavigationCommands.PreviousPage%2A> in Verbindung mit einem <xref:System.Windows.Controls.FlowDocumentPageViewer>. Die <xref:System.Windows.Controls.FlowDocumentPageViewer> stellt eine Implementierung, die auf reagiert die <xref:System.Windows.Input.NavigationCommands.PreviousPage%2A> Befehl, indem Sie auf der vorherigen Seite.  
  
 [!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup1)]  
[!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup2)]  
[!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup3)]  
[!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup4)]  
[!code-xaml[NavigationCommandsSnippets#PreviousPageMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/PreviousPage.xaml#previouspagemarkup5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Refresh { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Refresh" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Refresh As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Refresh { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Refresh : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.Refresh" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Refresh" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> F5 </description></item><item><term> Benutzeroberflächentext </term><description> Aktualisieren  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass die aktuelle Seite zu aktualisieren.  
  
 <xref:System.Windows.Controls.Frame> und <xref:System.Windows.Navigation.NavigationWindow> implementieren die Unterstützung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.Refresh%2A> Befehl, obwohl Sie nicht für die Verwendung erforderlich sind; in vielen Fällen ist die Implementierung als Reaktion auf dieses Befehls die Verantwortung für die Anwendungs-Writer.  
  
<a name="xamlAttributeUsage_Refresh"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.Refresh"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit <xref:System.Windows.Input.NavigationCommands.Refresh%2A> in Verbindung mit einem <xref:System.Windows.Controls.Frame>. Die <xref:System.Windows.Controls.Frame> stellt eine Implementierung, die auf reagiert die <xref:System.Windows.Input.NavigationCommands.Refresh%2A> Befehl durch erneutes Laden der aktuellen <xref:System.Windows.Controls.Frame> Inhalt.  
  
 [!code-xaml[NavigationCommandsSnippets#RefreshMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Refresh.xaml#refreshmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#RefreshMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Refresh.xaml#refreshmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#RefreshMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Refresh.xaml#refreshmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#RefreshMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Refresh.xaml#refreshmarkup4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Search">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Search { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Search" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.Search" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Search As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Search { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Search : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.Search" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Search" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> F3 </description></item><item><term> Benutzeroberflächentext </term><description> Suchen  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass suchen.  
  
 Es ist keine Implementierung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.Search%2A> Befehl auf einem gegebenen [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] Klasse. Daher müssen Sie eine geeignete Implementierung, bereitstellen, die im Beispiel gezeigt wird.  
  
<a name="xamlAttributeUsage_Search"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.Search"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Code implementieren, auf die reagiert die <xref:System.Windows.Input.NavigationCommands.Search%2A> -Befehls in Verbindung mit einem <xref:System.Windows.Controls.FlowDocumentPageViewer>.  
  
 [!code-xaml[NavigationCommandsSnippets#SearchMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup1)]  
[!code-xaml[NavigationCommandsSnippets#SearchMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup2)]  
[!code-xaml[NavigationCommandsSnippets#SearchMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup3)]  
[!code-xaml[NavigationCommandsSnippets#SearchMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup4)]  
[!code-xaml[NavigationCommandsSnippets#SearchMARKUP5](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml#searchmarkup5)]  
  
 [!code-csharp[NavigationCommandsSnippets#SearchCODEBEHIND](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Search.xaml.cs#searchcodebehind)]
 [!code-vb[NavigationCommandsSnippets#SearchCODEBEHIND](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationCommandsSnippets/visualbasic/search.xaml.vb#searchcodebehind)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
    <Member MemberName="Zoom">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Zoom { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Zoom" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.NavigationCommands.Zoom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Zoom As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Zoom { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Zoom : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Input.NavigationCommands.Zoom" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Wert ab, der den <see langword="Zoom" />-Befehl darstellt.</summary>
        <value>Die weitergeleitete [! Include[TLA2#tla_ui](~/Includes/tla2sharptla-UI-MD.MD)]-Befehl.  
  
 <list type="table"><listheader><term> Standardwerte </term><description></description></listheader><item><term> Schlüssel Geste </term><description> n/v </description></item><item><term> Benutzeroberflächentext  </term><description> Zoom  </description></item></list></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieser Befehl gibt an, dass die Zoomstufe festzulegen.  
  
 Es ist keine Implementierung für die Reaktion auf die <xref:System.Windows.Input.NavigationCommands.Zoom%2A> Befehl auf einem gegebenen [!INCLUDE[TLA2#tla_wpf](~/includes/tla2sharptla-wpf-md.md)] Klasse. Daher müssen Sie eine geeignete Implementierung, bereitstellen, die im Beispiel gezeigt wird.  
  
<a name="xamlAttributeUsage_Zoom"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object property="NavigationCommands.Zoom"/>  
```  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie Code implementieren, auf die reagiert die <xref:System.Windows.Input.NavigationCommands.Zoom%2A> -Befehls in Verbindung mit einem <xref:System.Windows.Controls.FlowDocumentPageViewer>.  
  
 [!code-xaml[NavigationCommandsSnippets#ZoomMARKUP1](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Zoom.xaml#zoommarkup1)]  
[!code-xaml[NavigationCommandsSnippets#ZoomMARKUP2](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Zoom.xaml#zoommarkup2)]  
[!code-xaml[NavigationCommandsSnippets#ZoomMARKUP3](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Zoom.xaml#zoommarkup3)]  
[!code-xaml[NavigationCommandsSnippets#ZoomMARKUP4](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationCommandsSnippets/CSharp/Zoom.xaml#zoommarkup4)]  
  
  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MediaCommands" />
        <altmember cref="T:System.Windows.Input.ApplicationCommands" />
        <altmember cref="T:System.Windows.Input.ComponentCommands" />
        <altmember cref="T:System.Windows.Documents.EditingCommands" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.RoutedUICommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.CommandManager" />
      </Docs>
    </Member>
  </Members>
</Type>