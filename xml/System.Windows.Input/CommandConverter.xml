<Type Name="CommandConverter" FullName="System.Windows.Input.CommandConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d6ab1e4429928949e5c0b38094efc6293e13083f" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82497501" /></Metadata><TypeSignature Language="C#" Value="public sealed class CommandConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CommandConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CommandConverter" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CommandConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandConverter sealed : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type CommandConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="90d57-101">Konvertiert ein <see cref="T:System.Windows.Input.ICommand" />-Objekt in andere bzw. aus anderen Typen.</span><span class="sxs-lookup"><span data-stu-id="90d57-101">Converts an <see cref="T:System.Windows.Input.ICommand" /> object to and from other types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90d57-102">Die <xref:System.Windows.Input.CommandConverter>-Klasse konvertiert nur eine Instanz von <xref:System.Windows.Input.ICommand> in und aus einem <xref:System.String>-Objekt.</span><span class="sxs-lookup"><span data-stu-id="90d57-102">The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>.</span></span>  
 
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="90d57-103">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.CommandConverter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="90d57-103">Initializes a new instance of the <see cref="T:System.Windows.Input.CommandConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="commandConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="90d57-104">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="90d57-104">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="sourceType"><span data-ttu-id="90d57-105">Der Typ, der zur Konvertierung ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="90d57-105">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="90d57-106">Bestimmt, ob ein Objekt des angegebenen Typs im angegebenen Kontext in eine Instanz von <see cref="T:System.Windows.Input.ICommand" /> konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="90d57-106">Determines whether an object of the specified type can be converted to an instance of <see cref="T:System.Windows.Input.ICommand" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="90d57-107"><see langword="true" /> wenn <paramref name="sourceType" /> vom Typ <see cref="T:System.String" />, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90d57-107"><see langword="true" /> if <paramref name="sourceType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="commandConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="90d57-108">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="90d57-108">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="destinationType"><span data-ttu-id="90d57-109">Der Typ, der zur Konvertierung ausgewertet wird.</span><span class="sxs-lookup"><span data-stu-id="90d57-109">The type being evaluated for conversion.</span></span></param>
        <summary><span data-ttu-id="90d57-110">Bestimmt, ob eine Instanz von <see cref="T:System.Windows.Input.ICommand" /> im angegebenen Kontext in den angegebenen Typ konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="90d57-110">Determines whether an instance of <see cref="T:System.Windows.Input.ICommand" /> can be converted to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="90d57-111"><see langword="true" /> wenn <paramref name="destinationType" /> vom Typ <see cref="T:System.String" />, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="90d57-111"><see langword="true" /> if <paramref name="destinationType" /> is of type <see cref="T:System.String" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, source As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ source);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="commandConverter.ConvertFrom (context, culture, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="90d57-112">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="90d57-112">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="90d57-113">Kulturspezifische Informationen.</span><span class="sxs-lookup"><span data-stu-id="90d57-113">Culture specific information.</span></span></param>
        <param name="source"><span data-ttu-id="90d57-114">Das zu konvertierende Objekt.</span><span class="sxs-lookup"><span data-stu-id="90d57-114">The object to convert.</span></span></param>
        <summary><span data-ttu-id="90d57-115">Versucht, das angegebene Objekt im angegebenen Kontext in einen <see cref="T:System.Windows.Input.ICommand" /> zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="90d57-115">Attempts to convert the specified object to an <see cref="T:System.Windows.Input.ICommand" />, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="90d57-116">Das konvertierte Objekt oder <see langword="null" />, wenn <paramref name="source" /> eine leere Zeichenfolge ist.</span><span class="sxs-lookup"><span data-stu-id="90d57-116">The converted object, or <see langword="null" /> if <paramref name="source" /> is an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90d57-117">Die <xref:System.Windows.Input.CommandConverter>-Klasse konvertiert nur eine Instanz von <xref:System.Windows.Input.ICommand> in und aus einem <xref:System.String>-Objekt.</span><span class="sxs-lookup"><span data-stu-id="90d57-117">The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>.</span></span> <span data-ttu-id="90d57-118">Außerdem muss es sich bei dem Befehl um einen vorhandenen Befehl oder um eine öffentliche statische Eigenschaft oder ein öffentliches statisches Feld handeln.</span><span class="sxs-lookup"><span data-stu-id="90d57-118">Also, the command must be an existing command, or must be assigned to a public static property or public static field.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="90d57-119"><paramref name="source" /> kann nicht konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="90d57-119"><paramref name="source" /> cannot be converted.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.CommandConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="commandConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="90d57-120">Ein Formatkontext, der Informationen über die Umgebung enthält, in der dieser Konverter aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="90d57-120">A format context that provides information about the environment from which this converter is being invoked.</span></span></param>
        <param name="culture"><span data-ttu-id="90d57-121">Kulturspezifische Informationen.</span><span class="sxs-lookup"><span data-stu-id="90d57-121">Culture specific information.</span></span></param>
        <param name="value"><span data-ttu-id="90d57-122">Das zu konvertierende Objekt.</span><span class="sxs-lookup"><span data-stu-id="90d57-122">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="90d57-123">Der Typ, in den das Objekt konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="90d57-123">The type to convert the object to.</span></span></param>
        <summary><span data-ttu-id="90d57-124">Versucht, einen <see cref="T:System.Windows.Input.ICommand" /> im angegebenen Kontext in den angegebenen Typ zu konvertieren.</span><span class="sxs-lookup"><span data-stu-id="90d57-124">Attempts to convert an <see cref="T:System.Windows.Input.ICommand" /> to the specified type, using the specified context.</span></span></summary>
        <returns><span data-ttu-id="90d57-125">Das konvertierte Objekt oder eine leere Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="90d57-125">The converted object, or an empty string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90d57-126">Die <xref:System.Windows.Input.CommandConverter>-Klasse konvertiert nur eine Instanz von <xref:System.Windows.Input.ICommand> in und aus einem <xref:System.String>-Objekt.</span><span class="sxs-lookup"><span data-stu-id="90d57-126">The <xref:System.Windows.Input.CommandConverter> class only converts an instance of <xref:System.Windows.Input.ICommand> to and from a <xref:System.String>.</span></span> <span data-ttu-id="90d57-127">Es können nur vorhandene (Nichtbenutzer definierte) Befehle zurückgegeben werden.</span><span class="sxs-lookup"><span data-stu-id="90d57-127">Only existing (noncustom) commands can be returned.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="90d57-128"><paramref name="destinationType" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="90d57-128"><paramref name="destinationType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="90d57-129"><paramref name="value" /> kann nicht konvertiert werden.</span><span class="sxs-lookup"><span data-stu-id="90d57-129"><paramref name="value" /> cannot be converted.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
