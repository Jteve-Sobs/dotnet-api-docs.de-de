<Type Name="InputBinding" FullName="System.Windows.Input.InputBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="37250b1651d5943ef4919b9ad6f4ea73ea95ee5d" /><Meta Name="ms.sourcegitcommit" Value="2767b5903996fbd7e2b81eda1114dfc9d0d9db63" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/02/2019" /><Meta Name="ms.locfileid" Value="65004764" /></Metadata><TypeSignature Language="C#" Value="public class InputBinding : System.Windows.Freezable, System.Windows.Input.ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit InputBinding extends System.Windows.Freezable implements class System.Windows.Input.ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.InputBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class InputBinding&#xA;Inherits Freezable&#xA;Implements ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class InputBinding : System::Windows::Freezable, System::Windows::Input::ICommandSource" />
  <TypeSignature Language="F#" Value="type InputBinding = class&#xA;    inherit Freezable&#xA;    interface ICommandSource" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Freezable</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-3.0">System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.ICommandSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="52fd1-101">Stellt eine Bindung zwischen einer <see cref="T:System.Windows.Input.InputGesture" /> und einen Befehl.</span><span class="sxs-lookup"><span data-stu-id="52fd1-101">Represents a binding between an <see cref="T:System.Windows.Input.InputGesture" /> and a command.</span></span> <span data-ttu-id="52fd1-102">Der Befehl ist potenziell ein <see cref="T:System.Windows.Input.RoutedCommand" />.</span><span class="sxs-lookup"><span data-stu-id="52fd1-102">The command is potentially a <see cref="T:System.Windows.Input.RoutedCommand" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fd1-103">Sie können angeben, dass die Eingabe des Benutzers einen Befehl aufruft, durch das Erstellen einer <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-103">You can specify that user input invokes a command by creating a <xref:System.Windows.Input.InputBinding>.</span></span> <span data-ttu-id="52fd1-104">Wenn der Benutzer die angegebene Eingabe ausführt der <xref:System.Windows.Input.ICommand> , festgelegt ist, um die <xref:System.Windows.Input.InputBinding.Command%2A> Eigenschaft ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="52fd1-104">When the user performs the specified input, the <xref:System.Windows.Input.ICommand> that is set to the <xref:System.Windows.Input.InputBinding.Command%2A> property is executed.</span></span>  
  
 <span data-ttu-id="52fd1-105">Sie können angeben, die <xref:System.Windows.Input.InputBinding> Ruft einen Befehl aus, die für ein Objekt definiert ist, durch das Erstellen einer Bindung auf den <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, und <xref:System.Windows.Input.InputBinding.CommandTarget%2A> Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="52fd1-105">You can specify that the <xref:System.Windows.Input.InputBinding> invokes a command that is defined on an object by creating a binding on the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties.</span></span> <span data-ttu-id="52fd1-106">Dadurch können Sie definieren einen benutzerdefinierten Befehl und Benutzereingaben zuordnen.</span><span class="sxs-lookup"><span data-stu-id="52fd1-106">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="52fd1-107">Weitere Informationen finden Sie in das zweite Beispiel im Abschnitt "Beispiele".</span><span class="sxs-lookup"><span data-stu-id="52fd1-107">For more information, see the second example in the Examples section.</span></span>  
  
 <span data-ttu-id="52fd1-108">Ein <xref:System.Windows.Input.InputBinding> kann auf ein bestimmtes Objekt oder auf Klassenebene definiert werden, durch die Registrierung einer <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> mit der <xref:System.Windows.Input.CommandManager>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-108">An <xref:System.Windows.Input.InputBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> with the <xref:System.Windows.Input.CommandManager>.</span></span>  
  
 <span data-ttu-id="52fd1-109">Die <xref:System.Windows.Input.InputBinding> Klasse selbst unterstützt keine XAML-Verwendung, weil sie keinen öffentlichen Standardkonstruktor verfügbar macht (es ist ein Standardkonstruktor, aber es geschützt ist).</span><span class="sxs-lookup"><span data-stu-id="52fd1-109">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage because it does not expose a public default constructor (there is a default constructor, but it is protected).</span></span> <span data-ttu-id="52fd1-110">Jedoch abgeleitete Klassen einen öffentlichen Konstruktor verfügbar machen, und aus diesem Grund können Eigenschaften festlegen, für die abgeleitete Klasse, die von übernommenen <xref:System.Windows.Input.InputBinding> mit einer XAML-Verwendung.</span><span class="sxs-lookup"><span data-stu-id="52fd1-110">However, derived classes can expose a public constructor and therefore can set properties on the derived class that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="52fd1-111">Zwei vorhandene <xref:System.Windows.Input.InputBinding>-abgeleitete Klassen, die in XAML instanziiert werden und die Eigenschaften in XAML festlegen können, sind <xref:System.Windows.Input.KeyBinding> und <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-111">Two existing <xref:System.Windows.Input.InputBinding>-derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="52fd1-112">Die Eigenschaft in der [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] programmieren, legen Sie im XAML und übernimmt eine oder mehrere <xref:System.Windows.Input.InputBinding> Objekte als Werte der <xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="52fd1-112">The typical property in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] programming that is set in XAML and takes one or more <xref:System.Windows.Input.InputBinding> objects as values is the <xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType> property.</span></span>  
  
<a name="xamlObjectElementUsage_InputBinding"></a>   
## <a name="xaml-object-element-usage"></a><span data-ttu-id="52fd1-113">Verwendung von XAML-Objektelementen</span><span class="sxs-lookup"><span data-stu-id="52fd1-113">XAML Object Element Usage</span></span>  
 <span data-ttu-id="52fd1-114">\<*inputBindingDerivedClass…/*></span><span class="sxs-lookup"><span data-stu-id="52fd1-114">\<*inputBindingDerivedClass…/*></span></span>  
  
<a name="xamlValues_InputBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="52fd1-115">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="52fd1-115">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="52fd1-116">Eine abgeleitete Klasse von <xref:System.Windows.Input.InputBinding> , unterstützt die Objektelementsyntax, z. B. <xref:System.Windows.Input.KeyBinding> oder <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-116">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="52fd1-117">Siehe Hinweise.</span><span class="sxs-lookup"><span data-stu-id="52fd1-117">See Remarks.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fd1-118">Das folgende Beispiel zeigt, wie Sie mit einer <xref:System.Windows.Input.KeyBinding> binden ein <xref:System.Windows.Input.KeyGesture> auf die <xref:System.Windows.Input.ApplicationCommands.Open%2A> Befehl.</span><span class="sxs-lookup"><span data-stu-id="52fd1-118">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to the <xref:System.Windows.Input.ApplicationCommands.Open%2A> command.</span></span> <span data-ttu-id="52fd1-119">Wenn die Tastenkombination ausgeführt wird, wird der Befehl zum Öffnen aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="52fd1-119">When the key gesture is performed, the Open command is invoked.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 <span data-ttu-id="52fd1-120">Die folgenden Beispiele zeigen, wie Sie einen benutzerdefinierten Befehl zu binden <xref:System.Windows.Input.InputBinding> Objekte.</span><span class="sxs-lookup"><span data-stu-id="52fd1-120">The following examples show how to bind a custom command to <xref:System.Windows.Input.InputBinding> objects.</span></span> <span data-ttu-id="52fd1-121">Diese Beispiele erstellen Sie eine Anwendung, die dem Benutzer ermöglicht, die die Hintergrundfarbe ändern, indem Sie eine der folgenden Aktionen ausführen:</span><span class="sxs-lookup"><span data-stu-id="52fd1-121">These examples create an application that enables the user to change the background color by performing one of the following actions:</span></span>  
  
-   <span data-ttu-id="52fd1-122">Klicken Sie auf eine Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="52fd1-122">Clicking a button.</span></span>  
  
-   <span data-ttu-id="52fd1-123">STRG + C drücken.</span><span class="sxs-lookup"><span data-stu-id="52fd1-123">Pressing CTRL+C.</span></span>  
  
-   <span data-ttu-id="52fd1-124">Mit der rechten Maustaste ein <xref:System.Windows.Controls.StackPanel> (außerhalb der <xref:System.Windows.Controls.ListBox>).</span><span class="sxs-lookup"><span data-stu-id="52fd1-124">Right-clicking a <xref:System.Windows.Controls.StackPanel> (outside the <xref:System.Windows.Controls.ListBox>).</span></span>  
  
 <span data-ttu-id="52fd1-125">Im erste Beispiel wird eine Klasse namens `SimpleDelegateCommand`.</span><span class="sxs-lookup"><span data-stu-id="52fd1-125">The first example creates a class named `SimpleDelegateCommand`.</span></span> <span data-ttu-id="52fd1-126">Diese Klasse akzeptieren einen Delegaten, sodass das Objekt, das den Befehl erstellt die Aktion definieren kann, die auftritt, wenn der Befehl ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="52fd1-126">This class accepts a delegate so that the object creating the command can define the action that occurs when the command executes.</span></span> <span data-ttu-id="52fd1-127">`SimpleDelegateCommand` definiert außerdem Eigenschaften, die angeben, welche Taste, und bewegen Sie den Mauszeiger Eingabe Ruft den Befehl.</span><span class="sxs-lookup"><span data-stu-id="52fd1-127">`SimpleDelegateCommand` also defines properties that specify what key and mouse input invokes the command.</span></span> <span data-ttu-id="52fd1-128">`GestureKey` und `GestureModifier` Geben Sie die Tastatureingaben; `MouseGesture` gibt an, die Mauseingabe.</span><span class="sxs-lookup"><span data-stu-id="52fd1-128">`GestureKey` and `GestureModifier` specify the keyboard input; `MouseGesture` specifies the mouse input.</span></span>  
  
 [!code-csharp[InputCommandBinding#DelegateCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml.cs#delegatecommand)]
 [!code-vb[InputCommandBinding#DelegateCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/inputcommandbinding/visualbasic/mainwindow.xaml.vb#delegatecommand)]  
  
 <span data-ttu-id="52fd1-129">Das folgende Beispiel erstellt und initialisiert die `ColorChangeCommand`, d.h. eine `SimpleDelegateCommand`.</span><span class="sxs-lookup"><span data-stu-id="52fd1-129">The following example creates and initializes the `ColorChangeCommand`, which is a `SimpleDelegateCommand`.</span></span> <span data-ttu-id="52fd1-130">Im Beispiel definiert auch die Methode, die ausgeführt wird, wenn der Befehl aufgerufen wird, und legt die `GestureKey`, `GestureModifier`, und `MouseGesture` Eigenschaften.</span><span class="sxs-lookup"><span data-stu-id="52fd1-130">The example also defines the method that executes when the command is invoked and sets the `GestureKey`, `GestureModifier`, and `MouseGesture` properties.</span></span> <span data-ttu-id="52fd1-131">Eine Anwendung aufrufen würde die `InitializeCommand` Methode, wenn das Programm beginnt, z. B. in den Konstruktor des eine <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-131">An application would call the `InitializeCommand` method when the program begins, such as in the constructor of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[InputCommandBinding#InitializeCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml.cs#initializecommand)]
 [!code-vb[InputCommandBinding#InitializeCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/inputcommandbinding/visualbasic/mainwindow.xaml.vb#initializecommand)]  
  
 <span data-ttu-id="52fd1-132">Im folgende Beispiel wird schließlich die Benutzeroberfläche erstellt.</span><span class="sxs-lookup"><span data-stu-id="52fd1-132">Finally, the following example creates the user interface.</span></span> <span data-ttu-id="52fd1-133">Im Beispiel wird eine <xref:System.Windows.Input.KeyBinding> und ein <xref:System.Windows.Input.MouseBinding> auf eine <xref:System.Windows.Controls.StackPanel> , enthält eine <xref:System.Windows.Controls.Button> und <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-133">The example adds a <xref:System.Windows.Input.KeyBinding> and a <xref:System.Windows.Input.MouseBinding> to a <xref:System.Windows.Controls.StackPanel> that contains a <xref:System.Windows.Controls.Button> and a <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="52fd1-134">Wenn der Benutzer wählt ein Element in der <xref:System.Windows.Controls.ListBox>, er oder sie können die Farbe des Hintergrunds ändern, mit der ausgewählten Farbe.</span><span class="sxs-lookup"><span data-stu-id="52fd1-134">When the user selects an item in the <xref:System.Windows.Controls.ListBox>, he or she can change the color of the background to the selected color.</span></span> <span data-ttu-id="52fd1-135">In jedem Fall die `CommandParameter` Eigenschaft gebunden ist, um das ausgewählte Element in der <xref:System.Windows.Controls.ListBox>, und die `Command` Eigenschaft gebunden ist die `ColorChangeCommand`.</span><span class="sxs-lookup"><span data-stu-id="52fd1-135">In each case, the `CommandParameter` property is bound to the selected item in the <xref:System.Windows.Controls.ListBox>, and the `Command` property is bound to the `ColorChangeCommand`.</span></span> <span data-ttu-id="52fd1-136">Die <xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType>, und <xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType> Eigenschaften in den entsprechenden Eigenschaften gebunden sind, auf die `SimpleDelegateCommand` Klasse.</span><span class="sxs-lookup"><span data-stu-id="52fd1-136">The <xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType>, and <xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType> properties are bound to the corresponding properties on the `SimpleDelegateCommand` class.</span></span>  
  
 [!code-xaml[InputCommandBinding#UI](~/samples/snippets/csharp/VS_Snippets_Wpf/inputcommandbinding/csharp/mainwindow.xaml#ui)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.UIElement.InputBindings" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="52fd1-137">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.InputBinding" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="52fd1-137">Initializes a new instance of the <see cref="T:System.Windows.Input.InputBinding" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected InputBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; InputBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52fd1-138">Stellt die basisinitialisierung bereit, für die abgeleitete Klassen von <see cref="T:System.Windows.Input.InputBinding" />.</span><span class="sxs-lookup"><span data-stu-id="52fd1-138">Provides base initialization for classes derived from <see cref="T:System.Windows.Input.InputBinding" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fd1-139"><xref:System.Windows.Input.InputBinding> Technisch gesehen eine abstrakte Klasse ist, aber der Standardkonstruktor wird absichtlich Zugriff geschützt.</span><span class="sxs-lookup"><span data-stu-id="52fd1-139"><xref:System.Windows.Input.InputBinding> is not technically an abstract class, but the default constructor is deliberately protected access.</span></span> <span data-ttu-id="52fd1-140">Dies wirkt sich die machen <xref:System.Windows.Input.InputBinding> eine "abstrakte" Klasse für XAML.</span><span class="sxs-lookup"><span data-stu-id="52fd1-140">This has the effect of making <xref:System.Windows.Input.InputBinding> an "abstract" class for XAML.</span></span> <span data-ttu-id="52fd1-141">Vorhandene Eigenschaften in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] , deren XAML-Verwendungen, die Objekte des Typs erwarten <xref:System.Windows.Input.InputBinding>, aber Sie nicht angeben, ein <xref:System.Windows.Input.InputBinding> -Instanz in XAML.</span><span class="sxs-lookup"><span data-stu-id="52fd1-141">There are existing properties in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] that have XAML usages that expect objects of type <xref:System.Windows.Input.InputBinding>, but you cannot specify an <xref:System.Windows.Input.InputBinding> instance in XAML.</span></span> <span data-ttu-id="52fd1-142">Stattdessen können Sie angeben eines gerätespezifischen <xref:System.Windows.Input.InputBinding> abgeleiteten Klassen als Werte, z. B. <xref:System.Windows.Input.KeyBinding> oder <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-142">Instead, you can specify one of the device-specific <xref:System.Windows.Input.InputBinding> derived classes as values, for instance <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="52fd1-143">Wenn Sie eine benutzerdefinierte implementieren <see cref="T:System.Windows.Input.InputBinding" /> , das eine XAML-Verwendung unterstützt, verwenden Sie diesen Konstruktor für die Basis-Initialisierung.</span><span class="sxs-lookup"><span data-stu-id="52fd1-143">If you implement a custom <see cref="T:System.Windows.Input.InputBinding" /> that supports a XAML usage, use this constructor for base initialization.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public InputBinding (System.Windows.Input.ICommand command, System.Windows.Input.InputGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.InputGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As InputGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; InputBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::InputGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.InputBinding : System.Windows.Input.ICommand * System.Windows.Input.InputGesture -&gt; System.Windows.Input.InputBinding" Usage="new System.Windows.Input.InputBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.InputGesture" />
      </Parameters>
      <Docs>
        <param name="command"><span data-ttu-id="52fd1-144">Der Befehl zum Zuordnen <paramref name="gesture" />.</span><span class="sxs-lookup"><span data-stu-id="52fd1-144">The command to associate with <paramref name="gesture" />.</span></span></param>
        <param name="gesture"><span data-ttu-id="52fd1-145">Die Eingabegeste zuzuordnende <paramref name="command" />.</span><span class="sxs-lookup"><span data-stu-id="52fd1-145">The input gesture to associate with <paramref name="command" />.</span></span></param>
        <summary><span data-ttu-id="52fd1-146">Initialisiert eine neue Instanz der dem <see cref="T:System.Windows.Input.InputBinding" /> Klasse mit dem angegebenen Befehl und der eingabestiftbewegung.</span><span class="sxs-lookup"><span data-stu-id="52fd1-146">Initializes a new instance of the <see cref="T:System.Windows.Input.InputBinding" /> class with the specified command and input gesture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fd1-147">Wenn Sie eine vorhandene Eingabe Bindungsklassen mit Softwareentwickler sind, in der Regel verwenden nicht diesen Konstruktor, Sie auch, wenn Sie benutzerdefinierte Befehle definieren.</span><span class="sxs-lookup"><span data-stu-id="52fd1-147">If you are a software developer using existing input binding classes, you generally will not use this constructor, even if you are defining custom commands.</span></span> <span data-ttu-id="52fd1-148">Stattdessen verwenden Sie entweder Konstruktoren von abgeleiteten Klassen (<xref:System.Windows.Input.KeyBinding> und <xref:System.Windows.Input.MouseBinding>), oder verwenden Sie diesen Konstruktor als die Basis Instanziierung einer benutzerdefinierten Klasse.</span><span class="sxs-lookup"><span data-stu-id="52fd1-148">Instead, you will either use constructors of derived classes (<xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>), or you will use this constructor as the base instantiation of a custom class.</span></span> <span data-ttu-id="52fd1-149">Obwohl die <xref:System.Windows.Input.InputBinding> Klasse unterstützt verschiedene Eingabegeräte im Prinzip in der Praxis müssen Sie auswählen, welches Gerät die eingabebindung darstellt.</span><span class="sxs-lookup"><span data-stu-id="52fd1-149">Although the <xref:System.Windows.Input.InputBinding> class supports different input devices in principle, in practice you must choose which device the input binding will represent.</span></span> <span data-ttu-id="52fd1-150">Nur lassen sich nur ein <xref:System.Windows.Input.InputBinding.Gesture%2A> Wert für die eingabebindung und Gesten sind gerätespezifisch.</span><span class="sxs-lookup"><span data-stu-id="52fd1-150">You only can set only one <xref:System.Windows.Input.InputBinding.Gesture%2A> value on the input binding, and gestures are device-specific.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fd1-151">Das folgende Beispiel zeigt, wie Sie diesen Konstruktor verwenden, um das Zuordnen einer <xref:System.Windows.Input.KeyGesture> mit einem <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-151">The following example shows how to use this constructor to associate a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.RoutedCommand>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#InputBindingAddingCommand](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#inputbindingaddingcommand)]
 [!code-vb[commandlibrarysnippets#InputBindingAddingCommand](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#inputbindingaddingcommand)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="52fd1-152"><paramref name="command" /> oder <paramref name="gesture" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="52fd1-152"><paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected override void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="52fd1-153">Das zu klonende Objekt.</span><span class="sxs-lookup"><span data-stu-id="52fd1-153">The object to clone.</span></span></param>
        <summary><span data-ttu-id="52fd1-154">Kopiert die Basiswerte (nicht animiert) die Eigenschaften des angegebenen Objekts.</span><span class="sxs-lookup"><span data-stu-id="52fd1-154">Copies the base (non-animated) values of the properties of the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected override void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="52fd1-155">Das zu klonende Objekt.</span><span class="sxs-lookup"><span data-stu-id="52fd1-155">The object to clone.</span></span></param>
        <summary><span data-ttu-id="52fd1-156">Kopiert die aktuellen Werte der Eigenschaften des angegebenen Objekts.</span><span class="sxs-lookup"><span data-stu-id="52fd1-156">Copies the current values of the properties of the specified object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.Command" />
      <MemberSignature Language="VB.NET" Value="Public Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); void set(System::Windows::Input::ICommand ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand with get, set" Usage="System.Windows.Input.InputBinding.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Windows.Input.CommandConverter, PresentationFramework, Version=3.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, Custom=null")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52fd1-157">Ruft die dieser Eingabebindung zugeordnete <see cref="T:System.Windows.Input.ICommand" />-Klasse ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="52fd1-157">Gets or sets the <see cref="T:System.Windows.Input.ICommand" /> associated with this input binding.</span></span></summary>
        <value><span data-ttu-id="52fd1-158">Der verknüpfte Befehl.</span><span class="sxs-lookup"><span data-stu-id="52fd1-158">The associated command.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fd1-159">Die <xref:System.Windows.Input.InputBinding> Klasse unterstützt keine XAML-Verwendung, weil sie keinen öffentlichen Standardkonstruktor verfügbar macht (er verfügt über einen Standardkonstruktor, aber es geschützt ist).</span><span class="sxs-lookup"><span data-stu-id="52fd1-159">The <xref:System.Windows.Input.InputBinding> class does not support XAML usage because it does not expose a public default constructor (it has a default constructor, but it is protected).</span></span> <span data-ttu-id="52fd1-160">Jedoch abgeleitete Klassen einen öffentlichen Konstruktor verfügbar machen, und aus diesem Grund können Eigenschaften, die von übernommenen <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-160">However, derived classes can expose a public constructor and therefore, can use properties that are inherited from <xref:System.Windows.Input.InputBinding>.</span></span> <span data-ttu-id="52fd1-161">Zwei vorhandene <xref:System.Windows.Input.InputBinding> abgeleitete Klassen, die in XAML instanziiert werden und die Eigenschaften in XAML-Verwendungen festlegen können, sind <xref:System.Windows.Input.KeyBinding> und <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-161">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties with XAML usages are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
 <span data-ttu-id="52fd1-162"><xref:System.Windows.Input.ICommand> verweist auf einen Typkonverter, die bestimmte bereits vorhandene ermöglicht <xref:System.Windows.Input.ICommand> Implementierungen, um Werte in Form einer Zeichenfolge anzugeben.</span><span class="sxs-lookup"><span data-stu-id="52fd1-162"><xref:System.Windows.Input.ICommand> references a type converter that enables certain preexisting <xref:System.Windows.Input.ICommand> implementations to specify values in the form of a string.</span></span> <span data-ttu-id="52fd1-163">Diese Typkonvertierungsverhalten legt fest, der Form der Attribut-Wert dieser Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="52fd1-163">This type conversion behavior sets the attribute value form of this property.</span></span> <span data-ttu-id="52fd1-164">Sie können auch eine Bindung die <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, und <xref:System.Windows.Input.InputBinding.CommandTarget%2A> Eigenschaften, die eine <xref:System.Windows.Input.ICommand> , die für ein Objekt definiert ist.</span><span class="sxs-lookup"><span data-stu-id="52fd1-164">You can also bind the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties to an <xref:System.Windows.Input.ICommand> that is defined on an object.</span></span> <span data-ttu-id="52fd1-165">Dadurch können Sie definieren einen benutzerdefinierten Befehl und Benutzereingaben zuordnen.</span><span class="sxs-lookup"><span data-stu-id="52fd1-165">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="52fd1-166">Weitere Informationen finden Sie im zweite Beispiel in <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-166">For more information, see the second example in <xref:System.Windows.Input.InputBinding>.</span></span>  
  
<a name="xamlAttributeUsage_Command"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="52fd1-167">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="52fd1-167">XAML Attribute Usage</span></span>  
 <span data-ttu-id="52fd1-168"><`inputBindingDerivedClass` `Command`="<xref:System.Windows.Input.ICommand>"/></span><span class="sxs-lookup"><span data-stu-id="52fd1-168"><`inputBindingDerivedClass` `Command`="<xref:System.Windows.Input.ICommand>"/></span></span>  
  
<a name="xamlPropertyElementUsage_Command"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="52fd1-169">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="52fd1-169">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.Command>  
    <iCommandImplementation/>  
  </inputBindingDerivedClass.Command>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_Command"></a>   
## <a name="xaml-values"></a><span data-ttu-id="52fd1-170">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="52fd1-170">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="52fd1-171">Eine abgeleitete Klasse von <xref:System.Windows.Input.InputBinding> , unterstützt die Objektelementsyntax, z. B. <xref:System.Windows.Input.KeyBinding> oder <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-171">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="52fd1-172">Siehe Hinweise.</span><span class="sxs-lookup"><span data-stu-id="52fd1-172">See Remarks.</span></span>  
  
 `iCommandImplementation`  
 <span data-ttu-id="52fd1-173">Eine objektimplementierung von <xref:System.Windows.Input.ICommand> , das Objektelement-Syntax unterstützt (verfügt über einen öffentlichen Standardkonstruktor).</span><span class="sxs-lookup"><span data-stu-id="52fd1-173">An object implementation of <xref:System.Windows.Input.ICommand> that supports object element syntax (has a public default constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fd1-174">Das folgende Beispiel zeigt, wie Sie mit einer <xref:System.Windows.Input.KeyBinding> binden ein <xref:System.Windows.Input.KeyGesture> auf die <xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType> Befehl.</span><span class="sxs-lookup"><span data-stu-id="52fd1-174">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to the <xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType> command.</span></span> <span data-ttu-id="52fd1-175">Wenn die Tastenkombination ausgeführt wird, wird der Befehl zum Öffnen aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="52fd1-175">When the key gesture is performed, the Open command is invoked.</span></span>  
  
 [!code-xaml[commandingoverviewsnippets#CommandingOverviewXAMLKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml#commandingoverviewxamlkeybinding)]  
  
 [!code-csharp[commandingoverviewsnippets#CommandingOverviewKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandingOverviewSnippets/CSharp/Window1.xaml.cs#commandingoverviewkeybinding)]
 [!code-vb[commandingoverviewsnippets#CommandingOverviewKeyBinding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandingOverviewSnippets/visualbasic/window1.xaml.vb#commandingoverviewkeybinding)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="52fd1-176">Der <see cref="P:System.Windows.Input.InputBinding.Command" />-Wert ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="52fd1-176">The <see cref="P:System.Windows.Input.InputBinding.Command" /> value is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj with get, set" Usage="System.Windows.Input.InputBinding.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52fd1-177">Übernimmt oder bestimmt die befehlsspezifischen Daten für einen bestimmten Befehl.</span><span class="sxs-lookup"><span data-stu-id="52fd1-177">Gets or sets the command-specific data for a particular command.</span></span></summary>
        <value><span data-ttu-id="52fd1-178">Die befehlsspezifischen Daten.</span><span class="sxs-lookup"><span data-stu-id="52fd1-178">The command-specific data.</span></span> <span data-ttu-id="52fd1-179">Die Standardeinstellung ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="52fd1-179">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fd1-180">Die <xref:System.Windows.Input.InputBinding.CommandParameter%2A> Eigenschaft wird verwendet, um bestimmte Informationen an den Befehl übergeben werden, bei der Ausführung.</span><span class="sxs-lookup"><span data-stu-id="52fd1-180">The <xref:System.Windows.Input.InputBinding.CommandParameter%2A> property is used to pass specific information to the command when it is executed.</span></span> <span data-ttu-id="52fd1-181">Der Typ der Daten wird durch den Befehl definiert.</span><span class="sxs-lookup"><span data-stu-id="52fd1-181">The type of the data is defined by the command.</span></span> <span data-ttu-id="52fd1-182">Viele Befehle erwarten keine Befehlsparameter; Bei diesen Befehlen werden übergebene Befehlsparameter ignoriert.</span><span class="sxs-lookup"><span data-stu-id="52fd1-182">Many commands do not expect command parameters; for these commands, any command parameters passed will be ignored.</span></span>  
  
 <span data-ttu-id="52fd1-183">Ist der Befehl, der eine eingabebindung zugeordnet ist eine <xref:System.Windows.Input.RoutedCommand>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A> von die eingabebindung übergeben wird die <xref:System.Windows.Input.RoutedCommand> Handler durch den <xref:System.Windows.Input.ExecutedRoutedEventArgs> und die <xref:System.Windows.Input.CanExecuteRoutedEventArgs> Ereignisdaten, die beim Verarbeiten des Befehls.</span><span class="sxs-lookup"><span data-stu-id="52fd1-183">If the command that an input binding is associated with is a <xref:System.Windows.Input.RoutedCommand>, the <xref:System.Windows.Input.InputBinding.CommandParameter%2A> of the input binding is passed to the <xref:System.Windows.Input.RoutedCommand> handlers through the <xref:System.Windows.Input.ExecutedRoutedEventArgs> and the <xref:System.Windows.Input.CanExecuteRoutedEventArgs> event data when the command is processed.</span></span>  
  
 <span data-ttu-id="52fd1-184">Der Datentyp und den Zweck des Command-Parameters sind für jeden Befehl anders definiert und kann `null`.</span><span class="sxs-lookup"><span data-stu-id="52fd1-184">The data type and purpose of the command parameter are defined differently for each command and can be `null`.</span></span> <span data-ttu-id="52fd1-185">Sie binden die <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, und <xref:System.Windows.Input.InputBinding.CommandTarget%2A> Eigenschaften, die eine <xref:System.Windows.Input.ICommand> , die für ein Objekt definiert ist.</span><span class="sxs-lookup"><span data-stu-id="52fd1-185">You can bind the <xref:System.Windows.Input.InputBinding.Command%2A>, <xref:System.Windows.Input.InputBinding.CommandParameter%2A>, and <xref:System.Windows.Input.InputBinding.CommandTarget%2A> properties to an <xref:System.Windows.Input.ICommand> that is defined on an object.</span></span> <span data-ttu-id="52fd1-186">Dadurch können Sie definieren einen benutzerdefinierten Befehl und Benutzereingaben zuordnen.</span><span class="sxs-lookup"><span data-stu-id="52fd1-186">This enables you to define a custom command and associate it with user input.</span></span> <span data-ttu-id="52fd1-187">Weitere Informationen finden Sie im zweite Beispiel in <xref:System.Windows.Input.InputBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-187">For more information, see the second example in <xref:System.Windows.Input.InputBinding>.</span></span>  
  
 <span data-ttu-id="52fd1-188">Die <xref:System.Windows.Input.InputBinding> Klasse unterstützt keine XAML-Verwendung, weil sie keinen öffentlichen Standardkonstruktor verfügbar macht (er verfügt über einen Standardkonstruktor, aber es geschützt ist).</span><span class="sxs-lookup"><span data-stu-id="52fd1-188">The <xref:System.Windows.Input.InputBinding> class does not support XAML usage because it does not expose a public default constructor (it has a default constructor, but it is protected).</span></span> <span data-ttu-id="52fd1-189">Jedoch abgeleitete Klassen einen öffentlichen Konstruktor verfügbar machen, und aus diesem Grund können Eigenschaften festlegen, die von übernommenen <xref:System.Windows.Input.InputBinding> mit XAML-Verwendung.</span><span class="sxs-lookup"><span data-stu-id="52fd1-189">However, derived classes can expose a public constructor and therefore, can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with XAML usage.</span></span> <span data-ttu-id="52fd1-190">Zwei vorhandene <xref:System.Windows.Input.InputBinding> abgeleitete Klassen, die in XAML instanziiert werden und die Eigenschaften in XAML festlegen können, sind <xref:System.Windows.Input.KeyBinding> und <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-190">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_CommandParameter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="52fd1-191">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="52fd1-191">XAML Attribute Usage</span></span>  
  
```  
<inputBindingDerivedClass CommandParameter="commandParameterString"/>  
```  
  
<a name="xamlPropertyElementUsage_CommandParameter"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="52fd1-192">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="52fd1-192">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.CommandParameter>  
    <commandParameterObject/>  
  </inputBindingDerivedClass.CommandParameter>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_CommandParameter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="52fd1-193">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="52fd1-193">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="52fd1-194">Eine abgeleitete Klasse von <xref:System.Windows.Input.InputBinding> , unterstützt die Objektelementsyntax, z. B. <xref:System.Windows.Input.KeyBinding> oder <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-194">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="52fd1-195">Siehe Hinweise.</span><span class="sxs-lookup"><span data-stu-id="52fd1-195">See Remarks.</span></span>  
  
 `commandParameterString`  
 <span data-ttu-id="52fd1-196">Eine Zeichenfolge, die von einem bestimmten Befehl verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="52fd1-196">A string that is processed by a particular command.</span></span> <span data-ttu-id="52fd1-197">Zeichenfolgen sind der allgemeine Typ für Parameter des Befehls verwendet werden, da sie leicht in XAML festgelegt werden können.</span><span class="sxs-lookup"><span data-stu-id="52fd1-197">Strings are the common type used for command parameters because they can be easily set in XAML.</span></span> <span data-ttu-id="52fd1-198">Das erwartete Zeichenfolgenformat und seinen Zweck finden Sie in der Dokumentation für einen bestimmten Befehl, dem die eingabebindung zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="52fd1-198">For the expected string format and its purpose, see the documentation for the particular command that the input binding is associated with.</span></span> <span data-ttu-id="52fd1-199">Viele Befehle erwarten keine Parameter.</span><span class="sxs-lookup"><span data-stu-id="52fd1-199">Many commands do not expect parameters.</span></span>  
  
 `commandParameterObject`  
 <span data-ttu-id="52fd1-200">Ein Objekt, das von einem bestimmten Befehl verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="52fd1-200">An object that is processed by a particular command.</span></span> <span data-ttu-id="52fd1-201">Alle vorhandenen [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Befehle Zeichenfolgen verwenden.</span><span class="sxs-lookup"><span data-stu-id="52fd1-201">All existing [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commands use strings.</span></span> <span data-ttu-id="52fd1-202">Aus diesem Grund ist dieser Eigenschaftenelement-Syntax nur für Szenarien mit benutzerdefinierten Befehlen relevant.</span><span class="sxs-lookup"><span data-stu-id="52fd1-202">Therefore, this property element syntax is only relevant for custom command scenarios.</span></span> <span data-ttu-id="52fd1-203">Um diese Syntax unterstützt die `commandParameterObject` -Objekt unterstützt ebenfalls Objektelementsyntax (muss über einen öffentlichen Standardkonstruktor verfügen).</span><span class="sxs-lookup"><span data-stu-id="52fd1-203">In order to support this syntax, the `commandParameterObject` object must also support object element syntax (must have a public default constructor).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameterProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandParameterProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandParameterProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandParameterProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandParameterProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandParameterProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandParameterProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandParameterProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52fd1-204">Bezeichnet die <see cref="P:System.Windows.Input.InputBinding.CommandParameter" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="52fd1-204">Identifies the <see cref="P:System.Windows.Input.InputBinding.CommandParameter" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52fd1-205">Bezeichnet die <see cref="P:System.Windows.Input.InputBinding.Command" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="52fd1-205">Identifies the <see cref="P:System.Windows.Input.InputBinding.Command" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); void set(System::Windows::IInputElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement with get, set" Usage="System.Windows.Input.InputBinding.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52fd1-206">Übernimmt oder bestimmt das Zielelement des Befehls.</span><span class="sxs-lookup"><span data-stu-id="52fd1-206">Gets or sets the target element of the command.</span></span></summary>
        <value><span data-ttu-id="52fd1-207">Das Ziel des Befehls.</span><span class="sxs-lookup"><span data-stu-id="52fd1-207">The target of the command.</span></span> <span data-ttu-id="52fd1-208">Die Standardeinstellung ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="52fd1-208">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fd1-209">In der Windows Presentation Foundation-Befehlssystem ist die <xref:System.Windows.Input.InputBinding.CommandTarget%2A> Eigenschaft für eine <xref:System.Windows.Input.ICommandSource> Objekt ist nur anwendbar, wenn die <xref:System.Windows.Input.ICommand> ist eine <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-209">In the Windows Presentation Foundation commanding system, the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property on an <xref:System.Windows.Input.ICommandSource> object is applicable only when the <xref:System.Windows.Input.ICommand> is a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="52fd1-210">Wenn <xref:System.Windows.Input.InputBinding.CommandTarget%2A> auf eine <xref:System.Windows.Input.ICommandSource> festgelegt und der entsprechende Befehl kein <xref:System.Windows.Input.RoutedCommand> ist, wird das Befehlsziel ignoriert.</span><span class="sxs-lookup"><span data-stu-id="52fd1-210">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> is set on an <xref:System.Windows.Input.ICommandSource> and the corresponding command is not a <xref:System.Windows.Input.RoutedCommand>, the command target is ignored.</span></span>  
  
 <span data-ttu-id="52fd1-211">Bei Verwendung mit einem <xref:System.Windows.Input.RoutedCommand>, das Befehlsziel ist das Objekt auf dem die <xref:System.Windows.Input.CommandManager.Executed> und <xref:System.Windows.Input.CommandManager.CanExecute> Ereignisse ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="52fd1-211">When used with a <xref:System.Windows.Input.RoutedCommand>, the command target is the object on which the <xref:System.Windows.Input.CommandManager.Executed> and <xref:System.Windows.Input.CommandManager.CanExecute> events are raised.</span></span> <span data-ttu-id="52fd1-212">Wenn die <xref:System.Windows.Input.InputBinding.CommandTarget%2A> Eigenschaft nicht festgelegt ist, wird das Element mit dem Tastaturfokus als Ziel verwendet.</span><span class="sxs-lookup"><span data-stu-id="52fd1-212">If the <xref:System.Windows.Input.InputBinding.CommandTarget%2A> property is not set, the element with keyboard focus is used as the target.</span></span>  
  
 <span data-ttu-id="52fd1-213">Die <xref:System.Windows.Input.InputBinding> Klasse selbst unterstützt keine XAML-Verwendung, weil sie keinen öffentlichen Standardkonstruktor verfügbar macht (es ist ein Standardkonstruktor, aber es geschützt ist).</span><span class="sxs-lookup"><span data-stu-id="52fd1-213">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage, because it does not expose a public default constructor (there is a default constructor, but it is protected).</span></span> <span data-ttu-id="52fd1-214">Jedoch abgeleitete Klassen einen öffentlichen Konstruktor verfügbar machen, und aus diesem Grund können Eigenschaften festlegen, die von übernommenen <xref:System.Windows.Input.InputBinding> mit einer XAML-Verwendung.</span><span class="sxs-lookup"><span data-stu-id="52fd1-214">However, derived classes can expose a public constructor and therefore can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="52fd1-215">Zwei vorhandene <xref:System.Windows.Input.InputBinding> abgeleitete Klassen, die in XAML instanziiert werden und die Eigenschaften in XAML festlegen können, sind <xref:System.Windows.Input.KeyBinding> und <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-215">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_CommandTarget"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="52fd1-216">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="52fd1-216">XAML Attribute Usage</span></span>  
  
```  
<inputBindingDerivedClass CommandTarget="bindingToTarget"/>  
```  
  
<a name="xamlValues_CommandTarget"></a>   
## <a name="xaml-values"></a><span data-ttu-id="52fd1-217">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="52fd1-217">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="52fd1-218">Eine abgeleitete Klasse von <xref:System.Windows.Input.InputBinding> , unterstützt die Objektelementsyntax, z. B. <xref:System.Windows.Input.KeyBinding> oder <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-218">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="52fd1-219">Siehe Hinweise.</span><span class="sxs-lookup"><span data-stu-id="52fd1-219">See Remarks.</span></span>  
  
 `bindingToTarget`  
 <span data-ttu-id="52fd1-220">Eine Zeichenfolge, die einen Bindungssyntax verwendet, die einen Objektverweis zu einer vorhandenen zurückgeben kann, mit dem Namen Element.</span><span class="sxs-lookup"><span data-stu-id="52fd1-220">A string that uses a type of binding syntax that can return an object reference to an existing named element.</span></span> <span data-ttu-id="52fd1-221">Siehe Hinweise.</span><span class="sxs-lookup"><span data-stu-id="52fd1-221">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandTargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CommandTargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CommandTargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.InputBinding.CommandTargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CommandTargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CommandTargetProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CommandTargetProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.InputBinding.CommandTargetProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52fd1-222">Bezeichnet die <see cref="P:System.Windows.Input.InputBinding.CommandTarget" />-Abhängigkeitseigenschaft.</span><span class="sxs-lookup"><span data-stu-id="52fd1-222">Identifies the <see cref="P:System.Windows.Input.InputBinding.CommandTarget" /> dependency property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="inputBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="52fd1-223">Erstellt eine Instanz einer <see cref="T:System.Windows.Input.InputBinding" />.</span><span class="sxs-lookup"><span data-stu-id="52fd1-223">Creates an instance of an <see cref="T:System.Windows.Input.InputBinding" />.</span></span></summary>
        <returns><span data-ttu-id="52fd1-224">Das neue Objekt.</span><span class="sxs-lookup"><span data-stu-id="52fd1-224">The new object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.InputBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.InputBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netcore-3.0">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="52fd1-225">Ruft die dieser Eingabebindung zugeordnete <see cref="T:System.Windows.Input.InputGesture" />-Klasse ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="52fd1-225">Gets or sets the <see cref="T:System.Windows.Input.InputGesture" /> associated with this input binding.</span></span></summary>
        <value><span data-ttu-id="52fd1-226">Die zugeordnete stiftbewegung.</span><span class="sxs-lookup"><span data-stu-id="52fd1-226">The associated gesture.</span></span> <span data-ttu-id="52fd1-227">Die Standardeinstellung ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="52fd1-227">The default is <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="52fd1-228">Die Eingabegeste ist die Aktion, die den Befehl aufruft.</span><span class="sxs-lookup"><span data-stu-id="52fd1-228">The input gesture is the action that invokes the command.</span></span> <span data-ttu-id="52fd1-229">Beispiele für die in die Eingabeaktionen [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] sind <xref:System.Windows.Input.KeyGesture> und <xref:System.Windows.Input.MouseGesture>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-229">Examples of input gestures in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] are <xref:System.Windows.Input.KeyGesture> and <xref:System.Windows.Input.MouseGesture>.</span></span> <span data-ttu-id="52fd1-230">Ein <xref:System.Windows.Input.KeyGesture> ist eine Kombination aus einem <xref:System.Windows.Input.Key> und einen Satz von <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-230">A <xref:System.Windows.Input.KeyGesture> is a combination of a <xref:System.Windows.Input.Key> and a set of <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="52fd1-231">Ein <xref:System.Windows.Input.MouseGesture> ist eine Kombination aus einem <xref:System.Windows.Input.MouseAction> und einen Satz von <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-231">A <xref:System.Windows.Input.MouseGesture> is a combination of a <xref:System.Windows.Input.MouseAction> and a set of <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="52fd1-232">Die <xref:System.Windows.Input.InputBinding> Klasse selbst unterstützt keine XAML-Verwendung, weil sie keinen öffentlichen Standardkonstruktor verfügbar macht (es ist ein Standardkonstruktor, aber es geschützt ist).</span><span class="sxs-lookup"><span data-stu-id="52fd1-232">The <xref:System.Windows.Input.InputBinding> class itself does not support XAML usage, because it does not expose a public default constructor (there is a default constructor, but it is protected).</span></span> <span data-ttu-id="52fd1-233">Jedoch abgeleitete Klassen einen öffentlichen Konstruktor verfügbar machen, und daher Eigenschaften festlegen, die von übernommenen <xref:System.Windows.Input.InputBinding> mit einer XAML-Verwendung.</span><span class="sxs-lookup"><span data-stu-id="52fd1-233">However, derived classes can expose a public constructor and thus can set properties that are inherited from <xref:System.Windows.Input.InputBinding> with a XAML usage.</span></span> <span data-ttu-id="52fd1-234">Zwei vorhandene <xref:System.Windows.Input.InputBinding> abgeleitete Klassen, die in XAML instanziiert werden und die Eigenschaften in XAML festlegen können, sind <xref:System.Windows.Input.KeyBinding> und <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-234">Two existing <xref:System.Windows.Input.InputBinding> derived classes that can be instantiated in XAML and can set properties in XAML are <xref:System.Windows.Input.KeyBinding> and <xref:System.Windows.Input.MouseBinding>.</span></span>  
  
<a name="xamlAttributeUsage_gesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="52fd1-235">Verwendung von XAML-Attributen</span><span class="sxs-lookup"><span data-stu-id="52fd1-235">XAML Attribute Usage</span></span>  
 <span data-ttu-id="52fd1-236"><<xref:System.Windows.Input.KeyBinding> `Gesture`="<xref:System.Windows.Input.KeyGesture>"/></span><span class="sxs-lookup"><span data-stu-id="52fd1-236"><<xref:System.Windows.Input.KeyBinding> `Gesture`="<xref:System.Windows.Input.KeyGesture>"/></span></span>  
  
<span data-ttu-id="52fd1-237">- oder - </span><span class="sxs-lookup"><span data-stu-id="52fd1-237">-or-</span></span>
  
 <span data-ttu-id="52fd1-238"><<xref:System.Windows.Input.MouseBinding> `Gesture`="<xref:System.Windows.Input.MouseGesture>"/></span><span class="sxs-lookup"><span data-stu-id="52fd1-238"><<xref:System.Windows.Input.MouseBinding> `Gesture`="<xref:System.Windows.Input.MouseGesture>"/></span></span>  
  
<span data-ttu-id="52fd1-239">- oder - </span><span class="sxs-lookup"><span data-stu-id="52fd1-239">-or-</span></span>
  
 <span data-ttu-id="52fd1-240"><`inputBindingDerivedClass` `Gesture`="<xref:System.Windows.Input.InputGesture>"/></span><span class="sxs-lookup"><span data-stu-id="52fd1-240"><`inputBindingDerivedClass` `Gesture`="<xref:System.Windows.Input.InputGesture>"/></span></span>  
  
<a name="xamlPropertyElementUsage_gesture"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="52fd1-241">Verwendung von XAML-Eigenschaftenelementen</span><span class="sxs-lookup"><span data-stu-id="52fd1-241">XAML Property Element Usage</span></span>  
  
```  
<inputBindingDerivedClass>  
  <inputBindingDerivedClass.Gesture>  
    <inputGestureImplementation/>  
  </inputBindingDerivedClass.Gesture>  
</inputBindingDerivedClass>  
```  
  
<a name="xamlValues_gesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="52fd1-242">XAML-Werte</span><span class="sxs-lookup"><span data-stu-id="52fd1-242">XAML Values</span></span>  
 `inputBindingDerivedClass`  
 <span data-ttu-id="52fd1-243">Eine abgeleitete Klasse von <xref:System.Windows.Input.InputBinding> , unterstützt die Objektelementsyntax, z. B. <xref:System.Windows.Input.KeyBinding> oder <xref:System.Windows.Input.MouseBinding>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-243">A derived class of <xref:System.Windows.Input.InputBinding> that supports object element syntax, such as <xref:System.Windows.Input.KeyBinding> or <xref:System.Windows.Input.MouseBinding>.</span></span> <span data-ttu-id="52fd1-244">Siehe Hinweise.</span><span class="sxs-lookup"><span data-stu-id="52fd1-244">See Remarks.</span></span>  
  
 `inputGestureImplementation`  
 <span data-ttu-id="52fd1-245">Eine benutzerdefinierte abgeleitete Klasse von <xref:System.Windows.Input.InputGesture> , das Objektelement-Syntax unterstützt.</span><span class="sxs-lookup"><span data-stu-id="52fd1-245">A custom derived class of <xref:System.Windows.Input.InputGesture> that supports object element syntax.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="52fd1-246">Das folgende Beispiel zeigt, wie Sie mit einer <xref:System.Windows.Input.KeyBinding> binden ein <xref:System.Windows.Input.KeyGesture> auf eine <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="52fd1-246">The following example shows how to use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="52fd1-247">Wenn die <xref:System.Windows.Input.KeyGesture> ALT + L gedrückt wird, die <xref:System.Windows.Input.ApplicationCommands.Close%2A> Befehl aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="52fd1-247">When the <xref:System.Windows.Input.KeyGesture> ALT+L is pressed, the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command is invoked.</span></span>  
  
 [!code-xaml[commandlibrarysnippets#KeyBindingWithKeyAndModifiersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml#keybindingwithkeyandmodifiersxaml)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="52fd1-248">Das zu klonende Objekt.</span><span class="sxs-lookup"><span data-stu-id="52fd1-248">The object to clone.</span></span></param>
        <summary><span data-ttu-id="52fd1-249">Definiert die Instanz als fixierten Klon des angegebenen <see cref="T:System.Windows.Freezable" /> mithilfe von Basiseigenschaftswerten (nicht animiert).</span><span class="sxs-lookup"><span data-stu-id="52fd1-249">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> by using base (non-animated) property values.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="inputBinding.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" Index="0" FrameworkAlternate="netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable"><span data-ttu-id="52fd1-250">Das zu klonende Objekt.</span><span class="sxs-lookup"><span data-stu-id="52fd1-250">The object to clone.</span></span></param>
        <summary><span data-ttu-id="52fd1-251">Macht diese aktuelle Instanz zu einem fixierten Klon des angegebenen <see cref="T:System.Windows.Freezable" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="52fd1-251">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span></span> <span data-ttu-id="52fd1-252">Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, werden die aktuellen animierten Werte kopiert.</span><span class="sxs-lookup"><span data-stu-id="52fd1-252">If the object has animated dependency properties, their current animated values are copied.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>