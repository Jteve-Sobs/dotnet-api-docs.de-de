<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InputBinding.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56b90f23db0a0464ab8bde6a060b5dd9953d82808.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6b90f23db0a0464ab8bde6a060b5dd9953d82808</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.InputBinding">
          <source>Represents a binding between an <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputGesture" /&gt;</ph> and a command.</source>
          <target state="translated">Stellt eine Bindung zwischen einer <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputGesture" /&gt;</ph> und einem Befehl dar.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.InputBinding">
          <source>The command is potentially a <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph>.</source>
          <target state="translated">Der Befehl ist potenziell ein <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>You can specify that user input invokes a command by creating a <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</source>
          <target state="translated">Sie können angeben, dass eine Benutzereingabe einen Befehl, durch das Erstellen aufruft einer <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>When the user performs the specified input, the <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> that is set to the <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph> property is executed.</source>
          <target state="translated">Wenn der Benutzer die angegebene Eingabe ausführt der <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> , wird festgelegt, um die <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph> -Eigenschaft ausgeführt.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>You can specify that the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> invokes a command that is defined on an object by creating a binding on the <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> properties.</source>
          <target state="translated">Sie können angeben, die <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> aufruft, einen Befehl, der für ein Objekt definiert ist, durch das Erstellen einer Bindung auf den <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph>, und <ph id="ph4">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>This enables you to define a custom command and associate it with user input.</source>
          <target state="translated">Dadurch können Sie zum Definieren eines benutzerdefinierten Befehls und Benutzereingaben zuordnen.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>For more information, see the second example in the Examples section.</source>
          <target state="translated">Weitere Informationen finden Sie im zweite Beispiel im Abschnitt "Beispiele".</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>An <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> can be defined on a specific object or at the class level by registering a <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;</ph> with the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> kann auf ein bestimmtes Objekt oder auf Klassenebene definiert werden, indem Sie registrieren einen <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A&gt;</ph> mit der <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class itself does not support <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage because it does not expose a public default constructor (there is a default constructor, but it is protected).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> Klasse selbst unterstützt keine <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Verwendung, da sie keinen öffentlichen Standardkonstruktor verfügbar macht (es ist ein Standardkonstruktor, aber er geschützt ist).</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>However, derived classes can expose a public constructor and therefore can set properties on the derived class that are inherited from <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> with a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage.</source>
          <target state="translated">Allerdings abgeleitete Klassen können einen öffentlichen Konstruktor verfügbar machen, und aus diesem Grund können Eigenschaften festlegen, für die abgeleitete Klasse, die vom geerbt werden <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> mit einem <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Verwendung.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>Two existing <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>-derived classes that can be instantiated in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> and can set properties in <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> are <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Zwei vorhandene <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>-abgeleitete Klassen, die in der instanziiert werden können <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> und legen Sie Eigenschaften können im <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> sind <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> und <ph id="ph5">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The typical property in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> programming that is set in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> and takes one or more <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> objects as values is the <ph id="ph4">&lt;xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Die Eigenschaft in der <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> also programming legen in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> und dauert mindestens <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> Objekte als Werte ist die <ph id="ph4">&lt;xref:System.Windows.UIElement.InputBindings%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>XAML Object Element Usage</source>
          <target state="translated">Verwendung von XAML-Objektelementen</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>inputBindingDerivedClass…/<ept id="p1">*</ept><ph id="ph2">&gt;</ph></source>
          <target state="translated"><ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>inputBindingDerivedClass…/<ept id="p1">*</ept><ph id="ph2">&gt;</ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>XAML Values</source>
          <target state="translated">XAML-Werte</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>A derived class of <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> that supports object element syntax, such as <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Eine abgeleitete Klasse von <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> , die Syntax der Object-Element, z. B. unterstützt <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> oder <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>See Remarks.</source>
          <target state="translated">Siehe Hinweise.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> to bind a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> to the <ph id="ph3">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A&gt;</ph> command.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie eine <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> zum Binden einer <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> auf die <ph id="ph3">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A&gt;</ph> Befehl.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>When the key gesture is performed, the Open command is invoked.</source>
          <target state="translated">Wenn die Tastenkombination ausgeführt wird, wird der Befehl zum Öffnen aufgerufen.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The following examples show how to bind a custom command to <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> objects.</source>
          <target state="translated">Den folgenden Beispielen wird veranschaulicht, wie Sie einen benutzerdefinierten Befehl zum Binden <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> Objekte.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>These examples create an application that enables the user to change the background color by performing one of the following actions:</source>
          <target state="translated">In diesen Beispielen erstellen Sie eine Anwendung, die dem Benutzer ermöglicht, die die Hintergrundfarbe ändern, indem Sie eine der folgenden Aktionen ausführen:</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>Clicking a button.</source>
          <target state="translated">Klicken Sie auf eine Schaltfläche.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>Pressing CTRL+C.</source>
          <target state="translated">STRG + C drücken.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>Right-clicking a <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> (outside the <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>).</source>
          <target state="translated">Mit der rechten Maustaste ein <ph id="ph1">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> (außerhalb der <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The first example creates a class named <ph id="ph1">`SimpleDelegateCommand`</ph>.</source>
          <target state="translated">Im erste Beispiel erstellt eine Klasse namens <ph id="ph1">`SimpleDelegateCommand`</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>This class accepts a delegate so that the object creating the command can define the action that occurs when the command executes.</source>
          <target state="translated">Diese Klasse akzeptiert einen Delegaten, sodass das Objekt, das den Befehl erstellt die Aktion definieren kann, die auftritt, wenn der Befehl ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source><ph id="ph1">`SimpleDelegateCommand`</ph> also defines properties that specify what key and mouse input invokes the command.</source>
          <target state="translated"><ph id="ph1">`SimpleDelegateCommand`</ph> definiert auch Eigenschaften, die angeben, welche Schlüssel und eine Maus Eingabe Ruft den Befehl.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source><ph id="ph1">`GestureKey`</ph> and <ph id="ph2">`GestureModifier`</ph> specify the keyboard input; <ph id="ph3">`MouseGesture`</ph> specifies the mouse input.</source>
          <target state="translated"><ph id="ph1">`GestureKey`</ph> und <ph id="ph2">`GestureModifier`</ph> Geben Sie die Tastatureingaben; <ph id="ph3">`MouseGesture`</ph> gibt die Mauseingabe an.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The following example creates and initializes the <ph id="ph1">`ColorChangeCommand`</ph>, which is a <ph id="ph2">`SimpleDelegateCommand`</ph>.</source>
          <target state="translated">Das folgende Beispiel erstellt und initialisiert die <ph id="ph1">`ColorChangeCommand`</ph>, also eine <ph id="ph2">`SimpleDelegateCommand`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The example also defines the method that executes when the command is invoked and sets the <ph id="ph1">`GestureKey`</ph>, <ph id="ph2">`GestureModifier`</ph>, and <ph id="ph3">`MouseGesture`</ph> properties.</source>
          <target state="translated">Im Beispiel definiert auch die Methode, die ausgeführt wird, wenn der Befehl aufgerufen wird, und legt die <ph id="ph1">`GestureKey`</ph>, <ph id="ph2">`GestureModifier`</ph>, und <ph id="ph3">`MouseGesture`</ph> Eigenschaften.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>An application would call the <ph id="ph1">`InitializeCommand`</ph> method when the program begins, such as in the constructor of a <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>.</source>
          <target state="translated">Eine Anwendung aufrufen würde die <ph id="ph1">`InitializeCommand`</ph> Methode, wenn das Programm beginnt, z. B. in den Konstruktor des eine <ph id="ph2">&lt;xref:System.Windows.Window&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>Finally, the following example creates the user interface.</source>
          <target state="translated">Im folgende Beispiel wird schließlich die Benutzeroberfläche erstellt.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The example adds a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and a <ph id="ph2">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> to a <ph id="ph3">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> that contains a <ph id="ph4">&lt;xref:System.Windows.Controls.Button&gt;</ph> and a <ph id="ph5">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</source>
          <target state="translated">Im Beispiel fügt eine <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> und ein <ph id="ph2">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> auf eine <ph id="ph3">&lt;xref:System.Windows.Controls.StackPanel&gt;</ph> , enthält eine <ph id="ph4">&lt;xref:System.Windows.Controls.Button&gt;</ph> und ein <ph id="ph5">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>When the user selects an item in the <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, he or she can change the color of the background to the selected color.</source>
          <target state="translated">Wenn der Benutzer wählt ein Element in der <ph id="ph1">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, er oder sie können die Farbe des Hintergrunds der ausgewählten Farbe ändern.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>In each case, the <ph id="ph1">`CommandParameter`</ph> property is bound to the selected item in the <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, and the <ph id="ph3">`Command`</ph> property is bound to the <ph id="ph4">`ColorChangeCommand`</ph>.</source>
          <target state="translated">In jedem Fall die <ph id="ph1">`CommandParameter`</ph> Eigenschaft gebunden ist, um das ausgewählte Element in der <ph id="ph2">&lt;xref:System.Windows.Controls.ListBox&gt;</ph>, und die <ph id="ph3">`Command`</ph> Eigenschaft gebunden ist die <ph id="ph4">`ColorChangeCommand`</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.InputBinding">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType&gt;</ph> properties are bound to the corresponding properties on the <ph id="ph4">`SimpleDelegateCommand`</ph> class.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding.Key%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding.Modifiers%2A?displayProperty=nameWithType&gt;</ph>, und <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding.MouseAction%2A?displayProperty=nameWithType&gt;</ph> Eigenschaften an die entsprechenden Eigenschaften gebunden sind, auf die <ph id="ph4">`SimpleDelegateCommand`</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.InputBinding">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.#ctor">
          <source>Provides base initialization for classes derived from <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph>.</source>
          <target state="translated">Stellt die Basisinitialisierung für von <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph> abgeleitete Klassen bereit.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> is not technically an abstract class, but the default constructor is deliberately protected access.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> Technisch gesehen eine abstrakte Klasse ist, aber der Standardkonstruktor wird absichtlich Zugriff geschützt.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor">
          <source>This has the effect of making <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> an "abstract" class for <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Dies entspricht dem festlegen, dass <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> eine "abstrakte" Klasse für <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor">
          <source>There are existing properties in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> that have <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usages that expect objects of type <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>, but you cannot specify an <ph id="ph4">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> instance in <ph id="ph5">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Es gibt vorhandene Eigenschaften in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> , auf denen <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Verwendungen, die Objekte des Typs zu erwarten <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>, aber nicht angeben ein <ph id="ph4">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> -Instanz im <ph id="ph5">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor">
          <source>Instead, you can specify one of the device-specific <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> derived classes as values, for instance <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Stattdessen können Sie angeben eines gerätespezifischen <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> abgeleiteten Klassen als Werte für die Instanz <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> oder <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor">
          <source>If you implement a custom <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph> that supports a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage, use this constructor for base initialization.</source>
          <target state="translated">Wenn Sie eine benutzerdefinierte implementieren <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph> , unterstützt eine <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Verwendung "," verwenden Sie diesen Konstruktor für die Basis-Initialisierung.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>The command to associate with <bpt id="p1">&lt;c&gt;</bpt>gesture<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Der Befehl, der <bpt id="p1">&lt;c&gt;</bpt>gesture<ept id="p1">&lt;/c&gt;</ept> zugeordnet werden soll.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>The input gesture to associate with <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Die Eingabegeste, die <bpt id="p1">&lt;c&gt;</bpt>command<ept id="p1">&lt;/c&gt;</ept> zugeordnet werden soll.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph> class with the specified command and input gesture.</source>
          <target state="translated">Initialisiert mit dem angegebenen Befehl und der Eingabestiftbewegung eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>If you are a software developer using existing input binding classes, you generally will not use this constructor, even if you are defining custom commands.</source>
          <target state="translated">Auch wenn Sie benutzerdefinierte Befehle definieren, wird dieses Konstruktors wird im Allgemeinen nicht von als Entwickler von Software mithilfe von vorhandenen Eingaben Binden von Klassen verwenden.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>Instead, you will either use constructors of derived classes (<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>), or you will use this constructor as the base instantiation of a custom class.</source>
          <target state="translated">Stattdessen verwenden Sie entweder Konstruktoren von abgeleiteten Klassen (<ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> und <ph id="ph2">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>), oder verwenden Sie diesen Konstruktor als die Basis Instanziierung einer benutzerdefinierten Klasse.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>Although the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class supports different input devices in principle, in practice you must choose which device the input binding will represent.</source>
          <target state="translated">Obwohl die <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> Klasse unterstützt verschiedene Eingabegeräte grundsätzlich in der Praxis müssen Sie auswählen, welches Gerät die eingabebindung dar.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>You only can set only one <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.Gesture%2A&gt;</ph> value on the input binding, and gestures are device-specific.</source>
          <target state="translated">Nur einstellbaren nur eine <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.Gesture%2A&gt;</ph> Wert eingabebindung und Gesten sind gerätespezifisch.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source>The following example shows how to use this constructor to associate a <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> with a <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">Im folgende Beispiel wird gezeigt, wie dieser Konstruktor verwendet, um Zuordnen einer <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> mit einem <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.InputGesture)">
          <source><ph id="ph1">&lt;paramref name="command" /&gt;</ph> or <ph id="ph2">&lt;paramref name="gesture" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="command" /&gt;</ph> oder <ph id="ph2">&lt;paramref name="gesture" /&gt;</ph> ist <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.CloneCore(System.Windows.Freezable)">
          <source>The object to clone.</source>
          <target state="translated">Das zu klonende Objekt.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.CloneCore(System.Windows.Freezable)">
          <source>Copies the base (non-animated) values of the properties of the specified object.</source>
          <target state="translated">Kopiert die Basiswerte (nicht animiert) der Eigenschaften des angegebenen Objekts.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.CloneCurrentValueCore(System.Windows.Freezable)">
          <source>The object to clone.</source>
          <target state="translated">Das zu klonende Objekt.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.CloneCurrentValueCore(System.Windows.Freezable)">
          <source>Copies the current values of the properties of the specified object.</source>
          <target state="translated">Kopiert die aktuellen Werte der Eigenschaften des angegebenen Objekts.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.InputBinding.Command">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph> associated with this input binding.</source>
          <target state="translated">Ruft die dieser Eingabebindung zugeordnete <ph id="ph1">&lt;see cref="T:System.Windows.Input.ICommand" /&gt;</ph>-Klasse ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>The associated command.</source>
          <target state="translated">Der verknüpfte Befehl.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class does not support <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage because it does not expose a public default constructor (it has a default constructor, but it is protected).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> Klasse unterstützt keine <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Verwendung, da sie keinen öffentlichen Standardkonstruktor verfügbar macht (er verfügt über einen Standardkonstruktor, aber er geschützt ist).</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>However, derived classes can expose a public constructor and therefore, can use properties that are inherited from <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</source>
          <target state="translated">Allerdings abgeleitete Klassen können einen öffentlichen Konstruktor verfügbar machen und können daher aus geerbte Eigenschaften, <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>Two existing <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> derived classes that can be instantiated in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> and can set properties with <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usages are <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Zwei vorhandene <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> abgeleitete Klassen, die in der instanziiert werden können <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> und legen Sie Eigenschaften für <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Auslastung wird <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> und <ph id="ph5">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> references a type converter that enables certain preexisting <ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph> implementations to specify values in the form of a string.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> verweist auf einen Typkonverter, die bestimmte bereits vorhandene ermöglicht <ph id="ph2">&lt;xref:System.Windows.Input.ICommand&gt;</ph> Implementierungen Angabe von Werten in Form einer Zeichenfolge.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>This type conversion behavior sets the attribute value form of this property.</source>
          <target state="translated">Diese Typkonvertierungsverhalten legt die Attributform Wert dieser Eigenschaft fest.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>You can also bind the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> properties to an <ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph> that is defined on an object.</source>
          <target state="translated">Sie auch eine Bindung die <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> Eigenschaften einer <ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph> , die für ein Objekt definiert ist.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>This enables you to define a custom command and associate it with user input.</source>
          <target state="translated">Dadurch können Sie zum Definieren eines benutzerdefinierten Befehls und Benutzereingaben zuordnen.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>For more information, see the second example in <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie im zweite Beispiel <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>XAML Attribute Usage</source>
          <target state="translated">Verwendung von XAML-Attributen</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source><ph id="ph1">&lt;</ph><ph id="ph2">`inputBindingDerivedClass`</ph> <ph id="ph3">`Command`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph>"/&gt;</source>
          <target state="translated"><ph id="ph1">&lt;</ph><ph id="ph2">`inputBindingDerivedClass`</ph> <ph id="ph3">`Command`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph>"/&gt;</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>XAML Property Element Usage</source>
          <target state="translated">Verwendung von XAML-Eigenschaftenelementen</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>XAML Values</source>
          <target state="translated">XAML-Werte</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>A derived class of <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> that supports object element syntax, such as <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Eine abgeleitete Klasse von <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> , die Syntax der Object-Element, z. B. unterstützt <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> oder <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>See Remarks.</source>
          <target state="translated">Siehe Hinweise.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>An object implementation of <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> that supports object element syntax (has a public default constructor).</source>
          <target state="translated">Eine Objekt-Implementierung von <ph id="ph1">&lt;xref:System.Windows.Input.ICommand&gt;</ph> , unterstützt die Syntax der Object-Element (verfügt über einen öffentlichen Standardkonstruktor).</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> to bind a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> to the <ph id="ph3">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType&gt;</ph> command.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie eine <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> zum Binden einer <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> auf die <ph id="ph3">&lt;xref:System.Windows.Input.ApplicationCommands.Open%2A?displayProperty=nameWithType&gt;</ph> Befehl.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Command">
          <source>When the key gesture is performed, the Open command is invoked.</source>
          <target state="translated">Wenn die Tastenkombination ausgeführt wird, wird der Befehl zum Öffnen aufgerufen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.InputBinding.Command">
          <source>The <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.Command" /&gt;</ph> value is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.Command" /&gt;</ph>-Wert ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>Gets or sets the command-specific data for a particular command.</source>
          <target state="translated">Ruft die befehlsspezifischen Daten für einen bestimmten Befehl ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>The command-specific data.</source>
          <target state="translated">Die befehlsspezifischen Daten.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph> property is used to pass specific information to the command when it is executed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph> Eigenschaft wird verwendet, um bestimmte Informationen an den Befehl übergeben werden, bei der Ausführung.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>The type of the data is defined by the command.</source>
          <target state="translated">Der Typ der Daten wird vom Befehl definiert.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>Many commands do not expect command parameters; for these commands, any command parameters passed will be ignored.</source>
          <target state="translated">Viele Befehle erwarten keine Befehlsparameter; für diese Befehle werden alle übergebenen Befehlsparameter ignoriert.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>If the command that an input binding is associated with is a <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph> of the input binding is passed to the <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> handlers through the <ph id="ph4">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</ph> and the <ph id="ph5">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs&gt;</ph> event data when the command is processed.</source>
          <target state="translated">Ist der Befehl, der eingabebindung zugeordnet ist ein <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, die <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph> der Eingabe Bindung wird zum Übergeben der <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> Handler über die <ph id="ph4">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</ph> und die <ph id="ph5">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs&gt;</ph> Ereignisdaten, die beim Verarbeiten des Befehls.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>The data type and purpose of the command parameter are defined differently for each command and can be <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Den Datentyp und den Zweck der Befehlsparameter für jeden Befehl anders definiert und kann <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>You can bind the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> properties to an <ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph> that is defined on an object.</source>
          <target state="translated">Sie binden die <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.Command%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandParameter%2A&gt;</ph>, und <ph id="ph3">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> Eigenschaften einer <ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph> , die für ein Objekt definiert ist.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>This enables you to define a custom command and associate it with user input.</source>
          <target state="translated">Dadurch können Sie zum Definieren eines benutzerdefinierten Befehls und Benutzereingaben zuordnen.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>For more information, see the second example in <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</source>
          <target state="translated">Weitere Informationen finden Sie im zweite Beispiel <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class does not support <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage because it does not expose a public default constructor (it has a default constructor, but it is protected).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> Klasse unterstützt keine <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Verwendung, da sie keinen öffentlichen Standardkonstruktor verfügbar macht (er verfügt über einen Standardkonstruktor, aber er geschützt ist).</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>However, derived classes can expose a public constructor and therefore, can set properties that are inherited from <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> with <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage.</source>
          <target state="translated">Allerdings abgeleitete Klassen können einen öffentlichen Konstruktor verfügbar machen, und aus diesem Grund können Eigenschaften festlegen, die von geerbt werden <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> mit <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Verwendung.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>Two existing <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> derived classes that can be instantiated in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> and can set properties in <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> are <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Zwei vorhandene <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> abgeleitete Klassen, die in der instanziiert werden können <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> und legen Sie Eigenschaften können im <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> sind <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> und <ph id="ph5">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>XAML Attribute Usage</source>
          <target state="translated">Verwendung von XAML-Attributen</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>XAML Property Element Usage</source>
          <target state="translated">Verwendung von XAML-Eigenschaftenelementen</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>XAML Values</source>
          <target state="translated">XAML-Werte</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>A derived class of <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> that supports object element syntax, such as <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Eine abgeleitete Klasse von <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> , die Syntax der Object-Element, z. B. unterstützt <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> oder <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>See Remarks.</source>
          <target state="translated">Siehe Hinweise.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>A string that is processed by a particular command.</source>
          <target state="translated">Eine Zeichenfolge, die von einem bestimmten Befehl verarbeitet wird.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>Strings are the common type used for command parameters because they can be easily set in <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</source>
          <target state="translated">Zeichenfolgen sind der allgemeine Typ für Parameter des Befehls verwendet werden, da sie leicht können, in festgelegt werden <ph id="ph1">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>For the expected string format and its purpose, see the documentation for the particular command that the input binding is associated with.</source>
          <target state="translated">Das erwartete Zeichenfolgenformat und ihren Zweck finden Sie in der Dokumentation für einen bestimmten Befehl, dem die Eingabe Bindung zugeordnet ist.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>Many commands do not expect parameters.</source>
          <target state="translated">Viele Befehle erwarten keine Parameter.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>An object that is processed by a particular command.</source>
          <target state="translated">Ein Objekt, das von einem bestimmten Befehl verarbeitet wird.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>All existing <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> commands use strings.</source>
          <target state="translated">Alle vorhandenen <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> Befehle unstrukturierte Zeichenfolgen verwenden.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>Therefore, this property element syntax is only relevant for custom command scenarios.</source>
          <target state="translated">Daher ist diese Eigenschaftenelementsyntax nur für Szenarien mit benutzerdefinierten Befehlen relevant.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandParameter">
          <source>In order to support this syntax, the <ph id="ph1">`commandParameterObject`</ph> object must also support object element syntax (must have a public default constructor).</source>
          <target state="translated">Um diese Syntax zu unterstützen die <ph id="ph1">`commandParameterObject`</ph> Objekt muss auch die Syntax der Object-Element (muss über einen öffentlichen Standardkonstruktor verfügen) unterstützen.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.InputBinding.CommandParameterProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.CommandParameter" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.CommandParameter" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.InputBinding.CommandProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.Command" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.Command" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>Gets or sets the target element of the command.</source>
          <target state="translated">Ruft das Zielelement des Befehls ab oder legt dieses fest.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>The target of the command.</source>
          <target state="translated">Das Ziel des Befehls.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>In the <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> commanding system, the <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> property on an <ph id="ph3">&lt;xref:System.Windows.Input.ICommandSource&gt;</ph> object is applicable only when the <ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph> is a <ph id="ph5">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">In der <ph id="ph1">[!INCLUDE[TLA#tla_wpf](~/includes/tlasharptla-wpf-md.md)]</ph> Befehlssystem, die <ph id="ph2">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> Eigenschaft auf eine <ph id="ph3">&lt;xref:System.Windows.Input.ICommandSource&gt;</ph> Objekt ist nur anwendbar, wenn die <ph id="ph4">&lt;xref:System.Windows.Input.ICommand&gt;</ph> ist eine <ph id="ph5">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> is set on an <ph id="ph2">&lt;xref:System.Windows.Input.ICommandSource&gt;</ph> and the corresponding command is not a <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, the command target is ignored.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> festgelegt ist, auf ein <ph id="ph2">&lt;xref:System.Windows.Input.ICommandSource&gt;</ph> und der entsprechende Befehl ist kein <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, das Befehlsziel wird ignoriert.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>When used with a <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, the command target is the object on which the <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.Executed&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager.CanExecute&gt;</ph> events are raised.</source>
          <target state="translated">Bei Verwendung mit einem <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>, das Befehlsziel ist das Objekt auf dem die <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.Executed&gt;</ph> und <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager.CanExecute&gt;</ph> Ereignisse ausgelöst werden.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> property is not set, the element with keyboard focus is used as the target.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding.CommandTarget%2A&gt;</ph> Eigenschaft nicht festgelegt ist, wird das Element mit dem Tastaturfokus als Ziel verwendet.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class itself does not support <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage, because it does not expose a public default constructor (there is a default constructor, but it is protected).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> Klasse selbst unterstützt keine <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Verwendung ",", da sie keinen öffentlichen Standardkonstruktor verfügbar macht (es ist ein Standardkonstruktor, aber er geschützt ist).</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>However, derived classes can expose a public constructor and therefore can set properties that are inherited from <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> with a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage.</source>
          <target state="translated">Allerdings abgeleitete Klassen können einen öffentlichen Konstruktor verfügbar machen, und aus diesem Grund können Eigenschaften festlegen, die von geerbt werden <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> mit einem <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Verwendung.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>Two existing <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> derived classes that can be instantiated in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> and can set properties in <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> are <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Zwei vorhandene <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> abgeleitete Klassen, die in der instanziiert werden können <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> und legen Sie Eigenschaften können im <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> sind <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> und <ph id="ph5">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>XAML Attribute Usage</source>
          <target state="translated">Verwendung von XAML-Attributen</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>XAML Values</source>
          <target state="translated">XAML-Werte</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>A derived class of <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> that supports object element syntax, such as <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Eine abgeleitete Klasse von <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> , die Syntax der Object-Element, z. B. unterstützt <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> oder <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>See Remarks.</source>
          <target state="translated">Siehe Hinweise.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>A string that uses a type of binding syntax that can return an object reference to an existing named element.</source>
          <target state="translated">Eine Zeichenfolge, die einen Typ der Bindungssyntax verwendet, die einen Objektverweis zu einer vorhandenen zurückgeben, können mit dem Namen Element aus.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.CommandTarget">
          <source>See Remarks.</source>
          <target state="translated">Siehe Hinweise.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="F:System.Windows.Input.InputBinding.CommandTargetProperty">
          <source>Identifies the <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.CommandTarget" /&gt;</ph> dependency property.</source>
          <target state="translated">Bezeichnet die <ph id="ph1">&lt;see cref="P:System.Windows.Input.InputBinding.CommandTarget" /&gt;</ph>-Abhängigkeitseigenschaft.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.CreateInstanceCore">
          <source>Creates an instance of an <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph>.</source>
          <target state="translated">Erstellt eine Instanz eines <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputBinding" /&gt;</ph>-Objekts.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.CreateInstanceCore">
          <source>The new object.</source>
          <target state="translated">Das neue Objekt.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputGesture" /&gt;</ph> associated with this input binding.</source>
          <target state="translated">Ruft die dieser Eingabebindung zugeordnete <ph id="ph1">&lt;see cref="T:System.Windows.Input.InputGesture" /&gt;</ph>-Klasse ab oder legt diese fest.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>The associated gesture.</source>
          <target state="translated">Die zugeordnete Stiftbewegung.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>The default is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>The input gesture is the action that invokes the command.</source>
          <target state="translated">Die Eingabeaktion ist die Aktion, die den Befehl aufruft.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>Examples of input gestures in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> are <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Input.MouseGesture&gt;</ph>.</source>
          <target state="translated">Beispiele für Eingabeaktionen in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph> sind <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> und <ph id="ph3">&lt;xref:System.Windows.Input.MouseGesture&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> is a combination of a <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> and a set of <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> ist eine Kombination aus einem <ph id="ph2">&lt;xref:System.Windows.Input.Key&gt;</ph> und einen Satz von <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Input.MouseGesture&gt;</ph> is a combination of a <ph id="ph2">&lt;xref:System.Windows.Input.MouseAction&gt;</ph> and a set of <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;xref:System.Windows.Input.MouseGesture&gt;</ph> ist eine Kombination aus einem <ph id="ph2">&lt;xref:System.Windows.Input.MouseAction&gt;</ph> und einen Satz von <ph id="ph3">&lt;xref:System.Windows.Input.ModifierKeys&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> class itself does not support <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage, because it does not expose a public default constructor (there is a default constructor, but it is protected).</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> Klasse selbst unterstützt keine <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Verwendung ",", da sie keinen öffentlichen Standardkonstruktor verfügbar macht (es ist ein Standardkonstruktor, aber er geschützt ist).</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>However, derived classes can expose a public constructor and thus can set properties that are inherited from <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> with a <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> usage.</source>
          <target state="translated">Allerdings abgeleitete Klassen können einen öffentlichen Konstruktor verfügbar machen und somit Festlegen von geerbte Eigenschaften, <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> mit einem <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> Verwendung.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>Two existing <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> derived classes that can be instantiated in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> and can set properties in <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> are <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Zwei vorhandene <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> abgeleitete Klassen, die in der instanziiert werden können <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> und legen Sie Eigenschaften können im <ph id="ph3">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> sind <ph id="ph4">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> und <ph id="ph5">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>XAML Attribute Usage</source>
          <target state="translated">Verwendung von XAML-Attributen</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source><ph id="ph1">&lt;</ph><ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> <ph id="ph3">`Gesture`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>"/&gt;</source>
          <target state="translated"><ph id="ph1">&lt;</ph><ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> <ph id="ph3">`Gesture`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph>"/&gt;</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> oder –</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source><ph id="ph1">&lt;</ph><ph id="ph2">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> <ph id="ph3">`Gesture`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.MouseGesture&gt;</ph>"/&gt;</source>
          <target state="translated"><ph id="ph1">&lt;</ph><ph id="ph2">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph> <ph id="ph3">`Gesture`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.MouseGesture&gt;</ph>"/&gt;</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> oder –</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source><ph id="ph1">&lt;</ph><ph id="ph2">`inputBindingDerivedClass`</ph> <ph id="ph3">`Gesture`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.InputGesture&gt;</ph>"/&gt;</source>
          <target state="translated"><ph id="ph1">&lt;</ph><ph id="ph2">`inputBindingDerivedClass`</ph> <ph id="ph3">`Gesture`</ph>="<ph id="ph4">&lt;xref:System.Windows.Input.InputGesture&gt;</ph>"/&gt;</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>XAML Property Element Usage</source>
          <target state="translated">Verwendung von XAML-Eigenschaftenelementen</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>XAML Values</source>
          <target state="translated">XAML-Werte</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>A derived class of <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> that supports object element syntax, such as <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> or <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</source>
          <target state="translated">Eine abgeleitete Klasse von <ph id="ph1">&lt;xref:System.Windows.Input.InputBinding&gt;</ph> , die Syntax der Object-Element, z. B. unterstützt <ph id="ph2">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> oder <ph id="ph3">&lt;xref:System.Windows.Input.MouseBinding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>See Remarks.</source>
          <target state="translated">Siehe Hinweise.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>A custom derived class of <ph id="ph1">&lt;xref:System.Windows.Input.InputGesture&gt;</ph> that supports object element syntax.</source>
          <target state="translated">Eine benutzerdefinierte abgeleitete Klasse der <ph id="ph1">&lt;xref:System.Windows.Input.InputGesture&gt;</ph> , unterstützt die Syntax der Object-Element.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>The following example shows how to use a <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> to bind a <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> to a <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">Das folgende Beispiel zeigt, wie Sie eine <ph id="ph1">&lt;xref:System.Windows.Input.KeyBinding&gt;</ph> zum Binden einer <ph id="ph2">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> auf eine <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.InputBinding.Gesture">
          <source>When the <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> ALT+L is pressed, the <ph id="ph2">&lt;xref:System.Windows.Input.ApplicationCommands.Close%2A&gt;</ph> command is invoked.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Windows.Input.KeyGesture&gt;</ph> ALT + L gedrückt wird, die <ph id="ph2">&lt;xref:System.Windows.Input.ApplicationCommands.Close%2A&gt;</ph> Befehl aufgerufen wird.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.GetAsFrozenCore(System.Windows.Freezable)">
          <source>The object to clone.</source>
          <target state="translated">Das zu klonende Objekt.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.GetAsFrozenCore(System.Windows.Freezable)">
          <source>Makes the instance a frozen clone of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> by using base (non-animated) property values.</source>
          <target state="translated">Definiert die Instanz als fixierten Klon des angegebenen <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph>-Objekts mithilfe von Basiseigenschaftswerten (nicht animiert).</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
          <source>The object to clone.</source>
          <target state="translated">Das zu klonende Objekt.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
          <source>Makes the current instance a frozen clone of the specified <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph>.</source>
          <target state="translated">Legt die aktuelle Instanz als fixierten Klon des angegebenen <ph id="ph1">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> fest.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.InputBinding.GetCurrentValueAsFrozenCore(System.Windows.Freezable)">
          <source>If the object has animated dependency properties, their current animated values are copied.</source>
          <target state="translated">Wenn das Objekt über animierte Abhängigkeitseigenschaften verfügt, werden die aktuellen animierten Werte kopiert.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>