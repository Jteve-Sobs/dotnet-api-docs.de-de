<Type Name="KeyStates" FullName="System.Windows.Input.KeyStates">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6909d0d7ce6fb32448e939603161dc12c39d14ad" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82496786" /></Metadata><TypeSignature Language="C#" Value="public enum KeyStates" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed KeyStates extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyStates" />
  <TypeSignature Language="VB.NET" Value="Public Enum KeyStates" />
  <TypeSignature Language="C++ CLI" Value="public enum class KeyStates" />
  <TypeSignature Language="F#" Value="type KeyStates = " />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Flags</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="eb076-101">Gibt Konstanten an, die den Zustand einer Taste definieren.</span><span class="sxs-lookup"><span data-stu-id="eb076-101">Specifies constants that define the state of a key.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eb076-102">Die `KeyStates`-Klasse ist eine bitweise Enumeration.</span><span class="sxs-lookup"><span data-stu-id="eb076-102">The `KeyStates` class is a bit field (bitwise) enumeration.</span></span> <span data-ttu-id="eb076-103">Daher kann sich ein Schlüssel in mehreren Zuständen befinden.</span><span class="sxs-lookup"><span data-stu-id="eb076-103">Therefore, a key can be in multiple states.</span></span> <span data-ttu-id="eb076-104">Beispielsweise kann ein Schlüssel sowohl den Status `Down` als auch den `Toggled` Status aufweisen.</span><span class="sxs-lookup"><span data-stu-id="eb076-104">For example, a key could be in the `Down` state as well as in the `Toggled` state.</span></span> <span data-ttu-id="eb076-105">Verwenden Sie bitvorgänge, um den genauen Zustand oder die Zustände des Schlüssels zu ermitteln.</span><span class="sxs-lookup"><span data-stu-id="eb076-105">Use bit operations to determine the exact state or states the key is in.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eb076-106">Im folgenden Beispiel wird die Farbe einer <xref:System.Windows.Controls.Button> geändert, wenn die `KeyStates` des im <xref:System.Windows.Input.KeyEventArgs> übergebenen Schlüssels `Down`ist.</span><span class="sxs-lookup"><span data-stu-id="eb076-106">The following example changes the color of a <xref:System.Windows.Controls.Button> if the `KeyStates` of the key passed in the <xref:System.Windows.Input.KeyEventArgs> is `Down`.</span></span> <span data-ttu-id="eb076-107">Der Status des Schlüssels wird mithilfe eines bitweisen `AND` Vorgangs bestimmt.</span><span class="sxs-lookup"><span data-stu-id="eb076-107">The state of the key is determined by using a bitwise `AND` operation.</span></span>  <span data-ttu-id="eb076-108">Das gleiche Verfahren kann verwendet werden, um zu bestimmen, ob ein Schlüssel über mehrere Zustände verfügt, z. b. den Zustand "`Toggled`" und "`Down`".</span><span class="sxs-lookup"><span data-stu-id="eb076-108">The same technique can be used to determine whether a key has multiple states, such as being in the `Toggled` state and the `Down` state.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyStatesDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeystatesdown)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyStatesDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeystatesdown)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyEventArgs" />
    <altmember cref="T:System.Windows.Input.Key" />
  </Docs>
  <Members>
    <Member MemberName="Down">
      <MemberSignature Language="C#" Value="Down" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Input.KeyStates Down = unsigned int8(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyStates.Down" />
      <MemberSignature Language="VB.NET" Value="Down" />
      <MemberSignature Language="C++ CLI" Value="Down" />
      <MemberSignature Language="F#" Value="Down = 1" Usage="System.Windows.Input.KeyStates.Down" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary><span data-ttu-id="eb076-109">Die Taste wird gedrückt.</span><span class="sxs-lookup"><span data-stu-id="eb076-109">The key is pressed.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="None">
      <MemberSignature Language="C#" Value="None" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Input.KeyStates None = unsigned int8(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyStates.None" />
      <MemberSignature Language="VB.NET" Value="None" />
      <MemberSignature Language="C++ CLI" Value="None" />
      <MemberSignature Language="F#" Value="None = 0" Usage="System.Windows.Input.KeyStates.None" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="eb076-110">Die Taste wird nicht gedrückt.</span><span class="sxs-lookup"><span data-stu-id="eb076-110">The key is not pressed.</span></span></summary>
      </Docs>
    </Member>
    <Member MemberName="Toggled">
      <MemberSignature Language="C#" Value="Toggled" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Input.KeyStates Toggled = unsigned int8(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyStates.Toggled" />
      <MemberSignature Language="VB.NET" Value="Toggled" />
      <MemberSignature Language="C++ CLI" Value="Toggled" />
      <MemberSignature Language="F#" Value="Toggled = 2" Usage="System.Windows.Input.KeyStates.Toggled" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary><span data-ttu-id="eb076-111">Die Taste wird umgeschaltet.</span><span class="sxs-lookup"><span data-stu-id="eb076-111">The key is toggled.</span></span></summary>
      </Docs>
    </Member>
  </Members>
</Type>
