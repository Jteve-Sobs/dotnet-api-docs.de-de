<Type Name="Keyboard" FullName="System.Windows.Input.Keyboard">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e1997f0ce8dbb8cafc8ea0f4de19dfc8fe2534af" /><Meta Name="ms.sourcegitcommit" Value="1b924db57b3a1cf768d98c21f9b988d6966a0f2b" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="03/06/2020" /><Meta Name="ms.locfileid" Value="78831996" /></Metadata><TypeSignature Language="C#" Value="public static class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard abstract sealed" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="18f90-101">Stellt das Tastaturgerät dar.</span><span class="sxs-lookup"><span data-stu-id="18f90-101">Represents the keyboard device.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-102">Die <xref:System.Windows.Input.Keyboard>-Klasse bietet Tastatur bezogene Ereignisse, Methoden und Eigenschaften, die Informationen zum Status der Tastatur bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="18f90-102">The <xref:System.Windows.Input.Keyboard> class provides keyboard-related events, methods, and properties that provide information regarding the state of the keyboard.</span></span>  
  
 <span data-ttu-id="18f90-103">Alle Ereignisse, die <xref:System.Windows.Input.Keyboard> als angefügtes Ereignis definiert, werden auch von den Basiselement Klassen <xref:System.Windows.UIElement> und <xref:System.Windows.ContentElement> als neues Routing Ereignis verfügbar gemacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-103">Each of the events that <xref:System.Windows.Input.Keyboard> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="18f90-104">Im Allgemeinen ist es einfacher, Tastatur Ereignisse für eine Anwendung auf <xref:System.Windows.UIElement> und <xref:System.Windows.ContentElement>zu verarbeiten, anstatt die <xref:System.Windows.Input.Keyboard> Ereignisse zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="18f90-104">Generally, it is more convenient to handle keyboard events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Keyboard> events.</span></span> <span data-ttu-id="18f90-105">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="18f90-106">Damit ein Element Tastatureingaben empfängt, muss das Element als focbrauchbar sein.</span><span class="sxs-lookup"><span data-stu-id="18f90-106">In order for an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="18f90-107">Die meisten <xref:System.Windows.UIElement> von abgeleiteten Objekten können standardmäßig verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="18f90-107">Most <xref:System.Windows.UIElement> derived objects are focusable by default.</span></span> <span data-ttu-id="18f90-108">Legen Sie andernfalls die <xref:System.Windows.UIElement.Focusable%2A>-Eigenschaft für das Basiselement auf `true`fest, damit ein Element Fokus verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="18f90-108">Otherwise, to make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="18f90-109">Weitere Informationen zu den Basiselementen finden Sie unter [Übersicht über Basiselemente](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-109">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 <span data-ttu-id="18f90-110"><xref:System.Windows.Controls.Panel> Klassen, z. b. <xref:System.Windows.Controls.StackPanel> und <xref:System.Windows.Controls.Canvas>, legen Sie den Standardwert <xref:System.Windows.UIElement.Focusable%2A> auf `false`fest.</span><span class="sxs-lookup"><span data-stu-id="18f90-110"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`.</span></span> <span data-ttu-id="18f90-111">Damit diese Objekte den Tastaturfokus erhalten, muss <xref:System.Windows.UIElement.Focusable%2A> auf `true`festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="18f90-111">Therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="18f90-112">Der Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt.</span><span class="sxs-lookup"><span data-stu-id="18f90-112">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="18f90-113">Das Element mit dem Tastaturfokus ist <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> auf `true`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="18f90-113">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="18f90-114">Es darf nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="18f90-114">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="18f90-115">Der logische Fokus bezieht sich auf das Objekt innerhalb eines Fokusbereichs, der den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="18f90-115">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="18f90-116">Weitere Informationen zu Fokus, Tastaturfokus und logischem Fokus finden Sie unter Übersicht über [Eingaben](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-116">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="18f90-117">Die statischen Member der <xref:System.Windows.Input.Keyboard>-Klasse delegieren an die primäre <xref:System.Windows.Input.KeyboardDevice> des aufrufenden Threads, sodass Sie nicht notwendigerweise Thread sicher sind.</span><span class="sxs-lookup"><span data-stu-id="18f90-117">The static members of the <xref:System.Windows.Input.Keyboard> class delegate to the primary <xref:System.Windows.Input.KeyboardDevice> of the calling thread, so they are not necessarily thread-safe.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18f90-118">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>-Methode verwendet wird, um zu bestimmen, ob sich ein Schlüssel im UMSCHALT Zustand befindet.</span><span class="sxs-lookup"><span data-stu-id="18f90-118">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine if a key is in the toggled state.</span></span> <span data-ttu-id="18f90-119">Wenn die <xref:System.Windows.Input.Key>, die an <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> übertragen wird, umgeschaltet wird, wird der Hintergrund einer Schaltfläche geändert.</span><span class="sxs-lookup"><span data-stu-id="18f90-119">If the <xref:System.Windows.Input.Key> passed to <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> is toggled, the background of a button is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
    <altmember cref="T:System.Windows.Input.KeyEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="AddGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-120">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-120">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-121">Der Ereignishandler, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-121">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="18f90-122">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="18f90-122">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-123">Diese Methode stellt Accessoren für angefügte Eigenschaften für den Code Zugriff und die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Attribut Verarbeitung des <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angehängten Ereignisses bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-123">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-124">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-124">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-125">Der Ereignishandler, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-125">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="18f90-126">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="18f90-126">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-127">Diese Methode stellt Accessoren für angefügte Eigenschaften für den Code Zugriff und die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Attribut Verarbeitung des <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> angehängten Ereignisses bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-127">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-128">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-129">Der Ereignishandler, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-129">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="18f90-130">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyDown" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="18f90-130">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-131">Diese Methode stellt Accessoren für angefügte Eigenschaften für den Code Zugriff und die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Attribut Verarbeitung des <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angehängten Ereignisses bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-131">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-132">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-132">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-133">Der Ereignishandler, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-133">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="18f90-134">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyUp" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="18f90-134">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-135">Diese Methode stellt Accessoren für angefügte Eigenschaften für den Code Zugriff und die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Attribut Verarbeitung des <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angehängten Ereignisses bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-135">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-136">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-136">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-137">Der Ereignishandler, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-137">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="18f90-138">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="18f90-138">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-139">Diese Methode stellt Accessoren für angefügte Eigenschaften für den Code Zugriff und die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Attribut Verarbeitung des <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angehängten Ereignisses bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-139">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-140">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-141">Der Ereignishandler, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-141">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="18f90-142">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="18f90-142">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-143">Diese Methode stellt Accessoren für angefügte Eigenschaften für den Code Zugriff und die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Attribut Verarbeitung des <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angehängten Ereignisses bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-143">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-144">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-144">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-145">Der Ereignishandler, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-145">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="18f90-146">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="18f90-146">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-147">Diese Methode stellt Accessoren für angefügte Eigenschaften für den Code Zugriff und die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Attribut Verarbeitung des <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> angehängten Ereignisses bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-147">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-148">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-148">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-149">Der Ereignishandler, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-149">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="18f90-150">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="18f90-150">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-151">Diese Methode stellt Accessoren für angefügte Eigenschaften für den Code Zugriff und die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Attribut Verarbeitung des <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angehängten Ereignisses bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-151">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-152">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-152">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-153">Der Ereignishandler, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-153">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="18f90-154">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="18f90-154">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-155">Diese Methode stellt Accessoren für angefügte Eigenschaften für den Code Zugriff und die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Attribut Verarbeitung des <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angehängten Ereignisses bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-155">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-156">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-156">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-157">Der Ereignishandler, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-157">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="18f90-158">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="18f90-158">Adds a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-159">Diese Methode stellt Accessoren für angefügte Eigenschaften für den Code Zugriff und die [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Attribut Verarbeitung des <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angehängten Ereignisses bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-159">This method provides attached property accessors for code access and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute processing of the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFocus">
      <MemberSignature Language="C#" Value="public static void ClearFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.ClearFocus" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearFocus();" />
      <MemberSignature Language="F#" Value="static member ClearFocus : unit -&gt; unit" Usage="System.Windows.Input.Keyboard.ClearFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="18f90-160">Löscht den Fokus.</span><span class="sxs-lookup"><span data-stu-id="18f90-160">Clears focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-161">Wenn sich der Fokus innerhalb eines Win32-Fensters befindet, ruft WPF die <xref:System.Windows.Input.Keyboard.ClearFocus%2A> Methode bei der Wiederherstellung des Fokus auf, wenn ein Menü geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-161">If focus is within a Win32 window, WPF calls the <xref:System.Windows.Input.Keyboard.ClearFocus%2A> method on restoration of focus when a menu is closed.</span></span>  
  
 <span data-ttu-id="18f90-162">Wenn Sie den Menü Modus belassen, wird der Win32-Fokus an das gehostete untergeordnete HWND zurückgegeben, und kein Element hat den WPF-Fokus.</span><span class="sxs-lookup"><span data-stu-id="18f90-162">When leaving menu mode, Win32 focus is returned to the hosted child HWND, and no element has WPF focus.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRestoreFocusMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultRestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RestoreFocusMode DefaultRestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRestoreFocusMode : System.Windows.Input.RestoreFocusMode with get, set" Usage="System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-163">Ruft das Verhalten von [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] beim Wiederherstellen des Fokus ab oder legt es fest.</span><span class="sxs-lookup"><span data-stu-id="18f90-163">Gets or sets the behavior of [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] when restoring focus.</span></span></summary>
        <value><span data-ttu-id="18f90-164">Ein Enumerationswert, der das Verhalten von [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] beim Wiederherstellen des Fokus angibt.</span><span class="sxs-lookup"><span data-stu-id="18f90-164">An enumeration value that specifies the behavior of [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] when restoring focus.</span></span> <span data-ttu-id="18f90-165">Der Standardwert in <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span><span class="sxs-lookup"><span data-stu-id="18f90-165">The default in <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Focus (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement Focus(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Focus (element As IInputElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ Focus(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Focus : System.Windows.IInputElement -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.Focus element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-166">Das Element, für das der Tastaturfokus festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-166">The element on which to set keyboard focus.</span></span></param>
        <summary><span data-ttu-id="18f90-167">Legt den Tastaturfokus für das angegebene Element fest.</span><span class="sxs-lookup"><span data-stu-id="18f90-167">Sets keyboard focus on the specified element.</span></span></summary>
        <returns><span data-ttu-id="18f90-168">Das Element mit dem Tastaturfokus.</span><span class="sxs-lookup"><span data-stu-id="18f90-168">The element with keyboard focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-169">Damit ein Element Tastatureingaben empfängt, muss das Element als Fokus verwendbar sein.</span><span class="sxs-lookup"><span data-stu-id="18f90-169">For an element to receive keyboard input, the element must be focusable.</span></span> <span data-ttu-id="18f90-170">Legen Sie die <xref:System.Windows.UIElement.Focusable%2A>-Eigenschaft für das Basiselement auf `true`fest, damit ein Element Fokus fähig ist.</span><span class="sxs-lookup"><span data-stu-id="18f90-170">To make an element focusable, set the <xref:System.Windows.UIElement.Focusable%2A> property on the base element to `true`.</span></span>  <span data-ttu-id="18f90-171">Weitere Informationen zu den Basiselementen finden Sie unter [Übersicht über Basiselemente](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-171">For more information on the base elements, see [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  <span data-ttu-id="18f90-172"><xref:System.Windows.Controls.Panel> Klassen, z. b. <xref:System.Windows.Controls.StackPanel> und <xref:System.Windows.Controls.Canvas>, legen Sie den Standardwert <xref:System.Windows.UIElement.Focusable%2A> auf `false`fest. damit diese Objekte den Tastaturfokus erhalten, muss <xref:System.Windows.UIElement.Focusable%2A> auf `true`festgelegt werden.</span><span class="sxs-lookup"><span data-stu-id="18f90-172"><xref:System.Windows.Controls.Panel> classes, such as <xref:System.Windows.Controls.StackPanel> and <xref:System.Windows.Controls.Canvas>, set the default value of <xref:System.Windows.UIElement.Focusable%2A> to `false`; therefore, for these objects to obtain keyboard focus, <xref:System.Windows.UIElement.Focusable%2A> must be set to `true`.</span></span>  
  
 <span data-ttu-id="18f90-173">Der Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt.</span><span class="sxs-lookup"><span data-stu-id="18f90-173">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="18f90-174">Das Element mit dem Tastaturfokus ist <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> auf `true`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="18f90-174">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="18f90-175">Es darf nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="18f90-175">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="18f90-176">Der logische Fokus bezieht sich auf das Objekt innerhalb eines Fokusbereichs, der den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="18f90-176">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="18f90-177">Weitere Informationen zu Fokus, Tastaturfokus und logischem Fokus finden Sie unter Übersicht über [Eingaben](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-177">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="18f90-178">Ein Element mit dem Tastaturfokus verfügt auch über den logischen Fokus auf den Fokusbereich, zu dem das Element gehört.</span><span class="sxs-lookup"><span data-stu-id="18f90-178">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="18f90-179">Ein Element mit dem logischen Fokus kann den Tastaturfokus aufweisen oder nicht.</span><span class="sxs-lookup"><span data-stu-id="18f90-179">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18f90-180">Das folgende Beispiel zeigt einen <xref:System.Windows.FrameworkElement.Loaded> Ereignishandler, der den Tastaturfokus auf einen <xref:System.Windows.Controls.Button>festlegt.</span><span class="sxs-lookup"><span data-stu-id="18f90-180">The following example shows a <xref:System.Windows.FrameworkElement.Loaded> event handler that sets keyboard focus on a <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[focussample#FocusSampleSetFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplesetfocus)]
 [!code-vb[focussample#FocusSampleSetFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplesetfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ FocusedElement { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedElement : System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-181">Ruft das Element ab, das den Tastaturfokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="18f90-181">Gets the element that has keyboard focus.</span></span></summary>
        <value><span data-ttu-id="18f90-182">Das fokussierte Element.</span><span class="sxs-lookup"><span data-stu-id="18f90-182">The focused element.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-183">Der Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt.</span><span class="sxs-lookup"><span data-stu-id="18f90-183">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="18f90-184">Das Element mit dem Tastaturfokus ist <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> auf `true`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="18f90-184">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="18f90-185">Es darf nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="18f90-185">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="18f90-186">Der logische Fokus bezieht sich auf das Objekt innerhalb eines Fokusbereichs, der den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="18f90-186">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="18f90-187">Weitere Informationen zu Fokus, Tastaturfokus und logischem Fokus finden Sie unter Übersicht über [Eingaben](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-187">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="18f90-188">Ein Element mit dem Tastaturfokus verfügt auch über den logischen Fokus auf den Fokusbereich, zu dem das Element gehört.</span><span class="sxs-lookup"><span data-stu-id="18f90-188">An element with keyboard focus also has logical focus for the focus scope the element belongs to.</span></span>  <span data-ttu-id="18f90-189">Ein Element mit dem logischen Fokus kann den Tastaturfokus aufweisen oder nicht.</span><span class="sxs-lookup"><span data-stu-id="18f90-189">An element with logical focus may or may not have keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18f90-190">Im folgenden Beispiel wird das-Element mit dem Tastaturfokus abgerufen und in einen <xref:System.Windows.Controls.Control>umgewandelt.</span><span class="sxs-lookup"><span data-stu-id="18f90-190">The following example gets the element with keyboard focus and casts it to a <xref:System.Windows.Controls.Control>.</span></span>  <span data-ttu-id="18f90-191">Wenn das Element mit dem Tastaturfokus ein <xref:System.Windows.Controls.Control>ist, wird der Hintergrund des Elements geändert.</span><span class="sxs-lookup"><span data-stu-id="18f90-191">If the element with keyboard focus is a <xref:System.Windows.Controls.Control>, the background of the element is changed.</span></span>  
  
 [!code-csharp[focussample#GetKeyboardFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#getkeyboardfocusedelement)]
 [!code-vb[focussample#GetKeyboardFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#getkeyboardfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyStates">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.KeyStates GetKeyStates(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetKeyStates (key As Key) As KeyStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::KeyStates GetKeyStates(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member GetKeyStates : System.Windows.Input.Key -&gt; System.Windows.Input.KeyStates" Usage="System.Windows.Input.Keyboard.GetKeyStates key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="18f90-192">Der angegebene Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="18f90-192">The specified key.</span></span></param>
        <summary><span data-ttu-id="18f90-193">Ruft den Satz von Tastaturzuständen für die angegebene Taste ab.</span><span class="sxs-lookup"><span data-stu-id="18f90-193">Gets the set of key states for the specified key.</span></span></summary>
        <returns><span data-ttu-id="18f90-194">Eine bitweise Kombination der <see cref="T:System.Windows.Input.KeyStates" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="18f90-194">A bitwise combination of the <see cref="T:System.Windows.Input.KeyStates" /> values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-195"><xref:System.Windows.Input.KeyStates> ist eine Bitfeldenumeration. Daher ist es möglich, dass sich ein Schlüssel in mehreren Zuständen befindet.</span><span class="sxs-lookup"><span data-stu-id="18f90-195"><xref:System.Windows.Input.KeyStates> is a bit field enumeration; therefore, it is possible for a key to be in multiple states.</span></span>  <span data-ttu-id="18f90-196">Ein Schlüssel kann z. b. im gedrückten Zustand und im UMSCHALT Zustand sein.</span><span class="sxs-lookup"><span data-stu-id="18f90-196">For example, a key could be in the pressed state as well as in the toggled state.</span></span>  <span data-ttu-id="18f90-197">Verwenden Sie bitvergleichs Vorgänge, um den genauen Zustand oder die Zustände des Schlüssels zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="18f90-197">Use bit comparison operations to determine the exact state or states the key is in.</span></span>  
  
 <span data-ttu-id="18f90-198">Die <xref:System.Windows.Input.Keyboard>-Klasse stellt eine Reihe statischer Methoden bereit, die auch zum Abrufen von Schlüssel Zustandsinformationen verwendet werden können.</span><span class="sxs-lookup"><span data-stu-id="18f90-198">The <xref:System.Windows.Input.Keyboard> class provides a number of static methods which can also be used to obtain key state information.</span></span>  <span data-ttu-id="18f90-199">Die Methoden lauten wie folgt: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>und <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span><span class="sxs-lookup"><span data-stu-id="18f90-199">The methods are: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, and <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18f90-200">Im folgenden Beispiel wird gezeigt, wie die <xref:System.Windows.Input.Keyboard.GetKeyStates%2A>-Methode verwendet wird, um zu bestimmen, ob sich der <xref:System.Windows.Input.Key.Return> Schlüssel im <xref:System.Windows.Input.KeyStates.Down>-Zustand befindet.</span><span class="sxs-lookup"><span data-stu-id="18f90-200">The following example shows how to use the <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method to determine if the <xref:System.Windows.Input.Key.Return> key is in the <xref:System.Windows.Input.KeyStates.Down> state.</span></span>  <span data-ttu-id="18f90-201">Ein Bit und eine Operation werden verwendet, um die von <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> zurückgegebenen <xref:System.Windows.Input.KeyStates> und den <xref:System.Windows.Input.Key.Down> Zustand zu vergleichen.</span><span class="sxs-lookup"><span data-stu-id="18f90-201">A bit AND operation is used to compare the <xref:System.Windows.Input.KeyStates> returned from <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> and the <xref:System.Windows.Input.Key.Down> state.</span></span> <span data-ttu-id="18f90-202">Wenn der Schlüssel nicht angezeigt wird, wird der Hintergrund einer <xref:System.Windows.Controls.Button> geändert.</span><span class="sxs-lookup"><span data-stu-id="18f90-202">If the key is down, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardgetkeystates)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardgetkeystates)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.KeyStates" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" Usage="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18f90-203">Tritt auf, wenn ein Element den Tastaturfokus erhält.</span><span class="sxs-lookup"><span data-stu-id="18f90-203">Occurs when an element receives keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-204">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-204">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="18f90-205">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="18f90-205">implements attached events as routed events.</span></span> <span data-ttu-id="18f90-206">Bei angefügten Ereignissen handelt es sich im Grunde um ein [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sprach Konzept für Verweise auf Ereignisse, die für Objekte behandelt werden können, die dieses Ereignis nicht definieren, das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] erweitert wird, indem auch das Ereignis zum Durchlaufen einer Route aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-206">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="18f90-207">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. zum Anfügen von Handlern für ein Routing Ereignis im Code verwenden Sie eine angegebene Add \*-Handlermethode.</span><span class="sxs-lookup"><span data-stu-id="18f90-207">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="18f90-208">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-208">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="18f90-209">Der Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt.</span><span class="sxs-lookup"><span data-stu-id="18f90-209">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="18f90-210">Das Element mit dem Tastaturfokus ist <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> auf `true`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="18f90-210">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="18f90-211">Es darf nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="18f90-211">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="18f90-212">Der logische Fokus bezieht sich auf das Objekt innerhalb eines Fokusbereichs, der den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="18f90-212">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="18f90-213">Weitere Informationen zu Fokus, Tastaturfokus und logischem Fokus finden Sie unter Übersicht über [Eingaben](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-213">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="18f90-214">Wenn das <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>-Ereignis oder das <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>-Ereignis behandelt wird, ändert sich der Tastaturfokus.</span><span class="sxs-lookup"><span data-stu-id="18f90-214">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does change.</span></span>  
  
<a name="routedEventInfo_GotKeyboardFocusEvent"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="18f90-215">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="18f90-215">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="18f90-216">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="18f90-216">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.GotKeyboardFocusEvent>|  
|<span data-ttu-id="18f90-217">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="18f90-217">Routing strategy</span></span>|<span data-ttu-id="18f90-218">Blasen</span><span class="sxs-lookup"><span data-stu-id="18f90-218">Bubbling</span></span>|  
|<span data-ttu-id="18f90-219">delegate</span><span class="sxs-lookup"><span data-stu-id="18f90-219">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="18f90-220">Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="18f90-220">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18f90-221">Im folgenden Beispiel wird ein <xref:System.Windows.Controls.TextBox> erstellt und Ereignishandler für das <xref:System.Windows.UIElement.GotKeyboardFocus>-Ereignis und das <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>-Ereignis angefügt.</span><span class="sxs-lookup"><span data-stu-id="18f90-221">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="18f90-222">Wenn das <xref:System.Windows.Controls.TextBox> Tastaturfokus erhält, wird die Hintergrundfarbe geändert, und der Text der <xref:System.Windows.Controls.TextBox> wird gelöscht.</span><span class="sxs-lookup"><span data-stu-id="18f90-222">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="18f90-223">Wenn das <xref:System.Windows.Controls.TextBlock> den Tastaturfokus verliert, wird die Hintergrundfarbe geändert, und es wird eine Methode aufgerufen, die die im Beispiel verwendeten Variablen zurücksetzt.</span><span class="sxs-lookup"><span data-stu-id="18f90-223">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called which resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-224">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-224">Identifies the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-225">Routing Ereignis Bezeichner werden erstellt, wenn Routing Ereignisse registriert werden, und das Ergebnis wird als Feld in der Klasse gespeichert, die das Routing Ereignis registriert.</span><span class="sxs-lookup"><span data-stu-id="18f90-225">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="18f90-226">Diese Bezeichner enthalten einen identifizierenden Namen, den Besitzertyp, den Handlertyp, die Routing Strategie und eine hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-226">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="18f90-227">Sie verwenden diese Bezeichner häufig als Parameter für Ereignis System Methoden, um ein bestimmtes Routing Ereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="18f90-227">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyDown">
      <MemberSignature Language="C#" Value="public static bool IsKeyDown (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyDown(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyDown (key As Key) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyDown(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyDown : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyDown key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="18f90-228">Der angegebene Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="18f90-228">The specified key.</span></span></param>
        <summary><span data-ttu-id="18f90-229">Bestimmt, ob die angegebene Taste gedrückt ist.</span><span class="sxs-lookup"><span data-stu-id="18f90-229">Determines whether the specified key is pressed.</span></span></summary>
        <returns><span data-ttu-id="18f90-230"><see langword="true" />, wenn sich <paramref name="key" /> im gedrückten Zustand befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="18f90-230"><see langword="true" /> if <paramref name="key" /> is in the down state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-231">Die <xref:System.Windows.Input.Keyboard.GetKeyStates%2A>-Methode kann verwendet werden, um den Satz von Zuständen für einen bestimmten Schlüssel zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="18f90-231">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18f90-232">Im folgenden Beispiel wird gezeigt, wie Sie die <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>-Methode verwenden, um den Zustand eines bestimmten Schlüssels zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="18f90-232">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="18f90-233">Der <xref:System.Windows.Input.Key.Return> Schlüssel wird an die <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>-Methode übermittelt.</span><span class="sxs-lookup"><span data-stu-id="18f90-233">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method.</span></span>  <span data-ttu-id="18f90-234">Wenn die Methode `true`zurückgibt, wird der Hintergrund einer <xref:System.Windows.Controls.Button> geändert.</span><span class="sxs-lookup"><span data-stu-id="18f90-234">If the method returns `true`, the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeydown)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeydown)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsDown" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyToggled">
      <MemberSignature Language="C#" Value="public static bool IsKeyToggled (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyToggled(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyToggled (key As Key) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyToggled(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyToggled : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyToggled key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="18f90-235">Der angegebene Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="18f90-235">The specified key.</span></span></param>
        <summary><span data-ttu-id="18f90-236">Bestimmt, ob die angegebene Taste umgeschaltet ist.</span><span class="sxs-lookup"><span data-stu-id="18f90-236">Determines whether the specified key is toggled.</span></span></summary>
        <returns><span data-ttu-id="18f90-237"><see langword="true" />, wenn sich <paramref name="key" /> im umgeschalteten Zustand befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="18f90-237"><see langword="true" /> if <paramref name="key" /> is in the toggled state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-238">Die <xref:System.Windows.Input.Keyboard.GetKeyStates%2A>-Methode kann verwendet werden, um den Satz von Zuständen für einen bestimmten Schlüssel zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="18f90-238">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18f90-239">Im folgenden Beispiel wird gezeigt, wie Sie die <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>-Methode verwenden, um den Zustand eines bestimmten Schlüssels zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="18f90-239">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method to determine the state of a specific key.</span></span> <span data-ttu-id="18f90-240">Der <xref:System.Windows.Input.Key.Return> Schlüssel wird an die <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>-Methode übermittelt.</span><span class="sxs-lookup"><span data-stu-id="18f90-240">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method.</span></span>  <span data-ttu-id="18f90-241">Wenn die Methode `true`zurückgibt, wird der Hintergrund einer <xref:System.Windows.Controls.Button> geändert.</span><span class="sxs-lookup"><span data-stu-id="18f90-241">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsToggled" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyUp">
      <MemberSignature Language="C#" Value="public static bool IsKeyUp (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyUp(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsKeyUp (key As Key) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyUp(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyUp : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyUp key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="18f90-242">Der zu überprüfende Schlüssel.</span><span class="sxs-lookup"><span data-stu-id="18f90-242">The key to check.</span></span></param>
        <summary><span data-ttu-id="18f90-243">Bestimmt, ob die angegebene Taste losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-243">Determines whether the specified key is released.</span></span></summary>
        <returns><span data-ttu-id="18f90-244"><see langword="true" />, wenn sich <paramref name="key" /> im nicht gedrückten Zustand befindet, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="18f90-244"><see langword="true" /> if <paramref name="key" /> is in the up state; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-245">Die <xref:System.Windows.Input.Keyboard.GetKeyStates%2A>-Methode kann verwendet werden, um den Satz von Zuständen für einen bestimmten Schlüssel zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="18f90-245">The <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> method can be used to determine the set of states of a specific key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18f90-246">Im folgenden Beispiel wird gezeigt, wie Sie die <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>-Methode verwenden, um den Zustand eines bestimmten Schlüssels zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="18f90-246">The following example shows how to use the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method to determine the state of a specific key.</span></span>  <span data-ttu-id="18f90-247">Der <xref:System.Windows.Input.Key.Return> Schlüssel wird an die <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>-Methode übermittelt.</span><span class="sxs-lookup"><span data-stu-id="18f90-247">The <xref:System.Windows.Input.Key.Return> key is passed to the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method.</span></span>  <span data-ttu-id="18f90-248">Wenn die Methode `true`zurückgibt, wird der Hintergrund einer <xref:System.Windows.Controls.Button> geändert.</span><span class="sxs-lookup"><span data-stu-id="18f90-248">If the method returns `true`, then the background of a <xref:System.Windows.Controls.Button> is changed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeyup)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeyup)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" Usage="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18f90-249">Tritt auf, wenn der Tastatureingabeanbieter den Fokus erhält.</span><span class="sxs-lookup"><span data-stu-id="18f90-249">Occurs when the keyboard input provider acquires focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-250">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-250">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="18f90-251">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="18f90-251">implements attached events as routed events.</span></span> <span data-ttu-id="18f90-252">Bei angefügten Ereignissen handelt es sich im Grunde um ein [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sprach Konzept für Verweise auf Ereignisse, die für Objekte behandelt werden können, die dieses Ereignis nicht definieren, das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] erweitert wird, indem auch das Ereignis zum Durchlaufen einer Route aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-252">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="18f90-253">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. zum Anfügen von Handlern für ein Routing Ereignis im Code verwenden Sie eine angegebene Add \*-Handlermethode.</span><span class="sxs-lookup"><span data-stu-id="18f90-253">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="18f90-254">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-254">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="18f90-255">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="18f90-255">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="18f90-256">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="18f90-256">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="18f90-257">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="18f90-257">Routing strategy</span></span>|<span data-ttu-id="18f90-258">Blasen</span><span class="sxs-lookup"><span data-stu-id="18f90-258">Bubbling</span></span>|  
|<span data-ttu-id="18f90-259">delegate</span><span class="sxs-lookup"><span data-stu-id="18f90-259">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="18f90-260">Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span><span class="sxs-lookup"><span data-stu-id="18f90-260">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-261">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-261">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-262">Routing Ereignis Bezeichner werden erstellt, wenn Routing Ereignisse registriert werden, und das Ergebnis wird als Feld in der Klasse gespeichert, die das Routing Ereignis registriert.</span><span class="sxs-lookup"><span data-stu-id="18f90-262">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="18f90-263">Diese Bezeichner enthalten einen identifizierenden Namen, den Besitzertyp, den Handlertyp, die Routing Strategie und eine hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-263">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="18f90-264">Sie verwenden diese Bezeichner häufig als Parameter für Ereignis System Methoden, um ein bestimmtes Routing Ereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="18f90-264">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" Usage="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18f90-265">Tritt ein, wenn eine Taste auf der Tastatur gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-265">Occurs when a key on the keyboard is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-266">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-266">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="18f90-267">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="18f90-267">implements attached events as routed events.</span></span> <span data-ttu-id="18f90-268">Bei angefügten Ereignissen handelt es sich im Grunde um ein [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sprach Konzept für Verweise auf Ereignisse, die für Objekte behandelt werden können, die dieses Ereignis nicht definieren, das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] erweitert wird, indem auch das Ereignis zum Durchlaufen einer Route aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-268">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="18f90-269">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. zum Anfügen von Handlern für ein Routing Ereignis im Code verwenden Sie eine angegebene Add \*-Handlermethode.</span><span class="sxs-lookup"><span data-stu-id="18f90-269">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="18f90-270">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-270">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="18f90-271">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="18f90-271">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="18f90-272">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="18f90-272">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyDownEvent>|  
|<span data-ttu-id="18f90-273">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="18f90-273">Routing strategy</span></span>|<span data-ttu-id="18f90-274">Blasen</span><span class="sxs-lookup"><span data-stu-id="18f90-274">Bubbling</span></span>|  
|<span data-ttu-id="18f90-275">delegate</span><span class="sxs-lookup"><span data-stu-id="18f90-275">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="18f90-276">Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span><span class="sxs-lookup"><span data-stu-id="18f90-276">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18f90-277">Im folgenden Beispiel wird <xref:System.Windows.Controls.TextBox> erstellt, die einen Ereignishandler für das <xref:System.Windows.UIElement.KeyDown> Ereignis anfügt.</span><span class="sxs-lookup"><span data-stu-id="18f90-277">The following example creates <xref:System.Windows.Controls.TextBox> that attaches an event handler for the <xref:System.Windows.UIElement.KeyDown> event.</span></span>  <span data-ttu-id="18f90-278">Wenn die <xref:System.Windows.Input.Key.Return> gedrückt wird, zeigt der Ereignishandler den Text im <xref:System.Windows.Controls.TextBox> in einem <xref:System.Windows.Controls.TextBlock>an.</span><span class="sxs-lookup"><span data-stu-id="18f90-278">When the <xref:System.Windows.Input.Key.Return> is pressed, the event handler displays the text in the <xref:System.Windows.Controls.TextBox> in a <xref:System.Windows.Controls.TextBlock>.</span></span>  
  
 [!code-xml[keydown#KeyDownUI](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml#keydownui)]  
  
 [!code-csharp[keydown#KeyDownSample](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml.cs#keydownsample)]
 [!code-vb[keydown#KeyDownSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyDown/VisualBasic/Window1.xaml.vb#keydownsample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-279">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-279">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-280">Routing Ereignis Bezeichner werden erstellt, wenn Routing Ereignisse registriert werden, und das Ergebnis wird als Feld in der Klasse gespeichert, die das Routing Ereignis registriert.</span><span class="sxs-lookup"><span data-stu-id="18f90-280">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="18f90-281">Diese Bezeichner enthalten einen identifizierenden Namen, den Besitzertyp, den Handlertyp, die Routing Strategie und eine hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-281">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="18f90-282">Sie verwenden diese Bezeichner häufig als Parameter für Ereignis System Methoden, um ein bestimmtes Routing Ereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="18f90-282">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" Usage="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18f90-283">Tritt ein, wenn eine Taste auf der Tastatur losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-283">Occurs when a key on the keyboard is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-284">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-284">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="18f90-285">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="18f90-285">implements attached events as routed events.</span></span> <span data-ttu-id="18f90-286">Bei angefügten Ereignissen handelt es sich im Grunde um ein [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sprach Konzept für Verweise auf Ereignisse, die für Objekte behandelt werden können, die dieses Ereignis nicht definieren, das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] erweitert wird, indem auch das Ereignis zum Durchlaufen einer Route aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-286">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="18f90-287">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. zum Anfügen von Handlern für ein Routing Ereignis im Code verwenden Sie eine angegebene Add \*-Handlermethode.</span><span class="sxs-lookup"><span data-stu-id="18f90-287">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="18f90-288">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-288">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="18f90-289">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="18f90-289">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="18f90-290">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="18f90-290">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.KeyUpEvent>|  
|<span data-ttu-id="18f90-291">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="18f90-291">Routing strategy</span></span>|<span data-ttu-id="18f90-292">Blasen</span><span class="sxs-lookup"><span data-stu-id="18f90-292">Bubbling</span></span>|  
|<span data-ttu-id="18f90-293">delegate</span><span class="sxs-lookup"><span data-stu-id="18f90-293">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="18f90-294">Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span><span class="sxs-lookup"><span data-stu-id="18f90-294">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-295">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-295">Identifies the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-296">Routing Ereignis Bezeichner werden erstellt, wenn Routing Ereignisse registriert werden, und das Ergebnis wird als Feld in der Klasse gespeichert, die das Routing Ereignis registriert.</span><span class="sxs-lookup"><span data-stu-id="18f90-296">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="18f90-297">Diese Bezeichner enthalten einen identifizierenden Namen, den Besitzertyp, den Handlertyp, die Routing Strategie und eine hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-297">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="18f90-298">Sie verwenden diese Bezeichner häufig als Parameter für Ereignis System Methoden, um ein bestimmtes Routing Ereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="18f90-298">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" Usage="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18f90-299">Tritt auf, wenn ein Element den Tastaturfokus verliert.</span><span class="sxs-lookup"><span data-stu-id="18f90-299">Occurs when an element loses keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-300">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-300">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="18f90-301">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="18f90-301">implements attached events as routed events.</span></span> <span data-ttu-id="18f90-302">Bei angefügten Ereignissen handelt es sich im Grunde um ein [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sprach Konzept für Verweise auf Ereignisse, die für Objekte behandelt werden können, die dieses Ereignis nicht definieren, das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] erweitert wird, indem auch das Ereignis zum Durchlaufen einer Route aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-302">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="18f90-303">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. zum Anfügen von Handlern für ein Routing Ereignis im Code verwenden Sie eine angegebene Add \*-Handlermethode.</span><span class="sxs-lookup"><span data-stu-id="18f90-303">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="18f90-304">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-304">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="18f90-305">Der Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt.</span><span class="sxs-lookup"><span data-stu-id="18f90-305">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="18f90-306">Das Element mit dem Tastaturfokus ist <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> auf `true`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="18f90-306">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="18f90-307">Es darf nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="18f90-307">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="18f90-308">Der logische Fokus bezieht sich auf das Objekt innerhalb eines Fokusbereichs, der den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="18f90-308">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="18f90-309">Weitere Informationen zu Fokus, Tastaturfokus und logischem Fokus finden Sie unter Übersicht über [Eingaben](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-309">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 <span data-ttu-id="18f90-310">Wenn das <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>-Ereignis oder das <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>-Ereignis behandelt wird, ändert sich der Tastaturfokus nicht.</span><span class="sxs-lookup"><span data-stu-id="18f90-310">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="18f90-311">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="18f90-311">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="18f90-312">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="18f90-312">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.LostKeyboardFocusEvent>|  
|<span data-ttu-id="18f90-313">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="18f90-313">Routing strategy</span></span>|<span data-ttu-id="18f90-314">Blasen</span><span class="sxs-lookup"><span data-stu-id="18f90-314">Bubbling</span></span>|  
|<span data-ttu-id="18f90-315">delegate</span><span class="sxs-lookup"><span data-stu-id="18f90-315">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="18f90-316">Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="18f90-316">The corresponding tunneling event is <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18f90-317">Im folgenden Beispiel wird ein <xref:System.Windows.Controls.TextBox> erstellt und Ereignishandler für das <xref:System.Windows.UIElement.GotKeyboardFocus>-Ereignis und das <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>-Ereignis angefügt.</span><span class="sxs-lookup"><span data-stu-id="18f90-317">The following example creates a <xref:System.Windows.Controls.TextBox> and attaches event handlers for the <xref:System.Windows.UIElement.GotKeyboardFocus> event and the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> event.</span></span>  <span data-ttu-id="18f90-318">Wenn das <xref:System.Windows.Controls.TextBox> Tastaturfokus erhält, wird die Hintergrundfarbe geändert, und der Text der <xref:System.Windows.Controls.TextBox> wird gelöscht.</span><span class="sxs-lookup"><span data-stu-id="18f90-318">When the <xref:System.Windows.Controls.TextBox> obtains keyboard focus, the background color is changed and the text of the <xref:System.Windows.Controls.TextBox> is cleared.</span></span>  <span data-ttu-id="18f90-319">Wenn das <xref:System.Windows.Controls.TextBlock> den Tastaturfokus verliert, wird die Hintergrundfarbe geändert, und es wird eine-Methode aufgerufen, die die im Beispiel verwendeten Variablen zurücksetzt.</span><span class="sxs-lookup"><span data-stu-id="18f90-319">When the <xref:System.Windows.Controls.TextBlock> loses keyboard focus, the background color is changed and a method is called that resets variables used in the sample.</span></span>  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-320">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-320">Identifies the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-321">Routing Ereignis Bezeichner werden erstellt, wenn Routing Ereignisse registriert werden, und das Ergebnis wird als Feld in der Klasse gespeichert, die das Routing Ereignis registriert.</span><span class="sxs-lookup"><span data-stu-id="18f90-321">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="18f90-322">Diese Bezeichner enthalten einen identifizierenden Namen, den Besitzertyp, den Handlertyp, die Routing Strategie und eine hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-322">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="18f90-323">Sie verwenden diese Bezeichner häufig als Parameter für Ereignis System Methoden, um ein bestimmtes Routing Ereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="18f90-323">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys" Usage="System.Windows.Input.Keyboard.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-324">Ruft den Satz von <see cref="T:System.Windows.Input.ModifierKeys" /> ab, die gerade gedrückt werden.</span><span class="sxs-lookup"><span data-stu-id="18f90-324">Gets the set of <see cref="T:System.Windows.Input.ModifierKeys" /> that are currently pressed.</span></span></summary>
        <value><span data-ttu-id="18f90-325">Eine bitweise Kombination der <see cref="T:System.Windows.Input.ModifierKeys" />-Werte.</span><span class="sxs-lookup"><span data-stu-id="18f90-325">A bitwise combination of the <see cref="T:System.Windows.Input.ModifierKeys" /> values.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-326"><xref:System.Windows.Input.ModifierKeys> ist eine Bitfeldenumeration, daher ist es möglich, dass mehrere Modifizierertasten gleichzeitig gedrückt werden.</span><span class="sxs-lookup"><span data-stu-id="18f90-326"><xref:System.Windows.Input.ModifierKeys> is a bit field enumeration, so it is possible for multiple modifier keys to be pressed at the same time.</span></span>  <span data-ttu-id="18f90-327">Verwenden Sie bitvorgänge, um den exakten Satz von Modifizierertasten zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="18f90-327">Use bit operations to determine the exact set of modifier keys pressed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="18f90-328">Im folgenden Beispiel wird ein Bit und ein Vergleich verwendet, um zu bestimmen, ob die <xref:System.Windows.Input.ModifierKeys.Control> Modifizierertaste gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-328">The following example uses a bit AND comparison to determine if the <xref:System.Windows.Input.ModifierKeys.Control> modifier key is pressed.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyboardmodifiersbitoperation)]
 [!code-vb[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyboardmodifiersbitoperation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" Usage="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18f90-329">Tritt auf, wenn ein Element dabei ist, den Tastaturfokus zu erwerben.</span><span class="sxs-lookup"><span data-stu-id="18f90-329">Occurs when an element is in the process of acquiring keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-330">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-330">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="18f90-331">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="18f90-331">implements attached events as routed events.</span></span> <span data-ttu-id="18f90-332">Bei angefügten Ereignissen handelt es sich im Grunde um ein [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sprach Konzept für Verweise auf Ereignisse, die für Objekte behandelt werden können, die dieses Ereignis nicht definieren, das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] erweitert wird, indem auch das Ereignis zum Durchlaufen einer Route aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-332">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="18f90-333">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. zum Anfügen von Handlern für ein Routing Ereignis im Code verwenden Sie eine angegebene Add \*-Handlermethode.</span><span class="sxs-lookup"><span data-stu-id="18f90-333">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="18f90-334">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-334">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="18f90-335">Wenn das <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>-Ereignis oder das <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>-Ereignis behandelt wird, ändert sich der Tastaturfokus nicht.</span><span class="sxs-lookup"><span data-stu-id="18f90-335">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="18f90-336">Der Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt.</span><span class="sxs-lookup"><span data-stu-id="18f90-336">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="18f90-337">Das Element mit dem Tastaturfokus ist <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> auf `true`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="18f90-337">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="18f90-338">Es darf nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="18f90-338">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="18f90-339">Der logische Fokus bezieht sich auf das Objekt innerhalb eines Fokusbereichs, der den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="18f90-339">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="18f90-340">Weitere Informationen zu Fokus, Tastaturfokus und logischem Fokus finden Sie unter Übersicht über [Eingaben](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-340">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewGotKeyborad"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="18f90-341">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="18f90-341">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="18f90-342">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="18f90-342">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent>|  
|<span data-ttu-id="18f90-343">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="18f90-343">Routing strategy</span></span>|<span data-ttu-id="18f90-344">Tunneling</span><span class="sxs-lookup"><span data-stu-id="18f90-344">Tunneling</span></span>|  
|<span data-ttu-id="18f90-345">delegate</span><span class="sxs-lookup"><span data-stu-id="18f90-345">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="18f90-346">Das entsprechende Bubblingereignis ist <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="18f90-346">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-347">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-347">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-348">Routing Ereignis Bezeichner werden erstellt, wenn Routing Ereignisse registriert werden, und das Ergebnis wird als Feld in der Klasse gespeichert, die das Routing Ereignis registriert.</span><span class="sxs-lookup"><span data-stu-id="18f90-348">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="18f90-349">Diese Bezeichner enthalten einen identifizierenden Namen, den Besitzertyp, den Handlertyp, die Routing Strategie und eine hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-349">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="18f90-350">Sie verwenden diese Bezeichner häufig als Parameter für Ereignis System Methoden, um ein bestimmtes Routing Ereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="18f90-350">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" Usage="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18f90-351">Tritt auf, wenn der Tastatureingabeanbieter gerade den Fokus erhält.</span><span class="sxs-lookup"><span data-stu-id="18f90-351">Occurs when the keyboard input provider is in the process of acquiring focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-352">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-352">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="18f90-353">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="18f90-353">implements attached events as routed events.</span></span> <span data-ttu-id="18f90-354">Bei angefügten Ereignissen handelt es sich im Grunde um ein [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sprach Konzept für Verweise auf Ereignisse, die für Objekte behandelt werden können, die dieses Ereignis nicht definieren, das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] erweitert wird, indem auch das Ereignis zum Durchlaufen einer Route aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-354">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="18f90-355">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. zum Anfügen von Handlern für ein Routing Ereignis im Code verwenden Sie eine angegebene Add \*-Handlermethode.</span><span class="sxs-lookup"><span data-stu-id="18f90-355">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="18f90-356">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-356">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="18f90-357">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="18f90-357">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="18f90-358">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="18f90-358">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent>|  
|<span data-ttu-id="18f90-359">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="18f90-359">Routing strategy</span></span>|<span data-ttu-id="18f90-360">Tunneling</span><span class="sxs-lookup"><span data-stu-id="18f90-360">Tunneling</span></span>|  
|<span data-ttu-id="18f90-361">delegate</span><span class="sxs-lookup"><span data-stu-id="18f90-361">Delegate</span></span>|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   <span data-ttu-id="18f90-362">Das entsprechende Bubblingereignis ist <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span><span class="sxs-lookup"><span data-stu-id="18f90-362">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-363">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-363">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-364">Routing Ereignis Bezeichner werden erstellt, wenn Routing Ereignisse registriert werden, und das Ergebnis wird als Feld in der Klasse gespeichert, die das Routing Ereignis registriert.</span><span class="sxs-lookup"><span data-stu-id="18f90-364">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="18f90-365">Diese Bezeichner enthalten einen identifizierenden Namen, den Besitzertyp, den Handlertyp, die Routing Strategie und eine hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-365">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="18f90-366">Sie verwenden diese Bezeichner häufig als Parameter für Ereignis System Methoden, um ein bestimmtes Routing Ereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="18f90-366">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" Usage="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18f90-367">Tritt ein, wenn eine Taste auf der Tastatur gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-367">Occurs when a key on the keyboard is pressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-368">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-368">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="18f90-369">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="18f90-369">implements attached events as routed events.</span></span> <span data-ttu-id="18f90-370">Bei angefügten Ereignissen handelt es sich im Grunde um ein [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sprach Konzept für Verweise auf Ereignisse, die für Objekte behandelt werden können, die dieses Ereignis nicht definieren, das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] erweitert wird, indem auch das Ereignis zum Durchlaufen einer Route aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-370">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="18f90-371">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. zum Anfügen von Handlern für ein Routing Ereignis im Code verwenden Sie eine angegebene Add \*-Handlermethode.</span><span class="sxs-lookup"><span data-stu-id="18f90-371">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="18f90-372">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-372">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="18f90-373">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="18f90-373">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="18f90-374">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="18f90-374">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyDownEvent>|  
|<span data-ttu-id="18f90-375">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="18f90-375">Routing strategy</span></span>|<span data-ttu-id="18f90-376">Tunneling</span><span class="sxs-lookup"><span data-stu-id="18f90-376">Tunneling</span></span>|  
|<span data-ttu-id="18f90-377">delegate</span><span class="sxs-lookup"><span data-stu-id="18f90-377">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="18f90-378">Das entsprechende Bubblingereignis ist <xref:System.Windows.Input.Keyboard.KeyDown>.</span><span class="sxs-lookup"><span data-stu-id="18f90-378">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-379">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-379">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-380">Routing Ereignis Bezeichner werden erstellt, wenn Routing Ereignisse registriert werden, und das Ergebnis wird als Feld in der Klasse gespeichert, die das Routing Ereignis registriert.</span><span class="sxs-lookup"><span data-stu-id="18f90-380">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="18f90-381">Diese Bezeichner enthalten einen identifizierenden Namen, den Besitzertyp, den Handlertyp, die Routing Strategie und eine hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-381">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="18f90-382">Sie verwenden diese Bezeichner häufig als Parameter für Ereignis System Methoden, um ein bestimmtes Routing Ereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="18f90-382">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" Usage="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18f90-383">Tritt ein, wenn eine Taste auf der Tastatur losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-383">Occurs when a key on the keyboard is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-384">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-384">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="18f90-385">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="18f90-385">implements attached events as routed events.</span></span> <span data-ttu-id="18f90-386">Bei angefügten Ereignissen handelt es sich im Grunde um ein [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sprach Konzept für Verweise auf Ereignisse, die für Objekte behandelt werden können, die dieses Ereignis nicht definieren, das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] erweitert wird, indem auch das Ereignis zum Durchlaufen einer Route aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-386">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="18f90-387">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. zum Anfügen von Handlern für ein Routing Ereignis im Code verwenden Sie eine angegebene Add \*-Handlermethode.</span><span class="sxs-lookup"><span data-stu-id="18f90-387">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="18f90-388">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-388">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="18f90-389">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="18f90-389">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="18f90-390">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="18f90-390">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewKeyUpEvent>|  
|<span data-ttu-id="18f90-391">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="18f90-391">Routing strategy</span></span>|<span data-ttu-id="18f90-392">Tunneling</span><span class="sxs-lookup"><span data-stu-id="18f90-392">Tunneling</span></span>|  
|<span data-ttu-id="18f90-393">delegate</span><span class="sxs-lookup"><span data-stu-id="18f90-393">Delegate</span></span>|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   <span data-ttu-id="18f90-394">Das entsprechende Bubblingereignis ist <xref:System.Windows.Input.Keyboard.KeyUp>.</span><span class="sxs-lookup"><span data-stu-id="18f90-394">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.KeyUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-395">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-395">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-396">Routing Ereignis Bezeichner werden erstellt, wenn Routing Ereignisse registriert werden, und das Ergebnis wird als Feld in der Klasse gespeichert, die das Routing Ereignis registriert.</span><span class="sxs-lookup"><span data-stu-id="18f90-396">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="18f90-397">Diese Bezeichner enthalten einen identifizierenden Namen, den Besitzertyp, den Handlertyp, die Routing Strategie und eine hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-397">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="18f90-398">Sie verwenden diese Bezeichner häufig als Parameter für Ereignis System Methoden, um ein bestimmtes Routing Ereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="18f90-398">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" Usage="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="18f90-399">Tritt auf, wenn ein Element dabei ist, den Tastaturfokus zu verlieren.</span><span class="sxs-lookup"><span data-stu-id="18f90-399">Occurs when an element is in the process of losing keyboard focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-400">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-400">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="18f90-401">implementiert angefügte Ereignisse als Routing Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="18f90-401">implements attached events as routed events.</span></span> <span data-ttu-id="18f90-402">Bei angefügten Ereignissen handelt es sich im Grunde um ein [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] sprach Konzept für Verweise auf Ereignisse, die für Objekte behandelt werden können, die dieses Ereignis nicht definieren, das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] erweitert wird, indem auch das Ereignis zum Durchlaufen einer Route aktiviert wird.</span><span class="sxs-lookup"><span data-stu-id="18f90-402">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="18f90-403">Angefügte Ereignisse haben im Code keine Syntax für die direkte Handhabung. zum Anfügen von Handlern für ein Routing Ereignis im Code verwenden Sie eine angegebene Add \*-Handlermethode.</span><span class="sxs-lookup"><span data-stu-id="18f90-403">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="18f90-404">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-404">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="18f90-405">Wenn das <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>-Ereignis oder das <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>-Ereignis behandelt wird, ändert sich der Tastaturfokus nicht.</span><span class="sxs-lookup"><span data-stu-id="18f90-405">If the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> event or the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> event is handled, keyboard focus does not change.</span></span>  
  
 <span data-ttu-id="18f90-406">Der Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt.</span><span class="sxs-lookup"><span data-stu-id="18f90-406">Keyboard focus refers to the object that is receiving keyboard input.</span></span> <span data-ttu-id="18f90-407">Das Element mit dem Tastaturfokus ist <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> auf `true`festgelegt.</span><span class="sxs-lookup"><span data-stu-id="18f90-407">The element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="18f90-408">Es darf nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="18f90-408">There can be only one element with keyboard focus on the entire desktop.</span></span>  <span data-ttu-id="18f90-409">Der logische Fokus bezieht sich auf das Objekt innerhalb eines Fokusbereichs, der den Fokus besitzt.</span><span class="sxs-lookup"><span data-stu-id="18f90-409">Logical focus refers to the object within a focus scope that has focus.</span></span>  <span data-ttu-id="18f90-410">Weitere Informationen zu Fokus, Tastaturfokus und logischem Fokus finden Sie unter Übersicht über [Eingaben](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="18f90-410">For more information on focus, keyboard focus, and logical focus, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="18f90-411">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="18f90-411">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="18f90-412">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="18f90-412">Identifier field</span></span>|<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent>|  
|<span data-ttu-id="18f90-413">Routing Strategie</span><span class="sxs-lookup"><span data-stu-id="18f90-413">Routing strategy</span></span>|<span data-ttu-id="18f90-414">Tunneling</span><span class="sxs-lookup"><span data-stu-id="18f90-414">Tunneling</span></span>|  
|<span data-ttu-id="18f90-415">delegate</span><span class="sxs-lookup"><span data-stu-id="18f90-415">Delegate</span></span>|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   <span data-ttu-id="18f90-416">Das entsprechende Bubblingereignis ist <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span><span class="sxs-lookup"><span data-stu-id="18f90-416">The corresponding bubbling event is <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-417">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-417">Identifies the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-418">Routing Ereignis Bezeichner werden erstellt, wenn Routing Ereignisse registriert werden, und das Ergebnis wird als Feld in der Klasse gespeichert, die das Routing Ereignis registriert.</span><span class="sxs-lookup"><span data-stu-id="18f90-418">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="18f90-419">Diese Bezeichner enthalten einen identifizierenden Namen, den Besitzertyp, den Handlertyp, die Routing Strategie und eine hilfsprogrammmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-419">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="18f90-420">Sie verwenden diese Bezeichner häufig als Parameter für Ereignis System Methoden, um ein bestimmtes Routing Ereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="18f90-420">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyboardDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.KeyboardDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::KeyboardDevice ^ PrimaryDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.KeyboardDevice" Usage="System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="18f90-421">Ruft das primäre Tastatureingabegerät ab.</span><span class="sxs-lookup"><span data-stu-id="18f90-421">Gets the primary keyboard input device.</span></span></summary>
        <value><span data-ttu-id="18f90-422">Das Gerät.</span><span class="sxs-lookup"><span data-stu-id="18f90-422">The device.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-423">Diese Eigenschaft unterstützt die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]-Infrastruktur und ist nicht für die direkte Verwendung im Code vorgesehen.</span><span class="sxs-lookup"><span data-stu-id="18f90-423">This property supports the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyboardDevice" />
      </Docs>
    </Member>
    <Member MemberName="RemoveGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-424">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-424">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-425">Der Ereignishandler, der entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-425">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="18f90-426">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-426">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-427">Diese Methode stellt Accessoren für angefügte Eigenschaften für Code Zugriff auf das <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-427">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-428">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-428">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-429">Der Ereignishandler, der entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-429">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="18f90-430">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-430">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-431">Diese Methode stellt Accessoren für angefügte Eigenschaften für Code Zugriff auf das <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> angefügte Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-431">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-432">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-432">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-433">Der Ereignishandler, der entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-433">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="18f90-434">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-434">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-435">Diese Methode stellt Accessoren für angefügte Eigenschaften für Code Zugriff auf das <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügte Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-435">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-436">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-436">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-437">Der Ereignishandler, der entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-437">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="18f90-438">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-438">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.KeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-439">Diese Methode stellt Accessoren für angefügte Eigenschaften für Code Zugriff auf das <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügte Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-439">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-440">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-440">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-441">Der Ereignishandler, der entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-441">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="18f90-442">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-442">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-443">Diese Methode stellt Accessoren für angefügte Eigenschaften für Code Zugriff auf das <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-443">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-444">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-444">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-445">Der Ereignishandler, der entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-445">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="18f90-446">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-446">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-447">Diese Methode stellt Accessoren für angefügte Eigenschaften für Code Zugriff auf das <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-447">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" Index="1" FrameworkAlternate="netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-448">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-448">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-449">Der Ereignishandler, der entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-449">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="18f90-450">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-450">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-451">Diese Methode stellt Accessoren für angefügte Eigenschaften für Code Zugriff auf das <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> angefügte Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-451">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-452">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-452">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-453">Der Ereignishandler, der entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-453">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="18f90-454">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-454">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-455">Diese Methode stellt Accessoren für angefügte Eigenschaften für Code Zugriff auf das <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügte Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-455">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-456">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-456">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-457">Der Ereignishandler, der entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-457">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="18f90-458">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-458">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-459">Diese Methode stellt Accessoren für angefügte Eigenschaften für Code Zugriff auf das <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügte Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-459">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="18f90-460">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="18f90-460">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="18f90-461">Der Ereignishandler, der entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="18f90-461">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="18f90-462">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="18f90-462">Removes a handler for the <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="18f90-463">Diese Methode stellt Accessoren für angefügte Eigenschaften für Code Zugriff auf das <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügte Ereignis bereit.</span><span class="sxs-lookup"><span data-stu-id="18f90-463">This method provides attached property accessors for code access to the <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> attached event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
