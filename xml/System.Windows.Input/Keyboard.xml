<Type Name="Keyboard" FullName="System.Windows.Input.Keyboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="16f6f29580d669341906637982f549f819b19d52" />
    <Meta Name="ms.sourcegitcommit" Value="4f9e960e786edf67b6a29655670b1a15e71c03de" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="08/02/2018" />
    <Meta Name="ms.locfileid" Value="39418491" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class Keyboard" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Keyboard extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Keyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Keyboard" />
  <TypeSignature Language="C++ CLI" Value="public ref class Keyboard abstract sealed" />
  <TypeSignature Language="F#" Value="type Keyboard = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt das Tastaturgerät dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Input.Keyboard> Klasse bietet tastaturbezogene Ereignisse, Methoden und Eigenschaften, die Informationen über den Zustand der Tastatur bereitstellen.  
  
 Jedes der Ereignisse, die <xref:System.Windows.Input.Keyboard> definiert, wie ein angefügtes Ereignis auch von den Basiselementklassen wieder verfügbar gemacht wird <xref:System.Windows.UIElement> und <xref:System.Windows.ContentElement> als neues Routingereignis. Im Allgemeinen ist es praktischer, Behandeln von Tastaturereignissen für eine Anwendung auf <xref:System.Windows.UIElement> und <xref:System.Windows.ContentElement>, anstatt die <xref:System.Windows.Input.Keyboard> Ereignisse. Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).  
  
 In der Reihenfolge für ein Element, das Tastatureingaben empfängt muss das Element den Fokus erhalten kann. Die meisten <xref:System.Windows.UIElement> abgeleitete Objekte werden standardmäßig den Fokus erhalten. Damit wird ein Element den Fokus erhalten kann, legen Sie andernfalls die <xref:System.Windows.UIElement.Focusable%2A> Eigenschaft für das Basiselement um `true`.  Weitere Informationen zu den Basiselementen, finden Sie unter [Übersicht über Basiselemente](~/docs/framework/wpf/advanced/base-elements-overview.md).  
  
 <xref:System.Windows.Controls.Panel> Klassen, z. B. <xref:System.Windows.Controls.StackPanel> und <xref:System.Windows.Controls.Canvas>, legen Sie den Standardwert <xref:System.Windows.UIElement.Focusable%2A> zu `false`. Aus diesem Grund für diese Objekte den Tastaturfokus erhalten können <xref:System.Windows.UIElement.Focusable%2A> muss festgelegt werden, um `true`.  
  
 Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt. Das Element mit dem Tastaturfokus verfügt <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> festgelegt `true`.  Es kann nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.  Der logische Fokus bezieht sich auf das Objekt in einem Fokusbereich, der Fokus besitzt.  Weitere Informationen zu den Fokus, über den Tastaturfokus und logischer Fokus zu erhalten, finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus – Übersicht](~/docs/framework/wpf/advanced/focus-overview.md).  
  
 Der statische Member der <xref:System.Windows.Input.Keyboard> Klasse-Delegat, der das primäre <xref:System.Windows.Input.KeyboardDevice> des aufrufenden Threads, sodass sie nicht unbedingt threadsicher sind.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> Methode, um zu bestimmen, ob ein Schlüssel im umgeschalteten Zustand ist. Wenn die <xref:System.Windows.Input.Key> übergeben <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> wird umgeschaltet, der der Hintergrund einer Schaltfläche geändert wird.  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
    <altmember cref="T:System.Windows.Input.KeyEventArgs" />
  </Docs>
  <Members>
    <Member MemberName="AddGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der hinzugefügt werden soll.</param>
        <summary>Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />-Ereignis hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für den Codezugriff und [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] der Verarbeitung des Attributs der <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der hinzugefügt werden soll.</param>
        <summary>Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />-Ereignis hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für den Codezugriff und [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] der Verarbeitung des Attributs der <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der hinzugefügt werden soll.</param>
        <summary>Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyDown" />-Ereignis hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für den Codezugriff und [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] der Verarbeitung des Attributs der <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der hinzugefügt werden soll.</param>
        <summary>Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyUp" />-Ereignis hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für den Codezugriff und [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] der Verarbeitung des Attributs der <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der hinzugefügt werden soll.</param>
        <summary>Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />-Ereignis hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für den Codezugriff und [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] der Verarbeitung des Attributs der <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der hinzugefügt werden soll.</param>
        <summary>Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />-Ereignis hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für den Codezugriff und [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] der Verarbeitung des Attributs der <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der hinzugefügt werden soll.</param>
        <summary>Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />-Ereignis hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für den Codezugriff und [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] der Verarbeitung des Attributs der <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der hinzugefügt werden soll.</param>
        <summary>Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für den Codezugriff und [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] der Verarbeitung des Attributs der <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der hinzugefügt werden soll.</param>
        <summary>Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />-Ereignis hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für den Codezugriff und [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] der Verarbeitung des Attributs der <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.AddPreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der hinzugefügt werden soll.</param>
        <summary>Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />-Ereignis hinzu.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für den Codezugriff und [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] der Verarbeitung des Attributs der <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFocus">
      <MemberSignature Language="C#" Value="public static void ClearFocus ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ClearFocus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.ClearFocus" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ClearFocus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ClearFocus();" />
      <MemberSignature Language="F#" Value="static member ClearFocus : unit -&gt; unit" Usage="System.Windows.Input.Keyboard.ClearFocus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Löscht den Fokus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn der Fokus innerhalb eines Win32-Fensters ist, ruft WPF die <xref:System.Windows.Input.Keyboard.ClearFocus%2A> Methode für die Wiederherstellung des Fokus, wenn ein Menü geschlossen wird.  
  
 Beim Menümodus zu verlassen, wird der Win32-Fokus an das gehostete untergeordnete HWND zurückgegeben, und kein Element besitzt den Fokus von WPF.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultRestoreFocusMode">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.RestoreFocusMode DefaultRestoreFocusMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DefaultRestoreFocusMode As RestoreFocusMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RestoreFocusMode DefaultRestoreFocusMode { System::Windows::Input::RestoreFocusMode get(); void set(System::Windows::Input::RestoreFocusMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultRestoreFocusMode : System.Windows.Input.RestoreFocusMode with get, set" Usage="System.Windows.Input.Keyboard.DefaultRestoreFocusMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RestoreFocusMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Verhalten von [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] beim Wiederherstellen des Fokus ab oder legt es fest.</summary>
        <value>Ein Enumerationswert, der das Verhalten von [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] beim Wiederherstellen des Fokus angibt. Der Standardwert in <see cref="F:System.Windows.Input.RestoreFocusMode.Auto" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Focus (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement Focus(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.Focus(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Focus (element As IInputElement) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ Focus(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Focus : System.Windows.IInputElement -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.Focus element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">Das Element, für das der Tastaturfokus festgelegt werden soll.</param>
        <summary>Legt den Tastaturfokus für das angegebene Element fest.</summary>
        <returns>Das Element mit dem Tastaturfokus.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Für ein Element, um Tastatureingaben zu erhalten muss das Element den Fokus erhalten kann. Damit ein Element den Fokus erhalten kann, setzen die <xref:System.Windows.UIElement.Focusable%2A> Eigenschaft für das Basiselement um `true`.  Weitere Informationen zu den Basiselementen, finden Sie unter [Übersicht über Basiselemente](~/docs/framework/wpf/advanced/base-elements-overview.md).  <xref:System.Windows.Controls.Panel> Klassen, z. B. <xref:System.Windows.Controls.StackPanel> und <xref:System.Windows.Controls.Canvas>, legen Sie den Standardwert <xref:System.Windows.UIElement.Focusable%2A> zu `false`; aus diesem Grund für diese Objekte den Tastaturfokus erhalten können <xref:System.Windows.UIElement.Focusable%2A> muss festgelegt werden, um `true`.  
  
 Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt. Das Element mit dem Tastaturfokus verfügt <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> festgelegt `true`.  Es kann nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.  Der logische Fokus bezieht sich auf das Objekt in einem Fokusbereich, der Fokus besitzt.  Weitere Informationen zu den Fokus, über den Tastaturfokus und logischer Fokus zu erhalten, finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus – Übersicht](~/docs/framework/wpf/advanced/focus-overview.md).  
  
 Ein Element mit Tastaturfokus verfügt auch über logischen Fokus für den Fokusbereich, zu dem das Element gehört.  Ein Element mit dem logischem Fokus kann nicht haben oder über den Tastaturfokus.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine <xref:System.Windows.FrameworkElement.Loaded> -Ereignishandler, der über den Tastaturfokus legt eine <xref:System.Windows.Controls.Button>.  
  
 [!code-csharp[focussample#FocusSampleSetFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplesetfocus)]
 [!code-vb[focussample#FocusSampleSetFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplesetfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement FocusedElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement FocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property FocusedElement As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ FocusedElement { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusedElement : System.Windows.IInputElement" Usage="System.Windows.Input.Keyboard.FocusedElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Element ab, das den Tastaturfokus besitzt.</summary>
        <value>Das fokussierte Element.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt. Das Element mit dem Tastaturfokus verfügt <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> festgelegt `true`.  Es kann nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.  Der logische Fokus bezieht sich auf das Objekt in einem Fokusbereich, der Fokus besitzt.  Weitere Informationen zu den Fokus, über den Tastaturfokus und logischer Fokus zu erhalten, finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus – Übersicht](~/docs/framework/wpf/advanced/focus-overview.md).  
  
 Ein Element mit Tastaturfokus verfügt auch über logischen Fokus für den Fokusbereich, zu dem das Element gehört.  Ein Element mit dem logischem Fokus kann nicht haben oder über den Tastaturfokus.  
  
   
  
## Examples  
 Im folgenden Beispiel ruft das Element mit dem Tastaturfokus ab und wandelt sie um eine <xref:System.Windows.Controls.Control>.  Wenn das Element mit dem Tastaturfokus ist eine <xref:System.Windows.Controls.Control>, der Hintergrund des Elements geändert wird.  
  
 [!code-csharp[focussample#GetKeyboardFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#getkeyboardfocusedelement)]
 [!code-vb[focussample#GetKeyboardFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#getkeyboardfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetKeyStates">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyStates GetKeyStates (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Input.KeyStates GetKeyStates(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.GetKeyStates(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Input::KeyStates GetKeyStates(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member GetKeyStates : System.Windows.Input.Key -&gt; System.Windows.Input.KeyStates" Usage="System.Windows.Input.Keyboard.GetKeyStates key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">Der angegebene Schlüssel.</param>
        <summary>Ruft den Satz von Tastaturzuständen für die angegebene Taste ab.</summary>
        <returns>Eine bitweise Kombination der <see cref="T:System.Windows.Input.KeyStates" />-Werte.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.KeyStates> ist ein wenig Feld-Enumeration. aus diesem Grund ist es möglich ist, ein Schlüssel werden in mehreren Zuständen befinden.  Beispielsweise kann ein Schlüssel im gedrückten Zustand als auch im umgeschalteten Zustand sein.  Verwenden Sie Bitvergleichsoperationen, um zu bestimmen, die genau den Zustand oder Zustände, in denen der Schlüssel im ist.  
  
 Die <xref:System.Windows.Input.Keyboard> Klasse bietet eine Reihe von statischen Methoden, die auch verwendet werden kann, um wichtige Informationen zu erhalten.  Die Methoden sind: <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>, <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>, und <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> Methode, um zu bestimmen, ob die <xref:System.Windows.Input.Key.Return> Schlüssel befindet sich in der <xref:System.Windows.Input.KeyStates.Down> Zustand.  Ein wenig AND-Operation wird verwendet, um das Vergleichen der <xref:System.Windows.Input.KeyStates> Merry <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> und <xref:System.Windows.Input.Key.Down> Zustand. Wenn die Taste gedrückt, den Hintergrund ist ein <xref:System.Windows.Controls.Button> geändert wird.  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardgetkeystates)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardGetKeyStates](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardgetkeystates)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.KeyStates" />
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" Usage="see AddGotKeyboardFocusHandler, and RemoveGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tritt auf, wenn ein Element den Tastaturfokus erhält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein angefügtes Ereignis. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] implementiert angefügte Ereignisse als Routingereignisse. Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert. Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add * Ereignishandlermethode. Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).  
  
 Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt. Das Element mit dem Tastaturfokus verfügt <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> festgelegt `true`.  Es kann nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.  Der logische Fokus bezieht sich auf das Objekt in einem Fokusbereich, der Fokus besitzt.  Weitere Informationen zu den Fokus, über den Tastaturfokus und logischer Fokus zu erhalten, finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus – Übersicht](~/docs/framework/wpf/advanced/focus-overview.md).  
  
 Wenn die <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> Ereignis oder die <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> -Ereignis behandelt werden, ändert sich der Tastaturfokus.  
  
<a name="routedEventInfo_GotKeyboardFocusEvent"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Input.Keyboard.GotKeyboardFocusEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Windows.Controls.TextBox> und fügt der Ereignishandler für die <xref:System.Windows.UIElement.GotKeyboardFocus> Ereignis und die <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> Ereignis.  Wenn die <xref:System.Windows.Controls.TextBox> Tastaturfokus erhält, wird die Hintergrundfarbe geändert und den Text der der <xref:System.Windows.Controls.TextBox> deaktiviert ist.  Wenn die <xref:System.Windows.Controls.TextBlock> den Tastaturfokus verliert, wird die Hintergrundfarbe geändert und eine Methode wird aufgerufen, die Variablen, die im Beispiel verwendeten zurücksetzt.  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.GotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert. Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis. Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKeyDown">
      <MemberSignature Language="C#" Value="public static bool IsKeyDown (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyDown(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyDown(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyDown(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyDown : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyDown key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">Der angegebene Schlüssel.</param>
        <summary>Bestimmt, ob die angegebene Taste gedrückt ist.</summary>
        <returns>
          <see langword="true" />, wenn sich <paramref name="key" /> im gedrückten Zustand befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> Methode kann verwendet werden, um den Status eines bestimmten Schlüssels zu bestimmen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> Methode, um den Status eines bestimmten Schlüssels zu bestimmen.  Die <xref:System.Windows.Input.Key.Return> Schlüssel übergeben wird, um die <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> Methode.  Wenn die Methode zurückgibt `true`, den Hintergrund einer <xref:System.Windows.Controls.Button> geändert wird.  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeydown)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeydown)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsDown" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyToggled">
      <MemberSignature Language="C#" Value="public static bool IsKeyToggled (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyToggled(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyToggled(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyToggled(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyToggled : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyToggled key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">Der angegebene Schlüssel.</param>
        <summary>Bestimmt, ob die angegebene Taste umgeschaltet ist.</summary>
        <returns>
          <see langword="true" />, wenn sich <paramref name="key" /> im umgeschalteten Zustand befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> Methode kann verwendet werden, um den Status eines bestimmten Schlüssels zu bestimmen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> Methode, um den Status eines bestimmten Schlüssels zu bestimmen. Die <xref:System.Windows.Input.Key.Return> Schlüssel übergeben wird, um die <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> Methode.  Wenn die Methode zurückgibt `true`, klicken Sie dann den Hintergrund einer <xref:System.Windows.Controls.Button> geändert wird.  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardistoggled)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsToggled" />
      </Docs>
    </Member>
    <Member MemberName="IsKeyUp">
      <MemberSignature Language="C#" Value="public static bool IsKeyUp (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsKeyUp(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.IsKeyUp(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsKeyUp(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="static member IsKeyUp : System.Windows.Input.Key -&gt; bool" Usage="System.Windows.Input.Keyboard.IsKeyUp key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">Der zu überprüfende Schlüssel.</param>
        <summary>Bestimmt, ob die angegebene Taste losgelassen wird.</summary>
        <returns>
          <see langword="true" />, wenn sich <paramref name="key" /> im nicht gedrückten Zustand befindet, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Input.Keyboard.GetKeyStates%2A> Methode kann verwendet werden, um den Status eines bestimmten Schlüssels zu bestimmen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie mit der <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> Methode, um den Status eines bestimmten Schlüssels zu bestimmen.  Die <xref:System.Windows.Input.Key.Return> Schlüssel übergeben wird, um die <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> Methode.  Wenn die Methode zurückgibt `true`, klicken Sie dann den Hintergrund einer <xref:System.Windows.Controls.Button> geändert wird.  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeyboardiskeyup)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyBoardIsKeyUp](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeyboardiskeyup)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
        <altmember cref="P:System.Windows.Input.KeyEventArgs.IsUp" />
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" Usage="see AddKeyboardInputProviderAcquireFocusHandler, and RemoveKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tritt auf, wenn der Tastatureingabeanbieter den Fokus erhält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein angefügtes Ereignis. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] implementiert angefügte Ereignisse als Routingereignisse. Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert. Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add * Ereignishandlermethode. Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).  
  
<a name="routedEventInfo_KeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert. Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis. Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyDown">
      <MemberSignature Language="C#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddKeyDownHandler, and RemoveKeyDownHandler" Usage="see AddKeyDownHandler, and RemoveKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tritt ein, wenn eine Taste auf der Tastatur gedrückt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein angefügtes Ereignis. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] implementiert angefügte Ereignisse als Routingereignisse. Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert. Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add * Ereignishandlermethode. Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).  
  
<a name="routedEventInfo_KeyDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Input.Keyboard.KeyDownEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Keyboard.PreviewKeyDown>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt <xref:System.Windows.Controls.TextBox> , die fügt eines ereignishandlers für die <xref:System.Windows.UIElement.KeyDown> Ereignis.  Wenn die <xref:System.Windows.Input.Key.Return> gedrückt wird, wird das Ereignis Ereignishandler zeigt den Text in die <xref:System.Windows.Controls.TextBox> in eine <xref:System.Windows.Controls.TextBlock>.  
  
 [!code-xml[keydown#KeyDownUI](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml#keydownui)]  
  
 [!code-csharp[keydown#KeyDownSample](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml.cs#keydownsample)]
 [!code-vb[keydown#KeyDownSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyDown/VisualBasic/Window1.xaml.vb#keydownsample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyDown" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert. Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis. Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyUp">
      <MemberSignature Language="C#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.KeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddKeyUpHandler, and RemoveKeyUpHandler" Usage="see AddKeyUpHandler, and RemoveKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tritt ein, wenn eine Taste auf der Tastatur losgelassen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein angefügtes Ereignis. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] implementiert angefügte Ereignisse als Routingereignisse. Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert. Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add * Ereignishandlermethode. Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).  
  
<a name="routedEventInfo_KeyUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Input.Keyboard.KeyUpEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Keyboard.PreviewKeyUp>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="KeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent KeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent KeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ KeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.KeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyUp" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert. Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis. Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" Usage="see AddLostKeyboardFocusHandler, and RemoveLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tritt auf, wenn ein Element den Tastaturfokus verliert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein angefügtes Ereignis. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] implementiert angefügte Ereignisse als Routingereignisse. Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert. Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add * Ereignishandlermethode. Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).  
  
 Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt. Das Element mit dem Tastaturfokus verfügt <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> festgelegt `true`.  Es kann nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.  Der logische Fokus bezieht sich auf das Objekt in einem Fokusbereich, der Fokus besitzt.  Weitere Informationen zu den Fokus, über den Tastaturfokus und logischer Fokus zu erhalten, finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus – Übersicht](~/docs/framework/wpf/advanced/focus-overview.md).  
  
 Wenn die <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> Ereignis oder die <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> -Ereignis behandelt werden, über den Tastaturfokus wird nicht geändert.  
  
<a name="routedEventInfo_LostKeyboardFocus"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Input.Keyboard.LostKeyboardFocusEvent>|  
|Routing-Strategie|Bubbling|  
|delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus>.  
  
   
  
## Examples  
 Das folgende Beispiel erstellt eine <xref:System.Windows.Controls.TextBox> und fügt der Ereignishandler für die <xref:System.Windows.UIElement.GotKeyboardFocus> Ereignis und die <xref:System.Windows.Input.Keyboard.LostKeyboardFocus> Ereignis.  Wenn die <xref:System.Windows.Controls.TextBox> Tastaturfokus erhält, wird die Hintergrundfarbe geändert und den Text der der <xref:System.Windows.Controls.TextBox> deaktiviert ist.  Wenn die <xref:System.Windows.Controls.TextBlock> den Tastaturfokus verliert, wird die Hintergrundfarbe geändert und eine Methode wird aufgerufen, die im Beispiel verwendete Variablen zurücksetzt.  
  
 [!code-xml[keyboardsample#KeyboardSampleXAMLHandlerHookup](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml#keyboardsamplexamlhandlerhookup)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplegotfocus)]
 [!code-vb[keyboardsample#KeyboardSampleGotFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplegotfocus)]  
  
 [!code-csharp[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyboardSample/CSharp/Window1.xaml.cs#keyboardsamplelostfocus)]
 [!code-vb[keyboardsample#KeyboardSampleLostFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyboardSample/visualbasic/window1.xaml.vb#keyboardsamplelostfocus)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.LostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert. Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis. Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys" Usage="System.Windows.Input.Keyboard.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Satz von <see cref="T:System.Windows.Input.ModifierKeys" /> ab, die gerade gedrückt werden.</summary>
        <value>Eine bitweise Kombination der <see cref="T:System.Windows.Input.ModifierKeys" />-Werte.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.ModifierKeys> ein wenig Feld Enumeration besteht, daher ist es möglich, dass mehrere Modifizierertasten gleichzeitig gedrückt wird.  Verwenden Bit Vorgänge um zu bestimmen, den genauen Satz von Modifizierertasten gedrückt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein wenig und Vergleich, um zu bestimmen, ob die <xref:System.Windows.Input.ModifierKeys.Control> Modifizierertaste gedrückt wird.  
  
 [!code-csharp[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyboardmodifiersbitoperation)]
 [!code-vb[keyargssnippetsample#KeyboardModifiersBitOperation](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyboardmodifiersbitoperation)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" Usage="see AddPreviewGotKeyboardFocusHandler, and RemovePreviewGotKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tritt auf, wenn ein Element dabei ist, den Tastaturfokus zu erwerben.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein angefügtes Ereignis. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] implementiert angefügte Ereignisse als Routingereignisse. Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert. Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add * Ereignishandlermethode. Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).  
  
 Wenn die <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> Ereignis oder die <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> -Ereignis behandelt werden, über den Tastaturfokus wird nicht geändert.  
  
 Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt. Das Element mit dem Tastaturfokus verfügt <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> festgelegt `true`.  Es kann nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.  Der logische Fokus bezieht sich auf das Objekt in einem Fokusbereich, der Fokus besitzt.  Weitere Informationen zu den Fokus, über den Tastaturfokus und logischer Fokus zu erhalten, finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus – Übersicht](~/docs/framework/wpf/advanced/focus-overview.md).  
  
<a name="routedEventInfo_PreviewGotKeyborad"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.Input.Keyboard.GotKeyboardFocus>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewGotKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewGotKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewGotKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewGotKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewGotKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert. Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis. Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocus">
      <MemberSignature Language="C#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" Usage="see AddPreviewKeyboardInputProviderAcquireFocusHandler, and RemovePreviewKeyboardInputProviderAcquireFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tritt auf, wenn der Tastatureingabeanbieter gerade den Fokus erhält.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein angefügtes Ereignis. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] implementiert angefügte Ereignisse als Routingereignisse. Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert. Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add * Ereignishandlermethode. Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).  
  
<a name="routedEventInfo_PreviewKeyboardInputProviderAcquireFocus"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyboardInputProviderAcquireFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyboardInputProviderAcquireFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyboardInputProviderAcquireFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyboardInputProviderAcquireFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert. Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis. Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDown">
      <MemberSignature Language="C#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" Usage="see AddPreviewKeyDownHandler, and RemovePreviewKeyDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tritt ein, wenn eine Taste auf der Tastatur gedrückt wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein angefügtes Ereignis. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] implementiert angefügte Ereignisse als Routingereignisse. Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert. Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add * Ereignishandlermethode. Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).  
  
<a name="routedEventInfo_PreviewKeyDown"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Input.Keyboard.PreviewKeyDownEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.Input.Keyboard.KeyDown>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert. Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis. Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUp">
      <MemberSignature Language="C#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewKeyUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" Usage="see AddPreviewKeyUpHandler, and RemovePreviewKeyUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tritt ein, wenn eine Taste auf der Tastatur losgelassen wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein angefügtes Ereignis. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] implementiert angefügte Ereignisse als Routingereignisse. Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert. Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add * Ereignishandlermethode. Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).  
  
<a name="routedEventInfo_PreviewKeyUp"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Input.Keyboard.PreviewKeyUpEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.KeyEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.Input.Keyboard.KeyUp>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewKeyUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewKeyUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewKeyUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewKeyUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewKeyUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewKeyUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewKeyUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert. Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis. Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocus">
      <MemberSignature Language="C#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" Usage="see AddPreviewLostKeyboardFocusHandler, and RemovePreviewLostKeyboardFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Tritt auf, wenn ein Element dabei ist, den Tastaturfokus zu verlieren.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dies ist ein angefügtes Ereignis. [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] implementiert angefügte Ereignisse als Routingereignisse. Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert. Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add * Ereignishandlermethode. Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).  
  
 Wenn die <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus> Ereignis oder die <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus> -Ereignis behandelt werden, über den Tastaturfokus wird nicht geändert.  
  
 Tastaturfokus bezieht sich auf das Objekt, das Tastatureingaben empfängt. Das Element mit dem Tastaturfokus verfügt <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> festgelegt `true`.  Es kann nur ein Element mit dem Tastaturfokus auf dem gesamten Desktop vorhanden sein.  Der logische Fokus bezieht sich auf das Objekt in einem Fokusbereich, der Fokus besitzt.  Weitere Informationen zu den Fokus, über den Tastaturfokus und logischer Fokus zu erhalten, finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md) und [Fokus – Übersicht](~/docs/framework/wpf/advanced/focus-overview.md).  
  
<a name="routedEventInfo_PreviewLostKeyboardFocus"></a>   
## <a name="routed-event-information"></a>Informationen zum Routingereignis  
  
|||  
|-|-|  
|Feld "ID"|<xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent>|  
|Routing-Strategie|Tunnelerzwingung|  
|delegate|<xref:System.Windows.Input.KeyboardFocusChangedEventHandler>|  
  
-   Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.Input.Keyboard.LostKeyboardFocus>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewLostKeyboardFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewLostKeyboardFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewLostKeyboardFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewLostKeyboardFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Keyboard.PreviewLostKeyboardFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert. Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis. Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.KeyboardDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.KeyboardDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As KeyboardDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::KeyboardDevice ^ PrimaryDevice { System::Windows::Input::KeyboardDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.KeyboardDevice" Usage="System.Windows.Input.Keyboard.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyboardDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das primäre Tastatureingabegerät ab.</summary>
        <value>Das Gerät.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft unterstützt die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]-Infrastruktur und ist nicht für die direkte Verwendung in Code vorgesehen.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyboardDevice" />
      </Docs>
    </Member>
    <Member MemberName="RemoveGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der entfernt werden soll.</param>
        <summary>Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.GotKeyboardFocus" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für, den Codezugriff auf die <xref:System.Windows.Input.Keyboard.GotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der entfernt werden soll.</param>
        <summary>Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für, den Codezugriff auf die <xref:System.Windows.Input.Keyboard.KeyboardInputProviderAcquireFocus?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der entfernt werden soll.</param>
        <summary>Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyDown" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für, den Codezugriff auf die <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der entfernt werden soll.</param>
        <summary>Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.KeyUp" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für, den Codezugriff auf die <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemoveLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der entfernt werden soll.</param>
        <summary>Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.LostKeyboardFocus" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für, den Codezugriff auf die <xref:System.Windows.Input.Keyboard.LostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewGotKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewGotKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewGotKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewGotKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewGotKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewGotKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewGotKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der entfernt werden soll.</param>
        <summary>Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für, den Codezugriff auf die <xref:System.Windows.Input.Keyboard.PreviewGotKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyboardInputProviderAcquireFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyboardInputProviderAcquireFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyboardInputProviderAcquireFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyboardInputProviderAcquireFocusHandler (element As DependencyObject, handler As KeyboardInputProviderAcquireFocusEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyboardInputProviderAcquireFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardInputProviderAcquireFocusEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyboardInputProviderAcquireFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyboardInputProviderAcquireFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardInputProviderAcquireFocusEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der entfernt werden soll.</param>
        <summary>Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für, den Codezugriff auf die <xref:System.Windows.Input.Keyboard.PreviewKeyboardInputProviderAcquireFocus?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyDownHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyDownHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyDownHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der entfernt werden soll.</param>
        <summary>Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyDown" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für, den Codezugriff auf die <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewKeyUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewKeyUpHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewKeyUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler(System.Windows.DependencyObject,System.Windows.Input.KeyEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewKeyUpHandler (element As DependencyObject, handler As KeyEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewKeyUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewKeyUpHandler : System.Windows.DependencyObject * System.Windows.Input.KeyEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewKeyUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der entfernt werden soll.</param>
        <summary>Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewKeyUp" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für, den Codezugriff auf die <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewLostKeyboardFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewLostKeyboardFocusHandler (System.Windows.DependencyObject element, System.Windows.Input.KeyboardFocusChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewLostKeyboardFocusHandler(class System.Windows.DependencyObject element, class System.Windows.Input.KeyboardFocusChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler(System.Windows.DependencyObject,System.Windows.Input.KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewLostKeyboardFocusHandler (element As DependencyObject, handler As KeyboardFocusChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewLostKeyboardFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::KeyboardFocusChangedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewLostKeyboardFocusHandler : System.Windows.DependencyObject * System.Windows.Input.KeyboardFocusChangedEventHandler -&gt; unit" Usage="System.Windows.Input.Keyboard.RemovePreviewLostKeyboardFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.KeyboardFocusChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</param>
        <param name="handler">Der Ereignishandler, der entfernt werden soll.</param>
        <summary>Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus" />-Ereignis.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode bietet eine angefügte eigenschaftenzugriffsmethoden für, den Codezugriff auf die <xref:System.Windows.Input.Keyboard.PreviewLostKeyboardFocus?displayProperty=nameWithType> angefügtes Ereignis.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>