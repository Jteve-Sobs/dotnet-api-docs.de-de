<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fd5a45163260024674fb94da554be682f2069dad" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70481866" /></Metadata><TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <TypeSignature Language="F#" Value="type KeyBinding = class&#xA;    inherit InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Bindet eine <see cref="T:System.Windows.Input.KeyGesture" /> an einen <see cref="T:System.Windows.Input.RoutedCommand" /> (oder eine andere <see cref="T:System.Windows.Input.ICommand" />-Implementierung).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Ein  <xref:System.Windows.Input.KeyBinding> ordnet einen einem <xref:System.Windows.Input.ICommand>zu, z <xref:System.Windows.Input.RoutedCommand>. b.. <xref:System.Windows.Input.KeyGesture> <xref:System.Windows.Input.RoutedCommand>ist die primäre Implementierung der <xref:System.Windows.Input.ICommand> -Schnittstelle für das [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Befehlssystem.  Im Allgemeinen wird beim <xref:System.Windows.Input.KeyGesture> Ausführen von der Befehl aufgerufen, obwohl das Befehls Verhalten weiter von Befehls spezifischen Faktoren wie dem <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> Wert beeinflusst wird.  Weitere Informationen zu den Befehls Informationen finden Sie in der [Befehls Übersicht](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
 Mit Ausnahme der Funktionstasten und der numerischen Tastatur-Schlüssel muss ein gültiger <xref:System.Windows.Input.KeyGesture> genau einen <xref:System.Windows.Input.Key> und <xref:System.Windows.Input.ModifierKeys>mindestens einen enthalten.  Für Funktionstasten und numerische Tastatur-Schlüssel ist keine Modifizierertaste erforderlich, damit Sie gültig <xref:System.Windows.Input.KeyGesture>ist. Es ist möglich, einen ungültigen <xref:System.Windows.Input.KeyGesture> und einen <xref:System.Windows.Input.KeyBinding> mit einer ungültigen zugeordneten Geste anzugeben [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] , entweder über oder Code. Beispielsweise gibt es keine Validierung, die das Erstellen und Binden eines <xref:System.Windows.Input.KeyGesture> verhindert, das nur einen nicht Funktionsschlüssel oder nur Modifizierers, aber keinen Schlüssel enthält. Ein <xref:System.Windows.Input.KeyBinding> solcher Versuch wird nie versuchen, den zugehörigen Befehl aufzurufen.  
  
 Beim definieren <xref:System.Windows.Input.KeyBinding> von in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] gibt es zwei Möglichkeiten, das <xref:System.Windows.Input.KeyGesture>anzugeben. Die erste Möglichkeit zum Einrichten eines <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] besteht darin, das <xref:System.Windows.Input.KeyBinding.Gesture%2A> -Attribut des <xref:System.Windows.Input.KeyBinding> -Elements zu definieren, das eine Syntax ermöglicht, um Schlüssel und Modifizierer als einzelne Zeichenfolge anzugeben, z. b. "STRG + P". Die zweite Möglichkeit besteht darin, das <xref:System.Windows.Input.KeyBinding.Key%2A> -Attribut und <xref:System.Windows.Input.KeyBinding.Modifiers%2A> die Attribute des <xref:System.Windows.Input.KeyBinding> -Elements zu definieren. Beide Methoden zum Festlegen <xref:System.Windows.Input.KeyGesture> von sind gleichwertig und ändern dasselbe zugrunde liegende Objekt, aber es tritt ein Konflikt auf, wenn beides verwendet wird.  Wenn die <xref:System.Windows.Input.KeyBinding.Key%2A>-, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>-und- <xref:System.Windows.Input.KeyBinding.Gesture%2A> Attribute alle festgelegt sind, wird das-Attribut, das zuletzt definiert ist, für das <xref:System.Windows.Input.KeyGesture>verwendet. Möglicherweise gibt es Situationen, in denen z <xref:System.Windows.Input.KeyBinding.Key%2A> . b. ein Satz zuletzt nur die Schlüsselkomponente einer vorangehenden Geste überschreibt, aber die Modifizierers der Geste unverändert lassen. Im Allgemeinen wird empfohlen, dass Sie nur das <xref:System.Windows.Input.KeyBinding.Gesture%2A> -Attribut aus [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]verwenden. Dadurch wird Mehrdeutigkeit vermieden, die optimierte Syntax bereitstellt und die einfachste Darstellung der Serialisierung bereitstellt.  
  
 Ein <xref:System.Windows.Input.KeyBinding> -Objekt kann für ein bestimmtes-Objekt oder auf Klassenebene definiert werden, <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> indem ein <xref:System.Windows.Input.CommandManager> für die-Klasse registriert wird. Die typische <xref:System.Windows.Input.KeyBinding> Methode zum Definieren eines ist innerhalb der Steuerelement Vorlage, indem die <xref:System.Windows.UIElement.InputBindings%2A> -Eigenschaft in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] festgelegt wird, indem <xref:System.Windows.Input.KeyBinding> ein oder mehrere <xref:System.Windows.Input.MouseBinding> -oder-Elemente deklariert werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird ein <xref:System.Windows.Input.KeyBinding> erstellt und dem <xref:System.Windows.Input.InputBindingCollection> des Stamm Fensters hinzugefügt.  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.KeyBinding" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.KeyBinding" />-Klasse.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.KeyGesture -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, gesture)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command">Der Befehl, der <paramref name="gesture" /> zugeordnet werden soll.</param>
        <param name="gesture">Die Tastenkombination, die <paramref name="command" /> verknüpft werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.KeyBinding" />-Klasse unter Verwendung der angegebenen <see cref="T:System.Windows.Input.ICommand" /> und des angegebenen <see cref="T:System.Windows.Input.KeyGesture" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="command" /> oder <paramref name="gesture" /> ist <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyBinding : System.Windows.Input.ICommand * System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyBinding" Usage="new System.Windows.Input.KeyBinding (command, key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command">Der aufzurufende Befehl.</param>
        <param name="key">Die Taste, die mit dem <paramref name="command" /> verknüpft werden soll.</param>
        <param name="modifiers">Die Modifizierer, die mit dem <paramref name="command" /> verknüpft werden sollen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.KeyBinding" />-Klasse mit dem angegebenen <see cref="T:System.Windows.Input.ICommand" /> und der angegebenen <see cref="T:System.Windows.Input.Key" /> sowie <see cref="T:System.Windows.Input.ModifierKeys" />, die in eine <see cref="T:System.Windows.Input.KeyGesture" /> konvertiert werden.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="override this.CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="keyBinding.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Erstellt eine Instanz eines <see cref="T:System.Windows.Input.KeyBinding" />.</summary>
        <returns>Das neue Objekt.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Gesture : System.Windows.Input.InputGesture with get, set" Usage="System.Windows.Input.KeyBinding.Gesture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die dieser Eingabeaktion zugeordnete <see cref="T:System.Windows.Input.KeyBinding" /> ab oder legt diese fest.</summary>
        <value>Die Tastenkombination. Der Standardwert ist <see langword="null" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit Ausnahme der Funktionstasten und der numerischen Tastatur-Schlüssel muss ein <xref:System.Windows.Input.KeyGesture> <xref:System.Windows.Input.Key> und ein oder mehrere <xref:System.Windows.Input.ModifierKeys>enthalten.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie ein <xref:System.Windows.Input.KeyGesture> mit einem <xref:System.Windows.Input.RoutedCommand> <xref:System.Windows.Input.KeyBinding> an einen gebunden wird (in den Markup-und Codebeispielen werden verschiedene Schlüssel angegeben, sind aber andernfalls gleichwertig).  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Der Wert, auf den <paramref name="gesture" /> festgelegt wird, ist keine <see cref="T:System.Windows.Input.KeyGesture" />.</exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key with get, set" Usage="System.Windows.Input.KeyBinding.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Input.Key" /> der <see cref="T:System.Windows.Input.KeyGesture" /> ab, die mit dieser <see cref="T:System.Windows.Input.KeyBinding" /> verknüpft ist oder legt diese fest.</summary>
        <value>Die Taste der <see cref="T:System.Windows.Input.KeyGesture" />. Der Standardwert ist <see cref="F:System.Windows.Input.Key.None" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit Ausnahme der Funktionstasten und der numerischen Tastatur-Schlüssel muss ein <xref:System.Windows.Input.KeyGesture> <xref:System.Windows.Input.Key> und ein oder mehrere <xref:System.Windows.Input.ModifierKeys>enthalten.  
  
 Beim definieren <xref:System.Windows.Input.KeyBinding> von in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] gibt es zwei Möglichkeiten, das <xref:System.Windows.Input.KeyGesture>anzugeben. Die erste Möglichkeit zum Einrichten eines <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] besteht darin, das <xref:System.Windows.Input.KeyBinding.Gesture%2A> -Attribut des <xref:System.Windows.Input.KeyBinding> -Elements zu definieren, das eine Syntax ermöglicht, um Schlüssel und Modifizierer als einzelne Zeichenfolge anzugeben, z. b. "STRG + P". Die zweite Möglichkeit besteht darin, das <xref:System.Windows.Input.KeyBinding.Key%2A> -Attribut und <xref:System.Windows.Input.KeyBinding.Modifiers%2A> die Attribute des <xref:System.Windows.Input.KeyBinding> -Elements zu definieren. Beide Methoden zum Festlegen <xref:System.Windows.Input.KeyGesture> von sind gleichwertig und ändern dasselbe zugrunde liegende Objekt, aber es tritt ein Konflikt auf, wenn beides verwendet wird.  Wenn die <xref:System.Windows.Input.KeyBinding.Key%2A>-, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>-und- <xref:System.Windows.Input.KeyBinding.Gesture%2A> Attribute alle festgelegt sind, wird das-Attribut, das zuletzt definiert ist, für das <xref:System.Windows.Input.KeyGesture>verwendet. Möglicherweise gibt es Situationen, in denen z <xref:System.Windows.Input.KeyBinding.Key%2A> . b. ein Satz zuletzt nur die Schlüsselkomponente einer vorangehenden Geste überschreibt, aber die Modifizierers der Geste unverändert lassen. Im Allgemeinen wird empfohlen, dass Sie nur das <xref:System.Windows.Input.KeyBinding.Gesture%2A> -Attribut aus [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]verwenden. Dadurch wird Mehrdeutigkeit vermieden, die optimierte Syntax bereitstellt und die einfachste Darstellung der Serialisierung bereitstellt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable KeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Input.KeyBinding.Key" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys with get, set" Usage="System.Windows.Input.KeyBinding.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die <see cref="T:System.Windows.Input.ModifierKeys" /> der <see cref="T:System.Windows.Input.KeyGesture" /> ab, die mit dieser <see cref="T:System.Windows.Input.KeyBinding" /> verknüpft ist oder legt diese fest.</summary>
        <value>Die Modifizierertasten der <see cref="T:System.Windows.Input.KeyGesture" />.  Der Standardwert ist <see cref="F:System.Windows.Input.ModifierKeys.None" />sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit Ausnahme der Funktionstasten und der numerischen Tastatur-Schlüssel muss ein <xref:System.Windows.Input.KeyGesture> <xref:System.Windows.Input.Key> und ein oder mehrere <xref:System.Windows.Input.ModifierKeys>enthalten.  
  
 Beim definieren <xref:System.Windows.Input.KeyBinding> von in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] gibt es zwei Möglichkeiten, das <xref:System.Windows.Input.KeyGesture>anzugeben. Die erste Möglichkeit zum Einrichten eines <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] besteht darin, das <xref:System.Windows.Input.KeyBinding.Gesture%2A> -Attribut des <xref:System.Windows.Input.KeyBinding> -Elements zu definieren, das eine Syntax ermöglicht, um Schlüssel und Modifizierer als einzelne Zeichenfolge anzugeben, z. b. "STRG + P". Die zweite Möglichkeit besteht darin, das <xref:System.Windows.Input.KeyBinding.Key%2A> -Attribut und <xref:System.Windows.Input.KeyBinding.Modifiers%2A> die Attribute des <xref:System.Windows.Input.KeyBinding> -Elements zu definieren. Beide Methoden zum Festlegen <xref:System.Windows.Input.KeyGesture> von sind gleichwertig und ändern dasselbe zugrunde liegende Objekt, aber es tritt ein Konflikt auf, wenn beides verwendet wird.  Wenn die <xref:System.Windows.Input.KeyBinding.Key%2A>-, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>-und- <xref:System.Windows.Input.KeyBinding.Gesture%2A> Attribute alle festgelegt sind, wird das-Attribut, das zuletzt definiert ist, für das <xref:System.Windows.Input.KeyGesture>verwendet. Möglicherweise gibt es Situationen, in denen z <xref:System.Windows.Input.KeyBinding.Key%2A> . b. ein Satz zuletzt nur die Schlüsselkomponente einer vorangehenden Geste überschreibt, aber die Modifizierers der Geste unverändert lassen. Im Allgemeinen wird empfohlen, dass Sie nur das <xref:System.Windows.Input.KeyBinding.Gesture%2A> -Attribut aus [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]verwenden. Dadurch wird Mehrdeutigkeit vermieden, die optimierte Syntax bereitstellt und die einfachste Darstellung der Serialisierung bereitstellt.  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a>Verwendung von XAML-Attributen  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a>XAML-Werte  
 *oneormoremodifierkeys*  
 Ein oder mehrere Modifizierertasten, die durch <xref:System.Windows.Input.ModifierKeys> die-Enumeration definiert sind, sind durch ein "+"-Zeichen getrennt.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ModifiersProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Bezeichnet die <see cref="P:System.Windows.Input.KeyBinding.Modifiers" />-Abhängigkeitseigenschaft.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
