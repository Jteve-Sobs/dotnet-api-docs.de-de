<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CanExecuteRoutedEventArgs.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ee42842634492a0b412e4641ee5dcc557ee54b5c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ee42842634492a0b412e4641ee5dcc557ee54b5c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.CanExecuteRoutedEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.CanExecute" /&gt;</ph> and <ph id="ph2">&lt;see cref="E:System.Windows.Input.CommandManager.PreviewCanExecute" /&gt;</ph> routed events.</source>
          <target state="translated">Stellt Daten für die Routingereignisse <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.CanExecute" /&gt;</ph> und <ph id="ph2">&lt;see cref="E:System.Windows.Input.CommandManager.PreviewCanExecute" /&gt;</ph> bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventArgs">
          <source>Typically, a command source, such a <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>, will call the <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> method on a <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> to determine if the command can or cannot execute on the current command target.</source>
          <target state="translated">In der Regel eine Befehlsquelle solche eine <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph>, ruft der <ph id="ph2">&lt;xref:System.Windows.Input.RoutedCommand.CanExecute%2A&gt;</ph> Methode auf eine <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> zu bestimmen, ob der Befehl kann nicht für das aktuelle Befehlsziel ausgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventArgs">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> is set to <ph id="ph2">`false`</ph> from an event handler, the command source will disable itself.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> festgelegt ist, um <ph id="ph2">`false`</ph> aus einem Ereignishandler, die Befehlsquelle deaktiviert.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventArgs">
          <source>For example, if a <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> is acting as the command source for a command and the command cannot execute on the current command target, then the <ph id="ph2">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> will gray itself out.</source>
          <target state="translated">Z. B. wenn ein <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> dient, wie die Befehlsquelle für einen Befehl für das aktuelle Befehlsziel ausgeführt werden kann und dann die <ph id="ph2">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> werden grau selbst aus.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ICommand.CanExecuteChanged&gt;</ph> event notifies a command source when the ability of a command to execute may have changed.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Windows.Input.ICommand.CanExecuteChanged&gt;</ph> Ereignis benachrichtigt eine Befehlsquelle aus, wenn die Fähigkeit zur Ausführung eines Befehls möglicherweise geändert.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventArgs">
          <source>The follow example creates a <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> that returns <ph id="ph2">`true`</ph> only if the command target is a control.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> zurückgibt <ph id="ph2">`true`</ph> nur, wenn das Befehlsziel ein Steuerelement ist.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventArgs">
          <source>First, <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> is cast to a <ph id="ph2">&lt;xref:System.Windows.Controls.Control&gt;</ph>.</source>
          <target state="translated">Erstens <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> umgewandelt wird eine <ph id="ph2">&lt;xref:System.Windows.Controls.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteRoutedEventArgs">
          <source>If <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> is a <ph id="ph2">&lt;xref:System.Windows.Controls.Control&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> is set to <ph id="ph4">`true`</ph>; otherwise, it is set to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">Wenn <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> ist ein <ph id="ph2">&lt;xref:System.Windows.Controls.Control&gt;</ph>, <ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> festgelegt ist, um <ph id="ph4">`true`</ph>ist, andernfalls ist festgelegt ist, dass <ph id="ph5">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> associated with this event can be executed on the command target.</source>
          <target state="translated">Ruft einen Wert ab oder legt diesen fest, der angibt, ob der diesem Ereignis zugeordnete <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph> für das Befehlsziel ausgeführt werden kann.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the event can be executed on the command target; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Ereignis für das Befehlsziel ausgeführt werden kann, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute">
          <source>Many command sources, such as <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>, are disabled when <ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> is <ph id="ph4">`false`</ph> and enabled when the <ph id="ph5">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> is <ph id="ph6">`true`</ph>.</source>
          <target state="translated">Viele Quellen, wie z. B. Befehl <ph id="ph1">&lt;xref:System.Windows.Controls.MenuItem&gt;</ph> und <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>, sind deaktiviert, wenn <ph id="ph3">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> ist <ph id="ph4">`false`</ph> und aktiviert, wenn die <ph id="ph5">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> ist <ph id="ph6">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute">
          <source>The follow example creates a <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> that only returns true if the command target is a control.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> nur "true", wenn das Befehlsziel ein Steuerelement ist zurückgibt.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute">
          <source>First the <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> event data is cast to a <ph id="ph2">&lt;xref:System.Windows.Controls.Control&gt;</ph>.</source>
          <target state="translated">Erste der <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> Ereignisdaten umgewandelt werden eine <ph id="ph2">&lt;xref:System.Windows.Controls.Control&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute">
          <source>If it is a <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> is set to <ph id="ph3">`true`</ph>; otherwise, it is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">Wird jedoch eine <ph id="ph1">&lt;xref:System.Windows.Controls.Control&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> festgelegt ist, um <ph id="ph3">`true`</ph>ist, andernfalls ist festgelegt ist, dass <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Command">
          <source>Gets the command associated with this event.</source>
          <target state="translated">Ruft den diesem Ereignis zugeordneten Befehl ab.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Command">
          <source>The command.</source>
          <target state="translated">Der Befehl.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Command">
          <source>Unless the command is a custom command, this is generally a <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph>.</source>
          <target state="translated">Sofern es sich nicht um einen benutzerdefinierten Befehl handelt, ist dies i. d. R. ein <ph id="ph1">&lt;see cref="T:System.Windows.Input.RoutedCommand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Command">
          <source>There is no default value.</source>
          <target state="translated">Es ist kein Standardwert vorhanden.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Command">
          <source>For more information on commanding, see the <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Befehle finden Sie unter der <bpt id="p1">[</bpt>Befehle (Übersicht)<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Command">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> which handles multiple commands.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> mehrere Befehle behandelt.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Command">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.Command%2A&gt;</ph> property is equal to the <ph id="ph2">&lt;xref:System.Windows.Input.MediaCommands.Play%2A&gt;</ph> command and the method <ph id="ph3">`IsPlaying`</ph> returns <ph id="ph4">`false`</ph>, <ph id="ph5">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> is set to <ph id="ph6">`true`</ph>; otherwise, <ph id="ph7">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> is set to <ph id="ph8">`false`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.Command%2A&gt;</ph> Eigenschaft gleich der <ph id="ph2">&lt;xref:System.Windows.Input.MediaCommands.Play%2A&gt;</ph> Befehl und die Methode <ph id="ph3">`IsPlaying`</ph> gibt <ph id="ph4">`false`</ph>, <ph id="ph5">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> auf festgelegt ist <ph id="ph6">`true`</ph>ist, andernfalls <ph id="ph7">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> auf festgelegt ist <ph id="ph8">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Command">
          <source>If the <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.Command%2A&gt;</ph> property is equal to the <ph id="ph2">&lt;xref:System.Windows.Input.MediaCommands.Stop%2A&gt;</ph> command and the method <ph id="ph3">`IsPlaying`</ph> returns <ph id="ph4">`true`</ph>, <ph id="ph5">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> is set to <ph id="ph6">`true`</ph>; otherwise, <ph id="ph7">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> is set to <ph id="ph8">`false`</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.Command%2A&gt;</ph> Eigenschaft gleich der <ph id="ph2">&lt;xref:System.Windows.Input.MediaCommands.Stop%2A&gt;</ph> Befehl und die Methode <ph id="ph3">`IsPlaying`</ph> gibt <ph id="ph4">`true`</ph>, <ph id="ph5">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> auf festgelegt ist <ph id="ph6">`true`</ph>ist, andernfalls <ph id="ph7">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A&gt;</ph> auf festgelegt ist <ph id="ph8">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.ContinueRouting">
          <source>Determines whether the input routed event that invoked the command should continue to route through the element tree.</source>
          <target state="translated">Bestimmt, ob das Eingabe-Routingereignis, das den Befehl aufgerufen hat, weiterhin durch die Elementstruktur weitergeleitet werden soll.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.ContinueRouting">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the routed event should continue to route through element tree; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn das Routingereignis weiterhin durch die Elementstruktur weitergeleitet werden soll, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.ContinueRouting">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter">
          <source>Gets the command specific data.</source>
          <target state="translated">Ruft die befehlsspezifischen Daten ab.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter">
          <source>The command data.</source>
          <target state="translated">Die Befehlsdaten.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter">
          <source>The default value is <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter">
          <source>The command parameter is used to pass specific information to the command when it is executed.</source>
          <target state="translated">Der Befehlsparameter wird verwendet, um bestimmte Informationen an den Befehl übergeben werden, bei der Ausführung.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter">
          <source>The type of the data is defined by the command.</source>
          <target state="translated">Der Typ der Daten wird vom Befehl definiert.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter%2A&gt;</ph> can be <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter%2A&gt;</ph> kann <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter">
          <source>Many commands do not process or expect command parameters.</source>
          <target state="translated">Viele Befehle nicht verarbeiten und Befehlsparameter erwarten.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter">
          <source>The following example shows up to use a <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> as the command source for a custom command.</source>
          <target state="translated">Im folgende Beispiel angezeigt wird, verwenden Sie eine <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> als Befehlsquelle für einen benutzerdefinierten Befehl.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.ICommandSource.Command%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> is set to the custom <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> called <ph id="ph4">`customComand`</ph> and the <ph id="ph5">&lt;xref:System.Windows.Input.ICommandSource.CommandParameter%2A&gt;</ph> is used to pass the value of the <ph id="ph6">&lt;xref:System.Windows.Controls.Primitives.RangeBase.Value%2A&gt;</ph> property of a <ph id="ph7">&lt;xref:System.Windows.Controls.Slider&gt;</ph> control.</source>
          <target state="translated">Der <ph id="ph1">&lt;xref:System.Windows.Input.ICommandSource.Command%2A&gt;</ph> Eigenschaft von der <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> festgelegt ist, um die benutzerdefinierte <ph id="ph3">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph> aufgerufen <ph id="ph4">`customComand`</ph> und die <ph id="ph5">&lt;xref:System.Windows.Input.ICommandSource.CommandParameter%2A&gt;</ph> wird verwendet, um den Wert übergeben der <ph id="ph6">&lt;xref:System.Windows.Controls.Primitives.RangeBase.Value%2A&gt;</ph> Eigenschaft eine <ph id="ph7">&lt;xref:System.Windows.Controls.Slider&gt;</ph> Steuerelement.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter">
          <source>This is accomplishment by using databinding to bind the <ph id="ph1">&lt;xref:System.Windows.Input.ICommandSource.CommandParameter%2A&gt;</ph> to the <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.RangeBase.Value%2A&gt;</ph> property.</source>
          <target state="translated">Dies ist die Leistung durch Verwenden der Datenbindung Binden der <ph id="ph1">&lt;xref:System.Windows.Input.ICommandSource.CommandParameter%2A&gt;</ph> auf die <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.RangeBase.Value%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.CanExecuteRoutedEventArgs.Parameter">
          <source>The converter in the binding expression is a custom <ph id="ph1">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph> which converts <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.RangeBase.Value%2A&gt;</ph> into an <ph id="ph3">&lt;xref:System.Int32&gt;</ph> before binding it to the <ph id="ph4">&lt;xref:System.Windows.Input.ICommandSource.CommandParameter%2A&gt;</ph>.</source>
          <target state="translated">Der Konverter im Bindungsausdruck ist ein benutzerdefinierter <ph id="ph1">&lt;xref:System.Windows.Data.IValueConverter&gt;</ph> welche konvertiert <ph id="ph2">&lt;xref:System.Windows.Controls.Primitives.RangeBase.Value%2A&gt;</ph> in einer <ph id="ph3">&lt;xref:System.Int32&gt;</ph> vor dem Binden an die <ph id="ph4">&lt;xref:System.Windows.Input.ICommandSource.CommandParameter%2A&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>