<Type Name="FocusManager" FullName="System.Windows.Input.FocusManager">
  <Metadata><Meta Name="ms.openlocfilehash" Value="01841e2b81535664aafdc65f9cbf13c166f99ee8" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86651120" /></Metadata><TypeSignature Language="C#" Value="public static class FocusManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FocusManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.FocusManager" />
  <TypeSignature Language="VB.NET" Value="Public Class FocusManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class FocusManager abstract sealed" />
  <TypeSignature Language="F#" Value="type FocusManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="c1cf8-101">Stellt eine Reihe statischer Methoden sowie angefügte Eigenschaften und Ereignisse bereit, um Fokusbereiche zu ermitteln und festzulegen und das fokussierte Element innerhalb des Bereichs festzulegen.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-101">Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1cf8-102">In Windows Presentation Foundation (WPF) gibt es zwei Konzepte, die den Fokus betreffen: Tastaturfokus und logischer Fokus.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-102">In Windows Presentation Foundation (WPF) there are two concepts concerning focus: keyboard focus and logical focus.</span></span>  
  
 <span data-ttu-id="c1cf8-103">Der Tastaturfokus bezieht sich auf das Element, das derzeit Tastatureingaben empfängt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-103">Keyboard focus pertains to the element that is currently receiving keyboard input.</span></span>  <span data-ttu-id="c1cf8-104">Es darf nur ein Element mit dem Tastaturfokus vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-104">There can be only one element with keyboard focus.</span></span>  <span data-ttu-id="c1cf8-105">Dieses Element mit dem Tastaturfokus ist <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-105">This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="c1cf8-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> Gibt das Element mit dem Tastaturfokus zurück.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> returns the element with keyboard focus.</span></span>  
  
 <span data-ttu-id="c1cf8-107">Der logische Fokus bezieht sich auf die <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> innerhalb eines bestimmten Fokusbereichs.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-107">Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within a specific focus scope.</span></span>  
  
 <span data-ttu-id="c1cf8-108">Ein Fokusbereich ist ein Containerelement, das den <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> innerhalb seines Bereichs verfolgt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-108">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="c1cf8-109">Standardmäßig ist die <xref:System.Windows.Window> -Klasse ein Schwerpunktbereich, ebenso wie <xref:System.Windows.Controls.Menu> die <xref:System.Windows.Controls.ContextMenu> Klassen, und <xref:System.Windows.Controls.ToolBar> .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-109">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span> <span data-ttu-id="c1cf8-110">Ein Element, das ein Fokusbereich ist <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ist auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-110">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="c1cf8-111">Es können mehrere Elemente mit logischem Fokus vorhanden sein, aber es kann nur ein Element mit logischem Fokus innerhalb eines einzelnen Fokusbereichs vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-111">There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.</span></span>  <span data-ttu-id="c1cf8-112">Ein Element mit dem logischen Fokus hat nicht unbedingt den Tastaturfokus, aber ein Element mit dem Tastaturfokus hat den logischen Fokus.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-112">An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.</span></span>  <span data-ttu-id="c1cf8-113">Es ist möglich, einen Schwerpunktbereich innerhalb eines Schwerpunktbereichs zu definieren.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-113">It is possible to define a focus scope within a focus scope.</span></span>  <span data-ttu-id="c1cf8-114">In diesem Fall können sowohl der übergeordnete Fokusbereich als auch der untergeordnete Fokusbereich über einen verfügen <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-114">In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c1cf8-115">Im folgenden Szenario wird veranschaulicht, wie der Tastaturfokus und der logische Fokus in einer WPF-Anwendung geändert werden <xref:System.Windows.Window> <xref:System.Windows.Controls.TextBox> <xref:System.Windows.Controls.Menu> <xref:System.Windows.Controls.MenuItem></span><span class="sxs-lookup"><span data-stu-id="c1cf8-115">The following scenario illustrates how keyboard focus and logical focus change in a WPF application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> that has a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="c1cf8-116">Wenn sich der Tastaturfokus von der <xref:System.Windows.Controls.TextBox> in den ändert <xref:System.Windows.Controls.MenuItem> , ist der <xref:System.Windows.Controls.TextBox> Tastaturfokus verloren, behält jedoch den logischen Fokus für den <xref:System.Windows.Window> Fokusbereich.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-116">When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.</span></span>  <span data-ttu-id="c1cf8-117">Der <xref:System.Windows.Controls.MenuItem> erhält Tastaturfokus und erhält den logischen Fokus für den <xref:System.Windows.Controls.Menu> Schwerpunktbereich.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-117">The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  <span data-ttu-id="c1cf8-118">Wenn der Tastaturfokus zum Stamm zurückkehrt <xref:System.Windows.Window> , erhält das Element im <xref:System.Windows.Window> Fokusbereich mit logischem Fokus den Tastaturfokus, was in diesem Fall der ist <xref:System.Windows.Controls.TextBox> .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-118">When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="c1cf8-119">Der <xref:System.Windows.Controls.TextBox> verfügt jetzt über Tastaturfokus und logischer Fokus.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-119">The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.</span></span>  <span data-ttu-id="c1cf8-120">Das <xref:System.Windows.Controls.MenuItem> verliert den Tastaturfokus, behält aber den logischen Fokus für den <xref:System.Windows.Controls.Menu> Schwerpunktbereich bei.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-120">The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  
  
 <span data-ttu-id="c1cf8-121">Der Standardwert von <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> für <xref:System.Windows.Window> , <xref:System.Windows.Controls.Menu> , <xref:System.Windows.Controls.ToolBar> und <xref:System.Windows.Controls.ContextMenu> ist `true` .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-121">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="c1cf8-122">Weitere Informationen zum Fokus finden Sie in der Übersicht über die [Eingaben](/dotnet/framework/wpf/advanced/input-overview) und den [Fokus](/dotnet/framework/wpf/advanced/focus-overview).</span><span class="sxs-lookup"><span data-stu-id="c1cf8-122">For more information on focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview) and the [Focus Overview](/dotnet/framework/wpf/advanced/focus-overview).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c1cf8-123">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-123">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c1cf8-124">Der Ereignishandler, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-124">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="c1cf8-125">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.FocusManager.GotFocus" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-125">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c1cf8-126">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-126">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c1cf8-127">Der Ereignishandler, der hinzugefügt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-127">The event handler to be added.</span></span></param>
        <summary><span data-ttu-id="c1cf8-128">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.FocusManager.LostFocus" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-128">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="ILAsm" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="F#" Value="see GetFocusedElement, and SetFocusedElement" Usage="see GetFocusedElement, and SetFocusedElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1cf8-129">Ermittelt, ob das Element, an das diese Eigenschaft angefügt ist, über den logischen Fokus verfügt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-129">Determines whether the element this property is attached to has logical focus.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1cf8-130">Das- <xref:System.Windows.Input.FocusManager.FocusedElement%2A> Element ist das Element, das den logischen Fokus für einen bestimmten Fokusbereich hat.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-130">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element that has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="c1cf8-131">Dieses Objekt kann den Tastaturfokus haben oder nicht.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-131">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="c1cf8-132">Der Tastaturfokus bezieht sich auf das Element, das Tastatureingaben empfängt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-132">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="c1cf8-133">Weitere Informationen zum Fokus, Tastaturfokus und logischer Fokus finden Sie in der [Eingabe Übersicht](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c1cf8-133">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
 <span data-ttu-id="c1cf8-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> und <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> können verwendet werden, um das fokussierte Element innerhalb des angegebenen Fokusbereichs zu erhalten und festzulegen.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-134"><xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> and <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> can be used to get and set the focused element within the specified focus scope.</span></span>  
  
<a name="dependencyPropertyInfo_FocusedElement"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c1cf8-135">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c1cf8-135">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c1cf8-136">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c1cf8-136">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.FocusedElementProperty>|  
|<span data-ttu-id="c1cf8-137">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c1cf8-137">Metadata properties set to `true`</span></span>|<span data-ttu-id="c1cf8-138">Keine</span><span class="sxs-lookup"><span data-stu-id="c1cf8-138">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c1cf8-139">Im folgenden Beispiel wird gezeigt, wie Sie <xref:System.Windows.Controls.Button> das fokussierte Element erstellen.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-139">The following example shows how to make a <xref:System.Windows.Controls.Button> the focused element.</span></span>  
  
 [!code-xml[markupsnippets#MarkupFocusManagerFocusedElementXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupfocusmanagerfocusedelementxaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedElementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1cf8-140">Bezeichnet die angefügte <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-140">Identifies the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetFocusedElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusedElement (element As DependencyObject) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetFocusedElement(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusedElement : System.Windows.DependencyObject -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.FocusManager.GetFocusedElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName Language="C#">[System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)]</AttributeName>
          <AttributeName Language="F#">[&lt;System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c1cf8-141">Ein Element, bei dem es sich um einen Fokusbereich handelt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-141">An element that is a focus scope.</span></span></param>
        <summary><span data-ttu-id="c1cf8-142">Ruft das Element mit dem logischem Fokus im angegebenen Fokusbereich ab.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-142">Gets the element with logical focus within the specified focus scope.</span></span></summary>
        <returns><span data-ttu-id="c1cf8-143">Das Element im angegebenen Fokusbereich mit dem logischem Fokus.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-143">The element in the specified focus scope with logical focus.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  

<span data-ttu-id="c1cf8-144">Das- <xref:System.Windows.Input.FocusManager.FocusedElement%2A> Element ist das Element, das den logischen Fokus für einen bestimmten Fokusbereich hat.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-144">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element that has logical focus for a specific focus scope.</span></span> <span data-ttu-id="c1cf8-145">Ein Element, das ein Fokusbereich ist <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ist auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-145">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>
<span data-ttu-id="c1cf8-146">Dieses Objekt kann den Tastaturfokus haben oder nicht.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-146">This object may or may not have keyboard focus.</span></span> <span data-ttu-id="c1cf8-147">Der Tastaturfokus bezieht sich auf das Element, das Tastatureingaben empfängt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-147">Keyboard focus refers to the element that receives keyboard input.</span></span> <span data-ttu-id="c1cf8-148">Weitere Informationen zum Fokus, Tastaturfokus und logischer Fokus finden Sie in der [Eingabe Übersicht](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c1cf8-148">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>
  
 <span data-ttu-id="c1cf8-149">Wenn `element` kein Fokusbereich ist, wird von dieser Methode zurückgegeben `null` .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-149">If `element` is not a focus scope, this method will return `null`.</span></span>  
  
 <span data-ttu-id="c1cf8-150">Verwenden <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> Sie, um das Element mit dem logischen Fokus innerhalb eines angegebenen Fokusbereichs anzugeben.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-150">Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1cf8-151">Im folgenden Beispiel wird das-Element mit dem logischen Fokus mithilfe von festgelegt, <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> und das-Element mit dem logischen Fokus wird mithilfe des-Elements abgerufen <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-151">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1cf8-152"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-152"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetFocusScope">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusScope (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusScope : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Input.FocusManager.GetFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c1cf8-153">Das Element, für das der nächste Fokusbereich abgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-153">The element to get the closest focus scope for.</span></span></param>
        <summary><span data-ttu-id="c1cf8-154">Ermittelt den nächsten Vorgänger des angegebenen Elements, dessen <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> auf <see langword="true" /> festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-154">Determines the closest ancestor of the specified element that has <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> set to <see langword="true" />.</span></span></summary>
        <returns><span data-ttu-id="c1cf8-155">Der Fokusbereich für das angegebene Element.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-155">The focus scope for the specified element.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1cf8-156">Der Standardwert von <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> in <xref:System.Windows.Window> , <xref:System.Windows.Controls.Menu> , <xref:System.Windows.Controls.ToolBar> , <xref:System.Windows.Controls.ContextMenu> ist `true` .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-156">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="c1cf8-157">Ein Fokusbereich ist ein Containerelement, das den <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> innerhalb seines Bereichs verfolgt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-157">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="c1cf8-158">Standardmäßig ist die <xref:System.Windows.Window> -Klasse ein Schwerpunktbereich, ebenso wie <xref:System.Windows.Controls.Menu> die <xref:System.Windows.Controls.ContextMenu> Klassen, und <xref:System.Windows.Controls.ToolBar> .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-158">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span> <span data-ttu-id="c1cf8-159">Ein Element, das ein Fokusbereich ist <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ist auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-159">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="c1cf8-160">Weitere Informationen zum Fokus, Tastaturfokus und logischer Fokus finden Sie in der [Eingabe Übersicht](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c1cf8-160">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c1cf8-161"><paramref name="element" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-161"><paramref name="element" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="GetIsFocusScope">
      <MemberSignature Language="C#" Value="public static bool GetIsFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFocusScope (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFocusScope : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.FocusManager.GetIsFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c1cf8-162">Das Element, aus dem die angefügte Eigenschaft gelesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-162">The element from which to read the attached property.</span></span></param>
        <summary><span data-ttu-id="c1cf8-163">Ermittelt, ob das angegebene <see cref="T:System.Windows.DependencyObject" /> ein Fokusbereich ist.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-163">Determines whether the specified <see cref="T:System.Windows.DependencyObject" /> is a focus scope.</span></span></summary>
        <returns><span data-ttu-id="c1cf8-164"><see langword="true" />, wenn <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> für das angegebene Element auf <see langword="true" /> festgelegt ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-164"><see langword="true" /> if <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> is set to <see langword="true" /> on the specified element; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1cf8-165">Ein Fokusbereich ist ein Containerelement, das den <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> innerhalb seines Bereichs verfolgt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-165">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="c1cf8-166">Standardmäßig ist die <xref:System.Windows.Window> -Klasse ein Schwerpunktbereich, ebenso wie <xref:System.Windows.Controls.Menu> die <xref:System.Windows.Controls.ContextMenu> Klassen, und <xref:System.Windows.Controls.ToolBar> .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-166">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="c1cf8-167">Ein Element, das ein Fokusbereich ist <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ist auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-167">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="c1cf8-168">Weitere Informationen zum Fokus, Tastaturfokus und logischer Fokus finden Sie in der [Eingabe Übersicht](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c1cf8-168">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.GotFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" Usage="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1cf8-169">Tritt ein, wenn ein Element den Fokus erhält.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-169">Occurs when an element gets focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1cf8-170">Bezeichnet das angefügte <see cref="E:System.Windows.Input.FocusManager.GotFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-170">Identifies the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScope">
      <MemberSignature Language="C#" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="ILAsm" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.IsFocusScope" />
      <MemberSignature Language="VB.NET" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="F#" Value="see GetIsFocusScope, and SetIsFocusScope" Usage="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1cf8-171">Ermittelt, ob das Element, an das diese Eigenschaft angefügt ist, einen Fokusbereich darstellt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-171">Determines whether the element this property is attached to is a focus scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1cf8-172">Ein Fokusbereich ist ein Containerelement, das den <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> innerhalb seines Bereichs verfolgt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-172">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="c1cf8-173">Standardmäßig ist die <xref:System.Windows.Window> -Klasse ein Schwerpunktbereich, ebenso wie <xref:System.Windows.Controls.Menu> die <xref:System.Windows.Controls.ContextMenu> Klassen, und <xref:System.Windows.Controls.ToolBar> .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-173">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="c1cf8-174">Ein Element, das ein Fokusbereich ist <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ist auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-174">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="c1cf8-175">Weitere Informationen zum Fokus, Tastaturfokus und logischer Fokus finden Sie in der [Eingabe Übersicht](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c1cf8-175">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
<a name="dependencyPropertyInfo_IsFocusScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="c1cf8-176">Informationen zur Abhängigkeitseigenschaft</span><span class="sxs-lookup"><span data-stu-id="c1cf8-176">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="c1cf8-177">Bezeichnerfeld</span><span class="sxs-lookup"><span data-stu-id="c1cf8-177">Identifier field</span></span>|<xref:System.Windows.Input.FocusManager.IsFocusScopeProperty>|  
|<span data-ttu-id="c1cf8-178">Metadateneigenschaften auf `true` festgelegt</span><span class="sxs-lookup"><span data-stu-id="c1cf8-178">Metadata properties set to `true`</span></span>|<span data-ttu-id="c1cf8-179">Keine</span><span class="sxs-lookup"><span data-stu-id="c1cf8-179">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="c1cf8-180">Im folgenden Beispiel wird ein <xref:System.Windows.Controls.StackPanel> Fokusbereich erstellt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-180">The following example makes a <xref:System.Windows.Controls.StackPanel> a focus scope.</span></span>  
  
 [!code-xml[markupsnippets#MarkupIsFocusScopeXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/MarkupSnippets/CSharp/Window1.xaml#markupisfocusscopexaml)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1cf8-181">Bezeichnet die angefügte <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" />-Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-181">Identifies the <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> attached property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1cf8-182">Der Standardwert von <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> in <xref:System.Windows.Window> , <xref:System.Windows.Controls.Menu> , <xref:System.Windows.Controls.ToolBar> , <xref:System.Windows.Controls.ContextMenu> ist `true` .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-182">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="c1cf8-183">Ein Fokusbereich ist ein Containerelement, das den <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> innerhalb seines Bereichs verfolgt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-183">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="c1cf8-184">Standardmäßig ist die <xref:System.Windows.Window> -Klasse ein Schwerpunktbereich, ebenso wie <xref:System.Windows.Controls.Menu> die <xref:System.Windows.Controls.ContextMenu> Klassen, und <xref:System.Windows.Controls.ToolBar> .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-184">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="c1cf8-185">Ein Element, das ein Fokusbereich ist <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ist auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-185">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="c1cf8-186">Weitere Informationen zum Fokus, Tastaturfokus und logischer Fokus finden Sie in der [Eingabe Übersicht](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c1cf8-186">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.LostFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" Usage="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c1cf8-187">Tritt auf, wenn ein Element den Fokus verliert.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-187">Occurs when an element loses focus.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c1cf8-188">Bezeichnet das angefügte <see cref="E:System.Windows.Input.FocusManager.LostFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-188">Identifies the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c1cf8-189">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-189">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c1cf8-190">Der Ereignishandler, der entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-190">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="c1cf8-191">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.FocusManager.GotFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-191">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" Index="0" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" Index="1" FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c1cf8-192">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-192">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="c1cf8-193">Der Ereignishandler, der entfernt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-193">The event handler to be removed.</span></span></param>
        <summary><span data-ttu-id="c1cf8-194">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.FocusManager.LostFocus" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-194">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusedElement">
      <MemberSignature Language="C#" Value="public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFocusedElement(class System.Windows.DependencyObject element, class System.Windows.IInputElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFocusedElement (element As DependencyObject, value As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFocusedElement(System::Windows::DependencyObject ^ element, System::Windows::IInputElement ^ value);" />
      <MemberSignature Language="F#" Value="static member SetFocusedElement : System.Windows.DependencyObject * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.FocusManager.SetFocusedElement (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c1cf8-195">Der Fokusbereich, in dem das angegebene Element als <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-195">The focus scope in which to make the specified element the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span></span></param>
        <param name="value"><span data-ttu-id="c1cf8-196">Das Element, das den logischen Fokus erhalten soll.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-196">The element to give logical focus to.</span></span></param>
        <summary><span data-ttu-id="c1cf8-197">Legt den logischen Fokus für das angegebene Element fest.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-197">Sets logical focus on the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1cf8-198">Das- <xref:System.Windows.Input.FocusManager.FocusedElement%2A> Element ist das Element, das den logischen Fokus für den bestimmten Fokusbereich hat.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-198">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element that has logical focus for the specific focus scope.</span></span>  <span data-ttu-id="c1cf8-199">Dieses Objekt kann den Tastaturfokus haben oder nicht.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-199">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="c1cf8-200">Der Tastaturfokus bezieht sich auf das Element, das Tastatureingaben empfängt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-200">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="c1cf8-201">Weitere Informationen zum Fokus, Tastaturfokus und logischer Fokus finden Sie in der [Eingabe Übersicht](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c1cf8-201">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
 <span data-ttu-id="c1cf8-202">Es ist möglich, einen Schwerpunktbereich anzugeben, der ein Vorgänger des Fokusbereichs ist, in dem sich das Element befindet.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-202">It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.</span></span>  <span data-ttu-id="c1cf8-203">Wenn z. b <xref:System.Windows.Controls.StackPanel> . ein Fokusbereich und das übergeordnete Element <xref:System.Windows.Window> ein Fokusbereich ist, kann ein untergeordnetes Element <xref:System.Windows.Controls.TextBox> von <xref:System.Windows.Controls.StackPanel> <xref:System.Windows.Window> als Fokusbereich angeben, wenn aufgerufen wird <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-203">For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span></span>  <span data-ttu-id="c1cf8-204">Der <xref:System.Windows.Controls.TextBox> -Wert ist dann <xref:System.Windows.Input.FocusManager.FocusedElement%2A> sowohl für den <xref:System.Windows.Window> Fokusbereich als auch für den <xref:System.Windows.Controls.StackPanel> Fokusbereich.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-204">The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.</span></span>  
  
 <span data-ttu-id="c1cf8-205"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> gibt dem angegebenen Element den logischen Fokus im angegebenen Fokusbereich und versucht, dem Element Tastaturfokus zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-205"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1cf8-206">Im folgenden Beispiel wird das-Element mit dem logischen Fokus mithilfe von festgelegt, <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> und das-Element mit dem logischen Fokus wird mithilfe des-Elements abgerufen <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A> .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-206">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFocusScope">
      <MemberSignature Language="C#" Value="public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFocusScope(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFocusScope (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFocusScope(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsFocusScope : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.FocusManager.SetIsFocusScope (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="c1cf8-207">Das Element, das als Fokusbereich festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-207">The element to make a focus scope.</span></span></param>
        <param name="value"><span data-ttu-id="c1cf8-208"><see langword="true" />, wenn <paramref name="element" /> ein Fokusbereich ist; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-208"><see langword="true" /> if <paramref name="element" /> is a focus scope; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="c1cf8-209">Legt das angegebene <see cref="T:System.Windows.DependencyObject" /> als Fokusbereich fest.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-209">Sets the specified <see cref="T:System.Windows.DependencyObject" /> as a focus scope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c1cf8-210">Ein Fokusbereich ist ein Containerelement, das den <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> innerhalb seines Bereichs verfolgt.</span><span class="sxs-lookup"><span data-stu-id="c1cf8-210">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="c1cf8-211">Standardmäßig ist die <xref:System.Windows.Window> -Klasse ein Schwerpunktbereich, ebenso wie <xref:System.Windows.Controls.Menu> die <xref:System.Windows.Controls.ContextMenu> Klassen, und <xref:System.Windows.Controls.ToolBar> .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-211">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="c1cf8-212">Ein Element, das ein Fokusbereich ist <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> , ist auf festgelegt `true` .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-212">An element that is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="c1cf8-213">Weitere Informationen zum Fokus, Tastaturfokus und logischer Fokus finden Sie in der [Eingabe Übersicht](/dotnet/framework/wpf/advanced/input-overview).</span><span class="sxs-lookup"><span data-stu-id="c1cf8-213">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](/dotnet/framework/wpf/advanced/input-overview).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c1cf8-214">Im folgenden Beispiel wird ein Element mithilfe von zu einem Fokusbereich <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A> .</span><span class="sxs-lookup"><span data-stu-id="c1cf8-214">The follow example makes an element a focus scope by using <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusSetIsFocusScope](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focussetisfocusscope)]
 [!code-vb[focussnippets#FocusSetIsFocusScope](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focussetisfocusscope)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
