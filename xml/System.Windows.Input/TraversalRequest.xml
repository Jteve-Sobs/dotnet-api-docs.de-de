<Type Name="TraversalRequest" FullName="System.Windows.Input.TraversalRequest">
  <Metadata><Meta Name="ms.openlocfilehash" Value="db207de7c6bb737746260e638b9e5e239c49bb19" /><Meta Name="ms.sourcegitcommit" Value="b6b9d5f3f9c7eb43f14a8a1a68d044603cb8ed73" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/18/2020" /><Meta Name="ms.locfileid" Value="83489886" /></Metadata><TypeSignature Language="C#" Value="public class TraversalRequest" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TraversalRequest extends System.Object" FrameworkAlternate="dotnet-plat-ext-5.0;net-5.0;netcore-3.0;netcore-3.1" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TraversalRequest" />
  <TypeSignature Language="VB.NET" Value="Public Class TraversalRequest" />
  <TypeSignature Language="C++ CLI" Value="public ref class TraversalRequest" />
  <TypeSignature Language="F#" Value="type TraversalRequest = class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit TraversalRequest extends System.Object" FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Stellt eine Anforderung dar, den Fokus zu einem anderen Steuerelement zu verschieben.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Klasse wird als Eingabeparameter für die <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=nameWithType>-Methode verwendet. Die <xref:System.Windows.UIElement.MoveFocus%2A>-Methode verfügt über eine außer Kraft setzung auf WPF-Frameworkebene, die eine praktischere Implementierung (<xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=nameWithType>) sowie eine parallele Implementierung auf <xref:System.Windows.ContentElement> und <xref:System.Windows.FrameworkContentElement>bereitstellt. In der Regel legen Sie Eigenschaften für <xref:System.Windows.Input.TraversalRequest> fest, um das Fokus Verhalten anzupassen, wenn Sie anfordern, dass der Fokus zu einem anderen Element verschoben wird.  
  
 Diese Klasse wird auch als Eingabeparameter für die folgenden Methoden verwendet:  
  
-   <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>und Implementierungen dieser Methode, die für Interoperation (<xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>) verwendet werden.  
  
-   [https://login.microsoftonline.com/consumers/](<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>).  
  
   
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Windows.Input.TraversalRequest>-Instanz als Eingabe für einen <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=nameWithType> aufgerufen.  
  
 [!code-csharp[FocusSample#FocusSampleMoveFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplemovefocus)]
 [!code-vb[FocusSample#FocusSampleMoveFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplemovefocus)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TraversalRequest (System.Windows.Input.FocusNavigationDirection focusNavigationDirection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.FocusNavigationDirection focusNavigationDirection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TraversalRequest.#ctor(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (focusNavigationDirection As FocusNavigationDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TraversalRequest(System::Windows::Input::FocusNavigationDirection focusNavigationDirection);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.TraversalRequest : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.Input.TraversalRequest" Usage="new System.Windows.Input.TraversalRequest focusNavigationDirection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="focusNavigationDirection" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="focusNavigationDirection">Die vorgesehene Richtung des Fokusdurchlaufs als Wert der Enumeration.</param>
        <summary>Initialisiert eine neue Instanz der Klasse <see cref="T:System.Windows.Input.TraversalRequest" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Im folgenden Beispiel wird eine <xref:System.Windows.Input.TraversalRequest>-Instanz als Eingabe für einen <xref:System.Windows.FrameworkElement.MoveFocus%2A?displayProperty=nameWithType> aufgerufen.  
  
 [!code-csharp[FocusSample#FocusSampleMoveFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplemovefocus)]
 [!code-vb[FocusSample#FocusSampleMoveFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplemovefocus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection" />
      </Docs>
    </Member>
    <Member MemberName="FocusNavigationDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Input.FocusNavigationDirection FocusNavigationDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.FocusNavigationDirection FocusNavigationDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TraversalRequest.FocusNavigationDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FocusNavigationDirection As FocusNavigationDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::FocusNavigationDirection FocusNavigationDirection { System::Windows::Input::FocusNavigationDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.FocusNavigationDirection : System.Windows.Input.FocusNavigationDirection" Usage="System.Windows.Input.TraversalRequest.FocusNavigationDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.FocusNavigationDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Durchlaufrichtung ab.</summary>
        <value>Einer der Enumerationswerte der Durchlaufrichtung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Eigenschaft ist schreibgeschützt, da es sich bei der <xref:System.Windows.Input.FocusNavigationDirection> um einen erforderlichen Eingabeparameter des <xref:System.Windows.Input.TraversalRequest>-Klassenkonstruktors handelt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Wrapped">
      <MemberSignature Language="C#" Value="public bool Wrapped { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Wrapped" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TraversalRequest.Wrapped" />
      <MemberSignature Language="VB.NET" Value="Public Property Wrapped As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Wrapped { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Wrapped : bool with get, set" Usage="System.Windows.Input.TraversalRequest.Wrapped" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob der Fokusdurchlauf das Ende der untergeordneten Elemente erreicht hat, die den Fokus besitzen können, oder legt diesen fest.</summary>
        <value><see langword="true" />, wenn dieser Durchlauf das Ende der untergeordneten Elemente erreicht hat, die den Fokus besitzen können, andernfalls <see langword="false" />. Der Standardwert lautet <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Fokus nutzbare Elemente sind die Elemente, bei denen die <xref:System.Windows.UIElement.Focusable%2A>-Eigenschaft `true`ist.  
  
 Dieser Parameter ist in erster Linie dafür gedacht, zu übermitteln, ob die Traversierung mithilfe von Tabstopps beim Aufrufen der Methoden <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A>, <xref:System.Windows.Forms.Integration.WindowsFormsHost.TabInto%2A>oder durchlaufen soll.<xref:System.Windows.Interop.IKeyboardInputSite.OnNoMoreTabStops%2A>. Wenn Sie den Fokus an ein Objekt übergeben, das <xref:System.Windows.Interop.IKeyboardInputSink>implementiert, führt die Angabe von true für <xref:System.Windows.Input.TraversalRequest.Wrapped%2A> dazu, dass `true` Wert an die <xref:System.Windows.Interop.IKeyboardInputSink.TabInto%2A> Implementierung übergeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
