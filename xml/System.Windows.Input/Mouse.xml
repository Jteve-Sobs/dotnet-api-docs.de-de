<Type Name="Mouse" FullName="System.Windows.Input.Mouse">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad0dfb834b31186d348d87b3d66c5ce6942392ae" /><Meta Name="ms.sourcegitcommit" Value="8e213bb5e6801f6e29861ba72664978ad00e34fa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="02/18/2019" /><Meta Name="ms.locfileid" Value="56350840" /></Metadata><TypeSignature Language="C#" Value="public static class Mouse" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit Mouse extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.Mouse" />
  <TypeSignature Language="VB.NET" Value="Public Class Mouse" />
  <TypeSignature Language="C++ CLI" Value="public ref class Mouse abstract sealed" />
  <TypeSignature Language="F#" Value="type Mouse = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="d3eaf-101">Stellt das Mausgerät für einen bestimmten Thread dar.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-101">Represents the mouse device to a specific thread.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-102">Die <xref:System.Windows.Input.Mouse> -Klasse stellt die Maus bezogene Ereignisse, Methoden und Eigenschaften, die Informationen über den Zustand der Maus bereitzustellen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-102">The <xref:System.Windows.Input.Mouse> class provides mouse related events, methods and, properties which provide information regarding the state of the mouse.</span></span>  
  
 <span data-ttu-id="d3eaf-103">Jedes Ereignis, <xref:System.Windows.Input.Mouse> definiert, wie ein angefügtes Ereignis auch von den Basiselementklassen wieder verfügbar gemacht wird <xref:System.Windows.UIElement> und <xref:System.Windows.ContentElement> als neues Routingereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-103">Each event that <xref:System.Windows.Input.Mouse> defines as an attached event is also re-exposed by the base element classes <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> as a new routed event.</span></span> <span data-ttu-id="d3eaf-104">Im Allgemeinen ist es praktischer, Behandeln von Mausereignissen für eine Anwendung auf <xref:System.Windows.UIElement> und <xref:System.Windows.ContentElement>, anstatt die <xref:System.Windows.Input.Mouse> Ereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-104">Generally, it is more convenient to handle mouse events for an application on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>, rather than using the <xref:System.Windows.Input.Mouse> events.</span></span> <span data-ttu-id="d3eaf-105">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-105">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="d3eaf-106">Die statischen Member der der <xref:System.Windows.Input.Mouse> Klasse-Delegat, der das primäre <xref:System.Windows.Input.MouseDevice> des Eingabe-Manager des aufrufenden Threads.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-106">The static members of the <xref:System.Windows.Input.Mouse> class delegate to the primary <xref:System.Windows.Input.MouseDevice> of the calling thread's input manager.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddGotMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-107">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-107">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-108">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-108">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-109">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-109">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void AddLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddLostMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-110">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-110">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-111">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-111">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-112">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-112">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-113">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-113">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-114">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-114">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-115">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.MouseDown" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-115">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseEnterHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-116">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-116">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-117">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-117">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-118">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.MouseEnter" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-118">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-119">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-119">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-120">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-120">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-121">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.MouseLeave" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-121">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-122">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-122">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-123">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-123">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-124">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.MouseMove" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-124">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-125">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-125">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-126">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-126">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-127">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.MouseUp" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-127">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-128">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-128">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-129">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-129">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-130">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.MouseWheel" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-130">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-131">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-132">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-132">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-133">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-133">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseDownOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseDownOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-134">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-134">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-135">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-135">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-136">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-136">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-137">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-137">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-138">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-138">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-139">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-139">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-140">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-140">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-141">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-141">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-142">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-142">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseUpOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseUpOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-143">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-143">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-144">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-144">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-145">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-145">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddPreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void AddPreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddPreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddPreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddPreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddPreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddPreviewMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddPreviewMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-146">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-146">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-147">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-147">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-148">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-148">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void AddQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.AddQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddQueryCursorHandler : System.Windows.DependencyObject * System.Windows.Input.QueryCursorEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.AddQueryCursorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-149">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-149">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-150">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-150">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-151">Fügt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.QueryCursor" />-Ereignis hinzu.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-151">Adds a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-152">Erfasst Mauseingaben für das angegebene Element.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-152">Captures mouse input to the specified element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-153">Wenn ein Element die Mausauswahl erhält, empfängt es Mauseingaben, und zwar unabhängig davon, ob der Cursor innerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-153">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="d3eaf-154">Wenn eine <xref:System.Windows.Input.CaptureMode> nicht angegeben ist, der Standardwert <xref:System.Windows.Input.CaptureMode> ist <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-154">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="d3eaf-155">Um die Erfassung von Mauseingaben freizugeben, rufen <xref:System.Windows.Input.Mouse.Capture%2A> übergeben `null` als Element zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-155">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="d3eaf-156">Wenn die Maus erfasst wird bei einem <xref:System.Windows.Input.Mouse.MouseDown> oder <xref:System.Windows.Input.Mouse.MouseUp> Ereignis wird ausgelöst, und die Eingabe ist nicht für das Element unter der Maus <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> und <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> zuerst ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-156">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="d3eaf-157">Dies ermöglicht das erfasste Element die Erfassung vor dem Freigeben der <xref:System.Windows.Input.Mouse.MouseDown> und <xref:System.Windows.Input.Mouse.MouseUp> Ereignisse werden weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-157">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement -&gt; bool" Usage="System.Windows.Input.Mouse.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-158">Das Element, für das die Maus erfasst werden soll.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-158">The element to capture the mouse.</span></span></param>
        <summary><span data-ttu-id="d3eaf-159">Erfasst Mauseingaben für das angegebene Element.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-159">Captures mouse input to the specified element.</span></span></summary>
        <returns><span data-ttu-id="d3eaf-160"><see langword="true" />, wenn das Element die Maus erfassen konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-160"><see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-161">Wenn ein Element die Mausauswahl erhält, empfängt es Mauseingaben, und zwar unabhängig davon, ob der Cursor innerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-161">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="d3eaf-162">Wenn eine <xref:System.Windows.Input.CaptureMode> nicht angegeben ist, der Standardwert <xref:System.Windows.Input.CaptureMode> ist <xref:System.Windows.Input.CaptureMode.Element>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-162">If a <xref:System.Windows.Input.CaptureMode> is not specified, the default <xref:System.Windows.Input.CaptureMode> is <xref:System.Windows.Input.CaptureMode.Element>.</span></span>  
  
 <span data-ttu-id="d3eaf-163">Um die Erfassung von Mauseingaben freizugeben, rufen <xref:System.Windows.Input.Mouse.Capture%2A> übergeben `null` als Element zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-163">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="d3eaf-164">Wenn die Maus erfasst wird bei einem <xref:System.Windows.Input.Mouse.MouseDown> oder <xref:System.Windows.Input.Mouse.MouseUp> Ereignis wird ausgelöst, und die Eingabe ist nicht für das Element unter der Maus <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> und <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> zuerst ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-164">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="d3eaf-165">Dies ermöglicht das erfasste Element die Erfassung vor dem Freigeben der <xref:System.Windows.Input.Mouse.MouseDown> und <xref:System.Windows.Input.Mouse.MouseUp> Ereignisse werden weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-165">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3eaf-166">Das folgende Beispiel zeigt, wie Sie mithilfe die Maus auf ein bestimmtes Element Erfassen der <xref:System.Windows.Input.Mouse.Capture%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-166">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public static bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="static member Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="System.Windows.Input.Mouse.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-167">Das Element, für das die Maus erfasst werden soll.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-167">The element to capture the mouse.</span></span></param>
        <param name="captureMode"><span data-ttu-id="d3eaf-168">Die zu verwendende Erfassungsrichtlinie.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-168">The capture policy to use.</span></span></param>
        <summary><span data-ttu-id="d3eaf-169">Erfasst Mauseingaben für das angegebene Element mit dem angegebenen <see cref="T:System.Windows.Input.CaptureMode" />.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-169">Captures mouse input to the specified element using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span></span></summary>
        <returns><span data-ttu-id="d3eaf-170"><see langword="true" />, wenn das Element die Maus erfassen konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-170"><see langword="true" /> if the element was able to capture the mouse; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-171">Wenn ein Element die Mausauswahl erhält, empfängt es die Mauseingabe, ob der Cursor innerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-171">When an element captures the mouse, it receives mouse input whether the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="d3eaf-172">Um die Erfassung von Mauseingaben freizugeben, rufen <xref:System.Windows.Input.Mouse.Capture%2A> übergeben `null` als Element zu erfassen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-172">To release mouse capture, call <xref:System.Windows.Input.Mouse.Capture%2A> passing `null` as the element to capture.</span></span>  
  
 <span data-ttu-id="d3eaf-173">Wenn die Maus erfasst wird bei einem <xref:System.Windows.Input.Mouse.MouseDown> oder <xref:System.Windows.Input.Mouse.MouseUp> Ereignis wird ausgelöst, und die Eingabe ist nicht für das Element unter der Maus <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> und <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> zuerst ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-173">If the mouse is captured when a <xref:System.Windows.Input.Mouse.MouseDown> or <xref:System.Windows.Input.Mouse.MouseUp> event is raised and the input is not going to the element underneath the mouse, <xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement> and <xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement> are raised first.</span></span>  <span data-ttu-id="d3eaf-174">Dies ermöglicht das erfasste Element die Erfassung vor dem Freigeben der <xref:System.Windows.Input.Mouse.MouseDown> und <xref:System.Windows.Input.Mouse.MouseUp> Ereignisse werden weitergeleitet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-174">This enables the captured element a chance to release capture before the <xref:System.Windows.Input.Mouse.MouseDown> and <xref:System.Windows.Input.Mouse.MouseUp> events are routed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3eaf-175">Das folgende Beispiel zeigt, wie Sie mithilfe die Maus auf ein bestimmtes Element Erfassen der <xref:System.Windows.Input.Mouse.Capture%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-175">The following example shows how to capture the mouse to a specific element by using the <xref:System.Windows.Input.Mouse.Capture%2A> method.</span></span>  
  
 [!code-csharp[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecaptursamplecaptureelement)]
 [!code-vb[MouseCaptureSample#MouseCapturSampleCaptureElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecaptursamplecaptureelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.Captured" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.Mouse.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-176">Ruft das Element ab, das die Maus erfasst hat.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-176">Gets the element that has captured the mouse.</span></span></summary>
        <value><span data-ttu-id="d3eaf-177">Das Element, das die Maus erfasst hat.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-177">The element captured by the mouse.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-178">Wenn ein Element die Mausauswahl erhält, empfängt es Mauseingaben, und zwar unabhängig davon, ob der Cursor innerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-178">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="d3eaf-179">Die Maus ist nur während der Drag & Drop-Vorgänge in der Regel auf diese Weise erfasst und behält die Aufzeichnung, bis die Drop-Aktion des Drag & Drop-Vorgangs ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-179">The mouse is typically captured in this manner only during drag-and-drop operations, and retains capture until the drop action of the drag-and-drop operation occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3eaf-180">Im folgenden Beispiel veranschaulicht das Element zu erhalten, das Maus erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-180">The follow example shows how to obtain the element that has mouse capture.</span></span>  
  
 [!code-csharp[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseCaptureSample/CSharp/Window1.xaml.cs#mousecapturemousecaptured)]
 [!code-vb[mousecapturesample#MouseCaptureMouseCaptured](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseCaptureSample/visualbasic/window1.xaml.vb#mousecapturemousecaptured)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.Mouse.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-181">Ruft das Element ab, über dem sich der Mauszeiger befindet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-181">Gets the element the mouse pointer is directly over.</span></span></summary>
        <value><span data-ttu-id="d3eaf-182">Das Element, über dem sich der Mauszeiger befindet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-182">The element the mouse pointer is over.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-183">Steuerelemente können aus mehreren Elementen bestehen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-183">Controls can be composed of multiple elements.</span></span> <span data-ttu-id="d3eaf-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> meldet das spezifische Element in das zusammengesetzte Steuerelement, die, dem der Mauszeiger befindet, und nicht das Steuerelement selbst.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-184"><xref:System.Windows.Input.Mouse.DirectlyOver%2A> reports the specific element in the composite control the mouse pointer is over and not the control itself.</span></span> <span data-ttu-id="d3eaf-185">Z. B. je nach welchen Teil ein <xref:System.Windows.Controls.Button> der Zeiger ist, die <xref:System.Windows.Input.Mouse.DirectlyOver%2A> Eigenschaft könnte folgenden Bericht die <xref:System.Windows.Controls.TextBox> von der <xref:System.Windows.Controls.ContentControl.Content%2A> Eigenschaft oder der <xref:Microsoft.Windows.Themes.ButtonChrome>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-185">For example, depending on which part of a <xref:System.Windows.Controls.Button> the pointer is over, the <xref:System.Windows.Input.Mouse.DirectlyOver%2A> property could report the <xref:System.Windows.Controls.TextBox> of the <xref:System.Windows.Controls.ContentControl.Content%2A> property or the <xref:Microsoft.Windows.Themes.ButtonChrome>.</span></span>  
  
 <span data-ttu-id="d3eaf-186">Verwenden der <xref:System.Windows.IInputElement.IsMouseOver%2A> Eigenschaft <xref:System.Windows.UIElement> und <xref:System.Windows.ContentElement> zu bestimmen, ob die Maus über ein Element, einschließlich seiner visuellen untergeordneten Elemente oder Zusammensetzung Elemente zu steuern.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-186">Use the <xref:System.Windows.IInputElement.IsMouseOver%2A> property on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement> to determine whether the mouse is over an element, which includes its visual child elements or control compositing elements.</span></span>  
  
 <span data-ttu-id="d3eaf-187">Wenn ein Element die Erfassung von Mauseingaben besitzt, der Mauszeiger direkt über dem Element gilt unabhängig davon das, wo sich der Mauszeiger befindet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-187">If an element has mouse capture, the mouse pointer is considered directly over the element regardless of the where the mouse pointer is.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.UIElement.IsMouseOver" />
        <altmember cref="P:System.Windows.UIElement.IsMouseDirectlyOver" />
      </Docs>
    </Member>
    <Member MemberName="GetIntermediatePoints">
      <MemberSignature Language="C#" Value="public static int GetIntermediatePoints (System.Windows.IInputElement relativeTo, System.Windows.Point[] points);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 GetIntermediatePoints(class System.Windows.IInputElement relativeTo, valuetype System.Windows.Point[] points) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetIntermediatePoints(System.Windows.IInputElement,System.Windows.Point[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIntermediatePoints (relativeTo As IInputElement, points As Point()) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int GetIntermediatePoints(System::Windows::IInputElement ^ relativeTo, cli::array &lt;System::Windows::Point&gt; ^ points);" />
      <MemberSignature Language="F#" Value="static member GetIntermediatePoints : System.Windows.IInputElement * System.Windows.Point[] -&gt; int" Usage="System.Windows.Input.Mouse.GetIntermediatePoints (relativeTo, points)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
        <Parameter Name="points" Type="System.Windows.Point[]" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="d3eaf-188">Die Elemente, zu denen die <paramref name="points" /> in Beziehung stehen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-188">The elements <paramref name="points" /> are in relation to.</span></span></param>
        <param name="points"><span data-ttu-id="d3eaf-189">Ein Array von Objekten.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-189">An array of objects.</span></span></param>
        <summary><span data-ttu-id="d3eaf-190">Ruft bis zu 64 frühere Koordinaten des Mauszeigers seit dem letzten Mausbewegungsereignis ab.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-190">Retrieves up to 64 previous coordinates of the mouse pointer since the last mouse move event.</span></span></summary>
        <returns><span data-ttu-id="d3eaf-191">Die Anzahl der zurückgegebenen Punkte.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-191">The number of points returned.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPosition">
      <MemberSignature Language="C#" Value="public static System.Windows.Point GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.Point GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetPosition (relativeTo As IInputElement) As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Point GetPosition(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="static member GetPosition : System.Windows.IInputElement -&gt; System.Windows.Point" Usage="System.Windows.Input.Mouse.GetPosition relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="d3eaf-192">Der Koordinatenbereich, in dem die Position der Maus berechnet werden soll.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-192">The coordinate space in which to calculate the position of the mouse.</span></span></param>
        <summary><span data-ttu-id="d3eaf-193">Ruft die Position der Maus relativ zu einem angegebenen Element ab.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-193">Gets the position of the mouse relative to a specified element.</span></span></summary>
        <returns><span data-ttu-id="d3eaf-194">Die Position der Maus relativ zum <paramref name="relativeTo" />-Parameter.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-194">The position of the mouse relative to the parameter <paramref name="relativeTo" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-195">Die Position des Mauszeigers wird relativ zum angegebenen Element mit der linken oberen Ecke des Elements den Ausgangspunkt des, 0,0 berechnet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-195">The position of the mouse pointer is calculated relative to the specified element with the upper-left corner of element being the point of origin, 0,0.</span></span>  
  
 <span data-ttu-id="d3eaf-196">Während der Drag & Drop-Vorgänge, die Position der Maus kann nicht zuverlässig bestimmt werden über <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-196">During drag-and-drop operations, the position of the mouse cannot be reliably determined through <xref:System.Windows.Input.Mouse.GetPosition%2A>.</span></span> <span data-ttu-id="d3eaf-197">Dies ist da die Kontrolle über die Maus (ggf. einschließlich der Erfassung) durch das ursprüngliche Element des Ziehvorgangs gespeichert wird, bis die Dropdownliste abgeschlossen ist, können Sie auch ein Großteil des Verhaltens von zugrunde liegenden gesteuert [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] aufrufen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-197">This is because control of the mouse (possibly including capture) is held by the originating element of the drag until the drop is completed, with much of the behavior controlled by underlying [!INCLUDE[TLA#tla_win32](~/includes/tlasharptla-win32-md.md)] calls.</span></span> <span data-ttu-id="d3eaf-198">Verwenden Sie stattdessen die folgenden Ansätze:</span><span class="sxs-lookup"><span data-stu-id="d3eaf-198">Try the following approaches instead:</span></span>  
  
-   <span data-ttu-id="d3eaf-199">Rufen Sie die <xref:System.Windows.DragEventArgs.GetPosition%2A> Methode der <xref:System.Windows.DragEventArgs> übergebene Drop-Ereignisse (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-199">Call the <xref:System.Windows.DragEventArgs.GetPosition%2A> method of the <xref:System.Windows.DragEventArgs> that is passed to the drag events (<xref:System.Windows.ContentElement.DragEnter>, <xref:System.Windows.ContentElement.DragOver>, <xref:System.Windows.ContentElement.DragLeave>).</span></span>  
  
-   <span data-ttu-id="d3eaf-200">Rufen Sie [GetCursorPos](https://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), P/Invoke verwenden.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-200">Call [GetCursorPos](https://msdn.microsoft.com/library/default.asp?url=/library/winui/winui/windowsuserinterface/resources/cursors/cursorreference/cursorfunctions/getcursorpos.asp), using P/Invoke.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3eaf-201">Das folgende Beispiel zeigt, wie Sie mit <xref:System.Windows.Input.Mouse.GetPosition%2A> bestimmen die Position des Mauszeigers.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-201">The following example shows how to use <xref:System.Windows.Input.Mouse.GetPosition%2A> to determine the position of the mouse pointer.</span></span>  <span data-ttu-id="d3eaf-202">Die Position des Mauszeigers befindet sich in einem <xref:System.Windows.Point> Struktur.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-202">The position of the mouse pointer is stored in a <xref:System.Windows.Point> structure.</span></span>  <span data-ttu-id="d3eaf-203">Die <xref:System.Windows.Point.X%2A> und <xref:System.Windows.Point.Y%2A> Werte von der <xref:System.Windows.Point> Objekt werden angezeigt, eine <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-203">The <xref:System.Windows.Point.X%2A> and <xref:System.Windows.Point.Y%2A> values of the <xref:System.Windows.Point> object are displayed in a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetspositionmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsPositionMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetspositionmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Input.MouseEventArgs.GetPosition(System.Windows.IInputElement)" />
      </Docs>
    </Member>
    <Member MemberName="GotMouseCapture">
      <MemberSignature Language="C#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.GotMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" Usage="see AddGotMouseCaptureHandler, and RemoveGotMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-204">Tritt auf, wenn ein Element die Maus erfasst.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-204">Occurs when an element captures the mouse.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-205">Wenn ein Element die Mausauswahl erhält, empfängt es Mauseingaben, und zwar unabhängig davon, ob der Cursor innerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-205">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span>  
  
 <span data-ttu-id="d3eaf-206">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-206">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-207">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-207">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-208">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-208">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-209">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-209">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-210">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-210">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="d3eaf-211">Aufgrund der bubbling-routing möglicherweise das eigentliche Element, das erfasst wird ein untergeordnetes Element, nicht unbedingt das Element, in dem der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-211">Because of the bubbling routing, the actual element that has capture might be a child element, not necessarily the element where the event handler is actually attached.</span></span> <span data-ttu-id="d3eaf-212">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in dieser Argumente für das tatsächliche Element zu bestimmen, das die Mauseingaben erfasst.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-212">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event arguments to determine the actual element that has mouse capture.</span></span>  
  
<a name="routedEventInfo_GotMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-213">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-213">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-214">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-214">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.GotMouseCaptureEvent>|  
|<span data-ttu-id="d3eaf-215">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-215">Routing strategy</span></span>|<span data-ttu-id="d3eaf-216">Bubbling</span><span class="sxs-lookup"><span data-stu-id="d3eaf-216">Bubbling</span></span>|  
|<span data-ttu-id="d3eaf-217">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-217">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="d3eaf-218">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-218">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.GotMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-219">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-219">Identifies the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-220">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-220">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-221">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-221">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-222">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-222">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LeftButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState LeftButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState LeftButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.LeftButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property LeftButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState LeftButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.LeftButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.LeftButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-223">Ruft den Zustand der linken Maustaste ab.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-223">Gets the state of the left button of the mouse.</span></span></summary>
        <value><span data-ttu-id="d3eaf-224">Der Zustand der linken Maustaste.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-224">The state of the left mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d3eaf-225">Das folgende Beispiel zeigt, wie Sie bestimmen, ob die linke Maustaste gedrückt wird, indem Sie überprüfen, ob der Status der der <xref:System.Windows.Input.Mouse.LeftButton%2A> ist gleich der <xref:System.Windows.Input.MouseButtonState> Enumerationswert <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-225">The following example shows how to determine whether the left mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.LeftButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="d3eaf-226">Wenn die Schaltfläche gedrückt wird, wird eine Methode aufgerufen, welche Updates Elemente in diesem Beispiel anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-226">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetleftbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetLeftButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetleftbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="LostMouseCapture">
      <MemberSignature Language="C#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.LostMouseCapture" />
      <MemberSignature Language="VB.NET" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberSignature Language="F#" Value="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" Usage="see AddLostMouseCaptureHandler, and RemoveLostMouseCaptureHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-227">Tritt auf, wenn ein Element keine Mauseingaben mehr erfasst.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-227">Occurs when an element loses mouse capture.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-228">Wenn ein Element die Mausauswahl erhält, empfängt es Mauseingaben, und zwar unabhängig davon, ob der Cursor innerhalb seiner Grenzen befindet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-228">When an element captures the mouse, it receives mouse input whether or not the cursor is within its borders.</span></span> <span data-ttu-id="d3eaf-229">T</span><span class="sxs-lookup"><span data-stu-id="d3eaf-229">T</span></span>  
  
 <span data-ttu-id="d3eaf-230">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-230">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-231">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-231">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-232">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-232">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-233">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-233">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-234">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-234">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="d3eaf-235">Aufgrund der bubbling-routing möglicherweise das tatsächliche Element, das Mausereignisse mehr erfasst ein untergeordnetes Element, nicht unbedingt das Element, in dem der Ereignishandler tatsächlich angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-235">Because of the bubbling routing, the actual element that lost capture might be a child element, not necessarily the element where the event handler is actually attached.</span></span> <span data-ttu-id="d3eaf-236">Überprüfen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> in die Ereignisargumente, um das Element zu bestimmen, die Mausereignisse mehr erfasst.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-236">Check the <xref:System.Windows.RoutedEventArgs.Source%2A> in the event arguments to determine the actual element that lost capture.</span></span>  
  
<a name="routedEventInfo_LostMouseCapture"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-237">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-237">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-238">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-238">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.LostMouseCaptureEvent>|  
|<span data-ttu-id="d3eaf-239">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-239">Routing strategy</span></span>|<span data-ttu-id="d3eaf-240">Bubbling</span><span class="sxs-lookup"><span data-stu-id="d3eaf-240">Bubbling</span></span>|  
|<span data-ttu-id="d3eaf-241">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-241">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="d3eaf-242">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-242">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostMouseCaptureEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostMouseCaptureEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostMouseCaptureEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostMouseCaptureEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostMouseCaptureEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostMouseCaptureEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.LostMouseCaptureEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-243">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-243">Identifies the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-244">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-244">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-245">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-245">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-246">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-246">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MiddleButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState MiddleButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState MiddleButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.MiddleButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MiddleButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState MiddleButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.MiddleButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.MiddleButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-247">Ruft den Zustand der mittleren Maustaste ab.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-247">Gets the state of the middle button of the mouse.</span></span></summary>
        <value><span data-ttu-id="d3eaf-248">Der Zustand der mittleren Maustaste.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-248">The state of the middle mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d3eaf-249">Das folgende Beispiel zeigt, wie Sie bestimmen, ob die mittlere Maustaste gedrückt ist, indem Sie überprüfen, ob der Status der der <xref:System.Windows.Input.Mouse.MiddleButton%2A> ist gleich der <xref:System.Windows.Input.MouseButtonState> Enumerationswert <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-249">The following example shows how to determine whether the middle mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.MiddleButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="d3eaf-250">Wenn die Schaltfläche gedrückt wird, wird eine Methode aufgerufen, welche Updates Elemente in diesem Beispiel anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-250">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetmiddlebuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetMiddleButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetmiddlebuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseDown">
      <MemberSignature Language="C#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberSignature Language="F#" Value="see AddMouseDownHandler, and RemoveMouseDownHandler" Usage="see AddMouseDownHandler, and RemoveMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-251">Tritt auf, wenn eine Maustaste gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-251">Occurs when any mouse button is depressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-252">Um zu bestimmen, welche Maustaste gedrückt wurde, überprüfen Sie die <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> -Eigenschaft in der <xref:System.Windows.Input.MouseButtonEventArgs> an den Ereignishandler übergeben.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-252">To determine which mouse button was depressed, check the <xref:System.Windows.Input.MouseButtonEventArgs.ChangedButton%2A> property in the <xref:System.Windows.Input.MouseButtonEventArgs> passed to the handler.</span></span>  
  
 <span data-ttu-id="d3eaf-253">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-253">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-254">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-254">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-255">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-255">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-256">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-256">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-257">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-257">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="d3eaf-258">Die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework baut auf dem angefügten Ereignis auf, indem dieses als zwei unterschiedliche [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignisse auf <xref:System.Windows.UIElement> und <xref:System.Windows.ContentElement>: <xref:System.Windows.UIElement.MouseLeftButtonDown> und <xref:System.Windows.UIElement.MouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-258">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement> and <xref:System.Windows.ContentElement>: <xref:System.Windows.UIElement.MouseLeftButtonDown> and <xref:System.Windows.UIElement.MouseRightButtonDown>.</span></span> <span data-ttu-id="d3eaf-259">Diese Implementierungen zu behandeln, die zugrunde liegende <xref:System.Windows.Input.Mouse.MouseDown> Ereignis und Lesen Sie die Argumente des Ereignisses zu bestimmen, ob die linke oder rechte Maustaste beteiligt war.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-259">These implementations handle the underlying <xref:System.Windows.Input.Mouse.MouseDown> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="d3eaf-260">Für eine drei-Tasten-Maus wird keine unterstützt auf Frameworkebene-Ereignis für die Schaltfläche zentriert aus.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-260">For a three-button mouse, there is no framework-level event support for the center button.</span></span> <span data-ttu-id="d3eaf-261">Verwenden Sie die <xref:System.Windows.Input.Mouse.MouseDown> Ereignis, und Überprüfen der <xref:System.Windows.Input.MouseEventArgs.MiddleButton%2A> Zustand in den Ereignisdaten Argumente.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-261">You should use the <xref:System.Windows.Input.Mouse.MouseDown> event and check the <xref:System.Windows.Input.MouseEventArgs.MiddleButton%2A> state in the event arguments.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="d3eaf-262">Einige <xref:System.Windows.ContentElement> abgeleitete Klassen, die Control-ähnliches Verhalten, z. B. <xref:System.Windows.Documents.Hyperlink>, möglicherweise inhärente Klassenbehandlung für Mausereignisse-Schaltfläche.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-262">A few <xref:System.Windows.ContentElement> derived classes that have control-like behavior, for example, <xref:System.Windows.Documents.Hyperlink>, might have inherent class handling for mouse button events.</span></span> <span data-ttu-id="d3eaf-263">Die linke Maustaste ausgelöste Ereignis ist das wahrscheinlichste Ereignis um eine Klassenbehandlung in einem Steuerelement zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-263">The left mouse button down event is the most likely event to have class handling in a control.</span></span> <span data-ttu-id="d3eaf-264">Die Klassenbehandlung häufig kennzeichnet das zugrunde liegende <xref:System.Windows.Input.Mouse> Klassenereignis als behandelt.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-264">The class handling often marks the underlying <xref:System.Windows.Input.Mouse> class event as handled.</span></span> <span data-ttu-id="d3eaf-265">Sobald das Ereignis als behandelt markiert ist, werden andere instanzhandlern, die auf das betreffende Element angefügt sind nicht normalerweise ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-265">Once the event is marked handled, other instance handlers that are attached to that element are not ordinarily raised.</span></span> <span data-ttu-id="d3eaf-266">Keine andere Klasse oder Instanz Handler, die auf Elemente in der bubbling-Richtung zum Stamm in der Benutzeroberflächenautomatisierungs-Struktur angefügt sind, werden Regel nicht ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-266">Any other class or instance handlers that are attached to elements in the bubbling direction towards the root in the UI tree are also not ordinarily raised.</span></span>  
  
 <span data-ttu-id="d3eaf-267">Können Sie beheben Sie das Problem, die im vorangehenden wichtigen Hinweis beschrieben wird und trotzdem erhalten <xref:System.Windows.UIElement.MouseDown> Ereignisse für die linke Maustaste gedrückt down-Ereignissen in einer abgeleiteten Klasse, die Klassenbehandlung mithilfe einer der folgenden Lösungen:</span><span class="sxs-lookup"><span data-stu-id="d3eaf-267">You can resolve the issue that is outlined in the preceding Important note and still receive <xref:System.Windows.UIElement.MouseDown> events for left mouse button down events on a derived class that has class handling by using either of these solutions:</span></span>  
  
-   <span data-ttu-id="d3eaf-268">Fügen Sie Handler für die <xref:System.Windows.UIElement.PreviewMouseDown> -Ereignis, das nicht von den Steuerelementen als behandelt markiert ist.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-268">Attach handlers for the <xref:System.Windows.UIElement.PreviewMouseDown> event, which is not marked as handled by the controls.</span></span> <span data-ttu-id="d3eaf-269">Beachten Sie, da dies ein Vorschauereignis ist, wird die Route am Stamm beginnt und auf das Steuerelement Tunnel.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-269">Notice that because this is a preview event, the route starts at the root and tunnels down to the control.</span></span>  
  
-   <span data-ttu-id="d3eaf-270">Registrieren Sie einen Handler für das Steuerelement durch Aufrufen von Prozedural <xref:System.Windows.UIElement.AddHandler%2A> und Auswählen der Option für die Signatur, die es ermöglicht Handlern für Ereignisse zu lauschen, auch wenn sie bereits in die Routingereignisdaten als behandelt markiert sind.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-270">Register a handler on the control procedurally by calling <xref:System.Windows.UIElement.AddHandler%2A> and choosing the signature option that enables handlers to listen for events even if they are already marked as handled in the routed event data.</span></span>  
  
 <span data-ttu-id="d3eaf-271">Achten Sie für Routingereignisse, die im Zusammenhang mit der Maus darauf zu wie oder wann Sie diese als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-271">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="d3eaf-272">Die Schwierigkeit bei der Erstellung der entsprechenden Optionen zu gibt an, ob übergeordnete Elemente auch über ein beliebiges informiert werden sollte Mausaktion ist in der Tat daher die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Framework ausgewählt haben, das Modell müssen Sie das zugrunde liegende weitergeleitet Mausereignis als angefügt werden [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignisse, die entlang der Route.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-272">The difficulty in making the appropriate choices about whether parent elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying mouse routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span> <span data-ttu-id="d3eaf-273">Ähnliche Probleme, die bei der tunnelerzwingung Mausereignisse vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-273">Similar issues exist with tunneling mouse events.</span></span>  <span data-ttu-id="d3eaf-274">Sie behandeln des Ereignisses und sollte nicht von untergeordneten Elementen an der Quelle behandelt werden, und wie würde die Zusammensetzung eines Steuerelements, dessen Bestandteile möglicherweise erwartet haben, auswirken?</span><span class="sxs-lookup"><span data-stu-id="d3eaf-274">Should you handle the event and not have it be handled by further children toward the source, and how would that affect compositing a control where the compositing pieces might have expected mouse behaviors?</span></span>  
  
<a name="routedEventInfo_MouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-275">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-275">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-276">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-276">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseDownEvent>|  
|<span data-ttu-id="d3eaf-277">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-277">Routing strategy</span></span>|<span data-ttu-id="d3eaf-278">Bubbling</span><span class="sxs-lookup"><span data-stu-id="d3eaf-278">Bubbling</span></span>|  
|<span data-ttu-id="d3eaf-279">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-279">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="d3eaf-280">Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Mouse.PreviewMouseDown>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-280">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-281">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.MouseDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-281">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-282">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-282">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-283">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-283">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-284">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-284">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnter">
      <MemberSignature Language="C#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseEnter" />
      <MemberSignature Language="VB.NET" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberSignature Language="F#" Value="see AddMouseEnterHandler, and RemoveMouseEnterHandler" Usage="see AddMouseEnterHandler, and RemoveMouseEnterHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-285">Tritt ein, wenn der Mauszeiger in die Grenzen eines Elements eintritt.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-285">Occurs when the mouse pointer enters the boundaries of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-286">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-286">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-287">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-287">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-288">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-288">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-289">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-289">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-290">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-290">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="d3eaf-291">Dieses Ereignis das direkte Ereignisbehandlung Routingstrategie verwendet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-291">This event uses the direct event handling routing strategy.</span></span> <span data-ttu-id="d3eaf-292">Direkte Routingereignisse werden nicht auf einer Route ausgelöst (sie werden nur in das gleiche Element auf denen sie ausgelöst werden behandelt).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-292">Direct routed events are not raised along a route (they are only handled in the same element on which they are raised).</span></span>  <span data-ttu-id="d3eaf-293">Sie tun, jedoch andere Aspekte des Routingereignisverhaltens, z. B. Ereignistrigger in Stilen ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-293">They do, however, enable other aspects of routed event behaviors, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="d3eaf-294">Auch wenn dieses Ereignis verwendet wird, um zu verfolgen Wenn die Maus bewegt wird ein Element, meldet es auch die <xref:System.Windows.UIElement.IsMouseOver%2A> Eigenschaft geändert hat `false` zu `true` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-294">Although this event is used to track when the mouse enters an element, it is also reporting the <xref:System.Windows.UIElement.IsMouseOver%2A> property has changed from `false` to `true` on this element.</span></span>  
  
<a name="routedEventInfo_MouseEnter"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-295">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-295">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-296">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-296">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseEnterEvent>|  
|<span data-ttu-id="d3eaf-297">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-297">Routing strategy</span></span>|<span data-ttu-id="d3eaf-298">Direkt</span><span class="sxs-lookup"><span data-stu-id="d3eaf-298">Direct</span></span>|  
|<span data-ttu-id="d3eaf-299">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-299">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseEnterEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseEnterEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseEnterEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseEnterEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseEnterEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseEnterEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseEnterEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-300">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.MouseEnter" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-300">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-301">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-301">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-302">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-302">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-303">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-303">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeave">
      <MemberSignature Language="C#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseLeave" />
      <MemberSignature Language="VB.NET" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberSignature Language="F#" Value="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" Usage="see AddMouseLeaveHandler, and RemoveMouseLeaveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-304">Tritt ein, wenn der Mauszeiger die Grenzen eines Elements verlässt.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-304">Occurs when the mouse pointer leaves the boundaries of an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-305">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-305">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-306">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-306">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-307">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-307">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-308">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-308">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-309">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-309">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="d3eaf-310">Dieses Ereignis das direkte Ereignisbehandlung Routingstrategie verwendet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-310">This event uses the direct event handling routing strategy.</span></span> <span data-ttu-id="d3eaf-311">Direkte Routingereignisse folgen keine Route (sie werden nur in das gleiche Element auf denen sie ausgelöst werden behandelt).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-311">Direct routed events do not follow a route (they are only handled in the same element on which they are raised).</span></span>  <span data-ttu-id="d3eaf-312">Sie tun, jedoch andere Aspekte des Routingereignisverhaltens, z. B. Ereignistrigger in Stilen ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-312">They do, however, enable other aspects of routed event behaviors, such as event triggers in styles.</span></span>  
  
 <span data-ttu-id="d3eaf-313">Obwohl dieses Ereignis verwendet wird, um nachzuverfolgen, wann sich der Mauszeiger ein Element, es ist auch berichtserstellung, die die <xref:System.Windows.UIElement.IsMouseOver%2A> -Eigenschaftswert geändert wurde, aus `true` zu `false` für dieses Element.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-313">Although this event is used to track when the mouse leaves an element, it is also reporting that the <xref:System.Windows.UIElement.IsMouseOver%2A> property value has changed from `true` to `false` on this element.</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-314">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-314">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-315">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-315">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseLeaveEvent>|  
|<span data-ttu-id="d3eaf-316">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-316">Routing strategy</span></span>|<span data-ttu-id="d3eaf-317">Direkt</span><span class="sxs-lookup"><span data-stu-id="d3eaf-317">Direct</span></span>|  
|<span data-ttu-id="d3eaf-318">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-318">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseLeaveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseLeaveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseLeaveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseLeaveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseLeaveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseLeaveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseLeaveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-319">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.MouseLeave" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-319">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-320">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-320">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-321">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-321">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-322">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-322">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMove">
      <MemberSignature Language="C#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberSignature Language="F#" Value="see AddMouseMoveHandler, and RemoveMouseMoveHandler" Usage="see AddMouseMoveHandler, and RemoveMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-323">Tritt ein, wenn sich die Position des Mauszeigers ändert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-323">Occurs when the mouse pointer moves.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-324">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-324">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-325">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-325">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-326">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-326">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-327">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-327">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-328">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-328">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-329">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-329">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-330">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-330">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseMoveEvent>|  
|<span data-ttu-id="d3eaf-331">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-331">Routing strategy</span></span>|<span data-ttu-id="d3eaf-332">Bubbling</span><span class="sxs-lookup"><span data-stu-id="d3eaf-332">Bubbling</span></span>|  
|<span data-ttu-id="d3eaf-333">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-333">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="d3eaf-334">Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Mouse.PreviewMouseMove>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-334">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseMove>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-335">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.MouseMove" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-335">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-336">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-336">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-337">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-337">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-338">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-338">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUp">
      <MemberSignature Language="C#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberSignature Language="F#" Value="see AddMouseUpHandler, and RemoveMouseUpHandler" Usage="see AddMouseUpHandler, and RemoveMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-339">Tritt ein, wenn eine Maustaste losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-339">Occurs when any mouse button is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-340">Die Maustaste losgelassen wurde, wird bestimmt durch Überprüfen der Argumente des Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-340">Which mouse button was released is determined by checking the arguments of the event.</span></span>  
  
 <span data-ttu-id="d3eaf-341">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-341">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-342">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-342">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-343">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-343">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-344">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-344">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-345">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-345">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="d3eaf-346">Die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework baut auf dem angefügten Ereignis auf, indem dieses als zwei unterschiedliche [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignisse auf <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.MouseLeftButtonUp> und <xref:System.Windows.UIElement.MouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-346">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.MouseLeftButtonUp> and <xref:System.Windows.UIElement.MouseRightButtonUp>.</span></span> <span data-ttu-id="d3eaf-347">Diese Implementierungen zu behandeln, die zugrunde liegende <xref:System.Windows.Input.Mouse.MouseUp> Ereignis und Lesen Sie die Argumente des Ereignisses zu bestimmen, ob die linke oder rechte Maustaste beteiligt war.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-347">These implementations handle the underlying <xref:System.Windows.Input.Mouse.MouseUp> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="d3eaf-348">Für drei-Tasten, besteht keine Frameworkebene Event-Unterstützung für die Schaltfläche zentriert aus, und Sie sollten die <xref:System.Windows.Input.Mouse.MouseUp> Ereignis, und Überprüfen der mittleren Maustaste Bedingung in der ereignismeldung Argumente.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-348">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.MouseUp> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="d3eaf-349">Achten Sie für Routingereignisse, die im Zusammenhang mit der Maus darauf zu wie oder wann Sie diese als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-349">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="d3eaf-350">Die Schwierigkeit bei der Erstellung der entsprechenden Optionen zu gibt an, ob übergeordnete Elemente auch über ein beliebiges informiert werden sollte Mausaktion ist in der Tat daher die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Framework ausgewählt haben, das Modell für das zugrunde liegende <xref:System.Windows.Input.Mouse> Routingereignis als Verbindungsversuchs[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignisse Anspannung die Route.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-350">The difficulty in making the appropriate choices about whether parent elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events all along the route.</span></span>  
  
 <span data-ttu-id="d3eaf-351">Ähnliche Probleme, die bei der tunnelerzwingung Mausereignisse vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-351">Similar issues exist with tunneling mouse events.</span></span>  <span data-ttu-id="d3eaf-352">Sie behandeln des Ereignisses und sollte nicht von untergeordneten Elementen Weitere, für die Quelle behandelt werden, und wie würde dieser Zusammensetzung auswirken in einem Steuerelement, dessen Bestandteile möglicherweise erwartet haben, Verhalten?</span><span class="sxs-lookup"><span data-stu-id="d3eaf-352">Should you handle the event and not have it be handled by children further towards the source, and how would that affect compositing in a control where the compositing pieces might have expected mouse behaviors?</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-353">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-353">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-354">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-354">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseUpEvent>|  
|<span data-ttu-id="d3eaf-355">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-355">Routing strategy</span></span>|<span data-ttu-id="d3eaf-356">Bubbling</span><span class="sxs-lookup"><span data-stu-id="d3eaf-356">Bubbling</span></span>|  
|<span data-ttu-id="d3eaf-357">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-357">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
 <span data-ttu-id="d3eaf-358">Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Mouse.PreviewMouseUp>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-358">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-359">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.MouseUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-359">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-360">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-360">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-361">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-361">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-362">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-362">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheel">
      <MemberSignature Language="C#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.MouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberSignature Language="F#" Value="see AddMouseWheelHandler, and RemoveMouseWheelHandler" Usage="see AddMouseWheelHandler, and RemoveMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-363">Tritt auf, wenn das Mausrad bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-363">Occurs when the mouse wheel is rotated.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-364">Fokus oder die Maus erfassen haben Vorrang vor, in dem der Mauszeiger befindet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-364">Focus or mouse capture take precedence over where the mouse pointer is.</span></span>  <span data-ttu-id="d3eaf-365">Wenn Sie dieses Ereignis von einem Element mit Fokus oder erfasste erhalten haben, kann der Mauszeiger in der Tat über ein anderes Element zum Zeitpunkt befinden.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-365">If you receive this event from a focused or captured element, the mouse pointer might in fact be over another element at the time.</span></span>  
  
 <span data-ttu-id="d3eaf-366">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-366">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-367">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-367">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-368">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-368">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-369">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-369">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-370">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-370">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_MouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-371">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-371">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-372">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-372">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.MouseWheelEvent>|  
|<span data-ttu-id="d3eaf-373">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-373">Routing strategy</span></span>|<span data-ttu-id="d3eaf-374">Bubbling</span><span class="sxs-lookup"><span data-stu-id="d3eaf-374">Bubbling</span></span>|  
|<span data-ttu-id="d3eaf-375">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-375">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="d3eaf-376">Das entsprechende tunnelingereignis ist <xref:System.Windows.Input.Mouse.PreviewMouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-376">The corresponding tunneling event is <xref:System.Windows.Input.Mouse.PreviewMouseWheel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseWheelDeltaForOneLine">
      <MemberSignature Language="C#" Value="public const int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MouseWheelDeltaForOneLine = (120)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberSignature Language="VB.NET" Value="Public Const MouseWheelDeltaForOneLine As Integer  = 120" />
      <MemberSignature Language="C++ CLI" Value="public: int MouseWheelDeltaForOneLine = 120;" />
      <MemberSignature Language="F#" Value="val mutable MouseWheelDeltaForOneLine : int" Usage="System.Windows.Input.Mouse.MouseWheelDeltaForOneLine" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>120</MemberValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-377">Stellt die Anzahl der Einheiten dar, die das Mausrad gedreht werden muss, um einen Bildlauf von einer Zeile durchzuführen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-377">Represents the number of units the mouse wheel is rotated to scroll one line.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-378">In der aktuellen [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], der Wert dieses Felds ist 120.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-378">In the current [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)], the value of this field is 120.</span></span> <span data-ttu-id="d3eaf-379">Die Absicht Verfügbarmachen dieses Felds ist für die softwareaktualisierung eine feinere Auflösung Mausräder in Zukunft zu erstellen, die vielleicht der kostenlos rotierende Rad ohne Stufen enthalten ist.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-379">The intention of the field exposure is to allow for vendors to build finer-resolution mouse wheels in the future, that perhaps would include a freely rotating wheel without notches.</span></span> <span data-ttu-id="d3eaf-380">Es wird erwartet, dass ein solches Gerät mehr Nachrichten pro Drehung, sondern mit einem kleineren Wert in jeder Nachricht sendet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-380">The expectation is that such a device would send more messages per rotation, but with a smaller value in each message.</span></span> <span data-ttu-id="d3eaf-381">Um dies zu unterstützen, sollten Sie entweder die eingehenden Deltawerte bis zum Hinzufügen der <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> Betrag erreicht ist (also für eine Delta-Drehung um die gleiche Antwort erhalten haben), oder Scrollen Sie partielle Zeilen als Reaktion auf die häufigen Nachrichten.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-381">To support this possibility, you should either add the incoming delta values until the <xref:System.Windows.Input.Mouse.MouseWheelDeltaForOneLine> amount is reached (so for a delta-rotation you get the same response), or scroll partial lines in response to the more frequent messages.</span></span> <span data-ttu-id="d3eaf-382">Sie können auch Ihre eigenen Scroll Granularität auswählen und werden, bis der, dass deltadaten erreicht wird, oder vielleicht verweisen von Benutzern steuerbare Systemparameter für die Empfindlichkeit der Maus und dann extrapolieren können diese in der Maustaste Wheel Delta Schwellenwerte Ihre Deltas Ihrer Wahl.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-382">You could also choose your own scroll granularity and accumulate deltas of your own choosing until that delta is reached, or perhaps reference user-controllable system parameters for mouse sensitivity and extrapolate these to mouse wheel delta thresholds.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseWheelEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="MouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent MouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent MouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ MouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable MouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.MouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-383">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.MouseWheel" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-383">Identifies the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-384">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-384">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-385">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-385">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-386">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-386">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverrideCursor">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.Cursor OverrideCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.Cursor OverrideCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.OverrideCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property OverrideCursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::Cursor ^ OverrideCursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OverrideCursor : System.Windows.Input.Cursor with get, set" Usage="System.Windows.Input.Mouse.OverrideCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-387">Ruft den Cursor für die gesamte Anwendung ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-387">Gets or sets the cursor for the entire application.</span></span></summary>
        <value><span data-ttu-id="d3eaf-388">Der überschreibende Cursor oder <see langword="null" />, wenn der <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> nicht festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-388">The override cursor or <see langword="null" /> if the <see cref="P:System.Windows.Input.Mouse.OverrideCursor" /> is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-389">Die <xref:System.Windows.Input.Cursor> , <xref:System.Windows.Input.Mouse.OverrideCursor%2A> ist festgelegt auf die gesamte Anwendung angewendet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-389">The <xref:System.Windows.Input.Cursor> that <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to will be applied to the whole application.</span></span>  
  
 <span data-ttu-id="d3eaf-390">Löschen Sie die Außerkraftsetzung <xref:System.Windows.Input.Cursor>legen <xref:System.Windows.Input.Mouse.OverrideCursor%2A> zu `null`.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-390">To clear the override <xref:System.Windows.Input.Cursor>, set <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to `null`.</span></span>  
  
 <span data-ttu-id="d3eaf-391">Festlegen von <xref:System.Windows.Input.Mouse.OverrideCursor%2A> zu <xref:System.Windows.Input.Cursors.None%2A> erzwingt, dass der Mauszeiger nicht angezeigt werden, aber die Mausereignisse werden noch verarbeitet.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-391">Setting <xref:System.Windows.Input.Mouse.OverrideCursor%2A> to <xref:System.Windows.Input.Cursors.None%2A> will force the mouse cursor not to be displayed, but mouse events are still processed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3eaf-392">Das folgende Beispiel zeigt einen Ereignishandler für ein <xref:System.Windows.Controls.RadioButton> wird, um die Reichweite einer Änderung der Cursor zwischen einem einzelnen Element und die gesamte Anwendung zu wechseln.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-392">The following example shows an event handler for a <xref:System.Windows.Controls.RadioButton> that is used to toggle the scope of a cursor change between a single element and the entire application.</span></span>  <span data-ttu-id="d3eaf-393">Wenn das Steuerelement, das das Ereignis ausgelöst wird die `rbScopeElement` <xref:System.Windows.Controls.RadioButton>, ein Flag, das den Rahmen der Änderung des Cursors bezeichnet festgelegt ist und <xref:System.Windows.Input.Mouse.OverrideCursor%2A> nastaven NA hodnotu `null`.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-393">If the control that raised the event is the `rbScopeElement`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to `null`.</span></span>  <span data-ttu-id="d3eaf-394">Wenn das Steuerelement, das das Ereignis ausgelöst wird die `rbScopeApplication` <xref:System.Windows.Controls.RadioButton>, ein Flag, das den Rahmen der Änderung des Cursors bezeichnet festgelegt ist und <xref:System.Windows.Input.Mouse.OverrideCursor%2A> nastaven NA hodnotu der <xref:System.Windows.FrameworkElement.Cursor%2A> Eigenschaft der <xref:System.Windows.Controls.Border> Steuerelement mit dem Namen `DisplayArea`.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-394">If the control that raised the event is the `rbScopeApplication`<xref:System.Windows.Controls.RadioButton>, a flag that denotes the scope of the cursor change is set and <xref:System.Windows.Input.Mouse.OverrideCursor%2A> is set to the <xref:System.Windows.FrameworkElement.Cursor%2A> property of the <xref:System.Windows.Controls.Border> control named `DisplayArea`.</span></span>  
  
 [!code-csharp[cursors#CursorsSampleOverrideCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#cursorssampleoverridecursor)]
 [!code-vb[cursors#CursorsSampleOverrideCursor](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#cursorssampleoverridecursor)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDown">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDown" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" Usage="see AddPreviewMouseDownHandler, and RemovePreviewMouseDownHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-395">Tritt auf, wenn eine Maustaste gedrückt wird.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-395">Occurs when any mouse button is depressed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-396">Welche Maustaste gedrückt wurde, wird bestimmt durch Überprüfen der Argumente des Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-396">Which mouse button was depressed is determined by checking the arguments of the event.</span></span> <span data-ttu-id="d3eaf-397">Dies ist ein angefügtes Ereignis (mit tunneling Routingstrategie), die über die Syntax für angefügte Ereignisse durch vorhandene verwiesen werden soll [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] Elemente, die Eingabe annehmen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-397">This is an attached event (using tunneling routing strategy) that is intended through attached event syntax to be referenced by existing [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements that take input.</span></span>  
  
 <span data-ttu-id="d3eaf-398">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-398">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-399">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-399">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-400">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-400">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-401">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-401">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-402">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-402">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="d3eaf-403">Die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework baut auf dem angefügten Ereignis auf, indem dieses als zwei unterschiedliche [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignisse auf <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> und <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-403">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonDown> and <xref:System.Windows.UIElement.PreviewMouseRightButtonDown>.</span></span> <span data-ttu-id="d3eaf-404">Diese Implementierungen zu behandeln, die zugrunde liegende <xref:System.Windows.Input.Mouse.PreviewMouseDown> Ereignis und Lesen Sie die Argumente des Ereignisses zu bestimmen, ob die linke oder rechte Maustaste beteiligt war.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-404">These implementations handle the underlying <xref:System.Windows.Input.Mouse.PreviewMouseDown> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="d3eaf-405">Für drei-Tasten, besteht keine Frameworkebene Event-Unterstützung für die Schaltfläche zentriert aus, und Sie sollten die <xref:System.Windows.Input.Mouse.PreviewMouseDown> Ereignis, und Überprüfen der mittleren Maustaste Bedingung in der ereignismeldung Argumente.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-405">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.PreviewMouseDown> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="d3eaf-406">Achten Sie für Routingereignisse, die im Zusammenhang mit der Maus darauf zu wie oder wann Sie diese als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-406">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="d3eaf-407">Behandeln des Ereignisses nahe dem Stamm und Behandlung durch untergeordnete Elemente, die sich weiter an der Quelle möglicherweise nicht für zusammengesetzte Steuerelemente geeignet, in dessen Bestandteile möglicherweise Mausverhalten erwartet haben.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-407">Handling the event near the root and handling it by a child further toward the source may not be appropriate for composited controls, where the compositing pieces might have expected mouse behaviors.</span></span> <span data-ttu-id="d3eaf-408">Die Schwierigkeit bei der Erstellung der entsprechenden Optionen zu gibt an, ob andere Elemente auch über ein beliebiges informiert werden sollte Mausaktion ist in der Tat daher die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Framework ausgewählt haben, das Modell für das zugrunde liegende <xref:System.Windows.Input.Mouse> Routingereignis als Verbindungsversuchs[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignisse entlang der Route.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-408">The difficulty in making the appropriate choices about whether other elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDown"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-409">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-409">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-410">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-410">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseDownEvent>|  
|<span data-ttu-id="d3eaf-411">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-411">Routing strategy</span></span>|<span data-ttu-id="d3eaf-412">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="d3eaf-412">Tunneling</span></span>|  
|<span data-ttu-id="d3eaf-413">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-413">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="d3eaf-414">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.Input.Mouse.MouseDown>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-414">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseDown>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseDownEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-415">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-415">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-416">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-416">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-417">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-417">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-418">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-418">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" Usage="see AddPreviewMouseDownOutsideCapturedElementHandler, and RemovePreviewMouseDownOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-419">Tritt ein, wenn die primäre Maustaste außerhalb des Elements gedrückt wird, das Mausereignisse erfasst.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-419">Occurs when the primary mouse button is pressed outside the element that is capturing mouse events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-420">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-420">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-421">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-421">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-422">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-422">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-423">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-423">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-424">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-424">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="d3eaf-425">Dieses Ereignis wird nicht über Basiselemente Aufkommen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-425">This event is not resurfaced on base elements.</span></span> <span data-ttu-id="d3eaf-426">Es wird hauptsächlich von Bedeutung, Autoren von Steuerelementen, die die Erfassung von Mauseingaben und Mauseingabe in ihre Steuerelement zusammensetzt abstimmen möchten.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-426">It is mainly of concern to control authors that are attempting to reconcile mouse capture and mouse input within their control compositing.</span></span>  
  
<a name="routedEventInfo_PreviewMouseDownOutsideCaptureElement"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-427">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-427">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-428">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-428">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent>|  
|<span data-ttu-id="d3eaf-429">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-429">Routing strategy</span></span>|<span data-ttu-id="d3eaf-430">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="d3eaf-430">Tunneling</span></span>|  
|<span data-ttu-id="d3eaf-431">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-431">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseDownOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseDownOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseDownOutsideCapturedElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseDownOutsideCapturedElementEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-432">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-432">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-433">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-433">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-434">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-434">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-435">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-435">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMove">
      <MemberSignature Language="C#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseMove" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" Usage="see AddPreviewMouseMoveHandler, and RemovePreviewMouseMoveHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-436">Tritt ein, wenn der Mauszeiger über ein Steuerelement bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-436">Occurs when the mouse moves over an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-437">Dieses Ereignis tritt auf, wenn der Mauszeiger neu in der Grenzen des Elements bewegt wird und auch wenn der Mauszeiger bewegt wird und trotzdem in der Grenzen des Elements.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-437">This event occurs both when the mouse pointer is newly moved in the element bounds, and also when the mouse pointer moves while still remaining in the element bounds.</span></span>  
  
 <span data-ttu-id="d3eaf-438">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-438">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-439">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-439">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-440">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-440">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-441">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-441">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-442">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-442">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseMove"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-443">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-443">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-444">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-444">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseMoveEvent>|  
|<span data-ttu-id="d3eaf-445">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-445">Routing strategy</span></span>|<span data-ttu-id="d3eaf-446">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="d3eaf-446">Tunneling</span></span>|  
|<span data-ttu-id="d3eaf-447">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-447">Delegate</span></span>|<xref:System.Windows.Input.MouseEventHandler>|  
  
-   <span data-ttu-id="d3eaf-448">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.Input.Mouse.MouseMove>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-448">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseMove>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseMoveEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseMoveEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseMoveEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseMoveEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseMoveEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseMoveEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseMoveEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-449">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-449">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-450">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-450">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-451">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-451">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-452">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-452">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUp">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUp" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" Usage="see AddPreviewMouseUpHandler, and RemovePreviewMouseUpHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-453">Tritt ein, wenn eine Maustaste losgelassen wird.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-453">Occurs when any mouse button is released.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-454">Die Maustaste losgelassen wurde, wird bestimmt durch Überprüfen der Argumente des Ereignisses.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-454">Which mouse button was released is determined by checking the arguments of the event.</span></span>  
  
 <span data-ttu-id="d3eaf-455">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-455">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-456">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-456">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-457">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-457">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-458">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-458">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-459">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-459">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="d3eaf-460">Die [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] Framework baut auf dem angefügten Ereignis auf, indem dieses als zwei unterschiedliche [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] Ereignisse auf <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> und <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-460">The [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework builds on this attached event by surfacing it as two different [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events on <xref:System.Windows.UIElement>: <xref:System.Windows.UIElement.PreviewMouseLeftButtonUp> and <xref:System.Windows.UIElement.PreviewMouseRightButtonUp>.</span></span> <span data-ttu-id="d3eaf-461">Diese Implementierungen zu behandeln, die zugrunde liegende <xref:System.Windows.Input.Mouse.PreviewMouseUp> Ereignis und Lesen Sie die Argumente des Ereignisses zu bestimmen, ob die linke oder rechte Maustaste beteiligt war.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-461">These implementations handle the underlying <xref:System.Windows.Input.Mouse.PreviewMouseUp> event and read the arguments of the event to determine whether the left or right mouse button was involved.</span></span> <span data-ttu-id="d3eaf-462">Für drei-Tasten, besteht keine Frameworkebene Event-Unterstützung für die Schaltfläche zentriert aus, und Sie sollten die <xref:System.Windows.Input.Mouse.PreviewMouseUp> Ereignis, und Überprüfen der mittleren Maustaste Bedingung in der ereignismeldung Argumente.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-462">For three-button, there is no framework-level event support for the center button, and you should use the <xref:System.Windows.Input.Mouse.PreviewMouseUp> event and check for the center button condition in the event arguments.</span></span>  
  
 <span data-ttu-id="d3eaf-463">Achten Sie für Routingereignisse, die im Zusammenhang mit der Maus darauf zu wie oder wann Sie diese als behandelt markieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-463">For routed events that relate to the mouse, be careful about how or when you mark them handled.</span></span> <span data-ttu-id="d3eaf-464">Behandeln des Ereignisses nahe dem Stamm und nicht durch untergeordnete Elemente, die sich weiter an der Quelle möglicherweise nicht für zusammengesetzte Steuerelemente geeignet, in dessen Bestandteile möglicherweise Mausverhalten erwartet haben.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-464">Handling the event near the root and not handling by a child further toward the source may not be appropriate for composited controls, where the compositing pieces might have expected mouse behaviors.</span></span> <span data-ttu-id="d3eaf-465">Die Schwierigkeit bei der Erstellung der entsprechenden Optionen zu gibt an, ob andere Elemente auch über ein beliebiges informiert werden sollte Mausaktion ist in der Tat daher die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Framework ausgewählt haben, das Modell für das zugrunde liegende <xref:System.Windows.Input.Mouse> Routingereignis als Verbindungsversuchs[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] Ereignisse entlang der Route.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-465">The difficulty in making the appropriate choices about whether other elements should also be informed about any given mouse action is in fact why the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] framework chose the model of having the underlying <xref:System.Windows.Input.Mouse> routed event be surfaced as [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] events along the route.</span></span>  
  
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-466">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-466">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-467">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-467">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseUpEvent>|  
|<span data-ttu-id="d3eaf-468">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-468">Routing strategy</span></span>|<span data-ttu-id="d3eaf-469">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="d3eaf-469">Tunneling</span></span>|  
|<span data-ttu-id="d3eaf-470">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-470">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="d3eaf-471">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.Input.Mouse.MouseUp>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-471">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseUp>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseUpEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-472">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-472">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-473">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-473">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-474">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-474">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-475">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-475">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElement">
      <MemberSignature Language="C#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" Usage="see AddPreviewMouseUpOutsideCapturedElementHandler, and RemovePreviewMouseUpOutsideCapturedElementHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-476">Tritt ein, wenn die primäre Maustaste außerhalb des Elements losgelassen wird, das Mausereignisse erfasst.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-476">Occurs when the primary mouse button is released outside the element that is capturing mouse events.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-477">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-477">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-478">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-478">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-479">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-479">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-480">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-480">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-481">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-481">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
 <span data-ttu-id="d3eaf-482">Dieses Ereignis wird nicht über Basiselemente Aufkommen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-482">This event is not resurfaced on base elements.</span></span> <span data-ttu-id="d3eaf-483">Es wird hauptsächlich von Bedeutung, Autoren von Steuerelementen, die die Erfassung von Mauseingaben und Mauseingabe in ihre Steuerelement zusammensetzt abstimmen möchten.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-483">It is mainly of concern to control authors that are attempting to reconcile mouse capture and mouse input within their control compositing.</span></span>  
  
<a name="routedEventInfo_PreviewMouseUpOutsideCaptureElement"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-484">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-484">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-485">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-485">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent>|  
|<span data-ttu-id="d3eaf-486">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-486">Routing strategy</span></span>|<span data-ttu-id="d3eaf-487">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="d3eaf-487">Tunneling</span></span>|  
|<span data-ttu-id="d3eaf-488">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-488">Delegate</span></span>|<xref:System.Windows.Input.MouseButtonEventHandler>|  
  
-   <span data-ttu-id="d3eaf-489">Es gibt keine entsprechenden bubbling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-489">There is no corresponding bubbling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseUpOutsideCapturedElementEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseUpOutsideCapturedElementEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseUpOutsideCapturedElementEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseUpOutsideCapturedElementEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElementEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-490">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-490">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-491">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-491">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-492">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-492">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-493">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-493">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheel">
      <MemberSignature Language="C#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="ILAsm" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.PreviewMouseWheel" />
      <MemberSignature Language="VB.NET" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberSignature Language="F#" Value="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" Usage="see AddPreviewMouseWheelHandler, and RemovePreviewMouseWheelHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-494">Tritt auf, wenn das Mausrad bewegt wird.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-494">Occurs when the mouse wheel rotates.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-495">Fokus oder die Maus erfassen haben Vorrang vor, in dem der Mauszeiger befindet; aus diesem Grund Wenn dieses Ereignis von einem Element mit Fokus oder erfasste angezeigt wird, kann der Mauszeiger in der Tat über ein anderes Element zum Zeitpunkt befinden.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-495">Focus or mouse capture take precedence over where the mouse pointer is; therefore, if you receive this event from a focused or captured element, the mouse pointer might in fact be over another element at the time.</span></span>  
  
 <span data-ttu-id="d3eaf-496">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-496">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-497">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-497">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-498">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-498">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-499">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-499">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-500">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-500">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_PreviewMouseWheel"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-501">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-501">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-502">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-502">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.PreviewMouseWheelEvent>|  
|<span data-ttu-id="d3eaf-503">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-503">Routing strategy</span></span>|<span data-ttu-id="d3eaf-504">Tunnelerzwingung</span><span class="sxs-lookup"><span data-stu-id="d3eaf-504">Tunneling</span></span>|  
|<span data-ttu-id="d3eaf-505">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-505">Delegate</span></span>|<xref:System.Windows.Input.MouseWheelEventHandler>|  
  
-   <span data-ttu-id="d3eaf-506">Die entsprechenden bubbling-Ereignis ist <xref:System.Windows.Input.Mouse.MouseWheel>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-506">The corresponding bubbling event is <xref:System.Windows.Input.Mouse.MouseWheel>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviewMouseWheelEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent PreviewMouseWheelEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent PreviewMouseWheelEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PreviewMouseWheelEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ PreviewMouseWheelEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable PreviewMouseWheelEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.PreviewMouseWheelEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-507">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-507">Identifies the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-508">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-508">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-509">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-509">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-510">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-510">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PrimaryDevice">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseDevice PrimaryDevice { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.MouseDevice PrimaryDevice" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property PrimaryDevice As MouseDevice" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseDevice ^ PrimaryDevice { System::Windows::Input::MouseDevice ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PrimaryDevice : System.Windows.Input.MouseDevice" Usage="System.Windows.Input.Mouse.PrimaryDevice" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseDevice</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-511">Ruft das primäre Mausgerät ab.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-511">Gets the primary mouse device.</span></span></summary>
        <value><span data-ttu-id="d3eaf-512">Das Gerät.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-512">The device.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-513">Diese Eigenschaft unterstützt die Windows Presentation Foundation-Infrastruktur und nicht direkt aus Ihrem Code verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-513">This property supports the Windows Presentation Foundation infrastructure and is not intended to be used directly from your code.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
      </Docs>
    </Member>
    <Member MemberName="QueryCursor">
      <MemberSignature Language="C#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="ILAsm" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.Mouse.QueryCursor" />
      <MemberSignature Language="VB.NET" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberSignature Language="F#" Value="see AddQueryCursorHandler, and RemoveQueryCursorHandler" Usage="see AddQueryCursorHandler, and RemoveQueryCursorHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="d3eaf-514">Tritt ein, wenn der aktuelle Mauszeiger von einem Element abgefragt wird.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-514">Occurs when an element queries for the current mouse cursor.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-515">Dies ist ein angefügtes Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-515">This is an attached event.</span></span> [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] <span data-ttu-id="d3eaf-516">implementiert angefügte Ereignisse als Routingereignisse.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-516">implements attached events as routed events.</span></span> <span data-ttu-id="d3eaf-517">Angefügte Ereignisse sind im Wesentlichen eine [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] Sprachkonzept zum Verweisen auf Ereignisse, die für Objekte verarbeitet werden können, die dieses Ereignis nicht definieren die [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] aktivieren Sie das Ereignis, das Durchlaufen einer Route auch erweitert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-517">Attached events are fundamentally a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] language concept for referencing events that can be handled on objects that do not define that event, which [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] expands upon by also enabling the event to traverse a route.</span></span> <span data-ttu-id="d3eaf-518">Angefügte Ereignisse haben eine direkte Handhabung-Syntax nicht im Code. um Handler für ein Routingereignis im Code anzufügen, verwenden Sie eine angegebene Add \* Ereignishandlermethode.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-518">Attached events do not have a direct handling syntax in code; to attach handlers for a routed event in code, you use a designated Add\*Handler method.</span></span> <span data-ttu-id="d3eaf-519">Weitere Informationen finden Sie unter [Übersicht über angefügte Ereignisse](~/docs/framework/wpf/advanced/attached-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-519">For details, see [Attached Events Overview](~/docs/framework/wpf/advanced/attached-events-overview.md).</span></span>  
  
<a name="routedEventInfo_Querycursor"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="d3eaf-520">Informationen zum Routingereignis</span><span class="sxs-lookup"><span data-stu-id="d3eaf-520">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="d3eaf-521">Feld "ID"</span><span class="sxs-lookup"><span data-stu-id="d3eaf-521">Identifier field</span></span>|<xref:System.Windows.Input.Mouse.QueryCursorEvent>|  
|<span data-ttu-id="d3eaf-522">Routing-Strategie</span><span class="sxs-lookup"><span data-stu-id="d3eaf-522">Routing strategy</span></span>|<span data-ttu-id="d3eaf-523">Bubbling</span><span class="sxs-lookup"><span data-stu-id="d3eaf-523">Bubbling</span></span>|  
|<span data-ttu-id="d3eaf-524">delegate</span><span class="sxs-lookup"><span data-stu-id="d3eaf-524">Delegate</span></span>|<xref:System.Windows.Input.QueryCursorEventHandler>|  
  
 <span data-ttu-id="d3eaf-525">Es ist keine definiertes entsprechende Tunneling-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-525">There is no defined corresponding tunneling event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCursorEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent QueryCursorEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent QueryCursorEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly QueryCursorEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ QueryCursorEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable QueryCursorEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.Mouse.QueryCursorEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-526">Bezeichnet das angefügte <see cref="E:System.Windows.Input.Mouse.QueryCursor" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-526">Identifies the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-527">Bezeichner für Routingereignisse werden erstellt, wenn Routingereignisse registriert sind, und das Ergebnis wird als Feld in der Klasse, die das Routingereignis registriert gespeichert.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-527">Routed event identifiers are created when routed events are registered, and the result is stored as a field on the class that registers the routed event.</span></span> <span data-ttu-id="d3eaf-528">Dieser Bezeichner enthält einen kennzeichnenden Namen, Besitzertyp, den Handlertyp, routing-Strategie und eine Hilfsmethode zum Hinzufügen von Besitzern für das Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-528">These identifiers contain an identifying name, owner type, handler type, routing strategy, and a utility method for adding owners for the event.</span></span> <span data-ttu-id="d3eaf-529">Sie verwenden oft diese Bezeichner als Parameter für Methoden des Dateisystems Ereignis, um ein bestimmtes Routingereignis zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-529">You often use these identifiers as parameters to event system methods, to identify a particular routed event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveGotMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-530">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-530">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-531">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-531">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-532">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-532">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.GotMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostMouseCaptureHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostMouseCaptureHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostMouseCaptureHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostMouseCaptureHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostMouseCaptureHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostMouseCaptureHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveLostMouseCaptureHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-533">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-533">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-534">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-534">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-535">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-535">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.LostMouseCapture" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-536">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-536">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-537">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-537">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-538">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.MouseDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-538">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseEnterHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseEnterHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseEnterHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseEnterHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseEnterHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseEnterHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseEnterHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseEnterHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-539">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-539">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-540">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-540">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-541">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.MouseEnter" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-541">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseEnter" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseLeaveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseLeaveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseLeaveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseLeaveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseLeaveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseLeaveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseLeaveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseLeaveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-542">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-542">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-543">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-543">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-544">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.MouseLeave" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-544">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseLeave" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-545">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-545">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-546">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-546">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-547">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.MouseMove" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-547">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-548">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-548">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-549">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-549">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-550">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.MouseUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-550">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemoveMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-551">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-551">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-552">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-552">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-553">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.MouseWheel" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-553">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.MouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseDownHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseDownHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-554">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-554">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-555">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-555">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-556">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-556">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDown" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseDownOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseDownOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseDownOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseDownOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseDownOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseDownOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseDownOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-557">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-557">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-558">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-558">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-559">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-559">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseDownOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseMoveHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseMoveHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseMoveHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler(System.Windows.DependencyObject,System.Windows.Input.MouseEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseMoveHandler (element As DependencyObject, handler As MouseEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseMoveHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseMoveHandler : System.Windows.DependencyObject * System.Windows.Input.MouseEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseMoveHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-560">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-560">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-561">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-561">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-562">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-562">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseMove" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseUpHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseUpHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-563">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-563">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-564">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-564">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-565">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-565">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUp" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseUpOutsideCapturedElementHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseUpOutsideCapturedElementHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseButtonEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseUpOutsideCapturedElementHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseButtonEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler(System.Windows.DependencyObject,System.Windows.Input.MouseButtonEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseUpOutsideCapturedElementHandler (element As DependencyObject, handler As MouseButtonEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseUpOutsideCapturedElementHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseButtonEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseUpOutsideCapturedElementHandler : System.Windows.DependencyObject * System.Windows.Input.MouseButtonEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseUpOutsideCapturedElementHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseButtonEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-566">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-566">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-567">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-567">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-568">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-568">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseUpOutsideCapturedElement" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePreviewMouseWheelHandler">
      <MemberSignature Language="C#" Value="public static void RemovePreviewMouseWheelHandler (System.Windows.DependencyObject element, System.Windows.Input.MouseWheelEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemovePreviewMouseWheelHandler(class System.Windows.DependencyObject element, class System.Windows.Input.MouseWheelEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler(System.Windows.DependencyObject,System.Windows.Input.MouseWheelEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemovePreviewMouseWheelHandler (element As DependencyObject, handler As MouseWheelEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemovePreviewMouseWheelHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::MouseWheelEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemovePreviewMouseWheelHandler : System.Windows.DependencyObject * System.Windows.Input.MouseWheelEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemovePreviewMouseWheelHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.MouseWheelEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-569">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-569">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-570">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-570">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-571">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-571">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.PreviewMouseWheel" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveQueryCursorHandler">
      <MemberSignature Language="C#" Value="public static void RemoveQueryCursorHandler (System.Windows.DependencyObject element, System.Windows.Input.QueryCursorEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveQueryCursorHandler(class System.Windows.DependencyObject element, class System.Windows.Input.QueryCursorEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.RemoveQueryCursorHandler(System.Windows.DependencyObject,System.Windows.Input.QueryCursorEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveQueryCursorHandler (element As DependencyObject, handler As QueryCursorEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveQueryCursorHandler(System::Windows::DependencyObject ^ element, System::Windows::Input::QueryCursorEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveQueryCursorHandler : System.Windows.DependencyObject * System.Windows.Input.QueryCursorEventHandler -&gt; unit" Usage="System.Windows.Input.Mouse.RemoveQueryCursorHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.Input.QueryCursorEventHandler" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="d3eaf-572">Das <see cref="T:System.Windows.UIElement" /> oder das <see cref="T:System.Windows.ContentElement" />, das dieses Ereignis überwacht.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-572">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span></span></param>
        <param name="handler"><span data-ttu-id="d3eaf-573">Der Ereignishandler.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-573">The event handler.</span></span></param>
        <summary><span data-ttu-id="d3eaf-574">Entfernt einen Handler für das angefügte <see cref="E:System.Windows.Input.Mouse.QueryCursor" />-Ereignis.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-574">Removes a handler for the <see cref="E:System.Windows.Input.Mouse.QueryCursor" /> attached event.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RightButton">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState RightButton { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState RightButton" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.RightButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property RightButton As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState RightButton { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.RightButton : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.RightButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-575">Ruft den Zustand der rechten Maustaste ab.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-575">Gets the state of the right button.</span></span></summary>
        <value><span data-ttu-id="d3eaf-576">Der Zustand der rechten Maustaste.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-576">The state of the right mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d3eaf-577">Das folgende Beispiel zeigt, wie Sie bestimmen, ob die rechte Maustaste gedrückt wird, durch die überprüft, ob der Status der der <xref:System.Windows.Input.Mouse.RightButton%2A> ist gleich der <xref:System.Windows.Input.MouseButtonState> Enumerationswert <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-577">The following example shows how to determine whether the right mouse button is pressed by checking if the state of the <xref:System.Windows.Input.Mouse.RightButton%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="d3eaf-578">Wenn die Schaltfläche gedrückt wird, wird eine Methode aufgerufen, welche Updates Elemente in diesem Beispiel anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-578">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetrightbuttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetRightButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetrightbuttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="SetCursor">
      <MemberSignature Language="C#" Value="public static bool SetCursor (System.Windows.Input.Cursor cursor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool SetCursor(class System.Windows.Input.Cursor cursor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.SetCursor(System.Windows.Input.Cursor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool SetCursor(System::Windows::Input::Cursor ^ cursor);" />
      <MemberSignature Language="F#" Value="static member SetCursor : System.Windows.Input.Cursor -&gt; bool" Usage="System.Windows.Input.Mouse.SetCursor cursor" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cursor" Type="System.Windows.Input.Cursor" />
      </Parameters>
      <Docs>
        <param name="cursor"><span data-ttu-id="d3eaf-579">Der Cursor, auf den der Mauszeiger festgelegt werden soll.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-579">The cursor to set the mouse pointer to.</span></span></param>
        <summary><span data-ttu-id="d3eaf-580">Legt den Mauszeiger auf den angegebenen <see cref="T:System.Windows.Input.Cursor" /> fest.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-580">Sets the mouse pointer to the specified <see cref="T:System.Windows.Input.Cursor" />.</span></span></summary>
        <returns><span data-ttu-id="d3eaf-581"><see langword="true" />, wenn der Mauszeiger festgelegt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-581"><see langword="true" />, if the cursor was set; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3eaf-582">Das Festlegen des Cursors gelten nicht für ein bestimmtes Element, aber er gilt vielmehr um die gesamte Anwendung.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-582">The cursor being set does not apply to any particular element, but rather it applies to the whole application.</span></span>  <span data-ttu-id="d3eaf-583">Daher wird Wenn nach dem Festlegen der Cursor ab, den der Mauszeiger über ein Objekt bewegt den Cursor festgelegt, der Cursor erneut geändert werden.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-583">So, if after setting the cursor the mouse pointer moves over an object which sets the cursor, the cursor will be changed again.</span></span>  
  
 <span data-ttu-id="d3eaf-584">Erzwingen Sie den Mauszeiger auf einen bestimmten <xref:System.Windows.Input.Cursor> und dadurch gezwungen, <xref:System.Windows.Input.Cursor> legen Sie für alle Elemente, die <xref:System.Windows.Input.Mouse.OverrideCursor%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-584">To force the mouse pointer to a specific <xref:System.Windows.Input.Cursor> and to force this <xref:System.Windows.Input.Cursor> on all elements, set the <xref:System.Windows.Input.Mouse.OverrideCursor%2A> property.</span></span>  
  
 <span data-ttu-id="d3eaf-585">Um den Cursor auf ein bestimmtes Element festzulegen, verwenden die <xref:System.Windows.FrameworkElement.Cursor%2A> Eigenschaft entweder <xref:System.Windows.FrameworkElement> oder <xref:System.Windows.FrameworkContentElement>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-585">To set the cursor on a specific element, use the <xref:System.Windows.FrameworkElement.Cursor%2A> property on either <xref:System.Windows.FrameworkElement> or <xref:System.Windows.FrameworkContentElement>.</span></span>  <span data-ttu-id="d3eaf-586">Weitere Informationen zu den Basiselementen, finden Sie unter den [Übersicht über Basiselemente](~/docs/framework/wpf/advanced/base-elements-overview.md).</span><span class="sxs-lookup"><span data-stu-id="d3eaf-586">For more information on the base elements, see the [Base Elements Overview](~/docs/framework/wpf/advanced/base-elements-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.Cursors" />
        <altmember cref="P:System.Windows.Input.Mouse.OverrideCursor" />
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public static void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Synchronize();" />
      <MemberSignature Language="F#" Value="static member Synchronize : unit -&gt; unit" Usage="System.Windows.Input.Mouse.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3eaf-587">Erzwingt das Neusynchronisieren der Maus.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-587">Forces the mouse to resynchronize.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.MouseDevice" />
        <altmember cref="M:System.Windows.Input.Mouse.Synchronize" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCursor">
      <MemberSignature Language="C#" Value="public static void UpdateCursor ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void UpdateCursor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.Mouse.UpdateCursor" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub UpdateCursor ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void UpdateCursor();" />
      <MemberSignature Language="F#" Value="static member UpdateCursor : unit -&gt; unit" Usage="System.Windows.Input.Mouse.UpdateCursor " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3eaf-588">Erzwingt die Aktualisierung des Mauszeigers.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-588">Forces the mouse cursor to be updated.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XButton1">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton1" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton1" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton1 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton1 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton1 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.XButton1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-589">Ruft den Zustand der ersten erweiterten Maustaste ab.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-589">Gets the state of the first extended button.</span></span></summary>
        <value><span data-ttu-id="d3eaf-590">Der Zustand der ersten erweiterten Maustaste.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-590">The state of the first extended mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d3eaf-591">Das folgende Beispiel zeigt, wie Sie bestimmen, ob es sich bei der ersten erweiterten Maustaste gedrückt wird, indem Sie überprüfen, ob der Status der <xref:System.Windows.Input.Mouse.XButton1%2A> ist gleich der <xref:System.Windows.Input.MouseButtonState> Enumerationswert <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-591">The following example shows how to determine whether the first extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton1%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="d3eaf-592">Wenn die Schaltfläche gedrückt wird, wird eine Methode aufgerufen, welche Updates Elemente in diesem Beispiel anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-592">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx1buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX1ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx1buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="XButton2">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.MouseButtonState XButton2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property valuetype System.Windows.Input.MouseButtonState XButton2" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.Mouse.XButton2" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property XButton2 As MouseButtonState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::MouseButtonState XButton2 { System::Windows::Input::MouseButtonState get(); };" />
      <MemberSignature Language="F#" Value="member this.XButton2 : System.Windows.Input.MouseButtonState" Usage="System.Windows.Input.Mouse.XButton2" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.MouseButtonState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3eaf-593">Ruft den Zustand der zweiten erweiterten Maustaste ab.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-593">Gets the state of the second extended button.</span></span></summary>
        <value><span data-ttu-id="d3eaf-594">Der Zustand der zweiten erweiterten Maustaste.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-594">The state of the second extended mouse button.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d3eaf-595">Das folgende Beispiel zeigt, wie Sie bestimmen, ob es sich bei der zweiten erweiterten Maustaste gedrückt wird, indem Sie überprüfen, ob der Status der <xref:System.Windows.Input.Mouse.XButton2%2A> ist gleich der <xref:System.Windows.Input.MouseButtonState> Enumerationswert <xref:System.Windows.Input.MouseButtonState.Pressed>.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-595">The following example shows how to determine whether the second extended mouse button is pressed by checking if the state of <xref:System.Windows.Input.Mouse.XButton2%2A> is equal to the <xref:System.Windows.Input.MouseButtonState> enumeration value <xref:System.Windows.Input.MouseButtonState.Pressed>.</span></span>  <span data-ttu-id="d3eaf-596">Wenn die Schaltfläche gedrückt wird, wird eine Methode aufgerufen, welche Updates Elemente in diesem Beispiel anzuzeigen.</span><span class="sxs-lookup"><span data-stu-id="d3eaf-596">If the button is pressed, a method is called which updates display elements in the sample.</span></span>  
  
 [!code-csharp[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/csharp/VS_Snippets_Wpf/MouseRelatedSnippets/CSharp/Window1.xaml.cs#mouserelatedsnippetsgetx2buttonmouse)]
 [!code-vb[MouseRelatedSnippets#MouseRelatedSnippetsGetX2ButtonMouse](~/samples/snippets/visualbasic/VS_Snippets_Wpf/MouseRelatedSnippets/visualbasic/window1.xaml.vb#mouserelatedsnippetsgetx2buttonmouse)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.MouseButtonEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>