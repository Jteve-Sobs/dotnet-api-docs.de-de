<Type Name="CanExecuteRoutedEventHandler" FullName="System.Windows.Input.CanExecuteRoutedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3c23ce5e4e5f8cabe9dbfcc860cb524d68d330f4" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82497553" /></Metadata><TypeSignature Language="C#" Value="public delegate void CanExecuteRoutedEventHandler(object sender, CanExecuteRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CanExecuteRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CanExecuteRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CanExecuteRoutedEventHandler(sender As Object, e As CanExecuteRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CanExecuteRoutedEventHandler(System::Object ^ sender, CanExecuteRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type CanExecuteRoutedEventHandler = delegate of obj * CanExecuteRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.CanExecuteRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Das Befehlsziel, das den Handler aufruft.</param>
    <param name="e">Die Ereignisdaten.</param>
    <summary>Stellt die Methode dar, durch die das <see cref="E:System.Windows.Input.CommandBinding.CanExecute" />-Ereignis behandelt wird.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Windows.Input.CanExecuteRoutedEventHandler> bestimmt, ob der Befehl, der der Ereignis Quelle zugeordnet ist, im Befehls Ziel ausgeführt werden kann. Wenn der Befehl über eine Befehls Quelle verfügt, die ein Ziel angibt, können die Ziel Informationen über `sender`abgerufen werden. Wenn die <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> nicht festgelegt ist, ist das Element mit dem Tastaturfokus das Ziel und kann auch über `sender`abgerufen werden.  Wenn festgestellt wird, dass der Befehl auf dem Ziel ausgeführt werden kann, sollte die <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType>-Eigenschaft auf `true`festgelegt werden. Legen Sie Sie andernfalls auf `false`fest.  
  
 Sie müssen sich nicht auf Ereignisdaten verlassen, um den Befehl, die Quelle und das Ziel zu ermitteln. Sie können die Verwendung des Handlers auf bekannte Befehls Aufrufe beschränken. Dies ist jedoch schwieriger zu bewerkstelligen, wenn die Befehlsstruktur häufig auf dem Befehls Routing basiert, um denselben Befehl für aufeinander folgende potenzielle Ziele in einer Ereignis Route auszuführen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt eine <xref:System.Windows.Input.CanExecuteRoutedEventHandler>, mit der <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> auf `true`festgelegt wird.  
  
 [!code-csharp[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  </Docs>
</Type>
