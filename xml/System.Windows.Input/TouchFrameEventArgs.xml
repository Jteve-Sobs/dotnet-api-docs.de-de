<Type Name="TouchFrameEventArgs" FullName="System.Windows.Input.TouchFrameEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="30f87b6247b094010302d8c5f86db873bb00fa53" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52226727" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TouchFrameEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TouchFrameEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchFrameEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TouchFrameEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchFrameEventArgs sealed : EventArgs" />
  <TypeSignature Language="F#" Value="type TouchFrameEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt Daten für das <see cref="E:System.Windows.Input.Touch.FrameReported" />-Ereignis bereit.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Windows.Input.Touch.FrameReported> im serverereignissatz enthalten ist [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] zur Unterstützung der Kompatibilität mit Silverlight. Wenn Sie nicht zur Sicherstellung der Kompatibilität mit Silverlight verfügen, verwenden Sie die touchereignisse, z. B. <xref:System.Windows.UIElement.TouchDown> und <xref:System.Windows.UIElement.TouchMove>auf <xref:System.Windows.UIElement>, <xref:System.Windows.UIElement3D>, oder <xref:System.Windows.ContentElement>.  
  
 Verwenden der <xref:System.Windows.Input.TouchFrameEventArgs> zum Abrufen der <xref:System.Windows.Input.TouchPoint> Werte, die für das touchereignis relevant sind. Von der <xref:System.Windows.Input.TouchPoint>, erhalten Sie die <xref:System.Windows.Input.TouchPoint.Position%2A> von der Fingereingabe und bestimmen, ob die <xref:System.Windows.Input.TouchAction> wurde eine <xref:System.Windows.Input.TouchAction.Down>, <xref:System.Windows.Input.TouchAction.Move>, oder <xref:System.Windows.Input.TouchAction.Up> Aktion. Sie können auch die <xref:System.Windows.Input.TouchPoint> zum Abrufen der <xref:System.Windows.Input.TouchDevice>. Von der <xref:System.Windows.Input.TouchDevice>, Sie können bestimmen, dass das Gerät <xref:System.Windows.Input.TouchDevice.Id%2A> und Abrufen von Informationen über das Element, das berührt wird.  
  
   
  
## Examples  
 Das folgende Beispiel verarbeitet die <xref:System.Windows.Input.Touch.FrameReported> Ereignis und greift auf die Touch-Daten in die <xref:System.Windows.Input.TouchFrameEventArgs>. Wenn eine Fingereingabe gedrückt wird, auf die <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> wird erfasst, um die <xref:System.Windows.Controls.Canvas>. Wenn die Fingereingabe beendet wird, die <xref:System.Windows.Input.TouchDevice> veröffentlicht wird. Wenn eine Fingereingabe verschoben wird, über die <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> aktiviert ist. Wenn die Verschiebung in die erste Berührung stammt, wird am Speicherort aufgezeichnet. Wenn die Verschiebung durch die zweite Berührung kam, wird eine Linie von der Position der ersten Fingereingabe auf die Position des zweiten Fingereingabe gezeichnet.  
  
 In diesem Beispiel ist Teil eines größeren Beispiels, das in verfügbar ist. die <xref:System.Windows.Input.Touch> Übersicht über die Klasse.  
  
 [!code-csharp[TouchFrameSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchFrameSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetPrimaryTouchPoint">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPoint GetPrimaryTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPoint GetPrimaryTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetPrimaryTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPrimaryTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPoint ^ GetPrimaryTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetPrimaryTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchFrameEventArgs.GetPrimaryTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">Das Element, das den Koordinatenraum definiert. Um absolute WPF-Koordinaten zu verwenden, geben Sie <paramref name="relativeTo" /> mit dem Wert <see langword="null" /> an.</param>
        <summary>Gibt den aktuellen Berührungspunkt des primären Fingereingabegeräts relativ zum angegebenen Element zurück.</summary>
        <returns>Die aktuelle Position des primären <see cref="T:System.Windows.Input.TouchDevice" /> relativ zum angegebenen Element oder <see langword="null" />, wenn das primäre <see cref="T:System.Windows.Input.TouchDevice" /> nicht aktiv ist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In einem Satz aktiver touch-Geräte, das erste Gerät <xref:System.Windows.Input.TouchDevice.Activated> primären Fingereingabegeräts ist. Wenn zwei Finger den Bildschirm berühren, wird der erste Finger, die ausgefallen ist z. B. vom primären Fingereingabegeräts dargestellt. Wenn der erste Finger gehoben wird, während der zweite Finger wieder verfügbar ist, wird der primären Fingereingabegeräts `null`.  
  
   
  
## Examples  
 Der folgende Code verarbeitet die Touch-Punkte, die aus abgerufen werden die <xref:System.Windows.Input.TouchFrameEventArgs>. Wenn eine Fingereingabe gedrückt wird, auf die <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice> wird erfasst, um die <xref:System.Windows.Controls.Canvas>. Wenn die Fingereingabe beendet wird, die <xref:System.Windows.Input.TouchDevice> veröffentlicht wird. Wenn eine Fingereingabe verschoben wird, über die <xref:System.Windows.Controls.Canvas>, <xref:System.Windows.Input.TouchDevice.Id%2A> aktiviert ist. Wenn die <xref:System.Windows.Input.TouchDevice.Id%2A> entspricht der <xref:System.Windows.Input.TouchDevice.Id%2A> am Speicherort wird von der primäre Berührungspunkt, womit die erste Berührung, aufgezeichnet. Wenn die Verschiebung durch die zweite Berührung kam, wird eine Linie von der Position der ersten Fingereingabe auf die Position des zweiten Fingereingabe gezeichnet.  
  
 In diesem Beispiel ist Teil eines größeren Beispiels, das in verfügbar ist. die <xref:System.Windows.Input.Touch> Übersicht über die Klasse.  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoints">
      <MemberSignature Language="C#" Value="public System.Windows.Input.TouchPointCollection GetTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Input.TouchPointCollection GetTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.GetTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Input::TouchPointCollection ^ GetTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="member this.GetTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchFrameEventArgs.GetTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">Das Element, das den Koordinatenraum definiert. Um absolute WPF-Koordinaten zu verwenden, geben Sie <paramref name="relativeTo" /> mit dem Wert <see langword="null" /> an.</param>
        <summary>Gibt eine Auflistung zurück, die den aktuellen Berührungspunkt für jedes aktive Fingereingabegerät relativ zum angegebenen Element enthält.</summary>
        <returns>Eine Auflistung, die den aktuellen <see cref="T:System.Windows.Input.TouchPoint" /> für jedes aktive <see cref="T:System.Windows.Input.TouchDevice" /> enthält.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Der folgende code verarbeitet, die Touch-Punkt, von abgerufen der <xref:System.Windows.Input.TouchFrameEventArgs>. Wenn eine Fingereingabe, im Zeichenbereich gedrückt wird die <xref:System.Windows.Input.TouchDevice> wird erfasst, auf den Zeichenbereich. Wenn die Fingereingabe ausgelöst wird, die <xref:System.Windows.Input.TouchDevice> veröffentlicht wird. Wenn eine Fingereingabe auf der Canvas das <xref:System.Windows.Input.TouchDevice.Id%2A> aktiviert ist. Wenn die <xref:System.Windows.Input.TouchDevice.Id%2A> entspricht der <xref:System.Windows.Input.TouchDevice.Id%2A> am Speicherort wird von der primäre Berührungspunkt, womit die erste Berührung, aufgezeichnet. Wenn die Verschiebung durch die zweite Berührung kam, wird eine Linie von der Position der ersten Fingereingabe auf die Position des zweiten Fingereingabe gezeichnet.  
  
 In diesem Beispiel ist Teil eines größeren Beispiels, das in verfügbar ist. die <xref:System.Windows.Input.Touch> Übersicht über die Klasse.  
  
 [!code-csharp[TouchFrameSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/touchframesample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchFrameSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/touchframesample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SuspendMousePromotionUntilTouchUp">
      <MemberSignature Language="C#" Value="public void SuspendMousePromotionUntilTouchUp ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SuspendMousePromotionUntilTouchUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchFrameEventArgs.SuspendMousePromotionUntilTouchUp" />
      <MemberSignature Language="VB.NET" Value="Public Sub SuspendMousePromotionUntilTouchUp ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SuspendMousePromotionUntilTouchUp();" />
      <MemberSignature Language="F#" Value="member this.SuspendMousePromotionUntilTouchUp : unit -&gt; unit" Usage="touchFrameEventArgs.SuspendMousePromotionUntilTouchUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Dieser Member ist nicht implementiert.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode wird für die Silverlight-Kompatibilität bereitgestellt. Aufgrund von Unterschieden bei der Implementierung der Geräte ist es nicht in WPF implementiert.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public int Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Timestamp As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Timestamp { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Timestamp : int" Usage="System.Windows.Input.TouchFrameEventArgs.Timestamp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Zeitstempel für dieses Ereignis ab.</summary>
        <value>Der Zeitstempel für dieses Ereignis.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>