<Type Name="ManipulationDeltaEventArgs" FullName="System.Windows.Input.ManipulationDeltaEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14e330c730054f8a6441ee6306a12db68536d587" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ManipulationDeltaEventArgs : System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ManipulationDeltaEventArgs extends System.Windows.Input.InputEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ManipulationDeltaEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ManipulationDeltaEventArgs&#xA;Inherits InputEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ManipulationDeltaEventArgs sealed : System::Windows::Input::InputEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="3145c-101">Stellt Daten für das <see cref="E:System.Windows.UIElement.ManipulationDelta" />-Ereignis bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3145c-101">Provides data for the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3145c-102">Die <xref:System.Windows.Input.ManipulationDeltaEventArgs> Klasse enthält Daten zu Änderungen an der Position einer Bearbeitung.</span><span class="sxs-lookup"><span data-stu-id="3145c-102">The <xref:System.Windows.Input.ManipulationDeltaEventArgs> class contains data about changes in the position of a manipulation.</span></span> <span data-ttu-id="3145c-103">Die <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> Eigenschaft enthält die Änderungen, die seit dem letzten aufgetreten <xref:System.Windows.UIElement.ManipulationDelta> Ereignis aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="3145c-103">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property contains the changes that occurred since the last <xref:System.Windows.UIElement.ManipulationDelta> event occurred.</span></span> <span data-ttu-id="3145c-104">Die <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> Eigenschaft enthält die Gesamtzahl von Änderungen, die für die aktuelle Manipulation aufgetreten sind.</span><span class="sxs-lookup"><span data-stu-id="3145c-104">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> property contains the total changes that occurred for the current manipulation.</span></span> <span data-ttu-id="3145c-105">Sie verwenden eine dieser Eigenschaften zum Transformieren des manipulierten Objekts.</span><span class="sxs-lookup"><span data-stu-id="3145c-105">You use one of those properties to transform the manipulated object.</span></span>  
  
 <span data-ttu-id="3145c-106">Sie können eine Manipulation beenden, durch Aufrufen der <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> -Methode oder erzwingen Sie die Bearbeitung in Trägheit durch Aufrufen der <xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="3145c-106">You can end a manipulation by calling the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> method or force the manipulation into inertia by calling the <xref:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3145c-107">Das folgende Beispiel zeigt einen Ereignishandler für das <xref:System.Windows.UIElement.ManipulationDelta> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3145c-107">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="3145c-108">Im Beispiel wird die <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> Eigenschaft zu verschieben, ändern Sie die Größe und drehen Sie ein <xref:System.Windows.Shapes.Rectangle>.</span><span class="sxs-lookup"><span data-stu-id="3145c-108">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="3145c-109">Im Beispiel wird auch überprüft, ob die <xref:System.Windows.UIElement.ManipulationDelta> Ereignis aufgetreten ist, während der Trägheit und gibt an, ob das Rechteck am Rand eines Fensters berührt.</span><span class="sxs-lookup"><span data-stu-id="3145c-109">The example also checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="3145c-110">Wenn die Fälle auf "true" festgelegt sind, reagiert die Anwendung die Bearbeitung, um zu verhindern, dass das Rechteck verlassen den sichtbaren Bereich der Anwendung an.</span><span class="sxs-lookup"><span data-stu-id="3145c-110">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="3145c-111">In diesem Beispiel ist Teil eines umfangreicheren Beispiels in [Exemplarische Vorgehensweise: Erstellen Ihrer ersten Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3145c-111">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public bool Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Function Cancel () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3145c-112">Bricht die Bearbeitung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-112">Cancels the manipulation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="3145c-113">
            <see langword="true" />, wenn die Bearbeitung erfolgreich abgebrochen wurde; andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-113">
              <see langword="true" /> if the manipulation was successfully canceled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3145c-114">Wenn die Methode erfolgreich ausgeführt wird, die Standardeinstellung <xref:System.Windows.Input.TouchDevice> sendet vorherigen Berührungsereignisse als Mauszeiger nach unten oder Ereignisse an das Element die Maus und zukünftige Bearbeitungsereignisse treten nicht.</span><span class="sxs-lookup"><span data-stu-id="3145c-114">If the method succeeds, the default <xref:System.Windows.Input.TouchDevice> sends previous touch events as mouse down or mouse move events to the element and future manipulation events do not occur.</span></span> <span data-ttu-id="3145c-115">Touch kann nicht in Mausereignisse heraufgestuft werden, wenn die <xref:System.Windows.UIElement.ManipulationCompleted> Ereignis tritt auf, während der Trägheit.</span><span class="sxs-lookup"><span data-stu-id="3145c-115">Touch cannot be promoted to mouse events if the <xref:System.Windows.UIElement.ManipulationCompleted> event occurs during inertia.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Complete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3145c-116">Schließt die Bearbeitung ohne Trägheit ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-116">Completes the manipulation without inertia.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3145c-117">Sie erreichen die <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> Methode, um die Bearbeitung zu beenden.</span><span class="sxs-lookup"><span data-stu-id="3145c-117">You can call the <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> method to end the manipulation.</span></span> <span data-ttu-id="3145c-118">Beispielsweise, wenn ein Objekt am Rand eines Fensters erreicht, können rufen Sie <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> zu verhindern, dass das Objekt außerhalb des Bildschirms wechseln.</span><span class="sxs-lookup"><span data-stu-id="3145c-118">For example, when an object reaches the edge of a window, you can call <xref:System.Windows.Input.ManipulationDeltaEventArgs.Complete%2A> to prevent the object from going off the screen.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3145c-119">Das folgende Beispiel zeigt einen Ereignishandler für das <xref:System.Windows.UIElement.ManipulationDelta> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3145c-119">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="3145c-120">Im Beispiel wird überprüft, ob die <xref:System.Windows.UIElement.ManipulationDelta> Ereignis aufgetreten ist, während der Trägheit und gibt an, ob das Rechteck am Rand eines Fensters berührt.</span><span class="sxs-lookup"><span data-stu-id="3145c-120">The example checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="3145c-121">Wenn die Fälle auf "true" festgelegt sind, reagiert die Anwendung die Bearbeitung, um zu verhindern, dass das Rechteck verlassen den sichtbaren Bereich der Anwendung an.</span><span class="sxs-lookup"><span data-stu-id="3145c-121">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="3145c-122">In diesem Beispiel ist Teil eines umfangreicheren Beispiels in [Exemplarische Vorgehensweise: Erstellen Ihrer ersten Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3145c-122">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CumulativeManipulation">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationDelta CumulativeManipulation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationDelta CumulativeManipulation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CumulativeManipulation As ManipulationDelta" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationDelta ^ CumulativeManipulation { System::Windows::Input::ManipulationDelta ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationDelta</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3145c-123">Ruft die kumulierten Änderungen der aktuellen Bearbeitung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-123">Gets the cumulated changes of the current manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3145c-124">Die kumulierten Änderungen der aktuellen Bearbeitung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-124">The cumulated changes of the current manipulation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3145c-125">Die <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> Eigenschaft enthält die Gesamtzahl von Änderungen, die für die aktuelle Manipulation aufgetreten sind.</span><span class="sxs-lookup"><span data-stu-id="3145c-125">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> property contains the total changes that occurred for the current manipulation.</span></span> <span data-ttu-id="3145c-126">Sie können <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> das bearbeitete Objekt zu transformieren.</span><span class="sxs-lookup"><span data-stu-id="3145c-126">You can use <xref:System.Windows.Input.ManipulationDeltaEventArgs.CumulativeManipulation%2A> to transform the manipulated object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeltaManipulation">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationDelta DeltaManipulation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationDelta DeltaManipulation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeltaManipulation As ManipulationDelta" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationDelta ^ DeltaManipulation { System::Windows::Input::ManipulationDelta ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationDelta</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3145c-127">Ruft die letzten Änderungen der aktuellen Bearbeitung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-127">Gets the most recent changes of the current manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3145c-128">Die letzten Änderungen der aktuellen Bearbeitung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-128">The most recent changes of the current manipulation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3145c-129">Die <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> Eigenschaft enthält die Änderungen, die seit dem letzten aufgetreten <xref:System.Windows.UIElement.ManipulationDelta> Ereignis aufgetreten ist.</span><span class="sxs-lookup"><span data-stu-id="3145c-129">The <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property contains the changes that occurred since the last <xref:System.Windows.UIElement.ManipulationDelta> event occurred.</span></span> <span data-ttu-id="3145c-130">Sie können diese Eigenschaft verwenden, das bearbeitete Objekt zu transformieren.</span><span class="sxs-lookup"><span data-stu-id="3145c-130">You can use this property to transform the manipulated object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3145c-131">Das folgende Beispiel zeigt einen Ereignishandler für das <xref:System.Windows.UIElement.ManipulationDelta> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3145c-131">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="3145c-132">Im Beispiel wird die <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> Eigenschaft zu verschieben, ändern Sie die Größe und drehen Sie ein <xref:System.Windows.Shapes.Rectangle>.</span><span class="sxs-lookup"><span data-stu-id="3145c-132">The example uses the <xref:System.Windows.Input.ManipulationDeltaEventArgs.DeltaManipulation%2A> property to move, resize, and rotate a <xref:System.Windows.Shapes.Rectangle>.</span></span> <span data-ttu-id="3145c-133">In diesem Beispiel ist Teil eines umfangreicheren Beispiels in [Exemplarische Vorgehensweise: Erstellen Ihrer ersten Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3145c-133">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler">To be added.</param>
        <param name="genericTarget">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInertial">
      <MemberSignature Language="C#" Value="public bool IsInertial { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInertial" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.IsInertial" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInertial As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInertial { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3145c-134">Ruft einen Wert ab, der angibt, ob das <see cref="E:System.Windows.UIElement.ManipulationDelta" />-Ereignis während der Trägheit auftritt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-134">Gets a value that indicates whether the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs during inertia.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3145c-135">
            <see langword="true" />, wenn das <see cref="E:System.Windows.UIElement.ManipulationDelta" />-Ereignis während der Trägheit auftritt; <see langword="false" />, wenn das Ereignis auftritt, während der Benutzer Kontakt mit dem <see cref="T:System.Windows.UIElement" />-Objekt hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-135">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.ManipulationDelta" /> event occurs during inertia; <see langword="false" /> if the event occurs while the user has contact with the <see cref="T:System.Windows.UIElement" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3145c-136">Sie können diese Methode verwenden, um zu bestimmen, ob die <xref:System.Windows.UIElement.ManipulationDelta> Ereignis tritt auf, während der Trägheit oder während der Benutzer Kontakt mit dem Element verfügt, die empfängt die <xref:System.Windows.UIElement.ManipulationDelta> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3145c-136">You can use this method to determine whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurs during inertia or while the user has contact with the element that receives the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3145c-137">Das folgende Beispiel zeigt einen Ereignishandler für das <xref:System.Windows.UIElement.ManipulationDelta> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="3145c-137">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event.</span></span> <span data-ttu-id="3145c-138">Im Beispiel wird überprüft, ob die <xref:System.Windows.UIElement.ManipulationDelta> Ereignis aufgetreten ist, während der Trägheit und gibt an, ob das Rechteck am Rand eines Fensters berührt.</span><span class="sxs-lookup"><span data-stu-id="3145c-138">The example checks whether the <xref:System.Windows.UIElement.ManipulationDelta> event occurred during inertia and whether the rectangle is touching the edge of a window.</span></span> <span data-ttu-id="3145c-139">Wenn die Fälle auf "true" festgelegt sind, reagiert die Anwendung die Bearbeitung, um zu verhindern, dass das Rechteck verlassen den sichtbaren Bereich der Anwendung an.</span><span class="sxs-lookup"><span data-stu-id="3145c-139">If those cases are true, the application stops the manipulation to prevent the rectangle from leaving the visible area of the application.</span></span> <span data-ttu-id="3145c-140">In diesem Beispiel ist Teil eines umfangreicheren Beispiels in [Exemplarische Vorgehensweise: Erstellen Ihrer ersten Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span><span class="sxs-lookup"><span data-stu-id="3145c-140">This example is part of a larger example in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md).</span></span>  
  
 [!code-csharp[BasicManipulation#ManipulationDelta](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/mainwindow.xaml.cs#manipulationdelta)]
 [!code-vb[BasicManipulation#ManipulationDelta](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/mainwindow.xaml.vb#manipulationdelta)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationContainer">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement ManipulationContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement ManipulationContainer" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationContainer As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ ManipulationContainer { System::Windows::IInputElement ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3145c-141">Ruft den Container ab, der die Koordinaten für die Bearbeitung definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-141">Gets the container that defines the coordinates for the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3145c-142">Der Container, der die Koordinaten für die Bearbeitung definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-142">The container that defines the coordinates for the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ManipulationOrigin">
      <MemberSignature Language="C#" Value="public System.Windows.Point ManipulationOrigin { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Point ManipulationOrigin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.ManipulationOrigin" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ManipulationOrigin As Point" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Point ManipulationOrigin { System::Windows::Point get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3145c-143">Ruft den Punkt ab, an dem die Bearbeitung entstanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-143">Gets the point from which the manipulation originated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3145c-144">Der Punkt, an dem die Bearbeitung entstanden ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-144">The point from which the manipulation originated.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Manipulators">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt; Manipulators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Input.IManipulator&gt; Manipulators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.Manipulators" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Manipulators As IEnumerable(Of IManipulator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ Manipulators { System::Collections::Generic::IEnumerable&lt;System::Windows::Input::IManipulator ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Input.IManipulator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3145c-145">Ruft eine Auflistung von Objekten ab, die die Fingereingabekontakte für die Manipulation darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-145">Gets a collection of objects that represents the touch contacts for the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3145c-146">Eine Auflistung von Objekten, die die Fingereingabekontakte für die Manipulation darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-146">A collection of objects that represents the touch contacts for the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportBoundaryFeedback">
      <MemberSignature Language="C#" Value="public void ReportBoundaryFeedback (System.Windows.Input.ManipulationDelta unusedManipulation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ReportBoundaryFeedback(class System.Windows.Input.ManipulationDelta unusedManipulation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback(System.Windows.Input.ManipulationDelta)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReportBoundaryFeedback (unusedManipulation As ManipulationDelta)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReportBoundaryFeedback(System::Windows::Input::ManipulationDelta ^ unusedManipulation);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="unusedManipulation" Type="System.Windows.Input.ManipulationDelta" />
      </Parameters>
      <Docs>
        <param name="unusedManipulation">
          <span data-ttu-id="3145c-147">Der Teil der Bearbeitung, die das Verschieben über die Begrenzung hinaus darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-147">The portion of the manipulation that represents moving beyond the boundary.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="3145c-148">Gibt an, dass die Manipulation über bestimmte Grenzen hinausgegangen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-148">Specifies that the manipulation has gone beyond certain boundaries.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3145c-149">Verwenden der <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> Methode, um anzugeben, dass ein Element eine bestimmte Grenze überschritten wurde.</span><span class="sxs-lookup"><span data-stu-id="3145c-149">Use the <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> method to indicate that an element has moved beyond a certain boundary.</span></span>  <span data-ttu-id="3145c-150">Wenn ein Benutzer ein Element außerhalb der Grenzen des verschiebt z. B. eine <xref:System.Windows.Window>, können Sie diese Methode, um, die an das Fenster Berichts aufrufen.</span><span class="sxs-lookup"><span data-stu-id="3145c-150">For example, if a user moves an element outside of the bounds of a <xref:System.Windows.Window>, you can call this method to report that to the window.</span></span>  <span data-ttu-id="3145c-151">Beim Aufruf <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A>die <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> Ereignis auftritt.</span><span class="sxs-lookup"><span data-stu-id="3145c-151">When you call <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A>, the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event occurs.</span></span>  <span data-ttu-id="3145c-152">Wird standardmäßig die <xref:System.Windows.Window> abonniert die <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> Ereignis visuelles Feedback für den Benutzer bereitstellen, die eine Grenze erreicht wurde.</span><span class="sxs-lookup"><span data-stu-id="3145c-152">By default, the <xref:System.Windows.Window> subscribes to the <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> event to provide visual feedback to the user that a boundary has been reached.</span></span>  <span data-ttu-id="3145c-153">Sie können abonnieren <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> , benutzerdefiniertes Verhalten zu implementieren.</span><span class="sxs-lookup"><span data-stu-id="3145c-153">You can subscribe to <xref:System.Windows.UIElement.ManipulationBoundaryFeedback> to implement custom behavior.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3145c-154">Das folgende Beispiel zeigt einen Ereignishandler für die <xref:System.Windows.UIElement.ManipulationDelta> Ereignis, das Aufrufen der <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> -Methode auf, wenn der Benutzer das Element auf der Kante seines Containers richtet.</span><span class="sxs-lookup"><span data-stu-id="3145c-154">The following example shows an event handler for the <xref:System.Windows.UIElement.ManipulationDelta> event that calls the <xref:System.Windows.Input.ManipulationDeltaEventArgs.ReportBoundaryFeedback%2A> method when the user moves the element over the edge of its container.</span></span>  <span data-ttu-id="3145c-155">Zum Testen dieses Beispiels die Schritte in [Exemplarische Vorgehensweise: Erstellen Ihrer ersten Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) und Ersetzen Sie den Code in Schritt 5 mit dem folgenden Code.</span><span class="sxs-lookup"><span data-stu-id="3145c-155">To test this example, follow the steps in [Walkthrough: Creating Your First Touch Application](~/docs/framework/wpf/advanced/walkthrough-creating-your-first-touch-application.md) and replace the code in step 5 with this code.</span></span>  
  
 [!code-csharp[BasicManipulation#ReportBoundaryFeedback](~/samples/snippets/csharp/VS_Snippets_Wpf/basicmanipulation/csharp/reportboundaryfeedbackexample.xaml.cs#reportboundaryfeedback)]
 [!code-vb[BasicManipulation#ReportBoundaryFeedback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/basicmanipulation/visualbasic/reportboundaryfeedbackexample.xaml.vb#reportboundaryfeedback)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="3145c-156">
            <paramref name="unusedManipulation" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-156">
              <paramref name="unusedManipulation" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="StartInertia">
      <MemberSignature Language="C#" Value="public void StartInertia ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StartInertia() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.ManipulationDeltaEventArgs.StartInertia" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartInertia ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartInertia();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="3145c-157">Startet Trägheit auf der Bearbeitung durch das Ignorieren von nachfolgenden Kontaktbewegungen und Auslösen des <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" />-Ereignisses.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-157">Starts inertia on the manipulation by ignoring subsequent contact movements and raising the <see cref="E:System.Windows.UIElement.ManipulationInertiaStarting" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Velocities">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ManipulationVelocities Velocities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ManipulationVelocities Velocities" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ManipulationDeltaEventArgs.Velocities" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Velocities As ManipulationVelocities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ManipulationVelocities ^ Velocities { System::Windows::Input::ManipulationVelocities ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ManipulationVelocities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="3145c-158">Ruft die Raten der letzten Änderungen an der Bearbeitung ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-158">Gets the rates of the most recent changes to the manipulation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="3145c-159">Die Raten der letzten Änderungen an der Bearbeitung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="3145c-159">The rates of the most recent changes to the manipulation.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>