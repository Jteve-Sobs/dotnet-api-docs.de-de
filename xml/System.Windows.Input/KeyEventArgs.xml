<Type Name="KeyEventArgs" FullName="System.Windows.Input.KeyEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b084c3cfd2d42bba732befcc17982a27836f8d6f" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82496877" /></Metadata><TypeSignature Language="C#" Value="public class KeyEventArgs : System.Windows.Input.KeyboardEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyEventArgs extends System.Windows.Input.KeyboardEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyEventArgs&#xA;Inherits KeyboardEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyEventArgs : System::Windows::Input::KeyboardEventArgs" />
  <TypeSignature Language="F#" Value="type KeyEventArgs = class&#xA;    inherit KeyboardEventArgs" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.KeyboardEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a9820-101">Stellt Daten für die Routingereignisse <see cref="E:System.Windows.UIElement.KeyUp" /> und <see cref="E:System.Windows.UIElement.KeyDown" /> sowie dazugehörige angefügte und Vorschauereignisse bereit.</span><span class="sxs-lookup"><span data-stu-id="a9820-101">Provides data for the <see cref="E:System.Windows.UIElement.KeyUp" /> and <see cref="E:System.Windows.UIElement.KeyDown" /> routed events, as well as related attached and Preview events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9820-102">Diese Ereignisdaten Klasse wird mit den folgenden angefügten Ereignissen verwendet:</span><span class="sxs-lookup"><span data-stu-id="a9820-102">This event data class is used with the following attached events:</span></span>  
  
-   <xref:System.Windows.Input.Keyboard.KeyUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Keyboard.KeyDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Keyboard.PreviewKeyUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Input.Keyboard.PreviewKeyDown?displayProperty=nameWithType>  
  
 <span data-ttu-id="a9820-103">Diese Ereignisdaten Klasse wird auch mit den folgenden Routing Ereignissen für Basiselemente verwendet.</span><span class="sxs-lookup"><span data-stu-id="a9820-103">This event data class is also used with the following routed events on base elements.</span></span> <span data-ttu-id="a9820-104">Diese Routing Ereignisse leiten die zuvor aufgelisteten angefügten Ereignisse weiter, um Sie für das allgemeine Element Modell in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]besser zugänglich zu machen.</span><span class="sxs-lookup"><span data-stu-id="a9820-104">These routed events forward the previously listed attached events to make them more accessible to the general element model in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span></span>  
  
-   <xref:System.Windows.UIElement.KeyUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.KeyDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.PreviewKeyUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.UIElement.PreviewKeyDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.KeyUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.KeyDown?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewKeyUp?displayProperty=nameWithType>  
  
-   <xref:System.Windows.ContentElement.PreviewKeyDown?displayProperty=nameWithType>  
  
 <span data-ttu-id="a9820-105">Die angefügten Ereignisse und die Routing Ereignisse für das Basiselement nutzen Ihre Ereignisdaten gemeinsam, und die Blasen-und tunnelingversionen der Routing Ereignisse geben auch Ereignisdaten frei.</span><span class="sxs-lookup"><span data-stu-id="a9820-105">The attached events and the base element routed events share their event data, and the bubbling and tunneling versions of the routed events also share event data.</span></span> <span data-ttu-id="a9820-106">Dies kann sich auf die behandelten Merkmale des Ereignisses auswirken, wenn es die Ereignis Route durchläuft.</span><span class="sxs-lookup"><span data-stu-id="a9820-106">This can affect the handled characteristics of the event as it travels the event route.</span></span> <span data-ttu-id="a9820-107">Weitere Informationen finden Sie unter [Übersicht über die Eingabe](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a9820-107">For details, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="a9820-108">Ein Schlüssel kann sich in den Status "hoch" und "ein-oder ausgeschaltet" oder "nach unten" und "ein/aus" befinden.</span><span class="sxs-lookup"><span data-stu-id="a9820-108">A key can be in both the up and toggled states or the down and toggled states.</span></span> <span data-ttu-id="a9820-109">Aus diesem Grund ist es nicht so einfach, festzustellen, ob es sich um einen Schlüssel handelt, der den <xref:System.Windows.Input.KeyEventArgs.KeyStates%2A> Wert als numerischen Wert überprüft.</span><span class="sxs-lookup"><span data-stu-id="a9820-109">For this reason, determining whether a key is up or down is not as simple as checking the <xref:System.Windows.Input.KeyEventArgs.KeyStates%2A> value as a numeric value.</span></span> <span data-ttu-id="a9820-110">Stattdessen sollten Sie den Wert überprüfen, indem Sie ihn als Flagenumeration behandeln.</span><span class="sxs-lookup"><span data-stu-id="a9820-110">Instead, you should check the value by treating it as a flag enumeration.</span></span> <span data-ttu-id="a9820-111">Verwenden Sie einen `AND` Vergleich des ersten Bits.</span><span class="sxs-lookup"><span data-stu-id="a9820-111">Use an `AND` comparison of the first bit.</span></span> <span data-ttu-id="a9820-112">Verwenden Sie alternativ die Hilfseigenschaften <xref:System.Windows.Input.KeyEventArgs.IsUp%2A>, <xref:System.Windows.Input.KeyEventArgs.IsDown%2A>und <xref:System.Windows.Input.KeyEventArgs.IsToggled%2A>, um zu bestimmen, ob ein bestimmter Schlüssel ein-oder ausgeschaltet ist.</span><span class="sxs-lookup"><span data-stu-id="a9820-112">Alternatively, use the helper properties <xref:System.Windows.Input.KeyEventArgs.IsUp%2A>, <xref:System.Windows.Input.KeyEventArgs.IsDown%2A>, and <xref:System.Windows.Input.KeyEventArgs.IsToggled%2A> to determine whether a given key is up, down, or toggled.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyEventHandler" />
    <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
    <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyEventArgs (System.Windows.Input.KeyboardDevice keyboard, System.Windows.PresentationSource inputSource, int timestamp, System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.KeyboardDevice keyboard, class System.Windows.PresentationSource inputSource, int32 timestamp, valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyEventArgs.#ctor(System.Windows.Input.KeyboardDevice,System.Windows.PresentationSource,System.Int32,System.Windows.Input.Key)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyboard As KeyboardDevice, inputSource As PresentationSource, timestamp As Integer, key As Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyEventArgs(System::Windows::Input::KeyboardDevice ^ keyboard, System::Windows::PresentationSource ^ inputSource, int timestamp, System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyEventArgs : System.Windows.Input.KeyboardDevice * System.Windows.PresentationSource * int * System.Windows.Input.Key -&gt; System.Windows.Input.KeyEventArgs" Usage="new System.Windows.Input.KeyEventArgs (keyboard, inputSource, timestamp, key)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="keyboard" Type="System.Windows.Input.KeyboardDevice" />
        <Parameter Name="inputSource" Type="System.Windows.PresentationSource" />
        <Parameter Name="timestamp" Type="System.Int32" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="keyboard"><span data-ttu-id="a9820-113">Das logische Tastaturgerät, das diesem Ereignis zugeordnet ist.</span><span class="sxs-lookup"><span data-stu-id="a9820-113">The logical keyboard device associated with this event.</span></span></param>
        <param name="inputSource"><span data-ttu-id="a9820-114">Die Eingabequelle.</span><span class="sxs-lookup"><span data-stu-id="a9820-114">The input source.</span></span></param>
        <param name="timestamp"><span data-ttu-id="a9820-115">Die Zeit der Eingabe.</span><span class="sxs-lookup"><span data-stu-id="a9820-115">The time when the input occurred.</span></span></param>
        <param name="key"><span data-ttu-id="a9820-116">Die Taste, auf die das Ereignis verweist.</span><span class="sxs-lookup"><span data-stu-id="a9820-116">The key referenced by the event.</span></span></param>
        <summary><span data-ttu-id="a9820-117">Initialisiert eine neue Instanz der <see cref="T:System.Windows.Input.KeyEventArgs" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="a9820-117">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyEventHandler" />
        <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
        <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="DeadCharProcessedKey">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key DeadCharProcessedKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key DeadCharProcessedKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyEventArgs.DeadCharProcessedKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeadCharProcessedKey As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key DeadCharProcessedKey { System::Windows::Input::Key get(); };" />
      <MemberSignature Language="F#" Value="member this.DeadCharProcessedKey : System.Windows.Input.Key" Usage="System.Windows.Input.KeyEventArgs.DeadCharProcessedKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9820-118">Ruft die Taste ab, die Teil einer Tottastenkombination ist, um ein einzelnes kombiniertes Zeichen zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="a9820-118">Gets the key that is part of dead key composition to create a single combined character.</span></span></summary>
        <value><span data-ttu-id="a9820-119">Die Taste, die Teil einer Tottastenkombination ist, um ein einzelnes kombiniertes Zeichen zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="a9820-119">The key that is part of dead key composition to create a single combined character.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9820-120">Eine unzustellbare Taste erzeugt kein sichtbares Zeichen, gibt aber an, dass der Schlüssel mit dem Zeichen kombiniert werden soll, das durch den nächsten Buchstaben gedrückt wird</span><span class="sxs-lookup"><span data-stu-id="a9820-120">A dead key, when pressed, produces no visible character but indicates that the key is to be combined with the character produced by the next letter key pressed.</span></span>  <span data-ttu-id="a9820-121">Wenn <xref:System.Windows.Input.KeyEventArgs.Key%2A> <xref:System.Windows.Input.Key.DeadCharProcessed?displayProperty=nameWithType>zurückgibt, können Sie diese Eigenschaft verwenden, um den tatsächlich eingegebenen Schlüssel zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="a9820-121">If <xref:System.Windows.Input.KeyEventArgs.Key%2A> returns <xref:System.Windows.Input.Key.DeadCharProcessed?displayProperty=nameWithType>, you can use this property to get the actual key that was entered.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImeProcessedKey">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key ImeProcessedKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key ImeProcessedKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyEventArgs.ImeProcessedKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ImeProcessedKey As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key ImeProcessedKey { System::Windows::Input::Key get(); };" />
      <MemberSignature Language="F#" Value="member this.ImeProcessedKey : System.Windows.Input.Key" Usage="System.Windows.Input.KeyEventArgs.ImeProcessedKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9820-122">Ruft die Taste ab, auf die das Ereignis verweist, wenn die Taste von einem [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)] verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="a9820-122">Gets the keyboard key referenced by the event, if the key will be processed by an [!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)].</span></span></summary>
        <value><span data-ttu-id="a9820-123">Die <see cref="T:System.Windows.Input.Key" />, auf die das Ereignis verweist.</span><span class="sxs-lookup"><span data-stu-id="a9820-123">The <see cref="T:System.Windows.Input.Key" /> referenced by the event.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyEventHandler" />
        <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
        <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="InputSource">
      <MemberSignature Language="C#" Value="public System.Windows.PresentationSource InputSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource InputSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyEventArgs.InputSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PresentationSource ^ InputSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InputSource : System.Windows.PresentationSource" Usage="System.Windows.Input.KeyEventArgs.InputSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9820-124">Ruft die Eingabequelle ab, die diese Eingabe bereitgestellt hat.</span><span class="sxs-lookup"><span data-stu-id="a9820-124">Gets the input source that provided this input.</span></span></summary>
        <value><span data-ttu-id="a9820-125">Die Eingabequelle.</span><span class="sxs-lookup"><span data-stu-id="a9820-125">The input source.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyEventHandler" />
        <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
        <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="InvokeEventHandler">
      <MemberSignature Language="C#" Value="protected override void InvokeEventHandler (Delegate genericHandler, object genericTarget);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InvokeEventHandler(class System.Delegate genericHandler, object genericTarget) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyEventArgs.InvokeEventHandler(System.Delegate,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InvokeEventHandler (genericHandler As Delegate, genericTarget As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InvokeEventHandler(Delegate ^ genericHandler, System::Object ^ genericTarget);" />
      <MemberSignature Language="F#" Value="override this.InvokeEventHandler : Delegate * obj -&gt; unit" Usage="keyEventArgs.InvokeEventHandler (genericHandler, genericTarget)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="genericHandler" Type="System.Delegate" />
        <Parameter Name="genericTarget" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="genericHandler"><span data-ttu-id="a9820-126">Der generische Handler, der auf typspezifische Weise aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a9820-126">The generic handler to call in a type-specific way.</span></span></param>
        <param name="genericTarget"><span data-ttu-id="a9820-127">Das Ziel, für das der Handler aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a9820-127">The target to call the handler on.</span></span></param>
        <summary><span data-ttu-id="a9820-128">Ruft Ereignishandler auf typspezifische Weise auf, wodurch sich die Effizienz des Ereignissystems erhöhen kann.</span><span class="sxs-lookup"><span data-stu-id="a9820-128">Invokes event handlers in a type-specific way, which can increase event system efficiency.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9820-129">Diese Implementierung wandelt den generischen Handler als <xref:System.Windows.Input.KeyEventHandler> um und ruft ihn anschließend auf.</span><span class="sxs-lookup"><span data-stu-id="a9820-129">This implementation casts the generic handler as a <xref:System.Windows.Input.KeyEventHandler> and then invokes it.</span></span> <span data-ttu-id="a9820-130">Ausführliche Informationen zu diesem Implementierungs Muster und den dafür genannten Gründen finden Sie unter Übersicht über <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> und Routing [Ereignisse](~/docs/framework/wpf/advanced/routed-events-overview.md).</span><span class="sxs-lookup"><span data-stu-id="a9820-130">For details on this implementation pattern and the reasons for it, see <xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A> and [Routed Events Overview](~/docs/framework/wpf/advanced/routed-events-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDown">
      <MemberSignature Language="C#" Value="public bool IsDown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDown" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyEventArgs.IsDown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDown { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDown : bool" Usage="System.Windows.Input.KeyEventArgs.IsDown" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9820-131">Ruft einen Wert ab, der angibt, ob die Taste, auf die das Ereignis verweist, im gedrückten Zustand ist.</span><span class="sxs-lookup"><span data-stu-id="a9820-131">Gets a value that indicates whether the key referenced by the event is in the down state.</span></span></summary>
        <value><span data-ttu-id="a9820-132"><see langword="true" />, wenn die Taste gedrückt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a9820-132"><see langword="true" /> if the key is down; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9820-133">Die <xref:System.Windows.Input.Keyboard>-Klasse stellt auch Informationen über den Zustand der Schlüssel auf der Tastatur bereit.</span><span class="sxs-lookup"><span data-stu-id="a9820-133">The <xref:System.Windows.Input.Keyboard> class also provides information about the state of the keys on the keyboard.</span></span> <span data-ttu-id="a9820-134">Die <xref:System.Windows.Input.Keyboard.IsKeyDown%2A>-Methode gibt beispielsweise zurück, ob ein angegebener Schlüssel nicht angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="a9820-134">For instance, the <xref:System.Windows.Input.Keyboard.IsKeyDown%2A> method returns whether a specified key is down.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9820-135">Im folgenden Beispiel wird überprüft, ob der einer Instanz von zugeordnete Schlüssel durch Abrufen des Status der <xref:System.Windows.Input.KeyEventArgs.IsDown%2A>-Eigenschaft nicht mehr <xref:System.Windows.Input.KeyEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="a9820-135">The following example checks whether the key associated with an instance of <xref:System.Windows.Input.KeyEventArgs> is down by obtaining the state of the <xref:System.Windows.Input.KeyEventArgs.IsDown%2A> property.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsIsDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargsisdown)]
 [!code-vb[keyargssnippetsample#KeyEventArgsIsDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargsisdown)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventHandler" />
        <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
        <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="IsRepeat">
      <MemberSignature Language="C#" Value="public bool IsRepeat { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsRepeat" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyEventArgs.IsRepeat" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsRepeat As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsRepeat { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsRepeat : bool" Usage="System.Windows.Input.KeyEventArgs.IsRepeat" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9820-136">Ruft einen Wert ab, der angibt, ob die Taste, auf die das Ereignis verweist, eine wiederholte Taste ist.</span><span class="sxs-lookup"><span data-stu-id="a9820-136">Gets a value that indicates whether the keyboard key referenced by the event is a repeated key.</span></span></summary>
        <value><span data-ttu-id="a9820-137"><see langword="true" />, wenn die Taste wiederholt wird, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a9820-137"><see langword="true" /> if the key is repeated; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="a9820-138">Es gibt keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="a9820-138">There is no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a9820-139">Im folgenden Beispiel wird überprüft, ob der einer Instanz <xref:System.Windows.Input.KeyEventArgs> von zugeordnete Schlüssel ein wiederholter Schlüssel ist, indem der Status der <xref:System.Windows.Input.KeyEventArgs.IsRepeat%2A>-Eigenschaft erhalten wird.</span><span class="sxs-lookup"><span data-stu-id="a9820-139">The following example checks whether the key associated with an instance of <xref:System.Windows.Input.KeyEventArgs> is a repeated key by obtaining the state of the <xref:System.Windows.Input.KeyEventArgs.IsRepeat%2A> property.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsIsRepeat](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargsisrepeat)]
 [!code-vb[keyargssnippetsample#KeyEventArgsIsRepeat](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargsisrepeat)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventHandler" />
        <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
        <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="IsToggled">
      <MemberSignature Language="C#" Value="public bool IsToggled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsToggled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyEventArgs.IsToggled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsToggled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsToggled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsToggled : bool" Usage="System.Windows.Input.KeyEventArgs.IsToggled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9820-140">Ruft einen Wert ab, der angibt, ob die Taste, auf die das Ereignis verweist, im umgeschalteten Zustand ist.</span><span class="sxs-lookup"><span data-stu-id="a9820-140">Gets a value that indicates whether the key referenced by the event is in the toggled state.</span></span></summary>
        <value><span data-ttu-id="a9820-141"><see langword="true" />, wenn die Taste umgeschaltet ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a9820-141"><see langword="true" /> if the key is toggled; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="a9820-142">Es gibt keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="a9820-142">There is no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9820-143">Die <xref:System.Windows.Input.Keyboard>-Klasse stellt auch Informationen über den Zustand der Schlüssel auf der Tastatur bereit.</span><span class="sxs-lookup"><span data-stu-id="a9820-143">The <xref:System.Windows.Input.Keyboard> class also provides information about the state of the keys on the keyboard.</span></span> <span data-ttu-id="a9820-144">Die <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A>-Methode gibt beispielsweise zurück, ob ein angegebener Schlüssel ein-und ausgeschaltet wird.</span><span class="sxs-lookup"><span data-stu-id="a9820-144">For instance, the <xref:System.Windows.Input.Keyboard.IsKeyToggled%2A> method returns whether a specified key is toggled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9820-145">Im folgenden Beispiel wird überprüft, ob der einem <xref:System.Windows.Input.KeyEventArgs> zugeordnete Schlüssel durch Abrufen des Status der <xref:System.Windows.Input.KeyEventArgs.IsToggled%2A>-Eigenschaft ein-und ausgeschaltet wird.</span><span class="sxs-lookup"><span data-stu-id="a9820-145">The following example checks whether the key associated with an instance of <xref:System.Windows.Input.KeyEventArgs> is toggled by obtaining the state of the <xref:System.Windows.Input.KeyEventArgs.IsToggled%2A> property.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsIsToggled](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargsistoggled)]
 [!code-vb[keyargssnippetsample#KeyEventArgsIsToggled](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargsistoggled)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventHandler" />
        <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
        <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="IsUp">
      <MemberSignature Language="C#" Value="public bool IsUp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUp" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyEventArgs.IsUp" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUp As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUp { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsUp : bool" Usage="System.Windows.Input.KeyEventArgs.IsUp" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9820-146">Ruft einen Wert ab, der angibt, ob die Taste, auf die das Ereignis verweist, im nicht gedrückten Zustand ist.</span><span class="sxs-lookup"><span data-stu-id="a9820-146">Gets a value that indicates whether the key referenced by the event is in the up state.</span></span></summary>
        <value><span data-ttu-id="a9820-147"><see langword="true" />, wenn die Taste nicht gedrückt ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a9820-147"><see langword="true" /> if the key is up; otherwise, <see langword="false" />.</span></span>  <span data-ttu-id="a9820-148">Es gibt keinen Standardwert.</span><span class="sxs-lookup"><span data-stu-id="a9820-148">There is no default value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9820-149">Die <xref:System.Windows.Input.Keyboard>-Klasse stellt auch Informationen über den Zustand der Schlüssel auf der Tastatur bereit.</span><span class="sxs-lookup"><span data-stu-id="a9820-149">The <xref:System.Windows.Input.Keyboard> class also provides information about the state of the keys on the keyboard.</span></span>  <span data-ttu-id="a9820-150">Die <xref:System.Windows.Input.Keyboard.IsKeyUp%2A>-Methode gibt beispielsweise zurück, ob ein angegebenes ist.</span><span class="sxs-lookup"><span data-stu-id="a9820-150">For instance, the <xref:System.Windows.Input.Keyboard.IsKeyUp%2A> method returns whether a specified is up.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9820-151">Im folgenden Beispiel wird überprüft, ob der einem <xref:System.Windows.Input.KeyEventArgs> zugeordnete Schlüssel durch Abrufen des Status der <xref:System.Windows.Input.KeyEventArgs.IsUp%2A>-Eigenschaft aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="a9820-151">The following example checks whether the key associated with an instance of <xref:System.Windows.Input.KeyEventArgs> is up by obtaining the state of the <xref:System.Windows.Input.KeyEventArgs.IsUp%2A> property.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsIsUp](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargsisup)]
 [!code-vb[keyargssnippetsample#KeyEventArgsIsUp](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargsisup)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventHandler" />
        <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
        <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyEventArgs.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key" Usage="System.Windows.Input.KeyEventArgs.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9820-152">Ruft die dem Ereignis zugeordnete Taste der Tastatur ab.</span><span class="sxs-lookup"><span data-stu-id="a9820-152">Gets the keyboard key associated with the event.</span></span></summary>
        <value><span data-ttu-id="a9820-153">Die <see cref="T:System.Windows.Input.Key" />, auf die das Ereignis verweist.</span><span class="sxs-lookup"><span data-stu-id="a9820-153">The <see cref="T:System.Windows.Input.Key" /> referenced by the event.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="a9820-154">Im folgenden Beispiel wird eine <xref:System.Windows.Input.KeyEventHandler> erstellt und überprüft, ob der Schlüssel, der der <xref:System.Windows.Input.KeyEventArgs> zugeordnet ist, der <xref:System.Windows.Input.Key.Return> Schlüssel ist.</span><span class="sxs-lookup"><span data-stu-id="a9820-154">The following example creates a <xref:System.Windows.Input.KeyEventHandler> and checks whether the key associated with the <xref:System.Windows.Input.KeyEventArgs> is the <xref:System.Windows.Input.Key.Return> key.</span></span>  
  
 [!code-csharp[keydown#KeyDownSample](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyDown/CSharp/Window1.xaml.cs#keydownsample)]
 [!code-vb[keydown#KeyDownSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyDown/VisualBasic/Window1.xaml.vb#keydownsample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventHandler" />
        <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
        <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="KeyStates">
      <MemberSignature Language="C#" Value="public System.Windows.Input.KeyStates KeyStates { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.KeyStates KeyStates" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyEventArgs.KeyStates" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyStates As KeyStates" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::KeyStates KeyStates { System::Windows::Input::KeyStates get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyStates : System.Windows.Input.KeyStates" Usage="System.Windows.Input.KeyEventArgs.KeyStates" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.KeyStates</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9820-155">Ruft den Zustand der diesem Ereignis zugeordneten Taste ab.</span><span class="sxs-lookup"><span data-stu-id="a9820-155">Gets the state of the keyboard key associated with this event.</span></span></summary>
        <value><span data-ttu-id="a9820-156">Der Zustand der Taste.</span><span class="sxs-lookup"><span data-stu-id="a9820-156">The state of the key.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a9820-157">Ein Schlüssel kann sich in den Status "hoch" und "ein-oder ausgeschaltet" oder "nach unten" und "ein/aus" befinden.</span><span class="sxs-lookup"><span data-stu-id="a9820-157">A key can be in both the up and toggled states or the down and toggled states.</span></span> <span data-ttu-id="a9820-158">Aus diesem Grund ist es nicht so einfach, festzustellen, ob es sich um einen Schlüssel handelt, der den <xref:System.Windows.Input.KeyEventArgs.KeyStates%2A> Wert als numerischen Wert überprüft.</span><span class="sxs-lookup"><span data-stu-id="a9820-158">For this reason, determining whether a key is up or down is not as simple as checking the <xref:System.Windows.Input.KeyEventArgs.KeyStates%2A> value as a numeric value.</span></span> <span data-ttu-id="a9820-159">Stattdessen sollten Sie den Wert überprüfen, indem Sie ihn als Flagenumeration behandeln.</span><span class="sxs-lookup"><span data-stu-id="a9820-159">Instead, you should check the value by treating it as a flag enumeration.</span></span> <span data-ttu-id="a9820-160">Verwenden Sie einen `AND` Vergleich des ersten Bits.</span><span class="sxs-lookup"><span data-stu-id="a9820-160">Use an `AND` comparison of the first bit.</span></span> <span data-ttu-id="a9820-161">Verwenden Sie alternativ die Hilfseigenschaften <xref:System.Windows.Input.KeyEventArgs.IsUp%2A>, <xref:System.Windows.Input.KeyEventArgs.IsDown%2A>und <xref:System.Windows.Input.KeyEventArgs.IsToggled%2A>, um zu bestimmen, ob ein bestimmter Schlüssel ein-oder ausgeschaltet ist.</span><span class="sxs-lookup"><span data-stu-id="a9820-161">Alternatively, use the helper properties <xref:System.Windows.Input.KeyEventArgs.IsUp%2A>, <xref:System.Windows.Input.KeyEventArgs.IsDown%2A>, and <xref:System.Windows.Input.KeyEventArgs.IsToggled%2A> to determine whether a given key is up, down, or toggled.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="a9820-162">Im folgenden Beispiel wird überprüft, ob ein Schlüssel, der einer Instanz von zugeordnet ist, <xref:System.Windows.Input.KeyEventArgs> ist, indem ein bitweiser `AND` Vergleich der <xref:System.Windows.Input.KeyEventArgs.KeyStates%2A> des Schlüssels und des <xref:System.Windows.Input.KeyStates.Down> Enumerationswerts durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="a9820-162">The following example checks whether a key associated with an instance of <xref:System.Windows.Input.KeyEventArgs> is down by performing a bitwise `AND` comparison on the <xref:System.Windows.Input.KeyEventArgs.KeyStates%2A> of the key and the <xref:System.Windows.Input.KeyStates.Down> enumeration value.</span></span>  
  
 [!code-csharp[keyargssnippetsample#KeyEventArgsKeyStatesDown](~/samples/snippets/csharp/VS_Snippets_Wpf/KeyArgsSnippetSample/CSharp/Window1.xaml.cs#keyeventargskeystatesdown)]
 [!code-vb[keyargssnippetsample#KeyEventArgsKeyStatesDown](~/samples/snippets/visualbasic/VS_Snippets_Wpf/KeyArgsSnippetSample/visualbasic/window1.xaml.vb#keyeventargskeystatesdown)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyEventHandler" />
        <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
        <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="SystemKey">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key SystemKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key SystemKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyEventArgs.SystemKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SystemKey As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key SystemKey { System::Windows::Input::Key get(); };" />
      <MemberSignature Language="F#" Value="member this.SystemKey : System.Windows.Input.Key" Usage="System.Windows.Input.KeyEventArgs.SystemKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a9820-163">Ruft die Taste ab, auf die das Ereignis verweist, wenn die Taste vom System verarbeitet wird.</span><span class="sxs-lookup"><span data-stu-id="a9820-163">Gets the keyboard key referenced by the event, if the key will be processed by the system.</span></span></summary>
        <value><span data-ttu-id="a9820-164">Die <see cref="T:System.Windows.Input.Key" />, auf die das Ereignis verweist.</span><span class="sxs-lookup"><span data-stu-id="a9820-164">The <see cref="T:System.Windows.Input.Key" /> referenced by the event.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyEventHandler" />
        <altmember cref="T:System.Windows.Input.KeyboardEventArgs" />
        <altmember cref="T:System.Windows.Input.KeyboardEventHandler" />
      </Docs>
    </Member>
  </Members>
</Type>
