<Type Name="TouchDevice" FullName="System.Windows.Input.TouchDevice">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="32c3c7cfda5b22cea1decd97153f9f29ceb1d733" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36504455" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TouchDevice : System.Windows.Input.InputDevice, System.Windows.Input.IManipulator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TouchDevice extends System.Windows.Input.InputDevice implements class System.Windows.Input.IManipulator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchDevice" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TouchDevice&#xA;Inherits InputDevice&#xA;Implements IManipulator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchDevice abstract : System::Windows::Input::InputDevice, System::Windows::Input::IManipulator" />
  <TypeSignature Language="F#" Value="type TouchDevice = class&#xA;    inherit InputDevice&#xA;    interface IManipulator" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.IManipulator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="b43b0-101">Stellt eine einzelne Fingereingabe auf einem Touchscreen dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b43b0-101">Represents a single touch input produced by a finger on a touchscreen.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-102">Sie in der Regel Zugriff auf eine <xref:System.Windows.Input.TouchDevice> mithilfe der <xref:System.Windows.Input.TouchEventArgs.TouchDevice%2A?displayProperty=nameWithType> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="b43b0-102">You typically access a <xref:System.Windows.Input.TouchDevice> by using the <xref:System.Windows.Input.TouchEventArgs.TouchDevice%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b43b0-103">Ein <xref:System.Windows.Input.TouchDevice> stellt eine einzelne Fingereingabe auf einem Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="b43b0-103">A <xref:System.Windows.Input.TouchDevice> represents a single touch on a screen.</span></span> <span data-ttu-id="b43b0-104">Wenn mehrere Fingereingaben vorhanden sind, verwenden Sie die <xref:System.Windows.Input.TouchDevice.Id%2A> Eigenschaft unterschieden.</span><span class="sxs-lookup"><span data-stu-id="b43b0-104">If multiple touches are present, use the <xref:System.Windows.Input.TouchDevice.Id%2A> property to distinguish between them.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b43b0-105">Diese Klasse enthält eine vererbungsanforderung auf Klassenebene, die für alle Member gilt.</span><span class="sxs-lookup"><span data-stu-id="b43b0-105">This class contains an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="b43b0-106">Ein <xref:System.Security.SecurityException> wird ausgelöst, wenn die abgeleitete Klasse keinen volle Vertrauenswürdigkeit.</span><span class="sxs-lookup"><span data-stu-id="b43b0-106">A <xref:System.Security.SecurityException> is thrown when the derived class does not have full-trust permission.</span></span> <span data-ttu-id="b43b0-107">Weitere Informationen zu Sicherheitsberechtigungen finden Sie unter [Verknüpfungsaufrufe](~/docs/framework/misc/link-demands.md) und [Vererbungsanforderungen](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span><span class="sxs-lookup"><span data-stu-id="b43b0-107">For more information about security demands, see [Link Demands](~/docs/framework/misc/link-demands.md) and [Inheritance Demands](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b43b0-108">Im folgende Beispiel ermöglicht Ihnen die Erstellung von einfachen Muster auf eine <xref:System.Windows.Controls.Canvas> durch Ziehen von zwei Fingern auf einem Touchscreen dar.</span><span class="sxs-lookup"><span data-stu-id="b43b0-108">The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers on a touchscreen.</span></span> <span data-ttu-id="b43b0-109">Jede Fingereingabe dargestellte eine <xref:System.Windows.Input.TouchDevice> in der <xref:System.Windows.Input.TouchEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="b43b0-109">Each touch is represented by a <xref:System.Windows.Input.TouchDevice> in the <xref:System.Windows.Input.TouchEventArgs>.</span></span> <span data-ttu-id="b43b0-110">Das Muster wird erstellt, indem eine Linie zwischen den Berührungspunkte, die von den Fingereingaben bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="b43b0-110">The pattern is created by drawing a line between the touch points that are provided by the touches.</span></span> <span data-ttu-id="b43b0-111">Dieses Beispiel benötigen Sie einen Windows Touch-kompatiblen Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="b43b0-111">This example requires a Windows Touch–compatible screen.</span></span>  
  
 <span data-ttu-id="b43b0-112">Das folgende Markup erstellt die Benutzeroberfläche besteht aus einem <xref:System.Windows.Controls.Canvas> , die in einem Raster zentriert ist und fügt die Ereignishandler für die Berührungsereignisse.</span><span class="sxs-lookup"><span data-stu-id="b43b0-112">The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a grid, and attaches the event handlers for the touch events.</span></span>  
  
 [!code-xaml[TouchEventsSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml#000)]  
  
 <span data-ttu-id="b43b0-113">Der folgende Code behandelt die Berührungsereignisse.</span><span class="sxs-lookup"><span data-stu-id="b43b0-113">The following code handles the touch events.</span></span> <span data-ttu-id="b43b0-114">Wenn eine Fingereingabe auf gedrückt wird die <xref:System.Windows.Controls.Canvas>, die <xref:System.Windows.Input.TouchDevice> aufgezeichnet wird, um die <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="b43b0-114">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="b43b0-115">Wenn die Fingereingabe beendet wird, die <xref:System.Windows.Input.TouchDevice> freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="b43b0-115">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="b43b0-116">Wenn eine Fingereingabe verschoben wird, auf die <xref:System.Windows.Controls.Canvas>, die <xref:System.Windows.Input.TouchDevice.Id%2A> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="b43b0-116">When a touch moves on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="b43b0-117">Wenn das Verschieben aus dem ersten Touch geliefert wurde, wird dessen Speicherort aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="b43b0-117">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="b43b0-118">Wenn das Verschieben von einem zweiten geliefert wurde, wird eine Linie von der Position der ersten Fingereingabe auf die Position des zweiten Fingereingabe gezeichnet.</span><span class="sxs-lookup"><span data-stu-id="b43b0-118">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 [!code-csharp[TouchEventsSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchEventsSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">
      <span data-ttu-id="b43b0-119">für die von dieser Klasse ableiten.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b43b0-119">for deriving from this class.</span>
      </span>
      <span data-ttu-id="b43b0-120">Sicherheitsaktion: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b43b0-120">Security action: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />.</span>
      </span>
      <span data-ttu-id="b43b0-121">Zugeordnete Enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="b43b0-121">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /></span>
      </span>
    </permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TouchDevice (int deviceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 deviceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (deviceId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TouchDevice(int deviceId);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.TouchDevice : int -&gt; System.Windows.Input.TouchDevice" Usage="new System.Windows.Input.TouchDevice deviceId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="deviceId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="deviceId">
          <span data-ttu-id="b43b0-122">Ein eindeutiger Bezeichner für das Fingereingabegerät.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-122">A unique identifier for the touch device.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b43b0-123">Wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die <see cref="T:System.Windows.Input.TouchDevice" />-Klasse zu initialisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-123">Called from constructors in derived classes to initialize the <see cref="T:System.Windows.Input.TouchDevice" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">
          <span data-ttu-id="b43b0-124">erfordert volle Vertrauenswürdigkeit für den unmittelbaren Aufrufer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-124">requires full trust for the immediate caller.</span>
          </span>
          <span data-ttu-id="b43b0-125">Diese Klasse kann nicht von teilweise vertrauenswürdigem oder transparentem Code verwendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-125">This class cannot be used by partially trusted or transparent code.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="protected void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Activate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; unit" Usage="touchDevice.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-126">Fügt das <see cref="T:System.Windows.Input.TouchDevice" />-Objekt dem Eingabemessagingsystem hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-126">Adds the <see cref="T:System.Windows.Input.TouchDevice" /> to the input messaging system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-127">Klassen, die von erben <xref:System.Windows.Input.TouchDevice> aufrufen, sollten diese Methode, um das aktuelle Gerät zu aktivieren.</span><span class="sxs-lookup"><span data-stu-id="b43b0-127">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to activate the current device.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b43b0-128">Das Gerät ist bereits aktiviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-128">The device is already activated.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Event Activated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-129">Tritt auf, wenn das <see cref="T:System.Windows.Input.TouchDevice" /> dem Eingabemessagingsystem hinzugefügt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-129">Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is added to the input messaging system.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Input.TouchDevice.Activate" />
      </Docs>
    </Member>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.ActiveSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property ActiveSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PresentationSource ^ ActiveSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveSource : System.Windows.PresentationSource" Usage="System.Windows.Input.TouchDevice.ActiveSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-130">Ruft die <see cref="T:System.Windows.PresentationSource" /> ab, die Eingaben für dieses Gerät meldet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-130">Gets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b43b0-131">Die Quelle, die Eingaben für dieses Gerät meldet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-131">The source that is reporting input for this device.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-132">Erfasst eine Fingereingabe für das angegebene Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-132">Captures a touch to the specified element.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Capture : System.Windows.IInputElement -&gt; bool" Usage="touchDevice.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="b43b0-133">Das Element, das die Fingereingabe aufzeichnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-133">The element that captures the touch input.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b43b0-134">Erfasst eine Fingereingabe für das angegebene Element mit dem <see cref="F:System.Windows.Input.CaptureMode.Element" />-Erfassungsmodus.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-134">Captures a touch to the specified element by using the <see cref="F:System.Windows.Input.CaptureMode.Element" /> capture mode.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b43b0-135">
            <see langword="true" />, wenn die Fingereingabe vom Element erfasst werden konnte, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-135">
              <see langword="true" /> if the element was able to capture the touch; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-136">Ein <xref:System.Windows.Input.TouchDevice> können nicht auf ein Element aufgezeichnet werden, wenn es bereits für ein anderes Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="b43b0-136">A <xref:System.Windows.Input.TouchDevice> cannot be captured to an element if it is already captured to another element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b43b0-137">Das folgende Beispiel verarbeitet die <xref:System.Windows.UIElement.TouchDown> Ereignisse eine <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="b43b0-137">The following example handles the <xref:System.Windows.UIElement.TouchDown> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="b43b0-138">Wenn eine Fingereingabe auf gedrückt wird die <xref:System.Windows.Controls.Canvas>, die <xref:System.Windows.Input.TouchDevice> aufgezeichnet wird, um die <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="b43b0-138">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 <span data-ttu-id="b43b0-139">In diesem Beispiel ist Teil eines umfangreicheren Beispiels, das in verfügbar ist die <xref:System.Windows.Input.TouchDevice> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="b43b0-139">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchEventsSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b43b0-140">
            <paramref name="element" /> ist kein <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" /> oder <see cref="T:System.Windows.ContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-140">
              <paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="member this.Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="touchDevice.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="b43b0-141">Das Element, das die Fingereingabe aufzeichnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-141">The element that captures the touch.</span>
          </span>
        </param>
        <param name="captureMode">
          <span data-ttu-id="b43b0-142">Die zu verwendende Erfassungsrichtlinie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-142">The capture policy to use.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b43b0-143">Erfasst Fingereingaben für das angegebene Element mit dem angegebenen <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-143">Captures a touch to the specified element by using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b43b0-144">
            <see langword="true" />, wenn die Fingereingabe vom Element erfasst werden konnte, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-144">
              <see langword="true" /> if the element was able to capture the touch; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-145">Ein <xref:System.Windows.Input.TouchDevice> können nicht auf ein Element aufgezeichnet werden, wenn es bereits für ein anderes Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="b43b0-145">A <xref:System.Windows.Input.TouchDevice> cannot be captured to an element if it is already captured to another element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b43b0-146">
            <paramref name="element" /> ist kein <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" /> oder <see cref="T:System.Windows.ContentElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-146">
              <paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Captured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.TouchDevice.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-147">Ruft das Element ab, das das <see cref="T:System.Windows.Input.TouchDevice" />-Objekt erfasst hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-147">Gets the element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b43b0-148">Das Element, das das <see cref="T:System.Windows.Input.TouchDevice" />-Objekt erfasst hat.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-148">The element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b43b0-149">Das folgende Beispiel verarbeitet die <xref:System.Windows.UIElement.TouchUp> Ereignisse eine <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="b43b0-149">The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="b43b0-150">Er überprüft die <xref:System.Windows.Input.TouchDevice.Captured%2A> Eigenschaft, um sicherzustellen, dass das Gerät, das das Ereignis ausgelöst hat, erfasst wird die <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="b43b0-150">It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="b43b0-151">Wenn dies der Fall, die <xref:System.Windows.Input.TouchDevice> freigegeben wird.</span><span class="sxs-lookup"><span data-stu-id="b43b0-151">If it is, the <xref:System.Windows.Input.TouchDevice> is released.</span></span>  
  
 <span data-ttu-id="b43b0-152">In diesem Beispiel ist Teil eines umfangreicheren Beispiels, das in verfügbar ist die <xref:System.Windows.Input.TouchDevice> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="b43b0-152">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[TouchEventsSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CaptureMode CaptureMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.CaptureMode CaptureMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.CaptureMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaptureMode As CaptureMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CaptureMode CaptureMode { System::Windows::Input::CaptureMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CaptureMode : System.Windows.Input.CaptureMode" Usage="System.Windows.Input.TouchDevice.CaptureMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CaptureMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-153">Ruft die Erfassungsrichtlinie für <see cref="T:System.Windows.Input.TouchDevice" /> ab.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-153">Gets the capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b43b0-154">Die Erfassungsrichtlinie für den <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-154">The capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="protected void Deactivate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Deactivate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Deactivate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Deactivate();" />
      <MemberSignature Language="F#" Value="member this.Deactivate : unit -&gt; unit" Usage="touchDevice.Deactivate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-155">Entfernt den <see cref="T:System.Windows.Input.TouchDevice" /> aus dem Eingabemessagingsystem.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-155">Removes the <see cref="T:System.Windows.Input.TouchDevice" /> from the input messaging system.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-156">Klassen, die von erben <xref:System.Windows.Input.TouchDevice> aufrufen, sollten diese Methode, um das aktuelle Gerät zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="b43b0-156">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to deactivate the current device.</span></span>  
  
 <span data-ttu-id="b43b0-157">Ein <xref:System.Windows.UIElement.TouchLeave> Ereignis wird ausgelöst, ohne die entsprechende <xref:System.Windows.UIElement.TouchUp> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b43b0-157">A <xref:System.Windows.UIElement.TouchLeave> event is raised without the corresponding <xref:System.Windows.UIElement.TouchUp> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="b43b0-158">Das Gerät ist nicht aktiviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-158">The device is not activated.</span>
          </span>
        </exception>
        <altmember cref="E:System.Windows.ContentElement.TouchLeave" />
        <altmember cref="E:System.Windows.UIElement3D.TouchLeave" />
        <altmember cref="E:System.Windows.UIElement.TouchLeave" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Event Deactivated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-159">Tritt ein, wenn das <see cref="T:System.Windows.Input.TouchDevice" /> aus dem Eingabemessagingsystem entfernt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-159">Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is removed from the input messaging system.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Input.TouchDevice.Deactivate" />
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.TouchDevice.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-160">Ruft das Element ab, das sich direkt unter dem Fingereingabekontaktpunkt befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-160">Gets the element that the touch contact point is directly over.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b43b0-161">Das Element, das sich direkt unter dem Fingereingabekontaktpunkt befindet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-161">The element that the touch contact point is directly over.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntermediateTouchPoints">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.GetIntermediateTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIntermediateTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Input::TouchPointCollection ^ GetIntermediateTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="abstract member GetIntermediateTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchDevice.GetIntermediateTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="b43b0-162">Das Element, das den Koordinatenraum definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-162">The element that defines the coordinate space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b43b0-163">Gibt beim Überschreiben in einer abgeleiteten Klasse alle zwischen den letzten und vorherigen Berührungsereignissen gesammelten Berührungspunkte zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-163">When overridden in a derived class, returns all touch points that are collected between the most recent and previous touch events.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b43b0-164">Alle Berührungspunkte, die zwischen den letzten und vorherigen Berührungsereignissen gesammelt wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-164">All touch points that were collected between the most recent and previous touch events.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoint">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Input.TouchPoint GetTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Input.TouchPoint GetTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.GetTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Input::TouchPoint ^ GetTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="abstract member GetTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchDevice.GetTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="b43b0-165">Das Element, das den Koordinatenraum definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-165">The element that defines the coordinate space.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b43b0-166">Gibt die aktuelle Position des Fingereingabegeräts relativ zum angegebenen Element zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-166">Returns the current position of the touch device relative to the specified element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b43b0-167">Die aktuelle Position des Fingereingabegeräts relativ zum angegebenen Element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-167">The current position of the touch device relative to the specified element.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : int" Usage="System.Windows.Input.TouchDevice.Id" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Input.IManipulator.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-168">Ruft den eindeutigen Bezeichner des <see cref="T:System.Windows.Input.TouchDevice" /> ab, der vom Betriebssystem bereitgestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-168">Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />, as provided by the operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b43b0-169">Der eindeutige Bezeichner des <see cref="T:System.Windows.Input.TouchDevice" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-169">The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-170">Ein <xref:System.Windows.Input.TouchDevice> stellt eine einzelne Fingereingabe auf einem Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="b43b0-170">A <xref:System.Windows.Input.TouchDevice> represents a single touch on a screen.</span></span> <span data-ttu-id="b43b0-171">Wenn mehrere Fingereingaben vorhanden sind, verwenden Sie die <xref:System.Windows.Input.TouchDevice.Id%2A> Eigenschaft unterschieden.</span><span class="sxs-lookup"><span data-stu-id="b43b0-171">If multiple touches are present, use the <xref:System.Windows.Input.TouchDevice.Id%2A> property to distinguish between them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b43b0-172">Das folgende Beispiel verarbeitet die <xref:System.Windows.UIElement.TouchMove> Ereignisse eine <xref:System.Windows.Controls.Canvas>.</span><span class="sxs-lookup"><span data-stu-id="b43b0-172">The following example handles the <xref:System.Windows.UIElement.TouchMove> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="b43b0-173">Wenn eine Fingereingabe verschoben wird, auf die <xref:System.Windows.Controls.Canvas>, die <xref:System.Windows.Input.TouchDevice.Id%2A> aktiviert ist.</span><span class="sxs-lookup"><span data-stu-id="b43b0-173">When a touch moves on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="b43b0-174">Wenn das Verschieben aus dem ersten Touch geliefert wurde, wird dessen Speicherort aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="b43b0-174">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="b43b0-175">Wenn das Verschieben von einem zweiten geliefert wurde, wird eine Linie von der Position der ersten Fingereingabe auf die Position des zweiten Fingereingabe gezeichnet.</span><span class="sxs-lookup"><span data-stu-id="b43b0-175">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="b43b0-176">In diesem Beispiel ist Teil eines umfangreicheren Beispiels zur Verfügung, in der <xref:System.Windows.Input.TouchDevice> -Klassenübersicht.</span><span class="sxs-lookup"><span data-stu-id="b43b0-176">This example is part of a larger example available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchEventsSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Windows.Input.TouchDevice.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-177">Ruft einen Wert ab, der angibt, ob das Gerät aktiv ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-177">Gets a value that indicates whether the device is active.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b43b0-178">
            <see langword="true" />, wenn das Gerät aktiv ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-178">
              <see langword="true" /> if the device is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnCapture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCapture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnCapture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCapture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="abstract member OnCapture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; unit&#xA;override this.OnCapture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; unit" Usage="touchDevice.OnCapture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="b43b0-179">Das Element, das die Fingereingabe aufzeichnet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-179">The element that captures the touch input.</span>
          </span>
        </param>
        <param name="captureMode">
          <span data-ttu-id="b43b0-180">Die Erfassungsrichtlinie.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-180">The capture policy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b43b0-181">Wird aufgerufen, wenn eine Fingereingabe für ein Element erfasst wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-181">Called when a touch is captured to an element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-182">Die <xref:System.Windows.Input.TouchDevice.OnCapture%2A> Methode hat keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="b43b0-182">The <xref:System.Windows.Input.TouchDevice.OnCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="b43b0-183">Sie können in einer abgeleiteten Klasse für alle Aktionen, die erforderlich sind, wenn die Fingereingabe erfasst sind, überschrieben werden.</span><span class="sxs-lookup"><span data-stu-id="b43b0-183">It can be overridden in a derived class to perform any actions that are required when the touch input is captured.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationEnded">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationEnded (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationEnded(bool cancel);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationEnded : bool -&gt; unit&#xA;override this.OnManipulationEnded : bool -&gt; unit" Usage="touchDevice.OnManipulationEnded cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="b43b0-184">
            <see langword="true" />, um die Aktion abzubrechen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-184">
              <see langword="true" /> to cancel the action; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b43b0-185">Wird aufgerufen, wenn eine Änderung beendet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-185">Called when a manipulation has ended.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.ManipulationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted();" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarted : unit -&gt; unit&#xA;override this.OnManipulationStarted : unit -&gt; unit" Usage="touchDevice.OnManipulationStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-186">Wird aufgerufen, wenn eine Bearbeitung gestartet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-186">Called when a manipulation is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-187">Die <xref:System.Windows.Input.TouchDevice.OnManipulationStarted%2A> Methode hat keine Standardimplementierung.</span><span class="sxs-lookup"><span data-stu-id="b43b0-187">The <xref:System.Windows.Input.TouchDevice.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="b43b0-188">Sie können überschrieben werden, in einer abgeleiteten Klasse für alle Aktionen, die erforderlich sind, wenn Touch Manipulation gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="b43b0-188">It can be overridden in a derived class to perform any actions that are required when touch manipulation is started.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.ManipulationStarted" />
      </Docs>
    </Member>
    <Member MemberName="ReportDown">
      <MemberSignature Language="C#" Value="protected bool ReportDown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportDown" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportDown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportDown();" />
      <MemberSignature Language="F#" Value="member this.ReportDown : unit -&gt; bool" Usage="touchDevice.ReportDown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-189">Berichtet, dass eine Fingereingabe in einem Element erfolgt ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-189">Reports that a touch is pressed on an element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b43b0-190">
            <see langword="true" />, wenn das <see cref="E:System.Windows.UIElement.TouchDown" />-Ereignis behandelt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-190">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchDown" /> event was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-191">Klassen, die von erben <xref:System.Windows.Input.TouchDevice> sollten diese Methode zum Auslösen von Aufrufen der <xref:System.Windows.UIElement.TouchDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b43b0-191">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="b43b0-192">Ein <xref:System.Windows.UIElement.TouchEnter> Ereignis wird ausgelöst, bevor die <xref:System.Windows.UIElement.TouchDown> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b43b0-192">A <xref:System.Windows.UIElement.TouchEnter> event is raised before the <xref:System.Windows.UIElement.TouchDown> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchDown" />
        <altmember cref="E:System.Windows.UIElement3D.TouchDown" />
        <altmember cref="E:System.Windows.UIElement.TouchDown" />
      </Docs>
    </Member>
    <Member MemberName="ReportMove">
      <MemberSignature Language="C#" Value="protected bool ReportMove ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportMove" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportMove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportMove();" />
      <MemberSignature Language="F#" Value="member this.ReportMove : unit -&gt; bool" Usage="touchDevice.ReportMove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-193">Berichtet, dass eine Fingereingabe über einem Element erfolgt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-193">Reports that a touch is moving across an element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b43b0-194">
            <see langword="true" />, wenn das <see cref="E:System.Windows.UIElement.TouchMove" />-Ereignis behandelt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-194">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchMove" /> event was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-195">Klassen, die von erben <xref:System.Windows.Input.TouchDevice> sollten diese Methode zum Auslösen von Aufrufen der <xref:System.Windows.UIElement.TouchMove> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b43b0-195">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchMove> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchMove" />
        <altmember cref="E:System.Windows.UIElement3D.TouchMove" />
        <altmember cref="E:System.Windows.UIElement.TouchMove" />
      </Docs>
    </Member>
    <Member MemberName="ReportUp">
      <MemberSignature Language="C#" Value="protected bool ReportUp ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportUp" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportUp () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportUp();" />
      <MemberSignature Language="F#" Value="member this.ReportUp : unit -&gt; bool" Usage="touchDevice.ReportUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-196">Berichtet, dass eine Fingereingabe von einem Element transformiert wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-196">Reports that a touch was lifted from an element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b43b0-197">
            <see langword="true" />, wenn das <see cref="E:System.Windows.UIElement.TouchUp" />-Ereignis behandelt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-197">
              <see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchUp" /> event was handled; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-198">Klassen, die von erben <xref:System.Windows.Input.TouchDevice> sollten diese Methode zum Auslösen von Aufrufen der <xref:System.Windows.UIElement.TouchUp> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b43b0-198">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="b43b0-199">Ein <xref:System.Windows.UIElement.TouchLeave> Ereignis wird ausgelöst, nachdem die <xref:System.Windows.UIElement.TouchUp> Ereignis.</span><span class="sxs-lookup"><span data-stu-id="b43b0-199">A <xref:System.Windows.UIElement.TouchLeave> event is raised after the <xref:System.Windows.UIElement.TouchUp> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchUp" />
        <altmember cref="E:System.Windows.UIElement3D.TouchUp" />
        <altmember cref="E:System.Windows.UIElement.TouchUp" />
      </Docs>
    </Member>
    <Member MemberName="SetActiveSource">
      <MemberSignature Language="C#" Value="protected void SetActiveSource (System.Windows.PresentationSource activeSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetActiveSource(class System.Windows.PresentationSource activeSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.SetActiveSource(System.Windows.PresentationSource)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetActiveSource (activeSource As PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetActiveSource(System::Windows::PresentationSource ^ activeSource);" />
      <MemberSignature Language="F#" Value="member this.SetActiveSource : System.Windows.PresentationSource -&gt; unit" Usage="touchDevice.SetActiveSource activeSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activeSource" Type="System.Windows.PresentationSource" />
      </Parameters>
      <Docs>
        <param name="activeSource">
          <span data-ttu-id="b43b0-200">Die Quelle, die Eingaben für dieses Gerät meldet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-200">The source that reports input for this device.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b43b0-201">Legt das <see cref="T:System.Windows.PresentationSource" />-Objekt fest, das Eingaben für dieses Gerät meldet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-201">Sets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Synchronize();" />
      <MemberSignature Language="F#" Value="member this.Synchronize : unit -&gt; unit" Usage="touchDevice.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-202">Zwingt das <see cref="T:System.Windows.Input.TouchDevice" />, die Benutzeroberfläche mit zugrunde liegenden Berührungspunkten zu synchronisieren.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-202">Forces the <see cref="T:System.Windows.Input.TouchDevice" /> to synchronize the user interface with underlying touch points.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-203">Synchronisieren die Benutzeroberfläche mit den zugrunde liegenden Touch Positionen möglicherweise <xref:System.Windows.UIElement.TouchMove> Ereignisse ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="b43b0-203">Synchronizing the user interface with the underlying touch positions might cause <xref:System.Windows.UIElement.TouchMove> events to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.GetPosition">
      <MemberSignature Language="C#" Value="System.Windows.Point IManipulator.GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Windows.Point System.Windows.Input.IManipulator.GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Function GetPosition (relativeTo As IInputElement) As Point Implements IManipulator.GetPosition" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Point System.Windows.Input.IManipulator.GetPosition(System::Windows::IInputElement ^ relativeTo) = System::Windows::Input::IManipulator::GetPosition;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo">
          <span data-ttu-id="b43b0-204">Das Element, das als Verweisrahmen zum Berechnen der Position des <see cref="T:System.Windows.Input.IManipulator" />-Objekts verwendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-204">The element to use as the frame of reference for calculating the position of the <see cref="T:System.Windows.Input.IManipulator" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b43b0-205">Gibt die Position des <see cref="T:System.Windows.Input.IManipulator" />-Objekts zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-205">Returns the position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b43b0-206">Die Position des <see cref="T:System.Windows.Input.IManipulator" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-206">The position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-207">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="b43b0-207">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b43b0-208">Er kann nur verwendet werden, wenn die <xref:System.Windows.Input.TouchDevice>-Instanz in eine <xref:System.Windows.Input.IManipulator>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="b43b0-208">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.Id">
      <MemberSignature Language="C#" Value="int System.Windows.Input.IManipulator.Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Windows.Input.IManipulator.Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#Id" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Id As Integer Implements IManipulator.Id" />
      <MemberSignature Language="C++ CLI" Value="property int System.Windows.Input.IManipulator.Id { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Windows.Input.TouchDevice.System.Windows.Input.IManipulator.Id" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Input.IManipulator.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-209">Ruft den eindeutigen Bezeichner des <see cref="T:System.Windows.Input.TouchDevice" /> ab, der vom Betriebssystem bereitgestellt wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-209">Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" /> as provided by the operating system.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b43b0-210">Der eindeutige Bezeichner des <see cref="T:System.Windows.Input.TouchDevice" />-Objekts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-210">The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-211">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="b43b0-211">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b43b0-212">Er kann nur verwendet werden, wenn die <xref:System.Windows.Input.TouchDevice>-Instanz in eine <xref:System.Windows.Input.IManipulator>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="b43b0-212">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.ManipulationEnded">
      <MemberSignature Language="C#" Value="void IManipulator.ManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Input.IManipulator.ManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#ManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub ManipulationEnded (cancel As Boolean) Implements IManipulator.ManipulationEnded" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Input.IManipulator.ManipulationEnded(bool cancel) = System::Windows::Input::IManipulator::ManipulationEnded;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel">
          <span data-ttu-id="b43b0-213">
            <see langword="true" />, um die Aktion abzubrechen, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-213">
              <see langword="true" /> to cancel the action; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b43b0-214">Tritt ein, wenn eine Änderung beendet wurde.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-214">Occurs when a manipulation has ended.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b43b0-215">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="b43b0-215">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b43b0-216">Er kann nur verwendet werden, wenn die <xref:System.Windows.Input.TouchDevice>-Instanz in eine <xref:System.Windows.Input.IManipulator>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="b43b0-216">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Target As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Target { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.IInputElement" Usage="System.Windows.Input.TouchDevice.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-217">Ruft das Element ab, das die Eingaben vom <see cref="T:System.Windows.Input.TouchDevice" />-Objekt empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-217">Gets the element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b43b0-218">Das Element, das die Eingaben vom <see cref="T:System.Windows.Input.TouchDevice" />-Objekt empfängt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-218">The element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Event Updated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : EventHandler " Usage="member this.Updated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Input.IManipulator.Updated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b43b0-219">Tritt auf, wenn eine Fingereingabenachricht gesendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b43b0-219">Occurs when a touch message is sent.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>