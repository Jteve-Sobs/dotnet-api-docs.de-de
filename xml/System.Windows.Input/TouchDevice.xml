<Type Name="TouchDevice" FullName="System.Windows.Input.TouchDevice">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dd710bccb243e3fc8119a0c04cdd02f9c5936083" /><Meta Name="ms.sourcegitcommit" Value="b53d35b4a410c949742abd4c6a989d1af5357bca" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="07/21/2020" /><Meta Name="ms.locfileid" Value="86699337" /></Metadata><TypeSignature Language="C#" Value="public abstract class TouchDevice : System.Windows.Input.InputDevice, System.Windows.Input.IManipulator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TouchDevice extends System.Windows.Input.InputDevice implements class System.Windows.Input.IManipulator" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.TouchDevice" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TouchDevice&#xA;Inherits InputDevice&#xA;Implements IManipulator" />
  <TypeSignature Language="C++ CLI" Value="public ref class TouchDevice abstract : System::Windows::Input::InputDevice, System::Windows::Input::IManipulator" />
  <TypeSignature Language="F#" Value="type TouchDevice = class&#xA;    inherit InputDevice&#xA;    interface IManipulator" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputDevice</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Input.IManipulator</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="f7f33-101">Stellt eine einzelne Fingereingabe auf einem Touchscreen dar.</span><span class="sxs-lookup"><span data-stu-id="f7f33-101">Represents a single touch input produced by a finger on a touchscreen.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-102">In der Regel greifen Sie <xref:System.Windows.Input.TouchDevice> mithilfe der-Eigenschaft auf ein zu <xref:System.Windows.Input.TouchEventArgs.TouchDevice%2A?displayProperty=nameWithType> .</span><span class="sxs-lookup"><span data-stu-id="f7f33-102">You typically access a <xref:System.Windows.Input.TouchDevice> by using the <xref:System.Windows.Input.TouchEventArgs.TouchDevice%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="f7f33-103">Ein <xref:System.Windows.Input.TouchDevice> stellt eine einzelne Fingereingabe auf einem Bildschirm dar.</span><span class="sxs-lookup"><span data-stu-id="f7f33-103">A <xref:System.Windows.Input.TouchDevice> represents a single touch on a screen.</span></span> <span data-ttu-id="f7f33-104">Wenn mehrere Berührungen vorhanden sind, verwenden <xref:System.Windows.Input.TouchDevice.Id%2A> Sie die-Eigenschaft, um zwischen Ihnen zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="f7f33-104">If multiple touches are present, use the <xref:System.Windows.Input.TouchDevice.Id%2A> property to distinguish between them.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="f7f33-105">Diese Klasse enthält eine Vererbungs Anforderung auf Klassenebene, die für alle Member gilt.</span><span class="sxs-lookup"><span data-stu-id="f7f33-105">This class contains an inheritance demand at the class level that applies to all members.</span></span> <span data-ttu-id="f7f33-106">Eine <xref:System.Security.SecurityException> wird ausgelöst, wenn die abgeleitete Klasse nicht über die Berechtigung für volle Vertrauenswürdigkeit verfügt.</span><span class="sxs-lookup"><span data-stu-id="f7f33-106">A <xref:System.Security.SecurityException> is thrown when the derived class does not have full-trust permission.</span></span> <span data-ttu-id="f7f33-107">Weitere Informationen zu Sicherheitsanforderungen finden Sie unter [Link](/dotnet/framework/misc/link-demands) Aufrufe und [Vererbungs Anforderungen](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="f7f33-107">For more information about security demands, see [Link Demands](/dotnet/framework/misc/link-demands) and [Inheritance Demands](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/x4yx82e6(v=vs.100)).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7f33-108">Im folgenden Beispiel können Sie einfache Muster für einen erstellen, <xref:System.Windows.Controls.Canvas> indem Sie zwei Finger auf einen Touchscreen ziehen.</span><span class="sxs-lookup"><span data-stu-id="f7f33-108">The following example enables you to create simple patterns on a <xref:System.Windows.Controls.Canvas> by dragging two fingers on a touchscreen.</span></span> <span data-ttu-id="f7f33-109">Jede Fingereingabe wird durch eine <xref:System.Windows.Input.TouchDevice> in der dargestellt <xref:System.Windows.Input.TouchEventArgs> .</span><span class="sxs-lookup"><span data-stu-id="f7f33-109">Each touch is represented by a <xref:System.Windows.Input.TouchDevice> in the <xref:System.Windows.Input.TouchEventArgs>.</span></span> <span data-ttu-id="f7f33-110">Das Muster wird erstellt, indem eine Linie zwischen den Berührungspunkten gezeichnet wird, die von den Berührungen bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="f7f33-110">The pattern is created by drawing a line between the touch points that are provided by the touches.</span></span> <span data-ttu-id="f7f33-111">Dieses Beispiel erfordert einen Windows touchkompatiblen Bildschirm.</span><span class="sxs-lookup"><span data-stu-id="f7f33-111">This example requires a Windows Touch-compatible screen.</span></span>  
  
 <span data-ttu-id="f7f33-112">Das folgende Markup erstellt die Benutzeroberfläche, die aus einem besteht, <xref:System.Windows.Controls.Canvas> das in einem Raster zentriert ist, und fügt die Ereignishandler für die Berührungs Ereignisse an.</span><span class="sxs-lookup"><span data-stu-id="f7f33-112">The following markup creates the user interface, which consists of a <xref:System.Windows.Controls.Canvas> that is centered in a grid, and attaches the event handlers for the touch events.</span></span>  
  
 [!code-xaml[TouchEventsSample#000](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml#000)]  
  
 <span data-ttu-id="f7f33-113">Im folgenden Code werden die Berührungs Ereignisse behandelt.</span><span class="sxs-lookup"><span data-stu-id="f7f33-113">The following code handles the touch events.</span></span> <span data-ttu-id="f7f33-114">Wenn eine Fingereingabe auf dem gedrückt wird <xref:System.Windows.Controls.Canvas> , <xref:System.Windows.Input.TouchDevice> wird der in der aufgezeichnet <xref:System.Windows.Controls.Canvas> .</span><span class="sxs-lookup"><span data-stu-id="f7f33-114">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="f7f33-115">Wenn die Fingereingabe angehoben wird, <xref:System.Windows.Input.TouchDevice> wird die freigegeben.</span><span class="sxs-lookup"><span data-stu-id="f7f33-115">When the touch is lifted, the <xref:System.Windows.Input.TouchDevice> is released.</span></span> <span data-ttu-id="f7f33-116">Wenn eine Fingereingabe auf dem verschoben wird <xref:System.Windows.Controls.Canvas> , <xref:System.Windows.Input.TouchDevice.Id%2A> wird der aktiviert.</span><span class="sxs-lookup"><span data-stu-id="f7f33-116">When a touch moves on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="f7f33-117">Wenn die Verschiebung von der ersten Fingereingabe stammt, wird der Speicherort aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-117">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="f7f33-118">Wenn der Verschiebe Vorgang von der zweiten Berührung stammt, wird eine Linie von der Position der ersten Fingereingabe bis zur Position des zweiten Zieh Punkts gezeichnet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-118">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 [!code-csharp[TouchEventsSample#100](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#100)]
 [!code-vb[TouchEventsSample#100](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#100)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected TouchDevice (int deviceId);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(int32 deviceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (deviceId As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; TouchDevice(int deviceId);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.TouchDevice : int -&gt; System.Windows.Input.TouchDevice" Usage="new System.Windows.Input.TouchDevice deviceId" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="deviceId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="deviceId"><span data-ttu-id="f7f33-119">Ein eindeutiger Bezeichner für das Fingereingabegerät.</span><span class="sxs-lookup"><span data-stu-id="f7f33-119">A unique identifier for the touch device.</span></span></param>
        <summary><span data-ttu-id="f7f33-120">Wird von Konstruktoren in abgeleiteten Klassen aufgerufen, um die <see cref="T:System.Windows.Input.TouchDevice" />-Klasse zu initialisieren.</span><span class="sxs-lookup"><span data-stu-id="f7f33-120">Called from constructors in derived classes to initialize the <see cref="T:System.Windows.Input.TouchDevice" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Activate">
      <MemberSignature Language="C#" Value="protected void Activate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Activate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Activate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Activate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Activate();" />
      <MemberSignature Language="F#" Value="member this.Activate : unit -&gt; unit" Usage="touchDevice.Activate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7f33-121">Fügt das <see cref="T:System.Windows.Input.TouchDevice" />-Objekt dem Eingabemessagingsystem hinzu.</span><span class="sxs-lookup"><span data-stu-id="f7f33-121">Adds the <see cref="T:System.Windows.Input.TouchDevice" /> to the input messaging system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-122">Klassen, die von erben, <xref:System.Windows.Input.TouchDevice> sollten diese Methode zum Aktivieren des aktuellen Geräts aufruft.</span><span class="sxs-lookup"><span data-stu-id="f7f33-122">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to activate the current device.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7f33-123">Das Gerät ist bereits aktiviert.</span><span class="sxs-lookup"><span data-stu-id="f7f33-123">The device is already activated.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Activated">
      <MemberSignature Language="C#" Value="public event EventHandler Activated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Activated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Activated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Activated As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Activated;" />
      <MemberSignature Language="F#" Value="member this.Activated : EventHandler " Usage="member this.Activated : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Activated As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7f33-124">Tritt auf, wenn das <see cref="T:System.Windows.Input.TouchDevice" /> dem Eingabemessagingsystem hinzugefügt wird.</span><span class="sxs-lookup"><span data-stu-id="f7f33-124">Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is added to the input messaging system.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Input.TouchDevice.Activate" />
      </Docs>
    </Member>
    <Member MemberName="ActiveSource">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.PresentationSource ActiveSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PresentationSource ActiveSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.ActiveSource" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property ActiveSource As PresentationSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PresentationSource ^ ActiveSource { System::Windows::PresentationSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ActiveSource : System.Windows.PresentationSource" Usage="System.Windows.Input.TouchDevice.ActiveSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[get: System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7f33-125">Ruft die <see cref="T:System.Windows.PresentationSource" /> ab, die Eingaben für dieses Gerät meldet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-125">Gets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span></span></summary>
        <value><span data-ttu-id="f7f33-126">Die Quelle, die Eingaben für dieses Gerät meldet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-126">The source that is reporting input for this device.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Capture">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f7f33-127">Erfasst eine Fingereingabe für das angegebene Element.</span><span class="sxs-lookup"><span data-stu-id="f7f33-127">Captures a touch to the specified element.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function Capture (element As IInputElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element);" />
      <MemberSignature Language="F#" Value="member this.Capture : System.Windows.IInputElement -&gt; bool" Usage="touchDevice.Capture element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="f7f33-128">Das Element, das die Fingereingabe aufzeichnet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-128">The element that captures the touch input.</span></span></param>
        <summary><span data-ttu-id="f7f33-129">Erfasst eine Fingereingabe für das angegebene Element mit dem <see cref="F:System.Windows.Input.CaptureMode.Element" />-Erfassungsmodus.</span><span class="sxs-lookup"><span data-stu-id="f7f33-129">Captures a touch to the specified element by using the <see cref="F:System.Windows.Input.CaptureMode.Element" /> capture mode.</span></span></summary>
        <returns><span data-ttu-id="f7f33-130"><see langword="true" />, wenn die Fingereingabe vom Element erfasst werden konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7f33-130"><see langword="true" /> if the element was able to capture the touch; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-131">Ein <xref:System.Windows.Input.TouchDevice> kann nicht für ein Element erfasst werden, wenn es bereits in einem anderen Element erfasst wurde.</span><span class="sxs-lookup"><span data-stu-id="f7f33-131">A <xref:System.Windows.Input.TouchDevice> cannot be captured to an element if it is already captured to another element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7f33-132">Im folgenden Beispiel werden die- <xref:System.Windows.UIElement.TouchDown> Ereignisse behandelt, die auf einem auftreten <xref:System.Windows.Controls.Canvas> .</span><span class="sxs-lookup"><span data-stu-id="f7f33-132">The following example handles the <xref:System.Windows.UIElement.TouchDown> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="f7f33-133">Wenn eine Fingereingabe auf dem gedrückt wird <xref:System.Windows.Controls.Canvas> , <xref:System.Windows.Input.TouchDevice> wird der in der aufgezeichnet <xref:System.Windows.Controls.Canvas> .</span><span class="sxs-lookup"><span data-stu-id="f7f33-133">When a touch is pressed on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice> is captured to the <xref:System.Windows.Controls.Canvas>.</span></span>  
  
 <span data-ttu-id="f7f33-134">Dieses Beispiel ist Teil eines größeren Beispiels, das in der Übersicht über die-Klasse verfügbar ist <xref:System.Windows.Input.TouchDevice> .</span><span class="sxs-lookup"><span data-stu-id="f7f33-134">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#110](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#110)]
 [!code-vb[TouchEventsSample#110](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#110)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7f33-135"><paramref name="element" /> ist kein <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" /> oder <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="f7f33-135"><paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Capture">
      <MemberSignature Language="C#" Value="public bool Capture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Capture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Capture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="VB.NET" Value="Public Function Capture (element As IInputElement, captureMode As CaptureMode) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Capture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="member this.Capture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; bool" Usage="touchDevice.Capture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="f7f33-136">Das Element, das die Fingereingabe aufzeichnet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-136">The element that captures the touch.</span></span></param>
        <param name="captureMode"><span data-ttu-id="f7f33-137">Die zu verwendende Erfassungsrichtlinie.</span><span class="sxs-lookup"><span data-stu-id="f7f33-137">The capture policy to use.</span></span></param>
        <summary><span data-ttu-id="f7f33-138">Erfasst Fingereingaben für das angegebene Element mit dem angegebenen <see cref="T:System.Windows.Input.CaptureMode" />.</span><span class="sxs-lookup"><span data-stu-id="f7f33-138">Captures a touch to the specified element by using the specified <see cref="T:System.Windows.Input.CaptureMode" />.</span></span></summary>
        <returns><span data-ttu-id="f7f33-139"><see langword="true" />, wenn die Fingereingabe vom Element erfasst werden konnte, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7f33-139"><see langword="true" /> if the element was able to capture the touch; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-140">Ein <xref:System.Windows.Input.TouchDevice> kann nicht für ein Element erfasst werden, wenn es bereits in einem anderen Element erfasst wurde.</span><span class="sxs-lookup"><span data-stu-id="f7f33-140">A <xref:System.Windows.Input.TouchDevice> cannot be captured to an element if it is already captured to another element.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f7f33-141"><paramref name="element" /> ist kein <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" /> oder <see cref="T:System.Windows.ContentElement" />.</span><span class="sxs-lookup"><span data-stu-id="f7f33-141"><paramref name="element" /> is not a <see cref="T:System.Windows.UIElement" />, <see cref="T:System.Windows.UIElement3D" />, or <see cref="T:System.Windows.ContentElement" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Captured">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement Captured { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Captured" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Captured" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Captured As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Captured { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Captured : System.Windows.IInputElement" Usage="System.Windows.Input.TouchDevice.Captured" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7f33-142">Ruft das Element ab, das das <see cref="T:System.Windows.Input.TouchDevice" />-Objekt erfasst hat.</span><span class="sxs-lookup"><span data-stu-id="f7f33-142">Gets the element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></summary>
        <value><span data-ttu-id="f7f33-143">Das Element, das das <see cref="T:System.Windows.Input.TouchDevice" />-Objekt erfasst hat.</span><span class="sxs-lookup"><span data-stu-id="f7f33-143">The element that captured the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f7f33-144">Im folgenden Beispiel werden die- <xref:System.Windows.UIElement.TouchUp> Ereignisse behandelt, die auf einem auftreten <xref:System.Windows.Controls.Canvas> .</span><span class="sxs-lookup"><span data-stu-id="f7f33-144">The following example handles the <xref:System.Windows.UIElement.TouchUp> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="f7f33-145">Er überprüft die- <xref:System.Windows.Input.TouchDevice.Captured%2A> Eigenschaft, um zu überprüfen, ob das Gerät, das das Ereignis ausgelöst hat, in aufgezeichnet wird <xref:System.Windows.Controls.Canvas> .</span><span class="sxs-lookup"><span data-stu-id="f7f33-145">It checks the <xref:System.Windows.Input.TouchDevice.Captured%2A> property to verify that the device that raised the event is captured to the <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="f7f33-146">Wenn dies der Fall ist, <xref:System.Windows.Input.TouchDevice> wird die freigegeben.</span><span class="sxs-lookup"><span data-stu-id="f7f33-146">If it is, the <xref:System.Windows.Input.TouchDevice> is released.</span></span>  
  
 <span data-ttu-id="f7f33-147">Dieses Beispiel ist Teil eines größeren Beispiels, das in der Übersicht über die-Klasse verfügbar ist <xref:System.Windows.Input.TouchDevice> .</span><span class="sxs-lookup"><span data-stu-id="f7f33-147">This example is part of a larger example that is available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#130](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#130)]
 [!code-vb[TouchEventsSample#130](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#130)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CaptureMode">
      <MemberSignature Language="C#" Value="public System.Windows.Input.CaptureMode CaptureMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.CaptureMode CaptureMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.CaptureMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CaptureMode As CaptureMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::CaptureMode CaptureMode { System::Windows::Input::CaptureMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CaptureMode : System.Windows.Input.CaptureMode" Usage="System.Windows.Input.TouchDevice.CaptureMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.CaptureMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7f33-148">Ruft die Erfassungsrichtlinie für <see cref="T:System.Windows.Input.TouchDevice" /> ab.</span><span class="sxs-lookup"><span data-stu-id="f7f33-148">Gets the capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></summary>
        <value><span data-ttu-id="f7f33-149">Die Erfassungsrichtlinie für den <see cref="T:System.Windows.Input.TouchDevice" />.</span><span class="sxs-lookup"><span data-stu-id="f7f33-149">The capture policy of the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deactivate">
      <MemberSignature Language="C#" Value="protected void Deactivate ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void Deactivate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Deactivate" />
      <MemberSignature Language="VB.NET" Value="Protected Sub Deactivate ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void Deactivate();" />
      <MemberSignature Language="F#" Value="member this.Deactivate : unit -&gt; unit" Usage="touchDevice.Deactivate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7f33-150">Entfernt den <see cref="T:System.Windows.Input.TouchDevice" /> aus dem Eingabemessagingsystem.</span><span class="sxs-lookup"><span data-stu-id="f7f33-150">Removes the <see cref="T:System.Windows.Input.TouchDevice" /> from the input messaging system.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-151">Klassen, die von erben, <xref:System.Windows.Input.TouchDevice> sollten diese Methode zum Deaktivieren des aktuellen Geräts aufruft.</span><span class="sxs-lookup"><span data-stu-id="f7f33-151">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to deactivate the current device.</span></span>  
  
 <span data-ttu-id="f7f33-152">Ein- <xref:System.Windows.UIElement.TouchLeave> Ereignis wird ohne das entsprechende- <xref:System.Windows.UIElement.TouchUp> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="f7f33-152">A <xref:System.Windows.UIElement.TouchLeave> event is raised without the corresponding <xref:System.Windows.UIElement.TouchUp> event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f7f33-153">Das Gerät ist nicht aktiviert.</span><span class="sxs-lookup"><span data-stu-id="f7f33-153">The device is not activated.</span></span></exception>
        <altmember cref="E:System.Windows.ContentElement.TouchLeave" />
        <altmember cref="E:System.Windows.UIElement3D.TouchLeave" />
        <altmember cref="E:System.Windows.UIElement.TouchLeave" />
      </Docs>
    </Member>
    <Member MemberName="Deactivated">
      <MemberSignature Language="C#" Value="public event EventHandler Deactivated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Deactivated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Deactivated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deactivated As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Deactivated;" />
      <MemberSignature Language="F#" Value="member this.Deactivated : EventHandler " Usage="member this.Deactivated : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Deactivated As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7f33-154">Tritt ein, wenn das <see cref="T:System.Windows.Input.TouchDevice" /> aus dem Eingabemessagingsystem entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="f7f33-154">Occurs when the <see cref="T:System.Windows.Input.TouchDevice" /> is removed from the input messaging system.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Input.TouchDevice.Deactivate" />
      </Docs>
    </Member>
    <Member MemberName="DirectlyOver">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement DirectlyOver { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement DirectlyOver" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.DirectlyOver" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DirectlyOver As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ DirectlyOver { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DirectlyOver : System.Windows.IInputElement" Usage="System.Windows.Input.TouchDevice.DirectlyOver" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7f33-155">Ruft das Element ab, das sich direkt unter dem Fingereingabekontaktpunkt befindet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-155">Gets the element that the touch contact point is directly over.</span></span></summary>
        <value><span data-ttu-id="f7f33-156">Das Element, das sich direkt unter dem Fingereingabekontaktpunkt befindet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-156">The element that the touch contact point is directly over.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIntermediateTouchPoints">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Input.TouchPointCollection GetIntermediateTouchPoints(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.GetIntermediateTouchPoints(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetIntermediateTouchPoints (relativeTo As IInputElement) As TouchPointCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Input::TouchPointCollection ^ GetIntermediateTouchPoints(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="abstract member GetIntermediateTouchPoints : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPointCollection" Usage="touchDevice.GetIntermediateTouchPoints relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPointCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="f7f33-157">Das Element, das den Koordinatenraum definiert.</span><span class="sxs-lookup"><span data-stu-id="f7f33-157">The element that defines the coordinate space.</span></span></param>
        <summary><span data-ttu-id="f7f33-158">Gibt beim Überschreiben in einer abgeleiteten Klasse alle zwischen den letzten und vorherigen Berührungsereignissen gesammelten Berührungspunkte zurück.</span><span class="sxs-lookup"><span data-stu-id="f7f33-158">When overridden in a derived class, returns all touch points that are collected between the most recent and previous touch events.</span></span></summary>
        <returns><span data-ttu-id="f7f33-159">Alle Berührungspunkte, die zwischen den letzten und vorherigen Berührungsereignissen gesammelt wurden.</span><span class="sxs-lookup"><span data-stu-id="f7f33-159">All touch points that were collected between the most recent and previous touch events.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTouchPoint">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Input.TouchPoint GetTouchPoint (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Input.TouchPoint GetTouchPoint(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.GetTouchPoint(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetTouchPoint (relativeTo As IInputElement) As TouchPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Windows::Input::TouchPoint ^ GetTouchPoint(System::Windows::IInputElement ^ relativeTo);" />
      <MemberSignature Language="F#" Value="abstract member GetTouchPoint : System.Windows.IInputElement -&gt; System.Windows.Input.TouchPoint" Usage="touchDevice.GetTouchPoint relativeTo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.TouchPoint</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="f7f33-160">Das Element, das den Koordinatenraum definiert.</span><span class="sxs-lookup"><span data-stu-id="f7f33-160">The element that defines the coordinate space.</span></span></param>
        <summary><span data-ttu-id="f7f33-161">Gibt die aktuelle Position des Fingereingabegeräts relativ zum angegebenen Element zurück.</span><span class="sxs-lookup"><span data-stu-id="f7f33-161">Returns the current position of the touch device relative to the specified element.</span></span></summary>
        <returns><span data-ttu-id="f7f33-162">Die aktuelle Position des Fingereingabegeräts relativ zum angegebenen Element.</span><span class="sxs-lookup"><span data-stu-id="f7f33-162">The current position of the touch device relative to the specified element.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Id">
      <MemberSignature Language="C#" Value="public int Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Id" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Id As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Id { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Id : int" Usage="System.Windows.Input.TouchDevice.Id" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7f33-163">Ruft den eindeutigen Bezeichner des <see cref="T:System.Windows.Input.TouchDevice" /> ab, der vom Betriebssystem bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="f7f33-163">Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />, as provided by the operating system.</span></span></summary>
        <value><span data-ttu-id="f7f33-164">Der eindeutige Bezeichner des <see cref="T:System.Windows.Input.TouchDevice" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="f7f33-164">The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-165">Ein <xref:System.Windows.Input.TouchDevice> stellt eine einzelne Fingereingabe auf einem Bildschirm dar.</span><span class="sxs-lookup"><span data-stu-id="f7f33-165">A <xref:System.Windows.Input.TouchDevice> represents a single touch on a screen.</span></span> <span data-ttu-id="f7f33-166">Wenn mehrere Berührungen vorhanden sind, verwenden <xref:System.Windows.Input.TouchDevice.Id%2A> Sie die-Eigenschaft, um zwischen Ihnen zu unterscheiden.</span><span class="sxs-lookup"><span data-stu-id="f7f33-166">If multiple touches are present, use the <xref:System.Windows.Input.TouchDevice.Id%2A> property to distinguish between them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f7f33-167">Im folgenden Beispiel werden die- <xref:System.Windows.UIElement.TouchMove> Ereignisse behandelt, die auf einem auftreten <xref:System.Windows.Controls.Canvas> .</span><span class="sxs-lookup"><span data-stu-id="f7f33-167">The following example handles the <xref:System.Windows.UIElement.TouchMove> events that occur on a <xref:System.Windows.Controls.Canvas>.</span></span> <span data-ttu-id="f7f33-168">Wenn eine Fingereingabe auf dem verschoben wird <xref:System.Windows.Controls.Canvas> , <xref:System.Windows.Input.TouchDevice.Id%2A> wird der aktiviert.</span><span class="sxs-lookup"><span data-stu-id="f7f33-168">When a touch moves on the <xref:System.Windows.Controls.Canvas>, the <xref:System.Windows.Input.TouchDevice.Id%2A> is checked.</span></span> <span data-ttu-id="f7f33-169">Wenn die Verschiebung von der ersten Fingereingabe stammt, wird der Speicherort aufgezeichnet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-169">If the move came from the first touch, its location is recorded.</span></span> <span data-ttu-id="f7f33-170">Wenn der Verschiebe Vorgang von der zweiten Berührung stammt, wird eine Linie von der Position der ersten Fingereingabe bis zur Position des zweiten Zieh Punkts gezeichnet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-170">If the move came from the second touch, a line is drawn from the position of the first touch to the position of the second touch.</span></span>  
  
 <span data-ttu-id="f7f33-171">Dieses Beispiel ist Teil eines größeren Beispiels, das in der <xref:System.Windows.Input.TouchDevice> Übersicht über die-Klasse verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="f7f33-171">This example is part of a larger example available in the <xref:System.Windows.Input.TouchDevice> class overview.</span></span>  
  
 [!code-csharp[TouchEventsSample#120](~/samples/snippets/csharp/VS_Snippets_Wpf/toucheventssample/cs/mainwindow.xaml.cs#120)]
 [!code-vb[TouchEventsSample#120](~/samples/snippets/visualbasic/VS_Snippets_Wpf/toucheventssample/vb/mainwindow.xaml.vb#120)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsActive">
      <MemberSignature Language="C#" Value="public bool IsActive { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsActive" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.IsActive" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsActive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsActive { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsActive : bool" Usage="System.Windows.Input.TouchDevice.IsActive" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7f33-172">Ruft einen Wert ab, der angibt, ob das Gerät aktiv ist.</span><span class="sxs-lookup"><span data-stu-id="f7f33-172">Gets a value that indicates whether the device is active.</span></span></summary>
        <value><span data-ttu-id="f7f33-173"><see langword="true" />, wenn das Gerät aktiv ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7f33-173"><see langword="true" /> if the device is active; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCapture">
      <MemberSignature Language="C#" Value="protected virtual void OnCapture (System.Windows.IInputElement element, System.Windows.Input.CaptureMode captureMode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCapture(class System.Windows.IInputElement element, valuetype System.Windows.Input.CaptureMode captureMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnCapture(System.Windows.IInputElement,System.Windows.Input.CaptureMode)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCapture (element As IInputElement, captureMode As CaptureMode)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCapture(System::Windows::IInputElement ^ element, System::Windows::Input::CaptureMode captureMode);" />
      <MemberSignature Language="F#" Value="abstract member OnCapture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; unit&#xA;override this.OnCapture : System.Windows.IInputElement * System.Windows.Input.CaptureMode -&gt; unit" Usage="touchDevice.OnCapture (element, captureMode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="captureMode" Type="System.Windows.Input.CaptureMode" />
      </Parameters>
      <Docs>
        <param name="element"><span data-ttu-id="f7f33-174">Das Element, das die Fingereingabe aufzeichnet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-174">The element that captures the touch input.</span></span></param>
        <param name="captureMode"><span data-ttu-id="f7f33-175">Die Erfassungsrichtlinie.</span><span class="sxs-lookup"><span data-stu-id="f7f33-175">The capture policy.</span></span></param>
        <summary><span data-ttu-id="f7f33-176">Wird aufgerufen, wenn eine Fingereingabe für ein Element erfasst wird.</span><span class="sxs-lookup"><span data-stu-id="f7f33-176">Called when a touch is captured to an element.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-177">Die- <xref:System.Windows.Input.TouchDevice.OnCapture%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="f7f33-177">The <xref:System.Windows.Input.TouchDevice.OnCapture%2A> method has no default implementation.</span></span> <span data-ttu-id="f7f33-178">Sie kann in einer abgeleiteten Klasse überschrieben werden, um alle Aktionen auszuführen, die beim Erfassen der Fingereingabe erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="f7f33-178">It can be overridden in a derived class to perform any actions that are required when the touch input is captured.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnManipulationEnded">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationEnded (cancel As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationEnded(bool cancel);" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationEnded : bool -&gt; unit&#xA;override this.OnManipulationEnded : bool -&gt; unit" Usage="touchDevice.OnManipulationEnded cancel" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel"><span data-ttu-id="f7f33-179"><see langword="true" />, um die Aktion abzubrechen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7f33-179"><see langword="true" /> to cancel the action; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f7f33-180">Wird aufgerufen, wenn eine Änderung beendet wurde.</span><span class="sxs-lookup"><span data-stu-id="f7f33-180">Called when a manipulation has ended.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.UIElement.ManipulationCompleted" />
      </Docs>
    </Member>
    <Member MemberName="OnManipulationStarted">
      <MemberSignature Language="C#" Value="protected virtual void OnManipulationStarted ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnManipulationStarted() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.OnManipulationStarted" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnManipulationStarted ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnManipulationStarted();" />
      <MemberSignature Language="F#" Value="abstract member OnManipulationStarted : unit -&gt; unit&#xA;override this.OnManipulationStarted : unit -&gt; unit" Usage="touchDevice.OnManipulationStarted " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7f33-181">Wird aufgerufen, wenn eine Bearbeitung gestartet wird.</span><span class="sxs-lookup"><span data-stu-id="f7f33-181">Called when a manipulation is started.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-182">Die- <xref:System.Windows.Input.TouchDevice.OnManipulationStarted%2A> Methode hat keine Standard Implementierung.</span><span class="sxs-lookup"><span data-stu-id="f7f33-182">The <xref:System.Windows.Input.TouchDevice.OnManipulationStarted%2A> method has no default implementation.</span></span> <span data-ttu-id="f7f33-183">Sie kann in einer abgeleiteten Klasse überschrieben werden, um alle Aktionen auszuführen, die beim Starten der Berührungs Bearbeitung erforderlich sind.</span><span class="sxs-lookup"><span data-stu-id="f7f33-183">It can be overridden in a derived class to perform any actions that are required when touch manipulation is started.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.ManipulationStarted" />
      </Docs>
    </Member>
    <Member MemberName="ReportDown">
      <MemberSignature Language="C#" Value="protected bool ReportDown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportDown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportDown" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportDown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportDown();" />
      <MemberSignature Language="F#" Value="member this.ReportDown : unit -&gt; bool" Usage="touchDevice.ReportDown " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7f33-184">Berichtet, dass eine Fingereingabe in einem Element erfolgt ist.</span><span class="sxs-lookup"><span data-stu-id="f7f33-184">Reports that a touch is pressed on an element.</span></span></summary>
        <returns><span data-ttu-id="f7f33-185"><see langword="true" />, wenn das <see cref="E:System.Windows.UIElement.TouchDown" />-Ereignis behandelt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7f33-185"><see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchDown" /> event was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-186">Klassen, die von erben, <xref:System.Windows.Input.TouchDevice> sollten diese Methode zum Auswerfen des- <xref:System.Windows.UIElement.TouchDown> Ereignisses aufruft.</span><span class="sxs-lookup"><span data-stu-id="f7f33-186">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchDown> event.</span></span> <span data-ttu-id="f7f33-187"><xref:System.Windows.UIElement.TouchEnter>Vor dem-Ereignis wird ein-Ereignis ausgelöst <xref:System.Windows.UIElement.TouchDown> .</span><span class="sxs-lookup"><span data-stu-id="f7f33-187">A <xref:System.Windows.UIElement.TouchEnter> event is raised before the <xref:System.Windows.UIElement.TouchDown> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchDown" />
        <altmember cref="E:System.Windows.UIElement3D.TouchDown" />
        <altmember cref="E:System.Windows.UIElement.TouchDown" />
      </Docs>
    </Member>
    <Member MemberName="ReportMove">
      <MemberSignature Language="C#" Value="protected bool ReportMove ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportMove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportMove" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportMove () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportMove();" />
      <MemberSignature Language="F#" Value="member this.ReportMove : unit -&gt; bool" Usage="touchDevice.ReportMove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7f33-188">Berichtet, dass eine Fingereingabe über einem Element erfolgt.</span><span class="sxs-lookup"><span data-stu-id="f7f33-188">Reports that a touch is moving across an element.</span></span></summary>
        <returns><span data-ttu-id="f7f33-189"><see langword="true" />, wenn das <see cref="E:System.Windows.UIElement.TouchMove" />-Ereignis behandelt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7f33-189"><see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchMove" /> event was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-190">Klassen, die von erben, <xref:System.Windows.Input.TouchDevice> sollten diese Methode zum Auswerfen des- <xref:System.Windows.UIElement.TouchMove> Ereignisses aufruft.</span><span class="sxs-lookup"><span data-stu-id="f7f33-190">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchMove> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchMove" />
        <altmember cref="E:System.Windows.UIElement3D.TouchMove" />
        <altmember cref="E:System.Windows.UIElement.TouchMove" />
      </Docs>
    </Member>
    <Member MemberName="ReportUp">
      <MemberSignature Language="C#" Value="protected bool ReportUp ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance bool ReportUp() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.ReportUp" />
      <MemberSignature Language="VB.NET" Value="Protected Function ReportUp () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; bool ReportUp();" />
      <MemberSignature Language="F#" Value="member this.ReportUp : unit -&gt; bool" Usage="touchDevice.ReportUp " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7f33-191">Berichtet, dass eine Fingereingabe von einem Element transformiert wurde.</span><span class="sxs-lookup"><span data-stu-id="f7f33-191">Reports that a touch was lifted from an element.</span></span></summary>
        <returns><span data-ttu-id="f7f33-192"><see langword="true" />, wenn das <see cref="E:System.Windows.UIElement.TouchUp" />-Ereignis behandelt wurde, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7f33-192"><see langword="true" /> if the <see cref="E:System.Windows.UIElement.TouchUp" /> event was handled; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-193">Klassen, die von erben, <xref:System.Windows.Input.TouchDevice> sollten diese Methode zum Auswerfen des- <xref:System.Windows.UIElement.TouchUp> Ereignisses aufruft.</span><span class="sxs-lookup"><span data-stu-id="f7f33-193">Classes that inherit from <xref:System.Windows.Input.TouchDevice> should call this method to raise the <xref:System.Windows.UIElement.TouchUp> event.</span></span> <span data-ttu-id="f7f33-194">Ein- <xref:System.Windows.UIElement.TouchLeave> Ereignis wird nach dem- <xref:System.Windows.UIElement.TouchUp> Ereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="f7f33-194">A <xref:System.Windows.UIElement.TouchLeave> event is raised after the <xref:System.Windows.UIElement.TouchUp> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.ContentElement.TouchUp" />
        <altmember cref="E:System.Windows.UIElement3D.TouchUp" />
        <altmember cref="E:System.Windows.UIElement.TouchUp" />
      </Docs>
    </Member>
    <Member MemberName="SetActiveSource">
      <MemberSignature Language="C#" Value="protected void SetActiveSource (System.Windows.PresentationSource activeSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetActiveSource(class System.Windows.PresentationSource activeSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.SetActiveSource(System.Windows.PresentationSource)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetActiveSource (activeSource As PresentationSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetActiveSource(System::Windows::PresentationSource ^ activeSource);" />
      <MemberSignature Language="F#" Value="member this.SetActiveSource : System.Windows.PresentationSource -&gt; unit" Usage="touchDevice.SetActiveSource activeSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="activeSource" Type="System.Windows.PresentationSource" />
      </Parameters>
      <Docs>
        <param name="activeSource"><span data-ttu-id="f7f33-195">Die Quelle, die Eingaben für dieses Gerät meldet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-195">The source that reports input for this device.</span></span></param>
        <summary><span data-ttu-id="f7f33-196">Legt das <see cref="T:System.Windows.PresentationSource" />-Objekt fest, das Eingaben für dieses Gerät meldet.</span><span class="sxs-lookup"><span data-stu-id="f7f33-196">Sets the <see cref="T:System.Windows.PresentationSource" /> that is reporting input for this device.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Synchronize">
      <MemberSignature Language="C#" Value="public void Synchronize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Synchronize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.Synchronize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Synchronize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Synchronize();" />
      <MemberSignature Language="F#" Value="member this.Synchronize : unit -&gt; unit" Usage="touchDevice.Synchronize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f7f33-197">Zwingt das <see cref="T:System.Windows.Input.TouchDevice" />, die Benutzeroberfläche mit zugrunde liegenden Berührungspunkten zu synchronisieren.</span><span class="sxs-lookup"><span data-stu-id="f7f33-197">Forces the <see cref="T:System.Windows.Input.TouchDevice" /> to synchronize the user interface with underlying touch points.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-198">Durch die Synchronisierung der Benutzeroberfläche mit den zugrunde liegenden Berührungs Positionen können <xref:System.Windows.UIElement.TouchMove> Ereignisse ausgelöst werden.</span><span class="sxs-lookup"><span data-stu-id="f7f33-198">Synchronizing the user interface with the underlying touch positions might cause <xref:System.Windows.UIElement.TouchMove> events to be raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.GetPosition">
      <MemberSignature Language="C#" Value="System.Windows.Point IManipulator.GetPosition (System.Windows.IInputElement relativeTo);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Windows.Point System.Windows.Input.IManipulator.GetPosition(class System.Windows.IInputElement relativeTo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#GetPosition(System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Function GetPosition (relativeTo As IInputElement) As Point Implements IManipulator.GetPosition" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Windows::Point System.Windows.Input.IManipulator.GetPosition(System::Windows::IInputElement ^ relativeTo) = System::Windows::Input::IManipulator::GetPosition;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Input.IManipulator.GetPosition : System.Windows.IInputElement -&gt; System.Windows.Point&#xA;override this.System.Windows.Input.IManipulator.GetPosition : System.Windows.IInputElement -&gt; System.Windows.Point" Usage="touchDevice.System.Windows.Input.IManipulator.GetPosition relativeTo" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.IManipulator.GetPosition(System.Windows.IInputElement)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Point</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="relativeTo" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="relativeTo"><span data-ttu-id="f7f33-199">Das Element, das als Verweisrahmen zum Berechnen der Position des <see cref="T:System.Windows.Input.IManipulator" />-Objekts verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="f7f33-199">The element to use as the frame of reference for calculating the position of the <see cref="T:System.Windows.Input.IManipulator" />.</span></span></param>
        <summary><span data-ttu-id="f7f33-200">Gibt die Position des <see cref="T:System.Windows.Input.IManipulator" />-Objekts zurück.</span><span class="sxs-lookup"><span data-stu-id="f7f33-200">Returns the position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span></span></summary>
        <returns><span data-ttu-id="f7f33-201">Die Position des <see cref="T:System.Windows.Input.IManipulator" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="f7f33-201">The position of the <see cref="T:System.Windows.Input.IManipulator" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-202">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="f7f33-202">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f7f33-203">Er kann nur verwendet werden, wenn die <xref:System.Windows.Input.TouchDevice>-Instanz in eine <xref:System.Windows.Input.IManipulator>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="f7f33-203">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.Id">
      <MemberSignature Language="C#" Value="int System.Windows.Input.IManipulator.Id { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Windows.Input.IManipulator.Id" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#Id" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Id As Integer Implements IManipulator.Id" />
      <MemberSignature Language="C++ CLI" Value="property int System::Windows::Input::IManipulator::Id { int get(); };" />
      <MemberSignature Language="F#" Value="member this.System.Windows.Input.IManipulator.Id : int" Usage="System.Windows.Input.IManipulator.Id" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Input.IManipulator.Id</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7f33-204">Ruft den eindeutigen Bezeichner des <see cref="T:System.Windows.Input.TouchDevice" /> ab, der vom Betriebssystem bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="f7f33-204">Gets the unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" /> as provided by the operating system.</span></span></summary>
        <value><span data-ttu-id="f7f33-205">Der eindeutige Bezeichner des <see cref="T:System.Windows.Input.TouchDevice" />-Objekts.</span><span class="sxs-lookup"><span data-stu-id="f7f33-205">The unique identifier of the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-206">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="f7f33-206">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f7f33-207">Er kann nur verwendet werden, wenn die <xref:System.Windows.Input.TouchDevice>-Instanz in eine <xref:System.Windows.Input.IManipulator>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="f7f33-207">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Input.IManipulator.ManipulationEnded">
      <MemberSignature Language="C#" Value="void IManipulator.ManipulationEnded (bool cancel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Windows.Input.IManipulator.ManipulationEnded(bool cancel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.TouchDevice.System#Windows#Input#IManipulator#ManipulationEnded(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Sub ManipulationEnded (cancel As Boolean) Implements IManipulator.ManipulationEnded" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Windows.Input.IManipulator.ManipulationEnded(bool cancel) = System::Windows::Input::IManipulator::ManipulationEnded;" />
      <MemberSignature Language="F#" Value="abstract member System.Windows.Input.IManipulator.ManipulationEnded : bool -&gt; unit&#xA;override this.System.Windows.Input.IManipulator.ManipulationEnded : bool -&gt; unit" Usage="touchDevice.System.Windows.Input.IManipulator.ManipulationEnded cancel" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Input.IManipulator.ManipulationEnded(System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName Language="C#">[System.Security.SecurityCritical]</AttributeName>
          <AttributeName Language="F#">[&lt;System.Security.SecurityCritical&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancel" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="cancel"><span data-ttu-id="f7f33-208"><see langword="true" />, um die Aktion abzubrechen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f7f33-208"><see langword="true" /> to cancel the action; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="f7f33-209">Tritt ein, wenn eine Änderung beendet wurde.</span><span class="sxs-lookup"><span data-stu-id="f7f33-209">Occurs when a manipulation has ended.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f7f33-210">Bei diesem Member handelt es sich um eine explizite Schnittstellenmemberimplementierung.</span><span class="sxs-lookup"><span data-stu-id="f7f33-210">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="f7f33-211">Er kann nur verwendet werden, wenn die <xref:System.Windows.Input.TouchDevice>-Instanz in eine <xref:System.Windows.Input.IManipulator>-Schnittstelle umgewandelt wird.</span><span class="sxs-lookup"><span data-stu-id="f7f33-211">It can be used only when the <xref:System.Windows.Input.TouchDevice> instance is cast to an <xref:System.Windows.Input.IManipulator> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.IInputElement Target { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement Target" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.TouchDevice.Target" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Target As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ Target { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Target : System.Windows.IInputElement" Usage="System.Windows.Input.TouchDevice.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName Language="C#">[get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")]</AttributeName>
          <AttributeName Language="F#">[&lt;get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")&gt;]</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7f33-212">Ruft das Element ab, das die Eingaben vom <see cref="T:System.Windows.Input.TouchDevice" />-Objekt empfängt.</span><span class="sxs-lookup"><span data-stu-id="f7f33-212">Gets the element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></summary>
        <value><span data-ttu-id="f7f33-213">Das Element, das die Eingaben vom <see cref="T:System.Windows.Input.TouchDevice" />-Objekt empfängt.</span><span class="sxs-lookup"><span data-stu-id="f7f33-213">The element that receives input from the <see cref="T:System.Windows.Input.TouchDevice" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.TouchDevice.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As EventHandler " FrameworkAlternate="net-5.0;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : EventHandler " Usage="member this.Updated : System.EventHandler " />
      <MemberSignature Language="VB.NET" Value="Public Event Updated As EventHandler " FrameworkAlternate="netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Windows.Input.IManipulator.Updated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f7f33-214">Tritt auf, wenn eine Fingereingabenachricht gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="f7f33-214">Occurs when a touch message is sent.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
