<Type Name="ICommandSource" FullName="System.Windows.Input.ICommandSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c2cc671612548463db8b444d52a8d84986b73927" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37505170" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICommandSource" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICommandSource" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ICommandSource" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICommandSource" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICommandSource" />
  <TypeSignature Language="F#" Value="type ICommandSource = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert ein Objekt, das über die Fähigkeit zum Aufrufen eines Befehls verfügt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Befehlsquelle definiert, wie ein Befehl von diesem bestimmten Objekt aufgerufen wird.  Z. B. wenn ein <xref:System.Windows.Controls.Button> bezieht sich auf einen Befehl, der Befehl wird aufgerufen, wenn die <xref:System.Windows.Controls.Button> geklickt wird.  
  
 Eine Befehlsquelle wird normalerweise selbst deaktiviert, wenn der Befehl, die, dem Ihr zugeordneten, auf das aktuelle Befehlsziel ausgeführt werden kann.  Z. B. eine <xref:System.Windows.Controls.MenuItem> zugeordneten der <xref:System.Windows.Input.ApplicationCommands.Paste%2A> Befehl gray selbst heraus, wann die <xref:System.Windows.Input.ApplicationCommands.Paste%2A> Befehl kann nicht auf das aktuelle Befehlsziel ausgeführt werden.  
  
 In der Regel eine Befehlsquelle lauscht der <xref:System.Windows.Input.ICommand.CanExecuteChanged> -Ereignis für den Befehl.  Dies teilt der Befehlsquelle, wenn Bedingungen für das Befehlsziel, z. B. geringere über den Tastaturfokus ändern.  Die Befehlsquelle kann dann Abfragen den Befehl mit der <xref:System.Windows.Input.ICommand.CanExecute%2A> Methode.  
  
 Einige der Klassen in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] implementiert <xref:System.Windows.Input.ICommandSource> sind: <xref:System.Windows.Controls.Primitives.ButtonBase>, <xref:System.Windows.Controls.MenuItem>, und <xref:System.Windows.Documents.Hyperlink>.  
  
 In der Windows Presentation Foundation-Befehlssystem ist die <xref:System.Windows.Input.InputBinding.CommandTarget%2A> Eigenschaft für eine <xref:System.Windows.Input.ICommandSource> ist nur anwendbar, wenn die <xref:System.Windows.Input.ICommand> ist eine <xref:System.Windows.Input.RoutedCommand>.  Wenn die <xref:System.Windows.Input.InputBinding.CommandTarget%2A> festgelegt ist, auf eine <xref:System.Windows.Input.ICommandSource> und der entsprechende Befehl ist keiner <xref:System.Windows.Input.RoutedCommand>, das Ziel des Befehls wird ignoriert.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.ICommand" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
  </Docs>
  <Members>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ICommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.ICommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As ICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ICommand ^ Command { System::Windows::Input::ICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Command : System.Windows.Input.ICommand" Usage="System.Windows.Input.ICommandSource.Command" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Befehl ab, der ausgeführt wird, wenn die Befehlsquelle aufgerufen wird.</summary>
        <value>Der Befehl, der ausgeführt wird, wenn die Befehlsquelle aufgerufen wird.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandParameter">
      <MemberSignature Language="C#" Value="public object CommandParameter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandParameter { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameter : obj" Usage="System.Windows.Input.ICommandSource.CommandParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Stellt einen benutzerdefinierten Datenwert dar, der bei der Ausführung an den Befehl übergeben werden kann.</summary>
        <value>Die befehlsspezifischen Daten.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Regel die <xref:System.Windows.Input.ICommandSource.CommandParameter%2A> wird verwendet, um bestimmte Informationen an den Befehl übergeben werden, bei der Ausführung.  Der Typ der Daten wird durch den Befehl definiert.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
    <Member MemberName="CommandTarget">
      <MemberSignature Language="C#" Value="public System.Windows.IInputElement CommandTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.IInputElement CommandTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandTarget As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::IInputElement ^ CommandTarget { System::Windows::IInputElement ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandTarget : System.Windows.IInputElement" Usage="System.Windows.Input.ICommandSource.CommandTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Das Objekt, auf das der Befehl angewendet wird.</summary>
        <value>Das Objekt, auf das der Befehl angewendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der Windows Presentation Foundation-Befehlssystem ist die <xref:System.Windows.Input.InputBinding.CommandTarget%2A> Eigenschaft für eine <xref:System.Windows.Input.ICommandSource> ist nur anwendbar, wenn die <xref:System.Windows.Input.ICommand> ist eine <xref:System.Windows.Input.RoutedCommand>.  Wenn die <xref:System.Windows.Input.InputBinding.CommandTarget%2A> festgelegt ist, auf eine <xref:System.Windows.Input.ICommandSource> und der entsprechende Befehl ist keiner <xref:System.Windows.Input.RoutedCommand>, das Ziel des Befehls wird ignoriert.  
  
 Bei Verwendung mit einem <xref:System.Windows.Input.RoutedCommand>, das Befehlsziel ist das Objekt auf dem die <xref:System.Windows.Input.CommandManager.Executed> und <xref:System.Windows.Input.CommandManager.CanExecute> Ereignisse ausgelöst werden. Wenn die <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> Eigenschaft nicht festgelegt ist, das Element mit dem Tastaturfokus als Ziel verwendet werden.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.ICommand" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
      </Docs>
    </Member>
  </Members>
</Type>