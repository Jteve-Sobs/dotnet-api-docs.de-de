<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="CanExecuteChangedEventManager.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5da7deb58b54a19a9991663dea48257b810bab1c8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">da7deb58b54a19a9991663dea48257b810bab1c8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.CanExecuteChangedEventManager">
          <source>Provides a <ph id="ph1">&lt;see cref="T:System.Windows.WeakEventManager" /&gt;</ph> implementation so that you can use the "weak event listener" pattern to attach listeners for the <ph id="ph2">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph> event.</source>
          <target state="translated">Stellt eine <ph id="ph1">&lt;see cref="T:System.Windows.WeakEventManager" /&gt;</ph>-Implementierung bereit, damit Sie mit dem Muster für "schwache Ereignislistener" Listener für das <ph id="ph2">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph>-Ereignis anfügen können.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.CanExecuteChangedEventManager">
          <source>For information about how to use this class, see "Using an Existing Weak Event Manager Class" in<bpt id="p1">[</bpt>Weak Event Patterns<ept id="p1">](~/docs/framework/wpf/advanced/weak-event-patterns.md)</ept>.</source>
          <target state="translated">Informationen dazu, wie Sie diese Klasse verwenden, finden Sie unter "Verwenden einer vorhandenen schwache Ereignis-Manager Class" in<bpt id="p1">[</bpt>schwacher Ereignismuster<ept id="p1">](~/docs/framework/wpf/advanced/weak-event-patterns.md)</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})">
          <source>The source object that the raises the <ph id="ph1">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph> event.</source>
          <target state="translated">Das Quellobjekt, das das <ph id="ph1">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph>-Ereignis auslöst.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})">
          <source>The delegate that handles the <ph id="ph1">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph> event.</source>
          <target state="translated">Der Delegat. der das <ph id="ph1">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph>-Ereignis behandelt.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})">
          <source>Adds the specified delegate as an event handler of the specified source.</source>
          <target state="translated">Fügt den angegebenen Delegaten als Ereignishandler der angegebenen Quelle hinzu.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})">
          <source>--or--</source>
          <target state="translated">– oder –</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.AddHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})">
          <source><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <source>The source for events being listened to.</source>
          <target state="translated">Die Quelle für Ereignisse, auf die gelauscht wird.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <source>The data to check.</source>
          <target state="translated">Die zu prüfenden Daten.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <source>This object is expected to be a <ph id="ph1">&lt;see cref="T:System.Windows.WeakEventManager.ListenerList" /&gt;</ph> implementation.</source>
          <target state="translated">Bei diesem Objekt wird erwartet, dass es sich um eine <ph id="ph1">&lt;see cref="T:System.Windows.WeakEventManager.ListenerList" /&gt;</ph>-Implementierung handelt.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to stop listening to <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept>, and completely remove all entries from <bpt id="p2">&lt;c&gt;</bpt>data<ept id="p2">&lt;/c&gt;</ept>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um das Lauschen auf <bpt id="p1">&lt;c&gt;</bpt>source<ept id="p1">&lt;/c&gt;</ept> zu beenden und alle Einträge aus <bpt id="p2">&lt;c&gt;</bpt>data<ept id="p2">&lt;/c&gt;</ept> zu entfernen.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <source>Removes inactive listener entries from the data list for the provided source.</source>
          <target state="translated">Entfernt inaktive Listenereinträge aus der Datenliste für die bereitgestellte Quelle.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.Purge(System.Object,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if some entries were actually removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn tatsächlich Einträge entfernt wurden, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})">
          <source>The source object that the raises the <ph id="ph1">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph> event.</source>
          <target state="translated">Das Quellobjekt, das das <ph id="ph1">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph>-Ereignis auslöst.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})">
          <source>The delegate that handles the <ph id="ph1">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph> event.</source>
          <target state="translated">Der Delegat. der das <ph id="ph1">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph>-Ereignis behandelt.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})">
          <source>Removes the specified event handler from the specified source.</source>
          <target state="translated">Entfernt den angegebenen Ereignishandler aus der angegebenen Quelle.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})">
          <source><ph id="ph1">&lt;paramref name="source" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="source" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})">
          <source>--or--</source>
          <target state="translated">– oder –</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.RemoveHandler(System.Windows.Input.ICommand,System.EventHandler{System.EventArgs})">
          <source><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="handler" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)">
          <source>The object with the event.</source>
          <target state="translated">Das Objekt mit dem Ereignis.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.StartListening(System.Object)">
          <source>Begins listening for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph> event on the specified source.</source>
          <target state="translated">Beginnt die Überwachung des <ph id="ph1">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph>-Ereignisses für die angegebene Quelle.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)">
          <source>The source object to stop listening for.</source>
          <target state="translated">Das Quellobjekt, dessen Überwachung beendet werden soll.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.CanExecuteChangedEventManager.StopListening(System.Object)">
          <source>Stops listening for the <ph id="ph1">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph> event on the specified source.</source>
          <target state="translated">Beendet die Überwachung des <ph id="ph1">&lt;see cref="E:System.Windows.Input.ICommand.CanExecuteChanged" /&gt;</ph>-Ereignisses für die angegebene Quelle.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>