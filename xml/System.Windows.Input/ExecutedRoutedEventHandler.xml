<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="e128fe4824481b4e3dc209fbcdd4599518ff8ebd" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70485046" /></Metadata><TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ExecutedRoutedEventHandler = delegate of obj * ExecutedRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender"><span data-ttu-id="e2877-101">Das Objekt, an das der Ereignishandler angefügt ist.</span><span class="sxs-lookup"><span data-stu-id="e2877-101">The object where the event handler is attached.</span></span></param>
    <param name="e"><span data-ttu-id="e2877-102">Die Ereignisdaten.</span><span class="sxs-lookup"><span data-stu-id="e2877-102">The event data.</span></span></param>
    <summary><span data-ttu-id="e2877-103">Stellt die Methode für die Behandlung der Routingereignisse <see cref="E:System.Windows.Input.CommandBinding.Executed" /> und <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> sowie verwandter angefügter Ereignisse dar.</span><span class="sxs-lookup"><span data-stu-id="e2877-103">Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> and <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> routed events, as well as related attached events.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e2877-104">Dieser Delegat enthält die Implementierungs Logik für <xref:System.Windows.Input.RoutedCommand>ein-Objekt.</span><span class="sxs-lookup"><span data-stu-id="e2877-104">This delegate contains the implementation logic for a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="e2877-105">Durch das Trennen der Implementierungs Logik vom Befehl kann der Befehl aus unterschiedlichen Quellen und Typen aufgerufen werden, und es wird die Zentralisierung der Befehls Logik ermöglicht.</span><span class="sxs-lookup"><span data-stu-id="e2877-105">Separating the implementation logic from the command allows the command to be invoked from different sources and types, and enables the centralization of command logic.</span></span>  
  
 <span data-ttu-id="e2877-106">Dieser Delegat wird auch für <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> und <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>verwendet, bei denen es sich um <xref:System.Windows.Input.CommandManager> angefügte Ereignisse in der Klasse handelt, die einen Großteil der Befehls Infrastruktur implementiert.</span><span class="sxs-lookup"><span data-stu-id="e2877-106">This delegate is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="e2877-107">Die meisten praktischen Handler behandeln jedoch die <xref:System.Windows.Input.CommandBinding.Executed> Ereignisse von einem bestimmten <xref:System.Windows.Input.CommandBinding>, anstatt von der Arbeit auf der <xref:System.Windows.Input.CommandManager> Ebene.</span><span class="sxs-lookup"><span data-stu-id="e2877-107">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="e2877-108">In <xref:System.Windows.Input.ExecutedRoutedEventArgs>sind die folgenden Eigenschaften im Allgemeinen von Interesse, wenn Sie einen Ereignishandler für ein Routing Ereignis schreiben, das sich aus einem ausgeführten Befehl ergibt:</span><span class="sxs-lookup"><span data-stu-id="e2877-108">Within <xref:System.Windows.Input.ExecutedRoutedEventArgs>, the following properties are generally of interest when you write an event handler for a routed event that results from an executed command:</span></span>  
  
-   <span data-ttu-id="e2877-109"><xref:System.Windows.RoutedEventArgs.Source%2A>meldet das Ziel, in dem der Befehl ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="e2877-109"><xref:System.Windows.RoutedEventArgs.Source%2A> reports the target where the command was executed.</span></span> <span data-ttu-id="e2877-110">Nachdem der Befehl ausgeführt wurde, können Sie sich auch die <xref:System.Windows.RoutedEventArgs.Source%2A> allgemeinere Form von Routing Ereignis Begriffen als das Objekt vorstellen, das ein Routing Ereignis ausgelöst hat.</span><span class="sxs-lookup"><span data-stu-id="e2877-110">Once the command is executed, you can also think of the <xref:System.Windows.RoutedEventArgs.Source%2A> more generally in routed event terms, as the object that raised a routed event.</span></span>  
  
-   <span data-ttu-id="e2877-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A>meldet den Befehl, der ausgeführt hat.</span><span class="sxs-lookup"><span data-stu-id="e2877-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> reports the command that executed.</span></span> <span data-ttu-id="e2877-112">Diese Eigenschaft ist nützlich, wenn Sie Befehls Bindungen verwenden und Handler schreiben, die potenziell mehrere Befehle verarbeiten können.</span><span class="sxs-lookup"><span data-stu-id="e2877-112">This property is useful if you use command bindings and if you write handlers that potentially handle multiple commands.</span></span>  
  
-   <span data-ttu-id="e2877-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A>meldet alle Befehls spezifischen Parameter, die vom ausführenden Befehl übermittelt wurden.</span><span class="sxs-lookup"><span data-stu-id="e2877-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> reports any command-specific parameters that were passed by the executing command.</span></span> <span data-ttu-id="e2877-114">Nicht alle Befehle verwenden oder erwarten Befehls spezifische Parameter.</span><span class="sxs-lookup"><span data-stu-id="e2877-114">Not all commands use or expect command-specific parameters.</span></span>  
  
-   <span data-ttu-id="e2877-115"><xref:System.Windows.RoutedEventArgs.Handled%2A>meldet, ob das durch den ausgeführten Befehl resultierende Routing Ereignis bereits von einem anderen Element entlang der Route behandelt wurde.</span><span class="sxs-lookup"><span data-stu-id="e2877-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> reports whether the routed event that resulted from the executed command was already handled by a different element along the route.</span></span> <span data-ttu-id="e2877-116">Bei Routing Ereignis Handlern empfiehlt es sich, Handler zu verwenden, die bei der Behandlung des Ereignisses eine sinnvolle Arbeit ausführen, um <xref:System.Windows.RoutedEventArgs.Handled%2A> auf `true`festzulegen.</span><span class="sxs-lookup"><span data-stu-id="e2877-116">For routed event handlers, it is a recommended practice to have handlers that do meaningful work when handling the event to set <xref:System.Windows.RoutedEventArgs.Handled%2A> to `true`.</span></span> <span data-ttu-id="e2877-117">Dadurch wird verhindert, dass typische Handler für das Ereignis das Ereignis weiter entlang der Route verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="e2877-117">This prevents typical handlers for the event from handling the event again further along the route.</span></span> <span data-ttu-id="e2877-118">Weitere Informationen zum Verarbeiten von Routing Ereignissen finden Sie unter Markieren von Routing [Ereignissen als behandelt und Klassen Behandlung](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="e2877-118">For more information on handling routed events, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="e2877-119">Dieser Delegat stellt auch Handler für <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> und <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>dar, bei denen es sich um <xref:System.Windows.Input.CommandManager> angefügte Ereignisse in der Klasse handelt, die einen Großteil der Befehls Infrastruktur implementiert.</span><span class="sxs-lookup"><span data-stu-id="e2877-119">This delegate also represents handlers for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="e2877-120">Die meisten praktischen Handler behandeln jedoch die <xref:System.Windows.Input.CommandBinding.Executed> Ereignisse von einem bestimmten <xref:System.Windows.Input.CommandBinding>, anstatt von der Arbeit auf der <xref:System.Windows.Input.CommandManager> Ebene.</span><span class="sxs-lookup"><span data-stu-id="e2877-120">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="e2877-121">Weitere Informationen über Befehle finden Sie unter [Befehlsübersicht](~/docs/framework/wpf/advanced/commanding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="e2877-121">For more information on commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e2877-122">In diesem Beispiel wird <xref:System.Windows.Input.ExecutedRoutedEventHandler> ein erstellt, der eine visuelle Eigenschaft für das Ziel festlegt, wenn der Befehl ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="e2877-122">This example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> that sets a visual property on the target when the command is executed.</span></span> <span data-ttu-id="e2877-123">Das Beispiel enthält auch die <xref:System.Windows.Input.CanExecuteRoutedEventHandler> für denselben Befehl.</span><span class="sxs-lookup"><span data-stu-id="e2877-123">The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.</span></span>  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>
