<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ExecutedRoutedEventHandler.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac55e7060feb6bd9cc789b91cd51b75c1f71d708b5f.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">5e7060feb6bd9cc789b91cd51b75c1f71d708b5f</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>The object where the event handler is attached.</source>
          <target state="translated">Das Objekt, an das der Ereignishandler angefügt ist.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>The event data.</source>
          <target state="translated">Die Ereignisdaten.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Represents the method that will handle the <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> and <ph id="ph2">&lt;see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /&gt;</ph> routed events, as well as related attached events.</source>
          <target state="translated">Stellt die Methode für die Behandlung der Routingereignisse <ph id="ph1">&lt;see cref="E:System.Windows.Input.CommandBinding.Executed" /&gt;</ph> und <ph id="ph2">&lt;see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /&gt;</ph> sowie verwandter angefügter Ereignisse dar.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This delegate contains the implementation logic for a <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</source>
          <target state="translated">Dieser Delegat enthält, das die Implementierungslogik für eine <ph id="ph1">&lt;xref:System.Windows.Input.RoutedCommand&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Separating the implementation logic from the command allows the command to be invoked from different sources and types, and enables the centralization of command logic.</source>
          <target state="translated">Trennen der Implementierungslogik des Befehls den Befehl aus, um aus verschiedenen Quellen und Typen aufgerufen werden kann, und ermöglicht die Zentralisierung von Logik für die.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This delegate is also used for <ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType&gt;</ph>, which are attached events on the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> class that implements much of the commanding infrastructure.</source>
          <target state="translated">Dieser Delegat wird auch zum <ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType&gt;</ph>, wobei es sich um angefügte Ereignisse auf die <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> Klasse, die viele der Befehle Infrastruktur implementiert.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>But most practical handlers will handle the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> events from a particular <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, rather than work at the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> level.</source>
          <target state="translated">Aber die zweckmäßigste Handler verarbeiten die <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> Ereignisse aus einem bestimmten <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, sondern als für die Arbeit an der <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> Ebene.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Within <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</ph>, the following properties are generally of interest when you write an event handler for a routed event that results from an executed command:</source>
          <target state="translated">In <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs&gt;</ph>, die folgenden Eigenschaften sind im Allgemeinen von Interesse sind, wenn Sie einen Ereignishandler für ein Routingereignis schreiben, die aus einer ausgeführten Befehl ergibt:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> reports the target where the command was executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> meldet das Ziel, auf dem der Befehl ausgeführt wurde.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Once the command is executed, you can also think of the <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> more generally in routed event terms, as the object that raised a routed event.</source>
          <target state="translated">Nachdem der Befehl ausgeführt wurde, können auch Stellen Sie die <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Source%2A&gt;</ph> mehr in der Regel in weitergeleitet Ereignis Begriffe, wie das Objekt, das ein Routingereignis ausgelöst.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A&gt;</ph> reports the command that executed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A&gt;</ph> meldet die Anweisung ausgeführte Befehl.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This property is useful if you use command bindings and if you write handlers that potentially handle multiple commands.</source>
          <target state="translated">Diese Eigenschaft ist nützlich, wenn Sie befehlsbindungen verwenden und Sie Handler schreiben, die potenziell mehrere Befehle behandelt.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A&gt;</ph> reports any command-specific parameters that were passed by the executing command.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A&gt;</ph> meldet alle befehlsspezifische-Parameter, die vom ausgeführten Befehl übergeben wurden.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>Not all commands use or expect command-specific parameters.</source>
          <target state="translated">Nicht alle Befehle verwenden oder befehlsspezifische Parameter erwartet.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> reports whether the routed event that resulted from the executed command was already handled by a different element along the route.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> Gibt an, ob das Routingereignis, das von den ausgeführten Befehl geführt hat bereits ein anderes Element entlang der Route behandelt wurde.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>For routed event handlers, it is a recommended practice to have handlers that do meaningful work when handling the event to set <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Für Routingereignishandler, ist es eine empfohlene Methode Handler aufweisen, die sinnvolle Aufgaben ausführen, wenn das Ereignis als festzulegen Behandlung von <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.Handled%2A&gt;</ph> auf <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This prevents typical handlers for the event from handling the event again further along the route.</source>
          <target state="translated">Dies verhindert, dass typische Handler für das Ereignis behandeln, die das Ereignis weiter erneut entlang der Route.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>For more information on handling routed events, see <bpt id="p1">[</bpt>Marking Routed Events as Handled, and Class Handling<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</source>
          <target state="translated">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter <bpt id="p1">[</bpt>Routingereignisse als bearbeitete sowie die Behandlung von Klasse markieren<ept id="p1">](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)</ept>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This delegate also represents handlers for <ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType&gt;</ph>, which are attached events on the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> class that implements much of the commanding infrastructure.</source>
          <target state="translated">Dieser Delegat stellt auch Handler für <ph id="ph1">&lt;xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType&gt;</ph> und <ph id="ph2">&lt;xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType&gt;</ph>, wobei es sich um angefügte Ereignisse auf die <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> Klasse, die viele der Befehle Infrastruktur implementiert.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>But most practical handlers will handle the <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> events from a particular <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, rather than work at the <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> level.</source>
          <target state="translated">Aber die zweckmäßigste Handler verarbeiten die <ph id="ph1">&lt;xref:System.Windows.Input.CommandBinding.Executed&gt;</ph> Ereignisse aus einem bestimmten <ph id="ph2">&lt;xref:System.Windows.Input.CommandBinding&gt;</ph>, sondern als für die Arbeit an der <ph id="ph3">&lt;xref:System.Windows.Input.CommandManager&gt;</ph> Ebene.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>For more information on commanding, see <bpt id="p1">[</bpt>Commanding Overview<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</source>
          <target state="translated">Weitere Informationen über Befehle finden Sie unter <bpt id="p1">[</bpt>Befehlsübersicht<ept id="p1">](~/docs/framework/wpf/advanced/commanding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>This example creates an <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> that sets a visual property on the target when the command is executed.</source>
          <target state="translated">In diesem Beispiel wird ein <ph id="ph1">&lt;xref:System.Windows.Input.ExecutedRoutedEventHandler&gt;</ph> eine visuelle Eigenschaft auf dem Ziel, die festlegt, wenn der Befehl ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.ExecutedRoutedEventHandler">
          <source>The example also includes the <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> for the same command.</source>
          <target state="translated">Das Beispiel enthält auch die <ph id="ph1">&lt;xref:System.Windows.Input.CanExecuteRoutedEventHandler&gt;</ph> für den gleichen Befehl.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>