<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e7060feb6bd9cc789b91cd51b75c1f71d708b5f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="b479c-101">Das Objekt, an das der Ereignishandler angefügt ist.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b479c-101">The object where the event handler is attached.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="b479c-102">Die Ereignisdaten.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b479c-102">The event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="b479c-103">Stellt die Methode für die Behandlung der Routingereignisse <see cref="E:System.Windows.Input.CommandBinding.Executed" /> und <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> sowie verwandter angefügter Ereignisse dar.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b479c-103">Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> and <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> routed events, as well as related attached events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b479c-104">Dieser Delegat enthält, das die Implementierungslogik für eine <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="b479c-104">This delegate contains the implementation logic for a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="b479c-105">Trennen der Implementierungslogik des Befehls den Befehl aus, um aus verschiedenen Quellen und Typen aufgerufen werden kann, und ermöglicht die Zentralisierung von Logik für die.</span><span class="sxs-lookup"><span data-stu-id="b479c-105">Separating the implementation logic from the command allows the command to be invoked from different sources and types, and enables the centralization of command logic.</span></span>  
  
 <span data-ttu-id="b479c-106">Dieser Delegat wird auch zum <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> und <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, wobei es sich um angefügte Ereignisse auf die <xref:System.Windows.Input.CommandManager> Klasse, die viele der Befehle Infrastruktur implementiert.</span><span class="sxs-lookup"><span data-stu-id="b479c-106">This delegate is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="b479c-107">Aber die zweckmäßigste Handler verarbeiten die <xref:System.Windows.Input.CommandBinding.Executed> Ereignisse aus einem bestimmten <xref:System.Windows.Input.CommandBinding>, sondern als für die Arbeit an der <xref:System.Windows.Input.CommandManager> Ebene.</span><span class="sxs-lookup"><span data-stu-id="b479c-107">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="b479c-108">In <xref:System.Windows.Input.ExecutedRoutedEventArgs>, die folgenden Eigenschaften sind im Allgemeinen von Interesse sind, wenn Sie einen Ereignishandler für ein Routingereignis schreiben, die aus einer ausgeführten Befehl ergibt:</span><span class="sxs-lookup"><span data-stu-id="b479c-108">Within <xref:System.Windows.Input.ExecutedRoutedEventArgs>, the following properties are generally of interest when you write an event handler for a routed event that results from an executed command:</span></span>  
  
-   <span data-ttu-id="b479c-109"><xref:System.Windows.RoutedEventArgs.Source%2A> meldet das Ziel, auf dem der Befehl ausgeführt wurde.</span><span class="sxs-lookup"><span data-stu-id="b479c-109"><xref:System.Windows.RoutedEventArgs.Source%2A> reports the target where the command was executed.</span></span> <span data-ttu-id="b479c-110">Nachdem der Befehl ausgeführt wurde, können auch Stellen Sie die <xref:System.Windows.RoutedEventArgs.Source%2A> mehr in der Regel in weitergeleitet Ereignis Begriffe, wie das Objekt, das ein Routingereignis ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="b479c-110">Once the command is executed, you can also think of the <xref:System.Windows.RoutedEventArgs.Source%2A> more generally in routed event terms, as the object that raised a routed event.</span></span>  
  
-   <span data-ttu-id="b479c-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> meldet die Anweisung ausgeführte Befehl.</span><span class="sxs-lookup"><span data-stu-id="b479c-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> reports the command that executed.</span></span> <span data-ttu-id="b479c-112">Diese Eigenschaft ist nützlich, wenn Sie befehlsbindungen verwenden und Sie Handler schreiben, die potenziell mehrere Befehle behandelt.</span><span class="sxs-lookup"><span data-stu-id="b479c-112">This property is useful if you use command bindings and if you write handlers that potentially handle multiple commands.</span></span>  
  
-   <span data-ttu-id="b479c-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> meldet alle befehlsspezifische-Parameter, die vom ausgeführten Befehl übergeben wurden.</span><span class="sxs-lookup"><span data-stu-id="b479c-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> reports any command-specific parameters that were passed by the executing command.</span></span> <span data-ttu-id="b479c-114">Nicht alle Befehle verwenden oder befehlsspezifische Parameter erwartet.</span><span class="sxs-lookup"><span data-stu-id="b479c-114">Not all commands use or expect command-specific parameters.</span></span>  
  
-   <span data-ttu-id="b479c-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> Gibt an, ob das Routingereignis, das von den ausgeführten Befehl geführt hat bereits ein anderes Element entlang der Route behandelt wurde.</span><span class="sxs-lookup"><span data-stu-id="b479c-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> reports whether the routed event that resulted from the executed command was already handled by a different element along the route.</span></span> <span data-ttu-id="b479c-116">Für Routingereignishandler, ist es eine empfohlene Methode Handler aufweisen, die sinnvolle Aufgaben ausführen, wenn das Ereignis als festzulegen Behandlung von <xref:System.Windows.RoutedEventArgs.Handled%2A> auf `true`.</span><span class="sxs-lookup"><span data-stu-id="b479c-116">For routed event handlers, it is a recommended practice to have handlers that do meaningful work when handling the event to set <xref:System.Windows.RoutedEventArgs.Handled%2A> to `true`.</span></span> <span data-ttu-id="b479c-117">Dies verhindert, dass typische Handler für das Ereignis behandeln, die das Ereignis weiter erneut entlang der Route.</span><span class="sxs-lookup"><span data-stu-id="b479c-117">This prevents typical handlers for the event from handling the event again further along the route.</span></span> <span data-ttu-id="b479c-118">Weitere Informationen zur Behandlung von Ereignissen finden Sie unter [Routingereignisse als bearbeitete sowie die Behandlung von Klasse markieren](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="b479c-118">For more information on handling routed events, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="b479c-119">Dieser Delegat stellt auch Handler für <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> und <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, wobei es sich um angefügte Ereignisse auf die <xref:System.Windows.Input.CommandManager> Klasse, die viele der Befehle Infrastruktur implementiert.</span><span class="sxs-lookup"><span data-stu-id="b479c-119">This delegate also represents handlers for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="b479c-120">Aber die zweckmäßigste Handler verarbeiten die <xref:System.Windows.Input.CommandBinding.Executed> Ereignisse aus einem bestimmten <xref:System.Windows.Input.CommandBinding>, sondern als für die Arbeit an der <xref:System.Windows.Input.CommandManager> Ebene.</span><span class="sxs-lookup"><span data-stu-id="b479c-120">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="b479c-121">Weitere Informationen über Befehle finden Sie unter [Befehlsübersicht](~/docs/framework/wpf/advanced/commanding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="b479c-121">For more information on commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b479c-122">In diesem Beispiel wird ein <xref:System.Windows.Input.ExecutedRoutedEventHandler> eine visuelle Eigenschaft auf dem Ziel, die festlegt, wenn der Befehl ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="b479c-122">This example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> that sets a visual property on the target when the command is executed.</span></span> <span data-ttu-id="b479c-123">Das Beispiel enthält auch die <xref:System.Windows.Input.CanExecuteRoutedEventHandler> für den gleichen Befehl.</span><span class="sxs-lookup"><span data-stu-id="b479c-123">The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.</span></span>  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>