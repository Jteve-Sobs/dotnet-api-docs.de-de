<Type Name="UdpClient" FullName="System.Net.Sockets.UdpClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="69c6df4a843f63e13697f0a8989c0ae3f19eb3d1" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73339085" /></Metadata><TypeSignature Language="C#" Value="public class UdpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="56b12-101">Stellt die UDP-Netzwerkdienste (User Datagram Protocol) bereit.</span><span class="sxs-lookup"><span data-stu-id="56b12-101">Provides User Datagram Protocol (UDP) network services.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-102">Die <xref:System.Net.Sockets.UdpClient>-Klasse stellt einfache Methoden zum Senden und empfangen von Verbindungs losen UDP-Datagramme im blockierenden synchronen Modus bereit.</span><span class="sxs-lookup"><span data-stu-id="56b12-102">The <xref:System.Net.Sockets.UdpClient> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</span></span> <span data-ttu-id="56b12-103">Da UDP ein verbindungsloses Transportprotokoll ist, müssen Sie vor dem Senden und empfangen von Daten keine Remote Host Verbindung herstellen.</span><span class="sxs-lookup"><span data-stu-id="56b12-103">Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</span></span> <span data-ttu-id="56b12-104">Sie haben jedoch die Möglichkeit, einen Standard-Remote Host auf eine der beiden folgenden Arten einzurichten:</span><span class="sxs-lookup"><span data-stu-id="56b12-104">You do, however, have the option of establishing a default remote host in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="56b12-105">Erstellen Sie eine Instanz der <xref:System.Net.Sockets.UdpClient>-Klasse, indem Sie den Remote Hostnamen und die Portnummer als Parameter verwenden.</span><span class="sxs-lookup"><span data-stu-id="56b12-105">Create an instance of the <xref:System.Net.Sockets.UdpClient> class using the remote host name and port number as parameters.</span></span>  
  
-   <span data-ttu-id="56b12-106">Erstellen Sie eine Instanz der <xref:System.Net.Sockets.UdpClient>-Klasse, und rufen Sie dann die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode auf.</span><span class="sxs-lookup"><span data-stu-id="56b12-106">Create an instance of the <xref:System.Net.Sockets.UdpClient> class and then call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span>  
  
 <span data-ttu-id="56b12-107">Sie können eine der im <xref:System.Net.Sockets.UdpClient> bereitgestellten Sende Methoden verwenden, um Daten an ein Remote Gerät zu senden.</span><span class="sxs-lookup"><span data-stu-id="56b12-107">You can use any of the send methods provided in the <xref:System.Net.Sockets.UdpClient> to send data to a remote device.</span></span> <span data-ttu-id="56b12-108">Verwenden Sie die <xref:System.Net.Sockets.UdpClient.Receive%2A>-Methode, um Daten von Remote Hosts zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="56b12-108">Use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method to receive data from remote hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-109">Wenn Sie bereits einen Standard-Remote Host angegeben haben, können Sie <xref:System.Net.Sockets.UdpClient.Send%2A> nicht mit einem Hostnamen oder <xref:System.Net.IPEndPoint> abrufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-109">Do not call <xref:System.Net.Sockets.UdpClient.Send%2A> using a host name or <xref:System.Net.IPEndPoint> if you have already specified a default remote host.</span></span> <span data-ttu-id="56b12-110">Wenn Sie dies tun, wird <xref:System.Net.Sockets.UdpClient> eine Ausnahme auslösen.</span><span class="sxs-lookup"><span data-stu-id="56b12-110">If you do, <xref:System.Net.Sockets.UdpClient> will throw an exception.</span></span>  
  
 <span data-ttu-id="56b12-111">mit <xref:System.Net.Sockets.UdpClient> Methoden können Sie auch Multicast Datagramme senden und empfangen.</span><span class="sxs-lookup"><span data-stu-id="56b12-111"><xref:System.Net.Sockets.UdpClient> methods also allow you to send and receive multicast datagrams.</span></span> <span data-ttu-id="56b12-112">Verwenden Sie die <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>-Methode, um eine <xref:System.Net.Sockets.UdpClient> für eine Multicast Gruppe zu abonnieren.</span><span class="sxs-lookup"><span data-stu-id="56b12-112">Use the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method to subscribe a <xref:System.Net.Sockets.UdpClient> to a multicast group.</span></span> <span data-ttu-id="56b12-113">Verwenden Sie die <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>-Methode, um ein <xref:System.Net.Sockets.UdpClient> von einer Multicast Gruppe abzubestellen.</span><span class="sxs-lookup"><span data-stu-id="56b12-113">Use the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method to unsubscribe a <xref:System.Net.Sockets.UdpClient> from a multicast group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-114">Im folgenden Beispiel wird eine <xref:System.Net.Sockets.UdpClient> Verbindung mithilfe des Host namens `www.contoso.com` auf Port 11000 hergestellt.</span><span class="sxs-lookup"><span data-stu-id="56b12-114">The following example establishes a <xref:System.Net.Sockets.UdpClient> connection using the host name `www.contoso.com` on port 11000.</span></span> <span data-ttu-id="56b12-115">Eine kleine Zeichen folgen Nachricht wird an zwei separate Remote Host Computer gesendet.</span><span class="sxs-lookup"><span data-stu-id="56b12-115">A small string message is sent to two separate remote host machines.</span></span> <span data-ttu-id="56b12-116">Durch die <xref:System.Net.Sockets.UdpClient.Receive%2A>-Methode wird die Ausführung blockiert, bis eine Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-116">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until a message is received.</span></span> <span data-ttu-id="56b12-117">Mithilfe der an <xref:System.Net.Sockets.UdpClient.Receive%2A>über gebenden <xref:System.Net.IPEndPoint> wird die Identität des antwortenden Hosts offengelegt.</span><span class="sxs-lookup"><span data-stu-id="56b12-117">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClientExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClientExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClientExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClientExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClientExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission"><span data-ttu-id="56b12-118">, Um eine ausgehende Verbindung herzustellen oder eine eingehende Anforderung zu akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="56b12-118">To establish an outgoing connection or accept an incoming request.</span></span></permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
    <related type="Article" href="~/docs/framework/network-programming/tcp-udp.md"><span data-ttu-id="56b12-119">TCP-UDP</span><span class="sxs-lookup"><span data-stu-id="56b12-119">TCP-UDP</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b12-120">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="56b12-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56b12-121">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="56b12-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-122">Dieser Konstruktor erstellt eine neue <xref:System.Net.Sockets.UdpClient> und ermöglicht dem zugrunde liegenden Dienstanbieter die Zuweisung der am besten geeigneten lokalen IPv4-Adresse und Portnummer.</span><span class="sxs-lookup"><span data-stu-id="56b12-122">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</span></span> <span data-ttu-id="56b12-123">Wenn dieser Konstruktor verwendet wird, wird die <xref:System.Net.Sockets.UdpClient> Instanz mit einer Adressfamilie von IPv4 festgelegt, die nicht durch einen Connect-Methodenaufrufe mit einem IPv6-Ziel geändert oder überschrieben werden kann.</span><span class="sxs-lookup"><span data-stu-id="56b12-123">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-124">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-124">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-125">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-125">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="56b12-126">Dieser Konstruktor ist nicht zum beitreten zu einer Multicast Gruppe geeignet, da er keine socketbindung ausführt.</span><span class="sxs-lookup"><span data-stu-id="56b12-126">This constructor is not suitable for joining a multicast group because it does not perform socket binding.</span></span> <span data-ttu-id="56b12-127">Außerdem funktioniert Sie nur mit IPv4-Adresstypen.</span><span class="sxs-lookup"><span data-stu-id="56b12-127">Also, it works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-128">Im folgenden Beispiel wird veranschaulicht, wie der Parameter lose Konstruktor verwendet wird, um eine Instanz der <xref:System.Net.Sockets.UdpClient>-Klasse zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="56b12-128">The following example demonstrates how to use the parameterless constructor to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-129">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-129">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="56b12-130">Die Nummer des lokalen Anschlusses, über den die Kommunikation stattfinden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-130">The local port number from which you intend to communicate.</span></span></param>
        <summary><span data-ttu-id="56b12-131">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse und bindet sie an die angegebene lokale Anschlussnummer.</span><span class="sxs-lookup"><span data-stu-id="56b12-131">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-132">Dieser Konstruktor erstellt eine zugrunde liegende <xref:System.Net.Sockets.Socket> und bindet Sie an die Portnummer, von der aus Sie kommunizieren möchten.</span><span class="sxs-lookup"><span data-stu-id="56b12-132">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span> <span data-ttu-id="56b12-133">Verwenden Sie diesen Konstruktor, wenn Sie nur die lokale Portnummer festlegen möchten.</span><span class="sxs-lookup"><span data-stu-id="56b12-133">Use this constructor if you are only interested in setting the local port number.</span></span> <span data-ttu-id="56b12-134">Der zugrunde liegende Dienstanbieter weist die lokale IP-Adresse zu.</span><span class="sxs-lookup"><span data-stu-id="56b12-134">The underlying service provider will assign the local IP address.</span></span> <span data-ttu-id="56b12-135">Wenn Sie 0 an den-Konstruktor übergeben, weist der zugrunde liegende Dienstanbieter eine Portnummer zu.</span><span class="sxs-lookup"><span data-stu-id="56b12-135">If you pass 0 to the constructor, the underlying service provider will assign a port number.</span></span> <span data-ttu-id="56b12-136">Wenn dieser Konstruktor verwendet wird, wird die <xref:System.Net.Sockets.UdpClient> Instanz mit einer Adressfamilie von IPv4 festgelegt, die nicht durch einen Connect-Methodenaufrufe mit einem IPv6-Ziel geändert oder überschrieben werden kann.</span><span class="sxs-lookup"><span data-stu-id="56b12-136">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-137">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-137">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-138">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-138">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="56b12-139">Dieser Konstruktor kann nur mit IPv4-Adresstypen verwendet werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-139">This constructor works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-140">Im folgenden Beispiel wird veranschaulicht, wie eine lokale Portnummer verwendet wird, um eine Instanz der <xref:System.Net.Sockets.UdpClient>-Klasse zu erstellen.</span><span class="sxs-lookup"><span data-stu-id="56b12-140">The following example demonstrates using a local port number to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b12-141">Der <paramref name="port" />-Parameter ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" /> oder kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-141">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-142">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-142">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP"><span data-ttu-id="56b12-143">Ein <see cref="T:System.Net.IPEndPoint" />, der den lokalen Endpunkt darstellt, an den Sie die UDP-Verbindung binden.</span><span class="sxs-lookup"><span data-stu-id="56b12-143">An <see cref="T:System.Net.IPEndPoint" /> that represents the local endpoint to which you bind the UDP connection.</span></span></param>
        <summary><span data-ttu-id="56b12-144">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse und bindet sie an den angegebenen lokalen Endpunkt.</span><span class="sxs-lookup"><span data-stu-id="56b12-144">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-145">Dieser Konstruktor erstellt einen neuen <xref:System.Net.Sockets.UdpClient> und bindet ihn an die vom `localEP`-Parameter angegebene <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="56b12-145">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="56b12-146">Bevor Sie diesen Konstruktor aufzurufen, müssen Sie eine <xref:System.Net.IPEndPoint> mithilfe der IP-Adresse und der Portnummer erstellen, von denen Sie Daten senden und empfangen möchten.</span><span class="sxs-lookup"><span data-stu-id="56b12-146">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="56b12-147">Sie müssen keine lokale IP-Adresse und Portnummer angeben, um Daten zu senden und zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="56b12-147">You do not need to specify a local IP address and port number for sending and receiving data.</span></span> <span data-ttu-id="56b12-148">Andernfalls weist der zugrunde liegende Dienstanbieter die am besten geeignete lokale IP-Adresse und Portnummer zu.</span><span class="sxs-lookup"><span data-stu-id="56b12-148">If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="56b12-149">Wenn dieser Konstruktor verwendet wird, wird die <xref:System.Net.Sockets.UdpClient> Instanz mit der Adressfamilie festgelegt, die durch den `localEP`-Parameter angegeben wird, der nicht durch einen Connect-Methodenaufrufe mit einer anderen Adressfamilie geändert oder überschrieben werden kann.</span><span class="sxs-lookup"><span data-stu-id="56b12-149">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `localEP` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-150">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-150">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-151">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-151">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-152">Im folgenden Beispiel wird veranschaulicht, wie eine Instanz der <xref:System.Net.Sockets.UdpClient>-Klasse mit einem lokalen Endpunkt erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-152">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-153"><paramref name="localEP" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-153"><paramref name="localEP" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-154">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-154">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family"><span data-ttu-id="56b12-155">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte, der das Adressierungsschema für den Socket angibt.</span><span class="sxs-lookup"><span data-stu-id="56b12-155">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span></span></param>
        <summary><span data-ttu-id="56b12-156">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="56b12-156">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-157">Der `family`-Parameter bestimmt, ob der Listener eine IPv4-Adresse (IP Version 4) oder eine IPv6-Adresse (IP Version 6) verwendet.</span><span class="sxs-lookup"><span data-stu-id="56b12-157">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="56b12-158">Wenn Sie eine IPv4-Adresse verwenden möchten, übergeben Sie den <xref:System.Net.Sockets.AddressFamily.InterNetwork> Wert.</span><span class="sxs-lookup"><span data-stu-id="56b12-158">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="56b12-159">Übergeben Sie den <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> Wert, um eine IPv6-Adresse zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="56b12-159">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="56b12-160">Das Übergeben eines anderen Werts bewirkt, dass die Methode eine <xref:System.ArgumentException>auslöst.</span><span class="sxs-lookup"><span data-stu-id="56b12-160">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="56b12-161">Wenn dieser Konstruktor verwendet wird, wird die <xref:System.Net.Sockets.UdpClient> Instanz mit der Adressfamilie festgelegt, die durch den `family`-Parameter angegeben wird, der nicht durch einen Connect-Methodenaufrufe mit einer anderen Adressfamilie geändert oder überschrieben werden kann.</span><span class="sxs-lookup"><span data-stu-id="56b12-161">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-162">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-162">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-163">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-163">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="56b12-164">Der <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> ist nicht zum beitreten zu einer Multicast Gruppe geeignet, da er keine socketbindung ausführt.</span><span class="sxs-lookup"><span data-stu-id="56b12-164">The <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> is not suitable for joining a multicast group because it does not perform socket binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b12-165"><paramref name="family" /> ist nicht <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-165"><paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-166">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-166">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port, System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port, System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int * System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (port, family)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="56b12-167">Der Anschluss, der auf eingehende Verbindungsversuche überwacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-167">The port on which to listen for incoming connection attempts.</span></span></param>
        <param name="family"><span data-ttu-id="56b12-168">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte, der das Adressierungsschema für den Socket angibt.</span><span class="sxs-lookup"><span data-stu-id="56b12-168">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span></span></param>
        <summary><span data-ttu-id="56b12-169">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse und bindet sie an die angegebene lokale Anschlussnummer.</span><span class="sxs-lookup"><span data-stu-id="56b12-169">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-170">Dieser Konstruktor erstellt eine zugrunde liegende <xref:System.Net.Sockets.Socket> und bindet Sie an die Portnummer, von der aus Sie kommunizieren möchten.</span><span class="sxs-lookup"><span data-stu-id="56b12-170">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span>  
  
 <span data-ttu-id="56b12-171">Der `family`-Parameter bestimmt, ob der Listener eine IPv4-Adresse (IP Version 4) oder eine IPv6-Adresse (IP Version 6) verwendet.</span><span class="sxs-lookup"><span data-stu-id="56b12-171">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="56b12-172">Wenn Sie eine IPv4-Adresse verwenden möchten, übergeben Sie den <xref:System.Net.Sockets.AddressFamily.InterNetwork> Wert.</span><span class="sxs-lookup"><span data-stu-id="56b12-172">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="56b12-173">Übergeben Sie den <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> Wert, um eine IPv6-Adresse zu verwenden.</span><span class="sxs-lookup"><span data-stu-id="56b12-173">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="56b12-174">Das Übergeben eines anderen Werts bewirkt, dass die Methode eine <xref:System.ArgumentException>auslöst.</span><span class="sxs-lookup"><span data-stu-id="56b12-174">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="56b12-175">Wenn dieser Konstruktor verwendet wird, wird die <xref:System.Net.Sockets.UdpClient> Instanz mit der Adressfamilie festgelegt, die durch den `family`-Parameter angegeben wird, der nicht durch einen Connect-Methodenaufrufe mit einer anderen Adressfamilie geändert oder überschrieben werden kann.</span><span class="sxs-lookup"><span data-stu-id="56b12-175">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-176">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-176">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-177">Wenn Sie diesen Code abgerufen haben, finden Sie eine ausführliche Beschreibung des Fehlers in der [API-Fehlercode Dokumentation für Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) .</span><span class="sxs-lookup"><span data-stu-id="56b12-177">Once you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-178">Im folgenden Codebeispiel wird gezeigt, wie ein UDP-Client erstellt wird, der in einer Multicast Gruppe verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-178">The following code example shows how to create a UDP client to use in a multicast group.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#3)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b12-179"><paramref name="family" /> ist nicht <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-179"><paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b12-180"><paramref name="port" /> ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" /> oder kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-180"><paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-181">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-181">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : string * int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostname"><span data-ttu-id="56b12-182">Der Name des Remote-DNS-Hosts, zu dem die Verbindung hergestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-182">The name of the remote DNS host to which you intend to connect.</span></span></param>
        <param name="port"><span data-ttu-id="56b12-183">Die Nummer des Remoteanschlusses, mit dem die Verbindung hergestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-183">The remote port number to which you intend to connect.</span></span></param>
        <summary><span data-ttu-id="56b12-184">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse und richtet einen Standardremotehost ein.</span><span class="sxs-lookup"><span data-stu-id="56b12-184">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-185">Dieser Konstruktor initialisiert eine neue <xref:System.Net.Sockets.UdpClient> und richtet mithilfe der Parameter `hostname` und `port` einen Remote Host ein.</span><span class="sxs-lookup"><span data-stu-id="56b12-185">This constructor initializes a new <xref:System.Net.Sockets.UdpClient> and establishes a remote host using the `hostname` and `port` parameters.</span></span> <span data-ttu-id="56b12-186">Das Einrichten eines Standard Remote Hosts ist optional.</span><span class="sxs-lookup"><span data-stu-id="56b12-186">Establishing a default remote host is optional.</span></span> <span data-ttu-id="56b12-187">Wenn Sie diesen Konstruktor verwenden, müssen Sie keinen Remote Host in jedem aufzurufenden <xref:System.Net.Sockets.UdpClient.Send%2A> Methode angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-187">If you use this constructor, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="56b12-188">Wenn Sie einen Standard-Remote Host angeben, werden Sie nur auf diesen Host beschränkt.</span><span class="sxs-lookup"><span data-stu-id="56b12-188">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="56b12-189">Sie können den Standard-Remote Host jederzeit ändern, indem Sie die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-189">You can change the default remote host at any time by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="56b12-190">Verwenden Sie diesen Konstruktor nicht, wenn Sie in der <xref:System.Net.Sockets.UdpClient.Send%2A>-Methode einen Remote Host angeben möchten.</span><span class="sxs-lookup"><span data-stu-id="56b12-190">If you want to specify a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, do not use this constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-191">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-191">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-192">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-192">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-193">Im folgenden Beispiel wird veranschaulicht, wie eine Instanz der <xref:System.Net.Sockets.UdpClient>-Klasse mit einem Hostnamen und einer Portnummer erstellt wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-193">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-194"><paramref name="hostname" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-194"><paramref name="hostname" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b12-195"><paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-195"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-196">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-196">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.UdpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b12-197">Ruft einen Wert ab, der angibt, ob ein Standardremotehost eingerichtet wurde, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-197">Gets or sets a value indicating whether a default remote host has been established.</span></span></summary>
        <value><span data-ttu-id="56b12-198"><see langword="true" />, wenn die Verbindung aktiviert ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-198"><see langword="true" /> if a connection is active; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-199">Klassen, die von <xref:System.Net.Sockets.UdpClient> abgeleitet werden, können diese Eigenschaft verwenden, um zu bestimmen, ob ein Standard-Remote Host eingerichtet wurde.</span><span class="sxs-lookup"><span data-stu-id="56b12-199">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to determine if a default remote host has been established.</span></span> <span data-ttu-id="56b12-200">Sie können einen Standard-Remote Host einrichten, indem Sie den entsprechenden Konstruktor verwenden oder die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-200">You can establish a default remote host by using the appropriate constructor or by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="56b12-201">Wenn Sie einen Standard-Remote Host einrichten, können Sie keinen Remote Host für den <xref:System.Net.Sockets.UdpClient.Send%2A>-Befehl angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-201">If you do establish a default remote host, you cannot specify a remote host in your call to <xref:System.Net.Sockets.UdpClient.Send%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.UdpClient" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="udpClient.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="allowed"><span data-ttu-id="56b12-202">Ein boolescher Wert, der angibt, ob die NAT-Überquerung aktiviert oder deaktiviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-202">A Boolean value that specifies whether to enable or disable NAT traversal.</span></span></param>
        <summary><span data-ttu-id="56b12-203">Aktiviert oder deaktiviert die NAT-Überquerung (Netzwerkadressenübersetzung) für eine <see cref="T:System.Net.Sockets.UdpClient" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="56b12-203">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-204">Die <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A>-Methode wird verwendet, um den NAT-Durchlauf für eine <xref:System.Net.Sockets.UdpClient> Instanz zu aktivieren oder zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="56b12-204">The <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span> <span data-ttu-id="56b12-205">NAT-Durchlauf kann mithilfe von Teredo, IPv6-zu-IPv4 oder einem ISATAP-Tunnel bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-205">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="56b12-206">Wenn der `allowed`-Parameter false ist, wird die <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel>-Option für den zugeordneten Socket auf <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>festgelegt.</span><span class="sxs-lookup"><span data-stu-id="56b12-206">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="56b12-207">Dadurch wird der NAT-Durchlauf für eine <xref:System.Net.Sockets.UdpClient> Instanz explizit deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="56b12-207">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span>  
  
 <span data-ttu-id="56b12-208">Wenn der `allowed`-Parameter true ist, wird die <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel>-Option für den zugeordneten Socket auf <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>festgelegt.</span><span class="sxs-lookup"><span data-stu-id="56b12-208">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="56b12-209">Dies kann die NAT-Überquerung für eine <xref:System.Net.Sockets.UdpClient> abhängig von Firewallregeln auf dem System ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="56b12-209">This may allow NAT traversal for a <xref:System.Net.Sockets.UdpClient> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="56b12-210">Eine Teredo-Adresse ist eine IPv6-Adresse mit dem Präfix 2001::/32.</span><span class="sxs-lookup"><span data-stu-id="56b12-210">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="56b12-211">Teredo-Adressen können über die normale DNS-Namensauflösung zurückgegeben oder als eine IPv6-Adresse aufgezählt werden, die einer lokalen Schnittstelle zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-211">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.UdpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b12-212">Ruft die vom Netzwerk empfangene Datenmenge ab, die gelesen werden kann.</span><span class="sxs-lookup"><span data-stu-id="56b12-212">Gets the amount of data received from the network that is available to read.</span></span></summary>
        <value><span data-ttu-id="56b12-213">Die Anzahl der vom Netzwerk empfangenen Datenbytes.</span><span class="sxs-lookup"><span data-stu-id="56b12-213">The number of bytes of data received from the network.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-214">Mit der <xref:System.Net.Sockets.UdpClient.Available%2A>-Eigenschaft wird festgelegt, wie viele Daten im Netzwerk Puffer zum Lesen in die Warteschlange eingereiht werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-214">The <xref:System.Net.Sockets.UdpClient.Available%2A> property is used to determine the amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="56b12-215">Wenn Daten verfügbar sind, wenden Sie <xref:System.Net.Sockets.NetworkStream.Read%2A> an, um die Daten abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-215">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="56b12-216">Wenn keine Daten verfügbar sind, gibt die <xref:System.Net.Sockets.UdpClient.Available%2A>-Eigenschaft 0 (null) zurück.</span><span class="sxs-lookup"><span data-stu-id="56b12-216">If no data is available, the <xref:System.Net.Sockets.UdpClient.Available%2A> property returns 0.</span></span>  
  
 <span data-ttu-id="56b12-217">Wenn die Verbindung vom Remote Host heruntergefahren oder beendet wird, wird von der <xref:System.Net.Sockets.UdpClient.Available%2A>-Eigenschaft eine <xref:System.Net.Sockets.SocketException>ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="56b12-217">If the remote host shuts down or closes the connection, the <xref:System.Net.Sockets.UdpClient.Available%2A> property throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-218">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen. eine ausführliche Beschreibung des Fehlers finden Sie in der [API-Fehlercode Dokumentation von Windows Sockets Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) .</span><span class="sxs-lookup"><span data-stu-id="56b12-218">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-219">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Net.Sockets.UdpClient.Available%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="56b12-219">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-220">Beim Zugriff auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-220">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-221">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-221">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginReceive (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="requestCallback"><span data-ttu-id="56b12-222">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-222">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="56b12-223">Ein benutzerdefiniertes Objekt, das Informationen über den Empfangsvorgang enthält.</span><span class="sxs-lookup"><span data-stu-id="56b12-223">A user-defined object that contains information about the receive operation.</span></span> <span data-ttu-id="56b12-224">Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-224">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="56b12-225">Empfängt asynchron ein Datagramm von einem Remotehost.</span><span class="sxs-lookup"><span data-stu-id="56b12-225">Receives a datagram from a remote host asynchronously.</span></span></summary>
        <returns><span data-ttu-id="56b12-226">Ein <see cref="T:System.IAsyncResult" />-Objekt, das auf den asynchronen Empfang verweist.</span><span class="sxs-lookup"><span data-stu-id="56b12-226">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-227">Der asynchrone <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> Vorgang muss abgeschlossen werden, indem die <xref:System.Net.Sockets.UdpClient.EndReceive%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-227">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndReceive%2A> method.</span></span> <span data-ttu-id="56b12-228">In der Regel wird die-Methode vom `requestCallback`-Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-228">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="56b12-229">Diese Methode wird nicht blockiert, bis der Vorgang beendet ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-229">This method does not block until the operation is complete.</span></span> <span data-ttu-id="56b12-230">Um zu blockieren, bis der Vorgang beendet ist, verwenden Sie die <xref:System.Net.Sockets.UdpClient.Receive%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="56b12-230">To block until the operation is complete, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="56b12-231">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Asynchrones Aufrufen synchroner Methoden](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="56b12-231">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-232">Im folgenden Codebeispiel wird <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> verwendet, um asynchron eine Serverantwort zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="56b12-232">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> to asynchronously receive a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b12-233">Sendet asynchron ein Datagramm an einen Remotehost.</span><span class="sxs-lookup"><span data-stu-id="56b12-233">Sends a datagram to a remote host asynchronously.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytes" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="56b12-234">Ein <see cref="T:System.Byte" />-Array, das die zu sendenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="56b12-234">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span></span></param>
        <param name="bytes"><span data-ttu-id="56b12-235">Die Anzahl von Bytes, die gesendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="56b12-235">The number of bytes to send.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="56b12-236">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-236">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="56b12-237">Ein benutzerdefiniertes Objekt, das Informationen zum Sendevorgang enthält.</span><span class="sxs-lookup"><span data-stu-id="56b12-237">A user-defined object that contains information about the send operation.</span></span> <span data-ttu-id="56b12-238">Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-238">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="56b12-239">Sendet asynchron ein Datagramm an einen Remotehost.</span><span class="sxs-lookup"><span data-stu-id="56b12-239">Sends a datagram to a remote host asynchronously.</span></span> <span data-ttu-id="56b12-240">Das Ziel wurde zuvor durch Aufruf von <see cref="Overload:System.Net.Sockets.UdpClient.Connect" /> angegeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-240">The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span></span></summary>
        <returns><span data-ttu-id="56b12-241">Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</span><span class="sxs-lookup"><span data-stu-id="56b12-241">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-242">Der asynchrone <xref:System.Net.Sockets.UdpClient.BeginSend%2A> Vorgang muss abgeschlossen werden, indem die <xref:System.Net.Sockets.UdpClient.EndSend%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-242">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="56b12-243">In der Regel wird die-Methode vom `requestCallback`-Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-243">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="56b12-244">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-244">This method does not block until the operation completes.</span></span> <span data-ttu-id="56b12-245">Um zu blockieren, bis der Vorgang beendet ist, verwenden Sie eine der <xref:System.Net.Sockets.UdpClient.Send%2A>-Methoden Überladungen.</span><span class="sxs-lookup"><span data-stu-id="56b12-245">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b12-246">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Asynchrones Aufrufen synchroner Methoden](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="56b12-246">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-247">Im folgenden Codebeispiel wird <xref:System.Net.Sockets.UdpClient.BeginSend%2A> verwendet, um asynchron eine Server Anforderung zu senden.</span><span class="sxs-lookup"><span data-stu-id="56b12-247">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, endPoint, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytes" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="56b12-248">Ein <see cref="T:System.Byte" />-Array, das die zu sendenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="56b12-248">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span></span></param>
        <param name="bytes"><span data-ttu-id="56b12-249">Die Anzahl von Bytes, die gesendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="56b12-249">The number of bytes to send.</span></span></param>
        <param name="endPoint"><span data-ttu-id="56b12-250">Der <see cref="T:System.Net.EndPoint" />, der das Ziel der Daten darstellt.</span><span class="sxs-lookup"><span data-stu-id="56b12-250">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="56b12-251">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-251">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="56b12-252">Ein benutzerdefiniertes Objekt, das Informationen zum Sendevorgang enthält.</span><span class="sxs-lookup"><span data-stu-id="56b12-252">A user-defined object that contains information about the send operation.</span></span> <span data-ttu-id="56b12-253">Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-253">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="56b12-254">Sendet asynchron ein Datagramm an ein Ziel.</span><span class="sxs-lookup"><span data-stu-id="56b12-254">Sends a datagram to a destination asynchronously.</span></span> <span data-ttu-id="56b12-255">Das Ziel wird durch einen <see cref="T:System.Net.EndPoint" />angegeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-255">The destination is specified by a <see cref="T:System.Net.EndPoint" />.</span></span></summary>
        <returns><span data-ttu-id="56b12-256">Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</span><span class="sxs-lookup"><span data-stu-id="56b12-256">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-257">Der asynchrone <xref:System.Net.Sockets.UdpClient.BeginSend%2A> Vorgang muss abgeschlossen werden, indem die <xref:System.Net.Sockets.UdpClient.EndSend%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-257">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="56b12-258">In der Regel wird die-Methode vom `requestCallback`-Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-258">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="56b12-259">Diese Methode wird nicht blockiert, bis der Vorgang beendet ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-259">This method does not block until the operation is complete.</span></span> <span data-ttu-id="56b12-260">Um zu blockieren, bis der Vorgang beendet ist, verwenden Sie eine der <xref:System.Net.Sockets.UdpClient.Send%2A>-Methoden Überladungen.</span><span class="sxs-lookup"><span data-stu-id="56b12-260">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b12-261">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Asynchrones Aufrufen synchroner Methoden](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="56b12-261">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-262">Im folgenden Codebeispiel wird <xref:System.Net.Sockets.UdpClient.BeginSend%2A> verwendet, um asynchron eine Server Anforderung zu senden.</span><span class="sxs-lookup"><span data-stu-id="56b12-262">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, string hostname, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, string hostname, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, hostname As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, hostname, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytes" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hostname" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="port" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" Index="4" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="state" Type="System.Object" Index="5" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="56b12-263">Ein <see cref="T:System.Byte" />-Array, das die zu sendenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="56b12-263">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span></span></param>
        <param name="bytes"><span data-ttu-id="56b12-264">Die Anzahl von Bytes, die gesendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="56b12-264">The number of bytes to send.</span></span></param>
        <param name="hostname"><span data-ttu-id="56b12-265">Der Zielhost.</span><span class="sxs-lookup"><span data-stu-id="56b12-265">The destination host.</span></span></param>
        <param name="port"><span data-ttu-id="56b12-266">Die Zielanschlussnummer.</span><span class="sxs-lookup"><span data-stu-id="56b12-266">The destination port number.</span></span></param>
        <param name="requestCallback"><span data-ttu-id="56b12-267">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-267">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="56b12-268">Ein benutzerdefiniertes Objekt, das Informationen zum Sendevorgang enthält.</span><span class="sxs-lookup"><span data-stu-id="56b12-268">A user-defined object that contains information about the send operation.</span></span> <span data-ttu-id="56b12-269">Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-269">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="56b12-270">Sendet asynchron ein Datagramm an ein Ziel.</span><span class="sxs-lookup"><span data-stu-id="56b12-270">Sends a datagram to a destination asynchronously.</span></span> <span data-ttu-id="56b12-271">Das Ziel wird durch einen Hostnamen und eine Anschlussnummer angegeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-271">The destination is specified by the host name and port number.</span></span></summary>
        <returns><span data-ttu-id="56b12-272">Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</span><span class="sxs-lookup"><span data-stu-id="56b12-272">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-273">Der asynchrone <xref:System.Net.Sockets.UdpClient.BeginSend%2A> Vorgang muss abgeschlossen werden, indem die <xref:System.Net.Sockets.UdpClient.EndSend%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-273">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="56b12-274">In der Regel wird die-Methode vom `requestCallback`-Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-274">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="56b12-275">Diese Methode wird nicht blockiert, bis der Vorgang beendet ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-275">This method does not block until the operation is complete.</span></span> <span data-ttu-id="56b12-276">Um zu blockieren, bis der Vorgang beendet ist, verwenden Sie eine der <xref:System.Net.Sockets.UdpClient.Send%2A>-Methoden Überladungen.</span><span class="sxs-lookup"><span data-stu-id="56b12-276">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="56b12-277">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Asynchrones Aufrufen synchroner Methoden](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="56b12-277">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-278">Im folgenden Codebeispiel wird <xref:System.Net.Sockets.UdpClient.BeginSend%2A> verwendet, um asynchron eine Server Anforderung zu senden.</span><span class="sxs-lookup"><span data-stu-id="56b12-278">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.UdpClient.Client" />
      <MemberSignature Language="C#" Value="protected System.Net.Sockets.Socket Client { get; set; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected Property Client As Socket" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b12-279">Ruft den zugrunde liegenden Netzwerk-<see cref="T:System.Net.Sockets.Socket" /> ab oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-279">Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="56b12-280">Der zugrunde liegende Netzwerk-<see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-280">The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-281"><xref:System.Net.Sockets.UdpClient> erstellt eine <xref:System.Net.Sockets.Socket>, die zum Senden und empfangen von Daten über ein Netzwerk verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-281"><xref:System.Net.Sockets.UdpClient> creates a <xref:System.Net.Sockets.Socket> used to send and receive data over a network.</span></span> <span data-ttu-id="56b12-282">Klassen, die von <xref:System.Net.Sockets.UdpClient> abgeleitet werden, können diese Eigenschaft verwenden, um diese <xref:System.Net.Sockets.Socket>zu erhalten oder festzulegen.</span><span class="sxs-lookup"><span data-stu-id="56b12-282">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="56b12-283">Verwenden Sie die zugrunde liegende <xref:System.Net.Sockets.Socket>, die von <xref:System.Net.Sockets.UdpClient.Client%2A> zurückgegeben werden, wenn der Zugriff über den von <xref:System.Net.Sockets.UdpClient> bereitgestellten hinaus</span><span class="sxs-lookup"><span data-stu-id="56b12-283">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.UdpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.UdpClient> provides.</span></span> <span data-ttu-id="56b12-284">Sie können auch <xref:System.Net.Sockets.UdpClient.Client%2A> verwenden, um die zugrunde liegende <xref:System.Net.Sockets.Socket> auf eine vorhandene <xref:System.Net.Sockets.Socket>festzulegen.</span><span class="sxs-lookup"><span data-stu-id="56b12-284">You can also use <xref:System.Net.Sockets.UdpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="56b12-285">Dies ist hilfreich, wenn Sie die Einfachheit der <xref:System.Net.Sockets.UdpClient> mithilfe einer bereits vorhandenen <xref:System.Net.Sockets.Socket>nutzen möchten.</span><span class="sxs-lookup"><span data-stu-id="56b12-285">This is useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.UdpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-286">Im folgenden Beispiel wird die Verwendung der <xref:System.Net.Sockets.UdpClient.Client%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="56b12-286">The following example demonstrates the use of the <xref:System.Net.Sockets.UdpClient.Client%2A> property.</span></span> <span data-ttu-id="56b12-287">In diesem Beispiel ist Broadcasting für die zugrunde liegende <xref:System.Net.Sockets.Socket>aktiviert.</span><span class="sxs-lookup"><span data-stu-id="56b12-287">In this example, broadcasting is enabled for the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="udpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56b12-288">Schließt die UDP-Verbindung.</span><span class="sxs-lookup"><span data-stu-id="56b12-288">Closes the UDP connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-289">Der <xref:System.Net.Sockets.UdpClient.Close%2A> deaktiviert die zugrunde liegende <xref:System.Net.Sockets.Socket> und gibt alle verwalteten und nicht verwalteten Ressourcen frei, die mit dem <xref:System.Net.Sockets.UdpClient>verknüpft sind.</span><span class="sxs-lookup"><span data-stu-id="56b12-289">The <xref:System.Net.Sockets.UdpClient.Close%2A> disables the underlying <xref:System.Net.Sockets.Socket> and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.UdpClient>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-290">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-290">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-291">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-291">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-292">Im folgenden Beispiel wird veranschaulicht, wie ein <xref:System.Net.Sockets.UdpClient> durch Aufrufen der <xref:System.Net.Sockets.UdpClient.Close%2A>-Methode geschlossen wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-292">The following example demonstrates closing a <xref:System.Net.Sockets.UdpClient> by calling the <xref:System.Net.Sockets.UdpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-293">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-293">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b12-294">Richtet einen Standardremotehost ein.</span><span class="sxs-lookup"><span data-stu-id="56b12-294">Establishes a default remote host.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (endPoint As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="udpClient.Connect endPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="endPoint"><span data-ttu-id="56b12-295">Ein <see cref="T:System.Net.IPEndPoint" />, der den Netzwerkendpunkt angibt, an den Daten gesendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="56b12-295">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data.</span></span></param>
        <summary><span data-ttu-id="56b12-296">Richtet mit dem angegebenen Netzwerkendpunkt einen Standardremotehost ein.</span><span class="sxs-lookup"><span data-stu-id="56b12-296">Establishes a default remote host using the specified network endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-297">Mit der <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode wird ein Standard-Remote Host mit dem im `endPoint`-Parameter angegebenen Wert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="56b12-297">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the value specified in the `endPoint` parameter.</span></span> <span data-ttu-id="56b12-298">Nach der Einrichtung müssen Sie in jedem aufzurufenden <xref:System.Net.Sockets.UdpClient.Send%2A> Methode keinen Remote Host angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-298">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="56b12-299">Das Einrichten eines Standard Remote Hosts ist optional.</span><span class="sxs-lookup"><span data-stu-id="56b12-299">Establishing a default remote host is optional.</span></span> <span data-ttu-id="56b12-300">Wenn Sie einen Standard-Remote Host angeben, werden Sie nur auf diesen Host beschränkt.</span><span class="sxs-lookup"><span data-stu-id="56b12-300">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="56b12-301">Wenn Sie Datagramme an einen anderen Remote Host senden möchten, müssen Sie einen weiteren Rückruf für die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode durchführen oder eine weitere <xref:System.Net.Sockets.UdpClient> ohne Standard-Remote Host erstellen.</span><span class="sxs-lookup"><span data-stu-id="56b12-301">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="56b12-302">Wenn Sie einen Standard-Remote Host eingerichtet haben und Sie auch einen Remote Host für den <xref:System.Net.Sockets.UdpClient.Send%2A>-Methode bereitstellen, lösen <xref:System.Net.Sockets.UdpClient.Send%2A> eine <xref:System.Net.Sockets.SocketException>aus.</span><span class="sxs-lookup"><span data-stu-id="56b12-302">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="56b12-303">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-303">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-304">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-304">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="56b12-305">Wenn Sie die <xref:System.Net.Sockets.Socket.Connect%2A>-Methode aufzurufen, werden alle Datagramme verworfen, die von einer anderen Adresse als der angegebenen Standardadresse eintreffen.</span><span class="sxs-lookup"><span data-stu-id="56b12-305">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="56b12-306">Sie können den Standard-Remote Host nicht mithilfe dieser Methode auf eine Broadcast Adresse festlegen, es sei denn, Sie erben von <xref:System.Net.Sockets.UdpClient>, verwenden die Client Methode zum Abrufen des zugrunde liegenden <xref:System.Net.Sockets.Socket>und legen die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-306">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the Client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="56b12-307">Sie können jedoch Daten an die Standard Broadcast Adresse 255.255.255.255 übertragen, wenn Sie <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in Ihrem aufzurufenden <xref:System.Net.Sockets.UdpClient.Send%2A> Methode angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-307">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="56b12-308">Wenn Ihre Anwendung eine bessere Kontrolle über Broadcast Adressen erfordert, können Sie auch auf die <xref:System.Net.Sockets.Socket>-Klasse zurückgreifen.</span><span class="sxs-lookup"><span data-stu-id="56b12-308">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-309">Da das UDP-Protokoll verbindungslose ist, wird die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="56b12-309">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="56b12-310">Nennen Sie die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode nicht, wenn Sie beabsichtigen, multicasted Datagramme zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="56b12-310">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-311">Im folgenden Beispiel wird ein-<xref:System.Net.IPEndPoint> verwendet, um einen Standard-Remote Host einzurichten.</span><span class="sxs-lookup"><span data-stu-id="56b12-311">The following example uses an <xref:System.Net.IPEndPoint> to establish a default remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-312">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-312">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-313"><paramref name="endPoint" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-313"><paramref name="endPoint" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-314">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-314">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ addr, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.Connect (addr, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="addr"><span data-ttu-id="56b12-315">Die <see cref="T:System.Net.IPAddress" /> des Remotehosts, an die Daten gesendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="56b12-315">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data.</span></span></param>
        <param name="port"><span data-ttu-id="56b12-316">Die Anschlussnummer, an die Daten gesendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="56b12-316">The port number to which you intend send data.</span></span></param>
        <summary><span data-ttu-id="56b12-317">Richtet einen Standardremotehost mithilfe der angegebenen IP-Adresse und Anschlussnummer ein.</span><span class="sxs-lookup"><span data-stu-id="56b12-317">Establishes a default remote host using the specified IP address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-318">Die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode richtet einen Standard Remote Host mithilfe der Werte ein, die in den Parametern `addr` und `port` angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-318">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `addr` and `port` parameters.</span></span> <span data-ttu-id="56b12-319">Nach der Einrichtung müssen Sie in jedem aufzurufenden <xref:System.Net.Sockets.UdpClient.Send%2A> Methode keinen Remote Host angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-319">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="56b12-320">Das Einrichten eines Standard Remote Hosts ist optional.</span><span class="sxs-lookup"><span data-stu-id="56b12-320">Establishing a default remote host is optional.</span></span> <span data-ttu-id="56b12-321">Wenn Sie einen Standard-Remote Host angeben, werden Sie nur auf diesen Host beschränkt.</span><span class="sxs-lookup"><span data-stu-id="56b12-321">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="56b12-322">Wenn Sie Datagramme an einen anderen Remote Host senden möchten, müssen Sie einen weiteren Rückruf für die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode durchführen oder eine weitere <xref:System.Net.Sockets.UdpClient> ohne Standard-Remote Host erstellen.</span><span class="sxs-lookup"><span data-stu-id="56b12-322">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="56b12-323">Wenn Sie einen Standard-Remote Host eingerichtet haben und Sie auch einen Remote Host für den <xref:System.Net.Sockets.UdpClient.Send%2A>-Methode bereitstellen, lösen <xref:System.Net.Sockets.UdpClient.Send%2A> eine <xref:System.Net.Sockets.SocketException>aus.</span><span class="sxs-lookup"><span data-stu-id="56b12-323">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="56b12-324">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-324">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-325">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-325">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="56b12-326">Wenn Sie die <xref:System.Net.Sockets.Socket.Connect%2A>-Methode aufzurufen, werden alle Datagramme verworfen, die von einer anderen Adresse als der angegebenen Standardadresse eintreffen.</span><span class="sxs-lookup"><span data-stu-id="56b12-326">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="56b12-327">Sie können den Standard-Remote Host nicht mithilfe dieser Methode auf eine Broadcast Adresse festlegen, es sei denn, Sie erben von <xref:System.Net.Sockets.UdpClient>, verwenden die Client Methode zum Abrufen des zugrunde liegenden <xref:System.Net.Sockets.Socket>und legen die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-327">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="56b12-328">Sie können jedoch Daten an die Standard Broadcast Adresse 255.255.255.255 übertragen, wenn Sie <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in Ihrem aufzurufenden <xref:System.Net.Sockets.UdpClient.Send%2A> Methode angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-328">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="56b12-329">Wenn Ihre Anwendung eine bessere Kontrolle über Broadcast Adressen erfordert, können Sie auch auf die <xref:System.Net.Sockets.Socket>-Klasse zurückgreifen.</span><span class="sxs-lookup"><span data-stu-id="56b12-329">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-330">Da das UDP-Protokoll verbindungslose ist, wird die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="56b12-330">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="56b12-331">Nennen Sie die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode nicht, wenn Sie beabsichtigen, multicasted Datagramme zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="56b12-331">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-332">Im folgenden Beispiel wird eine IP-Adresse und eine Portnummer verwendet, um eine Verbindung mit einem Remote Host herzustellen.</span><span class="sxs-lookup"><span data-stu-id="56b12-332">The following example uses an IP address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-333">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-333"><see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-334"><paramref name="addr" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-334"><paramref name="addr" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b12-335"><paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-335"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-336">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-336">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="udpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="port" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="hostname"><span data-ttu-id="56b12-337">Der DNS-Name des Remotehosts, an den Daten gesendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="56b12-337">The DNS name of the remote host to which you intend send data.</span></span></param>
        <param name="port"><span data-ttu-id="56b12-338">Die Anschlussnummer auf dem Remotehost, an den Daten gesendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="56b12-338">The port number on the remote host to which you intend to send data.</span></span></param>
        <summary><span data-ttu-id="56b12-339">Richtet einen Standardremotehost mit dem angegebenen Hostnamen und der Anschlussnummer ein.</span><span class="sxs-lookup"><span data-stu-id="56b12-339">Establishes a default remote host using the specified host name and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-340">Die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode richtet einen Standard Remote Host mithilfe der Werte ein, die in den Parametern `port` und `hostname` angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-340">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `port` and `hostname` parameters.</span></span> <span data-ttu-id="56b12-341">Nach der Einrichtung müssen Sie in jedem aufzurufenden <xref:System.Net.Sockets.UdpClient.Send%2A> Methode keinen Remote Host angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-341">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="56b12-342">Das Einrichten eines Standard Remote Hosts ist optional.</span><span class="sxs-lookup"><span data-stu-id="56b12-342">Establishing a default remote host is optional.</span></span> <span data-ttu-id="56b12-343">Wenn Sie einen Standard-Remote Host angeben, werden Sie nur auf diesen Host beschränkt.</span><span class="sxs-lookup"><span data-stu-id="56b12-343">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="56b12-344">Wenn Sie Datagramme an einen anderen Remote Host senden möchten, müssen Sie einen weiteren Rückruf für die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode durchführen oder eine weitere <xref:System.Net.Sockets.UdpClient> ohne Standard-Remote Host erstellen.</span><span class="sxs-lookup"><span data-stu-id="56b12-344">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span>  
  
 <span data-ttu-id="56b12-345">Wenn Sie einen Standard-Remote Host eingerichtet haben und Sie auch einen Remote Host für den <xref:System.Net.Sockets.UdpClient.Send%2A>-Methode bereitstellen, lösen <xref:System.Net.Sockets.UdpClient.Send%2A> eine <xref:System.Net.Sockets.SocketException>aus.</span><span class="sxs-lookup"><span data-stu-id="56b12-345">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="56b12-346">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-346">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-347">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-347">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="56b12-348">Wenn Sie die <xref:System.Net.Sockets.Socket.Connect%2A>-Methode aufzurufen, werden alle Datagramme verworfen, die von einer anderen Adresse als der angegebenen Standardadresse eintreffen.</span><span class="sxs-lookup"><span data-stu-id="56b12-348">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="56b12-349">Sie können den Standard-Remote Host nicht mithilfe dieser Methode auf eine Broadcast Adresse festlegen, es sei denn, Sie erben von <xref:System.Net.Sockets.UdpClient>, verwenden die Client Methode zum Abrufen des zugrunde liegenden <xref:System.Net.Sockets.Socket>und legen die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-349">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="56b12-350">Sie können jedoch Daten an die Standard Broadcast Adresse 255.255.255.255 übertragen, wenn Sie <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in Ihrem aufzurufenden <xref:System.Net.Sockets.UdpClient.Send%2A> Methode angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-350">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="56b12-351">Wenn Ihre Anwendung eine bessere Kontrolle über Broadcast Adressen erfordert, können Sie auch auf die <xref:System.Net.Sockets.Socket>-Klasse zurückgreifen.</span><span class="sxs-lookup"><span data-stu-id="56b12-351">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-352">Da das UDP-Protokoll verbindungslose ist, wird die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="56b12-352">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="56b12-353">Nennen Sie die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode nicht, wenn Sie beabsichtigen, multicasted Datagramme zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="56b12-353">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-354">Im folgenden Beispiel wird der Hostname und die Portnummer verwendet, um eine Verbindung mit einem Remote Host herzustellen.</span><span class="sxs-lookup"><span data-stu-id="56b12-354">The following example uses the host name and port number to connect to a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-355">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-355">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b12-356"><paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-356"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-357">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-357">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56b12-358">Gibt die vom <see cref="T:System.Net.Sockets.UdpClient" /> verwendeten verwalteten und nicht verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="56b12-358">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="udpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="disposing"><span data-ttu-id="56b12-359"><see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-359"><see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span></span></param>
        <summary><span data-ttu-id="56b12-360">Gibt die von <see cref="T:System.Net.Sockets.UdpClient" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="56b12-360">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-361">Diese Methode wird von der öffentlichen `Dispose()`-Methode und der <xref:System.Object.Finalize%2A>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-361">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="56b12-362">`Dispose()` ruft die geschützte `Dispose(Boolean)`-Methode auf, wobei der `disposing`-Parameter auf `true` festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-362">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="56b12-363"><xref:System.Object.Finalize%2A> ruft `Dispose` auf, wenn `disposing` auf `false` festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-363"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="56b12-364">Wenn der Parameter "`disposing`" den Wert true hat, gibt diese Methode alle Ressourcen frei, die von verwalteten Objekten gespeichert werden, auf die dieser <xref:System.Net.Sockets.UdpClient> verweist.</span><span class="sxs-lookup"><span data-stu-id="56b12-364">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.UdpClient> references.</span></span> <span data-ttu-id="56b12-365">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-365">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="56b12-366">
            <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-366">
            <see langword="Dispose" /> can be called multiple times by other objects.</span></span> <span data-ttu-id="56b12-367">Wenn Sie <see langword="Dispose(Boolean)" /> überschreiben, achten Sie darauf, nicht auf Objekte zu verweisen, die zuvor in einem früheren <see langword="Dispose" />-aufrufenen aufgerufen wurden.</span><span class="sxs-lookup"><span data-stu-id="56b12-367">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span></span> <span data-ttu-id="56b12-368">Weitere Informationen zum Implementieren von <see langword="Dispose(Boolean)" />finden Sie unter [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="56b12-368">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>  
  
<span data-ttu-id="56b12-369">Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und überschreiben [der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span><span class="sxs-lookup"><span data-stu-id="56b12-369">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.Sockets.UdpClient.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b12-370">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.UdpClient" /> die Fragmentierung von IP (Internet Protocol)-Datagrammen zulässt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-370">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</span></span></summary>
        <value><span data-ttu-id="56b12-371"><see langword="true" />, wenn der <see cref="T:System.Net.Sockets.UdpClient" /> die Datagrammfragmentierung zulässt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-371"><see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="56b12-372">Die Standardeinstellung ist <see langword="true" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-372">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-373">Datagramme erfordern eine Fragmentierung, wenn ihre Größe die maximale Übertragungseinheit (MTU) des Übertragungsmediums überschreitet.</span><span class="sxs-lookup"><span data-stu-id="56b12-373">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="56b12-374">Datagramme können vom sendenden Host oder von einem zwischen Router fragmentiert werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-374">Datagrams may be fragmented by the sending host or by an intermediate router.</span></span> <span data-ttu-id="56b12-375">Wenn ein Datagramm fragmentiert werden muss und die <xref:System.Net.Sockets.Socket.DontFragment%2A>-Option festgelegt ist, wird das Datagramm verworfen und eine ICMP (Internet Control Message Protocol)-Fehlermeldung an den Absender des Datagramms zurückgesendet.</span><span class="sxs-lookup"><span data-stu-id="56b12-375">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-376">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Net.Sockets.Socket.DontFragment%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="56b12-376">The following code example shows the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="56b12-377">Diese Eigenschaft kann nur für Sockets festgelegt werden, die das <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />-Flag oder das <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />-Flag verwenden.</span><span class="sxs-lookup"><span data-stu-id="56b12-377">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DropMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b12-378">Verlässt eine Multicastgruppe.</span><span class="sxs-lookup"><span data-stu-id="56b12-378">Leaves a multicast group.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.DropMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="56b12-379">Die <see cref="T:System.Net.IPAddress" /> der zu verlassenden Multicastgruppe.</span><span class="sxs-lookup"><span data-stu-id="56b12-379">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span></span></param>
        <summary><span data-ttu-id="56b12-380">Verlässt eine Multicastgruppe.</span><span class="sxs-lookup"><span data-stu-id="56b12-380">Leaves a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-381">Die <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>-Methode zieht die <xref:System.Net.Sockets.UdpClient> von der durch den angegebenen <xref:System.Net.IPAddress>identifizierten Multicast Gruppe ab.</span><span class="sxs-lookup"><span data-stu-id="56b12-381">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="56b12-382">Nach dem Aufrufen der <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>-Methode sendet der zugrunde liegende <xref:System.Net.Sockets.Socket> ein IGMP-Paket (Internet Group Management Protocol) an den Router, wobei der Router aus der Multicast Gruppe entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-382">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="56b12-383">Nachdem ein <xref:System.Net.Sockets.UdpClient> von der Gruppe abwehrt wurde, kann er keine an diese Gruppe gesendeten Datagramme mehr empfangen.</span><span class="sxs-lookup"><span data-stu-id="56b12-383">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-384">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-384">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-385">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-385">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-386">Im folgenden Beispiel wird veranschaulicht, wie eine Multicast Gruppe durch Bereitstellen einer Multicast Adresse gelöscht wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-386">The following example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-387">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-387">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-388">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-388">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b12-389">Die IP-Adresse ist nicht mit dem <see cref="T:System.Net.Sockets.AddressFamily" />-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</span><span class="sxs-lookup"><span data-stu-id="56b12-389">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-390"><paramref name="multicastAddr" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-390"><paramref name="multicastAddr" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr, int ifindex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr, int32 ifindex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress, ifindex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr, int ifindex);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.DropMulticastGroup (multicastAddr, ifindex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="ifindex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="56b12-391">Die <see cref="T:System.Net.IPAddress" /> der zu verlassenden Multicastgruppe.</span><span class="sxs-lookup"><span data-stu-id="56b12-391">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span></span></param>
        <param name="ifindex"><span data-ttu-id="56b12-392">Die lokale Adresse der zu verlassenden Multicastgruppe.</span><span class="sxs-lookup"><span data-stu-id="56b12-392">The local address of the multicast group to leave.</span></span></param>
        <summary><span data-ttu-id="56b12-393">Verlässt eine Multicastgruppe.</span><span class="sxs-lookup"><span data-stu-id="56b12-393">Leaves a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-394">Die <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>-Methode zieht die <xref:System.Net.Sockets.UdpClient> von der durch den angegebenen <xref:System.Net.IPAddress>identifizierten Multicast Gruppe ab.</span><span class="sxs-lookup"><span data-stu-id="56b12-394">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="56b12-395">Nach dem Aufrufen der <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>-Methode sendet der zugrunde liegende <xref:System.Net.Sockets.Socket> ein IGMP-Paket (Internet Group Management Protocol) an den Router, wobei der Router aus der Multicast Gruppe entfernt wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-395">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="56b12-396">Nachdem ein <xref:System.Net.Sockets.UdpClient> von der Gruppe abwehrt wurde, kann er keine an diese Gruppe gesendeten Datagramme mehr empfangen.</span><span class="sxs-lookup"><span data-stu-id="56b12-396">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-397">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden die <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> Eigenschaft, um den spezifischen Fehlercode zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="56b12-397">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="56b12-398">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation für Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-398">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-399">Im folgenden Codebeispiel wird veranschaulicht, wie eine Multicast Gruppe durch Bereitstellen einer Multicast Adresse gelöscht wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-399">The following code example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-400">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-400">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-401">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-401">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b12-402">Die IP-Adresse ist nicht mit dem <see cref="T:System.Net.Sockets.AddressFamily" />-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</span><span class="sxs-lookup"><span data-stu-id="56b12-402">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-403"><paramref name="multicastAddr" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-403"><paramref name="multicastAddr" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableBroadcast : bool with get, set" Usage="System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b12-404">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.UdpClient" /> Broadcastpakete senden oder empfangen darf, oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-404">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</span></span></summary>
        <value><span data-ttu-id="56b12-405"><see langword="true" />, wenn der <see cref="T:System.Net.Sockets.UdpClient" /> Broadcastpakete zulässt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-405"><see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="56b12-406">Die Standardeinstellung ist <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-406">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-407">Broadcasting ist auf ein bestimmtes Subnetz beschränkt.</span><span class="sxs-lookup"><span data-stu-id="56b12-407">Broadcasting is limited to a specific subnet.</span></span> <span data-ttu-id="56b12-408">Sie können an das lokale Subnetz übertragen, indem Sie ein Paket an 255.255.255.255 senden. oder Sie können die gesteuerte Broadcast Adresse verwenden, bei der es sich um den Netzwerk Teil einer IP-Adresse (Internet Protocol) handelt, bei dem alle Bits im Hostteil festgelegt sind.</span><span class="sxs-lookup"><span data-stu-id="56b12-408">You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="56b12-409">Wenn Ihre IP-Adresse beispielsweise 192.168.1.40 (eine Class C-Adresse mit dem Netzwerk Anteil als die ersten drei Oktette und der Hostteil das letzte Oktett) ist, lautet die gesteuerte Broadcast Adresse 192.168.1.255.</span><span class="sxs-lookup"><span data-stu-id="56b12-409">For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-410">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="56b12-410">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public byte[] EndReceive (IAsyncResult asyncResult, ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EndReceive(class System.IAsyncResult asyncResult, class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EndReceive(IAsyncResult ^ asyncResult, System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult * IPEndPoint -&gt; byte[]" Usage="udpClient.EndReceive (asyncResult, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" RefType="ref" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="56b12-411">Ein <see cref="T:System.IAsyncResult" />-Objekt, das durch einen Aufruf von <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-411">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span></span></param>
        <param name="remoteEP"><span data-ttu-id="56b12-412">Der angegebene Remoteendpunkt.</span><span class="sxs-lookup"><span data-stu-id="56b12-412">The specified remote endpoint.</span></span></param>
        <summary><span data-ttu-id="56b12-413">Beendet einen ausstehenden asynchronen Empfang.</span><span class="sxs-lookup"><span data-stu-id="56b12-413">Ends a pending asynchronous receive.</span></span></summary>
        <returns><span data-ttu-id="56b12-414">Bei Erfolg wird ein Array von Bytes zurückgegeben, dass Datagrammdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="56b12-414">If successful, an array of bytes that contains datagram data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-415">Diese Methode wird blockiert, bis der Vorgang beendet ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-415">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="56b12-416">Verwenden Sie die <xref:System.Net.Sockets.UdpClient.Receive%2A>-Methode, um diesen Vorgang synchron auszuführen.</span><span class="sxs-lookup"><span data-stu-id="56b12-416">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-417">Im folgenden Codebeispiel wird <xref:System.Net.Sockets.UdpClient.BeginSend%2A> verwendet, um einen asynchronen Empfang einer Serverantwort abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="56b12-417">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous receive of a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-418"><paramref name="asyncResult" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-418"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b12-419"><paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-419"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b12-420"><see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> wurde bereits für den asynchronen Lesevorgang aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-420"><see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-421">Fehler beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-421">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-422">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-422">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSend : IAsyncResult -&gt; int" Usage="udpClient.EndSend asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="56b12-423">Ein <see cref="T:System.IAsyncResult" />-Objekt, das durch einen Aufruf von <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /> zurückgegeben wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-423">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span></span></param>
        <summary><span data-ttu-id="56b12-424">Beendet einen ausstehenden asynchronen Sendevorgang.</span><span class="sxs-lookup"><span data-stu-id="56b12-424">Ends a pending asynchronous send.</span></span></summary>
        <returns><span data-ttu-id="56b12-425">Wenn erfolgreich, die Anzahl der an den <see cref="T:System.Net.Sockets.UdpClient" /> gesendeten Bytes.</span><span class="sxs-lookup"><span data-stu-id="56b12-425">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-426">Diese Methode wird blockiert, bis der Vorgang beendet ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-426">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="56b12-427">Verwenden Sie die <xref:System.Net.Sockets.UdpClient.Send%2A>-Methode, um diesen Vorgang synchron auszuführen.</span><span class="sxs-lookup"><span data-stu-id="56b12-427">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-428">Im folgenden Codebeispiel wird <xref:System.Net.Sockets.UdpClient.BeginSend%2A> verwendet, um einen asynchronen Sendevorgang einer Server Anforderung abzuschließen.</span><span class="sxs-lookup"><span data-stu-id="56b12-428">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous send of a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-429"><paramref name="asyncResult" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-429"><paramref name="asyncResult" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b12-430"><paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-430"><paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b12-431"><see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> wurde bereits für den asynchronen Lesevorgang aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-431"><see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-432">Fehler beim Zugriff auf den zugrunde liegenden Socket.</span><span class="sxs-lookup"><span data-stu-id="56b12-432">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-433">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-433">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b12-434">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.UdpClient" /> nur die Verwendung eines Port durch einen einzigen Client zulässt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-434">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</span></span></summary>
        <value><span data-ttu-id="56b12-435"><see langword="true" />, wenn der <see cref="T:System.Net.Sockets.UdpClient" /> die Verwendung eines bestimmten Anschlusses durch nur einen einzigen Client zulässt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-435"><see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="56b12-436">Für Windows Server 2003 und Windows XP Service Pack 2 oder höher ist der Standardwert <see langword="true" />, für alle anderen Versionen <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-436">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-437">Standardmäßig können mehrere Clients einen bestimmten Port verwenden. Allerdings kann nur einer der Clients Vorgänge für den Netzwerk Datenverkehr ausführen, der an den Port gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-437">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="56b12-438">Sie können die <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A>-Eigenschaft verwenden, um zu verhindern, dass mehrere Clients einen bestimmten Port verwenden.</span><span class="sxs-lookup"><span data-stu-id="56b12-438">You can use the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="56b12-439">Diese Eigenschaft muss festgelegt werden, bevor der zugrunde liegende Socket an einen ClientPort gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-439">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="56b12-440">Wenn Sie <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>oder <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>aufzurufen, wird der ClientPort als Nebeneffekt des Konstruktors gebunden, und Sie können anschließend die <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A>-Eigenschaft nicht festlegen.</span><span class="sxs-lookup"><span data-stu-id="56b12-440">If you call <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-441">Im folgenden Codebeispiel wird eine <xref:System.Net.Sockets.UdpClient>erstellt und die <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A>-Eigenschaft abgerufen und festgelegt.</span><span class="sxs-lookup"><span data-stu-id="56b12-441">The following code example creates a <xref:System.Net.Sockets.UdpClient>, and gets and sets the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-442">Fehler beim Zugriff auf den zugrunde liegenden Socket.</span><span class="sxs-lookup"><span data-stu-id="56b12-442">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-443">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-443">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!UdpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="udpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="JoinMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b12-444">Fügt einer Multicastgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="56b12-444">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="56b12-445">Die Multicast-<see cref="T:System.Net.IPAddress" /> der Gruppe, der Sie beitreten möchten.</span><span class="sxs-lookup"><span data-stu-id="56b12-445">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span></span></param>
        <summary><span data-ttu-id="56b12-446">Fügt einer Multicastgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="56b12-446">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-447">Die <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>-Methode abonniert die <xref:System.Net.Sockets.UdpClient> mithilfe der angegebenen <xref:System.Net.IPAddress>in eine Multicast Gruppe.</span><span class="sxs-lookup"><span data-stu-id="56b12-447">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="56b12-448">Nachdem die <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>-Methode aufgerufen wurde, sendet der zugrunde liegende <xref:System.Net.Sockets.Socket> ein IGMP-Paket (Internet Group Management Protocol) an den Router, der die Mitgliedschaft bei der Multicast Gruppe anfordert.</span><span class="sxs-lookup"><span data-stu-id="56b12-448">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="56b12-449">Der Multicast Adressbereich ist 224.0.0.0 zu 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="56b12-449">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="56b12-450">Wenn Sie eine Adresse außerhalb dieses Bereichs angeben oder der Router, an den die Anforderung gerichtet ist, nicht Multicast aktiviert ist, wird <xref:System.Net.Sockets.UdpClient> eine <xref:System.Net.Sockets.SocketException>auslösen.</span><span class="sxs-lookup"><span data-stu-id="56b12-450">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="56b12-451">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-451">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-452">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-452">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="56b12-453">Sobald die <xref:System.Net.Sockets.UdpClient> mit dem Router als Mitglied der Multicast Gruppe aufgelistet ist, kann Sie multicasted Datagramme empfangen, die an die angegebene <xref:System.Net.IPAddress>gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-453">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-454">Sie müssen die <xref:System.Net.Sockets.UdpClient> mit der Multicast Portnummer erstellen. Andernfalls sind Sie nicht in der Lage, multicasted Datagramme zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="56b12-454">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="56b12-455">Rufen Sie die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode nicht vor, bevor Sie die <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>-Methode aufrufen, oder die <xref:System.Net.Sockets.UdpClient.Receive%2A>-Methode funktioniert nicht.</span><span class="sxs-lookup"><span data-stu-id="56b12-455">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, or the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will not work.</span></span> <span data-ttu-id="56b12-456">Sie müssen nicht zu einer Multicast Gruppe gehören, um Datagramme an eine Multicast-IP-Adresse zu senden.</span><span class="sxs-lookup"><span data-stu-id="56b12-456">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="56b12-457">Vor dem beitreten zu einer Multicast Gruppe müssen Sie sicherstellen, dass der Socket an den Port oder Endpunkt gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-457">Before joining a multicast group, make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="56b12-458">Dazu rufen Sie einen der Konstruktoren auf, die einen Port oder einen Endpunkt als Parameter akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="56b12-458">You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</span></span>  
  
 <span data-ttu-id="56b12-459">Rufen Sie die <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>-Methode auf, und geben Sie den <xref:System.Net.IPAddress> der Gruppe an, von der Sie den Vorgang widerrufen möchten, um den Empfang von multicasted Datagramme zu verhindern.</span><span class="sxs-lookup"><span data-stu-id="56b12-459">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-460">Im Fall von IPv6 gibt es mehrere Multicast Adressbereiche, aus denen Sie auswählen können.</span><span class="sxs-lookup"><span data-stu-id="56b12-460">In the IPv6 case, there are several multicast address ranges you can choose from.</span></span> <span data-ttu-id="56b12-461">Weitere Informationen finden Sie in der IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="56b12-461">Please, refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-462">Sie können <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> auf einem <xref:System.Net.Sockets.UdpClient> nicht ohne einen bestimmten lokalen Port (d. h. mithilfe des <xref:System.Net.Sockets.UdpClient.%23ctor> oder <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> Konstruktors) aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-462">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-463">Im folgenden Codebeispiel wird veranschaulicht, wie eine Multicast Gruppe verknüpft wird, indem eine Multicast Adresse bereitgestellt wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-463">The following code example demonstrates how to join a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#1)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-464">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-464">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-465">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-465">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b12-466">Die IP-Adresse ist nicht mit dem <see cref="T:System.Net.Sockets.AddressFamily" />-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</span><span class="sxs-lookup"><span data-stu-id="56b12-466">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (int ifindex, System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(int32 ifindex, class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (ifindex As Integer, multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(int ifindex, System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : int * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (ifindex, multicastAddr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifindex" Type="System.Int32" />
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="ifindex"><span data-ttu-id="56b12-467">Der Schnittstellenindex, der der lokale IP-Adresse zugeordnet ist, an der die Multicastgruppe herzustellen ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-467">The interface index associated with the local IP address on which to join the multicast group.</span></span></param>
        <param name="multicastAddr"><span data-ttu-id="56b12-468">Die Multicast-<see cref="T:System.Net.IPAddress" /> der Gruppe, der Sie beitreten möchten.</span><span class="sxs-lookup"><span data-stu-id="56b12-468">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span></span></param>
        <summary><span data-ttu-id="56b12-469">Fügt einer Multicastgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="56b12-469">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-470">Vor dem beitreten zu einer Multicast Gruppe müssen Sie sicherstellen, dass der Socket an den Port oder Endpunkt gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-470">Before joining a multicast group, be sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="56b12-471">Hierzu können Sie einen der Konstruktoren aufrufen, der einen Port oder einen Endpunkt als Parameter akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="56b12-471">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
 <span data-ttu-id="56b12-472">Der `infindex`-Parameter wird verwendet, um eine Hardwareschnittstelle auf demselben Link zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="56b12-472">The `infindex` parameter is used to identify a hardware interface on the same link.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-473">Es gibt mehrere Multicast Adressbereiche, aus denen Sie auswählen können.</span><span class="sxs-lookup"><span data-stu-id="56b12-473">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="56b12-474">Weitere Informationen finden Sie in der IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="56b12-474">Refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-475">Sie können <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> auf einem <xref:System.Net.Sockets.UdpClient> nicht ohne einen bestimmten lokalen Port (d. h. mithilfe des <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> oder <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> Konstruktors) aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-475">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> constructor).</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#5)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-476">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-476">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-477">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-477">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, int timeToLive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, int32 timeToLive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, timeToLive As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, int timeToLive);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, timeToLive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="timeToLive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="56b12-478">Die <see cref="T:System.Net.IPAddress" /> der Multicastgruppe, der Sie beitreten möchten.</span><span class="sxs-lookup"><span data-stu-id="56b12-478">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join.</span></span></param>
        <param name="timeToLive"><span data-ttu-id="56b12-479">Die TTL, gemessen in Routerhops.</span><span class="sxs-lookup"><span data-stu-id="56b12-479">The Time to Live (TTL), measured in router hops.</span></span></param>
        <summary><span data-ttu-id="56b12-480">Fügt einer Multicasgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> mit angegebener Gültigkeitsdauer (TTL – Time To Live) hinzu.</span><span class="sxs-lookup"><span data-stu-id="56b12-480">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-481">Die <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>-Methode abonniert die <xref:System.Net.Sockets.UdpClient> mithilfe der angegebenen <xref:System.Net.IPAddress>in eine Multicast Gruppe.</span><span class="sxs-lookup"><span data-stu-id="56b12-481">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="56b12-482">Nachdem die <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>-Methode aufgerufen wurde, sendet der zugrunde liegende <xref:System.Net.Sockets.Socket> ein IGMP-Paket (Internet Group Management Protocol) an den Router, der die Mitgliedschaft bei der Multicast Gruppe anfordert.</span><span class="sxs-lookup"><span data-stu-id="56b12-482">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="56b12-483">Der Multicast Adressbereich ist 224.0.0.0 zu 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="56b12-483">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="56b12-484">Wenn Sie eine Adresse außerhalb dieses Bereichs angeben oder der Router, an den die Anforderung gerichtet ist, nicht Multicast aktiviert ist, wird <xref:System.Net.Sockets.UdpClient> eine <xref:System.Net.Sockets.SocketException>auslösen.</span><span class="sxs-lookup"><span data-stu-id="56b12-484">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="56b12-485">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-485">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-486">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-486">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="56b12-487">Der `timeToLive`-Parameter gibt an, wie viele Routerhops für ein multicasted Datagramm zugelassen werden, bevor Sie verworfen werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-487">The `timeToLive` parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</span></span> <span data-ttu-id="56b12-488">Sobald die <xref:System.Net.Sockets.UdpClient> mit dem Router als Mitglied der Multicast Gruppe aufgelistet ist, kann Sie multicasted Datagramme empfangen, die an die angegebene <xref:System.Net.IPAddress>gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-488">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-489">Sie müssen die <xref:System.Net.Sockets.UdpClient> mit der Multicast Portnummer erstellen, andernfalls können Sie keine multicasted-Datagramme empfangen.</span><span class="sxs-lookup"><span data-stu-id="56b12-489">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="56b12-490">Rufen Sie die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode nicht vor, bevor Sie die <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>-Methode aufrufen, oder die Receive-Methode funktioniert nicht.</span><span class="sxs-lookup"><span data-stu-id="56b12-490">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method or the receive method will not work.</span></span> <span data-ttu-id="56b12-491">Sie müssen nicht zu einer Multicast Gruppe gehören, um Datagramme an eine Multicast-IP-Adresse zu senden.</span><span class="sxs-lookup"><span data-stu-id="56b12-491">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="56b12-492">Stellen Sie vor dem beitreten zu einer Multicast Gruppe sicher, dass der Socket an den Port oder Endpunkt gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-492">Before joining a multicast group make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="56b12-493">Dies geschieht durch Aufrufen eines Konstruktors, der als Parameter einen Port oder einen Endpunkt akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="56b12-493">You do that by calling one of the constructors that accept as parameter a port or an endpoint.</span></span>  
  
 <span data-ttu-id="56b12-494">Rufen Sie die <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A>-Methode auf, und geben Sie den <xref:System.Net.IPAddress> der Gruppe an, von der Sie den Vorgang widerrufen möchten, um den Empfang von multicasted Datagramme zu verhindern.</span><span class="sxs-lookup"><span data-stu-id="56b12-494">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-495">Sie können <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> auf einem <xref:System.Net.Sockets.UdpClient> nicht ohne einen bestimmten lokalen Port (d. h. mithilfe des <xref:System.Net.Sockets.UdpClient.%23ctor> oder <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> Konstruktors) aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-495">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-496">Im folgenden Beispiel wird veranschaulicht, wie eine Multicast Gruppe verknüpft wird, indem zwei Parameter, eine Multicast Adresse und eine Zahl bereitgestellt werden, die die Gültigkeitsdauer darstellt.</span><span class="sxs-lookup"><span data-stu-id="56b12-496">The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="56b12-497">Die bereitgestellte TTL liegt nicht zwischen 0 und 255</span><span class="sxs-lookup"><span data-stu-id="56b12-497">The TTL provided is not between 0 and 255</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-498">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-498">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-499">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-499">An error occurred when accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-500"><paramref name="multicastAddr" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-500"><paramref name="multicastAddr" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="56b12-501">Die IP-Adresse ist nicht mit dem <see cref="T:System.Net.Sockets.AddressFamily" />-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</span><span class="sxs-lookup"><span data-stu-id="56b12-501">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, System.Net.IPAddress localAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, class System.Net.IPAddress localAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, localAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, System::Net::IPAddress ^ localAddress);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, localAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="localAddress" Type="System.Net.IPAddress" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="multicastAddr"><span data-ttu-id="56b12-502">Die Multicast-<see cref="T:System.Net.IPAddress" /> der Gruppe, der Sie beitreten möchten.</span><span class="sxs-lookup"><span data-stu-id="56b12-502">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span></span></param>
        <param name="localAddress"><span data-ttu-id="56b12-503">Die lokale <see cref="T:System.Net.IPAddress" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-503">The local <see cref="T:System.Net.IPAddress" />.</span></span></param>
        <summary><span data-ttu-id="56b12-504">Fügt einer Multicastgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> hinzu.</span><span class="sxs-lookup"><span data-stu-id="56b12-504">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-505">Bevor Sie einer Multicast Gruppe beitreten, müssen Sie sicherstellen, dass der Socket an den Port oder Endpunkt gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-505">Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="56b12-506">Hierzu können Sie einen der Konstruktoren aufrufen, der einen Port oder einen Endpunkt als Parameter akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="56b12-506">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-507">Es gibt mehrere Multicast Adressbereiche, aus denen Sie auswählen können.</span><span class="sxs-lookup"><span data-stu-id="56b12-507">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="56b12-508">Sie finden Sie in der IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="56b12-508">You can find them in the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-509">Sie können <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> auf einem <xref:System.Net.Sockets.UdpClient> nicht ohne einen bestimmten lokalen Port (d. h. mithilfe des <xref:System.Net.Sockets.UdpClient.%23ctor> oder <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> Konstruktors) aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-509">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-510">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A>-Methode veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="56b12-510">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.UdpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-511">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-511">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-512">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-512">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b12-513">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob ausgehende Multicastpakete an die sendende Anwendung übermittelt werden, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-513">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</span></span></summary>
        <value><span data-ttu-id="56b12-514"><see langword="true" />, wenn der <see cref="T:System.Net.Sockets.UdpClient" /> ausgehende Multicastpakete empfängt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-514"><see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-515">Multicast ist eine skalierbare Methode für die m:n-Kommunikation im Internet.</span><span class="sxs-lookup"><span data-stu-id="56b12-515">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="56b12-516">Wenn ein Prozess eine Multicast Adresse abonniert, werden alle von diesem Prozess gesendeten Pakete von jedem anderen Prozess empfangen, der die Multicast Adresse abonniert hat.</span><span class="sxs-lookup"><span data-stu-id="56b12-516">If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-517">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="56b12-517">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.UdpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public byte[] Receive (ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Receive(class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Receive(System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Receive : IPEndPoint -&gt; byte[]" Usage="udpClient.Receive remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" RefType="ref" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="remoteEP"><span data-ttu-id="56b12-518">Ein <see cref="T:System.Net.IPEndPoint" />, der den Remotehost darstellt, von dem die Daten gesendet wurden.</span><span class="sxs-lookup"><span data-stu-id="56b12-518">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent.</span></span></param>
        <summary><span data-ttu-id="56b12-519">Gibt ein von einem Remotehost gesendetes UDP-Datagramm zurück.</span><span class="sxs-lookup"><span data-stu-id="56b12-519">Returns a UDP datagram that was sent by a remote host.</span></span></summary>
        <returns><span data-ttu-id="56b12-520">Ein Array vom Typ <see cref="T:System.Byte" />, das Datagrammdaten enthält.</span><span class="sxs-lookup"><span data-stu-id="56b12-520">An array of type <see cref="T:System.Byte" /> that contains datagram data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-521">Die <xref:System.Net.Sockets.UdpClient.Receive%2A>-Methode wird blockiert, bis ein Datagramm von einem Remote Host eingeht.</span><span class="sxs-lookup"><span data-stu-id="56b12-521">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method will block until a datagram arrives from a remote host.</span></span> <span data-ttu-id="56b12-522">Wenn Daten verfügbar sind, liest die <xref:System.Net.Sockets.UdpClient.Receive%2A>-Methode das erste in die Warteschlange eingereihte Datagramm und gibt den Daten Anteil als Bytearray zurück.</span><span class="sxs-lookup"><span data-stu-id="56b12-522">When data is available, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will read the first enqueued datagram and return the data portion as a byte array.</span></span> <span data-ttu-id="56b12-523">Diese Methode füllt den `remoteEP`-Parameter mit dem <xref:System.Net.IPAddress> und der Portnummer des Absenders auf.</span><span class="sxs-lookup"><span data-stu-id="56b12-523">This method populates the `remoteEP` parameter with the <xref:System.Net.IPAddress> and port number of the sender.</span></span>  
  
 <span data-ttu-id="56b12-524">Wenn Sie einen Standard-Remote Host in der <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode angeben, akzeptiert die <xref:System.Net.Sockets.UdpClient.Receive%2A>-Methode nur Datagramme von diesem Host.</span><span class="sxs-lookup"><span data-stu-id="56b12-524">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will accept datagrams from that host only.</span></span> <span data-ttu-id="56b12-525">Alle anderen Datagramme werden verworfen.</span><span class="sxs-lookup"><span data-stu-id="56b12-525">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="56b12-526">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-526">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-527">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-527">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-528">Wenn Sie beabsichtigen, multicasted Datagramme zu empfangen, rufen Sie die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode nicht vor, bevor Sie die <xref:System.Net.Sockets.UdpClient.Receive%2A>-Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-528">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="56b12-529">Der <xref:System.Net.Sockets.UdpClient>, den Sie zum Empfangen von Datagrammen verwenden, muss mit der Multicast Portnummer erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-529">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-530">Das folgende Beispiel veranschaulicht die <xref:System.Net.Sockets.UdpClient.Receive%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="56b12-530">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="56b12-531">Die <xref:System.Net.Sockets.UdpClient.Receive%2A>-Methode blockiert die Ausführung, bis eine Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="56b12-531">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until it receives a message.</span></span> <span data-ttu-id="56b12-532">Mithilfe der an <xref:System.Net.Sockets.UdpClient.Receive%2A>über gebenden <xref:System.Net.IPEndPoint> wird die Identität des antwortenden Hosts offengelegt.</span><span class="sxs-lookup"><span data-stu-id="56b12-532">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-533">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-533">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-534">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-534">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.ReceiveAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync () As Task(Of UdpReceiveResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::UdpReceiveResult&gt; ^ ReceiveAsync();" />
      <MemberSignature Language="F#" Value="member this.ReceiveAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;" Usage="udpClient.ReceiveAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56b12-535">Gibt ein von einem Remotehost gesendetes UDP-Datagramm asynchron zurück.</span><span class="sxs-lookup"><span data-stu-id="56b12-535">Returns a UDP datagram asynchronously that was sent by a remote host.</span></span></summary>
        <returns><span data-ttu-id="56b12-536">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="56b12-536">The task object representing the asynchronous operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-537">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="56b12-537">This operation will not block.</span></span> <span data-ttu-id="56b12-538">Der zurückgegebene <xref:System.Threading.Tasks.Task%601>>-Objekt wird nach dem Empfang des UDP-Pakets abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-538">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the UDP packet has been received.</span></span>  
  
 <span data-ttu-id="56b12-539">Wenn Sie einen Standard-Remote Host in der <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode angeben, akzeptiert diese Methode nur Datagramme von diesem Host.</span><span class="sxs-lookup"><span data-stu-id="56b12-539">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, this method will accept datagrams from that host only.</span></span> <span data-ttu-id="56b12-540">Alle anderen Datagramme werden verworfen.</span><span class="sxs-lookup"><span data-stu-id="56b12-540">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="56b12-541">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-541">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-542">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-542">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="56b12-543">Wenn Sie beabsichtigen, multicasted Datagramme zu empfangen, rufen Sie die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode nicht auf, bevor Sie diese Methode aufrufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-543">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling this method.</span></span> <span data-ttu-id="56b12-544">Der <xref:System.Net.Sockets.UdpClient>, den Sie zum Empfangen von Datagrammen verwenden, muss mit der Multicast Portnummer erstellt werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-544">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-545">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-545">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-546">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-546">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b12-547">Sendet ein UDP-Datagramm an einen Remotehost.</span><span class="sxs-lookup"><span data-stu-id="56b12-547">Sends a UDP datagram to a remote host.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int -&gt; int" Usage="udpClient.Send (dgram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytes" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dgram"><span data-ttu-id="56b12-548">Ein Array vom Typ <see cref="T:System.Byte" />, das das zu sendende UDP-Datagramm angibt, dargestellt als Bytearray.</span><span class="sxs-lookup"><span data-stu-id="56b12-548">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="56b12-549">Die Anzahl von Bytes im Datagramm.</span><span class="sxs-lookup"><span data-stu-id="56b12-549">The number of bytes in the datagram.</span></span></param>
        <summary><span data-ttu-id="56b12-550">Sendet ein UDP-Datagramm an einen Remotehost.</span><span class="sxs-lookup"><span data-stu-id="56b12-550">Sends a UDP datagram to a remote host.</span></span></summary>
        <returns><span data-ttu-id="56b12-551">Die Anzahl der gesendeten Bytes.</span><span class="sxs-lookup"><span data-stu-id="56b12-551">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-552">Diese Überladung sendet Datagramme an den Remote Host, der in der <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode festgelegt wurde, und gibt die Anzahl der gesendeten Bytes zurück.</span><span class="sxs-lookup"><span data-stu-id="56b12-552">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and returns the number of bytes sent.</span></span> <span data-ttu-id="56b12-553">Wenn Sie <xref:System.Net.Sockets.UdpClient.Connect%2A> vor dem Aufrufen dieser Überladung nicht aufrufen, löst die <xref:System.Net.Sockets.UdpClient.Send%2A>-Methode eine <xref:System.Net.Sockets.SocketException>aus.</span><span class="sxs-lookup"><span data-stu-id="56b12-553">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="56b12-554">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-554">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-555">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-555">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="56b12-556">Wenn Sie Datagramme an einen anderen Remote Host senden möchten, müssen Sie die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode abrufen und den gewünschten Remote Host angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-556">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="56b12-557">Verwenden Sie eine der anderen <xref:System.Net.Sockets.UdpClient.Send%2A> Methoden Überladungen, um Datagramme an eine Broadcast Adresse zu senden.</span><span class="sxs-lookup"><span data-stu-id="56b12-557">Use either of the other <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-558">Das folgende Beispiel veranschaulicht die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="56b12-558">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="56b12-559">Vor der Verwendung dieser Überladung muss ein Standard-Remote Host eingerichtet werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-559">You must establish a default remote host prior to using this overload.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-560"><paramref name="dgram" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-560"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b12-561">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</span><span class="sxs-lookup"><span data-stu-id="56b12-561">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-562">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-562">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-563">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-563">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * System.Net.IPEndPoint -&gt; int" Usage="udpClient.Send (dgram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytes" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dgram"><span data-ttu-id="56b12-564">Ein Array vom Typ <see cref="T:System.Byte" />, das das zu sendende UDP-Datagramm angibt, dargestellt als Bytearray.</span><span class="sxs-lookup"><span data-stu-id="56b12-564">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="56b12-565">Die Anzahl von Bytes im Datagramm.</span><span class="sxs-lookup"><span data-stu-id="56b12-565">The number of bytes in the datagram.</span></span></param>
        <param name="endPoint"><span data-ttu-id="56b12-566">Ein <see cref="T:System.Net.IPEndPoint" />, der den Host und den Anschluss darstellt, an die das Datagramm gesendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-566">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span></span></param>
        <summary><span data-ttu-id="56b12-567">Sendet ein UDP-Datagramm an den Host am angegebenen Remoteendpunkt.</span><span class="sxs-lookup"><span data-stu-id="56b12-567">Sends a UDP datagram to the host at the specified remote endpoint.</span></span></summary>
        <returns><span data-ttu-id="56b12-568">Die Anzahl der gesendeten Bytes.</span><span class="sxs-lookup"><span data-stu-id="56b12-568">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-569">Die <xref:System.Net.Sockets.UdpClient.Send%2A>-Methode sendet Datagramme an den angegebenen Endpunkt und gibt die Anzahl der erfolgreich gesendeten Bytes zurück.</span><span class="sxs-lookup"><span data-stu-id="56b12-569">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="56b12-570">Vor dem Aufrufen dieser Überladung müssen Sie zuerst einen <xref:System.Net.IPEndPoint> mithilfe der IP-Adresse und der Portnummer des Remote Hosts erstellen, an den die Datagramme übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-570">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="56b12-571">Sie können Datagramme an die Standard Broadcast Adresse 255.255.255.255 senden, indem Sie <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> für die <xref:System.Net.IPAddress.Address%2A>-Eigenschaft der <xref:System.Net.IPEndPoint>angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-571">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="56b12-572">Nachdem Sie diese <xref:System.Net.IPEndPoint>erstellt haben, übergeben Sie Sie als `endPoint`-Parameter an die <xref:System.Net.Sockets.UdpClient.Send%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="56b12-572">After you have created this <xref:System.Net.IPEndPoint>, pass it to the <xref:System.Net.Sockets.UdpClient.Send%2A> method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="56b12-573">Wenn Sie Datagramme an eine andere Broadcast Adresse senden möchten, verwenden Sie die <xref:System.Net.Sockets.UdpClient.Client%2A>-Methode, um die zugrunde liegende <xref:System.Net.Sockets.Socket>abzurufen, und legen Sie die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-573">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="56b12-574">Sie können auch die <xref:System.Net.Sockets.Socket>-Klasse wieder verwenden.</span><span class="sxs-lookup"><span data-stu-id="56b12-574">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-575">Geben Sie für diese Methode keinen `endPoint`-Parameter an, wenn Sie bereits einen Remote Host mit der <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode eingerichtet haben.</span><span class="sxs-lookup"><span data-stu-id="56b12-575">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="56b12-576">Wenn Sie dies tun, löst die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode eine <xref:System.Net.Sockets.SocketException>aus.</span><span class="sxs-lookup"><span data-stu-id="56b12-576">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="56b12-577">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-577">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-578">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-578">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-579">Das folgende Beispiel veranschaulicht die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="56b12-579">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="56b12-580">In diesem Beispiel wird ein <xref:System.Net.IPEndPoint> zum Angeben des Zielhosts verwendet.</span><span class="sxs-lookup"><span data-stu-id="56b12-580">This example uses an <xref:System.Net.IPEndPoint> to specify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-581"><paramref name="dgram" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-581"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b12-582">Der<see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</span><span class="sxs-lookup"><span data-stu-id="56b12-582"><see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-583">Der<see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-583"><see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-584">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-584">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, hostname As String, port As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * string * int -&gt; int" Usage="udpClient.Send (dgram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytes" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="hostname" Type="System.String" Index="2" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="port" Type="System.Int32" Index="3" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="dgram"><span data-ttu-id="56b12-585">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</span><span class="sxs-lookup"><span data-stu-id="56b12-585">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="56b12-586">Die Anzahl von Bytes im Datagramm.</span><span class="sxs-lookup"><span data-stu-id="56b12-586">The number of bytes in the datagram.</span></span></param>
        <param name="hostname"><span data-ttu-id="56b12-587">Der Name des Remotehosts, an den das Datagramm gesendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-587">The name of the remote host to which you intend to send the datagram.</span></span></param>
        <param name="port"><span data-ttu-id="56b12-588">Die Nummer des Remoteanschlusses, mit dem die Verbindung hergestellt werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-588">The remote port number with which you intend to communicate.</span></span></param>
        <summary><span data-ttu-id="56b12-589">Sendet ein UDP-Datagramm an einen angegebenen Anschluss auf einem angegebenen Remotehost.</span><span class="sxs-lookup"><span data-stu-id="56b12-589">Sends a UDP datagram to a specified port on a specified remote host.</span></span></summary>
        <returns><span data-ttu-id="56b12-590">Die Anzahl der gesendeten Bytes.</span><span class="sxs-lookup"><span data-stu-id="56b12-590">The number of bytes sent.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-591">Die <xref:System.Net.Sockets.UdpClient.Send%2A>-Methode sendet Datagramme an die Werte, die von den Parametern `hostname` und `port` angegeben werden, und gibt die Anzahl der erfolgreich gesendeten Bytes zurück.</span><span class="sxs-lookup"><span data-stu-id="56b12-591">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the values specified by the `hostname` and `port` parameters and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="56b12-592">Sie können Datagramme an die Standard Broadcast Adresse senden, indem Sie für den `hostname` Parameterwert "255.255.255.255" angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-592">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="56b12-593">Wenn Sie Datagramme an eine andere Broadcast Adresse senden möchten, verwenden Sie die <xref:System.Net.Sockets.UdpClient.Client%2A>-Methode, um die zugrunde liegende <xref:System.Net.Sockets.Socket>abzurufen, und legen Sie die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-593">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="56b12-594">Sie können auch die <xref:System.Net.Sockets.Socket>-Klasse wieder verwenden.</span><span class="sxs-lookup"><span data-stu-id="56b12-594">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="56b12-595">Geben Sie für diese Methode keinen Hostnamen oder keine Portnummer an, wenn Sie bereits einen Remote Host mit der <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode eingerichtet haben.</span><span class="sxs-lookup"><span data-stu-id="56b12-595">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="56b12-596">Wenn Sie dies tun, löst die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode eine <xref:System.Net.Sockets.SocketException>aus.</span><span class="sxs-lookup"><span data-stu-id="56b12-596">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="56b12-597">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-597">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-598">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-598">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-599">Das folgende Beispiel veranschaulicht die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="56b12-599">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="56b12-600">In diesem Beispiel werden ein Hostname und eine Portnummer zum Identifizieren des Zielhosts verwendet.</span><span class="sxs-lookup"><span data-stu-id="56b12-600">This example uses a host name and a port number to identify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-601"><paramref name="dgram" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-601"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b12-602">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</span><span class="sxs-lookup"><span data-stu-id="56b12-602">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-603">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-603">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-604">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-604">An error occurred when accessing the socket.</span></span></exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="56b12-605">Sendet asynchron ein UPD-Datagramm an einen Remotehost.</span><span class="sxs-lookup"><span data-stu-id="56b12-605">Sends a UDP datagram asynchronously to a remote host.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
        <Parameter Name="bytes" Type="System.Int32" Index="1" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="56b12-606">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</span><span class="sxs-lookup"><span data-stu-id="56b12-606">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="56b12-607">Die Anzahl von Bytes im Datagramm.</span><span class="sxs-lookup"><span data-stu-id="56b12-607">The number of bytes in the datagram.</span></span></param>
        <summary><span data-ttu-id="56b12-608">Sendet asynchron ein UPD-Datagramm an einen Remotehost.</span><span class="sxs-lookup"><span data-stu-id="56b12-608">Sends a UDP datagram asynchronously to a remote host.</span></span></summary>
        <returns><span data-ttu-id="56b12-609">Gibt <see cref="T:System.Threading.Tasks.Task`1" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="56b12-609">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-610">Diese Überladung sendet Datagramme an den Remote Host, der in der <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="56b12-610">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="56b12-611">Wenn Sie <xref:System.Net.Sockets.UdpClient.Connect%2A> vor dem Aufrufen dieser Überladung nicht aufrufen, löst die Methode eine <xref:System.Net.Sockets.SocketException>aus.</span><span class="sxs-lookup"><span data-stu-id="56b12-611">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="56b12-612">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-612">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-613">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-613">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="56b12-614">Wenn Sie Datagramme an einen anderen Remote Host senden möchten, müssen Sie die <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode abrufen und den gewünschten Remote Host angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-614">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="56b12-615">Verwenden Sie eine der anderen <xref:System.Net.Sockets.UdpClient.SendAsync%2A> Methoden Überladungen, um Datagramme an eine Broadcast Adresse zu senden.</span><span class="sxs-lookup"><span data-stu-id="56b12-615">Use either of the other <xref:System.Net.Sockets.UdpClient.SendAsync%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-616"><paramref name="dgram" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-616"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b12-617">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</span><span class="sxs-lookup"><span data-stu-id="56b12-617">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-618">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-618">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-619">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-619">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * System.Net.IPEndPoint -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytes" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="56b12-620">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</span><span class="sxs-lookup"><span data-stu-id="56b12-620">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="56b12-621">Die Anzahl von Bytes im Datagramm.</span><span class="sxs-lookup"><span data-stu-id="56b12-621">The number of bytes in the datagram.</span></span></param>
        <param name="endPoint"><span data-ttu-id="56b12-622">Ein <see cref="T:System.Net.IPEndPoint" />, der den Host und Port darstellt, an die das Datagramm gesendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-622">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span></span></param>
        <summary><span data-ttu-id="56b12-623">Sendet asynchron ein UPD-Datagramm an einen Remotehost.</span><span class="sxs-lookup"><span data-stu-id="56b12-623">Sends a UDP datagram asynchronously to a remote host.</span></span></summary>
        <returns><span data-ttu-id="56b12-624">Gibt <see cref="T:System.Threading.Tasks.Task`1" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="56b12-624">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-625">Diese Methode sendet Datagramme an den angegebenen Endpunkt.</span><span class="sxs-lookup"><span data-stu-id="56b12-625">This method sends datagrams to the specified endpoint.</span></span> <span data-ttu-id="56b12-626">Vor dem Aufrufen dieser Überladung müssen Sie zuerst einen <xref:System.Net.IPEndPoint> mithilfe der IP-Adresse und der Portnummer des Remote Hosts erstellen, an den die Datagramme übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-626">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="56b12-627">Sie können Datagramme an die Standard Broadcast Adresse 255.255.255.255 senden, indem Sie <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> für die <xref:System.Net.IPAddress.Address%2A>-Eigenschaft der <xref:System.Net.IPEndPoint>angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-627">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="56b12-628">Nachdem Sie dieses <xref:System.Net.IPEndPoint>erstellt haben, übergeben Sie es als `endPoint` Parameter an diese Methode.</span><span class="sxs-lookup"><span data-stu-id="56b12-628">After you have created this <xref:System.Net.IPEndPoint>, pass it to this method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="56b12-629">Wenn Sie Datagramme an eine andere Broadcast Adresse senden möchten, verwenden Sie die <xref:System.Net.Sockets.UdpClient.Client%2A>-Methode, um die zugrunde liegende <xref:System.Net.Sockets.Socket>abzurufen, und legen Sie die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-629">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="56b12-630">Sie können auch die <xref:System.Net.Sockets.Socket>-Klasse wieder verwenden.</span><span class="sxs-lookup"><span data-stu-id="56b12-630">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="56b12-631">Geben Sie für diese Methode keinen `endPoint`-Parameter an, wenn Sie bereits einen Remote Host mit der <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode eingerichtet haben.</span><span class="sxs-lookup"><span data-stu-id="56b12-631">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="56b12-632">Wenn Sie dies tun, löst diese Methode eine <xref:System.Net.Sockets.SocketException>aus.</span><span class="sxs-lookup"><span data-stu-id="56b12-632">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="56b12-633">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-633">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-634">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-634">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-635"><paramref name="dgram" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-635"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b12-636">Der<see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</span><span class="sxs-lookup"><span data-stu-id="56b12-636"><see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-637">Der<see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-637"><see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-638">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-638">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, hostname As String, port As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * string * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" Index="0" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="bytes" Type="System.Int32" Index="1" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="hostname" Type="System.String" Index="2" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="port" Type="System.Int32" Index="3" FrameworkAlternate="netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="datagram"><span data-ttu-id="56b12-639">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</span><span class="sxs-lookup"><span data-stu-id="56b12-639">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span></span></param>
        <param name="bytes"><span data-ttu-id="56b12-640">Die Anzahl von Bytes im Datagramm.</span><span class="sxs-lookup"><span data-stu-id="56b12-640">The number of bytes in the datagram.</span></span></param>
        <param name="hostname"><span data-ttu-id="56b12-641">Der Name des Remotehosts, an den das Datagramm gesendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-641">The name of the remote host to which you intend to send the datagram.</span></span></param>
        <param name="port"><span data-ttu-id="56b12-642">Die Nummer des Remoteports, mit dem kommuniziert werden soll.</span><span class="sxs-lookup"><span data-stu-id="56b12-642">The remote port number with which you intend to communicate.</span></span></param>
        <summary><span data-ttu-id="56b12-643">Sendet asynchron ein UPD-Datagramm an einen Remotehost.</span><span class="sxs-lookup"><span data-stu-id="56b12-643">Sends a UDP datagram asynchronously to a remote host.</span></span></summary>
        <returns><span data-ttu-id="56b12-644">Gibt <see cref="T:System.Threading.Tasks.Task`1" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="56b12-644">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-645">Diese Methode sendet Datagramme an die Werte, die von den Parametern `hostname` und `port` angegeben werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-645">This method sends datagrams to the values specified by the `hostname` and `port` parameters.</span></span> <span data-ttu-id="56b12-646">Sie können Datagramme an die Standard Broadcast Adresse senden, indem Sie für den `hostname` Parameterwert "255.255.255.255" angeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-646">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="56b12-647">Wenn Sie Datagramme an eine andere Broadcast Adresse senden möchten, verwenden Sie die <xref:System.Net.Sockets.UdpClient.Client%2A>-Methode, um die zugrunde liegende <xref:System.Net.Sockets.Socket>abzurufen, und legen Sie die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>fest.</span><span class="sxs-lookup"><span data-stu-id="56b12-647">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="56b12-648">Sie können auch die <xref:System.Net.Sockets.Socket>-Klasse wieder verwenden.</span><span class="sxs-lookup"><span data-stu-id="56b12-648">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="56b12-649">Geben Sie für diese Methode keinen Hostnamen oder keine Portnummer an, wenn Sie bereits einen Remote Host mit der <xref:System.Net.Sockets.UdpClient.Connect%2A>-Methode eingerichtet haben.</span><span class="sxs-lookup"><span data-stu-id="56b12-649">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="56b12-650">Wenn Sie dies tun, löst diese Methode eine <xref:System.Net.Sockets.SocketException>aus.</span><span class="sxs-lookup"><span data-stu-id="56b12-650">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="56b12-651">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>, um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-651">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="56b12-652">Nachdem Sie diesen Code abgerufen haben, finden Sie in der [API-Fehlercode Dokumentation der Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) , eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="56b12-652">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="56b12-653"><paramref name="dgram" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="56b12-653"><paramref name="dgram" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="56b12-654">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</span><span class="sxs-lookup"><span data-stu-id="56b12-654">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="56b12-655">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span><span class="sxs-lookup"><span data-stu-id="56b12-655">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="56b12-656">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="56b12-656">An error occurred when accessing the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="56b12-657">Gibt alle vom <see cref="T:System.Net.Sockets.UdpClient" /> verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="56b12-657">Releases all resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="56b12-658">Wenn Sie die <xref:System.Net.Sockets.UdpClient>nicht mehr benötigen, nennen Sie iverwerf. verwerfen.</span><span class="sxs-lookup"><span data-stu-id="56b12-658">Call IDisposable.Dispose when you are finished using the <xref:System.Net.Sockets.UdpClient>.</span></span> <span data-ttu-id="56b12-659">Die iverwerf. verwerfen-Methode verbleibt die <xref:System.Net.Sockets.UdpClient> in einem nicht verwendbaren Zustand.</span><span class="sxs-lookup"><span data-stu-id="56b12-659">The IDisposable.Dispose method leaves the <xref:System.Net.Sockets.UdpClient> in an unusable state.</span></span> <span data-ttu-id="56b12-660">Nach dem Aufrufen von "iverwerf. verwerfen" müssen Sie alle Verweise auf die <xref:System.Net.Sockets.UdpClient> freigeben, damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.Net.Sockets.UdpClient> belegt hat.</span><span class="sxs-lookup"><span data-stu-id="56b12-660">After calling IDisposable.Dispose, you must release all references to the <xref:System.Net.Sockets.UdpClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpClient> was occupying.</span></span> <span data-ttu-id="56b12-661">Weitere Informationen finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Implementieren einer](~/docs/standard/garbage-collection/implementing-dispose.md)verwerfen-Methode.</span><span class="sxs-lookup"><span data-stu-id="56b12-661">For more information, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span></span>

> [!NOTE] 
> <span data-ttu-id="56b12-662">Bevor Sie den letzten Verweis auf die <xref:System.Net.Sockets.UdpClient>freigeben, müssen Sie immer "iverwerf. verwerfen" anrufen.</span><span class="sxs-lookup"><span data-stu-id="56b12-662">Always call IDisposable.Dispose before you release your last reference to the <xref:System.Net.Sockets.UdpClient>.</span></span> <span data-ttu-id="56b12-663">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Net.Sockets.UdpClient>-Methode des `Finalize`-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="56b12-663">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpClient> object's `Finalize` method.</span></span>

]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int16 with get, set" Usage="System.Net.Sockets.UdpClient.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="56b12-664">Ruft einen Wert ab, der die Gültigkeitsdauer (TTL – Time to Live) von IP (Internet Protocol)-Paketen angibt, die vom <see cref="T:System.Net.Sockets.UdpClient" /> gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="56b12-664">Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</span></span></summary>
        <value><span data-ttu-id="56b12-665">Der TTL-Wert.</span><span class="sxs-lookup"><span data-stu-id="56b12-665">The TTL value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="56b12-666">Der TTL-Wert gibt die maximale Anzahl von Routern an, die von einem Paket durchlaufen werden können, bevor der Router das Paket verwirft, und eine ICMP (Internet Control Message Protocol)-Fehlermeldung (ICMP) wird an den Absender zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="56b12-666">The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="56b12-667">Im folgenden Codebeispiel wird die Verwendung der <xref:System.Net.Sockets.UdpClient.Ttl%2A>-Eigenschaft veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="56b12-667">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Ttl%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
