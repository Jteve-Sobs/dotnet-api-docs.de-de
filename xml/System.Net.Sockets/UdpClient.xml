<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="UdpClient.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac56637514a0d67fe6299f5e3d0a20f346399311c43.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">6637514a0d67fe6299f5e3d0a20f346399311c43</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Provides User Datagram Protocol (UDP) network services.</source>
          <target state="translated">Stellt die UDP-Netzwerkdienste (User Datagram Protocol) bereit.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> -Klasse stellt einfache Methoden zum Senden und Empfangen von verbindungslose UDP-Datagramme im synchronen Modus blockiert.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</source>
          <target state="translated">Da UDP ein verbindungsloses Transportprotokoll ist, müssen Sie nicht zum Herstellen einer Verbindung Remotehost vor dem Senden und Empfangen von Daten.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>You do, however, have the option of establishing a default remote host in one of the following two ways:</source>
          <target state="translated">Die Option zum Einrichten einen Standard-Remotehost in einem der beiden folgenden Methoden tun, allerdings haben:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class using the remote host name and port number as parameters.</source>
          <target state="translated">Erstellen Sie eine Instanz von der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> -Klasse unter Verwendung des remote-Host und die Portnummer als Parameter.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class and then call the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Erstellen Sie eine Instanz von der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> Klasse, und rufen Sie anschließend die <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>You can use any of the send methods provided in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to send data to a remote device.</source>
          <target state="translated">Können Sie eine der bereitgestellten, der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> , Daten zu einem Remotegerät zu senden.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method to receive data from remote hosts.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> Methode, um Daten von remote-Hosts empfangen.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Do not call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> using a host name or <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> if you have already specified a default remote host.</source>
          <target state="translated">Rufen Sie nicht <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> verwenden einen Hostnamen oder <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> , wenn Sie bereits einen Standard-Remotehost angegeben haben.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>If you do, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> will throw an exception.</source>
          <target state="translated">Wenn Sie dies tun, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> wird eine Ausnahme ausgelöst.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> methods also allow you to send and receive multicast datagrams.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> Methoden ermöglichen darüber hinaus zum Senden und Empfangen von Multicastdatagramme.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method to subscribe a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to a multicast group.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> Methode zum Abonnieren einer <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> an eine Multicastgruppe.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method to unsubscribe a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> from a multicast group.</source>
          <target state="translated">Verwenden der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> Methode zum Kündigen des Abonnements eine <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> eine Multicastgruppe.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>The following example establishes a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> connection using the host name www.contoso.com on port 11000.</source>
          <target state="translated">Das folgende Beispiel erstellt eine <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> Verbindung mithilfe des Hostnamens www.contoso.com auf Port 11000.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>A small string message is sent to two separate remote host machines.</source>
          <target state="translated">Eine kleine Zeichenfolgennachricht wird an zwei separate Remotehostcomputer gesendet.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method blocks execution until a message is received.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> Methode blockiert die Ausführung, bis eine Nachricht empfangen wird.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> passed to <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, the identity of the responding host is revealed.</source>
          <target state="translated">Mithilfe der <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> übergeben <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, die Identität der antwortende Host offen gelegt wird.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Net.Sockets.UdpClient">
          <source>To establish an outgoing connection or accept an incoming request.</source>
          <target state="translated">Um eine ausgehende Verbindung herzustellen, oder übernehmen Sie eine eingehende Anforderung.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</source>
          <target state="translated">Dieser Konstruktor erstellt ein neues <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> und ermöglicht es dem zugrunde liegenden Dienstanbieter, der am besten geeigneten lokale IPv4-Adresse und Port zuzuweisen.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</source>
          <target state="translated">Wenn dieser Konstruktor verwendet wird, die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> -Instanzensatz mit einer Adressfamilie von IPv4, die nicht geändert oder von einem Methodenaufruf Verbinden mit einem IPv6-Ziel überschrieben werden.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>This constructor is not suitable for joining a multicast group because it does not perform socket binding.</source>
          <target state="translated">Dieser Konstruktor ist nicht geeignet für eine Multicastgruppe beitreten, da es keine Socket Bindung ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>Also, it works only with IPv4 address types.</source>
          <target state="translated">Außerdem funktioniert sie nur mit IPv4-Adresstypen.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>The following example demonstrates how to use the default constructor to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie den Standardkonstruktor verwenden, zum Erstellen einer Instanz von der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The local port number from which you intend to communicate.</source>
          <target state="translated">Die Nummer des lokalen Anschlusses, über den die Kommunikation stattfinden soll.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and binds it to the local port number provided.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>-Klasse und bindet sie an die angegebene lokale Anschlussnummer.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>This constructor creates an underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and binds it to the port number from which you intend to communicate.</source>
          <target state="translated">Dieser Konstruktor erstellt ein zugrundeliegendes <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> und bindet sie an die Portnummer, die von dem Sie kommunizieren möchten.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>Use this constructor if you are only interested in setting the local port number.</source>
          <target state="translated">Verwenden Sie diesen Konstruktor, wenn Sie nur die lokalen Portnummer festlegen möchten.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The underlying service provider will assign the local IP address.</source>
          <target state="translated">Der zugrunde liegenden Dienstanbieter wird die lokale IP-Adresse zuweisen.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>If you pass 0 to the constructor, the underlying service provider will assign a port number.</source>
          <target state="translated">Wenn Sie 0 an den Konstruktor übergeben, wird der zugrunde liegenden Dienstanbieter eine Portnummer zuweisen.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</source>
          <target state="translated">Wenn dieser Konstruktor verwendet wird, die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> -Instanzensatz mit einer Adressfamilie von IPv4, die nicht geändert oder von einem Methodenaufruf Verbinden mit einem IPv6-Ziel überschrieben werden.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>This constructor works only with IPv4 address types.</source>
          <target state="translated">Dieser Konstruktor kann nur mit IPv4-Adresstypen.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The following example demonstrates using a local port number to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung einer lokalen Portnummer zum Erstellen einer Instanz von der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>The <ph id="ph1">&lt;paramref name="port" /&gt;</ph> parameter is greater than <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</source>
          <target state="translated">Der <ph id="ph1">&lt;paramref name="port" /&gt;</ph>-Parameter ist größer als <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> oder kleiner als <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that respresents the local endpoint to which you bind the UDP connection.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>, der den lokalen Endpunkt darstellt, an den Sie die UDP-Verbindung binden.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and binds it to the specified local endpoint.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>-Klasse und bindet sie an den angegebenen lokalen Endpunkt.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>This constructor creates a new <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> and binds it to the <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> specified by the <ph id="ph3">`localEP`</ph> parameter.</source>
          <target state="translated">Dieser Konstruktor erstellt ein neues <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> und bindet sie an der <ph id="ph2">&lt;xref:System.Net.IPEndPoint&gt;</ph> gemäß der <ph id="ph3">`localEP`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>Before you call this constructor, you must create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number from which you intend to send and receive data.</source>
          <target state="translated">Bevor Sie diesen Konstruktor aufrufen, müssen Sie erstellen eine <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> mit der IP-Adresse und Port zum Senden und Empfangen von Daten werden sollen.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>You do not need to specify a local IP address and port number for sending and receiving data.</source>
          <target state="translated">Sie müssen sich nicht um eine lokale IP-Adresse und Port-Nummer für das Senden und Empfangen von Daten anzugeben.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</source>
          <target state="translated">Wenn Sie nicht der Fall ist, weist der zugrunde liegenden Dienstanbieter am besten geeignete lokale IP-Adresse und Portnummer an.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with the address family specified by the <ph id="ph2">`localEP`</ph> parameter  that cannot be changed or overwritten by a connect method call with a different address family.</source>
          <target state="translated">Wenn dieser Konstruktor verwendet wird, die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> -Instanzensatz mit der Adressfamilie gemäß der <ph id="ph2">`localEP`</ph> Parameter, die nicht geändert oder von einem Methodenaufruf Verbinden mit einer anderen Adressfamilie überschrieben werden.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>The following example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class using a local endpoint.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie eine Instanz von der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> -Klasse unter Verwendung eines lokalen Endpunkts.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="localEP" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> values that specifies the addressing scheme of the socket.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph>-Werte, der das Adressierungsschema für den Socket angibt.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">`family`</ph> parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</source>
          <target state="translated">Die <ph id="ph1">`family`</ph> Parameter bestimmt, ob der Listener-Version 4-Adresse (IPv4) oder eine IP-Version 6 (IPv6) verwendet Adresse.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>To use an IPv4 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> value.</source>
          <target state="translated">Um eine IPv4-Adresse zu verwenden, übergeben die <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> Wert.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>To use an IPv6 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> value.</source>
          <target state="translated">Übergeben Sie zum Verwenden einer IPv6-Adresse der <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> Wert.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Passing any other value will cause the method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Übergabe eines anderen Werts führt dazu, dass die Methode zum Auslösen einer <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with the address family specified by the <ph id="ph2">`family`</ph> parameter  that cannot be changed or overwritten by a connect method call with a different address family.</source>
          <target state="translated">Wenn dieser Konstruktor verwendet wird, die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> -Instanzensatz mit der Adressfamilie gemäß der <ph id="ph2">`family`</ph> Parameter, die nicht geändert oder von einem Methodenaufruf Verbinden mit einer anderen Adressfamilie überschrieben werden.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> is not suitable for joining a multicast group because it does not perform socket binding.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> eignet sich nicht für eine Multicastgruppe beitreten, da es keine Socket Bindung ausgeführt wird.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source><ph id="ph1">&lt;paramref name="family" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="family" /&gt;</ph> ist nicht <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> oder <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>The port on which to listen for incoming connection attempts.</source>
          <target state="translated">Der Anschluss, der auf eingehende Verbindungsversuche überwacht werden soll.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> values that specifies the addressing scheme of the socket.</source>
          <target state="translated">Einer der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph>-Werte, der das Adressierungsschema für den Socket angibt.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and binds it to the local port number provided.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>-Klasse und bindet sie an die angegebene lokale Anschlussnummer.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>This constructor creates an underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and binds it to the port number from which you intend to communicate.</source>
          <target state="translated">Dieser Konstruktor erstellt ein zugrundeliegendes <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> und bindet sie an die Portnummer, die von dem Sie kommunizieren möchten.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>The <ph id="ph1">`family`</ph> parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</source>
          <target state="translated">Die <ph id="ph1">`family`</ph> Parameter bestimmt, ob der Listener-Version 4-Adresse (IPv4) oder eine IP-Version 6 (IPv6) verwendet Adresse.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>To use an IPv4 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> value.</source>
          <target state="translated">Um eine IPv4-Adresse zu verwenden, übergeben die <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetwork&gt;</ph> Wert.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>To use an IPv6 address, pass the <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> value.</source>
          <target state="translated">Übergeben Sie zum Verwenden einer IPv6-Adresse der <ph id="ph1">&lt;xref:System.Net.Sockets.AddressFamily.InterNetworkV6&gt;</ph> Wert.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>Passing any other value will cause the method to throw an <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</source>
          <target state="translated">Übergabe eines anderen Werts führt dazu, dass die Methode zum Auslösen einer <ph id="ph1">&lt;xref:System.ArgumentException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>If this constructor is used, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance is set with the address family specified by the <ph id="ph2">`family`</ph> parameter  that cannot be changed or overwritten by a connect method call with a different address family.</source>
          <target state="translated">Wenn dieser Konstruktor verwendet wird, die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> -Instanzensatz mit der Adressfamilie gemäß der <ph id="ph2">`family`</ph> Parameter, die nicht geändert oder von einem Methodenaufruf Verbinden mit einer anderen Adressfamilie überschrieben werden.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>Once you have obtained this code, refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>The following code example shows how to create a UDP client to use in a multicast group.</source>
          <target state="translated">Im folgenden Codebeispiel wird gezeigt, wie beim Erstellen eines UDP-Clients zur Verwendung in einer Multicastgruppe wird.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source><ph id="ph1">&lt;paramref name="family" /&gt;</ph> is not <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="family" /&gt;</ph> ist nicht <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> oder <ph id="ph3">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is greater than <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> or less than <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> ist größer als <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph> oder kleiner als <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>The name of the remote DNS host to which you intend to connect.</source>
          <target state="translated">Der Name des Remote-DNS-Hosts, zu dem die Verbindung hergestellt werden soll.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>The remote port number to which you intend to connect.</source>
          <target state="translated">Die Nummer des Remoteanschlusses, mit dem die Verbindung hergestellt werden soll.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> class and establishes a default remote host.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>-Klasse und richtet einen Standardremotehost ein.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>This constructor initializes a new <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> and establishes a remote host using the <ph id="ph2">`hostname`</ph> and <ph id="ph3">`port`</ph> parameters.</source>
          <target state="translated">Dieser Konstruktor initialisiert eine neue <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> und richtet einen Remotehost über die <ph id="ph2">`hostname`</ph> und <ph id="ph3">`port`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">Einen Standard-Remotehost herstellen ist optional.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>If you use this constructor, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Wenn Sie diesen Konstruktor verwenden, müssen Sie nicht angeben einen Remotehost in jedem Aufruf an die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">Angeben einen Standard-Remotehost beschränkt auf diesem Host nur.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>You can change the default remote host at any time by calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Sie können die Standard-Remotehost zu einem beliebigen Zeitpunkt ändern, durch Aufrufen der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>If you want to specify a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, do not use this constructor.</source>
          <target state="translated">Wenn Sie den Aufruf von einem Remotehost angeben möchten die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> -Methode, verwenden Sie diesen Konstruktor nicht.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>The following example demonstrates how to create an instance of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> class using a host name and port number.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie eine Instanz von der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> -Klasse mit einem Hostnamen und die Portnummer.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="hostname" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> liegt nicht zwischen <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> und <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>Gets or sets a value indicating whether a default remote host has been established.</source>
          <target state="translated">Ruft einen Wert ab, der angibt, ob ein Standardremotehost eingerichtet wurde, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a connection is active; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Verbindung aktiviert ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> can use this property to determine if a default remote host has been established.</source>
          <target state="translated">Ableiten von Klassen <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> können diese Eigenschaft verwenden, um festzustellen, ob ein Standard-Remotehost eingerichtet wurde.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>You can establish a default remote host by using the appropriate constructor or by calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Sie können einen Standard-Remotehost herstellen, wird mit dem entsprechenden Konstruktor oder durch Aufrufen der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Active">
          <source>If you do establish a default remote host, you cannot specify a remote host in your call to <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>.</source>
          <target state="translated">Wenn Sie einen Standard-Remotehost eingerichtet wurde, kann keinen Remotehost aufrufen geben <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>A Boolean value that specifies whether to enable or disable NAT traversal.</source>
          <target state="translated">Ein boolescher Wert, der angibt, ob die NAT-Überquerung aktiviert oder deaktiviert werden soll.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>Enables or disables Network Address Translation (NAT) traversal on a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> instance.</source>
          <target state="translated">Aktiviert oder deaktiviert die NAT-Überquerung (Netzwerkadressenübersetzung) für eine <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>-Instanz.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A&gt;</ph> method is used to enable or disable NAT traversal for a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A&gt;</ph> Methode dient zum Aktivieren oder deaktivieren die NAT-Durchlauf für eine <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</source>
          <target state="translated">NAT-Durchlauf kann mit Teredo, 6to4 oder einen ISATAP-Tunnel bereitgestellt werden.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>When the <ph id="ph1">`allowed`</ph> parameter is false, the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> option on the associated socket is set to <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted&gt;</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">`allowed`</ph> Parameter ist "false", die <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> legen Sie die Option für den zugeordneten Socket auf <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>This explicitly disables NAT traversal for a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> instance.</source>
          <target state="translated">Dadurch werden explizit deaktiviert NAT-Durchlauf für eine <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> Instanz.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>When the <ph id="ph1">`allowed`</ph> parameter is true, the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> option on the associated socket is set to <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.Unrestricted&gt;</ph>.</source>
          <target state="translated">Wenn die <ph id="ph1">`allowed`</ph> Parameter ist "true", die <ph id="ph2">&lt;xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel&gt;</ph> legen Sie die Option für den zugeordneten Socket auf <ph id="ph3">&lt;xref:System.Net.Sockets.IPProtectionLevel.Unrestricted&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>This may allow NAT traversal for a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> depending on firewall rules in place on the system.</source>
          <target state="translated">Dies kann für die NAT-Durchlauf eine <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> abhängig von Firewallregeln auf dem System vorhanden.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>A Teredo address is an IPv6 address with the prefix of 2001::/32.</source>
          <target state="translated">Teredo-Adresse ist eine IPv6-Adresse mit dem Präfix 2001:: / 32.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)">
          <source>Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</source>
          <target state="translated">Teredo-Adressen können aufgelistet, die als eine IPv6-Adresse einer lokale Schnittstelle zugewiesen oder über die normale DNS-namensauflösung zurückgegeben werden.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>Gets the amount of data received from the network that is available to read.</source>
          <target state="translated">Ruft die vom Netzwerk empfangene Datenmenge ab, die gelesen werden kann.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The number of bytes of data received from the network.</source>
          <target state="translated">Die Anzahl der vom Netzwerk empfangenen Datenbytes.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property is used to determine the amount of data queued in the network buffer for reading.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> Eigenschaft wird verwendet, um zu bestimmen, die Menge der Daten in der Warteschlange im Netzwerkpuffer zum Lesen.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If data is available, call <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> to get the data.</source>
          <target state="translated">Wenn Daten verfügbar sind, rufen Sie <ph id="ph1">&lt;xref:System.Net.Sockets.NetworkStream.Read%2A&gt;</ph> zum Abrufen der Daten.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If no data is available, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property returns 0.</source>
          <target state="translated">Wenn keine Daten verfügbar ist, werden die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> Eigenschaft gibt 0 zurück.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If the remote host shuts down or closes the connection, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property throws a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Wenn der remote-Host heruntergefahren oder die Verbindung schließt der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> -Eigenschaft löst eine <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at <bpt id="p1">[</bpt><ph id="ph3">http://msdn.microsoft.com/library</ph><ept id="p1">](http://msdn.microsoft.com/library)</ept>/ for a detailed description of the error.</source>
          <target state="translated">Erhalten Sie eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> zu erhalten den spezifischen Fehlercode finden Sie in der Windows-Sockets Version 2-API-Fehler Codedokumentation in der MSDN Library unter <bpt id="p1">[</bpt> <ph id="ph3">http://msdn.microsoft.com/library</ph> <ept id="p1">](http://msdn.microsoft.com/library)</ept>/ eine ausführliche Beschreibung der Fehler.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Available%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>An error occurred while attempting to access the socket.</source>
          <target state="translated">Beim Zugriff auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Available">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the receive operation.</source>
          <target state="translated">Ein benutzerdefiniertes Objekt, das Informationen über den Empfangsvorgang enthält.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Dieses Objekt wird bei Abschluss des Vorgangs an den <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept>-Delegaten übergeben.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>Receives a datagram from a remote host asynchronously.</source>
          <target state="translated">Empfängt asynchron ein Datagramm von einem Remotehost.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous receive.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>-Objekt, das auf den asynchronen Empfang verweist.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndReceive%2A&gt;</ph> method.</source>
          <target state="translated">Der asynchrone <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> Vorgang muss abgeschlossen werden, durch Aufrufen der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndReceive%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">In der Regel wird die Methode aufgerufen, indem die <ph id="ph1">`requestCallback`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation is complete.</source>
          <target state="translated">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">Verwenden Sie zum Blockieren, bis der Vorgang abgeschlossen ist, die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter <bpt id="p1">[</bpt>Aufrufen synchroner Methoden asynchron<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> to asynchronously receive a server response.</source>
          <target state="translated">Im folgenden Codebeispiel wird mit <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginReceive%2A&gt;</ph> Serverantwort asynchron zu empfangen.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Sends a datagram to a remote host asynchronously.</source>
          <target state="translated">Sendet asynchron ein Datagramm an einen Remotehost.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the data to be sent.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>-Array, das die zu sendenden Daten enthält.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send.</source>
          <target state="translated">Die Anzahl von Bytes, die gesendet werden sollen.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the send operation.</source>
          <target state="translated">Ein benutzerdefiniertes Objekt, das Informationen zum Sendevorgang enthält.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Dieses Objekt wird bei Abschluss des Vorgangs an den <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept>-Delegaten übergeben.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Sends a datagram to a remote host asynchronously.</source>
          <target state="translated">Sendet asynchron ein Datagramm an einen Remotehost.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination was specified previously by a call to <ph id="ph1">&lt;see cref="Overload:System.Net.Sockets.UdpClient.Connect" /&gt;</ph>.</source>
          <target state="translated">Das Ziel wurde zuvor durch Aufruf von <ph id="ph1">&lt;see cref="Overload:System.Net.Sockets.UdpClient.Connect" /&gt;</ph> angegeben.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous send.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, das auf den asynchronen Sendevorgang verweist.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> method.</source>
          <target state="translated">Der asynchrone <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> Vorgang muss abgeschlossen werden, durch Aufrufen der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">In der Regel wird die Methode aufgerufen, indem die <ph id="ph1">`requestCallback`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation completes.</source>
          <target state="translated">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads.</source>
          <target state="translated">Zum Blockieren, bis der Vorgang abgeschlossen ist, gehen die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Überladungen der Methode.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter <bpt id="p1">[</bpt>Aufrufen synchroner Methoden asynchron<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to asynchronously send a server request.</source>
          <target state="translated">Im folgenden Codebeispiel wird mit <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> asynchron eine Anforderung gesendet werden.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the data to be sent.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>-Array, das die zu sendenden Daten enthält.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send.</source>
          <target state="translated">Die Anzahl von Bytes, die gesendet werden sollen.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph> that represents the destination for the data.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>, der das Ziel der Daten darstellt.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the send operation.</source>
          <target state="translated">Ein benutzerdefiniertes Objekt, das Informationen zum Sendevorgang enthält.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Dieses Objekt wird bei Abschluss des Vorgangs an den <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept>-Delegaten übergeben.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>Sends a datagram to a destination asynchronously.</source>
          <target state="translated">Sendet asynchron ein Datagramm an ein Ziel.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The destination is specified by a <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>.</source>
          <target state="translated">Das Ziel wird durch einen <ph id="ph1">&lt;see cref="T:System.Net.EndPoint" /&gt;</ph>angegeben.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous send.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, das auf den asynchronen Sendevorgang verweist.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> method.</source>
          <target state="translated">Der asynchrone <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> Vorgang muss abgeschlossen werden, durch Aufrufen der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">In der Regel wird die Methode aufgerufen, indem die <ph id="ph1">`requestCallback`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation is complete.</source>
          <target state="translated">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads.</source>
          <target state="translated">Zum Blockieren, bis der Vorgang abgeschlossen ist, gehen die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Überladungen der Methode.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter <bpt id="p1">[</bpt>Aufrufen synchroner Methoden asynchron<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to asynchronously send a server request.</source>
          <target state="translated">Im folgenden Codebeispiel wird mit <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> asynchron eine Anforderung gesendet werden.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> array that contains the data to be sent.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>-Array, das die zu sendenden Daten enthält.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The number of bytes to send.</source>
          <target state="translated">Die Anzahl von Bytes, die gesendet werden sollen.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination host.</source>
          <target state="translated">Der Zielhost.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination port number.</source>
          <target state="translated">Die Zielanschlussnummer.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> delegate that references the method to invoke when the operation is complete.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>A user-defined object that contains information about the send operation.</source>
          <target state="translated">Ein benutzerdefiniertes Objekt, das Informationen zum Sendevorgang enthält.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This object is passed to the <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept> delegate when the operation is complete.</source>
          <target state="translated">Dieses Objekt wird bei Abschluss des Vorgangs an den <bpt id="p1">&lt;c&gt;</bpt>requestCallback<ept id="p1">&lt;/c&gt;</ept>-Delegaten übergeben.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Sends a datagram to a destination asynchronously.</source>
          <target state="translated">Sendet asynchron ein Datagramm an ein Ziel.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The destination is specified by the host name and port number.</source>
          <target state="translated">Das Ziel wird durch einen Hostnamen und eine Anschlussnummer angegeben.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object that references the asynchronous send.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, das auf den asynchronen Sendevorgang verweist.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The asynchronous <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> operation must be completed by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> method.</source>
          <target state="translated">Der asynchrone <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> Vorgang muss abgeschlossen werden, durch Aufrufen der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.EndSend%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>Typically, the method is invoked by the <ph id="ph1">`requestCallback`</ph> delegate.</source>
          <target state="translated">In der Regel wird die Methode aufgerufen, indem die <ph id="ph1">`requestCallback`</ph> delegieren.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>This method does not block until the operation is complete.</source>
          <target state="translated">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>To block until the operation is complete, use one of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads.</source>
          <target state="translated">Zum Blockieren, bis der Vorgang abgeschlossen ist, gehen die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Überladungen der Methode.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>For detailed information about using the asynchronous programming model, see <bpt id="p1">[</bpt>Calling Synchronous Methods Asynchronously<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</source>
          <target state="translated">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter <bpt id="p1">[</bpt>Aufrufen synchroner Methoden asynchron<ept id="p1">](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md)</ept>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to asynchronously send a server request.</source>
          <target state="translated">Im folgenden Codebeispiel wird mit <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> asynchron eine Anforderung gesendet werden.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>Gets or sets the underlying network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Ruft den zugrunde liegenden Netzwerk-<ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> ab oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>The underlying Network <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Der zugrunde liegende Netzwerk-<ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> creates a <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> used to send and receive data over a network.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> erstellt eine <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> zum Senden und Empfangen von Daten über ein Netzwerk verwendet.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>Classes deriving from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> can use this property to get or set this <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Ableiten von Klassen <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> können diese Eigenschaft zum Abrufen oder festlegen, dies <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>Use the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> returned from <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> if you require access beyond that which <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> provides.</source>
          <target state="translated">Verwenden Sie das zugrunde liegende <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> Merry <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> Wenn gewünscht, zugreifen, darüber hinaus die <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> bereitstellt.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>You can also use <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> to set the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> to an existing <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Sie können auch <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> Festlegen des zugrunde liegenden <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> zu einem vorhandenen <ph id="ph3">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>This is useful if you want to take advantage of the simplicity of <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> using a pre-existing <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">Dies ist hilfreich, wenn Sie der Einfachheit von nutzen möchten <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> ein bereits vorhandener <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Client">
          <source>In this example, broadcasting is enabled for the underlying <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</source>
          <target state="translated">In diesem Beispiel senden aktiviert ist, für das zugrunde liegende <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>Closes the UDP connection.</source>
          <target state="translated">Schließt die UDP-Verbindung.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> disables the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> and releases all managed and unmanaged resources associated with the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> deaktiviert den zugrunde liegenden <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> und sämtliche zugeordnete verwaltete und nicht verwaltete Ressourcen frei, die <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>The following example demonstrates closing a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> by calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die schließende eine <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> durch Aufrufen der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Close%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Close">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Establishes a default remote host.</source>
          <target state="translated">Richtet einen Standardremotehost ein.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that specifies the network endpoint to which you intend to send data.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>, der den Netzwerkendpunkt angibt, an den Daten gesendet werden sollen.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Establishes a default remote host using the specified network endpoint.</source>
          <target state="translated">Richtet mit dem angegebenen Netzwerkendpunkt einen Standardremotehost ein.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method establishes a default remote host using the value specified in the <ph id="ph2">`endPoint`</ph> parameter.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode richtet eine Standard-Remotehost, der angegebene Wert der <ph id="ph2">`endPoint`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Once established, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Sobald hergestellt, Sie keine an einen Remotehost in jedem Aufruf an die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">Einen Standard-Remotehost herstellen ist optional.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">Angeben einen Standard-Remotehost beschränkt auf diesem Host nur.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you want to send datagrams to a different remote host, you must make another call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method or create another <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> without a default remote host.</source>
          <target state="translated">Wenn Sie Datagramme an einen anderen Remotehost senden möchten, müssen Sie einen weiteren Aufruf von vornehmen der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode aus, oder erstellen Sie eine andere <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> ohne eine Standard-Remotehost.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you have established a default remote host and you also provide a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Wenn Sie eine standardportparameter für Remoteverbindungen hergestellt haben Host, und Sie auch bieten einen Remotehost beim Aufruf der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> method, any datagrams that arrive from an address other than the specified default will be discarded.</source>
          <target state="translated">Beim Aufrufen der <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> -Methode, alle Datagramme, die von einer Adresse eingehen, als der angegebene Standardwert verworfen werden.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>You cannot set the default remote host to a broadcast address using this method unless you inherit from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, use the Client method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Der Standard-Remotehost an eine Broadcastadresse mit dieser Methode aus, es sei denn, Sie erben kann nicht festgelegt werden <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, verwenden Sie die Methode zum Abrufen des zugrunde liegenden <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, und legen Sie die Socketoption auf <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> in your call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Sie können jedoch, die Daten auf den Standardwert Broadcastadresse, 255.255.255.255, wenn Sie angeben, <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> beim Aufruf der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>If your application requires greater control over broadcast addresses, you can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Wenn Ihre Anwendung mehr Kontrolle über broadcast-Adressen erfordert, können Sie auch wiederherstellen mithilfe der <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Since the UDP protocol is connectionless, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method does not block.</source>
          <target state="translated">Da das UDP-Protokoll verbindungslose, ist die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode wird nicht blockiert.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method if you intend to receive multicasted datagrams.</source>
          <target state="translated">Rufen Sie nicht die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode, wenn Sie beabsichtigen, Multicastdatagramme empfangen.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>The following example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to establish a default remote host.</source>
          <target state="translated">Im folgenden Beispiel wird ein <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> einen Standard-Remotehost herstellen.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="endPoint" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="endPoint" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the remote host to which you intend to send data.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> des Remotehosts, an die Daten gesendet werden sollen.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The port number to which you intend send data.</source>
          <target state="translated">Die Anschlussnummer, an die Daten gesendet werden sollen.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Establishes a default remote host using the specified IP address and port number.</source>
          <target state="translated">Richtet einen Standardremotehost mithilfe der angegebenen IP-Adresse und Anschlussnummer ein.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method establishes a default remote host using the values specified in the <ph id="ph2">`addr`</ph> and <ph id="ph3">`port`</ph> parameters.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode richtet eine Standard-Remotehost mithilfe der Werte im angegebenen der <ph id="ph2">`addr`</ph> und <ph id="ph3">`port`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Once established, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Sobald hergestellt, Sie keine an einen Remotehost in jedem Aufruf an die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">Einen Standard-Remotehost herstellen ist optional.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">Angeben einen Standard-Remotehost beschränkt auf diesem Host nur.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must make another call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method or create another <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> without a default remote host.</source>
          <target state="translated">Wenn Sie Datagramme an einen anderen Remotehost senden möchten, müssen Sie einen weiteren Aufruf von vornehmen der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode aus, oder erstellen Sie eine andere <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> ohne eine Standard-Remotehost.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you have established a default remote host and you also provide a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Wenn Sie eine standardportparameter für Remoteverbindungen hergestellt haben Host, und Sie auch bieten einen Remotehost beim Aufruf der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> method, any datagrams that arrive from an address other than the specified default will be discarded.</source>
          <target state="translated">Beim Aufrufen der <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> -Methode, alle Datagramme, die von einer Adresse eingehen, als der angegebene Standardwert verworfen werden.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>You cannot set the default remote host to a broadcast address using this method unless you inherit from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, use the client method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Der Standard-Remotehost an eine Broadcastadresse mit dieser Methode aus, es sei denn, Sie erben kann nicht festgelegt werden <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, verwenden Sie die Methode zum Abrufen des zugrunde liegenden <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, und legen Sie die Socketoption auf <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> in your call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Sie können jedoch, die Daten auf den Standardwert Broadcastadresse, 255.255.255.255, wenn Sie angeben, <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> beim Aufruf der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>If your application requires greater control over broadcast addresses, you can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Wenn Ihre Anwendung mehr Kontrolle über broadcast-Adressen erfordert, können Sie auch wiederherstellen mithilfe der <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Since the UDP protocol is connectionless, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method does not block.</source>
          <target state="translated">Da das UDP-Protokoll verbindungslose, ist die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode wird nicht blockiert.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method if you intend to receive multicasted datagrams.</source>
          <target state="translated">Rufen Sie nicht die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode, wenn Sie beabsichtigen, Multicastdatagramme empfangen.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>The following example uses an IP address and port number to connect with a remote host.</source>
          <target state="translated">Im folgenden Beispiel wird eine IP-Adresse und Port-Nummer für die Verbindung mit einem Remotehost.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="addr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="addr" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> liegt nicht zwischen <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> und <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The DNS name of the remote host to which you intend send data.</source>
          <target state="translated">Der DNS-Name des Remotehosts, an den Daten gesendet werden sollen.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The port number on the remote host to which you intend to send data.</source>
          <target state="translated">Die Anschlussnummer auf dem Remotehost, an den Daten gesendet werden sollen.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Establishes a default remote host using the specified host name and port number.</source>
          <target state="translated">Richtet einen Standardremotehost mit dem angegebenen Hostnamen und der Anschlussnummer ein.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method establishes a default remote host using the values specified in the <ph id="ph2">`port`</ph> and <ph id="ph3">`hostname`</ph> parameters.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode richtet eine Standard-Remotehost mithilfe der Werte im angegebenen der <ph id="ph2">`port`</ph> und <ph id="ph3">`hostname`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Once established, you do not have to specify a remote host in each call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Sobald hergestellt, Sie keine an einen Remotehost in jedem Aufruf an die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Establishing a default remote host is optional.</source>
          <target state="translated">Einen Standard-Remotehost herstellen ist optional.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Specifying a default remote host limits you to that host only.</source>
          <target state="translated">Angeben einen Standard-Remotehost beschränkt auf diesem Host nur.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must make another call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method or create another <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> without a default remote host.</source>
          <target state="translated">Wenn Sie Datagramme an einen anderen Remotehost senden möchten, müssen Sie einen weiteren Aufruf von vornehmen der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode aus, oder erstellen Sie eine andere <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> ohne eine Standard-Remotehost.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you have established a default remote host and you also provide a remote host in your call to the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Wenn Sie eine standardportparameter für Remoteverbindungen hergestellt haben Host, und Sie auch bieten einen Remotehost beim Aufruf der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> löst eine <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If you call the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> method, any datagrams that arrive from an address other than the specified default will be discarded.</source>
          <target state="translated">Beim Aufrufen der <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.Connect%2A&gt;</ph> -Methode, alle Datagramme, die von einer Adresse eingehen, als der angegebene Standardwert verworfen werden.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>You cannot set the default remote host to a broadcast address using this method unless you inherit from <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, use the client method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Der Standard-Remotehost an eine Broadcastadresse mit dieser Methode aus, es sei denn, Sie erben kann nicht festgelegt werden <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, verwenden Sie die Methode zum Abrufen des zugrunde liegenden <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, und legen Sie die Socketoption auf <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> in your call to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Sie können jedoch, die Daten auf den Standardwert Broadcastadresse, 255.255.255.255, wenn Sie angeben, <ph id="ph1">&lt;xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType&gt;</ph> beim Aufruf der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>If your application requires greater control over broadcast addresses, you can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Wenn Ihre Anwendung mehr Kontrolle über broadcast-Adressen erfordert, können Sie auch wiederherstellen mithilfe der <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Since the UDP protocol is connectionless, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method does not block.</source>
          <target state="translated">Da das UDP-Protokoll verbindungslose, ist die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode wird nicht blockiert.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method if you intend to receive multicasted datagrams.</source>
          <target state="translated">Rufen Sie nicht die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode, wenn Sie beabsichtigen, Multicastdatagramme empfangen.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The following example uses the host name and port number to connect to a remote host.</source>
          <target state="translated">Im folgenden Beispiel wird, den Hostnamen und Port-Nummer für die Verbindung mit einem Remotehost.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="port" /&gt;</ph> is not between <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> and <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="port" /&gt;</ph> liegt nicht zwischen <ph id="ph2">&lt;see cref="F:System.Net.IPEndPoint.MinPort" /&gt;</ph> und <ph id="ph3">&lt;see cref="F:System.Net.IPEndPoint.MaxPort" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Dispose">
          <source>Releases the managed and unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</source>
          <target state="translated">Gibt die vom <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> verwendeten verwalteten und nicht verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to release both managed and unmanaged resources; <ph id="ph2">&lt;see langword="false" /&gt;</ph> to release only unmanaged resources.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, um ausschließlich nicht verwaltete Ressourcen freizugeben.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>Releases the unmanaged resources used by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> and optionally releases the managed resources.</source>
          <target state="translated">Gibt die von <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>This method is called by the public <ph id="ph1">`Dispose()`</ph> method and the <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> method.</source>
          <target state="translated">Diese Methode wird aufgerufen, der öffentlich <ph id="ph1">`Dispose()`</ph> Methode und die <ph id="ph2">&lt;xref:System.Object.Finalize%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">`Dispose()`</ph> invokes the protected <ph id="ph2">`Dispose(Boolean)`</ph> method with the <ph id="ph3">`disposing`</ph> parameter set to <ph id="ph4">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">`Dispose()`</ph> Ruft die geschützte <ph id="ph2">`Dispose(Boolean)`</ph> Methode mit dem <ph id="ph3">`disposing`</ph> Parametersatz auf <ph id="ph4">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> invokes <ph id="ph2">`Dispose`</ph> with <ph id="ph3">`disposing`</ph> set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Object.Finalize%2A&gt;</ph> Ruft <ph id="ph2">`Dispose`</ph> mit <ph id="ph3">`disposing`</ph> festgelegt <ph id="ph4">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>When the <ph id="ph1">`disposing`</ph> parameter is true, this method releases all resources held by any managed objects that this <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> references.</source>
          <target state="translated">Wenn die <ph id="ph1">`disposing`</ph> Parameter ist "true", gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte, die von diesem <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> Verweise.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>This method invokes the <ph id="ph1">`Dispose()`</ph> method of each referenced object.</source>
          <target state="translated">Diese Methode ruft die <ph id="ph1">`Dispose()`</ph>-Methode aller Objekte auf, auf die verwiesen wird.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> can be called multiple times by other objects.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> kann von anderen Objekten mehrmals aufgerufen werden.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>When overriding <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> be careful not to reference objects that have been previously disposed of in an earlier call to <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Zum Überschreiben <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph> Achten Sie darauf, dass Sie nicht auf Objekte verweisen, die einen früheren Aufruf freigegeben wurden <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>For more information about how to implement <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, see <bpt id="p1">[</bpt>Implementing a Dispose Method<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</source>
          <target state="translated">Weitere Informationen zum Implementieren <ph id="ph1">&lt;see langword="Dispose(Boolean)" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Implementieren einer Dispose-Methode<ept id="p1">](~/docs/standard/garbage-collection/implementing-dispose.md)</ept>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)">
          <source>For more information about <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> and <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, see <bpt id="p1">[</bpt>Cleaning Up Unmanaged Resources<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> and <bpt id="p2">[</bpt>Overriding the Finalize Method<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</source>
          <target state="translated">Weitere Informationen zu <ph id="ph1">&lt;see langword="Dispose" /&gt;</ph> und <ph id="ph2">&lt;see cref="M:System.Object.Finalize" /&gt;</ph>, finden Sie unter <bpt id="p1">[</bpt>Bereinigen von nicht verwalteten Ressourcen<ept id="p1">](~/docs/standard/garbage-collection/unmanaged.md)</ept> und <bpt id="p2">[</bpt>Überschreiben der Finalize-Methode<ept id="p2">](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3)</ept>.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows Internet Protocol (IP) datagrams to be fragmented.</source>
          <target state="translated">Ruft einen <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>-Wert ab, der angibt, ob der <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> die Fragmentierung von IP (Internet Protocol)-Datagrammen zulässt, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows datagram fragmentation; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> die Datagrammfragmentierung zulässt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</source>
          <target state="translated">Datagramme erfordern eine Fragmentierung, wenn ihre Größe das Maximum Transfer Unit (MTU) des Übertragungsmediums übersteigt.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>Datagrams may be fragmented by the sending host or by an intermediate router.</source>
          <target state="translated">Datagramme können vom sendenden Host oder durch einen zwischengeschalteten Router fragmentiert sein.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>If a datagram must be fragmented, and the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</source>
          <target state="translated">Wenn ein Datagramm fragmentiert werden muss, und die <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> Option festgelegt ist, das Datagramm verworfen und Internet Control Message Protocol (ICMP) folgende Fehlermeldung zurück an den Absender der das Datagramm gesendet wird.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Net.Sockets.Socket.DontFragment%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.DontFragment">
          <source>This property can be set only for sockets that use the <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph> flag or the <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph> flag.</source>
          <target state="translated">Diese Eigenschaft kann nur für Sockets festgelegt werden, die das <ph id="ph1">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /&gt;</ph>-Flag oder das <ph id="ph2">&lt;see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /&gt;</ph>-Flag verwenden.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Leaves a multicast group.</source>
          <target state="translated">Verlässt eine Multicastgruppe.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the multicast group to leave.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> der zu verlassenden Multicastgruppe.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>Leaves a multicast group.</source>
          <target state="translated">Verlässt eine Multicastgruppe.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method withdraws the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> from the multicast group identified by the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> -Methode entfernt die <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> Multicastgruppe identifiziert durch das angegebene <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</source>
          <target state="translated">Nach dem Aufruf der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> -Methode, die zugrunde liegende <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sendet ein Internet Group Management-Protokoll (IGMP)-Paket an den Router und entfernt den Router Multicastgruppe.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>After a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</source>
          <target state="translated">Nach einem <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> abgebucht aus der Gruppe "" ist nicht mehr möglich, die dieser Gruppe gesendete Datagramme zu empfangen.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The following example demonstrates how to drop a multicast group by providing a multicast address.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie zu einer Multicastgruppe durch Bereitstellen einer Multicastadresse.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Der zugrunde liegende <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">Die IP-Adresse ist nicht mit dem <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph>-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)">
          <source><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the multicast group to leave.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> der zu verlassenden Multicastgruppe.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The local address of the multicast group to leave.</source>
          <target state="translated">Die lokale Adresse der zu verlassenden Multicastgruppe.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Leaves a multicast group.</source>
          <target state="translated">Verlässt eine Multicastgruppe.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method withdraws the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> from the multicast group identified by the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> -Methode entfernt die <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> Multicastgruppe identifiziert durch das angegebene <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</source>
          <target state="translated">Nach dem Aufruf der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> -Methode, die zugrunde liegende <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sendet ein Internet Group Management-Protokoll (IGMP)-Paket an den Router und entfernt den Router Multicastgruppe.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</source>
          <target state="translated">Nach einem <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> abgebucht aus der Gruppe "" ist nicht mehr möglich, die dieser Gruppe gesendete Datagramme zu empfangen.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use the <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> property to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden die <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> Eigenschaft, um den spezifischen Fehlercode zu erhalten.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The following code example demonstrates how to drop a multicast group by providing a multicast address.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie zu einer Multicastgruppe durch Bereitstellen einer Multicastadresse.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Der zugrunde liegende <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">Die IP-Adresse ist nicht mit dem <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph>-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> may send or receive broadcast packets.</source>
          <target state="translated">Ruft einen <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>-Wert ab, der angibt, ob der <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> Broadcastpakete senden oder empfangen darf, oder legt diesen Wert fest.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows broadcast packets; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> Broadcastpakete zulässt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Der Standardwert ist <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>Broadcasting is limited to a specific subnet.</source>
          <target state="translated">Broadcasting ist auf ein bestimmtes Subnetz beschränkt.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</source>
          <target state="translated">Sie können Ihrem lokalen Subnetz durch Senden eines Pakets 255.255.255.255 übertragen. Alternativ können Sie die gesteuerte Broadcastadresse, die der Netzwerkteil einer Adresse Internetprotokoll (IP), mit der alle Bits in den Hostteil festgelegt ist.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</source>
          <target state="translated">Angenommen, ist Ihre IP-Adresse 192.168.1.40 (eine Adresse der Klasse C mit als die ersten drei Oktette der Netzwerkteil und den Hostteil ist das letzte Oktett), die gesteuerte Broadcastadresse 192.168.1.255.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.EnableBroadcast">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>-Objekt, das durch einen Aufruf von <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The specified remote endpoint.</source>
          <target state="translated">Der angegebene Remoteendpunkt.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>Ends a pending asynchronous receive.</source>
          <target state="translated">Beendet einen ausstehenden asynchronen Empfang.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>If successful, an array of bytes that contains datagram data.</source>
          <target state="translated">Bei Erfolg wird ein Array von Bytes zurückgegeben, dass Datagrammdaten enthält.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">Diese Methode blockiert, bis der Vorgang ist abgeschlossen.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">Um diesen Vorgang synchron auszuführen, verwenden Sie die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to complete an asynchronous receive of a server response.</source>
          <target state="translated">Im folgenden Codebeispiel wird mit <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> asynchronen Empfang einer Serverantwort abgeschlossen.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by a call to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> wurde nicht durch einen Aufruf der <ph id="ph2">&lt;see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /&gt;</ph>-Methode zurückgegeben.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /&gt;</ph> was previously called for the asynchronous read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /&gt;</ph> wurde bereits für den asynchronen Lesevorgang aufgerufen.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>An error occurred when attempting to access the underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</source>
          <target state="translated">Fehler beim Zugriff auf den <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Der zugrunde liegende <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> object returned by a call to <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /&gt;</ph>.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>-Objekt, das durch einen Aufruf von <ph id="ph2">&lt;see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /&gt;</ph> zurückgegeben wird.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>Ends a pending asynchronous send.</source>
          <target state="translated">Beendet einen ausstehenden asynchronen Sendevorgang.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>If successful, the number of bytes sent to the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</source>
          <target state="translated">Wenn erfolgreich, die Anzahl der an den <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> gesendeten Bytes.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>This method blocks until the operation is complete.</source>
          <target state="translated">Diese Methode blockiert, bis der Vorgang ist abgeschlossen.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>To perform this operation synchronously, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Um diesen Vorgang synchron auszuführen, verwenden Sie die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>The following code example uses <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> to complete an asynchronous send of a server request.</source>
          <target state="translated">Im folgenden Codebeispiel wird mit <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.BeginSend%2A&gt;</ph> eine serveranforderung asynchronen Sendevorgang abgeschlossen.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> was not returned by a call to the <ph id="ph2">&lt;see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="asyncResult" /&gt;</ph> wurde nicht durch einen Aufruf der <ph id="ph2">&lt;see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /&gt;</ph>-Methode zurückgegeben.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source><ph id="ph1">&lt;see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /&gt;</ph> was previously called for the asynchronous read.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /&gt;</ph> wurde bereits für den asynchronen Lesevorgang aufgerufen.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">Fehler beim Zugriff auf den zugrunde liegenden Socket.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Der zugrunde liegende <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows only one client to use a port.</source>
          <target state="translated">Ruft einen <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>-Wert ab, der angibt, ob der <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> nur die Verwendung eines Port durch einen einzigen Client zulässt, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> allows only one client to use a specific port; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> die Verwendung eines bestimmten Ports durch nur einen einzigen Client zulässt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <ph id="ph2">&lt;see langword="false" /&gt;</ph> for all other versions.</source>
          <target state="translated">Für Windows Server 2003 und Windows XP Service Pack 2 oder höher ist der Standardwert <ph id="ph1">&lt;see langword="true" /&gt;</ph>, für alle anderen Versionen <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</source>
          <target state="translated">Standardmäßig können mehrere Clients einen bestimmten Port verwenden. Allerdings kann nur eine der Clients Vorgänge für den Netzwerkdatenverkehr an den Port gesendete ausführen.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>You can use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> property to prevent multiple clients from using a specific port.</source>
          <target state="translated">Sie können die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> Eigenschaft, um zu verhindern, dass mehrere Clients mit einem bestimmten Port.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>This property must be set before the underlying socket is bound to a client port.</source>
          <target state="translated">Diese Eigenschaft muss festgelegt werden, bevor der zugrunde liegenden Socket an einen Port gebunden ist.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>If you call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <ph id="ph5">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> property</source>
          <target state="translated">Beim Aufrufen <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType&gt;</ph>, oder <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>als Nebeneffekt des Konstruktors der Clientport gebunden ist und Sie können anschließend nicht Festlegen der <ph id="ph5">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> Eigenschaft</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>The following code example creates a <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, and gets and sets the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Codebeispiel erstellt eine <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph>, und ermittelt und definiert die <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>An error occurred when attempting to access the underlying socket.</source>
          <target state="translated">Fehler beim Zugriff auf den zugrunde liegenden Socket.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Der zugrunde liegende <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">Fügt einer Multicastgruppe einen <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> hinzu.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The multicast <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the group you want to join.</source>
          <target state="translated">Die Multicast-<ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> der Gruppe, der Sie beitreten möchten.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">Fügt einer Multicastgruppe einen <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> hinzu.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method subscribes the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to a multicast group using the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> Methode abonniert das <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> an eine Multicastgruppe unter Verwendung des angegebenen <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</source>
          <target state="translated">Nach dem Aufruf der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> -Methode, die zugrunde liegende <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sendet ein Internet Group Management-Protokoll (IGMP)-Paket auf den Router Anforderung einer Mitgliedschaft bei der multicast-Gruppe.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The multicast address range is 224.0.0.0 to 239.255.255.255.</source>
          <target state="translated">Der multicast-Adressbereich ist 224.0.0.0 bis 239.255.255.255.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Wenn Sie eine Adresse außerhalb dieses Bereichs angeben oder der Router, der der Anforderung ist, nicht multicastfähig ist aktiviert, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> löst eine <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Once the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Sobald die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> aufgeführt ist mit dem Router als Mitglied der Gruppe "multicast", werden sie in den angegebenen gesendeten Multicastdatagramme empfangen <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You must create the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</source>
          <target state="translated">Sie erstellen, müssen die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> mithilfe der multicast Portnummer; andernfalls, Sie ist nicht möglich Multicastdatagramme empfangen.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method, or the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will not work.</source>
          <target state="translated">Rufen Sie nicht die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode vor dem Aufruf der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> -Methode oder die <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> -Methode funktioniert nicht.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You do not need to belong to a multicast group to send datagrams to a multicast IP address.</source>
          <target state="translated">Sie müssen nicht zu einer Multicastgruppe, damit Datagramme an eine multicast-IP-Adresse senden gehören.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Before joining a multicast group, make sure the socket is bound to the port or endpoint.</source>
          <target state="translated">Vor dem Verknüpfen einer Multicastgruppe, stellen Sie sicher, dass der Socket an den Anschluss oder Endpunkt gebunden ist.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</source>
          <target state="translated">Sie führen, die durch den Aufruf eines Konstruktors, die einen Port oder einen Endpunkt als Parameter akzeptieren.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>To stop receiving multicasted datagrams, call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method and provide the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> of the group from which you would like to withdraw.</source>
          <target state="translated">Um Multicastdatagramme mehr empfangen, rufen Sie die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> Methode, und geben Sie die <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> der Gruppe "" aus dem möchten widerrufen.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>In the IPv6 case, there are several multicast address ranges you can choose from.</source>
          <target state="translated">Im Fall von IPv6 gibt es mehrere Multicastadressenbereiche, denen Sie auswählen können.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>Please, refer to the IETF RFC 2375.</source>
          <target state="translated">Sie finden Sie in der IETF RFC 2375.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</source>
          <target state="translated">Kann nicht aufgerufen werden <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> auf eine <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> erstellt, ohne einen bestimmten lokalen Port (d. h. die <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> oder <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> Konstruktor).</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The following code example demonstrates how to join a multicast group by providing a multicast address.</source>
          <target state="translated">Im folgenden Codebeispiel wird veranschaulicht, wie eine Multicastgruppe durch Bereitstellen einer Multicastadresse.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Der zugrunde liegende <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">Die IP-Adresse ist nicht mit dem <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph>-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The interface index associated with the local IP address on which to join the multicast group.</source>
          <target state="translated">Der Schnittstellenindex, der der lokale IP-Adresse zugeordnet ist, an der die Multicastgruppe herzustellen ist.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The multicast <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the group you want to join.</source>
          <target state="translated">Die Multicast-<ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> der Gruppe, der Sie beitreten möchten.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">Fügt einer Multicastgruppe einen <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> hinzu.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>Before joining a multicast group, be sure the socket is bound to the port or endpoint.</source>
          <target state="translated">Vor dem Verknüpfen einer Multicastgruppe, achten Sie darauf, dass der Socket an den Anschluss oder Endpunkt gebunden ist.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</source>
          <target state="translated">Sie erreichen dies durch den Aufruf eines Konstruktors, der einen Port oder einen Endpunkt als Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The <ph id="ph1">`infindex`</ph> parameter is used to identify a hardware interface on the same link.</source>
          <target state="translated">Die <ph id="ph1">`infindex`</ph> Parameter wird verwendet, um eine Hardwareschnittstelle auf derselben Verbindung zu identifizieren.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>There are several multicast address ranges to choose from.</source>
          <target state="translated">Es gibt mehrere Multicastadressenbereiche zur Auswahl.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>Refer to the IETF RFC 2375.</source>
          <target state="translated">Finden Sie in der IETF RFC 2375.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> constructor).</source>
          <target state="translated">Kann nicht aufgerufen werden <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> auf eine <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> erstellt, ohne einen bestimmten lokalen Port (d. h. die <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType&gt;</ph> oder <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType&gt;</ph> Konstruktor).</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Der zugrunde liegende <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the multicast group to join.</source>
          <target state="translated">Die <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> der Multicastgruppe, der Sie beitreten möchten.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The Time to Live (TTL), measured in router hops.</source>
          <target state="translated">Die TTL, gemessen in Routerhops.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group with the specified Time to Live (TTL).</source>
          <target state="translated">Fügt einer Multicasgruppe einen <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> mit angegebener Gültigkeitsdauer (TTL – Time To Live) hinzu.</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method subscribes the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> to a multicast group using the specified <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> Methode abonniert das <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> an eine Multicastgruppe unter Verwendung des angegebenen <ph id="ph3">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>After calling the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method, the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</source>
          <target state="translated">Nach dem Aufruf der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> -Methode, die zugrunde liegende <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph> sendet ein Internet Group Management-Protokoll (IGMP)-Paket auf den Router Anforderung einer Mitgliedschaft bei der multicast-Gruppe.</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The multicast address range is 224.0.0.0 to 239.255.255.255.</source>
          <target state="translated">Der multicast-Adressbereich ist 224.0.0.0 bis 239.255.255.255.</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Wenn Sie eine Adresse außerhalb dieses Bereichs angeben oder der Router, der der Anforderung ist, nicht multicastfähig ist aktiviert, <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> löst eine <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The <ph id="ph1">`timeToLive`</ph> parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</source>
          <target state="translated">Die <ph id="ph1">`timeToLive`</ph> Parameter gibt an, wie viele Routerhops ein Multicastdatagramm werden darf, bevor Sie verworfen werden.</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Once the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</source>
          <target state="translated">Sobald die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> aufgeführt ist mit dem Router als Mitglied der Gruppe "multicast", werden sie in den angegebenen gesendeten Multicastdatagramme empfangen <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You must create the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</source>
          <target state="translated">Sie erstellen, müssen die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> mithilfe der multicast Portnummer andernfalls Sie ist nicht möglich, Multicastdatagramme empfangen.</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method or the receive method will not work.</source>
          <target state="translated">Rufen Sie nicht die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode vor dem Aufruf der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> -Methode oder die Receive-Methode, funktionieren nicht.</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You do not need to belong to a multicast group to send datagrams to a multicast IP address.</source>
          <target state="translated">Sie müssen nicht zu einer Multicastgruppe, damit Datagramme an eine multicast-IP-Adresse senden gehören.</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>Before joining a multicast group make sure the socket is bound to the port or endpoint.</source>
          <target state="translated">Vor dem Verknüpfen einer Multicastgruppe stellen Sie sicher, dass der Socket an den Anschluss oder Endpunkt gebunden ist.</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You do that by calling one of the constructors that accept as parameter a port or an endpoint.</source>
          <target state="translated">Sie führen, die durch den Aufruf eines Konstruktors, die als Parameter, einen Port oder einen Endpunkt akzeptieren.</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>To stop receiving multicasted datagrams, call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> method and provide the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> of the group from which you would like to withdraw.</source>
          <target state="translated">Um Multicastdatagramme mehr empfangen, rufen Sie die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A&gt;</ph> Methode, und geben Sie die <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> der Gruppe "" aus dem möchten widerrufen.</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</source>
          <target state="translated">Kann nicht aufgerufen werden <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> auf eine <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> erstellt, ohne einen bestimmten lokalen Port (d. h. die <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> oder <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> Konstruktor).</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</source>
          <target state="translated">Im folgenden Beispiel wird veranschaulicht, wie eine Multicastgruppe verknüpfen, indem Sie zwei Parameter, eine Multicastadresse und eine Zahl, die Gültigkeitsdauer (TTL) darstellt.</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The TTL provided is not between 0 and 255</source>
          <target state="translated">Die bereitgestellte TTL liegt nicht zwischen 0 und 255</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Der zugrunde liegende <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="multicastAddr" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)">
          <source>The IP address is not compatible with the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph> value that defines the addressing scheme of the socket.</source>
          <target state="translated">Die IP-Adresse ist nicht mit dem <ph id="ph1">&lt;see cref="T:System.Net.Sockets.AddressFamily" /&gt;</ph>-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The multicast <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> of the group you want to join.</source>
          <target state="translated">Die Multicast-<ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph> der Gruppe, der Sie beitreten möchten.</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The local <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>.</source>
          <target state="translated">Die lokale <ph id="ph1">&lt;see cref="T:System.Net.IPAddress" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>Adds a <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> to a multicast group.</source>
          <target state="translated">Fügt einer Multicastgruppe einen <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> hinzu.</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</source>
          <target state="translated">Achten Sie darauf, dass der Socket an den Anschluss oder Endpunkt gebunden ist, bevor eine Multicastgruppe.</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</source>
          <target state="translated">Sie erreichen dies durch den Aufruf eines Konstruktors, der einen Port oder einen Endpunkt als Parameter akzeptiert.</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>There are several multicast address ranges to choose from.</source>
          <target state="translated">Es gibt mehrere Multicastadressenbereiche zur Auswahl.</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>You can find them in the IETF RFC 2375.</source>
          <target state="translated">Sie finden sie im IETF RFC 2375.</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>You cannot call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> on a <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> constructed without a specific local port (that is, using the <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> or <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> constructor).</source>
          <target state="translated">Kann nicht aufgerufen werden <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> auf eine <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> erstellt, ohne einen bestimmten lokalen Port (d. h. die <ph id="ph3">&lt;xref:System.Net.Sockets.UdpClient.%23ctor&gt;</ph> oder <ph id="ph4">&lt;xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29&gt;</ph> Konstruktor).</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Der zugrunde liegende <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>Gets or sets a <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph> value that specifies whether outgoing multicast packets are delivered to the sending application.</source>
          <target state="translated">Ruft einen <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>-Wert ab, der angibt, ob ausgehende Multicastpakete an die sendende Anwendung übermittelt werden, oder legt diesen fest.</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> receives outgoing multicast packets; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der <ph id="ph2">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ausgehende Multicastpakete empfängt, andernfalls <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>Multicast is a scalable method for many-to-many communication on the Internet.</source>
          <target state="translated">Multicast ist eine skalierbare Methode für die m: n-Kommunikation über das Internet.</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</source>
          <target state="translated">Wenn ein Prozess eine Multicastadresse abonniert, werden alle Pakete vom gesendet, dass der Prozess durch alle anderen Prozesse, die die Multicastadresse abonniert hat empfangen werden.</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.MulticastLoopback">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the remote host from which the data was sent.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>, der den Remotehost darstellt, von dem die Daten gesendet wurden.</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>Returns a UDP datagram that was sent by a remote host.</source>
          <target state="translated">Gibt ein von einem Remotehost gesendetes UDP-Datagramm zurück.</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that contains datagram data.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>, das Datagrammdaten enthält.</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will block until a datagram arrives from a remote host.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> Methode blockiert, bis ein Datagramm von einem Remotehost eingeht.</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>When data is available, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will read the first enqueued datagram and return the data portion as a byte array.</source>
          <target state="translated">Wenn Daten verfügbar ist, werden die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> -Methode liest die erste Datagramm und gibt den Datenteil als Bytearray zurück.</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>This method populates the <ph id="ph1">`remoteEP`</ph> parameter with the <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> and port number of the sender.</source>
          <target state="translated">Diese Methode füllt die <ph id="ph1">`remoteEP`</ph> Parameter mit dem <ph id="ph2">&lt;xref:System.Net.IPAddress&gt;</ph> und Portnummer des Absenders.</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>If you specify a default remote host in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method will accept datagrams from that host only.</source>
          <target state="translated">Bei Angabe einer Standard-Remotehost in der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> -Methode, die <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> Methode akzeptiert nur Datagramme von diesem Host.</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>All other datagrams will be discarded.</source>
          <target state="translated">Alle anderen Datagramme werden verworfen.</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>If you intend to receive multicasted datagrams, do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">Wenn Sie beabsichtigen, Multicastdatagramme empfangen, rufen Sie nicht die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode vor dem Aufruf der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> you use to receive datagrams must be created using the multicast port number.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> verwenden, um empfangen Datagramme muss erstellt werden, mithilfe der multicast-Portnummer.</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> method blocks execution until it receives a message.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph> Methode blockiert die Ausführung, bis er eine Nachricht empfängt.</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>Using the <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> passed to <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, the identity of the responding host is revealed.</source>
          <target state="translated">Mithilfe der <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> übergeben <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Receive%2A&gt;</ph>, die Identität der antwortende Host offen gelegt wird.</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Der zugrunde liegende <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>Returns a UDP datagram asynchronously that was sent by a remote host.</source>
          <target state="translated">Gibt ein von einem Remotehost gesendetes UDP-Datagramm asynchron zurück.</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Gibt <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>zurück.</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The task object representing the asynchronous operation.</source>
          <target state="translated">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>This operation will not block.</source>
          <target state="translated">Dieser Vorgang wird nicht blockiert.</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The returned <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; object will complete after the UDP packet has been received.</source>
          <target state="translated">Das zurückgegebene <ph id="ph1">&lt;xref:System.Threading.Tasks.Task%601&gt;</ph>&gt; Objekt wird abgeschlossen, nachdem das UDP-Paket empfangen wurde.</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>If you specify a default remote host in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method, this method will accept datagrams from that host only.</source>
          <target state="translated">Wenn Sie angeben, dass eine Standard-Remotehost in der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> -Methode, diese Methode wird von diesem Host nur Datagramme akzeptieren.</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>All other datagrams will be discarded.</source>
          <target state="translated">Alle anderen Datagramme werden verworfen.</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>If you intend to receive multicasted datagrams, do not call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method prior to calling this method.</source>
          <target state="translated">Wenn Sie beabsichtigen, Multicastdatagramme empfangen, rufen Sie nicht die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode vor dem Aufruf dieser Methode.</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> you use to receive datagrams must be created using the multicast port number.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient&gt;</ph> verwenden, um empfangen Datagramme muss erstellt werden, mithilfe der multicast-Portnummer.</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>The underlying <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> has been closed.</source>
          <target state="translated">Der zugrunde liegende <ph id="ph1">&lt;see cref="T:System.Net.Sockets.Socket" /&gt;</ph> wurde geschlossen.</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.ReceiveAsync">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Sends a UDP datagram to a remote host.</source>
          <target state="translated">Sendet ein UDP-Datagramm an einen Remotehost.</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>, das das zu sendende UDP-Datagramm angibt, dargestellt als Bytearray.</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Die Anzahl der Bytes im Datagramm.</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>Sends a UDP datagram to a remote host.</source>
          <target state="translated">Sendet ein UDP-Datagramm an einen Remotehost.</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The number of bytes sent.</source>
          <target state="translated">Die Anzahl der gesendeten Bytes.</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>This overload sends datagrams to the remote host established in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method and returns the number of bytes sent.</source>
          <target state="translated">Diese Überladung sendet Datagramme an den Remotehost, der der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> -Methode und gibt die Anzahl der gesendeten Bytes.</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>If you do not call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> before calling this overload, the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method will throw a <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Wenn Sie nicht aufrufen <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> vor dem Aufrufen dieser Überladung der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode löst eine <ph id="ph3">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method and specify the desired remote host.</source>
          <target state="translated">Wenn Sie Datagramme an einen anderen Remotehost senden möchten, müssen Sie Aufrufen der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode, und geben Sie den gewünschten Hostnamen.</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>Use either of the other <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method overloads to send datagrams to a broadcast address.</source>
          <target state="translated">Verwenden Sie eine der anderen <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> -methodenüberladungen, um Datagramme an eine Broadcastadresse senden.</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>You must establish a default remote host prior to using this overload.</source>
          <target state="translated">Sie müssen vor der Verwendung dieser Überladung einen Standard-Remotehost herstellen.</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> hat bereits einen Standardremotehost eingerichtet.</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>, das das zu sendende UDP-Datagramm angibt, dargestellt als Bytearray.</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Die Anzahl der Bytes im Datagramm.</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the host and port to which to send the datagram.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>, der den Host und den Anschluss darstellt, an die das Datagramm gesendet werden soll.</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Sends a UDP datagram to the host at the specified remote endpoint.</source>
          <target state="translated">Sendet ein UDP-Datagramm an den Host am angegebenen Remoteendpunkt.</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The number of bytes sent.</source>
          <target state="translated">Die Anzahl der gesendeten Bytes.</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> -Methode sendet Datagramme an den angegebenen Endpunkt und gibt die Anzahl der erfolgreich gesendeten Bytes zurück.</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Before calling this overload, you must first create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number of the remote host to which your datagrams will be delivered.</source>
          <target state="translated">Bevor Sie diese Überladung aufrufen, müssen Sie zuerst erstellen eine <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> mit der IP-Adresse und Portnummer des Remotehosts, an die die Datagramme übermittelt werden.</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> for the <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">Senden von Datagrammen auf die Standard-Broadcast Adresse 255.255.255.255, indem Sie angeben <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> für die <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> Eigenschaft der <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>After you have created this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, pass it to the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method as the <ph id="ph3">`endPoint`</ph> parameter.</source>
          <target state="translated">Nachdem Sie diese erstellt haben <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, übergeben Sie sie an der <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> -Methode, wie die <ph id="ph3">`endPoint`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn Sie Datagramme an eine andere Broadcastadresse senden möchten, verwenden Sie die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> Methode zum Abrufen des zugrunde liegenden <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, und legen Sie die Socketoption auf <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Sie können auch mithilfe von Wiederherstellen der <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Do not provide an <ph id="ph1">`endPoint`</ph> parameter to this method if you have already established a remote host with the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Bieten kein <ph id="ph1">`endPoint`</ph> Parameter für diese Methode, wenn Sie einen Remotehost mit bereits eingerichtet haben die <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you do, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Wenn Sie dies tun, die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode löst eine <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>This example uses an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> to specify the target host.</source>
          <target state="translated">Dieses Beispiel verwendet eine <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> auf den Zielhost angeben.</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> hat bereits einen Standardremotehost eingerichtet.</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>, das das zu sendende UDP-Datagramm angibt, dargestellt als Bytearray.</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Die Anzahl der Bytes im Datagramm.</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The name of the remote host to which you intend to send the datagram.</source>
          <target state="translated">Der Name des Remotehosts, an den das Datagramm gesendet werden soll.</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The remote port number with which you intend to communicate.</source>
          <target state="translated">Die Nummer des Remoteports, mit dem kommuniziert werden soll.</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Sends a UDP datagram to a specified port on a specified remote host.</source>
          <target state="translated">Sendet ein UDP-Datagramm an einen angegebenen Port auf einem angegebenen Remotehost.</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The number of bytes sent.</source>
          <target state="translated">Die Anzahl der gesendeten Bytes.</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method sends datagrams to the values specified by the <ph id="ph2">`hostname`</ph> and <ph id="ph3">`port`</ph> parameters and returns the number of bytes successfully sent.</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> -Methode sendet Datagramme an die angegebenen Werte von der <ph id="ph2">`hostname`</ph> und <ph id="ph3">`port`</ph> Parameter und gibt die Anzahl der erfolgreich Bytes gesendeten.</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the <ph id="ph1">`hostname`</ph> parameter value.</source>
          <target state="translated">Sie können die Standard-Broadcastadresse Datagramme senden, durch die Angabe von "255.255.255.255" für die <ph id="ph1">`hostname`</ph> Parameterwert.</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn Sie Datagramme an eine andere Broadcastadresse senden möchten, verwenden Sie die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> Methode zum Abrufen des zugrunde liegenden <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, und legen Sie die Socketoption auf <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Sie können auch mithilfe von Wiederherstellen der <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Do not provide a host name or port number to this method if you have already established a remote host with the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Nicht Geben Sie einen Hostnamen oder Portnummer ein, die diese Methode, wenn Sie einen Remotehost mit bereits eingerichtet haben die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you do, the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Wenn Sie dies tun, die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode löst eine <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> method.</source>
          <target state="translated">Das folgende Beispiel veranschaulicht die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Send%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>This example uses a host name and a port number to identify the target host.</source>
          <target state="translated">Dieses Beispiel verwendet einen Hostnamen und einer Portnummer auf um den Zielhost zu identifizieren.</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> hat bereits einen Standardremotehost eingerichtet.</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" uid="T:System.Net.Sockets.UdpClient">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">Sendet asynchron ein UPD-Datagramm an einen Remotehost.</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>, das das zu sendende UDP-Datagramm angibt, dargestellt als Bytearray.</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Die Anzahl der Bytes im Datagramm.</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">Sendet asynchron ein UPD-Datagramm an einen Remotehost.</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Gibt <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>zurück.</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>This overload sends datagrams to the remote host established in the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Diese Überladung sendet Datagramme an den Remotehost, der der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>If you do not call <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> before calling this overload, the method will throw a <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Wenn Sie nicht aufrufen <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> vor dem Aufrufen dieser Überladung, die Methode löst eine <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>If you want to send datagrams to a different remote host, you must call the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method and specify the desired remote host.</source>
          <target state="translated">Wenn Sie Datagramme an einen anderen Remotehost senden möchten, müssen Sie Aufrufen der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode, und geben Sie den gewünschten Hostnamen.</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>Use either of the other <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.SendAsync%2A&gt;</ph> method overloads to send datagrams to a broadcast address.</source>
          <target state="translated">Verwenden Sie eine der anderen <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.SendAsync%2A&gt;</ph> -methodenüberladungen, um Datagramme an eine Broadcastadresse senden.</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> hat bereits einen Standardremotehost eingerichtet.</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>, das das zu sendende UDP-Datagramm angibt, dargestellt als Bytearray.</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Die Anzahl der Bytes im Datagramm.</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph> that represents the host and port to which to send the datagram.</source>
          <target state="translated">Ein <ph id="ph1">&lt;see cref="T:System.Net.IPEndPoint" /&gt;</ph>, der den Host und den Anschluss darstellt, an die das Datagramm gesendet werden soll.</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">Sendet asynchron ein UPD-Datagramm an einen Remotehost.</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Gibt <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>zurück.</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>This method sends datagrams to the specified endpoint.</source>
          <target state="translated">Diese Methode sendet Datagramme an den angegebenen Endpunkt.</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Before calling this overload, you must first create an <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> using the IP address and port number of the remote host to which your datagrams will be delivered.</source>
          <target state="translated">Bevor Sie diese Überladung aufrufen, müssen Sie zuerst erstellen eine <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph> mit der IP-Adresse und Portnummer des Remotehosts, an die die Datagramme übermittelt werden.</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> for the <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</source>
          <target state="translated">Senden von Datagrammen auf die Standard-Broadcast Adresse 255.255.255.255, indem Sie angeben <ph id="ph1">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph> für die <ph id="ph2">&lt;xref:System.Net.IPAddress.Address%2A&gt;</ph> Eigenschaft der <ph id="ph3">&lt;xref:System.Net.IPEndPoint&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>After you have created this <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, pass it to this method as the <ph id="ph2">`endPoint`</ph> parameter.</source>
          <target state="translated">Nachdem Sie diese erstellt haben <ph id="ph1">&lt;xref:System.Net.IPEndPoint&gt;</ph>, übergibt ihn dann an diese Methode als dem <ph id="ph2">`endPoint`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn Sie Datagramme an eine andere Broadcastadresse senden möchten, verwenden Sie die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> Methode zum Abrufen des zugrunde liegenden <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, und legen Sie die Socketoption auf <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Sie können auch mithilfe von Wiederherstellen der <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Do not provide an <ph id="ph1">`endPoint`</ph> parameter to this method if you have already established a remote host with the <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Bieten kein <ph id="ph1">`endPoint`</ph> Parameter für diese Methode, wenn Sie einen Remotehost mit bereits eingerichtet haben die <ph id="ph2">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you do, this method will throw a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Wenn Sie dies tun, gibt diese Methode löst eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> hat bereits einen Standardremotehost eingerichtet.</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source><ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An array of type <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> that specifies the UDP datagram that you intend to send represented as an array of bytes.</source>
          <target state="translated">Ein Array vom Typ <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>, das das zu sendende UDP-Datagramm angibt, dargestellt als Bytearray.</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The number of bytes in the datagram.</source>
          <target state="translated">Die Anzahl der Bytes im Datagramm.</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The name of the remote host to which you intend to send the datagram.</source>
          <target state="translated">Der Name des Remotehosts, an den das Datagramm gesendet werden soll.</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The remote port number with which you intend to communicate.</source>
          <target state="translated">Die Nummer des Remoteports, mit dem kommuniziert werden soll.</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Sends a UDP datagram asynchronously to a remote host.</source>
          <target state="translated">Sendet asynchron ein UPD-Datagramm an einen Remotehost.</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>.</source>
          <target state="translated">Gibt <ph id="ph1">&lt;see cref="T:System.Threading.Tasks.Task`1" /&gt;</ph>zurück.</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>This method sends datagrams to the values specified by the <ph id="ph1">`hostname`</ph> and <ph id="ph2">`port`</ph> parameters.</source>
          <target state="translated">Diese Methode sendet Datagramme an die angegebenen Werte von der <ph id="ph1">`hostname`</ph> und <ph id="ph2">`port`</ph> Parameter.</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the <ph id="ph1">`hostname`</ph> parameter value.</source>
          <target state="translated">Sie können die Standard-Broadcastadresse Datagramme senden, durch die Angabe von "255.255.255.255" für die <ph id="ph1">`hostname`</ph> Parameterwert.</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you want to send datagrams to any other broadcast address, use the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> method to obtain the underlying <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, and set the socket option to <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Wenn Sie Datagramme an eine andere Broadcastadresse senden möchten, verwenden Sie die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Client%2A&gt;</ph> Methode zum Abrufen des zugrunde liegenden <ph id="ph2">&lt;xref:System.Net.Sockets.Socket&gt;</ph>, und legen Sie die Socketoption auf <ph id="ph3">&lt;xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>You can also revert to using the <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> class.</source>
          <target state="translated">Sie können auch mithilfe von Wiederherstellen der <ph id="ph1">&lt;xref:System.Net.Sockets.Socket&gt;</ph> Klasse.</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Do not provide a host name or port number to this method if you have already established a remote host with the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> method.</source>
          <target state="translated">Nicht Geben Sie einen Hostnamen oder Portnummer ein, die diese Methode, wenn Sie einen Remotehost mit bereits eingerichtet haben die <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Connect%2A&gt;</ph> Methode.</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you do, this method will throw a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</source>
          <target state="translated">Wenn Sie dies tun, gibt diese Methode löst eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>If you receive a <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, use <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> to obtain the specific error code.</source>
          <target state="translated">Wenn Sie erhalten eine <ph id="ph1">&lt;xref:System.Net.Sockets.SocketException&gt;</ph>, verwenden <ph id="ph2">&lt;xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType&gt;</ph> um den spezifischen Fehlercode abzurufen.</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>Once you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</source>
          <target state="translated">Nachdem Sie diesen Code erhalten haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="dgram" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> has already established a default remote host.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> hat bereits einen Standardremotehost eingerichtet.</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> is closed.</source>
          <target state="translated">Der <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> ist geschlossen.</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" uid="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)">
          <source>An error occurred when accessing the socket.</source>
          <target state="translated">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph>.</source>
          <target state="translated">Ruft einen Wert ab, der die Gültigkeitsdauer (TTL – Time to Live) von IP (Internet Protocol)-Paketen angibt, die vom <ph id="ph1">&lt;see cref="T:System.Net.Sockets.UdpClient" /&gt;</ph> gesendet werden.</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>The TTL value.</source>
          <target state="translated">Der TTL-Wert.</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</source>
          <target state="translated">Der TTL-Wert gibt die maximale Anzahl von Routern, die ein Paket durchlaufen kann, bevor der Router verwirft das Paket und eine Internet ICMP Control Message Protocol () "Gültigkeitsdauer überschritten" Fehlermeldung an den Absender zurückgegeben.</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Net.Sockets.UdpClient.Ttl">
          <source>The following code example shows the use of the <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Ttl%2A&gt;</ph> property.</source>
          <target state="translated">Das folgende Codebeispiel veranschaulicht die Verwendung von der <ph id="ph1">&lt;xref:System.Net.Sockets.UdpClient.Ttl%2A&gt;</ph> Eigenschaft.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>