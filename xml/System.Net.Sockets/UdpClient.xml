<Type Name="UdpClient" FullName="System.Net.Sockets.UdpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="084168d83286cd4ae2fe9807e27baab220ca0c74" />
    <Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="11/20/2018" />
    <Meta Name="ms.locfileid" Value="52226892" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UdpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="7528f-101">Stellt die UDP-Netzwerkdienste (User Datagram Protocol) bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7528f-101">Provides User Datagram Protocol (UDP) network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-102">Die <xref:System.Net.Sockets.UdpClient> -Klasse stellt einfache Methoden zum Senden und Empfangen von verbindungsloser UDP-Datagramme im synchronen Modus blockiert.</span><span class="sxs-lookup"><span data-stu-id="7528f-102">The <xref:System.Net.Sockets.UdpClient> class provides simple methods for sending and receiving connectionless UDP datagrams in blocking synchronous mode.</span></span> <span data-ttu-id="7528f-103">Da UDP ein verbindungsloses Transportprotokoll ist, müssen Sie nicht zu, um eine Verbindung vor dem Senden und Empfangen von Daten herzustellen.</span><span class="sxs-lookup"><span data-stu-id="7528f-103">Because UDP is a connectionless transport protocol, you do not need to establish a remote host connection prior to sending and receiving data.</span></span> <span data-ttu-id="7528f-104">Zweck haben Sie jedoch die Möglichkeit, einen Standardremotehost eingerichtet, in einem der beiden folgenden Methoden:</span><span class="sxs-lookup"><span data-stu-id="7528f-104">You do, however, have the option of establishing a default remote host in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="7528f-105">Erstellen Sie eine Instanz von der <xref:System.Net.Sockets.UdpClient> -Klasse unter Verwendung des remote-Host und Anschlussnummer als Parameter.</span><span class="sxs-lookup"><span data-stu-id="7528f-105">Create an instance of the <xref:System.Net.Sockets.UdpClient> class using the remote host name and port number as parameters.</span></span>  
  
-   <span data-ttu-id="7528f-106">Erstellen Sie eine Instanz von der <xref:System.Net.Sockets.UdpClient> Klasse und rufen anschließend die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-106">Create an instance of the <xref:System.Net.Sockets.UdpClient> class and then call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span>  
  
 <span data-ttu-id="7528f-107">Können Sie eines der gesendeten Methoden zur Verfügung gestellt, der <xref:System.Net.Sockets.UdpClient> zum Senden von Daten auf einem Remotegerät.</span><span class="sxs-lookup"><span data-stu-id="7528f-107">You can use any of the send methods provided in the <xref:System.Net.Sockets.UdpClient> to send data to a remote device.</span></span> <span data-ttu-id="7528f-108">Verwenden der <xref:System.Net.Sockets.UdpClient.Receive%2A> Methode, um Daten vom remote-Hosts empfangen.</span><span class="sxs-lookup"><span data-stu-id="7528f-108">Use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method to receive data from remote hosts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-109">Rufen Sie keine <xref:System.Net.Sockets.UdpClient.Send%2A> unter Verwendung eines Hostnamens oder <xref:System.Net.IPEndPoint> , wenn Sie bereits einen Standardremotehost angegeben haben.</span><span class="sxs-lookup"><span data-stu-id="7528f-109">Do not call <xref:System.Net.Sockets.UdpClient.Send%2A> using a host name or <xref:System.Net.IPEndPoint> if you have already specified a default remote host.</span></span> <span data-ttu-id="7528f-110">Wenn Sie dies tun, <xref:System.Net.Sockets.UdpClient> wird eine Ausnahme ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="7528f-110">If you do, <xref:System.Net.Sockets.UdpClient> will throw an exception.</span></span>  
  
 <span data-ttu-id="7528f-111"><xref:System.Net.Sockets.UdpClient> -Methoden können Sie zum Senden und Empfangen von Multicastdatagramme auch.</span><span class="sxs-lookup"><span data-stu-id="7528f-111"><xref:System.Net.Sockets.UdpClient> methods also allow you to send and receive multicast datagrams.</span></span> <span data-ttu-id="7528f-112">Verwenden der <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Methode zum Abonnieren einer <xref:System.Net.Sockets.UdpClient> an eine Multicastgruppe.</span><span class="sxs-lookup"><span data-stu-id="7528f-112">Use the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method to subscribe a <xref:System.Net.Sockets.UdpClient> to a multicast group.</span></span> <span data-ttu-id="7528f-113">Verwenden der <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> Methode zum Kündigen des Abonnements eine <xref:System.Net.Sockets.UdpClient> aus einer Multicastgruppe.</span><span class="sxs-lookup"><span data-stu-id="7528f-113">Use the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method to unsubscribe a <xref:System.Net.Sockets.UdpClient> from a multicast group.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-114">Im folgenden Beispiel wird eine <xref:System.Net.Sockets.UdpClient> Verbindung mithilfe des Hostnamens www.contoso.com auf Port 11000.</span><span class="sxs-lookup"><span data-stu-id="7528f-114">The following example establishes a <xref:System.Net.Sockets.UdpClient> connection using the host name www.contoso.com on port 11000.</span></span> <span data-ttu-id="7528f-115">Eine kurze Zeichenfolge-Nachricht wird an zwei separate Remotehostcomputer gesendet.</span><span class="sxs-lookup"><span data-stu-id="7528f-115">A small string message is sent to two separate remote host machines.</span></span> <span data-ttu-id="7528f-116">Die <xref:System.Net.Sockets.UdpClient.Receive%2A> Methode blockiert die Ausführung, bis eine Nachricht empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="7528f-116">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until a message is received.</span></span> <span data-ttu-id="7528f-117">Mithilfe der <xref:System.Net.IPEndPoint> übergeben <xref:System.Net.Sockets.UdpClient.Receive%2A>, die Identität des antwortenden Hosts angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="7528f-117">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClientExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClientExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClientExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClientExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClientExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClientExample/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="7528f-118">Um eine ausgehende Verbindung herzustellen, oder übernehmen Sie eine eingehende Anforderung.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7528f-118">To establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
    <related type="Article" href="~/docs/framework/network-programming/tcp-udp.md">
      <span data-ttu-id="7528f-119">TCP-UDP</span>
      <span class="sxs-lookup">
        <span data-stu-id="7528f-119">TCP-UDP</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-120">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-120">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7528f-121">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-122">Dieser Konstruktor erstellt ein neues <xref:System.Net.Sockets.UdpClient> und ermöglicht es dem zugrunde liegenden Dienstanbieter, die am besten geeignete lokale IPv4-Adresse und Port zuzuweisen.</span><span class="sxs-lookup"><span data-stu-id="7528f-122">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and allows the underlying service provider to assign the most appropriate local IPv4 address and port number.</span></span> <span data-ttu-id="7528f-123">Wenn dieser Konstruktor verwendet wird, die <xref:System.Net.Sockets.UdpClient> Instanz mit der IPv4-, die nicht geändert oder überschrieben, die durch einen Aufruf der-Methode verbinden mit einem Ziel-IPv6-Adressfamilie festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="7528f-123">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-124">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-124">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-125">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-125">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="7528f-126">Dieser Konstruktor ist nicht geeignet, für das Beitreten zu einer Multicastgruppe, da sie nicht die Socket-Bindung durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="7528f-126">This constructor is not suitable for joining a multicast group because it does not perform socket binding.</span></span> <span data-ttu-id="7528f-127">Darüber hinaus funktioniert nur mit IPv4-Adresstypen an.</span><span class="sxs-lookup"><span data-stu-id="7528f-127">Also, it works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-128">Im folgenden Beispiel wird veranschaulicht, wie die Standard-Konstruktor zum Erstellen einer Instanz von der <xref:System.Net.Sockets.UdpClient> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7528f-128">The following example demonstrates how to use the default constructor to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-129">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-129">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="7528f-130">Die Nummer des lokalen Anschlusses, über den die Kommunikation stattfinden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-130">The local port number from which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-131">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse und bindet sie an die angegebene lokale Anschlussnummer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-131">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-132">Dieser Konstruktor erstellt eine zugrunde liegende <xref:System.Net.Sockets.Socket> und bindet sie an die Nummer des Ports, die von dem Sie kommunizieren möchten.</span><span class="sxs-lookup"><span data-stu-id="7528f-132">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span> <span data-ttu-id="7528f-133">Verwenden Sie diesen Konstruktor, wenn Sie nur die lokale Portnummer festlegen möchten.</span><span class="sxs-lookup"><span data-stu-id="7528f-133">Use this constructor if you are only interested in setting the local port number.</span></span> <span data-ttu-id="7528f-134">Der zugrunde liegenden Dienstanbieter wird die lokale IP-Adresse zuweisen.</span><span class="sxs-lookup"><span data-stu-id="7528f-134">The underlying service provider will assign the local IP address.</span></span> <span data-ttu-id="7528f-135">Wenn Sie 0 an den Konstruktor übergeben, wird der zugrunde liegenden Dienstanbieter eine Portnummer zuweisen.</span><span class="sxs-lookup"><span data-stu-id="7528f-135">If you pass 0 to the constructor, the underlying service provider will assign a port number.</span></span> <span data-ttu-id="7528f-136">Wenn dieser Konstruktor verwendet wird, die <xref:System.Net.Sockets.UdpClient> Instanz mit der IPv4-, die nicht geändert oder überschrieben, die durch einen Aufruf der-Methode verbinden mit einem Ziel-IPv6-Adressfamilie festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="7528f-136">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with an address family of IPv4 that cannot be changed or overwritten by a connect method call with an IPv6 target.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-137">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-137">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-138">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-138">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="7528f-139">Dieser Konstruktor kann nur mit IPv4-Adresstypen an.</span><span class="sxs-lookup"><span data-stu-id="7528f-139">This constructor works only with IPv4 address types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-140">Im folgenden Beispiel wird veranschaulicht, wie eine lokale Portnummer erstellen Sie eine Instanz von mit der <xref:System.Net.Sockets.UdpClient> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7528f-140">The following example demonstrates using a local port number to create an instance of the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7528f-141">Der <paramref name="port" />-Parameter ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" /> oder kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-141">The <paramref name="port" /> parameter is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-142">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-142">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="7528f-143">Ein <see cref="T:System.Net.IPEndPoint" />, der den lokalen Endpunkt darstellt, an den Sie die UDP-Verbindung binden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-143">An <see cref="T:System.Net.IPEndPoint" /> that respresents the local endpoint to which you bind the UDP connection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-144">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse und bindet sie an den angegebenen lokalen Endpunkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-144">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-145">Dieser Konstruktor erstellt ein neues <xref:System.Net.Sockets.UdpClient> und bindet sie an der <xref:System.Net.IPEndPoint> gemäß der `localEP` Parameter.</span><span class="sxs-lookup"><span data-stu-id="7528f-145">This constructor creates a new <xref:System.Net.Sockets.UdpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="7528f-146">Bevor Sie diesen Konstruktor aufrufen, müssen Sie erstellen eine <xref:System.Net.IPEndPoint> mithilfe der IP-Adresse und den Port aus dem Sie Daten senden und empfangen möchten.</span><span class="sxs-lookup"><span data-stu-id="7528f-146">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="7528f-147">Sie müssen sich nicht um eine lokale IP-Adresse und Port-Nummer für das Senden und Empfangen von Daten anzugeben.</span><span class="sxs-lookup"><span data-stu-id="7528f-147">You do not need to specify a local IP address and port number for sending and receiving data.</span></span> <span data-ttu-id="7528f-148">Wenn Sie nicht, weist der zugrunde liegenden Dienstanbieter am besten geeignete lokale IP-Adresse und den Port an.</span><span class="sxs-lookup"><span data-stu-id="7528f-148">If you do not, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="7528f-149">Wenn dieser Konstruktor verwendet wird, die <xref:System.Net.Sockets.UdpClient> Instanz wird festgelegt, mit der Adressfamilie, die gemäß der `localEP` Parameter, der nicht durch den Aufruf einer Connect-Methode mit einer anderen Adressfamilie überschrieben oder geändert werden.</span><span class="sxs-lookup"><span data-stu-id="7528f-149">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `localEP` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-150">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-150">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-151">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-151">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-152">Im folgende Beispiel wird veranschaulicht, wie zum Erstellen einer Instanz von der <xref:System.Net.Sockets.UdpClient> -Klasse mit einem lokalen Endpunkt an.</span><span class="sxs-lookup"><span data-stu-id="7528f-152">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-153">
            <paramref name="localEP" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-153">
              <paramref name="localEP" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-154">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-154">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="7528f-155">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte, der das Adressierungsschema für den Socket angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-155">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-156">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-156">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-157">Die `family` Parameter bestimmt, ob der Listener, eine IPv4-Adresse (IPv4) oder eine IP-Version 6 (IPv6 verwendet) Adresse.</span><span class="sxs-lookup"><span data-stu-id="7528f-157">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="7528f-158">Um eine IPv4-Adresse verwenden möchten, übergeben die <xref:System.Net.Sockets.AddressFamily.InterNetwork> Wert.</span><span class="sxs-lookup"><span data-stu-id="7528f-158">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="7528f-159">Um eine IPv6-Adresse verwenden möchten, übergeben die <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> Wert.</span><span class="sxs-lookup"><span data-stu-id="7528f-159">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="7528f-160">Übergeben einen anderen Wert führt dazu, dass die Methode zum Auslösen einer <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-160">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="7528f-161">Wenn dieser Konstruktor verwendet wird, die <xref:System.Net.Sockets.UdpClient> Instanz wird festgelegt, mit der Adressfamilie, die gemäß der `family` Parameter, der nicht durch den Aufruf einer Connect-Methode mit einer anderen Adressfamilie überschrieben oder geändert werden.</span><span class="sxs-lookup"><span data-stu-id="7528f-161">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-162">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-162">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-163">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-163">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="7528f-164">Die <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> eignet sich nicht für das Beitreten zu einer Multicastgruppe, da sie nicht die Socket-Bindung durchgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="7528f-164">The <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> is not suitable for joining a multicast group because it does not perform socket binding.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7528f-165">
            <paramref name="family" /> ist nicht <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-165">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-166">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-166">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (int port, System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port, valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.Int32,System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer, family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(int port, System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : int * System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (port, family)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="port">
          <span data-ttu-id="7528f-167">Der Anschluss, der auf eingehende Verbindungsversuche überwacht werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-167">The port on which to listen for incoming connection attempts.</span>
          </span>
        </param>
        <param name="family">
          <span data-ttu-id="7528f-168">Einer der <see cref="T:System.Net.Sockets.AddressFamily" />-Werte, der das Adressierungsschema für den Socket angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-168">One of the <see cref="T:System.Net.Sockets.AddressFamily" /> values that specifies the addressing scheme of the socket.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-169">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse und bindet sie an die angegebene lokale Anschlussnummer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-169">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and binds it to the local port number provided.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-170">Dieser Konstruktor erstellt eine zugrunde liegende <xref:System.Net.Sockets.Socket> und bindet sie an die Nummer des Ports, die von dem Sie kommunizieren möchten.</span><span class="sxs-lookup"><span data-stu-id="7528f-170">This constructor creates an underlying <xref:System.Net.Sockets.Socket> and binds it to the port number from which you intend to communicate.</span></span>  
  
 <span data-ttu-id="7528f-171">Die `family` Parameter bestimmt, ob der Listener, eine IPv4-Adresse (IPv4) oder eine IP-Version 6 (IPv6 verwendet) Adresse.</span><span class="sxs-lookup"><span data-stu-id="7528f-171">The `family` parameter determines whether the listener uses an IP version 4 address (IPv4) or an IP version 6 (IPv6) address.</span></span> <span data-ttu-id="7528f-172">Um eine IPv4-Adresse verwenden möchten, übergeben die <xref:System.Net.Sockets.AddressFamily.InterNetwork> Wert.</span><span class="sxs-lookup"><span data-stu-id="7528f-172">To use an IPv4 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetwork> value.</span></span> <span data-ttu-id="7528f-173">Um eine IPv6-Adresse verwenden möchten, übergeben die <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> Wert.</span><span class="sxs-lookup"><span data-stu-id="7528f-173">To use an IPv6 address, pass the <xref:System.Net.Sockets.AddressFamily.InterNetworkV6> value.</span></span> <span data-ttu-id="7528f-174">Übergeben einen anderen Wert führt dazu, dass die Methode zum Auslösen einer <xref:System.ArgumentException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-174">Passing any other value will cause the method to throw an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="7528f-175">Wenn dieser Konstruktor verwendet wird, die <xref:System.Net.Sockets.UdpClient> Instanz wird festgelegt, mit der Adressfamilie, die gemäß der `family` Parameter, der nicht durch den Aufruf einer Connect-Methode mit einer anderen Adressfamilie überschrieben oder geändert werden.</span><span class="sxs-lookup"><span data-stu-id="7528f-175">If this constructor is used, the <xref:System.Net.Sockets.UdpClient> instance is set with the address family specified by the `family` parameter  that cannot be changed or overwritten by a connect method call with a different address family.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-176">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-176">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-177">Wenn Sie diesen Code abgerufen haben, finden Sie in der [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-177">Once you have obtained this code, refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-178">Im folgenden Codebeispiel wird veranschaulicht, wie beim Erstellen eines UDP-Clients in einer multicast-Gruppe verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="7528f-178">The following code example shows how to create a UDP client to use in a multicast group.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#3)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7528f-179">
            <paramref name="family" /> ist nicht <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> oder <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-179">
              <paramref name="family" /> is not <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> or <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7528f-180">
            <paramref name="port" /> ist größer als <see cref="F:System.Net.IPEndPoint.MaxPort" /> oder kleiner als <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-180">
              <paramref name="port" /> is greater than <see cref="F:System.Net.IPEndPoint.MaxPort" /> or less than <see cref="F:System.Net.IPEndPoint.MinPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-181">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-181">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpClient : string * int -&gt; System.Net.Sockets.UdpClient" Usage="new System.Net.Sockets.UdpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="7528f-182">Der Name des Remote-DNS-Hosts, zu dem die Verbindung hergestellt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-182">The name of the remote DNS host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="7528f-183">Die Nummer des Remoteanschlusses, mit dem die Verbindung hergestellt werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-183">The remote port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-184">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.UdpClient" />-Klasse und richtet einen Standardremotehost ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-184">Initializes a new instance of the <see cref="T:System.Net.Sockets.UdpClient" /> class and establishes a default remote host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-185">Dieser Konstruktor initialisiert eine neue <xref:System.Net.Sockets.UdpClient> und richtet einen Remotehost mithilfe der `hostname` und `port` Parameter.</span><span class="sxs-lookup"><span data-stu-id="7528f-185">This constructor initializes a new <xref:System.Net.Sockets.UdpClient> and establishes a remote host using the `hostname` and `port` parameters.</span></span> <span data-ttu-id="7528f-186">Einrichten einen Standard-Remotehost ist optional.</span><span class="sxs-lookup"><span data-stu-id="7528f-186">Establishing a default remote host is optional.</span></span> <span data-ttu-id="7528f-187">Wenn Sie diesen Konstruktor verwenden, müssen Sie nicht in jedem Aufruf an einen Remotehost angeben der <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-187">If you use this constructor, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="7528f-188">Angeben einen Standard-Remotehost beschränkt für diesen Host nur.</span><span class="sxs-lookup"><span data-stu-id="7528f-188">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="7528f-189">Sie können die Standard-Remotehost zu einem beliebigen Zeitpunkt ändern, durch den Aufruf der <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-189">You can change the default remote host at any time by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="7528f-190">Wenn Sie im Aufruf an einen Remotehost angeben möchten die <xref:System.Net.Sockets.UdpClient.Send%2A> -Methode, verwenden Sie diesen Konstruktor nicht.</span><span class="sxs-lookup"><span data-stu-id="7528f-190">If you want to specify a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, do not use this constructor.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-191">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-191">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-192">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-192">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-193">Im folgende Beispiel wird veranschaulicht, wie zum Erstellen einer Instanz von der <xref:System.Net.Sockets.UdpClient> -Klasse unter Verwendung eines Hostnamens und die Portnummer.</span><span class="sxs-lookup"><span data-stu-id="7528f-193">The following example demonstrates how to create an instance of the <xref:System.Net.Sockets.UdpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-194">
            <paramref name="hostname" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-194">
              <paramref name="hostname" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7528f-195">
            <paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-195">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-196">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-196">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.UdpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-197">Ruft einen Wert ab, der angibt, ob ein Standardremotehost eingerichtet wurde, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-197">Gets or sets a value indicating whether a default remote host has been established.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7528f-198">
            <see langword="true" />, wenn die Verbindung aktiviert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-198">
              <see langword="true" /> if a connection is active; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-199">Abgeleitete Klassen von <xref:System.Net.Sockets.UdpClient> können diese Eigenschaft verwenden, um festzustellen, ob ein Standardremotehost eingerichtet wurde.</span><span class="sxs-lookup"><span data-stu-id="7528f-199">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to determine if a default remote host has been established.</span></span> <span data-ttu-id="7528f-200">Sie können einen Standard-Remotehost herstellen, mit dem entsprechenden Konstruktor oder durch Aufrufen der <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-200">You can establish a default remote host by using the appropriate constructor or by calling the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="7528f-201">Wenn Sie einen Standardremotehost eingerichtet wurde, können nicht Sie einen remoter Host angeben, in den Aufruf von <xref:System.Net.Sockets.UdpClient.Send%2A>.</span><span class="sxs-lookup"><span data-stu-id="7528f-201">If you do establish a default remote host, you cannot specify a remote host in your call to <xref:System.Net.Sockets.UdpClient.Send%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.UdpClient" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="udpClient.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="allowed">
          <span data-ttu-id="7528f-202">Ein boolescher Wert, der angibt, ob die NAT-Überquerung aktiviert oder deaktiviert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-202">A Boolean value that specifies whether to enable or disable NAT traversal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-203">Aktiviert oder deaktiviert die NAT-Überquerung (Netzwerkadressenübersetzung) für eine <see cref="T:System.Net.Sockets.UdpClient" />-Instanz.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-203">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.UdpClient" /> instance.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-204">Die <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> Methode dient zum Aktivieren oder deaktivieren die NAT-Durchlauf für eine <xref:System.Net.Sockets.UdpClient> Instanz.</span><span class="sxs-lookup"><span data-stu-id="7528f-204">The <xref:System.Net.Sockets.UdpClient.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span> <span data-ttu-id="7528f-205">NAT-Durchlauf kann mit Teredo, 6to4 oder einen ISATAP-Tunnel bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="7528f-205">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="7528f-206">Wenn die `allowed` Parameter ist "false", die <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> legen Sie die Option für den zugeordneten Socket auf <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span><span class="sxs-lookup"><span data-stu-id="7528f-206">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="7528f-207">Dadurch werden explizit deaktiviert die NAT-Durchlauf für eine <xref:System.Net.Sockets.UdpClient> Instanz.</span><span class="sxs-lookup"><span data-stu-id="7528f-207">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.UdpClient> instance.</span></span>  
  
 <span data-ttu-id="7528f-208">Wenn die `allowed` Parameter ist "true", die <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> legen Sie die Option für den zugeordneten Socket auf <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span><span class="sxs-lookup"><span data-stu-id="7528f-208">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="7528f-209">Dadurch kann die NAT-Durchlauf für eine <xref:System.Net.Sockets.UdpClient> abhängig von Firewallregeln auf dem System.</span><span class="sxs-lookup"><span data-stu-id="7528f-209">This may allow NAT traversal for a <xref:System.Net.Sockets.UdpClient> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="7528f-210">Eine Teredo-Adresse ist eine IPv6-Adresse mit dem Präfix 2001:: / 32.</span><span class="sxs-lookup"><span data-stu-id="7528f-210">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="7528f-211">Teredo-Adressen können über die normale DNS-namensauflösung zurückgegeben oder aufgelistet, die als IPv6-Adresse einer lokale Schnittstelle zugewiesen werden.</span><span class="sxs-lookup"><span data-stu-id="7528f-211">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.UdpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-212">Ruft die vom Netzwerk empfangene Datenmenge ab, die gelesen werden kann.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-212">Gets the amount of data received from the network that is available to read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7528f-213">Die Anzahl der vom Netzwerk empfangenen Datenbytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-213">The number of bytes of data received from the network.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-214">Die <xref:System.Net.Sockets.UdpClient.Available%2A> Eigenschaft wird verwendet, um zu bestimmen, die Menge der Daten, die in der Netzwerkpuffer zum Lesen der Warteschlange.</span><span class="sxs-lookup"><span data-stu-id="7528f-214">The <xref:System.Net.Sockets.UdpClient.Available%2A> property is used to determine the amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="7528f-215">Wenn Daten verfügbar sind, rufen Sie <xref:System.Net.Sockets.NetworkStream.Read%2A> zum Abrufen der Daten.</span><span class="sxs-lookup"><span data-stu-id="7528f-215">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="7528f-216">Wenn keine Daten verfügbar sind, sind die <xref:System.Net.Sockets.UdpClient.Available%2A> -Eigenschaft gibt 0 zurück.</span><span class="sxs-lookup"><span data-stu-id="7528f-216">If no data is available, the <xref:System.Net.Sockets.UdpClient.Available%2A> property returns 0.</span></span>  
  
 <span data-ttu-id="7528f-217">Wenn der remote-Host beendet wird oder die Verbindung schließt, die <xref:System.Net.Sockets.UdpClient.Available%2A> Eigenschaft löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-217">If the remote host shuts down or closes the connection, the <xref:System.Net.Sockets.UdpClient.Available%2A> property throws a <xref:System.Net.Sockets.SocketException>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-218">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> zu den spezifischen Fehlercode abzurufen, und finden in der Windows Sockets-Version 2 zur API in der MSDN Library unter [ http://msdn.microsoft.com/library ](https://msdn.microsoft.com/library)/ für eine ausführliche Beschreibung der der Fehler.</span><span class="sxs-lookup"><span data-stu-id="7528f-218">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code and refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](https://msdn.microsoft.com/library)/ for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-219">Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Net.Sockets.UdpClient.Available%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7528f-219">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-220">Beim Zugriff auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-220">An error occurred while attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-221">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-221">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceive">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceive (AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceive(class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceive (requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceive(AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceive : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginReceive (requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="requestCallback">
          <span data-ttu-id="7528f-222">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-222">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="7528f-223">Ein benutzerdefiniertes Objekt, das Informationen über den Empfangsvorgang enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-223">A user-defined object that contains information about the receive operation.</span>
          </span>
          <span data-ttu-id="7528f-224">Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-224">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-225">Empfängt asynchron ein Datagramm von einem Remotehost.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-225">Receives a datagram from a remote host asynchronously.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-226">Ein <see cref="T:System.IAsyncResult" />-Objekt, das auf den asynchronen Empfang verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-226">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous receive.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-227">Die asynchrone <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> Vorgang muss abgeschlossen sein, durch den Aufruf der <xref:System.Net.Sockets.UdpClient.EndReceive%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-227">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndReceive%2A> method.</span></span> <span data-ttu-id="7528f-228">In der Regel wird die Methode aufgerufen, indem die `requestCallback` delegieren.</span><span class="sxs-lookup"><span data-stu-id="7528f-228">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="7528f-229">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="7528f-229">This method does not block until the operation is complete.</span></span> <span data-ttu-id="7528f-230">Verwenden Sie zum Blockieren, bis der Vorgang abgeschlossen ist, die <xref:System.Net.Sockets.UdpClient.Receive%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-230">To block until the operation is complete, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
 <span data-ttu-id="7528f-231">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="7528f-231">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-232">Das folgende Codebeispiel verwendet <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> , asynchron eine Serverantwort zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="7528f-232">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginReceive%2A> to asynchronously receive a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginSend">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-233">Sendet asynchron ein Datagramm an einen Remotehost.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-233">Sends a datagram to a remote host asynchronously.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="7528f-234">Ein <see cref="T:System.Byte" />-Array, das die zu sendenden Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-234">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="7528f-235">Die Anzahl von Bytes, die gesendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-235">The number of bytes to send.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="7528f-236">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-236">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="7528f-237">Ein benutzerdefiniertes Objekt, das Informationen zum Sendevorgang enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-237">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="7528f-238">Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-238">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-239">Sendet asynchron ein Datagramm an einen Remotehost.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-239">Sends a datagram to a remote host asynchronously.</span>
          </span>
          <span data-ttu-id="7528f-240">Das Ziel wurde zuvor durch Aufruf von <see cref="Overload:System.Net.Sockets.UdpClient.Connect" /> angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-240">The destination was specified previously by a call to <see cref="Overload:System.Net.Sockets.UdpClient.Connect" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-241">Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-241">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-242">Die asynchrone <xref:System.Net.Sockets.UdpClient.BeginSend%2A> Vorgang muss abgeschlossen sein, durch den Aufruf der <xref:System.Net.Sockets.UdpClient.EndSend%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-242">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="7528f-243">In der Regel wird die Methode aufgerufen, indem die `requestCallback` delegieren.</span><span class="sxs-lookup"><span data-stu-id="7528f-243">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="7528f-244">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="7528f-244">This method does not block until the operation completes.</span></span> <span data-ttu-id="7528f-245">Zum Blockieren, bis der Vorgang abgeschlossen ist, gehen die <xref:System.Net.Sockets.UdpClient.Send%2A> Überladungen der Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-245">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="7528f-246">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="7528f-246">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-247">Das folgende Codebeispiel verwendet <xref:System.Net.Sockets.UdpClient.BeginSend%2A> asynchron eine Anforderung gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="7528f-247">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, endPoint, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="7528f-248">Ein <see cref="T:System.Byte" />-Array, das die zu sendenden Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-248">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="7528f-249">Die Anzahl von Bytes, die gesendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-249">The number of bytes to send.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="7528f-250">Der <see cref="T:System.Net.EndPoint" />, der das Ziel der Daten darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-250">The <see cref="T:System.Net.EndPoint" /> that represents the destination for the data.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="7528f-251">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-251">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="7528f-252">Ein benutzerdefiniertes Objekt, das Informationen zum Sendevorgang enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-252">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="7528f-253">Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-253">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-254">Sendet asynchron ein Datagramm an ein Ziel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-254">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="7528f-255">Das Ziel wird durch einen <see cref="T:System.Net.EndPoint" />angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-255">The destination is specified by a <see cref="T:System.Net.EndPoint" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-256">Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-256">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-257">Die asynchrone <xref:System.Net.Sockets.UdpClient.BeginSend%2A> Vorgang muss abgeschlossen sein, durch den Aufruf der <xref:System.Net.Sockets.UdpClient.EndSend%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-257">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="7528f-258">In der Regel wird die Methode aufgerufen, indem die `requestCallback` delegieren.</span><span class="sxs-lookup"><span data-stu-id="7528f-258">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="7528f-259">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="7528f-259">This method does not block until the operation is complete.</span></span> <span data-ttu-id="7528f-260">Zum Blockieren, bis der Vorgang abgeschlossen ist, gehen die <xref:System.Net.Sockets.UdpClient.Send%2A> Überladungen der Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-260">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="7528f-261">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="7528f-261">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-262">Das folgende Codebeispiel verwendet <xref:System.Net.Sockets.UdpClient.BeginSend%2A> asynchron eine Anforderung gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="7528f-262">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginSend">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSend (byte[] datagram, int bytes, string hostname, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSend(unsigned int8[] datagram, int32 bytes, string hostname, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.BeginSend(System.Byte[],System.Int32,System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSend (datagram As Byte(), bytes As Integer, hostname As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSend(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSend : byte[] * int * string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpClient.BeginSend (datagram, bytes, hostname, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="7528f-263">Ein <see cref="T:System.Byte" />-Array, das die zu sendenden Daten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-263">A <see cref="T:System.Byte" /> array that contains the data to be sent.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="7528f-264">Die Anzahl von Bytes, die gesendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-264">The number of bytes to send.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="7528f-265">Der Zielhost.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-265">The destination host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="7528f-266">Die Zielanschlussnummer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-266">The destination port number.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="7528f-267">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-267">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="7528f-268">Ein benutzerdefiniertes Objekt, das Informationen zum Sendevorgang enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-268">A user-defined object that contains information about the send operation.</span>
          </span>
          <span data-ttu-id="7528f-269">Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="requestCallback" />-Delegaten übergeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-269">This object is passed to the <paramref name="requestCallback" /> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-270">Sendet asynchron ein Datagramm an ein Ziel.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-270">Sends a datagram to a destination asynchronously.</span>
          </span>
          <span data-ttu-id="7528f-271">Das Ziel wird durch einen Hostnamen und eine Anschlussnummer angegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-271">The destination is specified by the host name and port number.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-272">Ein <see cref="T:System.IAsyncResult" />, das auf den asynchronen Sendevorgang verweist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-272">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous send.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-273">Die asynchrone <xref:System.Net.Sockets.UdpClient.BeginSend%2A> Vorgang muss abgeschlossen sein, durch den Aufruf der <xref:System.Net.Sockets.UdpClient.EndSend%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-273">The asynchronous <xref:System.Net.Sockets.UdpClient.BeginSend%2A> operation must be completed by calling the <xref:System.Net.Sockets.UdpClient.EndSend%2A> method.</span></span> <span data-ttu-id="7528f-274">In der Regel wird die Methode aufgerufen, indem die `requestCallback` delegieren.</span><span class="sxs-lookup"><span data-stu-id="7528f-274">Typically, the method is invoked by the `requestCallback` delegate.</span></span>  
  
 <span data-ttu-id="7528f-275">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="7528f-275">This method does not block until the operation is complete.</span></span> <span data-ttu-id="7528f-276">Zum Blockieren, bis der Vorgang abgeschlossen ist, gehen die <xref:System.Net.Sockets.UdpClient.Send%2A> Überladungen der Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-276">To block until the operation is complete, use one of the <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads.</span></span>  
  
 <span data-ttu-id="7528f-277">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="7528f-277">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-278">Das folgende Codebeispiel verwendet <xref:System.Net.Sockets.UdpClient.BeginSend%2A> asynchron eine Anforderung gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="7528f-278">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to asynchronously send a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.UdpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-279">Ruft den zugrunde liegenden Netzwerk-<see cref="T:System.Net.Sockets.Socket" /> ab oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-279">Gets or sets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7528f-280">Der zugrunde liegende Netzwerk-<see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-280">The underlying Network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-281"><xref:System.Net.Sockets.UdpClient> erstellt eine <xref:System.Net.Sockets.Socket> zum Senden und Empfangen von Daten über ein Netzwerk verwendet.</span><span class="sxs-lookup"><span data-stu-id="7528f-281"><xref:System.Net.Sockets.UdpClient> creates a <xref:System.Net.Sockets.Socket> used to send and receive data over a network.</span></span> <span data-ttu-id="7528f-282">Abgeleitete Klassen von <xref:System.Net.Sockets.UdpClient> können diese Eigenschaft zum Abrufen oder festlegen, dies <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="7528f-282">Classes deriving from <xref:System.Net.Sockets.UdpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="7528f-283">Verwenden Sie das zugrunde liegende <xref:System.Net.Sockets.Socket> Merry <xref:System.Net.Sockets.UdpClient.Client%2A> Wenn gewünscht, zugreifen, darüber hinaus die <xref:System.Net.Sockets.UdpClient> enthält.</span><span class="sxs-lookup"><span data-stu-id="7528f-283">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.UdpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.UdpClient> provides.</span></span> <span data-ttu-id="7528f-284">Sie können auch <xref:System.Net.Sockets.UdpClient.Client%2A> , legen Sie die zugrunde liegende <xref:System.Net.Sockets.Socket> zu einem vorhandenen <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="7528f-284">You can also use <xref:System.Net.Sockets.UdpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="7528f-285">Dies ist nützlich, wenn Sie die Einfachheit der nutzen möchten <xref:System.Net.Sockets.UdpClient> mit einem bereits vorhandenen <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="7528f-285">This is useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.UdpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-286">Das folgende Beispiel zeigt die Verwendung der <xref:System.Net.Sockets.UdpClient.Client%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7528f-286">The following example demonstrates the use of the <xref:System.Net.Sockets.UdpClient.Client%2A> property.</span></span> <span data-ttu-id="7528f-287">In diesem Beispiel Broadcasting aktiviert ist, für das zugrunde liegende <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="7528f-287">In this example, broadcasting is enabled for the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic UdpClient.ProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.ProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="udpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7528f-288">Schließt die UDP-Verbindung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-288">Closes the UDP connection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-289">Die <xref:System.Net.Sockets.UdpClient.Close%2A> deaktiviert den zugrunde liegenden <xref:System.Net.Sockets.Socket> und gibt alle zugeordnete verwaltete und nicht verwaltete Ressourcen frei, die <xref:System.Net.Sockets.UdpClient>.</span><span class="sxs-lookup"><span data-stu-id="7528f-289">The <xref:System.Net.Sockets.UdpClient.Close%2A> disables the underlying <xref:System.Net.Sockets.Socket> and releases all managed and unmanaged resources associated with the <xref:System.Net.Sockets.UdpClient>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-290">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-290">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-291">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-291">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-292">Das folgende Beispiel zeigt schließende eine <xref:System.Net.Sockets.UdpClient> durch Aufrufen der <xref:System.Net.Sockets.UdpClient.Close%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-292">The following example demonstrates closing a <xref:System.Net.Sockets.UdpClient> by calling the <xref:System.Net.Sockets.UdpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-293">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-293">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-294">Richtet einen Standardremotehost ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-294">Establishes a default remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (endPoint As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="udpClient.Connect endPoint" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="endPoint">
          <span data-ttu-id="7528f-295">Ein <see cref="T:System.Net.IPEndPoint" />, der den Netzwerkendpunkt angibt, an den Daten gesendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-295">An <see cref="T:System.Net.IPEndPoint" /> that specifies the network endpoint to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-296">Richtet mit dem angegebenen Netzwerkendpunkt einen Standardremotehost ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-296">Establishes a default remote host using the specified network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-297">Die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode richtet einen Standardremotehost mit dem angegeben wird, der `endPoint` Parameter.</span><span class="sxs-lookup"><span data-stu-id="7528f-297">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the value specified in the `endPoint` parameter.</span></span> <span data-ttu-id="7528f-298">Nach dem einrichten, müssen Sie nicht in jedem Aufruf an einen Remotehost angeben der <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-298">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="7528f-299">Einrichten einen Standard-Remotehost ist optional.</span><span class="sxs-lookup"><span data-stu-id="7528f-299">Establishing a default remote host is optional.</span></span> <span data-ttu-id="7528f-300">Angeben einen Standard-Remotehost beschränkt für diesen Host nur.</span><span class="sxs-lookup"><span data-stu-id="7528f-300">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="7528f-301">Wenn Sie Datagramme zu einem anderen Host für die remote senden möchten, müssen Sie einen anderen Aufruf, der <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode aus, oder erstellen Sie einen anderen <xref:System.Net.Sockets.UdpClient> ohne einen Standardremotehost ein.</span><span class="sxs-lookup"><span data-stu-id="7528f-301">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="7528f-302">Wenn Sie eine eingerichtet wurde Host, und Sie auch bereitstellen einen remoter Host im Aufruf an die <xref:System.Net.Sockets.UdpClient.Send%2A> -Methode, <xref:System.Net.Sockets.UdpClient.Send%2A> löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-302">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="7528f-303">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-303">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-304">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-304">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="7528f-305">Wenn Sie beim Aufrufen der <xref:System.Net.Sockets.Socket.Connect%2A> -Methode, alle Datagramme, die von einer eingehen, anders als der angegebene Standardwert werden verworfen.</span><span class="sxs-lookup"><span data-stu-id="7528f-305">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="7528f-306">Kann nicht festgelegt werden auf eine Broadcastadresse, die mit dieser Methode aus, es sei denn, Sie erben die Standard-Remotehost <xref:System.Net.Sockets.UdpClient>, verwenden Sie die Client-Methode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.Socket>, und legen Sie die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7528f-306">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the Client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7528f-307">Sie können jedoch, Daten auf den Standardwert Broadcastadresse, 255.255.255.255, bei Angabe von <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> im Aufruf an die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-307">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="7528f-308">Wenn Ihre Anwendung mehr Kontrolle über die broadcast-Adressen erfordert, können Sie auch Wiederherstellen mit der <xref:System.Net.Sockets.Socket> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7528f-308">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-309">Da das UDP-Protokoll verbindungslose, ist die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="7528f-309">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="7528f-310">Rufen Sie nicht die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode, wenn Sie beabsichtigen, Multicastdatagramme empfangen.</span><span class="sxs-lookup"><span data-stu-id="7528f-310">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-311">Im folgenden Beispiel wird ein <xref:System.Net.IPEndPoint> einen Standard-Remotehost herstellen.</span><span class="sxs-lookup"><span data-stu-id="7528f-311">The following example uses an <xref:System.Net.IPEndPoint> to establish a default remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-312">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-312">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-313">
            <paramref name="endPoint" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-313">
              <paramref name="endPoint" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-314">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-314">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress addr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress addr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (addr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ addr, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.Connect (addr, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addr">
          <span data-ttu-id="7528f-315">Die <see cref="T:System.Net.IPAddress" /> des Remotehosts, an die Daten gesendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-315">The <see cref="T:System.Net.IPAddress" /> of the remote host to which you intend to send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="7528f-316">Die Anschlussnummer, an die Daten gesendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-316">The port number to which you intend send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-317">Richtet einen Standardremotehost mithilfe der angegebenen IP-Adresse und Anschlussnummer ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-317">Establishes a default remote host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-318">Die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode richtet einen Standardremotehost mithilfe der Werte im angegebenen die `addr` und `port` Parameter.</span><span class="sxs-lookup"><span data-stu-id="7528f-318">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `addr` and `port` parameters.</span></span> <span data-ttu-id="7528f-319">Nach dem einrichten, müssen Sie nicht in jedem Aufruf an einen Remotehost angeben der <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-319">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="7528f-320">Einrichten einen Standard-Remotehost ist optional.</span><span class="sxs-lookup"><span data-stu-id="7528f-320">Establishing a default remote host is optional.</span></span> <span data-ttu-id="7528f-321">Angeben einen Standard-Remotehost beschränkt für diesen Host nur.</span><span class="sxs-lookup"><span data-stu-id="7528f-321">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="7528f-322">Wenn Sie Datagramme zu einem anderen Host für die remote senden möchten, müssen Sie einen anderen Aufruf, der <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode aus, oder erstellen Sie einen anderen <xref:System.Net.Sockets.UdpClient> ohne einen Standardremotehost ein.</span><span class="sxs-lookup"><span data-stu-id="7528f-322">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span> <span data-ttu-id="7528f-323">Wenn Sie eine eingerichtet wurde Host, und Sie auch bereitstellen einen remoter Host im Aufruf an die <xref:System.Net.Sockets.UdpClient.Send%2A> -Methode, <xref:System.Net.Sockets.UdpClient.Send%2A> löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-323">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="7528f-324">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-324">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-325">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-325">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="7528f-326">Wenn Sie beim Aufrufen der <xref:System.Net.Sockets.Socket.Connect%2A> -Methode, alle Datagramme, die von einer eingehen, anders als der angegebene Standardwert werden verworfen.</span><span class="sxs-lookup"><span data-stu-id="7528f-326">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="7528f-327">Kann nicht festgelegt werden auf eine Broadcastadresse, die mit dieser Methode aus, es sei denn, Sie erben die Standard-Remotehost <xref:System.Net.Sockets.UdpClient>, verwenden Sie die Clientmethode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.Socket>, und legen Sie die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7528f-327">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7528f-328">Sie können jedoch, Daten auf den Standardwert Broadcastadresse, 255.255.255.255, bei Angabe von <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> im Aufruf an die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-328">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="7528f-329">Wenn Ihre Anwendung mehr Kontrolle über die broadcast-Adressen erfordert, können Sie auch Wiederherstellen mit der <xref:System.Net.Sockets.Socket> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7528f-329">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-330">Da das UDP-Protokoll verbindungslose, ist die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="7528f-330">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="7528f-331">Rufen Sie nicht die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode, wenn Sie beabsichtigen, Multicastdatagramme empfangen.</span><span class="sxs-lookup"><span data-stu-id="7528f-331">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-332">Im folgenden Beispiel wird eine IP-Adresse und Port-Nummer für die Verbindung mit einem Remotehost.</span><span class="sxs-lookup"><span data-stu-id="7528f-332">The following example uses an IP address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-333">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-333">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-334">
            <paramref name="addr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-334">
              <paramref name="addr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7528f-335">
            <paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-335">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-336">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-336">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="udpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="7528f-337">Der DNS-Name des Remotehosts, an den Daten gesendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-337">The DNS name of the remote host to which you intend send data.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="7528f-338">Die Anschlussnummer auf dem Remotehost, an den Daten gesendet werden sollen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-338">The port number on the remote host to which you intend to send data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-339">Richtet einen Standardremotehost mit dem angegebenen Hostnamen und der Anschlussnummer ein.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-339">Establishes a default remote host using the specified host name and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-340">Die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode richtet einen Standardremotehost mithilfe der Werte im angegebenen die `port` und `hostname` Parameter.</span><span class="sxs-lookup"><span data-stu-id="7528f-340">The <xref:System.Net.Sockets.UdpClient.Connect%2A> method establishes a default remote host using the values specified in the `port` and `hostname` parameters.</span></span> <span data-ttu-id="7528f-341">Nach dem einrichten, müssen Sie nicht in jedem Aufruf an einen Remotehost angeben der <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-341">Once established, you do not have to specify a remote host in each call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
 <span data-ttu-id="7528f-342">Einrichten einen Standard-Remotehost ist optional.</span><span class="sxs-lookup"><span data-stu-id="7528f-342">Establishing a default remote host is optional.</span></span> <span data-ttu-id="7528f-343">Angeben einen Standard-Remotehost beschränkt für diesen Host nur.</span><span class="sxs-lookup"><span data-stu-id="7528f-343">Specifying a default remote host limits you to that host only.</span></span> <span data-ttu-id="7528f-344">Wenn Sie Datagramme zu einem anderen Host für die remote senden möchten, müssen Sie einen anderen Aufruf, der <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode aus, oder erstellen Sie einen anderen <xref:System.Net.Sockets.UdpClient> ohne einen Standardremotehost ein.</span><span class="sxs-lookup"><span data-stu-id="7528f-344">If you want to send datagrams to a different remote host, you must make another call to the <xref:System.Net.Sockets.UdpClient.Connect%2A> method or create another <xref:System.Net.Sockets.UdpClient> without a default remote host.</span></span>  
  
 <span data-ttu-id="7528f-345">Wenn Sie eine eingerichtet wurde Host, und Sie auch bereitstellen einen remoter Host im Aufruf an die <xref:System.Net.Sockets.UdpClient.Send%2A> -Methode, <xref:System.Net.Sockets.UdpClient.Send%2A> löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-345">If you have established a default remote host and you also provide a remote host in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method, <xref:System.Net.Sockets.UdpClient.Send%2A> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="7528f-346">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-346">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-347">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-347">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="7528f-348">Wenn Sie beim Aufrufen der <xref:System.Net.Sockets.Socket.Connect%2A> -Methode, alle Datagramme, die von einer eingehen, anders als der angegebene Standardwert werden verworfen.</span><span class="sxs-lookup"><span data-stu-id="7528f-348">If you call the <xref:System.Net.Sockets.Socket.Connect%2A> method, any datagrams that arrive from an address other than the specified default will be discarded.</span></span> <span data-ttu-id="7528f-349">Kann nicht festgelegt werden auf eine Broadcastadresse, die mit dieser Methode aus, es sei denn, Sie erben die Standard-Remotehost <xref:System.Net.Sockets.UdpClient>, verwenden Sie die Clientmethode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.Socket>, und legen Sie die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7528f-349">You cannot set the default remote host to a broadcast address using this method unless you inherit from <xref:System.Net.Sockets.UdpClient>, use the client method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7528f-350">Sie können jedoch, Daten auf den Standardwert Broadcastadresse, 255.255.255.255, bei Angabe von <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> im Aufruf an die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-350">You can however, broadcast data to the default broadcast address, 255.255.255.255, if you specify <xref:System.Net.IPAddress.Broadcast?displayProperty=nameWithType> in your call to the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="7528f-351">Wenn Ihre Anwendung mehr Kontrolle über die broadcast-Adressen erfordert, können Sie auch Wiederherstellen mit der <xref:System.Net.Sockets.Socket> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7528f-351">If your application requires greater control over broadcast addresses, you can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-352">Da das UDP-Protokoll verbindungslose, ist die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="7528f-352">Since the UDP protocol is connectionless, the <xref:System.Net.Sockets.UdpClient.Connect%2A> method does not block.</span></span> <span data-ttu-id="7528f-353">Rufen Sie nicht die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode, wenn Sie beabsichtigen, Multicastdatagramme empfangen.</span><span class="sxs-lookup"><span data-stu-id="7528f-353">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method if you intend to receive multicasted datagrams.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-354">Im folgenden Beispiel wird der Hostname und die Portnummer an, für die Verbindung mit einem Remotehost verwendet.</span><span class="sxs-lookup"><span data-stu-id="7528f-354">The following example uses the host name and port number to connect to a remote host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-355">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-355">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7528f-356">
            <paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-356">
              <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-357">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-357">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7528f-358">Gibt die vom <see cref="T:System.Net.Sockets.UdpClient" /> verwendeten verwalteten und nicht verwalteten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-358">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="udpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="7528f-359">
            <see langword="true" />, um sowohl verwaltete als auch nicht verwaltete Ressourcen freizugeben, <see langword="false" />, um ausschließlich nicht verwaltete Ressourcen freizugeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-359">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-360">Gibt die von <see cref="T:System.Net.Sockets.UdpClient" /> verwendeten nicht verwalteten Ressourcen und optional die verwalteten Ressourcen frei.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-360">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.UdpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-361">Diese Methode wird aufgerufen, von der öffentlichen `Dispose()` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-361">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="7528f-362">`Dispose()` Ruft die geschützte `Dispose(Boolean)` -Methode mit dem `disposing` Parametersatz zu `true`.</span><span class="sxs-lookup"><span data-stu-id="7528f-362">`Dispose()` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="7528f-363"><xref:System.Object.Finalize%2A> Ruft `Dispose` mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="7528f-363"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="7528f-364">Wenn die `disposing` Parameter true ist, gibt diese Methode alle Ressourcen frei, die für verwaltete Objekte, die dieses <xref:System.Net.Sockets.UdpClient> Verweise.</span><span class="sxs-lookup"><span data-stu-id="7528f-364">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.UdpClient> references.</span></span> <span data-ttu-id="7528f-365">Diese Methode ruft die `Dispose()`-Methode aller Objekte auf, auf die verwiesen wird.</span><span class="sxs-lookup"><span data-stu-id="7528f-365">This method invokes the `Dispose()` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="7528f-366">
              <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden.</span>
            <span class="sxs-lookup">
              <span data-stu-id="7528f-366">
                <see langword="Dispose" /> can be called multiple times by other objects.</span>
            </span>
            <span data-ttu-id="7528f-367">Beim Überschreiben von <see langword="Dispose(Boolean)" /> Achten Sie darauf, dass Sie nicht auf Objekte verweisen, die zuvor von einem früheren Aufruf freigegeben wurden <see langword="Dispose" />.</span>
            <span class="sxs-lookup">
              <span data-stu-id="7528f-367">When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />.</span>
            </span>
            <span data-ttu-id="7528f-368">Weitere Informationen zur Implementierung <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Methode](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            <span class="sxs-lookup">
              <span data-stu-id="7528f-368">For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).</span>
            </span>
            <span data-ttu-id="7528f-369">Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            <span class="sxs-lookup">
              <span data-stu-id="7528f-369">For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/ddae83kx(v=vs.100)).</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DontFragment">
      <MemberSignature Language="C#" Value="public bool DontFragment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DontFragment" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.DontFragment" />
      <MemberSignature Language="VB.NET" Value="Public Property DontFragment As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DontFragment { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.DontFragment : bool with get, set" Usage="System.Net.Sockets.UdpClient.DontFragment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-370">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.UdpClient" /> die Fragmentierung von IP (Internet Protocol)-Datagrammen zulässt, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-370">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows Internet Protocol (IP) datagrams to be fragmented.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7528f-371">
            <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.UdpClient" /> die Datagrammfragmentierung zulässt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-371">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows datagram fragmentation; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7528f-372">Der Standardwert ist <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-372">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-373">Datagramme erfordern Fragmentierung aus, wenn die Größe der Einheit MTU (Maximum Transfer) des Übertragungsmediums überschreitet.</span><span class="sxs-lookup"><span data-stu-id="7528f-373">Datagrams require fragmentation when their size exceeds the Maximum Transfer Unit (MTU) of the transmission medium.</span></span> <span data-ttu-id="7528f-374">Datagramme kann fragmentiert werden, vom sendenden Host oder durch einen Zwischenrouter.</span><span class="sxs-lookup"><span data-stu-id="7528f-374">Datagrams may be fragmented by the sending host or by an intermediate router.</span></span> <span data-ttu-id="7528f-375">Wenn ein Datagramm fragmentiert werden muss, und die <xref:System.Net.Sockets.Socket.DontFragment%2A> Option wird festgelegt, das Datagramm verworfen und Internet Control Message Protocol (ICMP) folgende Fehlermeldung zurück an den Absender der das Datagramm gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="7528f-375">If a datagram must be fragmented, and the <xref:System.Net.Sockets.Socket.DontFragment%2A> option is set, the datagram is discarded, and an Internet Control Message Protocol (ICMP) error message is sent back to the sender of the datagram.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-376">Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Net.Sockets.Socket.DontFragment%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7528f-376">The following code example shows the use of the <xref:System.Net.Sockets.Socket.DontFragment%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="7528f-377">Diese Eigenschaft kann nur für Sockets festgelegt werden, die das <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" />-Flag oder das <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" />-Flag verwenden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-377">This property can be set only for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="DropMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-378">Verlässt eine Multicastgruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-378">Leaves a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.DropMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="7528f-379">Die <see cref="T:System.Net.IPAddress" /> der zu verlassenden Multicastgruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-379">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-380">Verlässt eine Multicastgruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-380">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-381">Die <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> -Methode entfernt die <xref:System.Net.Sockets.UdpClient> aus der Multicastgruppe identifiziert durch das angegebene <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="7528f-381">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="7528f-382">Nach dem Aufruf der <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> -Methode, die zugrunde liegende <xref:System.Net.Sockets.Socket> ein Internet Group Management Protocol (IGMP)-Paket an den Router und entfernt aus der Multicastgruppe den Router sendet.</span><span class="sxs-lookup"><span data-stu-id="7528f-382">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="7528f-383">Nach einem <xref:System.Net.Sockets.UdpClient> abgebucht aus der Gruppe ist nicht mehr möglich, die dieser Gruppe gesendete Datagramme zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="7528f-383">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-384">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-384">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-385">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-385">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-386">Im folgende Beispiel veranschaulicht eine multicast-Gruppe zu löschen, indem Sie eine Multicastadresse bereitstellen.</span><span class="sxs-lookup"><span data-stu-id="7528f-386">The following example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-387">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-387">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-388">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-388">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7528f-389">Die IP-Adresse ist nicht mit dem <see cref="T:System.Net.Sockets.AddressFamily" />-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-389">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-390">
            <paramref name="multicastAddr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-390">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="DropMulticastGroup">
      <MemberSignature Language="C#" Value="public void DropMulticastGroup (System.Net.IPAddress multicastAddr, int ifindex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DropMulticastGroup(class System.Net.IPAddress multicastAddr, int32 ifindex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DropMulticastGroup (multicastAddr As IPAddress, ifindex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DropMulticastGroup(System::Net::IPAddress ^ multicastAddr, int ifindex);" />
      <MemberSignature Language="F#" Value="member this.DropMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.DropMulticastGroup (multicastAddr, ifindex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="ifindex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="7528f-391">Die <see cref="T:System.Net.IPAddress" /> der zu verlassenden Multicastgruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-391">The <see cref="T:System.Net.IPAddress" /> of the multicast group to leave.</span>
          </span>
        </param>
        <param name="ifindex">
          <span data-ttu-id="7528f-392">Die lokale Adresse der zu verlassenden Multicastgruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-392">The local address of the multicast group to leave.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-393">Verlässt eine Multicastgruppe.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-393">Leaves a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-394">Die <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> -Methode entfernt die <xref:System.Net.Sockets.UdpClient> aus der Multicastgruppe identifiziert durch das angegebene <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="7528f-394">The <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method withdraws the <xref:System.Net.Sockets.UdpClient> from the multicast group identified by the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="7528f-395">Nach dem Aufruf der <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> -Methode, die zugrunde liegende <xref:System.Net.Sockets.Socket> ein Internet Group Management Protocol (IGMP)-Paket an den Router und entfernt aus der Multicastgruppe den Router sendet.</span><span class="sxs-lookup"><span data-stu-id="7528f-395">After calling the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router, removing the router from the multicast group.</span></span> <span data-ttu-id="7528f-396">Nach einem <xref:System.Net.Sockets.UdpClient> abgebucht aus der Gruppe ist nicht mehr möglich, die dieser Gruppe gesendete Datagramme zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="7528f-396">After a <xref:System.Net.Sockets.UdpClient> withdraws from the group, it will no longer be able to receive datagrams sent to that group.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-397">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden die <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> Eigenschaft, um den spezifischen Fehlercode zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="7528f-397">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code.</span></span> <span data-ttu-id="7528f-398">Nachdem Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-398">After you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-399">Im folgenden Codebeispiel wird veranschaulicht, wie eine multicast-Gruppe zu löschen, durch die Bereitstellung einer Multicastadresse wird.</span><span class="sxs-lookup"><span data-stu-id="7528f-399">The following code example demonstrates how to drop a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#2)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-400">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-400">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-401">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-401">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7528f-402">Die IP-Adresse ist nicht mit dem <see cref="T:System.Net.Sockets.AddressFamily" />-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-402">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-403">
            <paramref name="multicastAddr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-403">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="EnableBroadcast">
      <MemberSignature Language="C#" Value="public bool EnableBroadcast { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableBroadcast" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableBroadcast As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableBroadcast { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableBroadcast : bool with get, set" Usage="System.Net.Sockets.UdpClient.EnableBroadcast" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-404">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.UdpClient" /> Broadcastpakete senden oder empfangen darf, oder legt diesen Wert fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-404">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> may send or receive broadcast packets.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7528f-405">
            <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.UdpClient" /> Broadcastpakete zulässt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-405">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows broadcast packets; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7528f-406">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-406">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-407">Unter Broadcast versteht auf ein bestimmtes Subnetz beschränkt.</span><span class="sxs-lookup"><span data-stu-id="7528f-407">Broadcasting is limited to a specific subnet.</span></span> <span data-ttu-id="7528f-408">Sie können zum lokalen Subnetz übertragen, durch Senden eines Pakets 255.255.255.255. Sie können auch die gesteuerte Broadcastadresse, die den Netzwerkteil des eine IP (Internet Protocol)-Adresse mit allen Bits, die in den Hostteil festgelegt ist.</span><span class="sxs-lookup"><span data-stu-id="7528f-408">You can broadcast to your local subnet by sending a packet to 255.255.255.255; or, you can use the directed broadcast address, which is the network portion of an Internet Protocol (IP) address with all bits set in the host portion.</span></span> <span data-ttu-id="7528f-409">Z. B. ist Ihre IP-Adresse 192.168.1.40 (eine Adresse Klasse C mit den Netzwerkteil als die ersten drei Oktette und den Hostteil ist das letzte Oktett), die gesteuerte Broadcastadresse 192.168.1.255.</span><span class="sxs-lookup"><span data-stu-id="7528f-409">For example, if your IP address is 192.168.1.40 (a Class C address, with the network portion as the first three octets, and the host portion is the last octet), your directed broadcast address is 192.168.1.255.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-410">Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7528f-410">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.EnableBroadcast%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.UdpClient#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndReceive">
      <MemberSignature Language="C#" Value="public byte[] EndReceive (IAsyncResult asyncResult, ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] EndReceive(class System.IAsyncResult asyncResult, class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceive (asyncResult As IAsyncResult, ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ EndReceive(IAsyncResult ^ asyncResult, System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.EndReceive : IAsyncResult *  -&gt; byte[]" Usage="udpClient.EndReceive (asyncResult, remoteEP)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="7528f-411">Ein <see cref="T:System.IAsyncResult" />-Objekt, das durch einen Aufruf von <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> zurückgegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-411">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />.</span>
          </span>
        </param>
        <param name="remoteEP">
          <span data-ttu-id="7528f-412">Der angegebene Remoteendpunkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-412">The specified remote endpoint.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-413">Beendet einen ausstehenden asynchronen Empfang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-413">Ends a pending asynchronous receive.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-414">Bei Erfolg wird ein Array von Bytes zurückgegeben, dass Datagrammdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-414">If successful, an array of bytes that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-415">Diese Methode blockiert, bis der Vorgang ist abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="7528f-415">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="7528f-416">Um diesen Vorgang synchron auszuführen, verwenden die <xref:System.Net.Sockets.UdpClient.Receive%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-416">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-417">Das folgende Codebeispiel verwendet <xref:System.Net.Sockets.UdpClient.BeginSend%2A> asynchronen Empfang einer Antwort des Servers ausführen.</span><span class="sxs-lookup"><span data-stu-id="7528f-417">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous receive of a server response.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-418">
            <paramref name="asyncResult" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-418">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7528f-419">
            <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-419">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.UdpClient.BeginReceive(System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7528f-420">
            <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> wurde bereits für den asynchronen Lesevorgang aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-420">
              <see cref="M:System.Net.Sockets.UdpClient.EndReceive(System.IAsyncResult,System.Net.IPEndPoint@)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-421">Fehler beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-421">An error occurred when attempting to access the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-422">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-422">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="EndSend">
      <MemberSignature Language="C#" Value="public int EndSend (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndSend(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.EndSend(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndSend (asyncResult As IAsyncResult) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndSend(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndSend : IAsyncResult -&gt; int" Usage="udpClient.EndSend asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="7528f-423">Ein <see cref="T:System.IAsyncResult" />-Objekt, das durch einen Aufruf von <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" /> zurückgegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-423">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.UdpClient.BeginSend" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-424">Beendet einen ausstehenden asynchronen Sendevorgang.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-424">Ends a pending asynchronous send.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-425">Wenn erfolgreich, die Anzahl der an den <see cref="T:System.Net.Sockets.UdpClient" /> gesendeten Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-425">If successful, the number of bytes sent to the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-426">Diese Methode blockiert, bis der Vorgang ist abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="7528f-426">This method blocks until the operation is complete.</span></span>  
  
 <span data-ttu-id="7528f-427">Um diesen Vorgang synchron auszuführen, verwenden die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-427">To perform this operation synchronously, use the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-428">Das folgende Codebeispiel verwendet <xref:System.Net.Sockets.UdpClient.BeginSend%2A> ein asynchrones Senden einer Anforderung ausführen.</span><span class="sxs-lookup"><span data-stu-id="7528f-428">The following code example uses <xref:System.Net.Sockets.UdpClient.BeginSend%2A> to complete an asynchronous send of a server request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/cpp/asyncudp.cpp#2)]
 [!code-csharp[System.Net.Sockets.UdpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient1/CS/asyncudp.cs#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-429">
            <paramref name="asyncResult" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-429">
              <paramref name="asyncResult" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7528f-430">
            <paramref name="asyncResult" /> wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" />-Methode zurückgegeben.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-430">
              <paramref name="asyncResult" /> was not returned by a call to the <see cref="M:System.Net.Sockets.Socket.BeginSend(System.Byte[],System.Int32,System.Int32,System.Net.Sockets.SocketFlags,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7528f-431">
            <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> wurde bereits für den asynchronen Lesevorgang aufgerufen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-431">
              <see cref="M:System.Net.Sockets.Socket.EndSend(System.IAsyncResult)" /> was previously called for the asynchronous read.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-432">Fehler beim Zugriff auf den zugrunde liegenden Socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-432">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-433">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-433">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.UdpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-434">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.UdpClient" /> nur die Verwendung eines Port durch einen einzigen Client zulässt, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-434">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7528f-435">
            <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.UdpClient" /> die Verwendung eines bestimmten Ports durch nur einen einzigen Client zulässt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-435">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="7528f-436">Für Windows Server 2003 und Windows XP Service Pack 2 oder höher ist der Standardwert <see langword="true" />, für alle anderen Versionen <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-436">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-437">Standardmäßig können mehrere Clients einen bestimmten Port verwenden. Allerdings kann nur eine der Clients Vorgänge für den Netzwerkdatenverkehr an den Port gesendete ausführen.</span><span class="sxs-lookup"><span data-stu-id="7528f-437">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="7528f-438">Sie können die <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> Eigenschaft, um zu verhindern, dass mehrere Clients mit einem bestimmten Port.</span><span class="sxs-lookup"><span data-stu-id="7528f-438">You can use the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="7528f-439">Diese Eigenschaft muss festgelegt werden, bevor der zugrunde liegenden Socket an einen Port gebunden wird.</span><span class="sxs-lookup"><span data-stu-id="7528f-439">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="7528f-440">Wenn Sie aufrufen <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, oder <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, der Clientport als Nebeneffekt des Konstruktors gebunden ist und Sie können anschließend nicht Festlegen der <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="7528f-440">If you call <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Int32%2CSystem.Net.Sockets.AddressFamily%29?displayProperty=nameWithType>, <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>, or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.String%2CSystem.Int32%29?displayProperty=nameWithType>, the client port is bound as a side effect of the constructor, and you cannot subsequently set the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-441">Das folgende Codebeispiel erstellt eine <xref:System.Net.Sockets.UdpClient>, und ermittelt und definiert die <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7528f-441">The following code example creates a <xref:System.Net.Sockets.UdpClient>, and gets and sets the <xref:System.Net.Sockets.UdpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.UdpClient#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-442">Fehler beim Zugriff auf den zugrunde liegenden Socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-442">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-443">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-443">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~UdpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!UdpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="udpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="JoinMulticastGroup">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-444">Fügt einer Multicastgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-444">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup multicastAddr" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="7528f-445">Die Multicast-<see cref="T:System.Net.IPAddress" /> der Gruppe, der Sie beitreten möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-445">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-446">Fügt einer Multicastgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-446">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-447">Die <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Methode abonniert das <xref:System.Net.Sockets.UdpClient> an eine Multicastgruppe mithilfe des angegebenen <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="7528f-447">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="7528f-448">Nach dem Aufruf der <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> -Methode, die zugrunde liegende <xref:System.Net.Sockets.Socket> sendet ein Internet Group Management Protocol (IGMP)-Paket an den Router, die Anforderung einer Mitgliedschaft bei der Multicastgruppe.</span><span class="sxs-lookup"><span data-stu-id="7528f-448">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="7528f-449">Die Multicastadresse reicht von 224.0.0.0 bis 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="7528f-449">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="7528f-450">Wenn Sie eine Adresse außerhalb dieses Bereichs angeben oder der Router auf dem die Anforderung ausgeführt wird, nicht multicastfähig aktiviert ist, <xref:System.Net.Sockets.UdpClient> löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-450">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="7528f-451">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-451">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-452">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-452">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="7528f-453">Sobald die <xref:System.Net.Sockets.UdpClient> finden Sie mit dem Router als Mitglied der Gruppe "multicast", sie werden in den angegebenen gesendeten Multicastdatagramme empfangen <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="7528f-453">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-454">Sie müssen erstellen, die <xref:System.Net.Sockets.UdpClient> mithilfe der multicast-Portnummer; andernfalls nicht werden Multicastdatagramme empfangen können.</span><span class="sxs-lookup"><span data-stu-id="7528f-454">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number; otherwise, you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="7528f-455">Rufen Sie nicht die <xref:System.Net.Sockets.UdpClient.Connect%2A> aufrufen, bevor die <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> -Methode, oder die <xref:System.Net.Sockets.UdpClient.Receive%2A> -Methode funktioniert nicht.</span><span class="sxs-lookup"><span data-stu-id="7528f-455">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, or the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will not work.</span></span> <span data-ttu-id="7528f-456">Sie müssen nicht gehört zu einer Multicastgruppe Datagramme an eine multicast-IP-Adresse senden.</span><span class="sxs-lookup"><span data-stu-id="7528f-456">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="7528f-457">Vor dem Beitritt zu einer multicast-Gruppe, stellen Sie sicher, dass der Socket an den Port oder einen Endpunkt gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="7528f-457">Before joining a multicast group, make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="7528f-458">Sie dies durch den Aufruf eines Konstruktors, die einen Port oder einen Endpunkt als Parameter akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="7528f-458">You do that by calling one of the constructors that accept a port or an endpoint as a parameter.</span></span>  
  
 <span data-ttu-id="7528f-459">Um Multicastdatagramme mehr empfangen, rufen Sie die <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> Methode, und geben die <xref:System.Net.IPAddress> der Gruppe aus dem gewünschten widerrufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-459">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-460">Im Fall von IPv6 gibt es mehrere Bereiche der Multicastadresse, die, denen Sie auswählen können.</span><span class="sxs-lookup"><span data-stu-id="7528f-460">In the IPv6 case, there are several multicast address ranges you can choose from.</span></span> <span data-ttu-id="7528f-461">Finden Sie in IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="7528f-461">Please, refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-462">Sie können nicht aufgerufen werden <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> auf eine <xref:System.Net.Sockets.UdpClient> erstellt, ohne einen bestimmten lokalen Anschluss (d. h. die <xref:System.Net.Sockets.UdpClient.%23ctor> oder <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> Konstruktor).</span><span class="sxs-lookup"><span data-stu-id="7528f-462">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-463">Im folgenden Codebeispiel wird veranschaulicht, die einer Multicastgruppe durch Bereitstellen einer Multicastadresse.</span><span class="sxs-lookup"><span data-stu-id="7528f-463">The following code example demonstrates how to join a multicast group by providing a multicast address.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#1)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#1)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-464">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-464">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-465">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-465">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7528f-466">Die IP-Adresse ist nicht mit dem <see cref="T:System.Net.Sockets.AddressFamily" />-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-466">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (int ifindex, System.Net.IPAddress multicastAddr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(int32 ifindex, class System.Net.IPAddress multicastAddr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Int32,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (ifindex As Integer, multicastAddr As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(int ifindex, System::Net::IPAddress ^ multicastAddr);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : int * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (ifindex, multicastAddr)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ifindex" Type="System.Int32" />
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="ifindex">
          <span data-ttu-id="7528f-467">Der Schnittstellenindex, der der lokale IP-Adresse zugeordnet ist, an der die Multicastgruppe herzustellen ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-467">The interface index associated with the local IP address on which to join the multicast group.</span>
          </span>
        </param>
        <param name="multicastAddr">
          <span data-ttu-id="7528f-468">Die Multicast-<see cref="T:System.Net.IPAddress" /> der Gruppe, der Sie beitreten möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-468">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-469">Fügt einer Multicastgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-469">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-470">Achten Sie bevor er zu einer Multicastgruppe darauf, dass der Socket an den Port oder einen Endpunkt gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="7528f-470">Before joining a multicast group, be sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="7528f-471">Sie erreichen dies durch den Aufruf eines Konstruktors, der einen Port oder einen Endpunkt als Parameter akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="7528f-471">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
 <span data-ttu-id="7528f-472">Die `infindex` Parameter wird verwendet, um eine Hardwareschnittstelle auf derselben Verbindung zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="7528f-472">The `infindex` parameter is used to identify a hardware interface on the same link.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-473">Es gibt mehrere multicast Adressbereiche auswählen.</span><span class="sxs-lookup"><span data-stu-id="7528f-473">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="7528f-474">Finden Sie in der IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="7528f-474">Refer to the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-475">Sie können nicht aufgerufen werden <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> auf eine <xref:System.Net.Sockets.UdpClient> erstellt, ohne einen bestimmten lokalen Anschluss (d. h. die <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> oder <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> Konstruktor).</span><span class="sxs-lookup"><span data-stu-id="7528f-475">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor?displayProperty=nameWithType> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29?displayProperty=nameWithType> constructor).</span></span>  
  
   
  
## Examples  
 [!code-cpp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CPP/joinmulticastgroup.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/CS/joinmulticastgroup.cs#5)]
 [!code-vb[System.Net.Sockets.UdpClient.JoinMulticastGroup#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.UdpClient.JoinMulticastGroup/VB/joinmulticastgroup.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-476">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-476">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-477">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-477">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, int timeToLive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, int32 timeToLive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, timeToLive As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, int timeToLive);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * int -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, timeToLive)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="timeToLive" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="7528f-478">Die <see cref="T:System.Net.IPAddress" /> der Multicastgruppe, der Sie beitreten möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-478">The <see cref="T:System.Net.IPAddress" /> of the multicast group to join.</span>
          </span>
        </param>
        <param name="timeToLive">
          <span data-ttu-id="7528f-479">Die TTL, gemessen in Routerhops.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-479">The Time to Live (TTL), measured in router hops.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-480">Fügt einer Multicasgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> mit angegebener Gültigkeitsdauer (TTL – Time To Live) hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-480">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group with the specified Time to Live (TTL).</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-481">Die <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Methode abonniert das <xref:System.Net.Sockets.UdpClient> an eine Multicastgruppe mithilfe des angegebenen <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="7528f-481">The <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method subscribes the <xref:System.Net.Sockets.UdpClient> to a multicast group using the specified <xref:System.Net.IPAddress>.</span></span> <span data-ttu-id="7528f-482">Nach dem Aufruf der <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> -Methode, die zugrunde liegende <xref:System.Net.Sockets.Socket> sendet ein Internet Group Management Protocol (IGMP)-Paket an den Router, die Anforderung einer Mitgliedschaft bei der Multicastgruppe.</span><span class="sxs-lookup"><span data-stu-id="7528f-482">After calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method, the underlying <xref:System.Net.Sockets.Socket> sends an Internet Group Management Protocol (IGMP) packet to the router requesting membership to the multicast group.</span></span> <span data-ttu-id="7528f-483">Die Multicastadresse reicht von 224.0.0.0 bis 239.255.255.255.</span><span class="sxs-lookup"><span data-stu-id="7528f-483">The multicast address range is 224.0.0.0 to 239.255.255.255.</span></span> <span data-ttu-id="7528f-484">Wenn Sie eine Adresse außerhalb dieses Bereichs angeben oder der Router auf dem die Anforderung ausgeführt wird, nicht multicastfähig aktiviert ist, <xref:System.Net.Sockets.UdpClient> löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-484">If you specify an address outside this range or if the router to which the request is made is not multicast enabled, <xref:System.Net.Sockets.UdpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="7528f-485">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-485">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-486">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-486">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span> <span data-ttu-id="7528f-487">Die `timeToLive` Parameter gibt an, wie viele Routerhops ein Multicastdatagramm zulässig sein werden, bevor es verworfen wird.</span><span class="sxs-lookup"><span data-stu-id="7528f-487">The `timeToLive` parameter specifies how many router hops will be allowed for a multicasted datagram before being discarded.</span></span> <span data-ttu-id="7528f-488">Sobald die <xref:System.Net.Sockets.UdpClient> finden Sie mit dem Router als Mitglied der Gruppe "multicast", sie werden in den angegebenen gesendeten Multicastdatagramme empfangen <xref:System.Net.IPAddress>.</span><span class="sxs-lookup"><span data-stu-id="7528f-488">Once the <xref:System.Net.Sockets.UdpClient> is listed with the router as a member of the multicast group, it will be able to receive multicasted datagrams sent to the specified <xref:System.Net.IPAddress>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-489">Müssen Sie erstellen die <xref:System.Net.Sockets.UdpClient> mithilfe der multicast-Portnummer andernfalls nicht werden Multicastdatagramme empfangen können.</span><span class="sxs-lookup"><span data-stu-id="7528f-489">You must create the <xref:System.Net.Sockets.UdpClient> using the multicast port number otherwise you will not be able to receive multicasted datagrams.</span></span> <span data-ttu-id="7528f-490">Rufen Sie nicht die <xref:System.Net.Sockets.UdpClient.Connect%2A> aufrufen, bevor die <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Methode oder der Receive-Methode funktioniert nicht.</span><span class="sxs-lookup"><span data-stu-id="7528f-490">Do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method or the receive method will not work.</span></span> <span data-ttu-id="7528f-491">Sie müssen nicht gehört zu einer Multicastgruppe Datagramme an eine multicast-IP-Adresse senden.</span><span class="sxs-lookup"><span data-stu-id="7528f-491">You do not need to belong to a multicast group to send datagrams to a multicast IP address.</span></span>  
  
 <span data-ttu-id="7528f-492">Vor dem Beitritt zu einer multicast-Gruppe sicher, dass der Socket an den Port oder einen Endpunkt gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="7528f-492">Before joining a multicast group make sure the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="7528f-493">Sie dies durch den Aufruf eines Konstruktors, die als Parameter, einen Port oder einen Endpunkt akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="7528f-493">You do that by calling one of the constructors that accept as parameter a port or an endpoint.</span></span>  
  
 <span data-ttu-id="7528f-494">Um Multicastdatagramme mehr empfangen, rufen Sie die <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> Methode, und geben die <xref:System.Net.IPAddress> der Gruppe aus dem gewünschten widerrufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-494">To stop receiving multicasted datagrams, call the <xref:System.Net.Sockets.UdpClient.DropMulticastGroup%2A> method and provide the <xref:System.Net.IPAddress> of the group from which you would like to withdraw.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-495">Sie können nicht aufgerufen werden <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> auf eine <xref:System.Net.Sockets.UdpClient> erstellt, ohne einen bestimmten lokalen Anschluss (d. h. die <xref:System.Net.Sockets.UdpClient.%23ctor> oder <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> Konstruktor).</span><span class="sxs-lookup"><span data-stu-id="7528f-495">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-496">Im folgende Beispiel veranschaulicht die eine Multicastgruppe verknüpfen, indem Sie zwei Parameter, eine Multicastadresse und eine Zahl, die Gültigkeitsdauer (TTL) darstellt.</span><span class="sxs-lookup"><span data-stu-id="7528f-496">The following example demonstrates how to join a multicast group by providing two parameters, a multicast address, and a number that represents the TTL.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7528f-497">Die bereitgestellte TTL liegt nicht zwischen 0 und 255</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-497">The TTL provided is not between 0 and 255</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-498">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-498">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-499">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-499">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-500">
            <paramref name="multicastAddr" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-500">
              <paramref name="multicastAddr" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7528f-501">Die IP-Adresse ist nicht mit dem <see cref="T:System.Net.Sockets.AddressFamily" />-Wert kompatibel, der das Adressierungsschema des Sockets definiert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-501">The IP address is not compatible with the <see cref="T:System.Net.Sockets.AddressFamily" /> value that defines the addressing scheme of the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.DropMulticastGroup(System.Net.IPAddress)" />
      </Docs>
    </Member>
    <Member MemberName="JoinMulticastGroup">
      <MemberSignature Language="C#" Value="public void JoinMulticastGroup (System.Net.IPAddress multicastAddr, System.Net.IPAddress localAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void JoinMulticastGroup(class System.Net.IPAddress multicastAddr, class System.Net.IPAddress localAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.JoinMulticastGroup(System.Net.IPAddress,System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub JoinMulticastGroup (multicastAddr As IPAddress, localAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void JoinMulticastGroup(System::Net::IPAddress ^ multicastAddr, System::Net::IPAddress ^ localAddress);" />
      <MemberSignature Language="F#" Value="member this.JoinMulticastGroup : System.Net.IPAddress * System.Net.IPAddress -&gt; unit" Usage="udpClient.JoinMulticastGroup (multicastAddr, localAddress)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="multicastAddr" Type="System.Net.IPAddress" />
        <Parameter Name="localAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="multicastAddr">
          <span data-ttu-id="7528f-502">Die Multicast-<see cref="T:System.Net.IPAddress" /> der Gruppe, der Sie beitreten möchten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-502">The multicast <see cref="T:System.Net.IPAddress" /> of the group you want to join.</span>
          </span>
        </param>
        <param name="localAddress">
          <span data-ttu-id="7528f-503">Die lokale <see cref="T:System.Net.IPAddress" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-503">The local <see cref="T:System.Net.IPAddress" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-504">Fügt einer Multicastgruppe einen <see cref="T:System.Net.Sockets.UdpClient" /> hinzu.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-504">Adds a <see cref="T:System.Net.Sockets.UdpClient" /> to a multicast group.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-505">Bevor Sie eine multicast-Gruppe beitreten, achten Sie darauf, dass der Socket an den Port oder einen Endpunkt gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="7528f-505">Before you join a multicast group, be sure that the socket is bound to the port or endpoint.</span></span> <span data-ttu-id="7528f-506">Sie erreichen dies durch den Aufruf eines Konstruktors, der einen Port oder einen Endpunkt als Parameter akzeptiert.</span><span class="sxs-lookup"><span data-stu-id="7528f-506">You can do this by calling one of the constructors that accepts a port or an endpoint as parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-507">Es gibt mehrere multicast Adressbereiche auswählen.</span><span class="sxs-lookup"><span data-stu-id="7528f-507">There are several multicast address ranges to choose from.</span></span> <span data-ttu-id="7528f-508">Sie finden sie in IETF RFC 2375.</span><span class="sxs-lookup"><span data-stu-id="7528f-508">You can find them in the IETF RFC 2375.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-509">Sie können nicht aufgerufen werden <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> auf eine <xref:System.Net.Sockets.UdpClient> erstellt, ohne einen bestimmten lokalen Anschluss (d. h. die <xref:System.Net.Sockets.UdpClient.%23ctor> oder <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> Konstruktor).</span><span class="sxs-lookup"><span data-stu-id="7528f-509">You cannot call <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> on a <xref:System.Net.Sockets.UdpClient> constructed without a specific local port (that is, using the <xref:System.Net.Sockets.UdpClient.%23ctor> or <xref:System.Net.Sockets.UdpClient.%23ctor%28System.Net.Sockets.AddressFamily%29> constructor).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-510">Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-510">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.JoinMulticastGroup%2A> method.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.UdpClient#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-511">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-511">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-512">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-512">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-513">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob ausgehende Multicastpakete an die sendende Anwendung übermittelt werden, oder legt diesen fest.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-513">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether outgoing multicast packets are delivered to the sending application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7528f-514">
            <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.UdpClient" /> ausgehende Multicastpakete empfängt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-514">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.UdpClient" /> receives outgoing multicast packets; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-515">Multicast ist eine skalierbare Methode für die m: n Kommunikation über das Internet.</span><span class="sxs-lookup"><span data-stu-id="7528f-515">Multicast is a scalable method for many-to-many communication on the Internet.</span></span> <span data-ttu-id="7528f-516">Wenn ein Prozess eine Multicastadresse abonniert, werden alle Pakete von gesendet, dass der Prozess empfangen werden, von jedem anderen Prozess aus, die die Multicastadresse abonniert hat.</span><span class="sxs-lookup"><span data-stu-id="7528f-516">If a process subscribes to a multicast address, any packets sent by that process are received by every other process that has subscribed to the multicast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-517">Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7528f-517">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.MulticastLoopback%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.UdpClient#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Receive">
      <MemberSignature Language="C#" Value="public byte[] Receive (ref System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance unsigned int8[] Receive(class System.Net.IPEndPoint&amp; remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Receive(System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function Receive (ByRef remoteEP As IPEndPoint) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Byte&gt; ^ Receive(System::Net::IPEndPoint ^ % remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Receive :  -&gt; byte[]" Usage="udpClient.Receive remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="7528f-518">Ein <see cref="T:System.Net.IPEndPoint" />, der den Remotehost darstellt, von dem die Daten gesendet wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-518">An <see cref="T:System.Net.IPEndPoint" /> that represents the remote host from which the data was sent.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-519">Gibt ein von einem Remotehost gesendetes UDP-Datagramm zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-519">Returns a UDP datagram that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-520">Ein Array vom Typ <see cref="T:System.Byte" />, das Datagrammdaten enthält.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-520">An array of type <see cref="T:System.Byte" /> that contains datagram data.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-521">Die <xref:System.Net.Sockets.UdpClient.Receive%2A> Methode blockiert, bis ein Datagramm von einem Remotehost eingeht.</span><span class="sxs-lookup"><span data-stu-id="7528f-521">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method will block until a datagram arrives from a remote host.</span></span> <span data-ttu-id="7528f-522">Wenn Daten verfügbar ist, werden die <xref:System.Net.Sockets.UdpClient.Receive%2A> Methode liest die erste Datagramm und gibt den Datenteil als Bytearray zurück.</span><span class="sxs-lookup"><span data-stu-id="7528f-522">When data is available, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will read the first enqueued datagram and return the data portion as a byte array.</span></span> <span data-ttu-id="7528f-523">Diese Methode füllt den `remoteEP` Parameter mit dem <xref:System.Net.IPAddress> und Portnummer des Absenders.</span><span class="sxs-lookup"><span data-stu-id="7528f-523">This method populates the `remoteEP` parameter with the <xref:System.Net.IPAddress> and port number of the sender.</span></span>  
  
 <span data-ttu-id="7528f-524">Wenn Sie angeben, dass ein Standard-Remotehost in die <xref:System.Net.Sockets.UdpClient.Connect%2A> -Methode, die <xref:System.Net.Sockets.UdpClient.Receive%2A> Methode akzeptiert nur Datagramme von diesem Host.</span><span class="sxs-lookup"><span data-stu-id="7528f-524">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, the <xref:System.Net.Sockets.UdpClient.Receive%2A> method will accept datagrams from that host only.</span></span> <span data-ttu-id="7528f-525">Alle anderen Datagramme werden verworfen.</span><span class="sxs-lookup"><span data-stu-id="7528f-525">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="7528f-526">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-526">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-527">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-527">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-528">Wenn Sie beabsichtigen, Multicastdatagramme empfangen, rufen Sie nicht die <xref:System.Net.Sockets.UdpClient.Connect%2A> aufrufen, bevor die <xref:System.Net.Sockets.UdpClient.Receive%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-528">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="7528f-529">Die <xref:System.Net.Sockets.UdpClient> verwenden Sie zum Empfangen von Datagramme muss erstellt werden, mithilfe der multicast-Portnummer.</span><span class="sxs-lookup"><span data-stu-id="7528f-529">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-530">Das folgende Beispiel veranschaulicht die <xref:System.Net.Sockets.UdpClient.Receive%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-530">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Receive%2A> method.</span></span> <span data-ttu-id="7528f-531">Die <xref:System.Net.Sockets.UdpClient.Receive%2A> Methode blockiert die Ausführung, bis er eine Nachricht empfängt.</span><span class="sxs-lookup"><span data-stu-id="7528f-531">The <xref:System.Net.Sockets.UdpClient.Receive%2A> method blocks execution until it receives a message.</span></span> <span data-ttu-id="7528f-532">Mithilfe der <xref:System.Net.IPEndPoint> übergeben <xref:System.Net.Sockets.UdpClient.Receive%2A>, die Identität des antwortenden Hosts angezeigt wird.</span><span class="sxs-lookup"><span data-stu-id="7528f-532">Using the <xref:System.Net.IPEndPoint> passed to <xref:System.Net.Sockets.UdpClient.Receive%2A>, the identity of the responding host is revealed.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-533">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-533">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-534">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-534">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.IPAddress" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;valuetype System.Net.Sockets.UdpReceiveResult&gt; ReceiveAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.ReceiveAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function ReceiveAsync () As Task(Of UdpReceiveResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::UdpReceiveResult&gt; ^ ReceiveAsync();" />
      <MemberSignature Language="F#" Value="member this.ReceiveAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;" Usage="udpClient.ReceiveAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.UdpReceiveResult&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7528f-535">Gibt ein von einem Remotehost gesendetes UDP-Datagramm asynchron zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-535">Returns a UDP datagram asynchronously that was sent by a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-536">Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-536">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
          <span data-ttu-id="7528f-537">Das Aufgabenobjekt, das den asynchronen Vorgang darstellt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-537">The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-538">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="7528f-538">This operation will not block.</span></span> <span data-ttu-id="7528f-539">Das zurückgegebene <xref:System.Threading.Tasks.Task%601>>-Objekt wird abgeschlossen, nachdem das UDP Paket empfangen wurde.</span><span class="sxs-lookup"><span data-stu-id="7528f-539">The returned <xref:System.Threading.Tasks.Task%601>> object will complete after the UDP packet has been received.</span></span>  
  
 <span data-ttu-id="7528f-540">Wenn Sie angeben, dass ein Standard-Remotehost in die <xref:System.Net.Sockets.UdpClient.Connect%2A> -Methode, diese Methode akzeptiert nur Datagramme von diesem Host.</span><span class="sxs-lookup"><span data-stu-id="7528f-540">If you specify a default remote host in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method, this method will accept datagrams from that host only.</span></span> <span data-ttu-id="7528f-541">Alle anderen Datagramme werden verworfen.</span><span class="sxs-lookup"><span data-stu-id="7528f-541">All other datagrams will be discarded.</span></span>  
  
 <span data-ttu-id="7528f-542">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-542">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-543">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-543">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="7528f-544">Wenn Sie beabsichtigen, Multicastdatagramme empfangen, rufen Sie nicht die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode vor dem Aufrufen dieser Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-544">If you intend to receive multicasted datagrams, do not call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method prior to calling this method.</span></span> <span data-ttu-id="7528f-545">Die <xref:System.Net.Sockets.UdpClient> verwenden Sie zum Empfangen von Datagramme muss erstellt werden, mithilfe der multicast-Portnummer.</span><span class="sxs-lookup"><span data-stu-id="7528f-545">The <xref:System.Net.Sockets.UdpClient> you use to receive datagrams must be created using the multicast port number.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-546">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-546">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-547">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-547">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Send">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-548">Sendet ein UDP-Datagramm an einen Remotehost.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-548">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int -&gt; int" Usage="udpClient.Send (dgram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="7528f-549">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-549">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="7528f-550">Die Anzahl der Bytes im Datagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-550">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-551">Sendet ein UDP-Datagramm an einen Remotehost.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-551">Sends a UDP datagram to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-552">Die Anzahl der gesendeten Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-552">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-553">Diese Überladung sendet Datagramme an den Remotehost die <xref:System.Net.Sockets.UdpClient.Connect%2A> -Methode und gibt die Anzahl der gesendeten Bytes.</span><span class="sxs-lookup"><span data-stu-id="7528f-553">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and returns the number of bytes sent.</span></span> <span data-ttu-id="7528f-554">Wenn Sie nicht aufrufen <xref:System.Net.Sockets.UdpClient.Connect%2A> vor dem Aufrufen dieser Überladung hat die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-554">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="7528f-555">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-555">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-556">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-556">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="7528f-557">Wenn Sie Datagramme zu einem anderen Host für die remote senden möchten, müssen Sie Aufrufen der <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode, und geben Sie den gewünschten Hostnamen des Remotehosts.</span><span class="sxs-lookup"><span data-stu-id="7528f-557">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="7528f-558">Verwenden Sie eine der anderen <xref:System.Net.Sockets.UdpClient.Send%2A> methodenüberladungen, um Datagramme an eine broadcast-Adresse senden.</span><span class="sxs-lookup"><span data-stu-id="7528f-558">Use either of the other <xref:System.Net.Sockets.UdpClient.Send%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-559">Das folgende Beispiel veranschaulicht die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-559">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="7528f-560">Sie müssen vor der Verwendung dieser Überladung einen Standard-Remotehost herstellen.</span><span class="sxs-lookup"><span data-stu-id="7528f-560">You must establish a default remote host prior to using this overload.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-561">
            <paramref name="dgram" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-561">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7528f-562">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-562">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-563">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-563">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-564">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-564">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * System.Net.IPEndPoint -&gt; int" Usage="udpClient.Send (dgram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="7528f-565">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-565">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send, represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="7528f-566">Die Anzahl der Bytes im Datagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-566">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="7528f-567">Ein <see cref="T:System.Net.IPEndPoint" />, der den Host und Port darstellt, an die das Datagramm gesendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-567">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-568">Sendet ein UDP-Datagramm an den Host am angegebenen Remoteendpunkt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-568">Sends a UDP datagram to the host at the specified remote endpoint.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-569">Die Anzahl der gesendeten Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-569">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-570">Die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode Datagramme an den angegebenen Endpunkt gesendet und gibt die Anzahl der erfolgreich gesendeten Bytes.</span><span class="sxs-lookup"><span data-stu-id="7528f-570">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the specified endpoint and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="7528f-571">Bevor Sie diese Überladung aufrufen, erstellen Sie zuerst eine <xref:System.Net.IPEndPoint> mithilfe der IP-Adresse und Portnummer des Remotehosts, an die die Datagramme übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="7528f-571">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="7528f-572">Können Sie Datagramme an die Standard-Broadcastadresse senden zu beheben, 255.255.255.255, durch Angabe <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> für die <xref:System.Net.IPAddress.Address%2A> Eigenschaft der <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="7528f-572">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="7528f-573">Nachdem Sie diese erstellt haben <xref:System.Net.IPEndPoint>, übergeben Sie sie an der <xref:System.Net.Sockets.UdpClient.Send%2A> -Methode, wie die `endPoint` Parameter.</span><span class="sxs-lookup"><span data-stu-id="7528f-573">After you have created this <xref:System.Net.IPEndPoint>, pass it to the <xref:System.Net.Sockets.UdpClient.Send%2A> method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="7528f-574">Wenn Sie Datagramme an eine andere Broadcastadresse senden möchten, verwenden Sie die <xref:System.Net.Sockets.UdpClient.Client%2A> Methode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.Socket>, und legen Sie die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7528f-574">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7528f-575">Sie können auch mit rückgängig der <xref:System.Net.Sockets.Socket> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7528f-575">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-576">Bieten kein `endPoint` Parameter für diese Methode, wenn Sie bereits mit einen remote-Host eingerichtet haben die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-576">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="7528f-577">Wenn Sie dies tun, die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-577">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="7528f-578">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-578">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-579">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-579">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-580">Das folgende Beispiel veranschaulicht die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-580">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="7528f-581">Dieses Beispiel verwendet eine <xref:System.Net.IPEndPoint> auf den Zielhost angeben.</span><span class="sxs-lookup"><span data-stu-id="7528f-581">This example uses an <xref:System.Net.IPEndPoint> to specify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-582">
            <paramref name="dgram" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-582">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7528f-583">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-583">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-584">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-584">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-585">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-585">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.IPEndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Send">
      <MemberSignature Language="C#" Value="public int Send (byte[] dgram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Send(unsigned int8[] dgram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.Send(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Send (dgram As Byte(), bytes As Integer, hostname As String, port As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Send(cli::array &lt;System::Byte&gt; ^ dgram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Send : byte[] * int * string * int -&gt; int" Usage="udpClient.Send (dgram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dgram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dgram">
          <span data-ttu-id="7528f-586">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-586">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="7528f-587">Die Anzahl der Bytes im Datagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-587">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="7528f-588">Der Name des Remotehosts, an den das Datagramm gesendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-588">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="7528f-589">Die Nummer des Remoteports, mit dem kommuniziert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-589">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-590">Sendet ein UDP-Datagramm an einen angegebenen Port auf einem angegebenen Remotehost.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-590">Sends a UDP datagram to a specified port on a specified remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-591">Die Anzahl der gesendeten Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-591">The number of bytes sent.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-592">Die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode sendet Datagramme an die angegebenen Werte von der `hostname` und `port` Parameter und gibt die Anzahl der erfolgreich Bytes gesendeten.</span><span class="sxs-lookup"><span data-stu-id="7528f-592">The <xref:System.Net.Sockets.UdpClient.Send%2A> method sends datagrams to the values specified by the `hostname` and `port` parameters and returns the number of bytes successfully sent.</span></span> <span data-ttu-id="7528f-593">Sie können die Datagramme an die Standard-Broadcastadresse senden, durch Angabe von "255.255.255.255" für die `hostname` Parameterwert.</span><span class="sxs-lookup"><span data-stu-id="7528f-593">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="7528f-594">Wenn Sie Datagramme an eine andere Broadcastadresse senden möchten, verwenden Sie die <xref:System.Net.Sockets.UdpClient.Client%2A> Methode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.Socket>, und legen Sie die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7528f-594">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7528f-595">Sie können auch mit rückgängig der <xref:System.Net.Sockets.Socket> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7528f-595">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7528f-596">Nicht geben einen Hostnamen oder Portnummer ein, die diese Methode, wenn Sie bereits mit einen remote-Host eingerichtet haben die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-596">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="7528f-597">Wenn Sie dies tun, die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-597">If you do, the <xref:System.Net.Sockets.UdpClient.Send%2A> method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="7528f-598">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-598">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-599">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-599">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-600">Das folgende Beispiel veranschaulicht die <xref:System.Net.Sockets.UdpClient.Send%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-600">The following example demonstrates the <xref:System.Net.Sockets.UdpClient.Send%2A> method.</span></span> <span data-ttu-id="7528f-601">Dieses Beispiel verwendet einen Hostnamen und einer Portnummer auf um den Zielhost zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="7528f-601">This example uses a host name and a port number to identify the target host.</span></span>  
  
 [!code-cpp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[Classic UdpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic UdpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-602">
            <paramref name="dgram" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-602">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7528f-603">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-603">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-604">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-604">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-605">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-605">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="F:System.Net.Sockets.SocketOptionName.Broadcast" />
        <altmember cref="M:System.Net.Sockets.UdpClient.Connect(System.String,System.Int32)" />
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SendAsync">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-606">Sendet asynchron ein UPD-Datagramm an einen Remotehost.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-606">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="7528f-607">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-607">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="7528f-608">Die Anzahl der Bytes im Datagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-608">The number of bytes in the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-609">Sendet asynchron ein UPD-Datagramm an einen Remotehost.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-609">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-610">Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-610">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-611">Diese Überladung sendet Datagramme an den Remotehost die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-611">This overload sends datagrams to the remote host established in the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="7528f-612">Wenn Sie nicht aufrufen <xref:System.Net.Sockets.UdpClient.Connect%2A> vor dem Aufrufen dieser Überladung, die Methode löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-612">If you do not call <xref:System.Net.Sockets.UdpClient.Connect%2A> before calling this overload, the method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="7528f-613">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-613">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-614">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-614">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 <span data-ttu-id="7528f-615">Wenn Sie Datagramme zu einem anderen Host für die remote senden möchten, müssen Sie Aufrufen der <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode, und geben Sie den gewünschten Hostnamen des Remotehosts.</span><span class="sxs-lookup"><span data-stu-id="7528f-615">If you want to send datagrams to a different remote host, you must call the <xref:System.Net.Sockets.UdpClient.Connect%2A> method and specify the desired remote host.</span></span> <span data-ttu-id="7528f-616">Verwenden Sie eine der anderen <xref:System.Net.Sockets.UdpClient.SendAsync%2A> methodenüberladungen, um Datagramme an eine broadcast-Adresse senden.</span><span class="sxs-lookup"><span data-stu-id="7528f-616">Use either of the other <xref:System.Net.Sockets.UdpClient.SendAsync%2A> method overloads to send datagrams to a broadcast address.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-617">
            <paramref name="dgram" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-617">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7528f-618">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-618">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-619">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-619">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-620">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-620">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, System.Net.IPEndPoint endPoint);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, class System.Net.IPEndPoint endPoint) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, endPoint As IPEndPoint) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::Net::IPEndPoint ^ endPoint);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * System.Net.IPEndPoint -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, endPoint)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="endPoint" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="7528f-621">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-621">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="7528f-622">Die Anzahl der Bytes im Datagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-622">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="endPoint">
          <span data-ttu-id="7528f-623">Ein <see cref="T:System.Net.IPEndPoint" />, der den Host und Port darstellt, an die das Datagramm gesendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-623">An <see cref="T:System.Net.IPEndPoint" /> that represents the host and port to which to send the datagram.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-624">Sendet asynchron ein UPD-Datagramm an einen Remotehost.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-624">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-625">Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-625">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-626">Diese Methode sendet Datagramme an den angegebenen Endpunkt.</span><span class="sxs-lookup"><span data-stu-id="7528f-626">This method sends datagrams to the specified endpoint.</span></span> <span data-ttu-id="7528f-627">Bevor Sie diese Überladung aufrufen, erstellen Sie zuerst eine <xref:System.Net.IPEndPoint> mithilfe der IP-Adresse und Portnummer des Remotehosts, an die die Datagramme übermittelt werden.</span><span class="sxs-lookup"><span data-stu-id="7528f-627">Before calling this overload, you must first create an <xref:System.Net.IPEndPoint> using the IP address and port number of the remote host to which your datagrams will be delivered.</span></span> <span data-ttu-id="7528f-628">Können Sie Datagramme an die Standard-Broadcastadresse senden zu beheben, 255.255.255.255, durch Angabe <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> für die <xref:System.Net.IPAddress.Address%2A> Eigenschaft der <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="7528f-628">You can send datagrams to the default broadcast address, 255.255.255.255, by specifying <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType> for the <xref:System.Net.IPAddress.Address%2A> property of the <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="7528f-629">Nachdem Sie diese erstellt haben <xref:System.Net.IPEndPoint>, übergeben Sie es an diese Methode als die `endPoint` Parameter.</span><span class="sxs-lookup"><span data-stu-id="7528f-629">After you have created this <xref:System.Net.IPEndPoint>, pass it to this method as the `endPoint` parameter.</span></span>  
  
 <span data-ttu-id="7528f-630">Wenn Sie Datagramme an eine andere Broadcastadresse senden möchten, verwenden Sie die <xref:System.Net.Sockets.UdpClient.Client%2A> Methode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.Socket>, und legen Sie die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7528f-630">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7528f-631">Sie können auch mit rückgängig der <xref:System.Net.Sockets.Socket> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7528f-631">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="7528f-632">Bieten kein `endPoint` Parameter für diese Methode, wenn Sie bereits mit einen remote-Host eingerichtet haben die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-632">Do not provide an `endPoint` parameter to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="7528f-633">Wenn Sie dies tun, gibt diese Methode löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-633">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="7528f-634">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-634">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-635">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-635">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-636">
            <paramref name="dgram" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-636">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7528f-637">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-637">
              <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-638">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-638">
              <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-639">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-639">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;int&gt; SendAsync (byte[] datagram, int bytes, string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;int32&gt; SendAsync(unsigned int8[] datagram, int32 bytes, string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.SendAsync(System.Byte[],System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function SendAsync (datagram As Byte(), bytes As Integer, hostname As String, port As Integer) As Task(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;int&gt; ^ SendAsync(cli::array &lt;System::Byte&gt; ^ datagram, int bytes, System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.SendAsync : byte[] * int * string * int -&gt; System.Threading.Tasks.Task&lt;int&gt;" Usage="udpClient.SendAsync (datagram, bytes, hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="datagram" Type="System.Byte[]" />
        <Parameter Name="bytes" Type="System.Int32" />
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="datagram">
          <span data-ttu-id="7528f-640">Ein Array vom Typ <see cref="T:System.Byte" />, das das von Ihnen zu sendende UDP-Datagramm in Form eines Bytearrays angibt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-640">An array of type <see cref="T:System.Byte" /> that specifies the UDP datagram that you intend to send represented as an array of bytes.</span>
          </span>
        </param>
        <param name="bytes">
          <span data-ttu-id="7528f-641">Die Anzahl der Bytes im Datagramm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-641">The number of bytes in the datagram.</span>
          </span>
        </param>
        <param name="hostname">
          <span data-ttu-id="7528f-642">Der Name des Remotehosts, an den das Datagramm gesendet werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-642">The name of the remote host to which you intend to send the datagram.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="7528f-643">Die Nummer des Remoteports, mit dem kommuniziert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-643">The remote port number with which you intend to communicate.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7528f-644">Sendet asynchron ein UPD-Datagramm an einen Remotehost.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-644">Sends a UDP datagram asynchronously to a remote host.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7528f-645">Gibt <see cref="T:System.Threading.Tasks.Task`1" />zurück.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-645">Returns <see cref="T:System.Threading.Tasks.Task`1" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-646">Diese Methode sendet Datagramme an die angegebenen Werte von der `hostname` und `port` Parameter.</span><span class="sxs-lookup"><span data-stu-id="7528f-646">This method sends datagrams to the values specified by the `hostname` and `port` parameters.</span></span> <span data-ttu-id="7528f-647">Sie können die Datagramme an die Standard-Broadcastadresse senden, durch Angabe von "255.255.255.255" für die `hostname` Parameterwert.</span><span class="sxs-lookup"><span data-stu-id="7528f-647">You can send datagrams to the default broadcast address by specifying "255.255.255.255" for the `hostname` parameter value.</span></span>  
  
 <span data-ttu-id="7528f-648">Wenn Sie Datagramme an eine andere Broadcastadresse senden möchten, verwenden Sie die <xref:System.Net.Sockets.UdpClient.Client%2A> Methode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.Socket>, und legen Sie die Socketoption auf <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7528f-648">If you want to send datagrams to any other broadcast address, use the <xref:System.Net.Sockets.UdpClient.Client%2A> method to obtain the underlying <xref:System.Net.Sockets.Socket>, and set the socket option to <xref:System.Net.Sockets.SocketOptionName.Broadcast?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7528f-649">Sie können auch mit rückgängig der <xref:System.Net.Sockets.Socket> Klasse.</span><span class="sxs-lookup"><span data-stu-id="7528f-649">You can also revert to using the <xref:System.Net.Sockets.Socket> class.</span></span>  
  
> [!WARNING]
>  <span data-ttu-id="7528f-650">Nicht geben einen Hostnamen oder Portnummer ein, die diese Methode, wenn Sie bereits mit einen remote-Host eingerichtet haben die <xref:System.Net.Sockets.UdpClient.Connect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="7528f-650">Do not provide a host name or port number to this method if you have already established a remote host with the <xref:System.Net.Sockets.UdpClient.Connect%2A> method.</span></span> <span data-ttu-id="7528f-651">Wenn Sie dies tun, gibt diese Methode löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="7528f-651">If you do, this method will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="7528f-652">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="7528f-652">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="7528f-653">Wenn Sie diesen Code abgerufen haben, sehen Sie sich die [Windows Sockets-Version 2-API-Fehlercode](/windows/desktop/winsock/windows-sockets-error-codes-2) Dokumentation für eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="7528f-653">Once you have obtained this code, you can refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7528f-654">
            <paramref name="dgram" /> ist <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-654">
              <paramref name="dgram" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7528f-655">Der <see cref="T:System.Net.Sockets.UdpClient" /> hat bereits einen Standard-Remotehost eingerichtet.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-655">The <see cref="T:System.Net.Sockets.UdpClient" /> has already established a default remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="7528f-656">Der <see cref="T:System.Net.Sockets.UdpClient" /> ist geschlossen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-656">The <see cref="T:System.Net.Sockets.UdpClient" /> is closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="7528f-657">Beim Zugreifen auf den Socket ist ein Fehler aufgetreten.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-657">An error occurred when accessing the socket.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Ttl">
      <MemberSignature Language="C#" Value="public short Ttl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 Ttl" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpClient.Ttl" />
      <MemberSignature Language="VB.NET" Value="Public Property Ttl As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property short Ttl { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.Ttl : int16 with get, set" Usage="System.Net.Sockets.UdpClient.Ttl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7528f-658">Ruft einen Wert ab, der die Gültigkeitsdauer (TTL – Time to Live) von IP (Internet Protocol)-Paketen angibt, die vom <see cref="T:System.Net.Sockets.UdpClient" /> gesendet werden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-658">Gets or sets a value that specifies the Time to Live (TTL) value of Internet Protocol (IP) packets sent by the <see cref="T:System.Net.Sockets.UdpClient" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7528f-659">Der TTL-Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7528f-659">The TTL value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7528f-660">Der TTL-Wert gibt an, die maximale Anzahl von Routern ein Pakets weitergeleitet werden kann, bevor der Router das Paket eine Message-Protokoll ICMP (Internet Control) "Gültigkeitsdauer (TTL) wurde überschritten" verwirft und Fehlermeldung an den Absender zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="7528f-660">The TTL value indicates the maximum number of routers a packet can traverse before the router discards the packet and an Internet Control Message Protocol (ICMP) "TTL exceeded" error message is returned to the sender.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7528f-661">Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Net.Sockets.UdpClient.Ttl%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="7528f-661">The following code example shows the use of the <xref:System.Net.Sockets.UdpClient.Ttl%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.UdpClient#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CPP/newudpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.UdpClient#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.UdpClient/CS/newudpclient.cs#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>