<Type Name="UdpAnySourceMulticastClient" FullName="System.Net.Sockets.UdpAnySourceMulticastClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="df4d6e72880f5980ef020aa9817101116c6c1cd8" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69112152" /></Metadata><TypeSignature Language="C#" Value="public class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpAnySourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpAnySourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpAnySourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpAnySourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpAnySourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Ein Clientempfänger für Multicastdatenverkehr von einer beliebigen Quelle, wird auch als Any Source Multicast (ASM) oder Internet Standard Multicast (ISM) bezeichnet.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpAnySourceMulticastClient (System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpAnySourceMulticastClient(System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpAnySourceMulticastClient : System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpAnySourceMulticastClient" Usage="new System.Net.Sockets.UdpAnySourceMulticastClient (groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="groupAddress">Die Multicastgruppenadresse, die dieser Empfänger abonnieren soll.</param>
        <param name="localPort">Der lokale Port, an den dieser Empfänger binden soll.</param>
        <summary>Erstellt einen neuen <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />-UDP-Client, der eine Gruppenadresse abonnieren und Datagramme von einer beliebigen Quelle empfangen kann.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> Konstruktor ordnet einen UDP-Multicast-Socket einer Gruppen Adresse und einem Port zu, bindet den Socket aber nicht oder verwendet ihn anderweitig.  
  
 Der `groupAddress` -Parameter kann entweder eine IPv6-oder IPv4-Multicast Adresse sein.  
  
 Der `localPort` -Parameter darf keinen Port angeben, der kleiner als 1.024 ist.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="groupAddress" /> ist <see langword="null" />. Verweis</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="localPort" /> ist kleiner als 0, oder: <paramref name="localPort" /> ist größer als 65.535.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">Eine Rückrufmethode, die beim Abschließen des Vorgangs aufgerufen werden soll.</param>
        <param name="state">Optionale Zustandsinformationen, die an die <paramref name="callback" />-Methode für diesen Vorgang übergeben werden sollen.</param>
        <summary>Bindet den Socket und beginnt einen Beitrittsvorgang für die Multicastgruppe, um das Empfangen von Datagrammen von einem beliebigen Gruppenteilnehmer zu ermöglichen.</summary>
        <returns>Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> -Methode bindet einen UDP-Multicast-Socket an einen lokalen Port und verknüpft eine Multicast Gruppe, damit Datagramme von einem beliebigen Multicast Gruppenteilnehmer empfangen werden können. Der lokale Port und die Multicast Gruppen Adresse werden im <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> Konstruktor angegeben.  
  
 Die im `callback` -Parameter angegebene Methode wird aufgerufen, wenn der Vorgang zum Beitreten zur Multicast Gruppe abgeschlossen wurde.  
  
 Wenn dies für die Laufzeit erforderlich ist <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginJoinGroup%2A> , führt die-Methode auch eine Richtlinien Überprüfung durch, um zu überprüfen, ob der Client Zugriff auf die Multicast Gruppe hat. Wenn der Client keinen Zugriff hat, wird eine <xref:System.Net.Sockets.SocketException> mit <xref:System.Net.Sockets.SocketError.AccessDenied>der ausgelöst.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Multicastgruppe wurde bereits zusammengeführt, oder ein Beitrittsvorgang wird derzeit ausgeführt.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromGroup : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginReceiveFromGroup (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Der Puffer zum Speichern der empfangenen Daten.</param>
        <param name="offset">Der Offset, in Bytes, ab dem Anfang des <paramref name="buffer" />s, in dem die Daten gespeichert werden sollen.</param>
        <param name="count">Die maximale Anzahl der zu empfangenden und im <paramref name="buffer" /> zu speichernden Bytes.</param>
        <param name="callback">Die Rückrufmethode, die beim Abschließen des Vorgangs aufgerufen werden soll.</param>
        <param name="state">Optionale Zustandsinformationen, die an die <paramref name="callback" />-Methode für diesen Vorgang übergeben werden sollen.</param>
        <summary>Startet das Empfangen eines Pakets von einer verknüpften Multicastgruppe und ruft den angegebenen Rückruf auf, wenn ein Paket von einem irgendeinem Absender in der Gruppe angekommen ist.</summary>
        <returns>Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> -Methode startet einen Vorgang zum Empfangen eines UDP-Pakets von der verbundenen Multicast Gruppe von einem beliebigen Absender. Der lokale Port und die Multicast Gruppen Adresse werden im <xref:System.Net.Sockets.UdpAnySourceMulticastClient.%23ctor%2A> Konstruktor angegeben. Der Multicast Client muss außerdem einen Join mit der Multicast Gruppe abgeschlossen haben.  
  
 Die im `callback` -Parameter angegebene Methode wird aufgerufen, wenn ein Paket empfangen wurde.  
  
 Ein Socketfehler kann auftreten, wenn ein Empfangsvorgang synchron fehlschlägt, obwohl dies bei UDP nicht üblich ist. Wenn ein Socketfehler auftritt, <xref:System.Net.Sockets.SocketException> wird eine ausgelöst. Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> -Enumeration angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> ist kleiner als 0. 
- oder - 
 <paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.  
  
- oder - 
 <paramref name="count" /> ist kleiner als 0. 
- oder - 
 <paramref name="offset" /> plus die Anzahl ist größer als die Länge von <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Multicastgruppe wurde noch nicht zusammengeführt.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendTo">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendTo (byte[] buffer, int offset, int count, System.Net.IPEndPoint remoteEndPoint, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendTo(unsigned int8[] buffer, int32 offset, int32 count, class System.Net.IPEndPoint remoteEndPoint, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo(System.Byte[],System.Int32,System.Int32,System.Net.IPEndPoint,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendTo (buffer As Byte(), offset As Integer, count As Integer, remoteEndPoint As IPEndPoint, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendTo(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, System::Net::IPEndPoint ^ remoteEndPoint, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendTo : byte[] * int * int * System.Net.IPEndPoint * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginSendTo (buffer, offset, count, remoteEndPoint, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remoteEndPoint" Type="System.Net.IPEndPoint" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Der Puffer, der die zu sendenden Daten enthält.</param>
        <param name="offset">Der Offset in Bytes ab dem Anfang vom <paramref name="buffer" />, aus dem die zu sendenden Daten gelesen werden sollen.</param>
        <param name="count">Die Anzahl von Bytes, die aus dem <paramref name="buffer" /> gesendet werden sollen.</param>
        <param name="remoteEndPoint">Der Remoteendpunkt, an den das Paket gesendet werden soll.</param>
        <param name="callback">Die Rückrufmethode, die beim Abschließen des Vorgangs aufgerufen werden soll.</param>
        <param name="state">Optionale Zustandsinformationen, die an die <paramref name="callback" />-Methode für diesen Vorgang übergeben werden sollen.</param>
        <summary>Startet den Vorgang, bei dem ein Unicastpaket an das angegebene Ziel gesendet wird.</summary>
        <returns>Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> -Methode startet einen Vorgang zum Senden eines UDP-Pakets an die verbundene Multicast Gruppe.  
  
 Der Client muss einen Join mit der Multicast Gruppe abgeschlossen haben. Die im `remoteEndPoint` -Parameter angegebene Zieladresse muss bereits ein Multicast Paket an diesen Empfänger gesendet haben. In einigen Protokollen werden diese Informationen verwendet, um Fluss Steuerung, Qualität von Dienst Statistiken oder Wiederherstellungs Nachrichten zu übergeben.  
  
 Die im `callback` -Parameter angegebene Methode wird aufgerufen, wenn ein Paket empfangen wurde.  
  
 Die Übertragung ist nur zulässig, wenn die im `remoteEndPoint` -Parameter angegebene Adresse bereits ein Multicast Paket an diesen Empfänger gesendet hat. Wenn der Client keinen Zugriff hat, wird eine <xref:System.Net.Sockets.SocketException> mit <xref:System.Net.Sockets.SocketError.AccessDenied>der ausgelöst.  
  
 Wenn der im `remoteEndPoint` -Parameter angegebene Zielport kleiner als 1.024 ist, wird <xref:System.Net.Sockets.SocketException> eine mit <xref:System.Net.Sockets.SocketError.AccessDenied>der ausgelöst.  
  
 Ein Socketfehler kann auftreten, wenn ein Empfangsvorgang synchron fehlschlägt, obwohl dies bei UDP nicht üblich ist. Wenn ein Socketfehler auftritt, <xref:System.Net.Sockets.SocketException> wird eine ausgelöst. Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> -Enumeration angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> ist kleiner als 0. 
- oder - 
 <paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.  
  
- oder - 
 <paramref name="count" /> ist kleiner als 0. 
- oder - 
 <paramref name="offset" /> plus die Anzahl ist größer als die Länge von <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Multicastgruppe wurde noch nicht zusammengeführt.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToGroup (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToGroup(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToGroup (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToGroup(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToGroup : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpAnySourceMulticastClient.BeginSendToGroup (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer">Der Puffer, der die zu sendenden Daten enthält.</param>
        <param name="offset">Der Offset in Bytes ab dem Anfang vom <paramref name="buffer" />, aus dem die zu sendenden Daten gelesen werden sollen.</param>
        <param name="count">Die Anzahl von Bytes, die aus dem <paramref name="buffer" /> gesendet werden sollen.</param>
        <param name="callback">Die Rückrufmethode, die beim Abschließen des Vorgangs aufgerufen werden soll.</param>
        <param name="state">Optionale Zustandsinformationen, die an die <paramref name="callback" />-Methode für diesen Vorgang übergeben werden sollen.</param>
        <summary>Startet das Senden eines Pakets an eine verknüpfte Multicastgruppe und ruft den angegebenen Rückruf auf, wenn ein Paket an die Gruppe gesendet wurde.</summary>
        <returns>Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> -Methode startet einen Vorgang zum Senden eines UDP-Pakets an die verbundene Multicast Gruppe.  
  
 Der Client muss einen Join mit der Multicast Gruppe abgeschlossen haben.  
  
 Die im `callback` -Parameter angegebene Methode wird aufgerufen, wenn ein Paket empfangen wurde.  
  
 Ein Socketfehler kann auftreten, wenn ein Empfangsvorgang synchron fehlschlägt, obwohl dies bei UDP nicht üblich ist. Wenn ein Socketfehler auftritt, <xref:System.Net.Sockets.SocketException> wird eine ausgelöst. Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> -Enumeration angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buffer" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><paramref name="offset" /> ist kleiner als 0. 
- oder - 
 <paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.  
  
- oder - 
 <paramref name="count" /> ist kleiner als 0. 
- oder - 
 <paramref name="offset" /> plus die Anzahl ist größer als die Länge von <paramref name="buffer" />.</exception>
        <exception cref="T:System.InvalidOperationException">Die Multicastgruppe wurde noch nicht zusammengeführt.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      </Docs>
    </Member>
    <Member MemberName="BlockSource">
      <MemberSignature Language="C#" Value="public void BlockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BlockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BlockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BlockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberSignature Language="F#" Value="member this.BlockSource : System.Net.IPAddress -&gt; unit" Usage="udpAnySourceMulticastClient.BlockSource sourceAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Die Adresse der Quelle, die blockiert werden soll.</param>
        <summary>Blockiert eine Quelle, sodass von ihr ausgehende Multicastpakete nicht mehr empfangen werden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> -Methode blockiert das Empfangen von Multicast Paketen aus einer angegebenen Quelladresse. Der Client muss einen Join mit der Multicast Gruppe abgeschlossen haben.  
  
 Der `sourceAddress` -Parameter kann entweder eine IPv6-oder eine IPv4-Adresse `sourceAddress` sein, aber der-Parameter muss mit der Adressfamilie der Multicast Gruppe, der der Client verknüpft ist, identisch sein.  
  
 Die im `callback` -Parameter angegebene Methode wird aufgerufen, wenn ein Paket empfangen wurde.  
  
 Wenn beim Ausführen des Block Quell Vorgangs ein Socketfehler auftritt, wird <xref:System.Net.Sockets.SocketException> eine ausgelöst. Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> -Enumeration angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Multicastgruppe wurde noch nicht zusammengeführt.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpAnySourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Verlässt die Multicastgruppe und gibt alle Ressourcen frei, die von der aktuellen Instanz der <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />-Klasse und dem zugrunde liegenden <see cref="T:System.Net.Sockets.Socket" /> verwendet wurden.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Rufen Sie <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> auf, wenn Sie <xref:System.Net.Sockets.UdpAnySourceMulticastClient> nicht mehr benötigen. Die verwerfen-Methode verbleibt <xref:System.Net.Sockets.UdpAnySourceMulticastClient> in einem nicht verwendbaren Zustand. Nach dem <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A>Aufrufen von müssen Sie alle Verweise auf den <xref:System.Net.Sockets.UdpAnySourceMulticastClient> freigeben, damit der Garbage Collector den Speicher freigeben kann <xref:System.Net.Sockets.UdpAnySourceMulticastClient> , den der belegt hat.  
  
 Rufen Sie immer <xref:System.Net.Sockets.UdpAnySourceMulticastClient.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Net.Sockets.UdpAnySourceMulticastClient> freigeben. Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Net.Sockets.UdpAnySourceMulticastClient>-Methode des <xref:System.Object.Finalize%2A>-Objekts aufruft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Das Ergebnis des asynchronen Beitrittsvorgangs.</param>
        <summary>Beendet den asynchronen Beitrittsvorgang für eine Multicastgruppe.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> -Methode schließt eine asynchrone Bindung an einen Socket und einen Joinvorgang an eine Multicast Gruppe ab.  
  
 Wenn dies für die Laufzeit erforderlich ist <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndJoinGroup%2A> , führt die-Methode auch eine Richtlinien Überprüfung durch, um zu überprüfen, ob der Client Zugriff auf die Multicast Gruppe hat. Wenn der Client keinen Zugriff hat, wird eine <xref:System.Net.Sockets.SocketException> mit <xref:System.Net.Sockets.SocketError.AccessDenied>der ausgelöst.  
  
 Wenn beim Ausführen des Vorgangs der joingruppe ein Socketfehler auftritt, <xref:System.Net.Sockets.SocketException> wird eine ausgelöst. Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> -Enumeration angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromGroup">
      <MemberSignature Language="C#" Value="public int EndReceiveFromGroup (IAsyncResult result, out System.Net.IPEndPoint source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromGroup(class System.IAsyncResult result, [out] class System.Net.IPEndPoint&amp; source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup(System.IAsyncResult,System.Net.IPEndPoint@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromGroup (result As IAsyncResult, ByRef source As IPEndPoint) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromGroup(IAsyncResult ^ result, [Runtime::InteropServices::Out] System::Net::IPEndPoint ^ % source);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromGroup : IAsyncResult *  -&gt; int" Usage="udpAnySourceMulticastClient.EndReceiveFromGroup (result, source)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="source" Type="System.Net.IPEndPoint" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result">Das Ergebnis des asynchronen Empfangsvorgangs.</param>
        <param name="source">Der Quellendpunkt, von dem das Paket empfangen wurde.</param>
        <summary>Schließt den asynchronen Empfangsvorgang des Pakets aus der verknüpften Multicastgruppe ab und stellt die empfangenen Informationen bereit.</summary>
        <returns>Die Länge der Nachricht (in Bytes), die im Pufferparameter gespeichert wurde, der an die <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />-Methode übergeben wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> -Methode schließt einen asynchronen Vorgang ab, um ein Paket von einer Multicast Gruppe zu empfangen.  
  
 Wenn beim Ausführen des Empfangs Vorgangs ein Socketfehler auftritt, wird <xref:System.Net.Sockets.SocketException> eine ausgelöst. Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> -Enumeration angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Die Multicastgruppe wurde noch nicht zusammengeführt.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendTo">
      <MemberSignature Language="C#" Value="public void EndSendTo (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendTo(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendTo (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendTo(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendTo : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndSendTo result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Das Ergebnis des asynchronen Sendevorgangs.</param>
        <summary>Schließt den Vorgang ab, bei dem ein Unicastpaket an das angegebene Ziel gesendet wird.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendTo%2A> -Methode schließt einen asynchronen Vorgang ab, um ein Paket an die angegebene Zieladresse zu senden.  
  
 Wenn beim Ausführen des Empfangs Vorgangs ein Socketfehler auftritt, wird <xref:System.Net.Sockets.SocketException> eine ausgelöst. Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> -Enumeration angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Die Multicastgruppe wurde noch nicht zusammengeführt.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToGroup">
      <MemberSignature Language="C#" Value="public void EndSendToGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToGroup : IAsyncResult -&gt; unit" Usage="udpAnySourceMulticastClient.EndSendToGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">Das Ergebnis des asynchronen Sendevorgangs.</param>
        <summary>Schließt den Sendevorgang eines Pakets an eine Multicastgruppe ab.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndSendToGroup%2A> -Methode schließt einen asynchronen Vorgang ab, um ein Paket an eine Multicast Gruppe zu senden.  
  
 Wenn beim Ausführen des Empfangs Vorgangs ein Socketfehler auftritt, wird <xref:System.Net.Sockets.SocketException> eine ausgelöst. Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> -Enumeration angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="result" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</exception>
        <exception cref="T:System.InvalidOperationException">Die Multicastgruppe wurde noch nicht zusammengeführt.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      </Docs>
    </Member>
    <Member MemberName="MulticastLoopback">
      <MemberSignature Language="C#" Value="public bool MulticastLoopback { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool MulticastLoopback" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberSignature Language="VB.NET" Value="Public Property MulticastLoopback As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool MulticastLoopback { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.MulticastLoopback : bool with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab, der angibt, ob ausgehende Multicastpakete an die sendende Anwendung übermittelt werden, oder legt diesen fest.</summary>
        <value>Gibt <see cref="T:System.Boolean" /> zurück.  
  
Ein Wert, der angibt, ob ausgehende Pakete an eine Multicastgruppe an die sendende Anwendung übermittelt werden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Multicast Datenverkehr ist eine skalierbare Methode für die m:n-Kommunikation im Internet. Ein Prozess abonniert eine Multicast Gruppen Adresse. Anschließend werden alle Pakete, die von einem abonnierten Prozess an die Multicast Gruppe gesendet werden, von jedem anderen Prozess empfangen, der die Multicast Adresse abonniert hat. Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.MulticastLoopback%2A> -Eigenschaft steuert, ob von einem Prozess auf dem lokalen Computer Multicast Pakete empfangen werden, die von diesem Client an die Multicast Gruppe gesendet werden.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Multicastgruppe wurde noch nicht zusammengeführt.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Größe des Empfangspuffers (in Bytes) des <see cref="T:System.Net.Sockets.Socket" /> ab, der für Multicastempfangsvorgänge in dieser <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />-Instanz verwendet wird, oder legt sie fest.</summary>
        <value>Gibt <see cref="T:System.Int32" /> zurück.  
  
Die Größe des Empfangspuffers in Bytes.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> -Eigenschaft ruft die Größe (in Bytes) des Empfangspuffers des zugrunde liegenden <xref:System.Net.Sockets.Socket> ab, der für Multicast Empfangs Vorgänge in <xref:System.Net.Sockets.UdpAnySourceMulticastClient> dieser Instanz verwendet wird, oder legt diese fest. Insbesondere steuert die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.ReceiveBufferSize%2A> -Eigenschaft die Größe des Puffers, der vom Stapel verwendet wird, wenn ein Paket eintrifft, aber die Anwendung hat die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> -Methode noch nicht aufgerufen. Wenn dieser Puffer aufgefüllt wird und die Pakete weiterkommen, bevor die Anwendung die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> - <xref:System.Net.Sockets.UdpAnySourceMulticastClient.EndReceiveFromGroup%2A> Methode und die-Methode aufruft, werden alte Pakete gelöscht. Die Anwendung kann niemals die alten Pakete empfangen und erhält beim Aufrufen der <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginReceiveFromGroup%2A> -Methode stattdessen neuere Pakete.  
  
 Die Standardgröße des Empfangspuffers unter Windows beträgt 8.192 Bytes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Puffergröße ist kleiner als 0.</exception>
        <exception cref="T:System.InvalidOperationException">Die Multicastgruppe wurde noch nicht zusammengeführt.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Dient zum Abrufen oder Festlegen der Größe des Sendepuffers (in Byte) des <see cref="T:System.Net.Sockets.Socket" />, der für Multicastsendevorgänge in dieser <see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" />-Instanz verwendet wird.</summary>
        <value>Gibt <see cref="T:System.Int32" /> zurück.  
  
Die Größe (in Bytes) des Sendepuffers.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> -Eigenschaft ruft die Größe des Sendepuffers des zugrunde liegenden Sockets in Bytes ab, der für Multicast Sende Vorgänge in dieser <xref:System.Net.Sockets.UdpAnySourceMulticastClient> Instanz verwendet wird, oder legt diese fest.  
  
 Aufrufe der-Methode <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendTo%2A> <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> oder der-Methode beanspruchen den Rückruf länger, je nach dem Wert der-Eigenschaft, wenn der Sendepuffer voll ist. <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BeginSendToGroup%2A> Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.SendBufferSize%2A> -Eigenschaft steuert nur, ob der Puffer des Benutzers im physischen Speicher gesperrt bleibt, bis der Sendevorgang abgeschlossen ist.  
  
 Die Standardgröße des Sendepuffers unter Windows beträgt 8.192 Bytes.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Die angegebene Puffergröße ist kleiner als 0.</exception>
        <exception cref="T:System.InvalidOperationException">Die Multicastgruppe wurde noch nicht zusammengeführt.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnblockSource">
      <MemberSignature Language="C#" Value="public void UnblockSource (System.Net.IPAddress sourceAddress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnblockSource(class System.Net.IPAddress sourceAddress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource(System.Net.IPAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnblockSource (sourceAddress As IPAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnblockSource(System::Net::IPAddress ^ sourceAddress);" />
      <MemberSignature Language="F#" Value="member this.UnblockSource : System.Net.IPAddress -&gt; unit" Usage="udpAnySourceMulticastClient.UnblockSource sourceAddress" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
      </Parameters>
      <Docs>
        <param name="sourceAddress">Die Adresse der Quelle, für die die Blockierung aufgehoben werden soll.</param>
        <summary>Hebt die Blockierung einer Quelle auf, die zuvor durch einen Aufruf der <see cref="M:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource(System.Net.IPAddress)" />-Methode blockiert wurde, damit von ihr ausgehende Multicastpakete empfangen werden können.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Net.Sockets.UdpAnySourceMulticastClient.UnblockSource%2A> -Methode hebt die Blockierung von Multicast Paketen auf, die aus einer angegebenen Quelladresse stammen, damit Sie empfangen werden können. Die angegebene Quelladresse muss zuvor durch einen-Rückruf der <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> -Methode blockiert werden.  
  
 Der Client muss einen Join mit der Multicast Gruppe abgeschlossen haben.  
  
 Der `sourceAddress` -Parameter kann entweder eine IPv6-oder IPv4-Multicast Adresse sein.  
  
 Wenn die angegebene `sourceAddress` Quelladresse im-Parameter nicht zuvor durch einen Aufrufen der <xref:System.Net.Sockets.UdpAnySourceMulticastClient.BlockSource%2A> -Methode blockiert wurde, wird <xref:System.Net.Sockets.SocketException> eine mit <xref:System.Net.Sockets.SocketError.AddressNotAvailable>der ausgelöst.  
  
 Wenn beim Ausführen des Vorgangs zum Entsperren der Quelle ein Socketfehler auftritt, <xref:System.Net.Sockets.SocketException> wird eine ausgelöst. Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> -Enumeration angegeben.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die Multicastgruppe wurde noch nicht zusammengeführt.</exception>
        <exception cref="T:System.ObjectDisposedException"><see cref="T:System.Net.Sockets.UdpAnySourceMulticastClient" /> wurde verworfen.</exception>
        <exception cref="T:System.Net.Sockets.SocketException">Fehler beim Versuch, auf den Socket zuzugreifen.</exception>
      </Docs>
    </Member>
  </Members>
</Type>
