<Type Name="UdpSingleSourceMulticastClient" FullName="System.Net.Sockets.UdpSingleSourceMulticastClient">
  <Metadata><Meta Name="ms.openlocfilehash" Value="95a64699833345bb0098bf2d79582d318f8c0786" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73339092" /></Metadata><TypeSignature Language="C#" Value="public class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UdpSingleSourceMulticastClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />
  <TypeSignature Language="VB.NET" Value="Public Class UdpSingleSourceMulticastClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class UdpSingleSourceMulticastClient : IDisposable" />
  <TypeSignature Language="F#" Value="type UdpSingleSourceMulticastClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="60458-101">Ein Clientempfänger für Multicastdatenverkehr von einer einzelnen Quelle, wird auch als Source Specific Multicast (SSM) bezeichnet.</span><span class="sxs-lookup"><span data-stu-id="60458-101">A client receiver for multicast traffic from a single source, also known as Source Specific Multicast (SSM).</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60458-102">Die Multicast Gruppen Adresse und Absender Quelladresse müssen bekannt sein.</span><span class="sxs-lookup"><span data-stu-id="60458-102">The multicast group address and sender source address must be known.</span></span>  
  
 <span data-ttu-id="60458-103">Zusätzlich zum Empfangen von Multicast Daten von einem bestimmten Absender kann der <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> Client auch Unicastdaten an den Absender zurücksenden.</span><span class="sxs-lookup"><span data-stu-id="60458-103">In addition to receiving multicast data from a specific sender, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> client can also send unicast data back to the sender.</span></span>  
  
 <span data-ttu-id="60458-104">Verwenden Sie stattdessen die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>-Klasse, um Multicast von mehreren Quellen zu empfangen, oder wenn die Quellen im Voraus nicht bekannt sind.</span><span class="sxs-lookup"><span data-stu-id="60458-104">To receive multicast from multiple sources, or when the sources aren't known in advance, use the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> class instead.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UdpSingleSourceMulticastClient (System.Net.IPAddress sourceAddress, System.Net.IPAddress groupAddress, int localPort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress sourceAddress, class System.Net.IPAddress groupAddress, int32 localPort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (sourceAddress As IPAddress, groupAddress As IPAddress, localPort As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UdpSingleSourceMulticastClient(System::Net::IPAddress ^ sourceAddress, System::Net::IPAddress ^ groupAddress, int localPort);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.UdpSingleSourceMulticastClient : System.Net.IPAddress * System.Net.IPAddress * int -&gt; System.Net.Sockets.UdpSingleSourceMulticastClient" Usage="new System.Net.Sockets.UdpSingleSourceMulticastClient (sourceAddress, groupAddress, localPort)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="sourceAddress" Type="System.Net.IPAddress" />
        <Parameter Name="groupAddress" Type="System.Net.IPAddress" />
        <Parameter Name="localPort" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceAddress"><span data-ttu-id="60458-105">Die Absenderquelladresse, die dieser Empfänger abonnieren soll.</span><span class="sxs-lookup"><span data-stu-id="60458-105">The sender source address for this receiver to subscribe to.</span></span></param>
        <param name="groupAddress"><span data-ttu-id="60458-106">Die Multicastgruppenadresse, die dieser Empfänger abonnieren soll.</span><span class="sxs-lookup"><span data-stu-id="60458-106">The multicast group address for this receiver to subscribe to.</span></span></param>
        <param name="localPort"><span data-ttu-id="60458-107">Der lokale Port, an den dieser Empfänger binden soll.</span><span class="sxs-lookup"><span data-stu-id="60458-107">The local port for this receiver to bind to.</span></span></param>
        <summary><span data-ttu-id="60458-108">Erstellt einen neuen <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />-UDP-Client, der eine Gruppenadresse abonnieren und Datagramme aus einer einzelnen Quelle empfangen kann.</span><span class="sxs-lookup"><span data-stu-id="60458-108">Creates a new <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> UDP client that can subscribe to a group address and receive datagrams from a single source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60458-109">Der <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>-Konstruktor ordnet einem UDP-Multicast-Socket eine Gruppen Adresse und einen Port zu, bindet den Socket aber nicht oder verwendet ihn anderweitig.</span><span class="sxs-lookup"><span data-stu-id="60458-109">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor associates a UDP multicast socket with a group address and port, but does not bind or otherwise use the socket.</span></span>  
  
 <span data-ttu-id="60458-110">Der `groupAddress`-Parameter kann entweder eine IPv6-oder IPv4-Multicast Adresse sein.</span><span class="sxs-lookup"><span data-stu-id="60458-110">The `groupAddress` parameter may be either an IPv6 or IPv4 multicast address.</span></span> <span data-ttu-id="60458-111">Die Adressfamilie der Parameter "`sourceAddress`" und "`groupAddress`" muss jedoch identisch sein.</span><span class="sxs-lookup"><span data-stu-id="60458-111">However, the address family of the `sourceAddress` and `groupAddress` parameters must the same.</span></span>  
  
 <span data-ttu-id="60458-112">Der `localPort`-Parameter darf keinen Port angeben, der kleiner als 1.024 ist.</span><span class="sxs-lookup"><span data-stu-id="60458-112">The `localPort` parameter must not specify a port less than 1,024.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="60458-113"><paramref name="sourceAddress" /> und <paramref name="groupAddress" /> müssen der gleichen Adressfamilie angehören.</span><span class="sxs-lookup"><span data-stu-id="60458-113"><paramref name="sourceAddress" /> and <paramref name="groupAddress" /> must be the same address family.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60458-114"><paramref name="sourceAddress" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</span><span class="sxs-lookup"><span data-stu-id="60458-114"><paramref name="sourceAddress" /> is a null reference (Nothing in Visual Basic).</span></span>  
  
<span data-ttu-id="60458-115">- oder -</span><span class="sxs-lookup"><span data-stu-id="60458-115">-or-</span></span> 
 <span data-ttu-id="60458-116"><paramref name="groupAddress" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</span><span class="sxs-lookup"><span data-stu-id="60458-116"><paramref name="groupAddress" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60458-117"><paramref name="localPort" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="60458-117"><paramref name="localPort" /> is less than 0</span></span> 
<span data-ttu-id="60458-118">- oder -</span><span class="sxs-lookup"><span data-stu-id="60458-118">-or-</span></span> 
 <span data-ttu-id="60458-119"><paramref name="localPort" /> ist größer als 65.535.</span><span class="sxs-lookup"><span data-stu-id="60458-119"><paramref name="localPort" /> is greater than 65,535.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="60458-120"><paramref name="localPort" /> ist kleiner als 1.024.</span><span class="sxs-lookup"><span data-stu-id="60458-120"><paramref name="localPort" /> is less than 1024</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginJoinGroup">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginJoinGroup (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginJoinGroup(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginJoinGroup (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginJoinGroup(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginJoinGroup : AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginJoinGroup (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="60458-121">Eine Rückrufmethode, die beim Abschließen des Vorgangs aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="60458-121">A callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="60458-122">Optionale Zustandsinformationen, die an die <paramref name="callback" />-Methode für diesen Vorgang übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="60458-122">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="60458-123">Bindet den Socket und beginnt mit einem Beitrittsvorgang für die Multicastgruppe, damit Datagramme von einer einzelnen Quelladresse empfangen werden können.</span><span class="sxs-lookup"><span data-stu-id="60458-123">Binds the socket and begins a join operation to the multicast group to allow datagrams to be received from a single source address.</span></span></summary>
        <returns><span data-ttu-id="60458-124">Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</span><span class="sxs-lookup"><span data-stu-id="60458-124">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60458-125">Die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A>-Methode bindet einen UDP-Multicast-Socket an einen lokalen Port und verknüpft eine Multicast Gruppe, damit Datagramme von einer einzelnen Quelladresse empfangen werden können.</span><span class="sxs-lookup"><span data-stu-id="60458-125">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method binds a UDP multicast socket to a local port and joins a multicast group to allow datagrams to be received from a single source address.</span></span> <span data-ttu-id="60458-126">Die Multicast Gruppen Adresse, einzelne Quelladresse und der lokale Port, an den die Bindung erfolgen soll, werden im <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>-Konstruktor angegeben.</span><span class="sxs-lookup"><span data-stu-id="60458-126">The multicast group address, single source address, and local port to bind to are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.</span></span>  
  
 <span data-ttu-id="60458-127">Die im `callback`-Parameter angegebene Methode wird aufgerufen, wenn der Vorgang zum Beitreten zur Multicast Gruppe abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="60458-127">The method specified in the `callback` parameter is invoked when the operation to join the multicast group has completed.</span></span>  
  
 <span data-ttu-id="60458-128">Wenn dies für die Laufzeit erforderlich ist, führt die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> Methode auch eine Richtlinien Überprüfung durch, um zu überprüfen, ob der Client Zugriff auf die Multicast Gruppe hat.</span><span class="sxs-lookup"><span data-stu-id="60458-128">If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="60458-129">Wenn der Client keinen Zugriff hat, wird eine <xref:System.Net.Sockets.SocketException> mit <xref:System.Net.Sockets.SocketError.AccessDenied>ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="60458-129">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="60458-130">Die Multicastgruppe wurde bereits zusammengeführt, oder ein Beitrittsvorgang wird derzeit ausgeführt.</span><span class="sxs-lookup"><span data-stu-id="60458-130">The multicast group has already been joined or a join operation is currently in progress.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="60458-131"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="60458-131">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="60458-132">Fehler beim Versuch, auf den Socket zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="60458-132">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginReceiveFromSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginReceiveFromSource (byte[] buffer, int offset, int count, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginReceiveFromSource(unsigned int8[] buffer, int32 offset, int32 count, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginReceiveFromSource (buffer As Byte(), offset As Integer, count As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginReceiveFromSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginReceiveFromSource : byte[] * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginReceiveFromSource (buffer, offset, count, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="60458-133">Der Puffer zum Speichern der empfangenen Daten.</span><span class="sxs-lookup"><span data-stu-id="60458-133">The buffer to store the received data.</span></span></param>
        <param name="offset"><span data-ttu-id="60458-134">Der Offset, in Bytes, ab dem Anfang des <paramref name="buffer" />s, in dem die Daten gespeichert werden sollen.</span><span class="sxs-lookup"><span data-stu-id="60458-134">The offset, in bytes, from the beginning of the <paramref name="buffer" /> where the data should be stored.</span></span></param>
        <param name="count"><span data-ttu-id="60458-135">Die maximale Anzahl der zu empfangenden und im <paramref name="buffer" /> zu speichernden Bytes.</span><span class="sxs-lookup"><span data-stu-id="60458-135">The maximum number of bytes to receive and store in the <paramref name="buffer" />.</span></span></param>
        <param name="callback"><span data-ttu-id="60458-136">Die Rückrufmethode, die beim Abschließen des Vorgangs aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="60458-136">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="60458-137">Optionale Zustandsinformationen, die an die <paramref name="callback" />-Methode für diesen Vorgang übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="60458-137">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="60458-138">Startet das Empfangen eines Pakets von einer verknüpften Multicastgruppe und ruft den angegebenen Rückruf auf, wenn ein Paket von einem bestimmten Absender in der Gruppe angekommen ist.</span><span class="sxs-lookup"><span data-stu-id="60458-138">Begins the operation of receiving a packet from the joined multicast group and invokes the specified callback when a packet has arrived on the group from a specified sender.</span></span></summary>
        <returns><span data-ttu-id="60458-139">Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</span><span class="sxs-lookup"><span data-stu-id="60458-139">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60458-140">Die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>-Methode startet einen Vorgang, bei dem ein UDP-Paket von der beigetretenen Multicast Gruppe von einem einzelnen Absender empfangen wird.</span><span class="sxs-lookup"><span data-stu-id="60458-140">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method begins an operation of receiving a UDP packet from the joined multicast group from a single sender.</span></span> <span data-ttu-id="60458-141">Der lokale Port, die Multicast Gruppe und die Absender Quelladresse werden im <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A>-Konstruktor angegeben.</span><span class="sxs-lookup"><span data-stu-id="60458-141">The local port, multicast group, and sender source address are specified in the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.%23ctor%2A> constructor.</span></span> <span data-ttu-id="60458-142">Der Multicast Client muss außerdem einen Join mit der Multicast Gruppe abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="60458-142">The multicast client must also have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="60458-143">Die im `callback`-Parameter angegebene Methode wird aufgerufen, wenn ein Paket empfangen wurde.</span><span class="sxs-lookup"><span data-stu-id="60458-143">The method specified in the `callback` parameter is invoked when a packet has received.</span></span>  
  
 <span data-ttu-id="60458-144">Ein Socketfehler kann auftreten, wenn ein Empfangsvorgang synchron fehlschlägt, obwohl dies bei UDP nicht üblich ist.</span><span class="sxs-lookup"><span data-stu-id="60458-144">It is possible to have a socket failure if a receive operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="60458-145">Wenn ein Socketfehler auftritt, wird eine <xref:System.Net.Sockets.SocketException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="60458-145">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="60458-146">Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> Enumeration angegeben.</span><span class="sxs-lookup"><span data-stu-id="60458-146">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60458-147"><paramref name="buffer" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</span><span class="sxs-lookup"><span data-stu-id="60458-147"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60458-148"><paramref name="offset" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="60458-148"><paramref name="offset" /> is less than 0</span></span> 
<span data-ttu-id="60458-149">- oder -</span><span class="sxs-lookup"><span data-stu-id="60458-149">-or-</span></span> 
 <span data-ttu-id="60458-150"><paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="60458-150"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="60458-151">- oder -</span><span class="sxs-lookup"><span data-stu-id="60458-151">-or-</span></span> 
 <span data-ttu-id="60458-152"><paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="60458-152"><paramref name="count" /> is less than 0</span></span> 
<span data-ttu-id="60458-153">- oder -</span><span class="sxs-lookup"><span data-stu-id="60458-153">-or-</span></span> 
 <span data-ttu-id="60458-154"><paramref name="offset" /> plus die Anzahl ist größer als die Länge von <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="60458-154"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="60458-155">Die Multicastgruppe wurde noch nicht zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="60458-155">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="60458-156"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde gelöscht.</span><span class="sxs-lookup"><span data-stu-id="60458-156">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="60458-157">Fehler beim Versuch, auf den Socket zum Empfangen zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="60458-157">An error occurred when attempting to access the socket for receiving.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginSendToSource">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginSendToSource (byte[] buffer, int offset, int count, int remotePort, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginSendToSource(unsigned int8[] buffer, int32 offset, int32 count, int32 remotePort, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource(System.Byte[],System.Int32,System.Int32,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginSendToSource (buffer As Byte(), offset As Integer, count As Integer, remotePort As Integer, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginSendToSource(cli::array &lt;System::Byte&gt; ^ buffer, int offset, int count, int remotePort, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginSendToSource : byte[] * int * int * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="udpSingleSourceMulticastClient.BeginSendToSource (buffer, offset, count, remotePort, callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buffer" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="remotePort" Type="System.Int32" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="buffer"><span data-ttu-id="60458-158">Der Puffer, der die zu sendenden Daten enthält.</span><span class="sxs-lookup"><span data-stu-id="60458-158">The buffer that contains the data to send.</span></span></param>
        <param name="offset"><span data-ttu-id="60458-159">Der Offset in Bytes ab dem Anfang vom <paramref name="buffer" />, aus dem die zu sendenden Daten gelesen werden sollen.</span><span class="sxs-lookup"><span data-stu-id="60458-159">The offset, in bytes, from the beginning of the <paramref name="buffer" /> to read the data to be sent.</span></span></param>
        <param name="count"><span data-ttu-id="60458-160">Die Anzahl von Bytes, die aus dem <paramref name="buffer" /> gesendet werden sollen.</span><span class="sxs-lookup"><span data-stu-id="60458-160">The number of bytes to send from the <paramref name="buffer" />.</span></span></param>
        <param name="remotePort"><span data-ttu-id="60458-161">Der Remoteport, an den das Paket gesendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="60458-161">The remote port to which the packet is to be sent.</span></span> <span data-ttu-id="60458-162">Die Remoteadresse wird durch den <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" />-Konstruktor angegeben.</span><span class="sxs-lookup"><span data-stu-id="60458-162">The remote address is specified by the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.#ctor(System.Net.IPAddress,System.Net.IPAddress,System.Int32)" /> constructor.</span></span></param>
        <param name="callback"><span data-ttu-id="60458-163">Die Rückrufmethode, die beim Abschließen des Vorgangs aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="60458-163">The callback method to invoke when the operation completes.</span></span></param>
        <param name="state"><span data-ttu-id="60458-164">Optionale Zustandsinformationen, die an die <paramref name="callback" />-Methode für diesen Vorgang übergeben werden sollen.</span><span class="sxs-lookup"><span data-stu-id="60458-164">Optional state information to pass to the <paramref name="callback" /> method for this operation.</span></span></param>
        <summary><span data-ttu-id="60458-165">Startet den Vorgang, bei dem ein Unicastpaket an die zuvor angegebene Quelle gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="60458-165">Begins the operation of sending a unicast packet to the source previously specified.</span></span></summary>
        <returns><span data-ttu-id="60458-166">Ein <see cref="T:System.IAsyncResult" />, das auf diesen Vorgang verweist.</span><span class="sxs-lookup"><span data-stu-id="60458-166">An <see cref="T:System.IAsyncResult" /> that references this operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60458-167">Die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>-Methode startet einen Vorgang, mit dem ein UDP-Paket an die zuvor angegebene Quelle gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="60458-167">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method begins an operation of sending a UDP packet to the source previously specified.</span></span>  
  
 <span data-ttu-id="60458-168">In einigen Protokollen werden diese Informationen verwendet, um Fluss Steuerung, Qualität von Dienst Statistiken oder Wiederherstellungs Nachrichten zu übergeben.</span><span class="sxs-lookup"><span data-stu-id="60458-168">Some protocols use this information to pass along flow control, quality of service statistics, or recovery messages.</span></span>  
  
 <span data-ttu-id="60458-169">Die im `callback`-Parameter angegebene Methode wird aufgerufen, wenn ein Paket gesendet wurde.</span><span class="sxs-lookup"><span data-stu-id="60458-169">The method specified in the `callback` parameter is invoked when a packet has been sent.</span></span>  
  
 <span data-ttu-id="60458-170">Der Client muss einen Join mit der Multicast Gruppe abgeschlossen haben.</span><span class="sxs-lookup"><span data-stu-id="60458-170">The client must have completed a join to the multicast group.</span></span>  
  
 <span data-ttu-id="60458-171">Wenn der im `remotePort`-Parameter angegebene Zielport kleiner als 1.024 ist, wird eine <xref:System.Net.Sockets.SocketException> mit <xref:System.Net.Sockets.SocketError.AccessDenied>ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="60458-171">If the destination port specified in the `remotePort` parameter is less than 1,024, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="60458-172">Ein Socketfehler kann auftreten, wenn ein Sendevorgang synchron fehlschlägt, obwohl dies bei UDP nicht üblich ist.</span><span class="sxs-lookup"><span data-stu-id="60458-172">It is possible to have a socket failure if a send operation fails synchronously, although this is uncommon with UDP.</span></span> <span data-ttu-id="60458-173">Wenn ein Socketfehler auftritt, wird eine <xref:System.Net.Sockets.SocketException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="60458-173">If a socket failure occurs, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="60458-174">Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> Enumeration angegeben.</span><span class="sxs-lookup"><span data-stu-id="60458-174">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60458-175"><paramref name="buffer" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</span><span class="sxs-lookup"><span data-stu-id="60458-175"><paramref name="buffer" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60458-176"><paramref name="offset" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="60458-176"><paramref name="offset" /> is less than 0</span></span> 
<span data-ttu-id="60458-177">- oder -</span><span class="sxs-lookup"><span data-stu-id="60458-177">-or-</span></span> 
 <span data-ttu-id="60458-178"><paramref name="offset" /> ist größer als die Länge von <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="60458-178"><paramref name="offset" /> is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="60458-179">- oder -</span><span class="sxs-lookup"><span data-stu-id="60458-179">-or-</span></span> 
 <span data-ttu-id="60458-180"><paramref name="count" /> ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="60458-180"><paramref name="count" /> is less than 0</span></span> 
<span data-ttu-id="60458-181">- oder -</span><span class="sxs-lookup"><span data-stu-id="60458-181">-or-</span></span> 
 <span data-ttu-id="60458-182"><paramref name="offset" /> plus die Anzahl ist größer als die Länge von <paramref name="buffer" />.</span><span class="sxs-lookup"><span data-stu-id="60458-182"><paramref name="offset" /> plus the count is greater than the length of the <paramref name="buffer" />.</span></span>  
  
<span data-ttu-id="60458-183">- oder -</span><span class="sxs-lookup"><span data-stu-id="60458-183">-or-</span></span> 
 <span data-ttu-id="60458-184"><paramref name="remotePort" /> ist kleiner als 0 oder größer als 65.535.</span><span class="sxs-lookup"><span data-stu-id="60458-184"><paramref name="remotePort" /> is less than 0 or greater than 65,535.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="60458-185">Die Multicastgruppe wurde noch nicht zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="60458-185">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="60458-186"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="60458-186">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="60458-187">Fehler beim Versuch, auf den Socket zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="60458-187">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="udpSingleSourceMulticastClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="60458-188">Verlässt die Multicastgruppe und gibt alle Ressourcen frei, die von der aktuellen Instanz der <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />-Klasse und dem zugrunde liegenden <see cref="T:System.Net.Sockets.Socket" /> verwendet wurden.</span><span class="sxs-lookup"><span data-stu-id="60458-188">Leaves the multicast group and releases all resources used by the current instance of the <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> class and the underlying the <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60458-189">Rufen Sie <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> auf, wenn Sie <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> nicht mehr benötigen.</span><span class="sxs-lookup"><span data-stu-id="60458-189">Call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> when you are finished using the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</span></span> <span data-ttu-id="60458-190">Die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>-Methode bewirkt, dass <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> nicht mehr verwendet werden kann.</span><span class="sxs-lookup"><span data-stu-id="60458-190">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> method leaves the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> in an unusable state.</span></span> <span data-ttu-id="60458-191">Nachdem Sie <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> aufgerufen haben, müssen Sie alle Verweise auf <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> freigeben, damit der Garbage Collector den Speicher freigeben kann, den der <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> belegt hat.</span><span class="sxs-lookup"><span data-stu-id="60458-191">After calling <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A>, you must release all references to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> so the garbage collector can reclaim the memory that the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> was occupying.</span></span>  
  
 <span data-ttu-id="60458-192">Rufen Sie immer <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> auf, bevor Sie den letzten Verweis auf das <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> freigeben.</span><span class="sxs-lookup"><span data-stu-id="60458-192">Always call <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.Dispose%2A> before you release your last reference to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>.</span></span> <span data-ttu-id="60458-193">Andernfalls bleiben die verwendeten Ressourcen reserviert, bis die Garbage Collection die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient>-Methode des <xref:System.Object.Finalize%2A>-Objekts aufruft.</span><span class="sxs-lookup"><span data-stu-id="60458-193">Otherwise, the resources it is using will not be freed until the garbage collector calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> object's <xref:System.Object.Finalize%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EndJoinGroup">
      <MemberSignature Language="C#" Value="public void EndJoinGroup (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndJoinGroup(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndJoinGroup (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndJoinGroup(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndJoinGroup : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndJoinGroup result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="60458-194">Das Ergebnis des asynchronen Beitrittsvorgangs.</span><span class="sxs-lookup"><span data-stu-id="60458-194">The result of the asynchronous join operation.</span></span></param>
        <summary><span data-ttu-id="60458-195">Beendet den asynchronen Beitrittsvorgang für eine Multicastgruppe.</span><span class="sxs-lookup"><span data-stu-id="60458-195">Completes the asynchronous join group operation to a multicast group.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60458-196">Die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A>-Methode schließt eine asynchrone Bindung an einen Socket und einen Joinvorgang zu einer Multicast Gruppe ab.</span><span class="sxs-lookup"><span data-stu-id="60458-196">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method completes an asynchronous bind to a socket and join operation to a multicast group.</span></span>  
  
 <span data-ttu-id="60458-197">Wenn dies für die Laufzeit erforderlich ist, führt die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> Methode auch eine Richtlinien Überprüfung durch, um zu überprüfen, ob der Client Zugriff auf die Multicast Gruppe hat.</span><span class="sxs-lookup"><span data-stu-id="60458-197">If required by the runtime, the  <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndJoinGroup%2A> method also performs a policy check to verify that the client is allowed to access the multicast group.</span></span> <span data-ttu-id="60458-198">Wenn der Client keinen Zugriff hat, wird eine <xref:System.Net.Sockets.SocketException> mit <xref:System.Net.Sockets.SocketError.AccessDenied>ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="60458-198">If the client is not allowed access, a <xref:System.Net.Sockets.SocketException> is thrown with <xref:System.Net.Sockets.SocketError.AccessDenied>.</span></span>  
  
 <span data-ttu-id="60458-199">Wenn beim Ausführen des Vorgangs der joingruppe ein Socketfehler auftritt, wird eine <xref:System.Net.Sockets.SocketException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="60458-199">If there is a socket failure while performing the join group operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="60458-200">Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> Enumeration angegeben.</span><span class="sxs-lookup"><span data-stu-id="60458-200">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60458-201"><paramref name="result" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</span><span class="sxs-lookup"><span data-stu-id="60458-201"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="60458-202"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="60458-202">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="60458-203">Fehler beim Versuch, auf den Socket zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="60458-203">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndReceiveFromSource">
      <MemberSignature Language="C#" Value="public int EndReceiveFromSource (IAsyncResult result, out int sourcePort);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 EndReceiveFromSource(class System.IAsyncResult result, [out] int32&amp; sourcePort) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource(System.IAsyncResult,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndReceiveFromSource (result As IAsyncResult, ByRef sourcePort As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int EndReceiveFromSource(IAsyncResult ^ result, [Runtime::InteropServices::Out] int % sourcePort);" />
      <MemberSignature Language="F#" Value="member this.EndReceiveFromSource : IAsyncResult * int -&gt; int" Usage="udpSingleSourceMulticastClient.EndReceiveFromSource (result, sourcePort)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
        <Parameter Name="sourcePort" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="60458-204">Das Ergebnis des asynchronen Empfangsvorgangs.</span><span class="sxs-lookup"><span data-stu-id="60458-204">The result of the asynchronous receive operation.</span></span></param>
        <param name="sourcePort"><span data-ttu-id="60458-205">Der Quellendpunkt, von dem das Paket empfangen wurde.</span><span class="sxs-lookup"><span data-stu-id="60458-205">The source endpoint where the packet was received from.</span></span></param>
        <summary><span data-ttu-id="60458-206">Schließt den asynchronen Empfangsvorgang des Pakets aus der verknüpften Multicastgruppe ab und stellt die empfangenen Informationen bereit.</span><span class="sxs-lookup"><span data-stu-id="60458-206">Completes the asynchronous operation of receiving a packet from the joined multicast group and provides the information received.</span></span></summary>
        <returns><span data-ttu-id="60458-207">Die Länge der Nachricht (in Byte), die im <paramref name="buffer" />-Parameter gespeichert wurde, der an die <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" />-Methode übergeben wurde.</span><span class="sxs-lookup"><span data-stu-id="60458-207">The length, in bytes, of the message stored in the <paramref name="buffer" /> parameter passed to the <see cref="M:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)" /> method.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60458-208">Die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A>-Methode schließt einen asynchronen Vorgang ab, um ein Paket von einer einzelnen Quelle in einer Multicast Gruppe zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="60458-208">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> method completes an asynchronous operation to receive a packet from a single source in a multicast group.</span></span>  
  
 <span data-ttu-id="60458-209">Wenn beim Ausführen des Empfangs Vorgangs ein Socketfehler auftritt, wird eine <xref:System.Net.Sockets.SocketException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="60458-209">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="60458-210">Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> Enumeration angegeben.</span><span class="sxs-lookup"><span data-stu-id="60458-210">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60458-211"><paramref name="result" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</span><span class="sxs-lookup"><span data-stu-id="60458-211"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="60458-212">Die Multicastgruppe wurde noch nicht zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="60458-212">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="60458-213"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="60458-213">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="60458-214">Fehler beim Versuch, auf den Socket zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="60458-214">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndSendToSource">
      <MemberSignature Language="C#" Value="public void EndSendToSource (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndSendToSource(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndSendToSource (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndSendToSource(IAsyncResult ^ result);" />
      <MemberSignature Language="F#" Value="member this.EndSendToSource : IAsyncResult -&gt; unit" Usage="udpSingleSourceMulticastClient.EndSendToSource result" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result"><span data-ttu-id="60458-215">Das Ergebnis des asynchronen Sendevorgangs.</span><span class="sxs-lookup"><span data-stu-id="60458-215">The result of the asynchronous send operation.</span></span></param>
        <summary><span data-ttu-id="60458-216">Schließt den Vorgang ab, bei dem ein Unicastpaket an eine einzelne Quelle gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="60458-216">Completes the operation of sending a unicast packet to a single source.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60458-217">Die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A>-Methode schließt einen asynchronen Vorgang ab, um ein Paket an eine einzelne Quelle zu senden, die zuvor angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="60458-217">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndSendToSource%2A> method completes an asynchronous operation to send a packet to single source previously specified.</span></span>  
  
 <span data-ttu-id="60458-218">Wenn beim Ausführen des Empfangs Vorgangs ein Socketfehler auftritt, wird eine <xref:System.Net.Sockets.SocketException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="60458-218">If there is a socket failure while performing the receive operation, a <xref:System.Net.Sockets.SocketException> is thrown.</span></span> <span data-ttu-id="60458-219">Der empfangene Fehler wird als Member der <xref:System.Net.Sockets.SocketError> Enumeration angegeben.</span><span class="sxs-lookup"><span data-stu-id="60458-219">The error received is specified as a member of the <xref:System.Net.Sockets.SocketError> enumeration.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="60458-220"><paramref name="result" /> ist ein NULL-Verweis (Nothing in Visual&amp;#160;Basic).</span><span class="sxs-lookup"><span data-stu-id="60458-220"><paramref name="result" /> is a null reference (Nothing in Visual Basic).</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="60458-221">Die Multicastgruppe wurde noch nicht zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="60458-221">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="60458-222"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="60458-222">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="60458-223">Fehler beim Versuch, auf den Socket zuzugreifen.</span><span class="sxs-lookup"><span data-stu-id="60458-223">An error occurred when attempting to access the socket.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60458-224">Ruft die Größe des Empfangspuffers (in Bytes) des <see cref="T:System.Net.Sockets.Socket" /> ab, der für Multicastempfangsvorgänge in dieser <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> -Instanz verwendet wird, oder legt sie fest.</span><span class="sxs-lookup"><span data-stu-id="60458-224">Gets or sets the size, in bytes, of the receive buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast receive operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</span></span></summary>
        <value><span data-ttu-id="60458-225">Gibt <see cref="T:System.Int32" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="60458-225">Returns <see cref="T:System.Int32" />.</span></span>  
  
<span data-ttu-id="60458-226">Die Größe des Empfangspuffers in Bytes.</span><span class="sxs-lookup"><span data-stu-id="60458-226">The size, in bytes, of the receive buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60458-227">Die `ReceiveBufferSize`-Eigenschaft ruft die Größe des Empfangspuffers des zugrunde liegenden <xref:System.Net.Sockets.Socket>, der für Multicast Empfangs Vorgänge in dieser <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> Instanz verwendet wird, in Bytes ab oder legt diese fest.</span><span class="sxs-lookup"><span data-stu-id="60458-227">The `ReceiveBufferSize` property gets or sets the size, in bytes, of the receive buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast receive operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.</span></span> <span data-ttu-id="60458-228">Insbesondere die `ReceiveBufferSize`-Eigenschaft steuert die Größe des Puffers, der vom Stapel verwendet wird, wenn ein Paket eintrifft, aber die Anwendung hat noch nicht die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="60458-228">Specifically, the `ReceiveBufferSize` property controls the size of the buffer used by the stack when a packet arrives, but the application has not yet called the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.</span></span> <span data-ttu-id="60458-229">Wenn dieser Puffer aufgefüllt wird und die Pakete weiterkommen, bevor die Anwendung die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>-und <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> Methoden aufruft, werden alte Pakete gelöscht.</span><span class="sxs-lookup"><span data-stu-id="60458-229">If this buffer gets filled up and packets keep coming before the application calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> and <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.EndReceiveFromSource%2A> methods, old packets will get dropped.</span></span> <span data-ttu-id="60458-230">Die Anwendung ist nicht in der Lage, die alten Pakete zu empfangen. Sie empfängt stattdessen neuere Pakete, wenn Sie die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A>-Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="60458-230">The application will never be able to receive the old packets, and will instead receive newer packets when it calls the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginReceiveFromSource%2A> method.</span></span>  
  
 <span data-ttu-id="60458-231">Die Standardgröße des Empfangspuffers unter Windows ist 8.192.</span><span class="sxs-lookup"><span data-stu-id="60458-231">The default size of the receive buffer on Windows is 8,192.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60458-232">Die angegebene Puffergröße ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="60458-232">The buffer size specified is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="60458-233">Die Multicastgruppe wurde noch nicht zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="60458-233">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="60458-234"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="60458-234">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This API supports the .NET Framework infrastructure and is not intended to be used directly from your code.", true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="60458-235">Dient zum Abrufen oder Festlegen der Größe des Sendepuffers (in Byte) des <see cref="T:System.Net.Sockets.Socket" />, der für Multicastsendevorgänge in dieser <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" />-Instanz verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="60458-235">Gets or sets the size, in bytes, of the send buffer of the <see cref="T:System.Net.Sockets.Socket" /> used for multicast send operations on this <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> instance.</span></span></summary>
        <value><span data-ttu-id="60458-236">Gibt <see cref="T:System.Int32" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="60458-236">Returns <see cref="T:System.Int32" />.</span></span>  
  
<span data-ttu-id="60458-237">Die Größe des Sendepuffers in Byte.</span><span class="sxs-lookup"><span data-stu-id="60458-237">The size, in bytes, of the send buffer.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="60458-238">Die SendBufferSize-Eigenschaft ruft die Größe des Sendepuffers des zugrunde liegenden <xref:System.Net.Sockets.Socket>, der für Multicast Sende Vorgänge in dieser <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> Instanz verwendet wird, in Bytes ab oder legt Sie fest.</span><span class="sxs-lookup"><span data-stu-id="60458-238">The SendBufferSize property gets or sets the size, in bytes, of the send buffer of the underlying <xref:System.Net.Sockets.Socket> used for multicast send operations on this <xref:System.Net.Sockets.UdpSingleSourceMulticastClient> instance.</span></span>  
  
 <span data-ttu-id="60458-239">Auf Mac OS X steuert die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A>-Eigenschaft, wie viele Bytes im Warteschlange-Puffer des Netzwerk Stapels liegen können, bevor weitere Aufrufe der <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>-Methode fehlschlagen.</span><span class="sxs-lookup"><span data-stu-id="60458-239">On Mac OS X, the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property controls how many bytes can be in the network stack's waiting-to-be-sent buffer before additional calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method start failing.</span></span> <span data-ttu-id="60458-240">Anwendungen auf Mac OS X müssen möglicherweise diese Eigenschaft betreffen, wenn Sie in kurzer Zeit eine große Anzahl von UDP-Paketen senden.</span><span class="sxs-lookup"><span data-stu-id="60458-240">Applications on Mac OS X may need to be concerned with this property if they are sending a large number of UDP packets in a short timeframe.</span></span>  
  
 <span data-ttu-id="60458-241">Unter Windows dauert es länger, bis Aufrufe der <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A>-Methode den Rückruf aufrufen, abhängig vom Wert der <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A>-Eigenschaft, wenn der Sendepuffer voll ist.</span><span class="sxs-lookup"><span data-stu-id="60458-241">On Windows, calls to the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.BeginSendToSource%2A> method will take longer to call the callback depending on the value of the <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property if the send buffer is full.</span></span> <span data-ttu-id="60458-242">Die <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A>-Eigenschaft steuert nur, ob der Puffer des Benutzers im physischen Speicher gesperrt bleibt, bis der Sendevorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="60458-242">The <xref:System.Net.Sockets.UdpSingleSourceMulticastClient.SendBufferSize%2A> property only controls whether the user's buffer stays locked in physical memory until the send completes.</span></span>  
  
 <span data-ttu-id="60458-243">Die Standardgröße des Sendepuffers unter Windows ist 8.192.</span><span class="sxs-lookup"><span data-stu-id="60458-243">The default size of the send buffer on Windows is 8,192.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="60458-244">Die angegebene Puffergröße ist kleiner als 0.</span><span class="sxs-lookup"><span data-stu-id="60458-244">The buffer size specified is less than 0.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="60458-245">Die Multicastgruppe wurde noch nicht zusammengeführt.</span><span class="sxs-lookup"><span data-stu-id="60458-245">The multicast group has not yet been joined.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="60458-246"><see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="60458-246">The <see cref="T:System.Net.Sockets.UdpSingleSourceMulticastClient" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
