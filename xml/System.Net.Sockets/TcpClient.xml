<Type Name="TcpClient" FullName="System.Net.Sockets.TcpClient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="86461a9f6a0a0d2013628669e699f38abe7dc082" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37644133" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TcpClient : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpClient extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpClient" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpClient&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpClient : IDisposable" />
  <TypeSignature Language="F#" Value="type TcpClient = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="62aef-101">Provides client connections for TCP network services.</span>
      <span class="sxs-lookup">
        <span data-stu-id="62aef-101">Provides client connections for TCP network services.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-102">Die <xref:System.Net.Sockets.TcpClient> Klasse bietet einfache Methoden zum Herstellen einer Verbindung, senden und empfangen Streamen von Daten über ein Netzwerk im synchronen, blockierenden Modus befindet.</span><span class="sxs-lookup"><span data-stu-id="62aef-102">The <xref:System.Net.Sockets.TcpClient> class provides simple methods for connecting, sending, and receiving stream data over a network in synchronous blocking mode.</span></span>  
  
 <span data-ttu-id="62aef-103">In der Reihenfolge für <xref:System.Net.Sockets.TcpClient> eine Verbindung herstellen und den Austausch von Daten, eine <xref:System.Net.Sockets.TcpListener> oder <xref:System.Net.Sockets.Socket> erstellt, mit dem TCP <xref:System.Net.Sockets.ProtocolType> für eingehende verbindungsanforderungen überwacht werden müssen.</span><span class="sxs-lookup"><span data-stu-id="62aef-103">In order for <xref:System.Net.Sockets.TcpClient> to connect and exchange data, a <xref:System.Net.Sockets.TcpListener> or <xref:System.Net.Sockets.Socket> created with the TCP <xref:System.Net.Sockets.ProtocolType> must be listening for incoming connection requests.</span></span> <span data-ttu-id="62aef-104">Sie können in einem der beiden folgenden Methoden an diesen Listener verbinden:</span><span class="sxs-lookup"><span data-stu-id="62aef-104">You can connect to this listener in one of the following two ways:</span></span>  
  
-   <span data-ttu-id="62aef-105">Erstellen Sie eine <xref:System.Net.Sockets.TcpClient> und rufen Sie eine der drei verfügbaren <xref:System.Net.Sockets.TcpClient.Connect%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="62aef-105">Create a <xref:System.Net.Sockets.TcpClient> and call one of the three available <xref:System.Net.Sockets.TcpClient.Connect%2A> methods.</span></span>  
  
-   <span data-ttu-id="62aef-106">Erstellen Sie eine <xref:System.Net.Sockets.TcpClient> unter Verwendung des Hostnamens und die Portnummer des Remotehosts.</span><span class="sxs-lookup"><span data-stu-id="62aef-106">Create a <xref:System.Net.Sockets.TcpClient> using the host name and port number of the remote host.</span></span> <span data-ttu-id="62aef-107">Dieser Konstruktor wird automatisch eine Verbindung herzustellen.</span><span class="sxs-lookup"><span data-stu-id="62aef-107">This constructor will automatically attempt a connection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-108">Wenn Sie in den synchronen, blockierenden Modus verbindungslose Datagramme senden möchten, verwenden Sie die <xref:System.Net.Sockets.UdpClient> Klasse.</span><span class="sxs-lookup"><span data-stu-id="62aef-108">If you want to send connectionless datagrams in synchronous blocking mode, use the <xref:System.Net.Sockets.UdpClient> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-109">Im folgenden Codebeispiel wird eine <xref:System.Net.Sockets.TcpClient> Verbindung.</span><span class="sxs-lookup"><span data-stu-id="62aef-109">The following code example establishes a <xref:System.Net.Sockets.TcpClient> connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CPP/tcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/CS/tcpclient.cs#1)]
 [!code-vb[System.Net.Sockets.TcpClient#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpClient/VB/tcpclient.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Net.SocketPermission">
      <span data-ttu-id="62aef-110">Berechtigung für eine ausgehende Verbindung herzustellen, oder übernehmen Sie eine eingehende Anforderung.</span>
      <span class="sxs-lookup">
        <span data-stu-id="62aef-110">Permission to establish an outgoing connection or accept an incoming request.</span>
      </span>
    </permission>
    <block subset="none" type="overrides">
      <span data-ttu-id="62aef-111">
        <para>Verwenden Sie zum Senden und Empfangen von Daten, die <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> Methode zum Abrufen einer <see cref="T:System.Net.Sockets.NetworkStream" />. Rufen Sie die <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> und <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> Methoden der <see cref="T:System.Net.Sockets.NetworkStream" /> zum Senden und Empfangen von Daten mit dem Remotehost. Verwenden der <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> Methode, um alle zugeordneten Ressourcen freizugeben. die <see cref="T:System.Net.Sockets.TcpClient" />.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="62aef-111">
          <para>To send and receive data, use the <see cref="M:System.Net.Sockets.TcpClient.GetStream" /> method to obtain a <see cref="T:System.Net.Sockets.NetworkStream" />. Call the <see cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" /> and <see cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" /> methods of the <see cref="T:System.Net.Sockets.NetworkStream" /> to send and receive data with the remote host. Use the <see cref="M:System.Net.Sockets.NetworkStream.Close(System.Int32)" /> method to release all resources associated with the <see cref="T:System.Net.Sockets.TcpClient" />.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Net.Sockets.TcpListener" />
    <altmember cref="T:System.Net.Sockets.NetworkStream" />
    <altmember cref="T:System.Net.Sockets.Socket" />
    <altmember cref="T:System.Net.Sockets.ProtocolType" />
    <altmember cref="T:System.Net.IPEndPoint" />
    <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
    <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-112">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-112">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62aef-113">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-113">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-114">Dieser Konstruktor erstellt ein neues <xref:System.Net.Sockets.TcpClient> und ermöglicht es dem zugrunde liegenden Dienstanbieter, der am besten geeignete lokale IP-Adresse und den Port zu.</span><span class="sxs-lookup"><span data-stu-id="62aef-114">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and allows the underlying service provider to assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="62aef-115">Sie müssen zuerst Aufrufen der <xref:System.Net.Sockets.TcpClient.Connect%2A> Methode vor dem Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="62aef-115">You must first call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-116">Dieser Konstruktor kann nur mit IPv4-Adresstypen an.</span><span class="sxs-lookup"><span data-stu-id="62aef-116">This constructor works only with IPv4 address types.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-117">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-117">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-118">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-118">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-119">Im folgenden Codebeispiel wird veranschaulicht, wie Sie den Standardkonstruktor verwenden, zum Erstellen eines neuen <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="62aef-119">The following code example demonstrates how to use the default constructor to create a new <xref:System.Net.Sockets.TcpClient>.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP">
          <span data-ttu-id="62aef-120">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-120">The <see cref="T:System.Net.IPEndPoint" /> to which you bind the TCP <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-121">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and binds it to the specified local endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-122">Dieser Konstruktor erstellt ein neues <xref:System.Net.Sockets.TcpClient> und bindet sie an der <xref:System.Net.IPEndPoint> gemäß der `localEP` Parameter.</span><span class="sxs-lookup"><span data-stu-id="62aef-122">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and binds it to the <xref:System.Net.IPEndPoint> specified by the `localEP` parameter.</span></span> <span data-ttu-id="62aef-123">Bevor Sie diesen Konstruktor aufrufen, müssen Sie erstellen eine <xref:System.Net.IPEndPoint> mithilfe der IP-Adresse und den Port aus dem Sie Daten senden und empfangen möchten.</span><span class="sxs-lookup"><span data-stu-id="62aef-123">Before you call this constructor, you must create an <xref:System.Net.IPEndPoint> using the IP address and port number from which you intend to send and receive data.</span></span> <span data-ttu-id="62aef-124">Sie müssen sich nicht um eine lokale IP-Adresse und Port-Nummer angeben, vor dem Herstellen einer Verbindung und Kommunikation.</span><span class="sxs-lookup"><span data-stu-id="62aef-124">You do not need to specify a local IP address and port number before connecting and communicating.</span></span> <span data-ttu-id="62aef-125">Bei der Erstellung einer <xref:System.Net.Sockets.TcpClient> durch einen anderen Konstruktor, der zugrunde liegenden Dienstanbieter weist am besten geeignete lokale IP-Adresse und den Port an.</span><span class="sxs-lookup"><span data-stu-id="62aef-125">If you create a <xref:System.Net.Sockets.TcpClient> using any other constructor, the underlying service provider will assign the most appropriate local IP address and port number.</span></span>  
  
 <span data-ttu-id="62aef-126">Rufen Sie die <xref:System.Net.Sockets.TcpClient.Connect%2A> Methode vor dem Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="62aef-126">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method before sending and receiving data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-127">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-127">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-128">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-128">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-129">Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer Instanz von der <xref:System.Net.Sockets.TcpClient> -Klasse mit einem lokalen Endpunkt an.</span><span class="sxs-lookup"><span data-stu-id="62aef-129">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a local endpoint.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-130">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-130">The  <paramref name="localEP" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (System.Net.Sockets.AddressFamily family);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Net.Sockets.AddressFamily family) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.Net.Sockets.AddressFamily)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (family As AddressFamily)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::Net::Sockets::AddressFamily family);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : System.Net.Sockets.AddressFamily -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient family" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="family" Type="System.Net.Sockets.AddressFamily" />
      </Parameters>
      <Docs>
        <param name="family">
          <span data-ttu-id="62aef-131">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-131">The <see cref="P:System.Net.IPAddress.AddressFamily" /> of the IP protocol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-132">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class with the specified family.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="62aef-133">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-133">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-134">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-134">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-135">Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer Instanz von der <xref:System.Net.Sockets.TcpClient> Klasse.</span><span class="sxs-lookup"><span data-stu-id="62aef-135">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#15)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#15)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#15](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="62aef-136">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork  -or-  The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-136">The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetwork  -or-  The <paramref name="family" /> parameter is not equal to AddressFamily.InterNetworkV6</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpClient (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpClient(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpClient : string * int -&gt; System.Net.Sockets.TcpClient" Usage="new System.Net.Sockets.TcpClient (hostname, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="62aef-137">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-137">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="62aef-138">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-138">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-139">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-139">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient" /> class and connects to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-140">Dieser Konstruktor erstellt ein neues <xref:System.Net.Sockets.TcpClient> und eine synchrone Verbindung versucht, dem angegebenen Hostnamen und die Portnummer.</span><span class="sxs-lookup"><span data-stu-id="62aef-140">This constructor creates a new <xref:System.Net.Sockets.TcpClient> and makes a synchronous connection attempt to the provided host name and port number.</span></span> <span data-ttu-id="62aef-141">Der zugrunde liegenden Dienstanbieter weist am besten geeignete lokale IP-Adresse und den Port an.</span><span class="sxs-lookup"><span data-stu-id="62aef-141">The underlying service provider will assign the most appropriate local IP address and port number.</span></span> <span data-ttu-id="62aef-142"><xref:System.Net.Sockets.TcpClient> blockiert, bis sie eine Verbindung herstellt oder ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="62aef-142"><xref:System.Net.Sockets.TcpClient> will block until it either connects or fails.</span></span> <span data-ttu-id="62aef-143">Dieser Konstruktor können Sie initialisiert werden, beheben den DNS-Hostnamen und Herstellen einer Verbindung in einem einfachen Schritt.</span><span class="sxs-lookup"><span data-stu-id="62aef-143">This constructor allows you to initialize, resolve the DNS host name, and connect in one convenient step.</span></span>  
  
 <span data-ttu-id="62aef-144">Wenn IPv6 aktiviert ist und die <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> Methode wird aufgerufen, um eine Verbindung zu einem Host herzustellen, die sowohl in IPv6 aufgelöst wird und IPv4-Adressen, die Verbindung mit der IPv6-Adresse versucht zuerst, bevor Sie die IPv4-Adresse.</span><span class="sxs-lookup"><span data-stu-id="62aef-144">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="62aef-145">Dies möglicherweise die Auswirkungen der verzögern der Zeit zum Herstellen der Verbindung, wenn der Host nicht an die IPv6-Adresse lauscht.</span><span class="sxs-lookup"><span data-stu-id="62aef-145">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-146">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="62aef-146">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="62aef-147">Nachdem Sie diesen Code abgerufen haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="62aef-147">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-148">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-148">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-149">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-149">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-150">Im folgenden Codebeispiel wird veranschaulicht, wie zum Erstellen einer Instanz von der <xref:System.Net.Sockets.TcpClient> -Klasse unter Verwendung eines Hostnamens und die Portnummer.</span><span class="sxs-lookup"><span data-stu-id="62aef-150">The following code example demonstrates how to create an instance of the <xref:System.Net.Sockets.TcpClient> class using a host name and port number.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-151">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-151">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62aef-152">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-152">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-153">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-153">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Net.Sockets.TcpClient.#ctor" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Active" />
      <MemberSignature Language="VB.NET" Value="Protected Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool with get, set" Usage="System.Net.Sockets.TcpClient.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-154">Gets or set a value that indicates whether a connection has been made.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-154">Gets or set a value that indicates whether a connection has been made.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62aef-155">
            <see langword="true" />, wenn die Verbindung hergestellt wurde, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-155">
              <see langword="true" /> if the connection has been made; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-156">Abgeleitete Klassen von <xref:System.Net.Sockets.TcpClient> können diese Eigenschaft verwenden, um festzustellen, ob ein Verbindungsversuch erfolgreich war.</span><span class="sxs-lookup"><span data-stu-id="62aef-156">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to determine if a connection attempt has succeeded.</span></span> <span data-ttu-id="62aef-157">Es überwacht nicht den aktuellen Verbindungsstatus der <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="62aef-157">It does not monitor the ongoing connection state of <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="62aef-158">Wenn der Remotehost die Verbindung schließt <xref:System.Net.Sockets.TcpClient.Active%2A> wird nicht aktualisiert werden.</span><span class="sxs-lookup"><span data-stu-id="62aef-158">If the remote host closes the connection, <xref:System.Net.Sockets.TcpClient.Active%2A> will not be updated.</span></span> <span data-ttu-id="62aef-159">Wenn beim Ableiten von <xref:System.Net.Sockets.TcpClient> und erfordert mehr Aufmerksamkeit auf den Verbindungszustand, verwenden die <xref:System.Net.Sockets.Socket.Connected%2A> Eigenschaft der <xref:System.Net.Sockets.Socket> zurückgegebenes der <xref:System.Net.Sockets.TcpClient.Client%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-159">If you are deriving from <xref:System.Net.Sockets.TcpClient> and require closer attention to the connection state, use the <xref:System.Net.Sockets.Socket.Connected%2A> property of the <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpClient.Client%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.Socket.Connected" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Available">
      <MemberSignature Language="C#" Value="public int Available { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Available" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Available" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Available As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Available { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Available : int" Usage="System.Net.Sockets.TcpClient.Available" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-160">Gets the amount of data that has been received from the network and is available to be read.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-160">Gets the amount of data that has been received from the network and is available to be read.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62aef-161">Die Anzahl der Datenbytes, die vom Netzwerk empfangen wurden und zum Lesen zur Verfügung stehen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-161">The number of bytes of data received from the network and available to be read.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-162"><xref:System.Net.Sockets.TcpClient.Available%2A> ist eine Möglichkeit zu bestimmen, ob die Daten für das Lesen in der Warteschlange befindet.</span><span class="sxs-lookup"><span data-stu-id="62aef-162"><xref:System.Net.Sockets.TcpClient.Available%2A> is a way to determine whether data is queued for reading.</span></span> <span data-ttu-id="62aef-163">Wenn Daten verfügbar sind, rufen Sie <xref:System.Net.Sockets.NetworkStream.Read%2A> zum Abrufen der Daten.</span><span class="sxs-lookup"><span data-stu-id="62aef-163">If data is available, call <xref:System.Net.Sockets.NetworkStream.Read%2A> to get the data.</span></span> <span data-ttu-id="62aef-164">Die verfügbaren Daten ist, dass die Gesamtmenge der Daten im Netzwerkpuffer zum Lesen in die Warteschlange eingereiht.</span><span class="sxs-lookup"><span data-stu-id="62aef-164">The available data is the total amount of data queued in the network buffer for reading.</span></span> <span data-ttu-id="62aef-165">Wenn keine Daten im Netzwerkpuffer, in der Warteschlange ist <xref:System.Net.Sockets.TcpClient.Available%2A> gibt 0 zurück.</span><span class="sxs-lookup"><span data-stu-id="62aef-165">If no data is queued in the network buffer, <xref:System.Net.Sockets.TcpClient.Available%2A> returns 0.</span></span>  
  
 <span data-ttu-id="62aef-166">Wenn der remote-Host beendet wird oder die Verbindung schließt, <xref:System.Net.Sockets.TcpClient.Available%2A> Auslösen einer <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="62aef-166">If the remote host shuts down or closes the connection, <xref:System.Net.Sockets.TcpClient.Available%2A> may throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="62aef-167">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="62aef-167">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="62aef-168">Nachdem Sie diesen Code abgerufen haben, sehen Sie sich die Windows Sockets-Version 2 zur API in der MSDN Library unter [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="62aef-168">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-169">Das folgende Codebeispiel zeigt die Verwendung der <xref:System.Net.Sockets.TcpClient.Available%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="62aef-169">The following code example shows the use of the <xref:System.Net.Sockets.TcpClient.Available%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpClient1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-170">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-170">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-171">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-171">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginConnect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-172">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-172">Begins an asynchronous request for a remote host connection.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress address, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress address, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (address As IPAddress, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::Net::IPAddress ^ address, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (address, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="62aef-173">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-173">The <see cref="T:System.Net.IPAddress" /> of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="62aef-174">The port number of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-174">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="62aef-175">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-175">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="62aef-176">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-176">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="62aef-177">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-177">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-178">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-178">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="62aef-179">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-179">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62aef-180">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-180">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-181">Die asynchrone <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> Vorgang muss abgeschlossen sein, durch den Aufruf der <xref:System.Net.Sockets.TcpClient.EndConnect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-181">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="62aef-182">In der Regel wird die Methode aufgerufen, indem die `asyncCallback` delegieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-182">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="62aef-183">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="62aef-183">This method does not block until the operation completes.</span></span> <span data-ttu-id="62aef-184">Zum Blockieren, bis der Vorgang abgeschlossen ist, gehen die <xref:System.Net.Sockets.TcpClient.Connect%2A> Überladungen der Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-184">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="62aef-185">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-185">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-186">Das folgende Codebeispiel erstellt eine <xref:System.Net.Sockets.TcpClient> und eine Verbindung mit einem Remotehost her.</span><span class="sxs-lookup"><span data-stu-id="62aef-186">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpClient1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-187">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-187">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-188">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-188">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-189">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-189">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="62aef-190">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-190">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62aef-191">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-191">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (System.Net.IPAddress[] addresses, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(class System.Net.IPAddress[] addresses, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.Net.IPAddress[],System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (addresses As IPAddress(), port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : System.Net.IPAddress[] * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (addresses, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="62aef-192">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-192">At least one <see cref="T:System.Net.IPAddress" /> that designates the remote hosts.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="62aef-193">The port number of the remote hosts.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-193">The port number of the remote hosts.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="62aef-194">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-194">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="62aef-195">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-195">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="62aef-196">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-196">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-197">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-197">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="62aef-198">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-198">The remote host is specified by an <see cref="T:System.Net.IPAddress" /> array and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62aef-199">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-199">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-200">Die asynchrone <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> Vorgang muss abgeschlossen sein, durch den Aufruf der <xref:System.Net.Sockets.TcpClient.EndConnect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-200">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="62aef-201">In der Regel wird die Methode aufgerufen, indem die `asyncCallback` delegieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-201">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="62aef-202">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="62aef-202">This method does not block until the operation completes.</span></span> <span data-ttu-id="62aef-203">Zum Blockieren, bis der Vorgang abgeschlossen ist, gehen die <xref:System.Net.Sockets.TcpClient.Connect%2A> Überladungen der Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-203">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="62aef-204">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-204">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
 <span data-ttu-id="62aef-205">Diese Methode wird unmittelbar nach einem Aufruf in der Regel verwendet der <xref:System.Net.Dns.BeginGetHostAddresses%2A> -Methode, die mehrere IP-Adressen für einen einzelnen Host zurückgegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="62aef-205">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-206">Das folgende Codebeispiel erstellt eine <xref:System.Net.Sockets.TcpClient> und eine Verbindung mit einem Remotehost her.</span><span class="sxs-lookup"><span data-stu-id="62aef-206">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpClient1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-207">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-207">The <paramref name="addresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-208">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-208">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-209">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-209">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="62aef-210">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-210">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62aef-211">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-211">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BeginConnect">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginConnect (string host, int port, AsyncCallback requestCallback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginConnect(string host, int32 port, class System.AsyncCallback requestCallback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.BeginConnect(System.String,System.Int32,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginConnect (host As String, port As Integer, requestCallback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginConnect(System::String ^ host, int port, AsyncCallback ^ requestCallback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginConnect : string * int * AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpClient.BeginConnect (host, port, requestCallback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
        <Parameter Name="requestCallback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="62aef-212">The name of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-212">The name of the remote host.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="62aef-213">The port number of the remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-213">The port number of the remote host.</span>
          </span>
        </param>
        <param name="requestCallback">
          <span data-ttu-id="62aef-214">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-214">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="62aef-215">A user-defined object that contains information about the connect operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-215">A user-defined object that contains information about the connect operation.</span>
          </span>
          <span data-ttu-id="62aef-216">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-216">This object is passed to the <c>requestCallback</c> delegate when the operation is complete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-217">Begins an asynchronous request for a remote host connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-217">Begins an asynchronous request for a remote host connection.</span>
          </span>
          <span data-ttu-id="62aef-218">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-218">The remote host is specified by a host name (<see cref="T:System.String" />) and a port number (<see cref="T:System.Int32" />).</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62aef-219">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-219">An <see cref="T:System.IAsyncResult" /> object that references the asynchronous connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-220">Die asynchrone <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> Vorgang muss abgeschlossen sein, durch den Aufruf der <xref:System.Net.Sockets.TcpClient.EndConnect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-220">The asynchronous <xref:System.Net.Sockets.TcpClient.BeginConnect%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpClient.EndConnect%2A> method.</span></span> <span data-ttu-id="62aef-221">In der Regel wird die Methode aufgerufen, indem die `asyncCallback` delegieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-221">Typically, the method is invoked by the `asyncCallback` delegate.</span></span>  
  
 <span data-ttu-id="62aef-222">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="62aef-222">This method does not block until the operation completes.</span></span> <span data-ttu-id="62aef-223">Zum Blockieren, bis der Vorgang abgeschlossen ist, gehen die <xref:System.Net.Sockets.TcpClient.Connect%2A> Überladungen der Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-223">To block until the operation completes, use one of the <xref:System.Net.Sockets.TcpClient.Connect%2A> method overloads.</span></span>  
  
 <span data-ttu-id="62aef-224">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-224">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](~/docs/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-225">Das folgende Codebeispiel erstellt eine <xref:System.Net.Sockets.TcpClient> und eine Verbindung mit einem Remotehost her.</span><span class="sxs-lookup"><span data-stu-id="62aef-225">The following code example creates a <xref:System.Net.Sockets.TcpClient> and connects to a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#6)]
 [!code-csharp[System.Net.Sockets.TcpClient1#6](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-226">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-226">The <paramref name="host" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-227">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-227">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-228">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-228">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="62aef-229">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-229">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62aef-230">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-230">The port number is not valid.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Client">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Client { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Client" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Client" />
      <MemberSignature Language="VB.NET" Value="Public Property Client As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Client { System::Net::Sockets::Socket ^ get(); void set(System::Net::Sockets::Socket ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Client : System.Net.Sockets.Socket with get, set" Usage="System.Net.Sockets.TcpClient.Client" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-231">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-231">Gets or sets the underlying <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62aef-232">Der zugrundeliegende Netzwerk-<see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-232">The underlying network <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-233"><xref:System.Net.Sockets.TcpClient> erstellt eine <xref:System.Net.Sockets.Socket> zum Senden und Empfangen von Daten über ein Netzwerk.</span><span class="sxs-lookup"><span data-stu-id="62aef-233"><xref:System.Net.Sockets.TcpClient> creates a <xref:System.Net.Sockets.Socket> to send and receive data over a network.</span></span> <span data-ttu-id="62aef-234">Abgeleitete Klassen von <xref:System.Net.Sockets.TcpClient> können diese Eigenschaft zum Abrufen oder festlegen, dies <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="62aef-234">Classes deriving from <xref:System.Net.Sockets.TcpClient> can use this property to get or set this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="62aef-235">Verwenden Sie das zugrunde liegende <xref:System.Net.Sockets.Socket> Merry <xref:System.Net.Sockets.TcpClient.Client%2A> Wenn gewünscht, zugreifen, darüber hinaus die <xref:System.Net.Sockets.TcpClient> enthält.</span><span class="sxs-lookup"><span data-stu-id="62aef-235">Use the underlying <xref:System.Net.Sockets.Socket> returned from <xref:System.Net.Sockets.TcpClient.Client%2A> if you require access beyond that which <xref:System.Net.Sockets.TcpClient> provides.</span></span> <span data-ttu-id="62aef-236">Sie können auch <xref:System.Net.Sockets.TcpClient.Client%2A> , legen Sie die zugrunde liegende <xref:System.Net.Sockets.Socket> zu einem vorhandenen <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="62aef-236">You can also use <xref:System.Net.Sockets.TcpClient.Client%2A> to set the underlying <xref:System.Net.Sockets.Socket> to an existing <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="62aef-237">Dies ist möglicherweise hilfreich, wenn Sie die Einfachheit der nutzen möchten <xref:System.Net.Sockets.TcpClient> mit einem bereits vorhandenen <xref:System.Net.Sockets.Socket>.</span><span class="sxs-lookup"><span data-stu-id="62aef-237">This might be useful if you want to take advantage of the simplicity of <xref:System.Net.Sockets.TcpClient> using a pre-existing <xref:System.Net.Sockets.Socket>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-238">Im folgenden Codebeispiel wird die Verwendung des <xref:System.Net.Sockets.TcpClient.Client%2A>-Attributs veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="62aef-238">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpClient.Client%2A> property.</span></span> <span data-ttu-id="62aef-239">In diesem Beispiel ist die Größe des Empfangspuffers des zugrunde liegenden <xref:System.Net.Sockets.Socket> geändert wird.</span><span class="sxs-lookup"><span data-stu-id="62aef-239">In this example, the receive buffer size of the underlying <xref:System.Net.Sockets.Socket> is changed.</span></span>  
  
 [!code-csharp[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[TcpClientProtectedMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpClientProtectedMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Close" />
      <MemberSignature Language="VB.NET" Value="Public Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Close();" />
      <MemberSignature Language="F#" Value="member this.Close : unit -&gt; unit" Usage="tcpClient.Close " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62aef-240">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-240">Disposes this <see cref="T:System.Net.Sockets.TcpClient" /> instance and requests that the underlying TCP connection be closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-241">Die <xref:System.Net.Sockets.TcpClient.Close%2A> Methode kennzeichnet die Instanz als verworfen, und fordert an, dass die zugeordnete <xref:System.Net.Sockets.Socket> die TCP-Verbindung zu schließen.</span><span class="sxs-lookup"><span data-stu-id="62aef-241">The <xref:System.Net.Sockets.TcpClient.Close%2A> method marks the instance as disposed and requests that the associated <xref:System.Net.Sockets.Socket> close the TCP connection.</span></span> <span data-ttu-id="62aef-242">Auf der Grundlage der <xref:System.Net.Sockets.TcpClient.LingerState%2A> -Eigenschaft, die TCP-Verbindung möglicherweise geöffnet bleiben für einige Zeit nach der <xref:System.Net.Sockets.TcpClient.Close%2A> Methode wird aufgerufen, wenn die Daten verbleiben, gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="62aef-242">Based on the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property, the TCP connection may stay open for some time after the <xref:System.Net.Sockets.TcpClient.Close%2A> method is called when data remains to be sent.</span></span> <span data-ttu-id="62aef-243">Erfolgt keine Benachrichtigung bereitgestellt werden, wenn die zugrunde liegende Verbindung schließen abgeschlossen wurde.</span><span class="sxs-lookup"><span data-stu-id="62aef-243">There is no notification provided when the underlying connection has completed closing.</span></span>  
  
 <span data-ttu-id="62aef-244">Das Aufrufen dieser Methode wird zum Schließen des zugeordneten <xref:System.Net.Sockets.Socket> und wird auch die zugeordnete schließen <xref:System.Net.Sockets.NetworkStream> dient zum Senden und Empfangen von Daten, sofern eine solche erstellt wurde.</span><span class="sxs-lookup"><span data-stu-id="62aef-244">Calling this method will eventually result in the close of the associated <xref:System.Net.Sockets.Socket> and will also close the associated <xref:System.Net.Sockets.NetworkStream> that is used to send and receive data if one was created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-245">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-245">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-246">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-246">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-247">Das folgende Codebeispiel zeigt schließende eine <xref:System.Net.Sockets.TcpClient> durch Aufrufen der <xref:System.Net.Sockets.TcpClient.Close%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-247">The following code example demonstrates closing a <xref:System.Net.Sockets.TcpClient> by calling the <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span>  
  
 [!code-cpp[NCLTCPClientSync#1](~/samples/snippets/cpp/VS_Snippets_Remoting/NCLTcpClientSync/CPP/tcpclient.cpp#1)]
 [!code-csharp[NCLTCPClientSync#1](~/samples/snippets/csharp/VS_Snippets_Remoting/NCLTcpClientSync/CS/tcpclient.cs#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Connect">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-248">Connects the client to a remote TCP host using the specified host name and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-248">Connects the client to a remote TCP host using the specified host name and port number.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPEndPoint remoteEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPEndPoint remoteEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (remoteEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPEndPoint ^ remoteEP);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPEndPoint -&gt; unit" Usage="tcpClient.Connect remoteEP" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="remoteEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="remoteEP">
          <span data-ttu-id="62aef-249">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-249">The <see cref="T:System.Net.IPEndPoint" /> to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-250">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-250">Connects the client to a remote TCP host using the specified remote network endpoint.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-251">Rufen Sie diese Methode zum Herstellen einer Verbindung synchrone Remotehost mit dem angegebenen <xref:System.Net.IPEndPoint>.</span><span class="sxs-lookup"><span data-stu-id="62aef-251">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="62aef-252">Vor dem Aufruf <xref:System.Net.Sockets.TcpClient.Connect%2A> müssen Sie eine Instanz des erstellen die <xref:System.Net.IPEndPoint> -Klasse unter Verwendung einer IP-Adresse und eine Portnummer an.</span><span class="sxs-lookup"><span data-stu-id="62aef-252">Before you call <xref:System.Net.Sockets.TcpClient.Connect%2A> you must create an instance of the <xref:System.Net.IPEndPoint> class using an IP address and a port number.</span></span> <span data-ttu-id="62aef-253">Verwenden Sie diese Option <xref:System.Net.IPEndPoint> als die `remoteEP` Parameter.</span><span class="sxs-lookup"><span data-stu-id="62aef-253">Use this <xref:System.Net.IPEndPoint> as the `remoteEP` parameter.</span></span> <span data-ttu-id="62aef-254">Die <xref:System.Net.Sockets.TcpClient.Connect%2A> Methode blockiert, bis sie eine Verbindung herstellt oder ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="62aef-254">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="62aef-255">Verwenden Sie nach dem Herstellen einer Verbindung mit dem Remotehost, der <xref:System.Net.Sockets.TcpClient.GetStream%2A> Methode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="62aef-255">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="62aef-256">Verwenden Sie diese Option <xref:System.Net.Sockets.NetworkStream> zum Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="62aef-256">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-257">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="62aef-257">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="62aef-258">Nachdem Sie diesen Code abgerufen haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="62aef-258">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-259">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-259">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-260">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span><span class="sxs-lookup"><span data-stu-id="62aef-260">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-261">Im folgenden Codebeispiel wird ein <xref:System.Net.IPEndPoint> für die Verbindung mit einem Remotehost.</span><span class="sxs-lookup"><span data-stu-id="62aef-261">The following code example uses an <xref:System.Net.IPEndPoint> to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#7)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#7)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#7](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-262">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-262">The <paramref name="remoteEp" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-263">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-263">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-264">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-264">The <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (address As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress * int -&gt; unit" Usage="tcpClient.Connect (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="62aef-265">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-265">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="62aef-266">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-266">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-267">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-267">Connects the client to a remote TCP host using the specified IP address and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-268">Rufen Sie diese Methode zum Herstellen einer Verbindung synchrone Remotehost mit dem angegebenen <xref:System.Net.IPAddress> und Portnummer an.</span><span class="sxs-lookup"><span data-stu-id="62aef-268">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number.</span></span> <span data-ttu-id="62aef-269">Die <xref:System.Net.Sockets.TcpClient.Connect%2A> Methode blockiert, bis sie eine Verbindung herstellt oder ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="62aef-269">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="62aef-270">Verwenden Sie nach dem Herstellen einer Verbindung mit dem Remotehost, der <xref:System.Net.Sockets.TcpClient.GetStream%2A> Methode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="62aef-270">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="62aef-271">Verwenden Sie diese Option <xref:System.Net.Sockets.NetworkStream> zum Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="62aef-271">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-272">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="62aef-272">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="62aef-273">Nachdem Sie diesen Code abgerufen haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="62aef-273">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-274">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-274">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-275">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-275">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-276">Das folgende Codebeispiel verwendet eine IP-Adresse und Portnummer für die Verbindung mit einem Remotehost.</span><span class="sxs-lookup"><span data-stu-id="62aef-276">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#6)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#6)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#6](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-277">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-277">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62aef-278">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-278">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-279">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-279">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-280">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-280">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (System.Net.IPAddress[] ipAddresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(class System.Net.IPAddress[] ipAddresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (ipAddresses As IPAddress(), port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(cli::array &lt;System::Net::IPAddress ^&gt; ^ ipAddresses, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : System.Net.IPAddress[] * int -&gt; unit" Usage="tcpClient.Connect (ipAddresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ipAddresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="ipAddresses">
          <span data-ttu-id="62aef-281">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-281">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="62aef-282">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-282">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-283">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-283">Connects the client to a remote TCP host using the specified IP addresses and port number.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-284">Diese Methode wird unmittelbar nach einem Aufruf in der Regel verwendet der <xref:System.Net.Dns.BeginGetHostAddresses%2A> -Methode, die mehrere IP-Adressen für einen einzelnen Host zurückgegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="62aef-284">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="62aef-285">Rufen Sie die <xref:System.Net.Sockets.TcpClient.Connect%2A> Methode zum Herstellen einer Verbindung synchrone Remotehosts, an den Host, der durch das Array des angegebenen <xref:System.Net.IPAddress> Elemente und die Portnummer an.</span><span class="sxs-lookup"><span data-stu-id="62aef-285">Call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number.</span></span> <span data-ttu-id="62aef-286">Die <xref:System.Net.Sockets.TcpClient.Connect%2A> Methode blockiert, bis sie eine Verbindung herstellt oder ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="62aef-286">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="62aef-287">Verwenden Sie nach dem Herstellen einer Verbindung mit dem Remotehost, der <xref:System.Net.Sockets.TcpClient.GetStream%2A> Methode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="62aef-287">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="62aef-288">Verwenden Sie diese Option <xref:System.Net.Sockets.NetworkStream> zum Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="62aef-288">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-289">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="62aef-289">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="62aef-290">Nachdem Sie diesen Code abgerufen haben, sehen Sie sich die Windows Sockets-Version 2 zur API in der MSDN Library unter [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="62aef-290">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-291">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-291">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-292">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-292">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-293">Das folgende Codebeispiel verwendet eine IP-Adresse und Portnummer für die Verbindung mit einem Remotehost.</span><span class="sxs-lookup"><span data-stu-id="62aef-293">The following code example uses an IP Address and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#8)]
 [!code-csharp[System.Net.Sockets.TcpClient1#8](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-294">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-294">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62aef-295">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-295">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-296">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-296">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-297">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-297">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="62aef-298">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-298">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="62aef-299">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-299">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="Connect">
      <MemberSignature Language="C#" Value="public void Connect (string hostname, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Connect(string hostname, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Connect (hostname As String, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Connect(System::String ^ hostname, int port);" />
      <MemberSignature Language="F#" Value="member this.Connect : string * int -&gt; unit" Usage="tcpClient.Connect (hostname, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hostname" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="hostname">
          <span data-ttu-id="62aef-300">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-300">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="62aef-301">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-301">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-302">Connects the client to the specified port on the specified host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-302">Connects the client to the specified port on the specified host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-303">Rufen Sie diese Methode, um eine synchrone Verbindung mit dem angegebenen Hostnamen herzustellen und die Portnummer ein.</span><span class="sxs-lookup"><span data-stu-id="62aef-303">Call this method to establish a synchronous remote host connection to the specified host name and port number.</span></span> <span data-ttu-id="62aef-304">Die <xref:System.Net.Sockets.TcpClient.Connect%2A> Methode blockiert, bis sie eine Verbindung herstellt oder ein Fehler auftritt.</span><span class="sxs-lookup"><span data-stu-id="62aef-304">The <xref:System.Net.Sockets.TcpClient.Connect%2A> method will block until it either connects or fails.</span></span> <span data-ttu-id="62aef-305">Verwenden Sie nach dem Herstellen einer Verbindung mit dem Remotehost, der <xref:System.Net.Sockets.TcpClient.GetStream%2A> Methode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="62aef-305">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="62aef-306">Verwenden Sie diese Option <xref:System.Net.Sockets.NetworkStream> zum Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="62aef-306">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="62aef-307">Wenn IPv6 aktiviert ist und die <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> Methode wird aufgerufen, um eine Verbindung zu einem Host herzustellen, die sowohl in IPv6 aufgelöst wird und IPv4-Adressen, die Verbindung mit der IPv6-Adresse versucht zuerst, bevor Sie die IPv4-Adresse.</span><span class="sxs-lookup"><span data-stu-id="62aef-307">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.Connect%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="62aef-308">Dies möglicherweise die Auswirkungen der verzögern der Zeit zum Herstellen der Verbindung, wenn der Host nicht an die IPv6-Adresse lauscht.</span><span class="sxs-lookup"><span data-stu-id="62aef-308">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-309">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="62aef-309">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="62aef-310">Nachdem Sie diesen Code abgerufen haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="62aef-310">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-311">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-311">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-312">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-312">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-313">Im folgenden Codebeispiel wird mithilfe der Hostnamen und die Portnummer an, für die Verbindung mit einem Remotehost.</span><span class="sxs-lookup"><span data-stu-id="62aef-313">The following code example uses the host name and port number to connect with a remote host.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#5)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#5)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-314">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-314">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62aef-315">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-315">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-316">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-316">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-317">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-317">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ConnectAsync">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-318">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-318">Connects the client to a remote TCP host using the specified host name and port number as an asynchronous operation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress address, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress address, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (address As IPAddress, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::Net::IPAddress ^ address, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (address, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="address" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="address">
          <span data-ttu-id="62aef-319">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-319">The <see cref="T:System.Net.IPAddress" /> of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="62aef-320">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-320">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-321">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-321">Connects the client to a remote TCP host using the specified IP address and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62aef-322">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-322">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-323">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="62aef-323">This operation will not block.</span></span> <span data-ttu-id="62aef-324">Die zurückgegebene gibt <xref:System.Threading.Tasks.Task> Objekt wird abgeschlossen, nachdem die TCP-Verbindung hergestellt wurde.</span><span class="sxs-lookup"><span data-stu-id="62aef-324">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="62aef-325">Diese Methode wird den aufrufenden Thread nicht blockiert, während die verbindungsanforderung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="62aef-325">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="62aef-326">Rufen Sie diese Methode zum Herstellen einer Verbindung synchrone Remotehost mit dem angegebenen <xref:System.Net.IPAddress> und Portnummer als asynchroner Vorgang.</span><span class="sxs-lookup"><span data-stu-id="62aef-326">Call this method to establish a synchronous remote host connection to the specified <xref:System.Net.IPAddress> and port number as an asynchronous operation.</span></span> <span data-ttu-id="62aef-327">Verwenden Sie nach dem Herstellen einer Verbindung mit dem Remotehost, der <xref:System.Net.Sockets.TcpClient.GetStream%2A> Methode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="62aef-327">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="62aef-328">Verwenden Sie diese Option <xref:System.Net.Sockets.NetworkStream> zum Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="62aef-328">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-329">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="62aef-329">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="62aef-330">Nachdem Sie diesen Code abgerufen haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="62aef-330">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-331">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-331">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-332">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-332">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-333">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-333">The <paramref name="address" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62aef-334">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-334">The <paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-335">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-335">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-336">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-336">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (System.Net.IPAddress[] addresses, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(class System.Net.IPAddress[] addresses, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.Net.IPAddress[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (addresses As IPAddress(), port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(cli::array &lt;System::Net::IPAddress ^&gt; ^ addresses, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : System.Net.IPAddress[] * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (addresses, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="addresses" Type="System.Net.IPAddress[]" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="addresses">
          <span data-ttu-id="62aef-337">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-337">The <see cref="T:System.Net.IPAddress" /> array of the host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="62aef-338">The port number to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-338">The port number to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-339">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-339">Connects the client to a remote TCP host using the specified IP addresses and port number as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62aef-340">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-340">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-341">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="62aef-341">This operation will not block.</span></span> <span data-ttu-id="62aef-342">Die zurückgegebene gibt <xref:System.Threading.Tasks.Task> Objekt wird abgeschlossen, nachdem die TCP-Verbindung hergestellt wurde.</span><span class="sxs-lookup"><span data-stu-id="62aef-342">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="62aef-343">Diese Methode wird den aufrufenden Thread nicht blockiert, während die verbindungsanforderung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="62aef-343">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="62aef-344">Diese Methode wird unmittelbar nach einem Aufruf in der Regel verwendet der <xref:System.Net.Dns.BeginGetHostAddresses%2A> -Methode, die mehrere IP-Adressen für einen einzelnen Host zurückgegeben werden kann.</span><span class="sxs-lookup"><span data-stu-id="62aef-344">This method is typically used immediately after a call to the <xref:System.Net.Dns.BeginGetHostAddresses%2A> method, which can return multiple IP addresses for a single host.</span></span> <span data-ttu-id="62aef-345">Rufen Sie diese Methode zum Herstellen einer Verbindung synchrone Remotehosts, an den Host, der durch das Array des angegebenen <xref:System.Net.IPAddress> Elemente und die Portnummer als asynchroner Vorgang.</span><span class="sxs-lookup"><span data-stu-id="62aef-345">Call this method to establish a synchronous remote host connection to the host specified by the array of <xref:System.Net.IPAddress> elements and the port number as an asynchronous operation.</span></span> <span data-ttu-id="62aef-346">Verwenden Sie nach dem Herstellen einer Verbindung mit dem Remotehost, der <xref:System.Net.Sockets.TcpClient.GetStream%2A> Methode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="62aef-346">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="62aef-347">Verwenden Sie diese Option <xref:System.Net.Sockets.NetworkStream> zum Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="62aef-347">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-348">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="62aef-348">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="62aef-349">Nachdem Sie diesen Code abgerufen haben, sehen Sie sich die Windows Sockets-Version 2 zur API in der MSDN Library unter [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="62aef-349">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-350">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-350">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-351">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-351">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-352">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-352">The <paramref name="ipAddresses" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62aef-353">The port number is not valid.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-353">The port number is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-354">An error occurred when attempting to access the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-354">An error occurred when attempting to access the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-355">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-355">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
        <exception cref="T:System.Security.SecurityException">
          <span data-ttu-id="62aef-356">A caller higher in the call stack does not have permission for the requested operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-356">A caller higher in the call stack does not have permission for the requested operation.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="62aef-357">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-357">This method is valid for sockets that use the <see cref="F:System.Net.Sockets.AddressFamily.InterNetwork" /> flag or the <see cref="F:System.Net.Sockets.AddressFamily.InterNetworkV6" /> flag.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.TcpListener" />
      </Docs>
    </Member>
    <Member MemberName="ConnectAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task ConnectAsync (string host, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task ConnectAsync(string host, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.ConnectAsync(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConnectAsync (host As String, port As Integer) As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ ConnectAsync(System::String ^ host, int port);" />
      <MemberSignature Language="F#" Value="member this.ConnectAsync : string * int -&gt; System.Threading.Tasks.Task" Usage="tcpClient.ConnectAsync (host, port)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.String" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="62aef-358">The DNS name of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-358">The DNS name of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <param name="port">
          <span data-ttu-id="62aef-359">The port number of the remote host to which you intend to connect.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-359">The port number of the remote host to which you intend to connect.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-360">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-360">Connects the client to the specified TCP port on the specified host as an asynchronous operation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62aef-361">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-361">Returns <see cref="T:System.Threading.Tasks.Task" />  The task object representing the asynchronous operation.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-362">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="62aef-362">This operation will not block.</span></span> <span data-ttu-id="62aef-363">Die zurückgegebene gibt <xref:System.Threading.Tasks.Task> Objekt wird abgeschlossen, nachdem die TCP-Verbindung hergestellt wurde.</span><span class="sxs-lookup"><span data-stu-id="62aef-363">The returned Returns <xref:System.Threading.Tasks.Task> object will complete after the TCP connection has been established.</span></span> <span data-ttu-id="62aef-364">Diese Methode wird den aufrufenden Thread nicht blockiert, während die verbindungsanforderung ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="62aef-364">This method does not block the calling thread while the connection request is underway.</span></span>  
  
 <span data-ttu-id="62aef-365">Rufen Sie diese Methode, um eine synchrone Verbindung mit dem angegebenen Hostnamen herzustellen und die Portnummer als asynchroner Vorgang.</span><span class="sxs-lookup"><span data-stu-id="62aef-365">Call this method to establish a synchronous remote host connection to the specified host name and port number as an asynchronous operation.</span></span> <span data-ttu-id="62aef-366">Verwenden Sie nach dem Herstellen einer Verbindung mit dem Remotehost, der <xref:System.Net.Sockets.TcpClient.GetStream%2A> Methode zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="62aef-366">After connecting with the remote host, use the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="62aef-367">Verwenden Sie diese Option <xref:System.Net.Sockets.NetworkStream> zum Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="62aef-367">Use this <xref:System.Net.Sockets.NetworkStream> to send and receive data.</span></span>  
  
 <span data-ttu-id="62aef-368">Wenn IPv6 aktiviert ist und die <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> Methode wird aufgerufen, um eine Verbindung zu einem Host herzustellen, die sowohl in IPv6 aufgelöst wird und IPv4-Adressen, die Verbindung mit der IPv6-Adresse versucht zuerst, bevor Sie die IPv4-Adresse.</span><span class="sxs-lookup"><span data-stu-id="62aef-368">If IPv6 is enabled and the <xref:System.Net.Sockets.TcpClient.ConnectAsync%28System.String%2CSystem.Int32%29> method is called to connect to a host that resolves to both IPv6 and IPv4 addresses, the connection to the IPv6 address will be attempted first before the IPv4 address.</span></span> <span data-ttu-id="62aef-369">Dies möglicherweise die Auswirkungen der verzögern der Zeit zum Herstellen der Verbindung, wenn der Host nicht an die IPv6-Adresse lauscht.</span><span class="sxs-lookup"><span data-stu-id="62aef-369">This may have the effect of delaying the time to establish the connection if the host is not listening on the IPv6 address.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-370">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="62aef-370">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="62aef-371">Nachdem Sie diesen Code abgerufen haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="62aef-371">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-372">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-372">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-373">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-373">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-374">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-374">The <paramref name="hostname" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="62aef-375">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-375">The <paramref name="port" /> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-376">An error occurred when accessing the socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-376">An error occurred when accessing the socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-377">
            <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-377">
              <see cref="T:System.Net.Sockets.TcpClient" /> is closed.</span>
          </span>
        </exception>
        <altmember cref="M:System.Net.Sockets.Socket.Connect(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpClient.GetStream" />
      </Docs>
    </Member>
    <Member MemberName="Connected">
      <MemberSignature Language="C#" Value="public bool Connected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Connected" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.Connected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Connected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Connected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Connected : bool" Usage="System.Net.Sockets.TcpClient.Connected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-378">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-378">Gets a value indicating whether the underlying <see cref="T:System.Net.Sockets.Socket" /> for a <see cref="T:System.Net.Sockets.TcpClient" /> is connected to a remote host.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62aef-379">
            <see langword="true" />, wenn der <see cref="P:System.Net.Sockets.TcpClient.Client" />-Socket beim letzten Vorgang mit einer Remoteressource verbunden war, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-379">
              <see langword="true" /> if the <see cref="P:System.Net.Sockets.TcpClient.Client" /> socket was connected to a remote resource as of the most recent operation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-380">Die <xref:System.Net.Sockets.TcpClient.Connected%2A> Eigenschaft ruft den Verbindungsstatus der ab der <xref:System.Net.Sockets.TcpClient.Client%2A> Socket beim letzten e/a-Vorgang.</span><span class="sxs-lookup"><span data-stu-id="62aef-380">The <xref:System.Net.Sockets.TcpClient.Connected%2A> property gets the connection state of the <xref:System.Net.Sockets.TcpClient.Client%2A> socket as of the last I/O operation.</span></span> <span data-ttu-id="62aef-381">Wenn gibt `false`, <xref:System.Net.Sockets.TcpClient.Client%2A> Socket wurde entweder nie verbunden oder nicht mehr verbunden ist.</span><span class="sxs-lookup"><span data-stu-id="62aef-381">When it returns `false`, the <xref:System.Net.Sockets.TcpClient.Client%2A> socket was either never connected, or is no longer connected.</span></span>  
  
 <span data-ttu-id="62aef-382">Da die <xref:System.Net.Sockets.TcpClient.Connected%2A> -Eigenschaft gibt nur den Zustand der Verbindung seit dem letzten Vorgang, sollten Sie versuchen, senden oder Empfangen einer Nachricht zum Ermitteln des aktuellen Status.</span><span class="sxs-lookup"><span data-stu-id="62aef-382">Because the <xref:System.Net.Sockets.TcpClient.Connected%2A> property only reflects the state of the connection as of the most recent operation, you should attempt to send or receive a message to determine the current state.</span></span> <span data-ttu-id="62aef-383">Nach dem Senden der Nachricht fehlgeschlagen ist, gibt diese Eigenschaft nicht mehr `true`.</span><span class="sxs-lookup"><span data-stu-id="62aef-383">After the message send fails, this property no longer returns `true`.</span></span> <span data-ttu-id="62aef-384">Beachten Sie, dass dieses Verhalten beabsichtigt ist.</span><span class="sxs-lookup"><span data-stu-id="62aef-384">Note that this behavior is by design.</span></span> <span data-ttu-id="62aef-385">Sie können den Status der Verbindung nicht zuverlässig testen, da, im Zeitraum zwischen den Test und einen Sende-/Empfangsports, die Verbindung verloren gegangen sein könnte.</span><span class="sxs-lookup"><span data-stu-id="62aef-385">You cannot reliably test the state of the connection because, in the time between the test and a send/receive, the connection could have been lost.</span></span> <span data-ttu-id="62aef-386">Ihr Code sollten davon ausgehen, der Socket verbunden ist und ordnungsgemäß zu fehlerhaftem Handle Übertragungen.</span><span class="sxs-lookup"><span data-stu-id="62aef-386">Your code should assume the socket is connected, and gracefully handle failed transmissions.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-387">Im folgenden Codebeispiel wird eine Verbindung mit einem Remoteendpunkt her, und anschließend überprüft die Verbindung.</span><span class="sxs-lookup"><span data-stu-id="62aef-387">The following code example connects to a remote endpoint and then verifies the connection.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpClient1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="tcpClient.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62aef-388">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-388">Releases the managed and unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected virtual void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="abstract member Dispose : bool -&gt; unit&#xA;override this.Dispose : bool -&gt; unit" Usage="tcpClient.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="62aef-389">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-389">Set to <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-390">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-390">Releases the unmanaged resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-391">Diese Methode wird aufgerufen, von der öffentlichen `Dispose()` Methode und die <xref:System.Object.Finalize%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-391">This method is called by the public `Dispose()` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="62aef-392">`Dispose()` Ruft diese Methode mit dem `disposing` Parametersatz zu `true`.</span><span class="sxs-lookup"><span data-stu-id="62aef-392">`Dispose()` invokes this method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="62aef-393"><xref:System.Object.Finalize%2A> Ruft diese Methode mit `disposing` festgelegt `false`.</span><span class="sxs-lookup"><span data-stu-id="62aef-393"><xref:System.Object.Finalize%2A> invokes this method with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="62aef-394">Wenn der `disposing`-Parameter `true` ist, gibt diese Methode sämtliche Ressourcen frei, die für verwaltete Objekte reserviert sind, auf die dieser <xref:System.Net.Sockets.TcpClient> verweist.</span><span class="sxs-lookup"><span data-stu-id="62aef-394">When the `disposing` parameter is `true`, this method releases all resources held by any managed objects that this <xref:System.Net.Sockets.TcpClient> references.</span></span> <span data-ttu-id="62aef-395">Dies geschieht durch Aufrufen der `Dispose()` -Methode jedes referenzierten Objekts.</span><span class="sxs-lookup"><span data-stu-id="62aef-395">It does this by invoking the `Dispose()` method of each referenced object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-396">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-396">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-397">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-397">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="62aef-398">
            <para>
              <see langword="Dispose" /> kann von anderen Objekten mehrmals aufgerufen werden. Beim Überschreiben von <see langword="Dispose(Boolean)" /> müssen Sie darauf achten, nicht auf Objekte zu verweisen, die durch einen früheren Aufruf von <see langword="Dispose" /> freigegeben wurden. Weitere Informationen zur Implementierung <see langword="Dispose(Boolean)" />, finden Sie unter [Implementieren einer Dispose-Method](~/docs/standard/garbage-collection/implementing-dispose.md).  Weitere Informationen zu <see langword="Dispose" /> und <see cref="M:System.Object.Finalize" />, finden Sie unter [Bereinigen von nicht verwalteten Resources](~/docs/standard/garbage-collection/unmanaged.md) und [Überschreiben der Finalize-Methode.] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-398">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" />, be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="EndConnect">
      <MemberSignature Language="C#" Value="public void EndConnect (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndConnect(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndConnect (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndConnect(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndConnect : IAsyncResult -&gt; unit" Usage="tcpClient.EndConnect asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">
          <span data-ttu-id="62aef-399">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-399">An <see cref="T:System.IAsyncResult" /> object returned by a call to <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="62aef-400">Ends a pending asynchronous connection attempt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-400">Ends a pending asynchronous connection attempt.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-401">Diese Methode blockiert, bis der Vorgang ist abgeschlossen.</span><span class="sxs-lookup"><span data-stu-id="62aef-401">This method blocks until the operation is complete.</span></span> <span data-ttu-id="62aef-402">Um diesen Vorgang synchron auszuführen, verwenden eine <xref:System.Net.Sockets.TcpClient.Connect%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-402">To perform this operation synchronously, use a <xref:System.Net.Sockets.TcpClient.Connect%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-403">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="62aef-403">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="62aef-404">Nachdem Sie diesen Code abgerufen haben, sehen Sie sich die Windows Sockets-Version 2 zur API in der MSDN Library unter [ http://msdn.microsoft.com/library ](http://msdn.microsoft.com/library) eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="62aef-404">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in the MSDN library at [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library) for a detailed description of the error.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-405">Im folgenden Codebeispiel wird beendet den asynchronen Verbindungsversuch.</span><span class="sxs-lookup"><span data-stu-id="62aef-405">The following code example ends the asynchronous connection attempt.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#7)]
 [!code-csharp[System.Net.Sockets.TcpClient1#7](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="62aef-406">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-406">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="62aef-407">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-407">The <paramref name="asyncResult" /> parameter was not returned by a call to a <see cref="Overload:System.Net.Sockets.TcpClient.BeginConnect" /> method.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62aef-408">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-408">The <see cref="M:System.Net.Sockets.TcpClient.EndConnect(System.IAsyncResult)" /> method was previously called for the asynchronous connection.</span>
          </span>
        </exception>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-409">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-409">An error occurred when attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-410">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-410">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpClient.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-411">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-411">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a port.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62aef-412">
            <see langword="true" />, wenn der <see cref="T:System.Net.Sockets.TcpClient" /> die Verwendung eines bestimmten Ports durch nur einen einzigen Client zulässt, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-412">
              <see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpClient" /> allows only one client to use a specific port; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="62aef-413">Für Windows Server 2003 und Windows XP Service Pack 2 oder höher ist der Standardwert <see langword="true" />, für alle anderen Versionen <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-413">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-414">Standardmäßig können mehrere Clients einen bestimmten Port verwenden. Allerdings kann nur eine der Clients Vorgänge für den Netzwerkdatenverkehr an den Port gesendete ausführen.</span><span class="sxs-lookup"><span data-stu-id="62aef-414">By default, multiple clients can use a specific port; however, only one of the clients can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="62aef-415">Sie können die <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> Eigenschaft, um zu verhindern, dass mehrere Clients mit einem bestimmten Port.</span><span class="sxs-lookup"><span data-stu-id="62aef-415">You can use the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property to prevent multiple clients from using a specific port.</span></span>  
  
 <span data-ttu-id="62aef-416">Diese Eigenschaft muss festgelegt werden, bevor der zugrunde liegenden Socket an einen Port gebunden wird.</span><span class="sxs-lookup"><span data-stu-id="62aef-416">This property must be set before the underlying socket is bound to a client port.</span></span> <span data-ttu-id="62aef-417">Wenn Sie aufrufen <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, oder <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, der Clientport als Nebenwirkung der Methode gebunden ist und Sie können anschließend nicht Festlegen der <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="62aef-417">If you call <xref:System.Net.Sockets.TcpClient.Connect%2A>, <xref:System.Net.Sockets.TcpClient.BeginConnect%2A>, <xref:System.Net.Sockets.TcpClient.%23ctor%28System.Net.IPEndPoint%29>, or <xref:System.Net.Sockets.TcpClient.%23ctor%28System.String%2CSystem.Int32%29>, the client port is bound as a side effect of the method, and you cannot subsequently set the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-418">Das folgende Codebeispiel erstellt eine <xref:System.Net.Sockets.TcpClient> und ruft ab und legt den Wert für die <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="62aef-418">The following code example creates a <xref:System.Net.Sockets.TcpClient> and gets and sets the value of the <xref:System.Net.Sockets.TcpClient.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CPP/newtcpclient.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpClient1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpClient1/CS/newtcpclient.cs#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-419">An error occurred when attempting to access the underlying socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-419">An error occurred when attempting to access the underlying socket.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-420">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpClient ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpClient.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62aef-421">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-421">Frees resources used by the <see cref="T:System.Net.Sockets.TcpClient" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-422">Diese Methode überschreibt <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="62aef-422">This method overrides <xref:System.Object.Finalize%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="62aef-423">Anwendungscode sollte diese Methode nicht aufgerufen. ein Objekt des <xref:System.Object.Finalize%2A> Methode wird automatisch während der Garbagecollection vom Garbage Collector durch einen Aufruf von Collection aufgerufen wurde hat die <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-423">Application code should not call this method; an object's <xref:System.Object.Finalize%2A> method is automatically invoked during garbage collection, unless finalization by the garbage collector has been disabled by a call to the <xref:System.GC.SuppressFinalize%2A?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="62aef-424">Die <xref:System.Net.Sockets.TcpClient> Klasse Finalizer schließt die TCP-Verbindung und gibt alle zugeordneten verwaltete Ressourcen frei der <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="62aef-424">The <xref:System.Net.Sockets.TcpClient> class finalizer closes the TCP connection and releases all managed resources associated with the <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="62aef-425">Zu diesen Ressourcen gehören die zugrunde liegende <xref:System.Net.Sockets.Socket> zum Herstellen einer Verbindung mit dem Remotehost, und die <xref:System.Net.Sockets.NetworkStream> zum Senden und Empfangen von Daten verwendet.</span><span class="sxs-lookup"><span data-stu-id="62aef-425">These resources include the underlying <xref:System.Net.Sockets.Socket> used for connecting with the remote host, and the <xref:System.Net.Sockets.NetworkStream> used to send and receive data.</span></span> <span data-ttu-id="62aef-426">Der Finalizer gibt keinen nicht verwalteten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="62aef-426">The finalizer does not release any unmanaged resources.</span></span>  
  
 <span data-ttu-id="62aef-427">Weitere Informationen finden Sie unter [Finalize-Methoden und Destruktoren](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Bereinigen von nicht verwalteten Ressourcen](~/docs/standard/garbage-collection/unmanaged.md), und [Überschreiben der Finalize-Methode](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span><span class="sxs-lookup"><span data-stu-id="62aef-427">For more information, see [Finalize Methods and Destructors](http://msdn.microsoft.com/library/fd376774-1643-499b-869e-9546a3aeea70), [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md), and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
      </Docs>
    </Member>
    <Member MemberName="GetStream">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.NetworkStream GetStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.NetworkStream GetStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.GetStream" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStream () As NetworkStream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::NetworkStream ^ GetStream();" />
      <MemberSignature Language="F#" Value="member this.GetStream : unit -&gt; System.Net.Sockets.NetworkStream" Usage="tcpClient.GetStream " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.NetworkStream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="62aef-428">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-428">Returns the <see cref="T:System.Net.Sockets.NetworkStream" /> used to send and receive data.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="62aef-429">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-429">The underlying <see cref="T:System.Net.Sockets.NetworkStream" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-430"><xref:System.Net.Sockets.TcpClient.GetStream%2A> Gibt eine <xref:System.Net.Sockets.NetworkStream> , dass Sie zum Senden und Empfangen von Daten verwenden können.</span><span class="sxs-lookup"><span data-stu-id="62aef-430"><xref:System.Net.Sockets.TcpClient.GetStream%2A> returns a <xref:System.Net.Sockets.NetworkStream> that you can use to send and receive data.</span></span> <span data-ttu-id="62aef-431">Die <xref:System.Net.Sockets.NetworkStream> Klasse erbt von der <xref:System.IO.Stream> Klasse, die eine umfangreiche Sammlung von Methoden und Eigenschaften, die die Netzwerkkommunikation verwendet bereitstellt.</span><span class="sxs-lookup"><span data-stu-id="62aef-431">The <xref:System.Net.Sockets.NetworkStream> class inherits from the <xref:System.IO.Stream> class, which provides a rich collection of methods and properties used to facilitate network communications.</span></span>  
  
 <span data-ttu-id="62aef-432">Rufen Sie die <xref:System.Net.Sockets.TcpClient.Connect%2A> Methode zunächst oder <xref:System.Net.Sockets.TcpClient.GetStream%2A> Methode löst eine <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="62aef-432">You must call the <xref:System.Net.Sockets.TcpClient.Connect%2A> method first, or the <xref:System.Net.Sockets.TcpClient.GetStream%2A> method will throw an <xref:System.InvalidOperationException>.</span></span> <span data-ttu-id="62aef-433">Nachdem Sie abgerufen haben die <xref:System.Net.Sockets.NetworkStream>, rufen Sie die <xref:System.Net.Sockets.NetworkStream.Write%2A> Methode zum Senden von Daten mit dem Remotehost.</span><span class="sxs-lookup"><span data-stu-id="62aef-433">After you have obtained the <xref:System.Net.Sockets.NetworkStream>, call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method to send data to the remote host.</span></span> <span data-ttu-id="62aef-434">Rufen Sie die <xref:System.Net.Sockets.NetworkStream.Read%2A> Methode, um den Empfang von Daten über den Remotehost.</span><span class="sxs-lookup"><span data-stu-id="62aef-434">Call the <xref:System.Net.Sockets.NetworkStream.Read%2A> method to receive data arriving from the remote host.</span></span> <span data-ttu-id="62aef-435">Beide Methoden blockiert, bis der angegebene Vorgang ausgeführt wird.</span><span class="sxs-lookup"><span data-stu-id="62aef-435">Both of these methods block until the specified operation is performed.</span></span> <span data-ttu-id="62aef-436">Sie können vermeiden, Blockieren eines Lesevorgangs durch Überprüfen der <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="62aef-436">You can avoid blocking on a read operation by checking the <xref:System.Net.Sockets.NetworkStream.DataAvailable%2A> property.</span></span> <span data-ttu-id="62aef-437">Ein `true` Wert bedeutet, dass Daten, die über den Remotehost empfangen wurden und zum Lesen verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="62aef-437">A `true` value means that data has arrived from the remote host and is available for reading.</span></span> <span data-ttu-id="62aef-438">In diesem Fall <xref:System.Net.Sockets.NetworkStream.Read%2A> ist garantiert nicht sofort vollständig vorgenommen.</span><span class="sxs-lookup"><span data-stu-id="62aef-438">In this case, <xref:System.Net.Sockets.NetworkStream.Read%2A> is guaranteed to complete immediately.</span></span> <span data-ttu-id="62aef-439">Wenn die Verbindung, des remote-Host beendet hat <xref:System.Net.Sockets.NetworkStream.Read%2A> wird sofort zurückgegeben, mit 0 (null) Bytes.</span><span class="sxs-lookup"><span data-stu-id="62aef-439">If the remote host has shutdown its connection, <xref:System.Net.Sockets.NetworkStream.Read%2A> will immediately return with zero bytes.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-440">Schließen Sie die <xref:System.Net.Sockets.NetworkStream> Wenn Sie über das Senden und Empfangen von Daten sind.</span><span class="sxs-lookup"><span data-stu-id="62aef-440">You must close the <xref:System.Net.Sockets.NetworkStream> when you are through sending and receiving data.</span></span> <span data-ttu-id="62aef-441">Schließen von <xref:System.Net.Sockets.TcpClient> aufgehoben, die <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="62aef-441">Closing <xref:System.Net.Sockets.TcpClient> does not release the <xref:System.Net.Sockets.NetworkStream>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-442">Wenn Sie erhalten eine <xref:System.Net.Sockets.SocketException>, verwenden Sie <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> um den spezifischen Fehlercode abzurufen.</span><span class="sxs-lookup"><span data-stu-id="62aef-442">If you receive a <xref:System.Net.Sockets.SocketException>, use <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> to obtain the specific error code.</span></span> <span data-ttu-id="62aef-443">Nachdem Sie diesen Code abgerufen haben, finden Sie in MSDN in der Dokumentation zu API-Code Windows Sockets, Version 2, eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="62aef-443">After you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="62aef-444">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="62aef-444">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="62aef-445">Weitere Informationen finden Sie unter [Netzwerkablaufverfolgung in .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span><span class="sxs-lookup"><span data-stu-id="62aef-445">For more information, see [Network Tracing in the .NET Framework](~/docs/framework/network-programming/network-tracing.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-446">Das folgende Codebeispiel verwendet <xref:System.Net.Sockets.TcpClient.GetStream%2A> zum Abrufen der zugrunde liegende <xref:System.Net.Sockets.NetworkStream>.</span><span class="sxs-lookup"><span data-stu-id="62aef-446">The following code example uses <xref:System.Net.Sockets.TcpClient.GetStream%2A> to obtain the underlying <xref:System.Net.Sockets.NetworkStream>.</span></span> <span data-ttu-id="62aef-447">Nach dem Abrufen der <xref:System.Net.Sockets.NetworkStream>, senden und empfangen, mit dessen <xref:System.Net.Sockets.NetworkStream.Write%2A> und <xref:System.Net.Sockets.NetworkStream.Read%2A> Methoden.</span><span class="sxs-lookup"><span data-stu-id="62aef-447">After obtaining the <xref:System.Net.Sockets.NetworkStream>, it sends and receives using its <xref:System.Net.Sockets.NetworkStream.Write%2A> and <xref:System.Net.Sockets.NetworkStream.Read%2A> methods.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#14)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#14)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#14](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="62aef-448">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-448">The <see cref="T:System.Net.Sockets.TcpClient" /> is not connected to a remote host.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="62aef-449">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-449">The <see cref="T:System.Net.Sockets.TcpClient" /> has been closed.</span>
          </span>
        </exception>
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.NetworkStream.DataAvailable" />
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Connect(System.String,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LingerState">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.LingerOption LingerState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.LingerOption LingerState" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.LingerState" />
      <MemberSignature Language="VB.NET" Value="Public Property LingerState As LingerOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::LingerOption ^ LingerState { System::Net::Sockets::LingerOption ^ get(); void set(System::Net::Sockets::LingerOption ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LingerState : System.Net.Sockets.LingerOption with get, set" Usage="System.Net.Sockets.TcpClient.LingerState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.LingerOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-450">Gets or sets information about the linger state of the associated socket.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-450">Gets or sets information about the linger state of the associated socket.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62aef-451">Ein <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-451">A <see cref="T:System.Net.Sockets.LingerOption" />.</span>
          </span>
          <span data-ttu-id="62aef-452">In der Standardeinstellung ist der Nachlauf deaktiviert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-452">By default, lingering is disabled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-453">Die <xref:System.Net.Sockets.TcpClient.LingerState%2A> -Eigenschaft ändert das <xref:System.Net.Sockets.Socket.Close%2A> Methode verhält sich.</span><span class="sxs-lookup"><span data-stu-id="62aef-453">The <xref:System.Net.Sockets.TcpClient.LingerState%2A> property changes the way <xref:System.Net.Sockets.Socket.Close%2A> method behaves.</span></span> <span data-ttu-id="62aef-454">Diese Eigenschaft wird bei der Gruppe die Bedingungen ändert, unter denen die Verbindung durch Winsock zurückgesetzt werden kann.</span><span class="sxs-lookup"><span data-stu-id="62aef-454">This property when set modifies the conditions under which the connection can be reset by Winsock.</span></span> <span data-ttu-id="62aef-455">Können die Verbindung wird basierend auf das Verhalten des IP-Protokolls erfolgen.</span><span class="sxs-lookup"><span data-stu-id="62aef-455">Connection resets can still occur based on the IP protocol behavior.</span></span>  
  
 <span data-ttu-id="62aef-456">Diese Eigenschaft steuert die Zeitspanne, die die TCP-Verbindung geöffnet, nach einem Aufruf von bleiben wird <xref:System.Net.Sockets.TcpClient.Close%2A> bleibt, wenn noch weitere Daten gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="62aef-456">This property controls the length of time that the TCP connection will remain open after a call to <xref:System.Net.Sockets.TcpClient.Close%2A> when data remains to be sent.</span></span> <span data-ttu-id="62aef-457">Beim Aufrufen der <xref:System.Net.Sockets.NetworkStream.Write%2A> -Methode, Daten in der ausgehenden Netzwerkpuffer platziert.</span><span class="sxs-lookup"><span data-stu-id="62aef-457">When you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, data is placed in the outgoing network buffer.</span></span> <span data-ttu-id="62aef-458">Diese Eigenschaft kann verwendet werden, um sicherzustellen, dass die Daten mit dem Remotehost, bevor Sie gesendet wurden die <xref:System.Net.Sockets.TcpClient.Close%2A> Methode bricht die Verbindung.</span><span class="sxs-lookup"><span data-stu-id="62aef-458">This property can be used to ensure that this data is sent to the remote host before the <xref:System.Net.Sockets.TcpClient.Close%2A> method drops the connection.</span></span>  
  
 <span data-ttu-id="62aef-459">Erstellen Sie aktivieren, indem eine <xref:System.Net.Sockets.LingerOption> -Instanz, die die gewünschten Werte enthält, und legen Sie die <xref:System.Net.Sockets.TcpClient.LingerState%2A> Eigenschaft dieser Instanz.</span><span class="sxs-lookup"><span data-stu-id="62aef-459">To enable lingering, create a <xref:System.Net.Sockets.LingerOption> instance containing the desired values, and set the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property to this instance.</span></span>  
  
 <span data-ttu-id="62aef-460">Die folgende Tabelle beschreibt das Verhalten von der <xref:System.Net.Sockets.TcpClient.Close%2A> -Methode für die möglichen Werte der <xref:System.Net.Sockets.LingerOption.Enabled%2A> Eigenschaft und die <xref:System.Net.Sockets.LingerOption.LingerTime%2A> Eigenschaft gespeichert wird, der <xref:System.Net.Sockets.TcpClient.LingerState%2A> Eigenschaft.</span><span class="sxs-lookup"><span data-stu-id="62aef-460">The following table describes the behavior of the <xref:System.Net.Sockets.TcpClient.Close%2A> method for the possible values of the <xref:System.Net.Sockets.LingerOption.Enabled%2A> property and the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property.</span></span>  
  
|<span data-ttu-id="62aef-461">LingerState.Enabled</span><span class="sxs-lookup"><span data-stu-id="62aef-461">LingerState.Enabled</span></span>|<span data-ttu-id="62aef-462">LingerState.LingerTime</span><span class="sxs-lookup"><span data-stu-id="62aef-462">LingerState.LingerTime</span></span>|<span data-ttu-id="62aef-463">Verhalten</span><span class="sxs-lookup"><span data-stu-id="62aef-463">Behavior</span></span>|  
|-------------------------|----------------------------|--------------|  
|<span data-ttu-id="62aef-464">`false` (deaktiviert), den Standardwert</span><span class="sxs-lookup"><span data-stu-id="62aef-464">`false` (disabled), the default value</span></span>|<span data-ttu-id="62aef-465">Das Timeout ist nicht zutreffend (Standard).</span><span class="sxs-lookup"><span data-stu-id="62aef-465">The time-out is not applicable, (default).</span></span>|<span data-ttu-id="62aef-466">Ausstehende Daten zu senden, bis zum Ablauf des Standardtimeout für IP-Protokoll versucht.</span><span class="sxs-lookup"><span data-stu-id="62aef-466">Attempts to send pending data until the default IP protocol time-out expires.</span></span>|  
|<span data-ttu-id="62aef-467">`true` (aktiviert)</span><span class="sxs-lookup"><span data-stu-id="62aef-467">`true` (enabled)</span></span>|<span data-ttu-id="62aef-468">Ein Timeout ungleich null</span><span class="sxs-lookup"><span data-stu-id="62aef-468">A nonzero time-out</span></span>|<span data-ttu-id="62aef-469">Versucht, ausstehende Daten zu senden, bis das angegebene Timeout abläuft, und wenn der Versuch fehlschlägt, klicken Sie dann Winsock setzt die Verbindung zurück.</span><span class="sxs-lookup"><span data-stu-id="62aef-469">Attempts to send pending data until the specified time-out expires, and if the attempt fails, then Winsock resets the connection.</span></span>|  
|<span data-ttu-id="62aef-470">`true` (aktiviert)</span><span class="sxs-lookup"><span data-stu-id="62aef-470">`true` (enabled)</span></span>|<span data-ttu-id="62aef-471">0 (null) ein Timeout.</span><span class="sxs-lookup"><span data-stu-id="62aef-471">A zero timeout.</span></span>|<span data-ttu-id="62aef-472">Verwirft alle ausstehenden Daten und Winsock-setzt die Verbindung.</span><span class="sxs-lookup"><span data-stu-id="62aef-472">Discards any pending data and Winsock resets the connection.</span></span>|  
  
 <span data-ttu-id="62aef-473">Der IP-Stapel berechnet der IP-Protokoll Standardtimeoutspanne zu verwenden, basierend auf den Roundtrip-Zeit der Verbindung.</span><span class="sxs-lookup"><span data-stu-id="62aef-473">The IP stack computes the default IP protocol time-out period to use based on the round trip time of the connection.</span></span> <span data-ttu-id="62aef-474">In den meisten Fällen ist das Timeout berechnet, indem dem Stapel als relevanter als eines von einer Anwendung definiert.</span><span class="sxs-lookup"><span data-stu-id="62aef-474">In most cases, the time-out computed by the stack is more relevant than one defined by an application.</span></span> <span data-ttu-id="62aef-475">Dies ist das Standardverhalten für einen Socket bei der <xref:System.Net.Sockets.TcpClient.LingerState%2A> Eigenschaft nicht festgelegt.</span><span class="sxs-lookup"><span data-stu-id="62aef-475">This is the default behavior for a socket when the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is not set.</span></span>  
  
 <span data-ttu-id="62aef-476">Wenn die <xref:System.Net.Sockets.LingerOption.LingerTime%2A> Eigenschaft gespeichert wird, der <xref:System.Net.Sockets.TcpClient.LingerState%2A> -Eigenschaft größer als das Standardtimeout für IP-Protokoll festgelegt ist, das Standardtimeout für IP-Protokoll werden weiterhin angewendet und überschreiben.</span><span class="sxs-lookup"><span data-stu-id="62aef-476">When the <xref:System.Net.Sockets.LingerOption.LingerTime%2A> property stored in the <xref:System.Net.Sockets.TcpClient.LingerState%2A> property is set greater than the default IP protocol time-out, the default IP protocol time-out will still apply and override.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-477">Im folgenden Codebeispiel wird und ruft die Sockets linger Zeit.</span><span class="sxs-lookup"><span data-stu-id="62aef-477">The following code example sets and gets the sockets linger time.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#12)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#12)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#12](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#12)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.LingerOption" />
        <altmember cref="M:System.Net.Sockets.TcpClient.Close" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="NoDelay">
      <MemberSignature Language="C#" Value="public bool NoDelay { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NoDelay" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.NoDelay" />
      <MemberSignature Language="VB.NET" Value="Public Property NoDelay As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NoDelay { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NoDelay : bool with get, set" Usage="System.Net.Sockets.TcpClient.NoDelay" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-478">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-478">Gets or sets a value that disables a delay when send or receive buffers are not full.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62aef-479">
            <see langword="true" />, wenn die Verzögerung deaktiviert ist, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-479">
              <see langword="true" /> if the delay is disabled, otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="62aef-480">Der Standardwert ist <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-480">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-481">Wenn <xref:System.Net.Sockets.TcpClient.NoDelay%2A> ist `false`, <xref:System.Net.Sockets.TcpClient> werden nicht über das Netzwerk ein Paket gesendet, bis einen erheblichen Teil der ausgehenden Daten gesammelt wurden.</span><span class="sxs-lookup"><span data-stu-id="62aef-481">When <xref:System.Net.Sockets.TcpClient.NoDelay%2A> is `false`, a <xref:System.Net.Sockets.TcpClient> does not send a packet over the network until it has collected a significant amount of outgoing data.</span></span> <span data-ttu-id="62aef-482">Senden kleinere Datenmengen ist aufgrund des Umfangs der Aufwand in einem TCP-Segment ineffizient.</span><span class="sxs-lookup"><span data-stu-id="62aef-482">Because of the amount of overhead in a TCP segment, sending small amounts of data is inefficient.</span></span> <span data-ttu-id="62aef-483">Allerdings sind Situationen vorhanden, in denen man sehr kleine Mengen von Daten zu senden, oder erwarten sofortige Antworten aus jedem Paket, die Sie senden.</span><span class="sxs-lookup"><span data-stu-id="62aef-483">However, situations do exist where you need to send very small amounts of data or expect immediate responses from each packet you send.</span></span> <span data-ttu-id="62aef-484">Ihre Entscheidung Wägen Sie die relative Wichtigkeit der Netzwerkeffizienz im Vergleich zu anwendungsanforderungen.</span><span class="sxs-lookup"><span data-stu-id="62aef-484">Your decision should weigh the relative importance of network efficiency versus application requirements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-485">Im folgenden Codebeispiel wird die Verzögerung deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="62aef-485">The following code example disables the delay.</span></span> <span data-ttu-id="62aef-486">Es überprüft dann den Wert der <xref:System.Net.Sockets.TcpClient.NoDelay%2A> um sicherzustellen, dass die Eigenschaft wurde erfolgreich festgelegt wurde.</span><span class="sxs-lookup"><span data-stu-id="62aef-486">It then checks the value of <xref:System.Net.Sockets.TcpClient.NoDelay%2A> to verify that the property was successfully set.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#13)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#13)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#13](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveBufferSize">
      <MemberSignature Language="C#" Value="public int ReceiveBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-487">Gets or sets the size of the receive buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-487">Gets or sets the size of the receive buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62aef-488">Die Größe des Empfangspuffers in Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-488">The size of the receive buffer, in bytes.</span>
          </span>
          <span data-ttu-id="62aef-489">Der Standardwert ist 8192 Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-489">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-490">Die <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> Eigenschaft ruft ab oder legt die Anzahl der Bytes, die Sie zum Speichern von im Empfangspuffer bei jedem Lesevorgang erwarten.</span><span class="sxs-lookup"><span data-stu-id="62aef-490">The <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property gets or sets the number of bytes that you are expecting to store in the receive buffer for each read operation.</span></span> <span data-ttu-id="62aef-491">Diese Eigenschaft bearbeitet tatsächlich den Netzwerk-Pufferspeicher für den Empfang von eingehender Daten zugeordnet.</span><span class="sxs-lookup"><span data-stu-id="62aef-491">This property actually manipulates the network buffer space allocated for receiving incoming data.</span></span>  
  
 <span data-ttu-id="62aef-492">Der Netzwerkpuffer muss mindestens so groß wie der Anwendungspuffer, um sicherzustellen, dass die gewünschten Daten zur Verfügung beim Aufrufen stehen der <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-492">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be available when you call the <xref:System.Net.Sockets.NetworkStream.Read%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="62aef-493">Verwenden der <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> Eigenschaft, um diese Größe festzulegen.</span><span class="sxs-lookup"><span data-stu-id="62aef-493">Use the <xref:System.Net.Sockets.TcpClient.ReceiveBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="62aef-494">Wenn Ihre Anwendung große Datenmengen empfangen wird, sollten Sie übergeben die <xref:System.Net.Sockets.NetworkStream.Read%2A> -Methode Puffer sehr große Anwendung.</span><span class="sxs-lookup"><span data-stu-id="62aef-494">If your application will be receiving bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Read%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="62aef-495">Wenn der Netzwerkpuffer kleiner als die Menge der Daten ist Sie anfordern, der <xref:System.Net.Sockets.NetworkStream.Read%2A> -Methode, Sie werden nicht die gewünschte Menge der Daten in einem schreibgeschützten Vorgang abrufen können.</span><span class="sxs-lookup"><span data-stu-id="62aef-495">If the network buffer is smaller than the amount of data you request in the <xref:System.Net.Sockets.NetworkStream.Read%2A> method, you will not be able to retrieve the desired amount of data in one read operation.</span></span> <span data-ttu-id="62aef-496">Dies führt zu den Mehraufwand der zusätzlichen Aufrufe an die <xref:System.Net.Sockets.NetworkStream.Read%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-496">This incurs the overhead of additional calls to the <xref:System.Net.Sockets.NetworkStream.Read%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-497">Das folgende Codebeispiel legt diese fest und ruft die Größe des Empfangspuffers ab.</span><span class="sxs-lookup"><span data-stu-id="62aef-497">The following code example sets and gets the receive buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#8)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#8)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#8](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException">
          <span data-ttu-id="62aef-498">An error occurred when setting the buffer size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-498">An error occurred when setting the buffer size.</span>
          </span>
          <span data-ttu-id="62aef-499">-or-  In .NET Compact Framework applications, you cannot set this property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-499">-or-  In .NET Compact Framework applications, you cannot set this property.</span>
          </span>
          <span data-ttu-id="62aef-500">For a workaround, see the Platform Note in Remarks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-500">For a workaround, see the Platform Note in Remarks.</span>
          </span>
        </exception>
        <altmember cref="P:System.Net.Sockets.TcpClient.SendBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ReceiveTimeout">
      <MemberSignature Language="C#" Value="public int ReceiveTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ReceiveTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ReceiveTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ReceiveTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.ReceiveTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-501">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-501">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait to receive data once a read operation is initiated.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62aef-502">Der Timeoutwert der Verbindung in Millisekunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-502">The time-out value of the connection in milliseconds.</span>
          </span>
          <span data-ttu-id="62aef-503">Der Standardwert ist 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-503">The default value is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-504">Die <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> Eigenschaft bestimmt die Zeitdauer, die die <xref:System.Net.Sockets.NetworkStream.Read%2A> Methode blockiert, bis er Daten empfangen kann.</span><span class="sxs-lookup"><span data-stu-id="62aef-504">The <xref:System.Net.Sockets.TcpClient.ReceiveTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.NetworkStream.Read%2A> method will block until it is able to receive data.</span></span> <span data-ttu-id="62aef-505">Diese Zeit wird in Millisekunden gemessen.</span><span class="sxs-lookup"><span data-stu-id="62aef-505">This time is measured in milliseconds.</span></span> <span data-ttu-id="62aef-506">Wenn das Timeout, bevor Sie abläuft <xref:System.Net.Sockets.NetworkStream.Read%2A> erfolgreich abgeschlossen wurde, <xref:System.Net.Sockets.TcpClient> löst eine <xref:System.IO.IOException>.</span><span class="sxs-lookup"><span data-stu-id="62aef-506">If the time-out expires before <xref:System.Net.Sockets.NetworkStream.Read%2A> successfully completes, <xref:System.Net.Sockets.TcpClient> throws a <xref:System.IO.IOException>.</span></span> <span data-ttu-id="62aef-507">Es ist kein Timeout erfolgt standardmäßig ein.</span><span class="sxs-lookup"><span data-stu-id="62aef-507">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-508">Das folgende Codebeispiel legt diese fest und ruft den Empfangstimeout.</span><span class="sxs-lookup"><span data-stu-id="62aef-508">The following code example sets and gets the receive time out.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#10)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#10)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#10](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#10)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.SendTimeout" />
      </Docs>
    </Member>
    <Member MemberName="SendBufferSize">
      <MemberSignature Language="C#" Value="public int SendBufferSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendBufferSize" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberSignature Language="VB.NET" Value="Public Property SendBufferSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendBufferSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendBufferSize : int with get, set" Usage="System.Net.Sockets.TcpClient.SendBufferSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-509">Gets or sets the size of the send buffer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-509">Gets or sets the size of the send buffer.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62aef-510">Die Größe des Sendepuffers in Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-510">The size of the send buffer, in bytes.</span>
          </span>
          <span data-ttu-id="62aef-511">Der Standardwert ist 8192 Bytes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-511">The default value is 8192 bytes.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-512">Die <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> -Eigenschaft ruft ab oder legt die Anzahl der Bytes, die Sie erwarten, senden in jedem Aufruf an die <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-512">The <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property gets or sets the number of bytes that you are expecting to send in each call to the <xref:System.Net.Sockets.NetworkStream.Write%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="62aef-513">Diese Eigenschaft bearbeitet tatsächlich den Adressraum für den Sendevorgang zugeordneten Puffer.</span><span class="sxs-lookup"><span data-stu-id="62aef-513">This property actually manipulates the network buffer space allocated for send operation.</span></span>  
  
 <span data-ttu-id="62aef-514">Der Netzwerkpuffer sollte mindestens so groß wie der Anwendungspuffer, um sicherzustellen, dass die gewünschten Daten gespeichert und in einem Vorgang gesendet werden.</span><span class="sxs-lookup"><span data-stu-id="62aef-514">Your network buffer should be at least as large as your application buffer to ensure that the desired data will be stored and sent in one operation.</span></span> <span data-ttu-id="62aef-515">Verwenden der <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> Eigenschaft, um diese Größe festzulegen.</span><span class="sxs-lookup"><span data-stu-id="62aef-515">Use the <xref:System.Net.Sockets.TcpClient.SendBufferSize%2A> property to set this size.</span></span> <span data-ttu-id="62aef-516">Wenn Ihre Anwendung große Datenmengen senden wird, sollten Sie übergeben die <xref:System.Net.Sockets.NetworkStream.Write%2A> -Methode Puffer sehr große Anwendung.</span><span class="sxs-lookup"><span data-stu-id="62aef-516">If your application will be sending bulk data, you should pass the <xref:System.Net.Sockets.NetworkStream.Write%2A> method a very large application buffer.</span></span>  
  
 <span data-ttu-id="62aef-517">Wenn Netzwerkpuffer kleiner ist als die Menge der Daten, die Sie Bereitstellen der <xref:System.Net.Sockets.NetworkStream.Write%2A> -Methode mehrere Netzwerk-Send-Vorgänge werden für jeden Aufruf an die <xref:System.Net.Sockets.NetworkStream.Write%2A> Methode.</span><span class="sxs-lookup"><span data-stu-id="62aef-517">If the network buffer is smaller than the amount of data you provide the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, several network send operations will be performed for every call you make to the <xref:System.Net.Sockets.NetworkStream.Write%2A> method.</span></span> <span data-ttu-id="62aef-518">Sie können die größerer Datendurchsatz erreichen, indem Sie sicherstellen, dass Ihr Netzwerkpuffer muss mindestens so groß wie der Anwendungspuffer ist.</span><span class="sxs-lookup"><span data-stu-id="62aef-518">You can achieve greater data throughput by ensuring that your network buffer is at least as large as your application buffer.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-519">Das folgende Codebeispiel legt diese fest und ruft die Größe des Sendepuffers ab.</span><span class="sxs-lookup"><span data-stu-id="62aef-519">The following code example sets and gets the send buffer size.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#9)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#9)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#9](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#9)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveBufferSize" />
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="SendTimeout">
      <MemberSignature Language="C#" Value="public int SendTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SendTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property SendTimeout As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int SendTimeout { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SendTimeout : int with get, set" Usage="System.Net.Sockets.TcpClient.SendTimeout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="62aef-520">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-520">Gets or sets the amount of time a <see cref="T:System.Net.Sockets.TcpClient" /> will wait for a send operation to complete successfully.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="62aef-521">Der Timeoutwert für den Sendevorgang in Millisekunden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-521">The send time-out value, in milliseconds.</span>
          </span>
          <span data-ttu-id="62aef-522">Der Standard ist 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="62aef-522">The default is 0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="62aef-523">Die <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> Eigenschaft bestimmt die Zeitdauer, die die <xref:System.Net.Sockets.Socket.Send%2A> Methode blockiert, bis der Vorgang erfolgreich beendet.</span><span class="sxs-lookup"><span data-stu-id="62aef-523">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time that the <xref:System.Net.Sockets.Socket.Send%2A> method will block until it is able to return successfully.</span></span> <span data-ttu-id="62aef-524">Diese Zeit wird in Millisekunden gemessen.</span><span class="sxs-lookup"><span data-stu-id="62aef-524">This time is measured in milliseconds.</span></span>  
  
 <span data-ttu-id="62aef-525">Nach dem Aufrufen der <xref:System.Net.Sockets.NetworkStream.Write%2A> -Methode, die zugrunde liegende <xref:System.Net.Sockets.Socket> gibt die Anzahl der Bytes, die tatsächlich an den Host gesendet.</span><span class="sxs-lookup"><span data-stu-id="62aef-525">After you call the <xref:System.Net.Sockets.NetworkStream.Write%2A> method, the underlying <xref:System.Net.Sockets.Socket> returns the number of bytes actually sent to the host.</span></span> <span data-ttu-id="62aef-526">Die <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> Eigenschaft bestimmt die Zeitdauer ein <xref:System.Net.Sockets.TcpClient> wartet vor dem Empfang der Anzahl von Bytes zurückgegeben.</span><span class="sxs-lookup"><span data-stu-id="62aef-526">The <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> property determines the amount of time a <xref:System.Net.Sockets.TcpClient> will wait before receiving the number of bytes returned.</span></span> <span data-ttu-id="62aef-527">Wenn das Timeout, bevor abläuft die <xref:System.Net.Sockets.Socket.Send%2A> Methode erfolgreich ausgeführt wird, <xref:System.Net.Sockets.TcpClient> löst eine <xref:System.Net.Sockets.SocketException>.</span><span class="sxs-lookup"><span data-stu-id="62aef-527">If the time-out expires before the <xref:System.Net.Sockets.Socket.Send%2A> method successfully completes, <xref:System.Net.Sockets.TcpClient> will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="62aef-528">Es ist kein Timeout erfolgt standardmäßig ein.</span><span class="sxs-lookup"><span data-stu-id="62aef-528">There is no time-out by default.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="62aef-529">Das folgende Codebeispiel legt fest, und ruft die <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> Wert.</span><span class="sxs-lookup"><span data-stu-id="62aef-529">The following code example sets and gets the <xref:System.Net.Sockets.TcpClient.SendTimeout%2A> value.</span></span>  
  
 [!code-cpp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/cpp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CPP/source.cpp#11)]
 [!code-csharp[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/csharp/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/CS/source.cs#11)]
 [!code-vb[ClassicTcpClient.PublicMethodsAndPropertiesExample#11](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ClassicTcpClient.PublicMethodsAndPropertiesExample/VB/source.vb#11)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)" />
        <altmember cref="P:System.Net.Sockets.TcpClient.ReceiveTimeout" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpClient.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>