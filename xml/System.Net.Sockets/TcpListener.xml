<Type Name="TcpListener" FullName="System.Net.Sockets.TcpListener">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4a028337c0e7cb9d49349dcd2048c6f2b3f89e3b" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83946519" /></Metadata><TypeSignature Language="C#" Value="public class TcpListener" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TcpListener extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Net.Sockets.TcpListener" />
  <TypeSignature Language="VB.NET" Value="Public Class TcpListener" />
  <TypeSignature Language="C++ CLI" Value="public ref class TcpListener" />
  <TypeSignature Language="F#" Value="type TcpListener = class" />
  <AssemblyInfo>
    <AssemblyName>System.Net.Sockets</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.2.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeForwardingChain>
    <TypeForwarding From="netstandard" FromVersion="2.1.0.0" To="System.Net.Sockets" ToVersion="5.0.0.0" FrameworkAlternate="net-5.0" />
  </TypeForwardingChain>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="69b2e-101">Überwacht Verbindungen von TCP-Netzwerkclients.</span><span class="sxs-lookup"><span data-stu-id="69b2e-101">Listens for connections from TCP network clients.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-102">Die <xref:System.Net.Sockets.TcpListener>-Klasse stellt einfache Methoden bereit, die eingehende Verbindungsanforderungen beim Blockieren des synchronen Modus lauschen und akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-102">The <xref:System.Net.Sockets.TcpListener> class provides simple methods that listen for and accept incoming connection requests in blocking synchronous mode.</span></span> <span data-ttu-id="69b2e-103">Sie können entweder eine <xref:System.Net.Sockets.TcpClient> oder eine <xref:System.Net.Sockets.Socket> verwenden, um eine Verbindung mit einem <xref:System.Net.Sockets.TcpListener>herzustellen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-103">You can use either a <xref:System.Net.Sockets.TcpClient> or a <xref:System.Net.Sockets.Socket> to connect with a <xref:System.Net.Sockets.TcpListener>.</span></span> <span data-ttu-id="69b2e-104">Erstellen Sie eine <xref:System.Net.Sockets.TcpListener> mit einem <xref:System.Net.IPEndPoint>, einer lokalen IP-Adresse und einer Portnummer oder nur einer Portnummer.</span><span class="sxs-lookup"><span data-stu-id="69b2e-104">Create a <xref:System.Net.Sockets.TcpListener> using an <xref:System.Net.IPEndPoint>, a Local IP address and port number, or just a port number.</span></span> <span data-ttu-id="69b2e-105">Geben Sie <xref:System.Net.IPAddress.Any> für die lokale IP-Adresse und den Wert 0 für die lokale Portnummer an, wenn der zugrunde liegende Dienstanbieter diese Werte zuweisen soll.</span><span class="sxs-lookup"><span data-stu-id="69b2e-105">Specify <xref:System.Net.IPAddress.Any> for the local IP address and 0 for the local port number if you want the underlying service provider to assign those values for you.</span></span> <span data-ttu-id="69b2e-106">Wenn Sie sich dafür entscheiden, können Sie die <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A>-Eigenschaft verwenden, um die zugewiesenen Informationen zu identifizieren, nachdem der Socket eine Verbindung hergestellt hat.</span><span class="sxs-lookup"><span data-stu-id="69b2e-106">If you choose to do this, you can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the assigned information, after the socket has connected.</span></span>  
  
 <span data-ttu-id="69b2e-107">Verwenden Sie die <xref:System.Net.Sockets.TcpListener.Start%2A>-Methode, um das Lauschen auf eingehende Verbindungsanforderungen zu starten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-107">Use the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests.</span></span> <span data-ttu-id="69b2e-108"><xref:System.Net.Sockets.TcpListener.Start%2A> werden eingehende Verbindungen in die Warteschlange eingereiht, bis Sie die <xref:System.Net.Sockets.TcpListener.Stop%2A>-Methode oder <xref:System.Net.Sockets.SocketOptionName.MaxConnections>in der Warteschlange aufgerufen haben.</span><span class="sxs-lookup"><span data-stu-id="69b2e-108"><xref:System.Net.Sockets.TcpListener.Start%2A> will queue incoming connections until you either call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method or it has queued <xref:System.Net.Sockets.SocketOptionName.MaxConnections>.</span></span> <span data-ttu-id="69b2e-109">Verwenden Sie entweder <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> oder <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>, um eine Verbindung aus der Warteschlange für eingehende Verbindungsanforderungen abzurufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-109">Use either <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> to pull a connection from the incoming connection request queue.</span></span> <span data-ttu-id="69b2e-110">Diese beiden Methoden werden blockiert.</span><span class="sxs-lookup"><span data-stu-id="69b2e-110">These two methods will block.</span></span> <span data-ttu-id="69b2e-111">Wenn Sie das Blockieren vermeiden möchten, können Sie zuerst die <xref:System.Net.Sockets.TcpListener.Pending%2A>-Methode verwenden, um zu bestimmen, ob Verbindungsanforderungen in der Warteschlange verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="69b2e-111">If you want to avoid blocking, you can use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method first to determine if connection requests are available in the queue.</span></span>  
  
 <span data-ttu-id="69b2e-112">Ruft die <xref:System.Net.Sockets.TcpListener.Stop%2A>-Methode auf, um die <xref:System.Net.Sockets.TcpListener>zu schließen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-112">Call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-113">Die <xref:System.Net.Sockets.TcpListener.Stop%2A>-Methode schließt keine akzeptierten Verbindungen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-113">The <xref:System.Net.Sockets.TcpListener.Stop%2A> method does not close any accepted connections.</span></span> <span data-ttu-id="69b2e-114">Sie sind dafür verantwortlich, diese separat zu schließen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-114">You are responsible for closing these separately.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-115">Im folgenden Codebeispiel wird eine <xref:System.Net.Sockets.TcpListener>erstellt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-115">The following code example creates a <xref:System.Net.Sockets.TcpListener>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 <span data-ttu-id="69b2e-116">Ein Client Beispiel finden Sie unter <xref:System.Net.Sockets.TcpClient>.</span><span class="sxs-lookup"><span data-stu-id="69b2e-116">See <xref:System.Net.Sockets.TcpClient> for a client example.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Net.Sockets.TcpClient" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69b2e-117">Initialisiert eine neue Instanz der Klasse <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-117">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener port" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
          <AttributeName>System.Obsolete("Use TcpListener (IPAddress address, int port) instead")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1;netcore-3.1;net-5.0">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use TcpListener(IPAddress localaddr, int port) instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.Obsolete("Use TcpListener(IPAddress localaddr, int port).")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use TcpListener(IPAddress localaddr, int port) instead. https://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0">
          <AttributeName>System.Obsolete("This method has been deprecated. Please use TcpListener(IPAddress localaddr, int port) instead. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="69b2e-118">Der Anschluss, der auf eingehende Verbindungsversuche überwacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="69b2e-118">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="69b2e-119">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.TcpListener" />-Klasse, die den angegebenen Anschluss überwacht.</span><span class="sxs-lookup"><span data-stu-id="69b2e-119">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens on the specified port.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-120">Dieser Konstruktor ist veraltet.</span><span class="sxs-lookup"><span data-stu-id="69b2e-120">This constructor is obsolete.</span></span> <span data-ttu-id="69b2e-121">Verwenden Sie die <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType>-oder <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType>-Konstruktoren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-121">Use the <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPAddress%2CSystem.Int32%29?displayProperty=nameWithType> or <xref:System.Net.Sockets.TcpListener.%23ctor%28System.Net.IPEndPoint%29?displayProperty=nameWithType> constructors.</span></span>  
  
 <span data-ttu-id="69b2e-122">Mit diesem Konstruktor können Sie die Portnummer angeben, auf der auf eingehende Verbindungsversuche gelauscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="69b2e-122">This constructor allows you to specify the port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="69b2e-123">Mit diesem Konstruktor weist der zugrunde liegende Dienstanbieter die am besten geeignete Netzwerkadresse zu.</span><span class="sxs-lookup"><span data-stu-id="69b2e-123">With this constructor, the underlying service provider assigns the most appropriate network address.</span></span> <span data-ttu-id="69b2e-124">Wenn Sie nicht sicher sind, welcher lokale Port verwendet wird, können Sie für die Portnummer 0 angeben.</span><span class="sxs-lookup"><span data-stu-id="69b2e-124">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="69b2e-125">In diesem Fall weist der Dienstanbieter eine verfügbare kurzlebige Portnummer zu.</span><span class="sxs-lookup"><span data-stu-id="69b2e-125">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="69b2e-126">Wenn Sie diesen Ansatz verwenden, können Sie ermitteln, welche Adresse und Portnummer des lokalen Netzwerks mithilfe der <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A>-Eigenschaft zugewiesen wurden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-126">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="69b2e-127">Ruft die <xref:System.Net.Sockets.TcpListener.Start%2A>-Methode auf, um mit der Überwachung eingehender Verbindungsversuche zu beginnen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-127">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-128">Im folgenden Codebeispiel wird eine <xref:System.Net.Sockets.TcpListener> mit einer lokalen Portnummer erstellt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-128">The following code example creates a <xref:System.Net.Sockets.TcpListener> using a local port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#3)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#3)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="69b2e-129"><paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-129"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPEndPoint localEP);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPEndPoint localEP) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPEndPoint)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localEP As IPEndPoint)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPEndPoint ^ localEP);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPEndPoint -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener localEP" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localEP" Type="System.Net.IPEndPoint" />
      </Parameters>
      <Docs>
        <param name="localEP"><span data-ttu-id="69b2e-130">Ein <see cref="T:System.Net.IPEndPoint" />, der den lokalen Endpunkt darstellt, an den der Listener-<see cref="T:System.Net.Sockets.Socket" /> gebunden werden soll.</span><span class="sxs-lookup"><span data-stu-id="69b2e-130">An <see cref="T:System.Net.IPEndPoint" /> that represents the local endpoint to which to bind the listener <see cref="T:System.Net.Sockets.Socket" />.</span></span></param>
        <summary><span data-ttu-id="69b2e-131">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.TcpListener" />-Klasse mit dem angegebenen lokalen Endpunkt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-131">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class with the specified local endpoint.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-132">Mit diesem Konstruktor können Sie die lokale IP-Adresse und die Portnummer angeben, für die auf eingehende Verbindungsversuche gelauscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="69b2e-132">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="69b2e-133">Bevor Sie diesen Konstruktor verwenden, müssen Sie eine <xref:System.Net.IPEndPoint> mithilfe der gewünschten lokalen IP-Adresse und Portnummer erstellen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-133">Before using this constructor, you must create an <xref:System.Net.IPEndPoint> using the desired local IP address and port number.</span></span> <span data-ttu-id="69b2e-134">Übergeben Sie diese <xref:System.Net.IPEndPoint> als `localEP`-Parameter an den Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="69b2e-134">Pass this <xref:System.Net.IPEndPoint> to the constructor as the `localEP` parameter.</span></span>  
  
 <span data-ttu-id="69b2e-135">Wenn Sie nicht sicher sind, welche lokale Adresse zugewiesen ist, können Sie eine <xref:System.Net.IPEndPoint> mit <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> als Adress Parameter erstellen, und der zugrunde liegende Dienstanbieter weist die am besten geeignete Netzwerkadresse zu.</span><span class="sxs-lookup"><span data-stu-id="69b2e-135">If you do not care which local address is assigned, you can create an <xref:System.Net.IPEndPoint> using <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> as the address parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="69b2e-136">Dies kann dazu beitragen, Ihre Anwendung zu vereinfachen, wenn Sie über mehrere Netzwerkschnittstellen verfügen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-136">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="69b2e-137">Wenn Sie nicht sicher sind, welcher lokale Port verwendet wird, können Sie eine <xref:System.Net.IPEndPoint> mit 0 für die Portnummer erstellen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-137">If you do not care which local port is used, you can create an <xref:System.Net.IPEndPoint> using 0 for the port number.</span></span> <span data-ttu-id="69b2e-138">In diesem Fall weist der Dienstanbieter eine verfügbare kurzlebige Portnummer zu.</span><span class="sxs-lookup"><span data-stu-id="69b2e-138">In this case, the service provider will assign an available ephemeral port number.</span></span> <span data-ttu-id="69b2e-139">Wenn Sie diesen Ansatz verwenden, können Sie ermitteln, welche Adresse und Portnummer des lokalen Netzwerks mithilfe der <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A>-Eigenschaft zugewiesen wurden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-139">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="69b2e-140">Ruft die <xref:System.Net.Sockets.TcpListener.Start%2A>-Methode auf, um mit der Überwachung eingehender Verbindungsversuche zu beginnen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-140">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-141">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-141">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-142">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-142">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-143">Im folgenden Codebeispiel wird eine Instanz der <xref:System.Net.Sockets.TcpListener>-Klasse mit dem lokalen Endpunkt erstellt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-143">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using the local endpoint.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69b2e-144"><paramref name="localEP" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="69b2e-144"><paramref name="localEP" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Net.IPEndPoint" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TcpListener (System.Net.IPAddress localaddr, int port);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Net.IPAddress localaddr, int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (localaddr As IPAddress, port As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TcpListener(System::Net::IPAddress ^ localaddr, int port);" />
      <MemberSignature Language="F#" Value="new System.Net.Sockets.TcpListener : System.Net.IPAddress * int -&gt; System.Net.Sockets.TcpListener" Usage="new System.Net.Sockets.TcpListener (localaddr, port)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="localaddr" Type="System.Net.IPAddress" />
        <Parameter Name="port" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="localaddr"><span data-ttu-id="69b2e-145">Eine <see cref="T:System.Net.IPAddress" />, die die lokale IP-Adresse darstellt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-145">An <see cref="T:System.Net.IPAddress" /> that represents the local IP address.</span></span></param>
        <param name="port"><span data-ttu-id="69b2e-146">Der Anschluss, der auf eingehende Verbindungsversuche überwacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="69b2e-146">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="69b2e-147">Initialisiert eine neue Instanz der <see cref="T:System.Net.Sockets.TcpListener" />-Klasse, die die eingehenden Verbindungsversuche mit der angegebenen lokalen IP-Adresse und Anschlussnummer überwacht.</span><span class="sxs-lookup"><span data-stu-id="69b2e-147">Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener" /> class that listens for incoming connection attempts on the specified local IP address and port number.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-148">Mit diesem Konstruktor können Sie die lokale IP-Adresse und die Portnummer angeben, für die auf eingehende Verbindungsversuche gelauscht werden soll.</span><span class="sxs-lookup"><span data-stu-id="69b2e-148">This constructor allows you to specify the local IP address and port number on which to listen for incoming connection attempts.</span></span> <span data-ttu-id="69b2e-149">Vor dem Aufrufen dieses Konstruktors müssen Sie zuerst einen <xref:System.Net.IPAddress> mithilfe der gewünschten lokalen Adresse erstellen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-149">Before calling this constructor you must first create an <xref:System.Net.IPAddress> using the desired local address.</span></span> <span data-ttu-id="69b2e-150">Übergeben Sie diese <xref:System.Net.IPAddress> als `localaddr`-Parameter an den Konstruktor.</span><span class="sxs-lookup"><span data-stu-id="69b2e-150">Pass this <xref:System.Net.IPAddress> to the constructor as the `localaddr` parameter.</span></span> <span data-ttu-id="69b2e-151">Wenn Sie nicht sicher sind, welche lokale Adresse zugewiesen ist, geben Sie <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> für den Parameter `localaddr` an, und der zugrunde liegende Dienstanbieter weist die am besten geeignete Netzwerkadresse zu.</span><span class="sxs-lookup"><span data-stu-id="69b2e-151">If you do not care which local address is assigned, specify <xref:System.Net.IPAddress.Any?displayProperty=nameWithType> for the `localaddr` parameter, and the underlying service provider will assign the most appropriate network address.</span></span> <span data-ttu-id="69b2e-152">Dies kann dazu beitragen, Ihre Anwendung zu vereinfachen, wenn Sie über mehrere Netzwerkschnittstellen verfügen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-152">This might help simplify your application if you have multiple network interfaces.</span></span> <span data-ttu-id="69b2e-153">Wenn Sie nicht sicher sind, welcher lokale Port verwendet wird, können Sie für die Portnummer 0 angeben.</span><span class="sxs-lookup"><span data-stu-id="69b2e-153">If you do not care which local port is used, you can specify 0 for the port number.</span></span> <span data-ttu-id="69b2e-154">In diesem Fall weist der Dienstanbieter eine verfügbare Portnummer zwischen 1024 und 5000 zu.</span><span class="sxs-lookup"><span data-stu-id="69b2e-154">In this case, the service provider will assign an available port number between 1024 and 5000.</span></span> <span data-ttu-id="69b2e-155">Wenn Sie diesen Ansatz verwenden, können Sie ermitteln, welche Adresse und Portnummer des lokalen Netzwerks mithilfe der <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A>-Eigenschaft zugewiesen wurden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-155">If you use this approach, you can discover what local network address and port number has been assigned by using the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property.</span></span>  
  
 <span data-ttu-id="69b2e-156">Ruft die <xref:System.Net.Sockets.TcpListener.Start%2A>-Methode auf, um mit der Überwachung eingehender Verbindungsversuche zu beginnen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-156">Call the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection attempts.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-157">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-157">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-158">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-158">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-159">Im folgenden Codebeispiel wird eine Instanz der <xref:System.Net.Sockets.TcpListener>-Klasse unter Verwendung einer lokalen IP-Adresse und Portnummer erstellt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-159">The following code example creates an instance of the <xref:System.Net.Sockets.TcpListener> class using a local IP address and port number.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#2)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#2)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69b2e-160"><paramref name="localaddr" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="69b2e-160"><paramref name="localaddr" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="69b2e-161"><paramref name="port" /> liegt nicht zwischen <see cref="F:System.Net.IPEndPoint.MinPort" /> und <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-161"><paramref name="port" /> is not between <see cref="F:System.Net.IPEndPoint.MinPort" /> and <see cref="F:System.Net.IPEndPoint.MaxPort" />.</span></span></exception>
        <altmember cref="T:System.Net.IPAddress" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket AcceptSocket ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket AcceptSocket() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocket" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocket () As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ AcceptSocket();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocket : unit -&gt; System.Net.Sockets.Socket" Usage="tcpListener.AcceptSocket " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b2e-162">Nimmt eine ausstehende Verbindungsanforderung an.</span><span class="sxs-lookup"><span data-stu-id="69b2e-162">Accepts a pending connection request.</span></span></summary>
        <returns><span data-ttu-id="69b2e-163">Ein <see cref="T:System.Net.Sockets.Socket" /> zum Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-163">A <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-164"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> ist eine blockierende Methode, die eine <xref:System.Net.Sockets.Socket> zurückgibt, die Sie zum Senden und empfangen von Daten verwenden können.</span><span class="sxs-lookup"><span data-stu-id="69b2e-164"><xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> is a blocking method that returns a <xref:System.Net.Sockets.Socket> that you can use to send and receive data.</span></span> <span data-ttu-id="69b2e-165">Wenn Sie Blockierungen vermeiden möchten, verwenden Sie die <xref:System.Net.Sockets.TcpListener.Pending%2A>-Methode, um zu bestimmen, ob Verbindungsanforderungen in der Warteschlange für eingehende Verbindungen verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="69b2e-165">If you want to avoid blocking, use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue.</span></span>  
  
 <span data-ttu-id="69b2e-166">Der zurückgegebene <xref:System.Net.Sockets.Socket> wird mit der IP-Adresse und der Portnummer des Remote Hosts initialisiert.</span><span class="sxs-lookup"><span data-stu-id="69b2e-166">The <xref:System.Net.Sockets.Socket> returned is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="69b2e-167">Sie können jede der <xref:System.Net.Sockets.Socket.Send%2A>-und <xref:System.Net.Sockets.Socket.Receive%2A> Methoden verwenden, die in der <xref:System.Net.Sockets.Socket>-Klasse zur Kommunikation mit dem Remote Host verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="69b2e-167">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="69b2e-168">Wenn Sie die <xref:System.Net.Sockets.Socket>nicht mehr benötigen, müssen Sie die <xref:System.Net.Sockets.Socket.Close%2A>-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-168">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="69b2e-169">Wenn Ihre Anwendung relativ einfach ist, sollten Sie die <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>-Methode anstelle der <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-169">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="69b2e-170"><xref:System.Net.Sockets.TcpClient> bietet Ihnen einfache Methoden zum Senden und empfangen von Daten über ein Netzwerk im Modus zum Blockieren des synchronen Modus.</span><span class="sxs-lookup"><span data-stu-id="69b2e-170"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-171">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-171">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-172">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-172">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-173">Im folgenden Codebeispiel wird die <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>-Methode verwendet, um eine <xref:System.Net.Sockets.Socket>zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="69b2e-173">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method is used to return a <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="69b2e-174">Diese <xref:System.Net.Sockets.Socket> wird für die Kommunikation mit dem neu verbundenen Client verwendet.</span><span class="sxs-lookup"><span data-stu-id="69b2e-174">This <xref:System.Net.Sockets.Socket> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CPP/source.cpp#4)]
 [!code-csharp[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/CS/source.cs#4)]
 [!code-vb[Classic TcpListener.PublicMethodsAndPropertiesExample#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListener.PublicMethodsAndPropertiesExample/VB/source.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="69b2e-175">Der Listener wurde nicht mit einem Aufruf von <see cref="M:System.Net.Sockets.TcpListener.Start" /> gestartet.</span><span class="sxs-lookup"><span data-stu-id="69b2e-175">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptSocketAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt; AcceptSocketAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.Socket&gt; AcceptSocketAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptSocketAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptSocketAsync () As Task(Of Socket)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::Socket ^&gt; ^ AcceptSocketAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptSocketAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;" Usage="tcpListener.AcceptSocketAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.Socket&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b2e-176">Nimmt eine ausstehende Aufforderung zum Aufbau einer Verbindung als asynchroner Vorgang an.</span><span class="sxs-lookup"><span data-stu-id="69b2e-176">Accepts a pending connection request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="69b2e-177">Das Taskobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-177">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="69b2e-178">Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt <see cref="T:System.Net.Sockets.Socket" /> zurück, das verwendet wird, um Daten zu senden und zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-178">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-179">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="69b2e-179">This operation will not block.</span></span> <span data-ttu-id="69b2e-180">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die Socketverbindung akzeptiert wurde.</span><span class="sxs-lookup"><span data-stu-id="69b2e-180">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the socket connection has been accepted.</span></span>  
  
 <span data-ttu-id="69b2e-181">Das in <xref:System.Threading.Tasks.Task%601> zurückgegebene <xref:System.Net.Sockets.Socket> wird mit der IP-Adresse und der Portnummer des Remote Hosts initialisiert.</span><span class="sxs-lookup"><span data-stu-id="69b2e-181">The <xref:System.Net.Sockets.Socket> returned in <xref:System.Threading.Tasks.Task%601> is initialized with the IP address and port number of the remote host.</span></span> <span data-ttu-id="69b2e-182">Sie können jede der <xref:System.Net.Sockets.Socket.Send%2A>-und <xref:System.Net.Sockets.Socket.Receive%2A> Methoden verwenden, die in der <xref:System.Net.Sockets.Socket>-Klasse zur Kommunikation mit dem Remote Host verfügbar sind.</span><span class="sxs-lookup"><span data-stu-id="69b2e-182">You can use any of the <xref:System.Net.Sockets.Socket.Send%2A> and <xref:System.Net.Sockets.Socket.Receive%2A> methods available in the <xref:System.Net.Sockets.Socket> class to communicate with the remote host.</span></span> <span data-ttu-id="69b2e-183">Wenn Sie die <xref:System.Net.Sockets.Socket>nicht mehr benötigen, müssen Sie die <xref:System.Net.Sockets.Socket.Close%2A>-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-183">When you are finished using the <xref:System.Net.Sockets.Socket>, be sure to call its <xref:System.Net.Sockets.Socket.Close%2A> method.</span></span> <span data-ttu-id="69b2e-184">Wenn Ihre Anwendung relativ einfach ist, sollten Sie die <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>-Methode anstelle der <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>-Methode verwenden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-184">If your application is relatively simple, consider using the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method rather than the <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A> method.</span></span> <span data-ttu-id="69b2e-185"><xref:System.Net.Sockets.TcpClient> bietet Ihnen einfache Methoden zum Senden und empfangen von Daten über ein Netzwerk im Modus zum Blockieren des synchronen Modus.</span><span class="sxs-lookup"><span data-stu-id="69b2e-185"><xref:System.Net.Sockets.TcpClient> provides you with simple methods for sending and receiving data over a network in blocking synchronous mode.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-186">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-186">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-187">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-187">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="69b2e-188">Der Listener wurde nicht mit einem Aufruf von <see cref="M:System.Net.Sockets.TcpListener.Start" /> gestartet.</span><span class="sxs-lookup"><span data-stu-id="69b2e-188">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Pending" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient AcceptTcpClient ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient AcceptTcpClient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClient () As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ AcceptTcpClient();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClient : unit -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.AcceptTcpClient " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b2e-189">Nimmt eine ausstehende Verbindungsanforderung an.</span><span class="sxs-lookup"><span data-stu-id="69b2e-189">Accepts a pending connection request.</span></span></summary>
        <returns><span data-ttu-id="69b2e-190">Ein <see cref="T:System.Net.Sockets.TcpClient" /> zum Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-190">A <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-191"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> ist eine blockierende Methode, die eine <xref:System.Net.Sockets.TcpClient> zurückgibt, die Sie zum Senden und empfangen von Daten verwenden können.</span><span class="sxs-lookup"><span data-stu-id="69b2e-191"><xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> is a blocking method that returns a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="69b2e-192">Verwenden Sie die <xref:System.Net.Sockets.TcpListener.Pending%2A>-Methode, um zu bestimmen, ob Verbindungsanforderungen in der Warteschlange für eingehende Verbindungen verfügbar sind, wenn Sie Blockierungen vermeiden möchten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-192">Use the <xref:System.Net.Sockets.TcpListener.Pending%2A> method to determine if connection requests are available in the incoming connection queue if you want to avoid blocking.</span></span>  
  
 <span data-ttu-id="69b2e-193">Verwenden Sie die <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType>-Methode, um die zugrunde liegende <xref:System.Net.Sockets.NetworkStream> der zurückgegebenen <xref:System.Net.Sockets.TcpClient>abzurufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-193">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="69b2e-194">Der <xref:System.Net.Sockets.NetworkStream> stellt Ihnen Methoden zum Senden und empfangen mit dem Remote Host zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="69b2e-194">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="69b2e-195">Wenn Sie die <xref:System.Net.Sockets.TcpClient>durchlaufen, achten Sie darauf, die <xref:System.Net.Sockets.TcpClient.Close%2A>-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-195">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="69b2e-196">Wenn Sie mehr Flexibilität als ein <xref:System.Net.Sockets.TcpClient> Angebote wünschen, sollten Sie die Verwendung <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>in Erwägung gezogen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-196">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-197">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-197">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-198">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-198">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-199">Im folgenden Codebeispiel wird die <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>-Methode verwendet, um eine <xref:System.Net.Sockets.TcpClient>zurückzugeben.</span><span class="sxs-lookup"><span data-stu-id="69b2e-199">In the following code example, the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is used to return a <xref:System.Net.Sockets.TcpClient>.</span></span> <span data-ttu-id="69b2e-200">Diese <xref:System.Net.Sockets.TcpClient> wird für die Kommunikation mit dem neu verbundenen Client verwendet.</span><span class="sxs-lookup"><span data-stu-id="69b2e-200">This <xref:System.Net.Sockets.TcpClient> is used to communicate with the newly connected client.</span></span>  
  
 [!code-cpp[Classic TcpListenerExample#1](~/samples/snippets/cpp/VS_Snippets_Remoting/Classic TcpListenerExample/CPP/source.cpp#1)]
 [!code-csharp[Classic TcpListenerExample#1](~/samples/snippets/csharp/VS_Snippets_Remoting/Classic TcpListenerExample/CS/source.cs#1)]
 [!code-vb[Classic TcpListenerExample#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/Classic TcpListenerExample/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="69b2e-201">Der Listener wurde nicht mit einem Aufruf von <see cref="M:System.Net.Sockets.TcpListener.Start" /> gestartet.</span><span class="sxs-lookup"><span data-stu-id="69b2e-201">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="69b2e-202">Mit der <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />-Eigenschaft können Sie den spezifischen Fehlercode abrufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-202">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="69b2e-203">Wenn Sie diesen Code abgerufen haben, finden Sie in der Dokumentation zu API-Fehlercodes unter <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets, Version 2</see>, eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="69b2e-203">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="AcceptTcpClientAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task`1&lt;class System.Net.Sockets.TcpClient&gt; AcceptTcpClientAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AcceptTcpClientAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function AcceptTcpClientAsync () As Task(Of TcpClient)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task&lt;System::Net::Sockets::TcpClient ^&gt; ^ AcceptTcpClientAsync();" />
      <MemberSignature Language="F#" Value="member this.AcceptTcpClientAsync : unit -&gt; System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;" Usage="tcpListener.AcceptTcpClientAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Net.Sockets.TcpClient&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b2e-204">Nimmt eine ausstehende Aufforderung zum Aufbau einer Verbindung als asynchroner Vorgang an.</span><span class="sxs-lookup"><span data-stu-id="69b2e-204">Accepts a pending connection request as an asynchronous operation.</span></span></summary>
        <returns><span data-ttu-id="69b2e-205">Das Taskobjekt, das den asynchronen Vorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-205">The task object representing the asynchronous operation.</span></span> <span data-ttu-id="69b2e-206">Die <see cref="P:System.Threading.Tasks.Task`1.Result" />-Eigenschaft im Task-Objekt gibt <see cref="T:System.Net.Sockets.TcpClient" /> zurück, das verwendet wird, um Daten zu senden und zu empfangen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-206">The <see cref="P:System.Threading.Tasks.Task`1.Result" /> property on the task object returns a <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-207">Dieser Vorgang wird nicht blockiert.</span><span class="sxs-lookup"><span data-stu-id="69b2e-207">This operation will not block.</span></span> <span data-ttu-id="69b2e-208">Das zurückgegebene <xref:System.Threading.Tasks.Task%601> Objekt wird abgeschlossen, nachdem die TCP-Verbindung akzeptiert wurde.</span><span class="sxs-lookup"><span data-stu-id="69b2e-208">The returned <xref:System.Threading.Tasks.Task%601> object will complete after the TCP connection has been accepted.</span></span>  
  
 <span data-ttu-id="69b2e-209">Verwenden Sie die <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType>-Methode, um die zugrunde liegende <xref:System.Net.Sockets.NetworkStream> der zurückgegebenen <xref:System.Net.Sockets.TcpClient> in der <xref:System.Threading.Tasks.Task%601>abzurufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-209">Use the <xref:System.Net.Sockets.TcpClient.GetStream%2A?displayProperty=nameWithType> method to obtain the underlying <xref:System.Net.Sockets.NetworkStream> of the returned <xref:System.Net.Sockets.TcpClient> in the <xref:System.Threading.Tasks.Task%601>.</span></span> <span data-ttu-id="69b2e-210">Der <xref:System.Net.Sockets.NetworkStream> stellt Ihnen Methoden zum Senden und empfangen mit dem Remote Host zur Verfügung.</span><span class="sxs-lookup"><span data-stu-id="69b2e-210">The <xref:System.Net.Sockets.NetworkStream> will provide you with methods for sending and receiving with the remote host.</span></span> <span data-ttu-id="69b2e-211">Wenn Sie die <xref:System.Net.Sockets.TcpClient>durchlaufen, achten Sie darauf, die <xref:System.Net.Sockets.TcpClient.Close%2A>-Methode aufzurufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-211">When you are through with the <xref:System.Net.Sockets.TcpClient>, be sure to call its <xref:System.Net.Sockets.TcpClient.Close%2A> method.</span></span> <span data-ttu-id="69b2e-212">Wenn Sie mehr Flexibilität als ein <xref:System.Net.Sockets.TcpClient> Angebote wünschen, sollten Sie die Verwendung <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> oder <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>in Erwägung gezogen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-212">If you want greater flexibility than a <xref:System.Net.Sockets.TcpClient> offers, consider using <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> or <xref:System.Net.Sockets.TcpListener.AcceptSocketAsync%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-213">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-213">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-214">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-214">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="69b2e-215">Der Listener wurde nicht mit einem Aufruf von <see cref="M:System.Net.Sockets.TcpListener.Start" /> gestartet.</span><span class="sxs-lookup"><span data-stu-id="69b2e-215">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="69b2e-216">Mit der <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />-Eigenschaft können Sie den spezifischen Fehlercode abrufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-216">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="69b2e-217">Wenn Sie diesen Code abgerufen haben, finden Sie in der Dokumentation zu API-Fehlercodes unter <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets, Version 2</see>, eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="69b2e-217">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="T:System.Net.Sockets.TcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="T:System.Net.Sockets.NetworkStream" />
      </Docs>
    </Member>
    <Member MemberName="Active">
      <MemberSignature Language="C#" Value="protected bool Active { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Active" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Active" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Active As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Active { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.Active : bool" Usage="System.Net.Sockets.TcpListener.Active" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69b2e-218">Ruft einen Wert ab, der angibt, ob <see cref="T:System.Net.Sockets.TcpListener" /> Clientverbindungen aktiv überwacht.</span><span class="sxs-lookup"><span data-stu-id="69b2e-218">Gets a value that indicates whether <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening for client connections.</span></span></summary>
        <value><span data-ttu-id="69b2e-219"><see langword="true" />, wenn <see cref="T:System.Net.Sockets.TcpListener" /> aktiv überwacht, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-219"><see langword="true" /> if <see cref="T:System.Net.Sockets.TcpListener" /> is actively listening; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-220">Klassen, die von <xref:System.Net.Sockets.TcpListener> abgeleitet werden, können diese Eigenschaft verwenden, um zu bestimmen, ob die <xref:System.Net.Sockets.Socket> derzeit auf eingehende Verbindungsversuche lauscht.</span><span class="sxs-lookup"><span data-stu-id="69b2e-220">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to determine if the <xref:System.Net.Sockets.Socket> is currently listening for incoming connection attempts.</span></span> <span data-ttu-id="69b2e-221">Die <xref:System.Net.Sockets.TcpClient.Active%2A>-Eigenschaft kann verwendet werden, um redundante <xref:System.Net.Sockets.TcpListener.Start%2A> Versuche zu vermeiden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-221">The <xref:System.Net.Sockets.TcpClient.Active%2A> property can be used to avoid redundant <xref:System.Net.Sockets.TcpListener.Start%2A> attempts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
      </Docs>
    </Member>
    <Member MemberName="AllowNatTraversal">
      <MemberSignature Language="C#" Value="public void AllowNatTraversal (bool allowed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AllowNatTraversal(bool allowed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AllowNatTraversal (allowed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AllowNatTraversal(bool allowed);" />
      <MemberSignature Language="F#" Value="member this.AllowNatTraversal : bool -&gt; unit" Usage="tcpListener.AllowNatTraversal allowed" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="allowed" Type="System.Boolean" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="allowed"><span data-ttu-id="69b2e-222">Ein boolescher Wert, der angibt, ob die NAT-Überquerung aktiviert oder deaktiviert werden soll.</span><span class="sxs-lookup"><span data-stu-id="69b2e-222">A Boolean value that specifies whether to enable or disable NAT traversal.</span></span></param>
        <summary><span data-ttu-id="69b2e-223">Aktiviert oder deaktiviert die NAT-Überquerung (Netzwerkadressenübersetzung) für eine <see cref="T:System.Net.Sockets.TcpListener" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="69b2e-223">Enables or disables Network Address Translation (NAT) traversal on a <see cref="T:System.Net.Sockets.TcpListener" /> instance.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-224">Die <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A>-Methode wird verwendet, um den NAT-Durchlauf für eine <xref:System.Net.Sockets.TcpListener> Instanz zu aktivieren oder zu deaktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-224">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is used to enable or disable NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span> <span data-ttu-id="69b2e-225">NAT-Durchlauf kann mithilfe von Teredo, IPv6-zu-IPv4 oder einem ISATAP-Tunnel bereitgestellt werden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-225">NAT traversal may be provided using Teredo, 6to4, or an ISATAP tunnel.</span></span>  
  
 <span data-ttu-id="69b2e-226">Wenn der `allowed`-Parameter false ist, wird die <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel>-Option für den zugeordneten Socket auf <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>festgelegt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-226">When the `allowed` parameter is false, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.EdgeRestricted>.</span></span> <span data-ttu-id="69b2e-227">Dadurch wird der NAT-Durchlauf für eine <xref:System.Net.Sockets.TcpListener> Instanz explizit deaktiviert.</span><span class="sxs-lookup"><span data-stu-id="69b2e-227">This explicitly disables NAT traversal for a <xref:System.Net.Sockets.TcpListener> instance.</span></span>  
  
 <span data-ttu-id="69b2e-228">Wenn der `allowed`-Parameter true ist, wird die <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel>-Option für den zugeordneten Socket auf <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>festgelegt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-228">When the `allowed` parameter is true, the <xref:System.Net.Sockets.SocketOptionName.IPProtectionLevel> option on the associated socket is set to <xref:System.Net.Sockets.IPProtectionLevel.Unrestricted>.</span></span> <span data-ttu-id="69b2e-229">Dies kann die NAT-Überquerung für eine <xref:System.Net.Sockets.TcpListener> abhängig von Firewallregeln auf dem System ermöglichen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-229">This may allow NAT traversal for a <xref:System.Net.Sockets.TcpListener> depending on firewall rules in place on the system.</span></span>  
  
 <span data-ttu-id="69b2e-230">Die <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A>-Methode muss aufgerufen werden, bevor die <xref:System.Net.Sockets.TcpListener.Start%2A>-Methode aufgerufen wird, um mit dem lauschen auf eingehende Verbindungsanforderungen (vor dem Binden des Sockets) zu beginnen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-230">The <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method must be invoked prior to calling the <xref:System.Net.Sockets.TcpListener.Start%2A> method to begin listening for incoming connection requests (before the socket is bound).</span></span> <span data-ttu-id="69b2e-231">Wenn <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A>-Methode nach der <xref:System.Net.Sockets.TcpListener.Start%2A>-Methode aufgerufen wird, wird eine <xref:System.InvalidOperationException> ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="69b2e-231">If <xref:System.Net.Sockets.TcpListener.AllowNatTraversal%2A> method is called after the <xref:System.Net.Sockets.TcpListener.Start%2A> method, then an <xref:System.InvalidOperationException> will be thrown.</span></span>  
  
 <span data-ttu-id="69b2e-232">Eine Teredo-Adresse ist eine IPv6-Adresse mit dem Präfix 2001::/32.</span><span class="sxs-lookup"><span data-stu-id="69b2e-232">A Teredo address is an IPv6 address with the prefix of 2001::/32.</span></span> <span data-ttu-id="69b2e-233">Teredo-Adressen können über die normale DNS-Namensauflösung zurückgegeben oder als eine IPv6-Adresse aufgezählt werden, die einer lokalen Schnittstelle zugewiesen ist.</span><span class="sxs-lookup"><span data-stu-id="69b2e-233">Teredo addresses can be returned through normal DNS name resolution or enumerated as an IPv6 address assigned to a local interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="69b2e-234">Die <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" />-Methode wird nach dem Aufruf der <see cref="M:System.Net.Sockets.TcpListener.Start" />-Methode aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-234">The <see cref="M:System.Net.Sockets.TcpListener.AllowNatTraversal(System.Boolean)" /> method was called after calling the <see cref="M:System.Net.Sockets.TcpListener.Start" /> method</span></span></exception>
        <altmember cref="P:System.Net.IPAddress.IsIPv6Teredo" />
        <altmember cref="T:System.Net.Sockets.IPProtectionLevel" />
        <altmember cref="F:System.Net.Sockets.SocketOptionName.IPProtectionLevel" />
        <altmember cref="M:System.Net.Sockets.Socket.SetIPProtectionLevel(System.Net.Sockets.IPProtectionLevel)" />
        <altmember cref="M:System.Net.Sockets.UdpClient.AllowNatTraversal(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptSocket">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptSocket (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptSocket(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptSocket (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptSocket(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptSocket : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptSocket (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="69b2e-235">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="69b2e-235">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="69b2e-236">Ein benutzerdefiniertes Objekt, das Informationen über den Annahmevorgang enthält.</span><span class="sxs-lookup"><span data-stu-id="69b2e-236">A user-defined object containing information about the accept operation.</span></span> <span data-ttu-id="69b2e-237">Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="callback" />-Delegaten übergeben.</span><span class="sxs-lookup"><span data-stu-id="69b2e-237">This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="69b2e-238">Beginnt einen asynchronen Vorgang, um eine eingehende Verbindung anzunehmen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-238">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
        <returns><span data-ttu-id="69b2e-239">Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Erstellung des <see cref="T:System.Net.Sockets.Socket" /> verweist.</span><span class="sxs-lookup"><span data-stu-id="69b2e-239">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.Socket" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-240">Der asynchrone <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> Vorgang muss abgeschlossen werden, indem die <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="69b2e-240">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method.</span></span> <span data-ttu-id="69b2e-241">In der Regel wird die-Methode vom `callback`-Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-241">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="69b2e-242">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="69b2e-242">This method does not block until the operation completes.</span></span> <span data-ttu-id="69b2e-243">Um zu blockieren, bis der Vorgang abgeschlossen ist, verwenden Sie die <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="69b2e-243">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
 <span data-ttu-id="69b2e-244">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Asynchrones Aufrufen synchroner Methoden](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span><span class="sxs-lookup"><span data-stu-id="69b2e-244">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-245">Sie können die <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A>-Eigenschaft des zurückgegebenen <xref:System.Net.Sockets.Socket> aufgerufen werden, um die Netzwerkadresse und die Portnummer des Remote Hosts zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-245">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-246">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie die <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>-Eigenschaft, um den spezifischen Fehlercode abzurufen. eine ausführliche Beschreibung des Fehlers finden Sie in der [API-Fehlercode Dokumentation von Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) .</span><span class="sxs-lookup"><span data-stu-id="69b2e-246">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-247">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-247">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-248">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-248">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-249">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A>-Methode, um einen Socket zu erstellen und zu verbinden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-249">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="69b2e-250">Der Rückruf Delegat ruft die <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A>-Methode auf, um die asynchrone Anforderung zu beenden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-250">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="69b2e-251">Beim Zugriff auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-251">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="69b2e-252">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-252">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="BeginAcceptTcpClient">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginAcceptTcpClient (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginAcceptTcpClient(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginAcceptTcpClient (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginAcceptTcpClient(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginAcceptTcpClient : AsyncCallback * obj -&gt; IAsyncResult" Usage="tcpListener.BeginAcceptTcpClient (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="state" Type="System.Object" Index="1" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="callback"><span data-ttu-id="69b2e-253">Ein <see cref="T:System.AsyncCallback" />-Delegat, der auf die Methode verweist, die bei Abschluss des Vorgangs aufgerufen werden soll.</span><span class="sxs-lookup"><span data-stu-id="69b2e-253">An <see cref="T:System.AsyncCallback" /> delegate that references the method to invoke when the operation is complete.</span></span></param>
        <param name="state"><span data-ttu-id="69b2e-254">Ein benutzerdefiniertes Objekt, das Informationen über den Annahmevorgang enthält.</span><span class="sxs-lookup"><span data-stu-id="69b2e-254">A user-defined object containing information about the accept operation.</span></span> <span data-ttu-id="69b2e-255">Dieses Objekt wird bei Abschluss des Vorgangs an den <paramref name="callback" />-Delegaten übergeben.</span><span class="sxs-lookup"><span data-stu-id="69b2e-255">This object is passed to the <paramref name="callback" /> delegate when the operation is complete.</span></span></param>
        <summary><span data-ttu-id="69b2e-256">Beginnt einen asynchronen Vorgang, um eine eingehende Verbindung anzunehmen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-256">Begins an asynchronous operation to accept an incoming connection attempt.</span></span></summary>
        <returns><span data-ttu-id="69b2e-257">Ein <see cref="T:System.IAsyncResult" />, das auf die asynchrone Erstellung des <see cref="T:System.Net.Sockets.TcpClient" /> verweist.</span><span class="sxs-lookup"><span data-stu-id="69b2e-257">An <see cref="T:System.IAsyncResult" /> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.TcpClient" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-258">Der asynchrone <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> Vorgang muss abgeschlossen werden, indem die <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A>-Methode aufgerufen wird.</span><span class="sxs-lookup"><span data-stu-id="69b2e-258">The asynchronous <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> operation must be completed by calling the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method.</span></span> <span data-ttu-id="69b2e-259">In der Regel wird die-Methode vom `callback`-Delegaten aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-259">Typically, the method is invoked by the `callback` delegate.</span></span>  
  
 <span data-ttu-id="69b2e-260">Diese Methode wird nicht blockiert, bis der Vorgang abgeschlossen ist.</span><span class="sxs-lookup"><span data-stu-id="69b2e-260">This method does not block until the operation completes.</span></span> <span data-ttu-id="69b2e-261">Um zu blockieren, bis der Vorgang abgeschlossen ist, verwenden Sie die <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="69b2e-261">To block until the operation completes, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
 <span data-ttu-id="69b2e-262">Ausführliche Informationen zur Verwendung des asynchronen Programmiermodells finden Sie unter [Asynchrones Aufrufen synchroner Methoden](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span><span class="sxs-lookup"><span data-stu-id="69b2e-262">For detailed information about using the asynchronous programming model, see [Calling Synchronous Methods Asynchronously](/dotnet/standard/asynchronous-programming-patterns/calling-synchronous-methods-asynchronously).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-263">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie die <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>-Eigenschaft, um den spezifischen Fehlercode abzurufen. eine ausführliche Beschreibung des Fehlers finden Sie in der [API-Fehlercode Dokumentation von Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) .</span><span class="sxs-lookup"><span data-stu-id="69b2e-263">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-264">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-264">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-265">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-265">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-266">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A>-Methode, um einen Socket zu erstellen und zu verbinden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-266">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="69b2e-267">Der Rückruf Delegat ruft die <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A>-Methode auf, um die asynchrone Anforderung zu beenden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-267">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="69b2e-268">Beim Zugriff auf den Socket ist ein Fehler aufgetreten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-268">An error occurred while attempting to access the socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="69b2e-269">Der <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-269">The <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Create">
      <MemberSignature Language="C#" Value="public static System.Net.Sockets.TcpListener Create (int port);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Net.Sockets.TcpListener Create(int32 port) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Create(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Create (port As Integer) As TcpListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Net::Sockets::TcpListener ^ Create(int port);" />
      <MemberSignature Language="F#" Value="static member Create : int -&gt; System.Net.Sockets.TcpListener" Usage="System.Net.Sockets.TcpListener.Create port" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpListener</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="port" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="port"><span data-ttu-id="69b2e-270">Der Anschluss, der auf eingehende Verbindungsversuche überwacht werden soll.</span><span class="sxs-lookup"><span data-stu-id="69b2e-270">The port on which to listen for incoming connection attempts.</span></span></param>
        <summary><span data-ttu-id="69b2e-271">Erstellt eine neue auf dem angegebenen Port lauschende <see cref="T:System.Net.Sockets.TcpListener" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="69b2e-271">Creates a new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span></span></summary>
        <returns><span data-ttu-id="69b2e-272">Eine neue auf dem angegebenen Port lauschende <see cref="T:System.Net.Sockets.TcpListener" />-Instanz.</span><span class="sxs-lookup"><span data-stu-id="69b2e-272">A new <see cref="T:System.Net.Sockets.TcpListener" /> instance to listen on the specified port.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptSocket">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket EndAcceptSocket (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.Socket EndAcceptSocket(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptSocket (asyncResult As IAsyncResult) As Socket" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::Socket ^ EndAcceptSocket(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptSocket : IAsyncResult -&gt; System.Net.Sockets.Socket" Usage="tcpListener.EndAcceptSocket asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="69b2e-273">Ein durch einen Aufruf der <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />-Methode zurückgegebenes <see cref="T:System.IAsyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-273">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="69b2e-274">Nimmt asynchron einen eingehenden Verbindungsversuch an und erstellt einen neuen <see cref="T:System.Net.Sockets.Socket" /> zum Behandeln der Remotehostkommunikation.</span><span class="sxs-lookup"><span data-stu-id="69b2e-274">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.Socket" /> to handle remote host communication.</span></span></summary>
        <returns><span data-ttu-id="69b2e-275">Ein <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-275">A <see cref="T:System.Net.Sockets.Socket" />.</span></span>  
  
<span data-ttu-id="69b2e-276">Ein <see cref="T:System.Net.Sockets.Socket" /> zum Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-276">The <see cref="T:System.Net.Sockets.Socket" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-277">Diese Methode wird blockiert, bis der Vorgang beendet ist.</span><span class="sxs-lookup"><span data-stu-id="69b2e-277">This method blocks until the operation is complete.</span></span> <span data-ttu-id="69b2e-278">Verwenden Sie die <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>-Methode, um diesen Vorgang synchron auszuführen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-278">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-279">Sie können die <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A>-Eigenschaft des zurückgegebenen <xref:System.Net.Sockets.Socket> aufgerufen werden, um die Netzwerkadresse und die Portnummer des Remote Hosts zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-279">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the returned <xref:System.Net.Sockets.Socket> to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-280">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie die <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>-Eigenschaft, um den spezifischen Fehlercode abzurufen. eine ausführliche Beschreibung des Fehlers finden Sie in der [API-Fehlercode Dokumentation von Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) .</span><span class="sxs-lookup"><span data-stu-id="69b2e-280">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-281">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-281">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-282">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-282">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-283">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A>-Methode, um einen Socket zu erstellen und zu verbinden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-283">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptSocket%2A> method to create and connect a socket.</span></span> <span data-ttu-id="69b2e-284">Der Rückruf Delegat ruft die <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A>-Methode auf, um die asynchrone Anforderung zu beenden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-284">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptSocket%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#4)]
 [!code-csharp[System.Net.Sockets.TcpListener1#4](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#4)]
 [!code-vb[System.Net.Sockets.TcpListener1#4](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="69b2e-285">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-285">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="69b2e-286">Der Parameter <paramref name="asyncResult" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-286">The <paramref name="asyncResult" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="69b2e-287">Der <paramref name="asyncResult" />-Parameter wurde nicht durch einen Aufruf der <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" />-Methode erstellt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-287">The <paramref name="asyncResult" /> parameter was not created by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptSocket(System.AsyncCallback,System.Object)" /> method.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="69b2e-288">Die <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" />-Methode wurde bereits zuvor aufgerufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-288">The <see cref="M:System.Net.Sockets.TcpListener.EndAcceptSocket(System.IAsyncResult)" /> method was previously called.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="69b2e-289">Fehler beim Zugriff auf den <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-289">An error occurred while attempting to access the <see cref="T:System.Net.Sockets.Socket" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EndAcceptTcpClient">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.TcpClient EndAcceptTcpClient (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Net.Sockets.TcpClient EndAcceptTcpClient(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Function EndAcceptTcpClient (asyncResult As IAsyncResult) As TcpClient" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Net::Sockets::TcpClient ^ EndAcceptTcpClient(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndAcceptTcpClient : IAsyncResult -&gt; System.Net.Sockets.TcpClient" Usage="tcpListener.EndAcceptTcpClient asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.TcpClient</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" Index="0" FrameworkAlternate="net-5.0;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="asyncResult"><span data-ttu-id="69b2e-290">Ein durch einen Aufruf der <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" />-Methode zurückgegebenes <see cref="T:System.IAsyncResult" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-290">An <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)" /> method.</span></span></param>
        <summary><span data-ttu-id="69b2e-291">Nimmt asynchron einen eingehenden Verbindungsversuch an und erstellt einen neuen <see cref="T:System.Net.Sockets.TcpClient" /> zum Behandeln der Remotehostkommunikation.</span><span class="sxs-lookup"><span data-stu-id="69b2e-291">Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.TcpClient" /> to handle remote host communication.</span></span></summary>
        <returns><span data-ttu-id="69b2e-292">Ein <see cref="T:System.Net.Sockets.TcpClient" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-292">A <see cref="T:System.Net.Sockets.TcpClient" />.</span></span>  
  
<span data-ttu-id="69b2e-293">Ein <see cref="T:System.Net.Sockets.TcpClient" /> zum Senden und Empfangen von Daten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-293">The <see cref="T:System.Net.Sockets.TcpClient" /> used to send and receive data.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-294">Diese Methode wird blockiert, bis der Vorgang beendet ist.</span><span class="sxs-lookup"><span data-stu-id="69b2e-294">This method blocks until the operation is complete.</span></span> <span data-ttu-id="69b2e-295">Verwenden Sie die <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>-Methode, um diesen Vorgang synchron auszuführen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-295">To perform this operation synchronously, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-296">Sie können die <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A>-Eigenschaft des zugrunde liegenden Sockets (<xref:System.Net.Sockets.TcpClient.Client%2A>) abrufen, um die Netzwerkadresse und die Portnummer des Remote Hosts zu identifizieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-296">You can call the <xref:System.Net.Sockets.Socket.RemoteEndPoint%2A> property of the underlying socket (<xref:System.Net.Sockets.TcpClient.Client%2A>) to identify the remote host's network address and port number.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-297">Wenn Sie eine <xref:System.Net.Sockets.SocketException>erhalten, verwenden Sie die <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>-Eigenschaft, um den spezifischen Fehlercode abzurufen. eine ausführliche Beschreibung des Fehlers finden Sie in der [API-Fehlercode Dokumentation von Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) .</span><span class="sxs-lookup"><span data-stu-id="69b2e-297">If you receive a <xref:System.Net.Sockets.SocketException>, use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-298">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-298">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-299">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-299">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-300">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A>-Methode, um einen Socket zu erstellen und zu verbinden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-300">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.BeginAcceptTcpClient%2A> method to create and connect a socket.</span></span> <span data-ttu-id="69b2e-301">Der Rückruf Delegat ruft die <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A>-Methode auf, um die asynchrone Anforderung zu beenden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-301">The callback delegate calls the <xref:System.Net.Sockets.TcpListener.EndAcceptTcpClient%2A> method to end the asynchronous request.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#5)]
 [!code-csharp[System.Net.Sockets.TcpListener1#5](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#5)]
 [!code-vb[System.Net.Sockets.TcpListener1#5](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExclusiveAddressUse">
      <MemberSignature Language="C#" Value="public bool ExclusiveAddressUse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExclusiveAddressUse" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberSignature Language="VB.NET" Value="Public Property ExclusiveAddressUse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExclusiveAddressUse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExclusiveAddressUse : bool with get, set" Usage="System.Net.Sockets.TcpListener.ExclusiveAddressUse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69b2e-302">Ruft einen <see cref="T:System.Boolean" />-Wert ab, der angibt, ob der <see cref="T:System.Net.Sockets.TcpListener" /> das Überwachen eines bestimmten Anschlusses durch nur einen einzigen zugrunde liegenden Socket zulässt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="69b2e-302">Gets or sets a <see cref="T:System.Boolean" /> value that specifies whether the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one underlying socket to listen to a specific port.</span></span></summary>
        <value><span data-ttu-id="69b2e-303"><see langword="true" />, wenn der <see cref="T:System.Net.Sockets.TcpListener" /> das Überwachen eines bestimmten Anschlusses durch nur einen einzigen <see cref="T:System.Net.Sockets.TcpListener" /> zulässt, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-303"><see langword="true" /> if the <see cref="T:System.Net.Sockets.TcpListener" /> allows only one <see cref="T:System.Net.Sockets.TcpListener" /> to listen to a specific port; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="69b2e-304">Für Windows Server 2003 und Windows XP Service Pack 2 oder höher ist der Standardwert <see langword="true" />, für alle anderen Versionen <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-304">The default is <see langword="true" /> for Windows Server 2003 and Windows XP Service Pack 2 and later, and <see langword="false" /> for all other versions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-305">Standardmäßig können mehrere Listener an einem bestimmten Port lauschen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-305">By default, multiple listeners can listen to a specific port.</span></span> <span data-ttu-id="69b2e-306">Allerdings kann nur einer der Listener Vorgänge für den Netzwerk Datenverkehr ausführen, der an den Port gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="69b2e-306">However, only one of the listeners can perform operations on the network traffic sent to the port.</span></span> <span data-ttu-id="69b2e-307">Wenn mehr als ein Listener versucht, eine Bindung an einen bestimmten Port durchzusetzen, verarbeitet der eine mit der spezifischeren IP-Adresse den Netzwerk Datenverkehr, der an diesen Port gesendet wird.</span><span class="sxs-lookup"><span data-stu-id="69b2e-307">If more than one listener attempts to bind to a particular port, then the one with the more specific IP address handles the network traffic sent to that port.</span></span> <span data-ttu-id="69b2e-308">Sie können die <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A>-Eigenschaft verwenden, um zu verhindern, dass mehrere Listener an einem bestimmten Port lauschen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-308">You can use the <xref:System.Net.Sockets.Socket.ExclusiveAddressUse%2A> property to prevent multiple listeners from listening to a specific port.</span></span>  
  
 <span data-ttu-id="69b2e-309">Legen Sie diese Eigenschaft vor dem Aufrufen von <xref:System.Net.Sockets.TcpListener.Start%2A>fest, oder rufen Sie die <xref:System.Net.Sockets.TcpListener.Stop%2A>-Methode auf, und legen Sie diese Eigenschaft</span><span class="sxs-lookup"><span data-stu-id="69b2e-309">Set this property before calling <xref:System.Net.Sockets.TcpListener.Start%2A>, or call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method and then set this property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-310">Im folgenden Codebeispiel wird die <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A>-Eigenschaft abgerufen und festgelegt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-310">The following code example gets and sets the <xref:System.Net.Sockets.TcpListener.ExclusiveAddressUse%2A> property.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#2)]
 [!code-csharp[System.Net.Sockets.TcpListener1#2](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#2)]
 [!code-vb[System.Net.Sockets.TcpListener1#2](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="69b2e-311">Der <see cref="T:System.Net.Sockets.TcpListener" /> wurde gestartet.</span><span class="sxs-lookup"><span data-stu-id="69b2e-311">The <see cref="T:System.Net.Sockets.TcpListener" /> has been started.</span></span> <span data-ttu-id="69b2e-312">Rufen Sie die <see cref="M:System.Net.Sockets.TcpListener.Stop" />-Methode auf, und legen Sie anschließend die <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" />-Eigenschaft fest.</span><span class="sxs-lookup"><span data-stu-id="69b2e-312">Call the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method and then set the <see cref="P:System.Net.Sockets.Socket.ExclusiveAddressUse" /> property.</span></span></exception>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="69b2e-313">Fehler beim Zugriff auf den zugrunde liegenden Socket.</span><span class="sxs-lookup"><span data-stu-id="69b2e-313">An error occurred when attempting to access the underlying socket.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="69b2e-314">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> wurde geschlossen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-314">The underlying <see cref="T:System.Net.Sockets.Socket" /> has been closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~TcpListener ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!TcpListener ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="tcpListener.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b2e-315">Gibt von der <see cref="T:System.Net.Sockets.TcpListener" />-Klasse verwendete Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="69b2e-315">Frees resources used by the <see cref="T:System.Net.Sockets.TcpListener" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="69b2e-316">Der <xref:System.Net.Sockets.TcpListener> Klassen-Finalizer freie Ressourcen, die der <xref:System.Net.Sockets.TcpListener> Instanz zugeordnet sind.</span><span class="sxs-lookup"><span data-stu-id="69b2e-316">The <xref:System.Net.Sockets.TcpListener> class finalizer free resources associated with the <xref:System.Net.Sockets.TcpListener> instance.</span></span>

]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalEndpoint">
      <MemberSignature Language="C#" Value="public System.Net.EndPoint LocalEndpoint { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.EndPoint LocalEndpoint" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalEndpoint As EndPoint" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::EndPoint ^ LocalEndpoint { System::Net::EndPoint ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LocalEndpoint : System.Net.EndPoint" Usage="System.Net.Sockets.TcpListener.LocalEndpoint" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.EndPoint</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69b2e-317">Ruft den zugrunde liegenden <see cref="T:System.Net.EndPoint" /> des aktuellen <see cref="T:System.Net.Sockets.TcpListener" /> ab.</span><span class="sxs-lookup"><span data-stu-id="69b2e-317">Gets the underlying <see cref="T:System.Net.EndPoint" /> of the current <see cref="T:System.Net.Sockets.TcpListener" />.</span></span></summary>
        <value><span data-ttu-id="69b2e-318">Der <see cref="T:System.Net.EndPoint" />, an den der <see cref="T:System.Net.Sockets.Socket" /> gebunden ist.</span><span class="sxs-lookup"><span data-stu-id="69b2e-318">The <see cref="T:System.Net.EndPoint" /> to which the <see cref="T:System.Net.Sockets.Socket" /> is bound.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-319">Sie können die <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A>-Eigenschaft verwenden, um die lokale Netzwerkschnittstelle und die Portnummer zu identifizieren, die zum lauschen auf eingehende Client Verbindungsanforderungen verwendet werden, nachdem eine Socketverbindung hergestellt wurde.</span><span class="sxs-lookup"><span data-stu-id="69b2e-319">You can use the <xref:System.Net.Sockets.TcpListener.LocalEndpoint%2A> property to identify the local network interface and port number being used to listen for incoming client connection requests, after a socket connection has been made.</span></span> <span data-ttu-id="69b2e-320">Sie müssen diese <xref:System.Net.EndPoint> zuerst in eine <xref:System.Net.IPEndPoint>umwandeln.</span><span class="sxs-lookup"><span data-stu-id="69b2e-320">You must first cast this <xref:System.Net.EndPoint> to an <xref:System.Net.IPEndPoint>.</span></span> <span data-ttu-id="69b2e-321">Anschließend können Sie die <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType>-Eigenschaft aufrufen, um die lokale IP-Adresse abzurufen, und die <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType>-Eigenschaft, um die lokale Portnummer abzurufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-321">You can then call the <xref:System.Net.IPEndPoint.Address%2A?displayProperty=nameWithType> property to retrieve the local IP address, and the <xref:System.Net.IPEndPoint.Port%2A?displayProperty=nameWithType> property to retrieve the local port number.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-322">Im folgenden Codebeispiel werden die lokale IP-Adresse und die Portnummer angezeigt, auf denen der <xref:System.Net.Sockets.TcpListener> auf eingehende Verbindungsanforderungen lauscht.</span><span class="sxs-lookup"><span data-stu-id="69b2e-322">The following code example displays the local IP address and port number on which the <xref:System.Net.Sockets.TcpListener> is listening for incoming connection requests.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="T:System.Net.EndPoint" />
      </Docs>
    </Member>
    <Member MemberName="Pending">
      <MemberSignature Language="C#" Value="public bool Pending ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Pending() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Pending" />
      <MemberSignature Language="VB.NET" Value="Public Function Pending () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Pending();" />
      <MemberSignature Language="F#" Value="member this.Pending : unit -&gt; bool" Usage="tcpListener.Pending " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b2e-323">Bestimmt, ob ausstehende Verbindungsanforderungen vorliegen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-323">Determines if there are pending connection requests.</span></span></summary>
        <returns><span data-ttu-id="69b2e-324"><see langword="true" />, wenn Verbindungen ausstehen, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-324"><see langword="true" /> if connections are pending; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-325">Diese nicht blockierende Methode bestimmt, ob ausstehende Verbindungsanforderungen vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="69b2e-325">This non-blocking method determines if there are any pending connection requests.</span></span> <span data-ttu-id="69b2e-326">Da die Methoden <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> und <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> die Ausführung blockieren, bis die <xref:System.Net.Sockets.TcpListener.Start%2A>-Methode eine eingehende Verbindungsanforderung in die Warteschlange eingereiht hat, kann mithilfe der <xref:System.Net.Sockets.TcpListener.Pending%2A>-Methode bestimmt werden, ob Verbindungen verfügbar sind, bevor Sie versuchen, Sie zu akzeptieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-326">Because the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> and <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> methods block execution until the <xref:System.Net.Sockets.TcpListener.Start%2A> method has queued an incoming connection request, the <xref:System.Net.Sockets.TcpListener.Pending%2A> method can be used to determine if connections are available before attempting to accept them.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-327">Im folgenden Codebeispiel wird die <xref:System.Net.Sockets.TcpListener.Pending%2A>-Methode überprüft.</span><span class="sxs-lookup"><span data-stu-id="69b2e-327">The following code example checks the <xref:System.Net.Sockets.TcpListener.Pending%2A> method.</span></span> <span data-ttu-id="69b2e-328">Wenn eine Verbindungsanforderung darauf wartet, akzeptiert zu werden, wird ein Rückruf der <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>-Methode durchgeführt.</span><span class="sxs-lookup"><span data-stu-id="69b2e-328">If a connection request is waiting to be accepted, then a call to the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method is made.</span></span>  
  
 [!code-cpp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/cpp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CPP/source.cpp#1)]
 [!code-csharp[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/CS/source.cs#1)]
 [!code-vb[TcpListener_Pending_LocalEndPoint#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListener_Pending_LocalEndPoint/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="69b2e-329">Der Listener wurde nicht mit einem Aufruf von <see cref="M:System.Net.Sockets.TcpListener.Start" /> gestartet.</span><span class="sxs-lookup"><span data-stu-id="69b2e-329">The listener has not been started with a call to <see cref="M:System.Net.Sockets.TcpListener.Start" />.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.TcpListener.Start" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public System.Net.Sockets.Socket Server { get; }" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.Sockets.Socket Server" />
      <MemberSignature Language="DocId" Value="P:System.Net.Sockets.TcpListener.Server" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Server As Socket" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::Sockets::Socket ^ Server { System::Net::Sockets::Socket ^ get(); };" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      <MemberSignature Language="F#" Value="member this.Server : System.Net.Sockets.Socket" Usage="System.Net.Sockets.TcpListener.Server" />
      <MemberSignature Language="C#" Value="protected System.Net.Sockets.Socket Server { get; }" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Server As Socket" FrameworkAlternate="netframework-1.1" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Net::Sockets::Socket ^ Server { System::Net::Sockets::Socket ^ get(); };" FrameworkAlternate="netframework-1.1" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Net.Sockets.Socket</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="69b2e-330">Ruft den zugrunde liegenden Netzwerk-<see cref="T:System.Net.Sockets.Socket" /> ab.</span><span class="sxs-lookup"><span data-stu-id="69b2e-330">Gets the underlying network <see cref="T:System.Net.Sockets.Socket" />.</span></span></summary>
        <value><span data-ttu-id="69b2e-331">Der zugrundeliegende <see cref="T:System.Net.Sockets.Socket" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-331">The underlying <see cref="T:System.Net.Sockets.Socket" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-332"><xref:System.Net.Sockets.TcpListener> erstellt eine <xref:System.Net.Sockets.Socket>, um auf eingehende Client Verbindungsanforderungen zu lauschen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-332"><xref:System.Net.Sockets.TcpListener> creates a <xref:System.Net.Sockets.Socket> to listen for incoming client connection requests.</span></span> <span data-ttu-id="69b2e-333">Klassen, die von <xref:System.Net.Sockets.TcpListener> abgeleitet werden, können diese Eigenschaft verwenden, um diese <xref:System.Net.Sockets.Socket>zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-333">Classes deriving from <xref:System.Net.Sockets.TcpListener> can use this property to get this <xref:System.Net.Sockets.Socket>.</span></span> <span data-ttu-id="69b2e-334">Verwenden Sie die zugrunde liegende <xref:System.Net.Sockets.Socket>, die von der <xref:System.Net.Sockets.TcpListener.Server%2A>-Eigenschaft zurückgegeben wird, wenn Sie über die, die <xref:System.Net.Sockets.TcpListener> bereitstellt,</span><span class="sxs-lookup"><span data-stu-id="69b2e-334">Use the underlying <xref:System.Net.Sockets.Socket> returned by the <xref:System.Net.Sockets.TcpListener.Server%2A> property if you require access beyond that which <xref:System.Net.Sockets.TcpListener> provides.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-335">Die <xref:System.Net.Sockets.TcpListener.Server%2A>-Eigenschaft gibt nur den <xref:System.Net.Sockets.Socket> zurück, der zum lauschen auf eingehende Client Verbindungsanforderungen verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="69b2e-335">The <xref:System.Net.Sockets.TcpListener.Server%2A> property only returns the <xref:System.Net.Sockets.Socket> used to listen for incoming client connection requests.</span></span> <span data-ttu-id="69b2e-336">Verwenden Sie die <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>-Methode, um eine ausstehende Verbindungsanforderung zu akzeptieren und eine <xref:System.Net.Sockets.Socket> für das Senden und empfangen von Daten zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-336">Use the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.Socket> for sending and receiving data.</span></span> <span data-ttu-id="69b2e-337">Sie können auch die <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>-Methode verwenden, um eine ausstehende Verbindungsanforderung zu akzeptieren und eine <xref:System.Net.Sockets.TcpClient> für das Senden und empfangen von Daten zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-337">You can also use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method to accept a pending connection request and obtain a <xref:System.Net.Sockets.TcpClient> for sending and receiving data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-338">Im folgenden Codebeispiel wird die Verwendung des <xref:System.Net.Sockets.TcpListener.Server%2A>-Attributs veranschaulicht.</span><span class="sxs-lookup"><span data-stu-id="69b2e-338">The following code example demonstrates the use of the <xref:System.Net.Sockets.TcpListener.Server%2A> property.</span></span> <span data-ttu-id="69b2e-339">Die zugrunde liegende <xref:System.Net.Sockets.Socket> wird abgerufen, und die <xref:System.Net.Sockets.SocketOptionName.Linger><xref:System.Net.Sockets.Socket>-Option ist so konfiguriert, dass nach 10 Sekunden ein Timeout auftritt, wenn die Daten nach dem Schließen der Verbindung noch im Netzwerk Puffer verbleiben.</span><span class="sxs-lookup"><span data-stu-id="69b2e-339">The underlying <xref:System.Net.Sockets.Socket> is retrieved and the <xref:System.Net.Sockets.SocketOptionName.Linger><xref:System.Net.Sockets.Socket> option is configured to time out after 10 seconds if data still remains in the network buffer after the connection is closed.</span></span>  
  
 [!code-csharp[TcpListenerProtectedMembers1#1](~/samples/snippets/csharp/VS_Snippets_Remoting/TcpListenerProtectedMembers1/CS/source.cs#1)]
 [!code-vb[TcpListenerProtectedMembers1#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/TcpListenerProtectedMembers1/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Net.Sockets.Socket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Start">
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="69b2e-340">Beginnt die Überwachung von eingehenden Verbindungsanforderungen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-340">Starts listening for incoming connection requests.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start();" />
      <MemberSignature Language="F#" Value="member this.Start : unit -&gt; unit" Usage="tcpListener.Start " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b2e-341">Beginnt die Überwachung von eingehenden Verbindungsanforderungen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-341">Starts listening for incoming connection requests.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-342">Die <xref:System.Net.Sockets.TcpListener.Start%2A>-Methode initialisiert die zugrunde liegende <xref:System.Net.Sockets.Socket>, bindet Sie an einen lokalen Endpunkt und lauscht auf eingehende Verbindungsversuche.</span><span class="sxs-lookup"><span data-stu-id="69b2e-342">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="69b2e-343">Wenn eine Verbindungsanforderung empfangen wird, wird die Anforderung durch die <xref:System.Net.Sockets.TcpListener.Start%2A>-Methode in die Warteschlange eingereiht, bis Sie die <xref:System.Net.Sockets.TcpListener.Stop%2A>-Methode aufruft.</span><span class="sxs-lookup"><span data-stu-id="69b2e-343">If a connection request is received, the <xref:System.Net.Sockets.TcpListener.Start%2A> method will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="69b2e-344">Wenn <xref:System.Net.Sockets.TcpListener> eine Verbindungsanforderung empfängt, nachdem diese bereits die maximale Anzahl von Verbindungen in die Warteschlange eingereiht hat, löst Sie eine <xref:System.Net.Sockets.SocketException> auf dem Client aus.</span><span class="sxs-lookup"><span data-stu-id="69b2e-344">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections, it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="69b2e-345">Um eine Verbindung aus der Warteschlange für eingehende Verbindungen zu entfernen, verwenden Sie entweder die <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>-Methode oder die <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="69b2e-345">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="69b2e-346">Die <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>-Methode entfernt eine Verbindung aus der Warteschlange und gibt eine <xref:System.Net.Sockets.TcpClient> zurück, die Sie zum Senden und empfangen von Daten verwenden können.</span><span class="sxs-lookup"><span data-stu-id="69b2e-346">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="69b2e-347">Die <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>-Methode gibt eine <xref:System.Net.Sockets.Socket> zurück, die Sie verwenden können, um das gleiche zu tun.</span><span class="sxs-lookup"><span data-stu-id="69b2e-347">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="69b2e-348">Wenn Ihre Anwendung nur synchrone e/a-Vorgänge erfordert, verwenden Sie <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="69b2e-348">If your application only requires synchronous I/O, use <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="69b2e-349">Verwenden Sie <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>, um eine ausführlichere Verhaltenskontrolle zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-349">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>.</span></span> <span data-ttu-id="69b2e-350">Beide Methoden blockieren, bis eine Verbindungsanforderung in der Warteschlange verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="69b2e-350">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="69b2e-351">Verwenden Sie die <xref:System.Net.Sockets.TcpListener.Stop%2A>-Methode, um die <xref:System.Net.Sockets.TcpListener> zu schließen und die Überwachung zu beenden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-351">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="69b2e-352">Sie sind dafür verantwortlich, die akzeptierten Verbindungen separat zu schließen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-352">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-353">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-353">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-354">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-354">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-355">Im folgenden Codebeispiel wird veranschaulicht, wie <xref:System.Net.Sockets.TcpListener.Start%2A> zum lauschen auf eingehende Client Verbindungsversuche verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="69b2e-355">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="69b2e-356">Mit der <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />-Eigenschaft können Sie den spezifischen Fehlercode abrufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-356">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="69b2e-357">Wenn Sie diesen Code abgerufen haben, finden Sie in der Dokumentation zu API-Fehlercodes unter <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets, Version 2</see>, eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="69b2e-357">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public void Start (int backlog);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Start(int32 backlog) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Start(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Start (backlog As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Start(int backlog);" />
      <MemberSignature Language="F#" Value="member this.Start : int -&gt; unit" Usage="tcpListener.Start backlog" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="backlog" Type="System.Int32" Index="0" FrameworkAlternate="net-5.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netcore-3.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="backlog"><span data-ttu-id="69b2e-358">Die maximale Länge der Warteschlange für ausstehende Verbindungen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-358">The maximum length of the pending connections queue.</span></span></param>
        <summary><span data-ttu-id="69b2e-359">Beginnt die Überwachung eingehender Verbindungsanforderungen mit einer maximalen Anzahl ausstehender Verbindungen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-359">Starts listening for incoming connection requests with a maximum number of pending connection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-360">Die <xref:System.Net.Sockets.TcpListener.Start%2A>-Methode initialisiert die zugrunde liegende <xref:System.Net.Sockets.Socket>, bindet Sie an einen lokalen Endpunkt und lauscht auf eingehende Verbindungsversuche.</span><span class="sxs-lookup"><span data-stu-id="69b2e-360">The <xref:System.Net.Sockets.TcpListener.Start%2A> method initializes the underlying <xref:System.Net.Sockets.Socket>, binds it to a local endpoint, and listens for incoming connection attempts.</span></span> <span data-ttu-id="69b2e-361">Wenn eine Verbindungsanforderung empfangen wird, wird die Anforderung von <xref:System.Net.Sockets.TcpListener.Start%2A> in die Warteschlange eingereiht, bis Sie die <xref:System.Net.Sockets.TcpListener.Stop%2A>-Methode aufgerufen haben.</span><span class="sxs-lookup"><span data-stu-id="69b2e-361">If a connection request is received, <xref:System.Net.Sockets.TcpListener.Start%2A> will queue the request and continue listening for additional requests until you call the <xref:System.Net.Sockets.TcpListener.Stop%2A> method.</span></span> <span data-ttu-id="69b2e-362">Wenn <xref:System.Net.Sockets.TcpListener> eine Verbindungsanforderung empfängt, nachdem Sie bereits die maximale Anzahl von Verbindungen in die Warteschlange eingereiht hat, wird eine <xref:System.Net.Sockets.SocketException> auf dem Client ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="69b2e-362">If <xref:System.Net.Sockets.TcpListener> receives a connection request after it has already queued the maximum number of connections it will throw a <xref:System.Net.Sockets.SocketException> on the client.</span></span>  
  
 <span data-ttu-id="69b2e-363">Um eine Verbindung aus der Warteschlange für eingehende Verbindungen zu entfernen, verwenden Sie entweder die <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>-Methode oder die <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>-Methode.</span><span class="sxs-lookup"><span data-stu-id="69b2e-363">To remove a connection from the incoming connection queue, use either the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method or the <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="69b2e-364">Die <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>-Methode entfernt eine Verbindung aus der Warteschlange und gibt eine <xref:System.Net.Sockets.TcpClient> zurück, die Sie zum Senden und empfangen von Daten verwenden können.</span><span class="sxs-lookup"><span data-stu-id="69b2e-364">The <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A> method will remove a connection from the queue and return a <xref:System.Net.Sockets.TcpClient> that you can use to send and receive data.</span></span> <span data-ttu-id="69b2e-365">Die <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>-Methode gibt eine <xref:System.Net.Sockets.Socket> zurück, die Sie verwenden können, um das gleiche zu tun.</span><span class="sxs-lookup"><span data-stu-id="69b2e-365">The <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method will return a <xref:System.Net.Sockets.Socket> that you can use to do the same.</span></span> <span data-ttu-id="69b2e-366">Wenn Ihre Anwendung nur synchrone e/a-Vorgänge erfordert, verwenden Sie die <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span><span class="sxs-lookup"><span data-stu-id="69b2e-366">If your application only requires synchronous I/O, use the <xref:System.Net.Sockets.TcpListener.AcceptTcpClient%2A>.</span></span> <span data-ttu-id="69b2e-367">Verwenden Sie <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A>-Methode, um eine ausführlichere Verhaltenskontrolle zu erhalten.</span><span class="sxs-lookup"><span data-stu-id="69b2e-367">For more detailed behavioral control, use <xref:System.Net.Sockets.TcpListener.AcceptSocket%2A> method.</span></span> <span data-ttu-id="69b2e-368">Beide Methoden blockieren, bis eine Verbindungsanforderung in der Warteschlange verfügbar ist.</span><span class="sxs-lookup"><span data-stu-id="69b2e-368">Both of these methods block until a connection request is available in the queue.</span></span>  
  
 <span data-ttu-id="69b2e-369">Verwenden Sie die <xref:System.Net.Sockets.TcpListener.Stop%2A>-Methode, um die <xref:System.Net.Sockets.TcpListener> zu schließen und die Überwachung zu beenden.</span><span class="sxs-lookup"><span data-stu-id="69b2e-369">Use the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the <xref:System.Net.Sockets.TcpListener> and stop listening.</span></span> <span data-ttu-id="69b2e-370">Sie sind dafür verantwortlich, die akzeptierten Verbindungen separat zu schließen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-370">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-371">Verwenden Sie die <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType>-Eigenschaft, um den spezifischen Fehlercode abzurufen. In der Dokumentation zu API-Fehlercodes unter [Windows Sockets, Version 2](/windows/desktop/winsock/windows-sockets-error-codes-2) finden Sie eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="69b2e-371">Use the <xref:System.Net.Sockets.SocketException.ErrorCode%2A?displayProperty=nameWithType> property to obtain the specific error code and refer to the [Windows Sockets version 2 API error code](/windows/desktop/winsock/windows-sockets-error-codes-2) documentation for a detailed description of the error.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-372">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-372">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-373">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-373">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-374">Im folgenden Codebeispiel wird veranschaulicht, wie <xref:System.Net.Sockets.TcpListener.Start%2A> zum lauschen auf eingehende Client Verbindungsversuche verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="69b2e-374">The following code example demonstrates how <xref:System.Net.Sockets.TcpListener.Start%2A> is used to listen for incoming client connection attempts.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/cpp/tcpserver.cpp#3)]
 [!code-csharp[System.Net.Sockets.TcpListener1#3](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/CS/tcpserver.cs#3)]
 [!code-vb[System.Net.Sockets.TcpListener1#3](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener1/VB/tcpserver.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="69b2e-375">Fehler beim Zugriff auf den Socket.</span><span class="sxs-lookup"><span data-stu-id="69b2e-375">An error occurred while accessing the socket.</span></span></exception>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="69b2e-376">Der <paramref name="backlog" />-Parameter ist kleiner als 0 (null) oder übersteigt die maximale Anzahl zulässiger Verbindungen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-376">The <paramref name="backlog" /> parameter is less than zero or exceeds the maximum number of permitted connections.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="69b2e-377">Der zugrunde liegende <see cref="T:System.Net.Sockets.Socket" /> ist NULL.</span><span class="sxs-lookup"><span data-stu-id="69b2e-377">The underlying <see cref="T:System.Net.Sockets.Socket" /> is null.</span></span></exception>
        <altmember cref="M:System.Net.Sockets.Socket.Listen(System.Int32)" />
        <altmember cref="M:System.Net.Sockets.Socket.Bind(System.Net.EndPoint)" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptTcpClient" />
        <altmember cref="M:System.Net.Sockets.TcpListener.AcceptSocket" />
        <altmember cref="M:System.Net.Sockets.TcpListener.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Net.Sockets.TcpListener.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="tcpListener.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Net.Sockets</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.2.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="69b2e-378">Schließt den Listener.</span><span class="sxs-lookup"><span data-stu-id="69b2e-378">Closes the listener.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="69b2e-379"><xref:System.Net.Sockets.TcpListener.Stop%2A> schließt den Listener.</span><span class="sxs-lookup"><span data-stu-id="69b2e-379"><xref:System.Net.Sockets.TcpListener.Stop%2A> closes the listener.</span></span> <span data-ttu-id="69b2e-380">Alle nicht akzeptierten Verbindungsanforderungen in der Warteschlange gehen verloren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-380">Any unaccepted connection requests in the queue will be lost.</span></span> <span data-ttu-id="69b2e-381">Remote Hosts, die darauf warten, dass eine Verbindung akzeptiert wird, lösen eine <xref:System.Net.Sockets.SocketException>aus.</span><span class="sxs-lookup"><span data-stu-id="69b2e-381">Remote hosts waiting for a connection to be accepted will throw a <xref:System.Net.Sockets.SocketException>.</span></span> <span data-ttu-id="69b2e-382">Sie sind dafür verantwortlich, die akzeptierten Verbindungen separat zu schließen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-382">You are responsible for closing your accepted connections separately.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="69b2e-383">Dieser Member gibt Ablaufverfolgungsinformationen aus, wenn Sie die Netzwerkablaufverfolgung in der Anwendung aktivieren.</span><span class="sxs-lookup"><span data-stu-id="69b2e-383">This member outputs trace information when you enable network tracing in your application.</span></span> <span data-ttu-id="69b2e-384">Weitere Informationen finden Sie unter [Netzwerk Ablauf Verfolgung in der .NET Framework](/dotnet/framework/network-programming/network-tracing).</span><span class="sxs-lookup"><span data-stu-id="69b2e-384">For more information, see [Network Tracing in the .NET Framework](/dotnet/framework/network-programming/network-tracing).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="69b2e-385">Das folgende Codebeispiel veranschaulicht die Verwendung der <xref:System.Net.Sockets.TcpListener.Stop%2A>-Methode, um die zugrunde liegende <xref:System.Net.Sockets.Socket>zu schließen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-385">The following code example demonstrates using the <xref:System.Net.Sockets.TcpListener.Stop%2A> method to close the underlying <xref:System.Net.Sockets.Socket>.</span></span>  
  
 [!code-cpp[System.Net.Sockets.TcpListener#1](~/samples/snippets/cpp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CPP/tcpserver.cpp#1)]
 [!code-csharp[System.Net.Sockets.TcpListener#1](~/samples/snippets/csharp/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/CS/tcpserver.cs#1)]
 [!code-vb[System.Net.Sockets.TcpListener#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/System.Net.Sockets.TcpListener/VB/tcpserver.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Net.Sockets.SocketException"><span data-ttu-id="69b2e-386">Mit der <see cref="P:System.Net.Sockets.SocketException.ErrorCode" />-Eigenschaft können Sie den spezifischen Fehlercode abrufen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-386">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode" /> property to obtain the specific error code.</span></span> <span data-ttu-id="69b2e-387">Wenn Sie diesen Code abgerufen haben, finden Sie in der Dokumentation zu API-Fehlercodes unter <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets, Version 2</see>, eine ausführliche Beschreibung des Fehlers.</span><span class="sxs-lookup"><span data-stu-id="69b2e-387">When you have obtained this code, you can refer to the <see href="/windows/desktop/winsock/windows-sockets-error-codes-2">Windows Sockets version 2 API error code</see> documentation for a detailed description of the error.</span></span></exception>
        <block subset="none" type="usage"><para><span data-ttu-id="69b2e-388">Die <see cref="M:System.Net.Sockets.TcpListener.Stop" />-Methode schließt außerdem die zugrunde liegende <see cref="T:System.Net.Sockets.Socket" />und erstellt eine neue <see cref="T:System.Net.Sockets.Socket" /> für die <see cref="T:System.Net.Sockets.TcpListener" />.</span><span class="sxs-lookup"><span data-stu-id="69b2e-388">The <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method also closes the underlying <see cref="T:System.Net.Sockets.Socket" />, and creates a new <see cref="T:System.Net.Sockets.Socket" /> for the <see cref="T:System.Net.Sockets.TcpListener" />.</span></span> <span data-ttu-id="69b2e-389">Wenn Sie Eigenschaften für den zugrunde liegenden <see cref="T:System.Net.Sockets.Socket" /> festlegen, bevor Sie die <see cref="M:System.Net.Sockets.TcpListener.Stop" />-Methode aufrufen, werden diese Eigenschaften nicht auf den neuen <see cref="T:System.Net.Sockets.Socket" />übertragen.</span><span class="sxs-lookup"><span data-stu-id="69b2e-389">If you set any properties on the underlying <see cref="T:System.Net.Sockets.Socket" /> prior to calling the <see cref="M:System.Net.Sockets.TcpListener.Stop" /> method, those properties will not carry over to the new <see cref="T:System.Net.Sockets.Socket" />.</span></span></para></block>
        <altmember cref="M:System.Net.Sockets.Socket.Close" />
      </Docs>
    </Member>
  </Members>
</Type>
