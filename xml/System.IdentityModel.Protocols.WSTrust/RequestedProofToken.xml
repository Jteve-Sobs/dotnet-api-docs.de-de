<Type Name="RequestedProofToken" FullName="System.IdentityModel.Protocols.WSTrust.RequestedProofToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b56fdf45d340ca3748b4abfd198b34ca1db089a" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="64000172" /></Metadata><TypeSignature Language="C#" Value="public class RequestedProofToken" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestedProofToken extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Protocols.WSTrust.RequestedProofToken" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestedProofToken" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestedProofToken" />
  <TypeSignature Language="F#" Value="type RequestedProofToken = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Inhalte eines wst:RequestedProofToken-Elements dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Inhalt eines wst: RequestedProofToken-Elements kann entweder einen verschlüsselten Schlüssel oder einen Schlüssel in Klartext sein. In beiden Fällen die <xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey%2A> Eigenschaft enthält den Schlüssel. Wenn das Sicherheitstoken einem regulären Token, z.B. ein SCT, ist werden dem Sitzungsschlüssel das Material verschlüsselt, ruft. Wenn das wst: RequestedProofToken nur ein Wst:ComputedKey-Element wie im Fall der kombinierten Entropie, enthält die <xref:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm%2A> Eigenschaft enthält, dessen Inhalt.  
  
 Weitere Informationen zu dem Element, das diese Klasse darstellt, finden Sie unter der Version der WS-Trust-Spezifikation, die für Ihr Szenario zutrifft.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedProofToken" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestedProofToken (byte[] secret);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] secret) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (secret As Byte())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestedProofToken(cli::array &lt;System::Byte&gt; ^ secret);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken : byte[] -&gt; System.IdentityModel.Protocols.WSTrust.RequestedProofToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken secret" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="secret" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="secret">Ein Array von <see cref="T:System.Byte" />, das das Schlüsselmaterial enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedProofToken" />-Klasse unter Verwendung des angegebenen Materials.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, wenn der Schlüssel nur-Text ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestedProofToken (System.IdentityModel.Protocols.WSTrust.ProtectedKey protectedKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Protocols.WSTrust.ProtectedKey protectedKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.IdentityModel.Protocols.WSTrust.ProtectedKey)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestedProofToken(System::IdentityModel::Protocols::WSTrust::ProtectedKey ^ protectedKey);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken : System.IdentityModel.Protocols.WSTrust.ProtectedKey -&gt; System.IdentityModel.Protocols.WSTrust.RequestedProofToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken protectedKey" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="protectedKey" Type="System.IdentityModel.Protocols.WSTrust.ProtectedKey" />
      </Parameters>
      <Docs>
        <param name="protectedKey">Ein <see cref="T:System.IdentityModel.Protocols.WSTrust.ProtectedKey" />, das den Schlüssel darstellt, der entweder ein binärer geheimem Schlüssel oder einen verschlüsselten Schlüssel sein kann.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedProofToken" />-Klasse mit dem angegebenen <see cref="T:System.IdentityModel.Protocols.WSTrust.ProtectedKey" />-Objekt.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="protectedKey" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestedProofToken (string computedKeyAlgorithm);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string computedKeyAlgorithm) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (computedKeyAlgorithm As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestedProofToken(System::String ^ computedKeyAlgorithm);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken : string -&gt; System.IdentityModel.Protocols.WSTrust.RequestedProofToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken computedKeyAlgorithm" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="computedKeyAlgorithm" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="computedKeyAlgorithm">Eine Zeichenfolge, die einen URI enthält, der den Algorithmus angibt, der verwendet wird, um den Sitzungsschlüssel im kombinierten Entropiefall zu berechnen.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedProofToken" />-Klasse mithilfe des angegebenen berechneten Schlüsselalgorithmus.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor im Fall von kombinierten Entropie, zum Angeben des Algorithmus verwendet, um den Sitzungsschlüssel zu berechnen.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="computedKeyAlgorithm" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestedProofToken (byte[] secret, System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(unsigned int8[] secret, class System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (secret As Byte(), wrappingCredentials As EncryptingCredentials)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestedProofToken(cli::array &lt;System::Byte&gt; ^ secret, System::IdentityModel::Tokens::EncryptingCredentials ^ wrappingCredentials);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken : byte[] * System.IdentityModel.Tokens.EncryptingCredentials -&gt; System.IdentityModel.Protocols.WSTrust.RequestedProofToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestedProofToken (secret, wrappingCredentials)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="secret" Type="System.Byte[]" />
        <Parameter Name="wrappingCredentials" Type="System.IdentityModel.Tokens.EncryptingCredentials" />
      </Parameters>
      <Docs>
        <param name="secret">Ein Array von <see cref="T:System.Byte" />, das das Schlüsselmaterial enthält.</param>
        <param name="wrappingCredentials">Eine <see cref="T:System.IdentityModel.Tokens.EncryptingCredentials" />, das die Anmeldeinformationen angibt, die verwendet werden, um das Schlüsselmaterial zu verschlüsseln.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestedProofToken" />-Klasse unter Verwendung der angegebenen Materials und Anmeldeinformationen für Verschlüsselung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, wenn der Schlüssel verschlüsselt ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputedKeyAlgorithm">
      <MemberSignature Language="C#" Value="public string ComputedKeyAlgorithm { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ComputedKeyAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ComputedKeyAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ComputedKeyAlgorithm { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ComputedKeyAlgorithm : string" Usage="System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ComputedKeyAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den berechneten Schlüsselalgorithmus ab, der verwendet wird, um den Sitzungsschlüssel im kombinierten Entropiefall zu berechnen.</summary>
        <value>Eine Zeichenfolge, die einen URI enthält, der den Algorithmus des berechneten Schlüssels angibt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des Elements Wst:ComputedKey dar. Dieses Element enthält einen URI, der den berechneten Schlüsselalgorithmus verwendet, wenn der Schlüssel berechnet werden müssen angibt; z. B. in der kombinierten entropiefall, wenn sowohl der anforderer und der Zertifikataussteller Entropie angeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProtectedKey">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.ProtectedKey ProtectedKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.ProtectedKey ProtectedKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ProtectedKey As ProtectedKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::ProtectedKey ^ ProtectedKey { System::IdentityModel::Protocols::WSTrust::ProtectedKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ProtectedKey : System.IdentityModel.Protocols.WSTrust.ProtectedKey" Usage="System.IdentityModel.Protocols.WSTrust.RequestedProofToken.ProtectedKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.ProtectedKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Schlüssel ab, wenn das wst:RequestedProofToken-Element einen Schlüssel enthält.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Protocols.WSTrust.ProtectedKey" />, das den Schlüssel darstellt, die entweder verschlüsselt werden kann oder Klartext.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des wst: RequestedProofToken-Elements dar, wenn das Element einen Schlüssel (statt einer Wst:ComputedKeyElement) enthält.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>