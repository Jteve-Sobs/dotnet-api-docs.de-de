<Type Name="UseKey" FullName="System.IdentityModel.Protocols.WSTrust.UseKey">
  <Metadata><Meta Name="ms.openlocfilehash" Value="ad59d59d4ed7e9280aca98978e0b2286eb05e154" /><Meta Name="ms.sourcegitcommit" Value="f1d16425528e237257ca3b58eb49217a514849ea" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/24/2019" /><Meta Name="ms.locfileid" Value="63985184" /></Metadata><TypeSignature Language="C#" Value="public class UseKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UseKey extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Protocols.WSTrust.UseKey" />
  <TypeSignature Language="VB.NET" Value="Public Class UseKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class UseKey" />
  <TypeSignature Language="F#" Value="type UseKey = class" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt die Inhalte des wst:UseKey-Elements dar.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Dieses optionale Element ermöglicht den Client die Anforderung vom Identitätsanbieters ein Token mit seinen öffentlichen Schlüssel, der unter dem usekey-Element angegeben wird. Allerdings muss der Client Besitz des Schlüssels zu bestätigen. In einer WS-Sicherheit-basierte SOAP-Nachricht kann der Client hinzufügen sein Zertifikat als unterzeichnendes Token den Security-Header, um Besitz des Schlüssels zu bestätigen.  
  
 Weitere Informationen zu dem Element, das diese Klasse darstellt, finden Sie unter der Version der WS-Trust-Spezifikation, die für Ihr Szenario zutrifft.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UseKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.UseKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UseKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Konstruktor für die Erweiterbarkeit.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UseKey (System.IdentityModel.Tokens.SecurityKeyIdentifier ski);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKeyIdentifier ski) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ski As SecurityKeyIdentifier)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UseKey(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ski);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.UseKey : System.IdentityModel.Tokens.SecurityKeyIdentifier -&gt; System.IdentityModel.Protocols.WSTrust.UseKey" Usage="new System.IdentityModel.Protocols.WSTrust.UseKey ski" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ski" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
      </Parameters>
      <Docs>
        <param name="ski">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, das den vorhandenen Schlüssel darstellt, der verwendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" />-Klasse mithilfe des angegebenen Sicherheitsschlüsselbezeichners.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, wenn der anforderer weiß, wie das Token in einem Sicherheitsschlüsselbezeichner konvertiert, oder wenn das Token bereits eine wichtige Sicherheits-ID ist.  
  
 Die <xref:System.IdentityModel.Protocols.WSTrust.UseKey.Token%2A> -Eigenschaftensatz auf `null` in der neuen <xref:System.IdentityModel.Protocols.WSTrust.UseKey> Instanz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UseKey (System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UseKey(System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.UseKey : System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.UseKey" Usage="new System.IdentityModel.Protocols.WSTrust.UseKey token" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="token">Ein <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, das den vorhandenen Schlüssel darstellt, der verwendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" />-Klasse unter Verwendung des angegebenen Sicherheitstokens.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier%2A> -Eigenschaftensatz auf `null` in der neuen <xref:System.IdentityModel.Protocols.WSTrust.UseKey> Instanz.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UseKey (System.IdentityModel.Tokens.SecurityKeyIdentifier ski, System.IdentityModel.Tokens.SecurityToken token);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IdentityModel.Tokens.SecurityKeyIdentifier ski, class System.IdentityModel.Tokens.SecurityToken token) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.UseKey.#ctor(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (ski As SecurityKeyIdentifier, token As SecurityToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UseKey(System::IdentityModel::Tokens::SecurityKeyIdentifier ^ ski, System::IdentityModel::Tokens::SecurityToken ^ token);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.UseKey : System.IdentityModel.Tokens.SecurityKeyIdentifier * System.IdentityModel.Tokens.SecurityToken -&gt; System.IdentityModel.Protocols.WSTrust.UseKey" Usage="new System.IdentityModel.Protocols.WSTrust.UseKey (ski, token)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="ski" Type="System.IdentityModel.Tokens.SecurityKeyIdentifier" />
        <Parameter Name="token" Type="System.IdentityModel.Tokens.SecurityToken" />
      </Parameters>
      <Docs>
        <param name="ski">Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, das den vorhandenen Schlüssel darstellt, der verwendet werden soll.</param>
        <param name="token">Ein <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, das den vorhandenen Schlüssel darstellt, der verwendet werden soll.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.UseKey" />-Klasse unter Verwendung des angegebenen des Sicherheitsschlüsselbezeichners und Sicherheitstokens.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Verwenden Sie diesen Konstruktor, um weitere Informationen zu den Sicherheitstokendienst (STS) aus das Serialisierungsprogramm übergeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecurityKeyIdentifier">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityKeyIdentifier SecurityKeyIdentifier { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityKeyIdentifier SecurityKeyIdentifier" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SecurityKeyIdentifier As SecurityKeyIdentifier" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityKeyIdentifier ^ SecurityKeyIdentifier { System::IdentityModel::Tokens::SecurityKeyIdentifier ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SecurityKeyIdentifier : System.IdentityModel.Tokens.SecurityKeyIdentifier" Usage="System.IdentityModel.Protocols.WSTrust.UseKey.SecurityKeyIdentifier" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityKeyIdentifier</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Sicherheitsschlüsselbezeichner ab.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityKeyIdentifier" />, der den Sicherheitsschlüsselbezeichner darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Token">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityToken Token { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityToken Token" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.UseKey.Token" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Token As SecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityToken ^ Token { System::IdentityModel::Tokens::SecurityToken ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Token : System.IdentityModel.Tokens.SecurityToken" Usage="System.IdentityModel.Protocols.WSTrust.UseKey.Token" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Sicherheitstoken ab, wenn das Serialisierungsprogramm es nicht in den Schlüsselbezeichner Sicherheit konvertieren kann.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityToken" />, das das Token darstellt.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>