<Type Name="RequestSecurityToken" FullName="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="58340227796e699cd0943f50293a3fab84a40ff0" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36559469" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RequestSecurityToken : System.IdentityModel.Protocols.WSTrust.WSTrustMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestSecurityToken extends System.IdentityModel.Protocols.WSTrust.WSTrustMessage" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestSecurityToken&#xA;Inherits WSTrustMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestSecurityToken : System::IdentityModel::Protocols::WSTrust::WSTrustMessage" />
  <TypeSignature Language="F#" Value="type RequestSecurityToken = class&#xA;    inherit WSTrustMessage" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Protocols.WSTrust.WSTrustMessage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt das wst:RequestSecurityToken-Element (RST) dar, das verwendet wird, um ein Sicherheitstoken anzufordern.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wst: RequestSecurityToken-Element (Meldung) enthält die Parameter und Eigenschaften verwendet, um ein Sicherheitstoken von einem Sicherheitstokendienst (STS) anfordern. Die Nachricht (oder Element) wird als RST abgekürzt. Die <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> Klasse enthält Eigenschaften, die die Elemente der RST darstellen. Eine Anforderung, die keines von WS-Trust definierten Anforderung Bindungen entspricht, kann dies eine RST bilden; z. B. die Bindung für die Ausstellung, Secureconversationrenewal-Bindung, die Validate-Bindung oder die Cancel-Bindung. Viele der Eigenschaften in der <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> Klasse entsprechen Elementen, die nur in bestimmten Arten von Anforderungen, die gemäß dieser Bindungen vorhanden sind. Je nach Art der Anforderung einer bestimmten <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> Objekt darstellt, oder die Parameter vorhanden, in der jeweiligen Anforderung, die es darstellt, einige Eigenschaften des Objekts möglicherweise `null`.  
  
 Der STS gibt eine Antwort auf die Anforderung in eine Nachricht mit einem Wst:RequestSecurityTokenResponse-Element (RSTR) zurück. Diese Meldung wird dargestellt, indem die <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse> Klasse.  
  
 [!INCLUDE[wif_wstrust_ref](~/includes/wif-wstrust-ref-md.md)]  
  
   
  
## Examples  
 Das Codebeispiel, das in diesem Thema dient stammt aus dem `Custom Token` Beispiel. In diesem Beispiel enthält benutzerdefinierte Klassen, die Verarbeitung von Simple Web Token (SWT) sowie eine Implementierung von passiver STS, die können bedient ein SWT-Token ist. Der STS wird durch eine Klasse, die abgeleitet ist implementiert <xref:System.IdentityModel.SecurityTokenService>. Viele der Methoden für die <xref:System.IdentityModel.SecurityTokenService> -Klasse, die von der tokenausstellung Pipeline Take aufgerufen werden ein <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> -Objekt als einen ihre Parameter. Informationen zu diesem Beispiel und weitere Beispiele verfügbar für WIF und dazu, wo Sie sie herunterladen, finden Sie unter [WIF Beispiel Codeindex](~/docs/framework/security/wif-code-sample-index.md).  
  
 Im folgenden Codebeispiel wird eine Implementierung der <xref:System.IdentityModel.SecurityTokenService.GetScope%2A?displayProperty=nameWithType>-Methode veranschaulicht. Die Methode akzeptiert eine <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> als einen seiner Parameter und Eigenschaften dieses Parameters werden verwendet, um Eigenschaften festzulegen, auf die <xref:System.IdentityModel.Scope> -Objekt, das von der Methode zurückgegeben wird.  
  
 [!code-csharp[WIFCustomTokenSTS#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#4)]  
[!code-csharp[WIFCustomTokenSTS#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#5)]  
[!code-csharp[WIFCustomTokenSTS#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
    <altmember cref="T:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" />
    <altmember cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestSecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestSecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> Eigenschaft und <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType%2A> Eigenschaft werden initialisiert, um `null`.  
  
 Dieser Konstruktor wird normalerweise vom Empfänger verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestSecurityToken (string requestType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string requestType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (requestType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestSecurityToken(System::String ^ requestType);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestSecurityToken : string -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestSecurityToken requestType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requestType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestType">Eine Zeichenfolge, die die Anforderungstyp-URI enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Klasse mit der angegebenen Anforderung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType%2A>-Eigenschaft wird mit `null` initialisiert.  
  
 Dieser Konstruktor wird normalerweise vom Absender verwendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestSecurityToken (string requestType, string keyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string requestType, string keyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (requestType As String, keyType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestSecurityToken(System::String ^ requestType, System::String ^ keyType);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestSecurityToken : string * string -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestSecurityToken (requestType, keyType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requestType" Type="System.String" />
        <Parameter Name="keyType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestType">Eine Zeichenfolge, die die Anforderungstyp-URI enthält.</param>
        <param name="keyType">Eine Zeichenfolge, die den Schlüsseltyp-URI enthält. Dabei sollte es sich um eine der von der <see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" />-Klasse definierten Konstanten handeln.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Klasse mit der angegebenen Anforderung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die folgende Tabelle zeigt den anfänglichen Wert des der <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits%2A> Eigenschaft nach bestimmten Werten von der `keyType` Parameter.  
  
|`keyType`-Parameter|<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits%2A>-Eigenschaft|  
|-------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.IdentityModel.Protocols.WSTrust.KeyTypes.Asymmetric>|1024|  
|<xref:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer>|0|  
|<xref:System.IdentityModel.Protocols.WSTrust.KeyTypes.Symmetric>|256|  
  
 Dieser Konstruktor wird normalerweise vom Absender verwendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActAs">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement ActAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement ActAs" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ActAs" />
      <MemberSignature Language="VB.NET" Value="Public Property ActAs As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ ActAs { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActAs : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ActAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Sicherheitstoken für die Identität des Anfordernden ab, die dieser darzustellen versucht, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, der die Identität des Anfordernden darstellt, die er darzustellen versucht. Kann <see langword="null" /> sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des Elements Wst:ActAs dar. Dieses optionale Element delegierungsszenarien unterstützt und gibt an, dass der anforderer die Anforderung zu einer anderen Identität fungieren stammt. Dieses Element wird im WS-Trust 1.4 eingeführt. Diese Eigenschaft ist `null` in Anforderungen, die Delegierung umfassen nicht.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalContext">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.AdditionalContext AdditionalContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.AdditionalContext AdditionalContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.AdditionalContext" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalContext As AdditionalContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::AdditionalContext ^ AdditionalContext { System::IdentityModel::Protocols::WSTrust::AdditionalContext ^ get(); void set(System::IdentityModel::Protocols::WSTrust::AdditionalContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdditionalContext : System.IdentityModel.Protocols.WSTrust.AdditionalContext with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.AdditionalContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.AdditionalContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die zusätzlichen Kontextinformationen für die Anforderung ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Protocols.WSTrust.AdditionalContext" />, das zusätzliche Kontextinformationen für die Anforderung enthält. Kann <see langword="null" /> sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des Elements Auth:AdditionalContext dar. Dieses optionale Element enthält zusätzliche Informationen, die den Sicherheitstokendienst (STS) in den tokenausstellungsprozess verwenden kann.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTarget">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement CancelTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement CancelTarget" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.CancelTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelTarget As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ CancelTarget { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CancelTarget : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.CancelTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Token ab, das in einer WS-Trust-Abbruchanforderung abgebrochen werden soll, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, das das Token enthält, das abgebrochen werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt eines Elements Wst:CancelTarget dar. Dieses Element enthält die Informationen über das Token werden in einer WS-Trust "Abbrechen"-Anforderung abgebrochen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestClaimCollection Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestClaimCollection Claims" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Claims As RequestClaimCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestClaimCollection ^ Claims { System::IdentityModel::Protocols::WSTrust::RequestClaimCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : System.IdentityModel.Protocols.WSTrust.RequestClaimCollection" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestClaimCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anspruchstypen ab, die vom Client (Anfordernden) angefordert werden.</summary>
        <value>Eine <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestClaimCollection" />, die die angeforderten Ansprüche enthält. Der Standard ist eine leere Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des Elements Wst:Claims dar. Dieses optionale Element fordert der Satz an bestimmte Anspruchstypen, die vom Client angefordert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputedKeyAlgorithm">
      <MemberSignature Language="C#" Value="public string ComputedKeyAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ComputedKeyAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ComputedKeyAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property ComputedKeyAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ComputedKeyAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ComputedKeyAlgorithm : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ComputedKeyAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen URI ab, der den gewünschten Algorithmus darstellt, der verwendet wird, wenn berechnete Schlüssel für ausgestellte Token verwendet werden.</summary>
        <value>Eine Zeichenfolge mit dem URI, der den berechneten Schlüsselalgorithmus darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt die Wst:ComputedKeyAlgorithm-Element dar. Dieses optionale Element gibt einen URI an, die den gewünschten Algorithmus zu verwendende berechnete Schlüssel für ausgestellte Token verwendet werden darstellt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegatable">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Delegatable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Delegatable" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Delegatable" />
      <MemberSignature Language="VB.NET" Value="Public Property Delegatable As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Delegatable { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Delegatable : Nullable&lt;bool&gt; with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Delegatable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das ausgestellte Token als delegierbar gekennzeichnet werden soll.</summary>
        <value>
          <see langword="true" />, wenn das ausgestellte Token delegierbar ist; andernfalls <see langword="false" />. Kann <see langword="null" /> sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt der Wst: Delegatable Element. Dieses optionale Element gibt an, dass das zurückgegebene Token in eine andere Partei delegatable sein kann. Dieses Element wird im WS-Trust 1.4 eingeführt. Diese Eigenschaft wird in Verbindung mit der <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegateTo">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement DelegateTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement DelegateTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo" />
      <MemberSignature Language="VB.NET" Value="Public Property DelegateTo As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ DelegateTo { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DelegateTo : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Identität ab, auf die das ausgestelltes Token übertragen werden soll, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, das die Identität darstellt, an die das ausgestelltes Token delegiert werden soll. Kann <see langword="null" /> sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des Elements Wst:DelegateTo dar. Dieses optionale Element gibt an, dass das ausgestellte Token an der angegebenen Identität delegiert werden. Dieses Element wird im WS-Trust 1.4 eingeführt. Diese Eigenschaft ist `null` in Anforderungen, die Delegierung umfassen nicht. Diese Eigenschaft dient in Verbindung mit der <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encryption">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement Encryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement Encryption" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Encryption" />
      <MemberSignature Language="VB.NET" Value="Public Property Encryption As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ Encryption { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encryption : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Encryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Informationen über das Token und den Schlüssel ab, das bzw. der beim Verschlüsseln verwendet werden soll, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> mit den Verschlüsselungsinformationen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des Elements Wst:Encryption dar. Dieses optionale Element gibt an, dass die zurückgegebene vertrauliche Daten im ausgestellte Sicherheitstoken für das angegebene Token verschlüsselt werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Forwardable">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Forwardable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Forwardable" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Forwardable" />
      <MemberSignature Language="VB.NET" Value="Public Property Forwardable As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Forwardable { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Forwardable : Nullable&lt;bool&gt; with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Forwardable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das ausgestellte Token als weiterleitbar gekennzeichnet werden soll.</summary>
        <value>
          <see langword="true" />, wenn das ausgestellte Token weiterleitbar ist; andernfalls <see langword="false" />. Kann <see langword="null" /> sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt der Wst: Forwardable Element. Dieses optionale Element gibt an, ob das zurückgegebene Token an den anfordernden Computer oder Dienst gebunden ist (angegeben durch eine `false` Wert). Dieses Element wird im WS-Trust 1.4 eingeführt. Diese Eigenschaft wird in Verbindung mit der <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo%2A> Eigenschaft.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.EndpointReference Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.EndpointReference Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As EndpointReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::EndpointReference ^ Issuer { System::IdentityModel::Protocols::WSTrust::EndpointReference ^ get(); void set(System::IdentityModel::Protocols::WSTrust::EndpointReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : System.IdentityModel.Protocols.WSTrust.EndpointReference with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.EndpointReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Aussteller des wst:OnBehalfOf-Tokens ab oder legt ihn fest.</summary>
        <value>Eine <see cref="T:System.ServiceModel.EndpointAddress" />, die die Adresse des Ausstellers enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des Elements Wst:Issuer dar. Dieses optionale Element identifiziert den Aussteller des Tokens, die im wst: onbehalfof-Element angegeben wird.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBehalfOf">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement OnBehalfOf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement OnBehalfOf" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.OnBehalfOf" />
      <MemberSignature Language="VB.NET" Value="Public Property OnBehalfOf As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ OnBehalfOf { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnBehalfOf : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.OnBehalfOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Token für die Identität ab, in deren Auftrag die Anforderung gestellt wird, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, das das Token der Identität enthält, für die die Anforderung erfolgt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Inhalt der wst: onbehalfof-Element dargestellt. Dieses optionale Element gibt an, dass der anforderer die Anforderung im Auftrag einer anderen Identität stammt.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Participants">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.Participants Participants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.Participants Participants" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Participants" />
      <MemberSignature Language="VB.NET" Value="Public Property Participants As Participants" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::Participants ^ Participants { System::IdentityModel::Protocols::WSTrust::Participants ^ get(); void set(System::IdentityModel::Protocols::WSTrust::Participants ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Participants : System.IdentityModel.Protocols.WSTrust.Participants with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Participants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Participants</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Teilnehmer ab, die berechtigt sind, das ausgestellte Token zu verwenden, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Protocols.WSTrust.Participants" />, das die Teilnehmer enthält, die berechtigt sind, um das ausgestellte Token zu verwenden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des Elements Wst:Participants dar. Dieses optionale Element gibt zusätzliche Teilnehmern, die autorisiert sind, um das Token verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProofEncryption">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement ProofEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement ProofEncryption" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property ProofEncryption As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ ProofEncryption { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProofEncryption : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Token ab, das zum Verschlüsseln des Prüftokens verwendet werden soll, oder legt dieses fest.</summary>
        <value>Eine <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, die das Token enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des Elements Wst:ProofEncryption dar. Dieses optionale Element enthält das Token, das zum Verschlüsseln der Prüfschlüssel verwendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Renewing">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.Renewing Renewing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.Renewing Renewing" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Renewing" />
      <MemberSignature Language="VB.NET" Value="Public Property Renewing As Renewing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::Renewing ^ Renewing { System::IdentityModel::Protocols::WSTrust::Renewing ^ get(); void set(System::IdentityModel::Protocols::WSTrust::Renewing ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Renewing : System.IdentityModel.Protocols.WSTrust.Renewing with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Renewing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Renewing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Erneuerungs-Semantik für eine WS-Trust-Renew-Anforderung ab oder legt diese fest.</summary>
        <value>Gibt <see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" /> zurück, das die Erneuerungs-Semantik enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt der Wst: erneuert Element. Dieses optionale Element gibt die Renew-Semantik für eine WS-Trust-erneuerungsanforderung an.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTarget">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement RenewTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement RenewTarget" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.RenewTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property RenewTarget As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ RenewTarget { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenewTarget : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.RenewTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Token ab, das in einer WS-Trust-Erneuerungsanforderung erneuert werden soll, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, das das Token enthält, das erneuert werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt eines Elements Wst:RenewTarget dar. Dieses Element enthält die Informationen über das Token in einem WS-Trust erneuert werden soll. erneuern Sie die Anforderung.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryParameters">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken SecondaryParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken SecondaryParameters" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.SecondaryParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property SecondaryParameters As RequestSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ SecondaryParameters { System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ get(); void set(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecondaryParameters : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.SecondaryParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Parameter ab, für die der Anfordernde nicht der Ersteller ist, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />, das sekundäre Parameter für die Anforderung enthält. Das heißt, Parameter, für die der Anfordernde nicht der Absender ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt eines Elements Wst:SecondaryParameters dar. Dieses optionale Element enthält Parameter, die für die der anforderer nicht vom Absender ist. Ein STS möchten verwenden Sie die Werte in diesem Element basierend auf dessen Richtlinie gefunden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTarget">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement ValidateTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement ValidateTarget" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ValidateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateTarget As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ ValidateTarget { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateTarget : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ValidateTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Token ab, das in einer WS-Trust-Validierungsanforderung validiert werden soll, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, das das Token enthält, das überprüft werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt eines Elements Wst:ValidateTarget dar. Dieses Element enthält die Informationen über das Token in einem WS-Trust überprüft werden Anforderung überprüfen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>