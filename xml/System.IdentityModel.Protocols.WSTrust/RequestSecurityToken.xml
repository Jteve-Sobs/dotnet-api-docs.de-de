<Type Name="RequestSecurityToken" FullName="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken">
  <Metadata><Meta Name="ms.openlocfilehash" Value="39f852ee264a589efa09f333b6ee922d0d82b6d2" /><Meta Name="ms.sourcegitcommit" Value="11d168140aa8fade0768c2a9dde3e3bcacfdfb7d" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="05/27/2020" /><Meta Name="ms.locfileid" Value="83979478" /></Metadata><TypeSignature Language="C#" Value="public class RequestSecurityToken : System.IdentityModel.Protocols.WSTrust.WSTrustMessage" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RequestSecurityToken extends System.IdentityModel.Protocols.WSTrust.WSTrustMessage" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />
  <TypeSignature Language="VB.NET" Value="Public Class RequestSecurityToken&#xA;Inherits WSTrustMessage" />
  <TypeSignature Language="C++ CLI" Value="public ref class RequestSecurityToken : System::IdentityModel::Protocols::WSTrust::WSTrustMessage" />
  <TypeSignature Language="F#" Value="type RequestSecurityToken = class&#xA;    inherit WSTrustMessage" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.Protocols.WSTrust.WSTrustMessage</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Stellt das wst:RequestSecurityToken-Element (RST) dar, das verwendet wird, um ein Sicherheitstoken anzufordern.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das WST: RequestSecurityToken-Element (Message) enthält die Parameter und Eigenschaften, die verwendet werden, um ein Sicherheits Token von einem Sicherheitstokendienst (STS) anzufordern. Die Nachricht (oder das-Element) wird als RST abgekürzt. Die <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken>-Klasse enthält Eigenschaften, die die Elemente des RST darstellen. Ein RST kann eine Anforderung bilden, die einer der von WS-Trust definierten Anforderungs Bindungen entspricht. beispielsweise die Ausstellungs Bindung, die Erneuerungs Bindung, die Validate-Bindung oder die Cancel-Bindung. Viele der Eigenschaften in der <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken>-Klasse entsprechen Elementen, die nur in bestimmten Arten von Anforderungen vorhanden sind, die von diesen Bindungen definiert werden. Abhängig von der Art der Anforderung, die ein bestimmtes <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> Objekt darstellt, oder den Parametern, die in der jeweiligen dargestellten Anforderung vorhanden sind, können einige Eigenschaften des Objekts `null`sein.  
  
 Der STS gibt eine Antwort auf die Anforderung in einer Nachricht zurück, die ein WST: RequestSecurityTokenResponse-Element (RSTR) enthält. Diese Meldung wird durch die <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse>-Klasse dargestellt.  
  
 [!INCLUDE[wif_wstrust_ref](~/includes/wif-wstrust-ref-md.md)]  
  
   
  
## Examples  
 Das Codebeispiel, das in diesem Thema verwendet wird, stammt aus dem `Custom Token` Beispiel. In diesem Beispiel werden benutzerdefinierte Klassen bereitstellt, die die Verarbeitung von Simple Web Tokens (Swap) ermöglichen. Sie beinhaltet eine Implementierung eines passiven STS, der ein Swap-Token bereitstellen kann. Der STS wird von einer Klasse implementiert, die von <xref:System.IdentityModel.SecurityTokenService>abgeleitet ist. Viele der Methoden der <xref:System.IdentityModel.SecurityTokenService>-Klasse, die von der tokenausstellungspipeline aufgerufen werden, nehmen ein <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken>-Objekt als eins, wenn die Parameter sind. Informationen zu diesem Beispiel und anderen Beispielen, die für WIF verfügbar sind, und Informationen dazu, wo Sie heruntergeladen werden, finden Sie unter [Beispiel Index für WIF-Code](/dotnet/framework/security/wif-code-sample-)  
  
 Im folgenden Codebeispiel wird eine Implementierung der <xref:System.IdentityModel.SecurityTokenService.GetScope%2A?displayProperty=nameWithType>-Methode veranschaulicht. Die-Methode verwendet eine <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken> als einen ihrer Parameter und Eigenschaften dieses Parameters, um Eigenschaften für das <xref:System.IdentityModel.Scope> Objekt festzulegen, das von der-Methode zurückgegeben wird.  
  
 [!code-csharp[WIFCustomTokenSTS#4](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#4)]  
[!code-csharp[WIFCustomTokenSTS#5](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#5)]  
[!code-csharp[WIFCustomTokenSTS#7](~/samples/snippets/csharp/VS_Snippets_Misc/wifcustomtokensts/cs/passivests/customsecuritytokenservice.cs#7)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.SecurityTokenService" />
    <altmember cref="T:System.IdentityModel.Protocols.WSTrust.RequestedSecurityToken" />
    <altmember cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestSecurityToken ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestSecurityToken();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Klasse.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die Eigenschaften <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.RequestType%2A> und <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType%2A> werden mit `null`initialisiert.  
  
 Dieser Konstruktor wird normalerweise vom Empfänger verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestSecurityToken (string requestType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string requestType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (requestType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestSecurityToken(System::String ^ requestType);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestSecurityToken : string -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestSecurityToken requestType" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requestType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestType">Eine Zeichenfolge, die die Anforderungstyp-URI enthält.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Klasse mit der angegebenen Anforderung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeyType%2A>-Eigenschaft wird mit `null` initialisiert.  
  
 Dieser Konstruktor wird normalerweise vom Absender verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RequestSecurityToken (string requestType, string keyType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string requestType, string keyType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (requestType As String, keyType As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RequestSecurityToken(System::String ^ requestType, System::String ^ keyType);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.Protocols.WSTrust.RequestSecurityToken : string * string -&gt; System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" Usage="new System.IdentityModel.Protocols.WSTrust.RequestSecurityToken (requestType, keyType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="requestType" Type="System.String" />
        <Parameter Name="keyType" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="requestType">Eine Zeichenfolge, die die Anforderungstyp-URI enthält.</param>
        <param name="keyType">Eine Zeichenfolge, die den Schlüsseltyp-URI enthält. Dabei sollte es sich um eine der von der <see cref="T:System.IdentityModel.Protocols.WSTrust.KeyTypes" />-Klasse definierten Konstanten handeln.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />-Klasse mit der angegebenen Anforderung.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 In der folgenden Tabelle wird der anfängliche Wert der <xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits%2A>-Eigenschaft für bestimmte Werte des `keyType`-Parameters angezeigt.  
  
|`keyType`-Parameter|<xref:System.IdentityModel.Protocols.WSTrust.WSTrustMessage.KeySizeInBits%2A>-Eigenschaft|  
|-------------------------|-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|  
|<xref:System.IdentityModel.Protocols.WSTrust.KeyTypes.Asymmetric>|1024|  
|<xref:System.IdentityModel.Protocols.WSTrust.KeyTypes.Bearer>|0|  
|<xref:System.IdentityModel.Protocols.WSTrust.KeyTypes.Symmetric>|256|  
  
 Dieser Konstruktor wird normalerweise vom Absender verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActAs">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement ActAs { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement ActAs" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ActAs" />
      <MemberSignature Language="VB.NET" Value="Public Property ActAs As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ ActAs { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActAs : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ActAs" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Sicherheitstoken für die Identität des Anfordernden ab, die dieser darzustellen versucht, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, der die Identität des Anfordernden darstellt, die er darzustellen versucht. Kann <see langword="null" /> sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des WST: ACTAS-Elements dar. Dieses optionale Element unterstützt Delegierungs Szenarios und gibt an, dass der Anforderer die Anforderung für die Verwendung als andere Identität sendet. Dieses Element wird in WS-Trust 1,4 eingeführt. Diese Eigenschaft wird in Anforderungen `null`, die keine Delegierung beinhalten.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AdditionalContext">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.AdditionalContext AdditionalContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.AdditionalContext AdditionalContext" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.AdditionalContext" />
      <MemberSignature Language="VB.NET" Value="Public Property AdditionalContext As AdditionalContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::AdditionalContext ^ AdditionalContext { System::IdentityModel::Protocols::WSTrust::AdditionalContext ^ get(); void set(System::IdentityModel::Protocols::WSTrust::AdditionalContext ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AdditionalContext : System.IdentityModel.Protocols.WSTrust.AdditionalContext with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.AdditionalContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.AdditionalContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die zusätzlichen Kontextinformationen für die Anforderung ab oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Protocols.WSTrust.AdditionalContext" />, das zusätzliche Kontextinformationen für die Anforderung enthält. Kann <see langword="null" /> sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des auth: additionalcontext-Elements dar. Dieses optionale Element stellt zusätzliche Informationen bereit, die vom Sicherheitstokendienst (STS) im tokenausstellungs-Prozess verwendet werden können.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CancelTarget">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement CancelTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement CancelTarget" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.CancelTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelTarget As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ CancelTarget { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CancelTarget : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.CancelTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Token ab, das in einer WS-Trust-Abbruchanforderung abgebrochen werden soll, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, das das Token enthält, das abgebrochen werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt eines WST: canceltarget-Elements dar. Dieses Element enthält die Informationen über das Token, das in einer WS-Trust-Cancel-Anforderung abgebrochen werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Claims">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestClaimCollection Claims { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestClaimCollection Claims" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Claims As RequestClaimCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestClaimCollection ^ Claims { System::IdentityModel::Protocols::WSTrust::RequestClaimCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Claims : System.IdentityModel.Protocols.WSTrust.RequestClaimCollection" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Claims" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestClaimCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Anspruchstypen ab, die vom Client (Anfordernden) angefordert werden.</summary>
        <value>Eine <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestClaimCollection" />, die die angeforderten Ansprüche enthält. Der Standard ist eine leere Auflistung.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des WST: Claims-Elements dar. Dieses optionale Element fordert den Satz spezifischer Anspruchs Typen an, die vom Client angefordert werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComputedKeyAlgorithm">
      <MemberSignature Language="C#" Value="public string ComputedKeyAlgorithm { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ComputedKeyAlgorithm" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ComputedKeyAlgorithm" />
      <MemberSignature Language="VB.NET" Value="Public Property ComputedKeyAlgorithm As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ComputedKeyAlgorithm { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ComputedKeyAlgorithm : string with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ComputedKeyAlgorithm" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen URI ab, der den gewünschten Algorithmus darstellt, der verwendet wird, wenn berechnete Schlüssel für ausgestellte Token verwendet werden.</summary>
        <value>Eine Zeichenfolge mit dem URI, der den berechneten Schlüsselalgorithmus darstellt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt das WST: computedkeyalgorithmus-Element dar. Dieses optionale Element gibt einen URI an, der den gewünschten Algorithmus darstellt, der verwendet werden soll, wenn berechnete Schlüssel für ausgestellte Token verwendet werden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delegatable">
      <MemberSignature Language="C#" Value="public bool? Delegatable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Delegatable" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Delegatable" />
      <MemberSignature Language="VB.NET" Value="Public Property Delegatable As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Delegatable { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Delegatable : Nullable&lt;bool&gt; with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Delegatable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das ausgestellte Token als delegierbar gekennzeichnet werden soll.</summary>
        <value><see langword="true" />, wenn das ausgestellte Token delegierbar ist; andernfalls <see langword="false" />. Kann <see langword="null" /> sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des WST: delegabel-Elements dar. Dieses optionale Element gibt an, dass das zurückgegebene Token möglicherweise an eine andere Partei delegiert werden kann. Dieses Element wird in WS-Trust 1,4 eingeführt. Diese Eigenschaft wird in Verbindung mit der <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo%2A>-Eigenschaft verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DelegateTo">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement DelegateTo { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement DelegateTo" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo" />
      <MemberSignature Language="VB.NET" Value="Public Property DelegateTo As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ DelegateTo { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DelegateTo : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Identität ab, auf die das ausgestelltes Token übertragen werden soll, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, das die Identität darstellt, an die das ausgestelltes Token delegiert werden soll. Kann <see langword="null" /> sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des WST: delegateto-Elements dar. Dieses optionale Element gibt an, dass das ausgestellte Token an die angegebene Identität delegiert wird. Dieses Element wird in WS-Trust 1,4 eingeführt. Diese Eigenschaft wird in Anforderungen `null`, die keine Delegierung beinhalten. Diese Eigenschaft wird in Verbindung mit der <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo%2A>-Eigenschaft verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Encryption">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement Encryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement Encryption" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Encryption" />
      <MemberSignature Language="VB.NET" Value="Public Property Encryption As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ Encryption { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Encryption : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Encryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Informationen über das Token und den Schlüssel ab, das bzw. der beim Verschlüsseln verwendet werden soll, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" /> mit den Verschlüsselungsinformationen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des WST: Encryption-Elements dar. Dieses optionale Element gibt an, dass alle zurückgegebenen geheimen Schlüssel in ausgestellten Sicherheits Token für das angegebene Token verschlüsselt werden sollen.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Forwardable">
      <MemberSignature Language="C#" Value="public bool? Forwardable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Forwardable" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Forwardable" />
      <MemberSignature Language="VB.NET" Value="Public Property Forwardable As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Forwardable { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Forwardable : Nullable&lt;bool&gt; with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Forwardable" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft einen Wert ab oder legt einen Wert fest, der angibt, ob das ausgestellte Token als weiterleitbar gekennzeichnet werden soll.</summary>
        <value><see langword="true" />, wenn das ausgestellte Token weiterleitbar ist; andernfalls <see langword="false" />. Kann <see langword="null" /> sein.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des WST: forwardable-Elements dar. Dieses optionale Element gibt an, ob das zurückgegebene Token an den Computer oder Dienst des Anforderers gebunden ist (angegeben durch einen `false` Wert). Dieses Element wird in WS-Trust 1,4 eingeführt. Diese Eigenschaft wird in Verbindung mit der <xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.DelegateTo%2A>-Eigenschaft verwendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Issuer">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.EndpointReference Issuer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.EndpointReference Issuer" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Issuer" />
      <MemberSignature Language="VB.NET" Value="Public Property Issuer As EndpointReference" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::EndpointReference ^ Issuer { System::IdentityModel::Protocols::WSTrust::EndpointReference ^ get(); void set(System::IdentityModel::Protocols::WSTrust::EndpointReference ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Issuer : System.IdentityModel.Protocols.WSTrust.EndpointReference with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Issuer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.EndpointReference</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Aussteller des wst:OnBehalfOf-Tokens ab oder legt ihn fest.</summary>
        <value>Eine <see cref="T:System.ServiceModel.EndpointAddress" />, die die Adresse des Ausstellers enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des WST: Aussteller-Elements dar. Dieses optionale Element identifiziert den Aussteller des Tokens, der im WST: onbehalfof-Element angegeben ist.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBehalfOf">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement OnBehalfOf { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement OnBehalfOf" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.OnBehalfOf" />
      <MemberSignature Language="VB.NET" Value="Public Property OnBehalfOf As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ OnBehalfOf { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OnBehalfOf : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.OnBehalfOf" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Token für die Identität ab, in deren Auftrag die Anforderung gestellt wird, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, das das Token der Identität enthält, für die die Anforderung erfolgt.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des WST: onbehalfof-Elements dar. Dieses optionale Element gibt an, dass der Anforderer die Anforderung im Auftrag einer anderen Identität sendet.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Participants">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.Participants Participants { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.Participants Participants" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Participants" />
      <MemberSignature Language="VB.NET" Value="Public Property Participants As Participants" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::Participants ^ Participants { System::IdentityModel::Protocols::WSTrust::Participants ^ get(); void set(System::IdentityModel::Protocols::WSTrust::Participants ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Participants : System.IdentityModel.Protocols.WSTrust.Participants with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Participants" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Participants</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Teilnehmer ab, die berechtigt sind, das ausgestellte Token zu verwenden, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Protocols.WSTrust.Participants" />, das die Teilnehmer enthält, die berechtigt sind, um das ausgestellte Token zu verwenden.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des WST: participants-Elements dar. Dieses optionale Element identifiziert weitere Teilnehmer, die zur Verwendung des Tokens autorisiert sind.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProofEncryption">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement ProofEncryption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement ProofEncryption" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption" />
      <MemberSignature Language="VB.NET" Value="Public Property ProofEncryption As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ ProofEncryption { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProofEncryption : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ProofEncryption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Token ab, das zum Verschlüsseln des Prüftokens verwendet werden soll, oder legt dieses fest.</summary>
        <value>Eine <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, die das Token enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des WST: proofencryption-Elements dar. Dieses optionale Element enthält das Token, das zum Verschlüsseln des Prüfschlüssels verwendet werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Renewing">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.Renewing Renewing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.Renewing Renewing" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Renewing" />
      <MemberSignature Language="VB.NET" Value="Public Property Renewing As Renewing" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::Renewing ^ Renewing { System::IdentityModel::Protocols::WSTrust::Renewing ^ get(); void set(System::IdentityModel::Protocols::WSTrust::Renewing ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Renewing : System.IdentityModel.Protocols.WSTrust.Renewing with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.Renewing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.Renewing</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Erneuerungs-Semantik für eine WS-Trust-Renew-Anforderung ab oder legt diese fest.</summary>
        <value>Gibt <see cref="T:System.IdentityModel.Protocols.WSTrust.Renewing" /> zurück, das die Erneuerungs-Semantik enthält.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt des WST: erneuern-Elements dar. Dieses optionale Element gibt die Erneuerungs Semantik für eine WS-Trust Renew-Anforderung an.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenewTarget">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement RenewTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement RenewTarget" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.RenewTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property RenewTarget As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ RenewTarget { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.RenewTarget : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.RenewTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Token ab, das in einer WS-Trust-Erneuerungsanforderung erneuert werden soll, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, das das Token enthält, das erneuert werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt eines WST: erneutarget-Elements dar. Dieses Element enthält die Informationen über das Token, das in einer WS-Trust-Erneuerungs Anforderung erneuert werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SecondaryParameters">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Protocols.WSTrust.RequestSecurityToken SecondaryParameters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Protocols.WSTrust.RequestSecurityToken SecondaryParameters" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.SecondaryParameters" />
      <MemberSignature Language="VB.NET" Value="Public Property SecondaryParameters As RequestSecurityToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ SecondaryParameters { System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ get(); void set(System::IdentityModel::Protocols::WSTrust::RequestSecurityToken ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SecondaryParameters : System.IdentityModel.Protocols.WSTrust.RequestSecurityToken with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.SecondaryParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Protocols.WSTrust.RequestSecurityToken</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft Parameter ab, für die der Anfordernde nicht der Ersteller ist, oder legt diese fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken" />, das sekundäre Parameter für die Anforderung enthält. Das heißt, Parameter, für die der Anfordernde nicht der Absender ist.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt eines WST: SecondaryParameters-Elements dar. Dieses optionale Element enthält Parameter, für die der Anforderer nicht der Absender ist. Ein STS kann die in diesem Element gefundenen Werte basierend auf seiner Richtlinie verwenden.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateTarget">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SecurityTokenElement ValidateTarget { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SecurityTokenElement ValidateTarget" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ValidateTarget" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateTarget As SecurityTokenElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SecurityTokenElement ^ ValidateTarget { System::IdentityModel::Tokens::SecurityTokenElement ^ get(); void set(System::IdentityModel::Tokens::SecurityTokenElement ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateTarget : System.IdentityModel.Tokens.SecurityTokenElement with get, set" Usage="System.IdentityModel.Protocols.WSTrust.RequestSecurityToken.ValidateTarget" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SecurityTokenElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Token ab, das in einer WS-Trust-Validierungsanforderung validiert werden soll, oder legt dieses fest.</summary>
        <value>Ein <see cref="T:System.IdentityModel.Tokens.SecurityTokenElement" />, das das Token enthält, das überprüft werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Stellt den Inhalt eines WST: validatetarget-Elements dar. Dieses Element enthält die Informationen über das Token, das in einer WS-Trust-Validate-Anforderung überprüft werden soll.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
