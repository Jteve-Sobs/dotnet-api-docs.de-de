<Type Name="PropertyExpression" FullName="System.Web.UI.WebControls.Expressions.PropertyExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="738d3342e9113481195e9244788a88f7010d41df" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585482" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.PropertyExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type PropertyExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="524b6-101">Stellt eine Möglichkeit zum Erstellen einer <see langword="Where" />-Klausel aus Parametern in einer <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" />-Auflistung bereit.</span>
      <span class="sxs-lookup">
        <span data-stu-id="524b6-101">Provides a way to create a <see langword="Where" /> clause from parameters in a <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> collection.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="524b6-102">Die <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> Klasse wird verwendet, mit der <xref:System.Web.UI.WebControls.QueryExtender> Steuerelement zum Filtern von Daten in Datenfelder.</span><span class="sxs-lookup"><span data-stu-id="524b6-102">The <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> class is used with the <xref:System.Web.UI.WebControls.QueryExtender> control to filter data in data fields.</span></span> <span data-ttu-id="524b6-103">Die <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> -Klasse vergleicht einen Eigenschaftswert einer Spalte mit einem angegebenen Wert.</span><span class="sxs-lookup"><span data-stu-id="524b6-103">The <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> class compares a property value of a column to a specified value.</span></span> <span data-ttu-id="524b6-104">Beispielsweise können Sie einen booleschen Wert auf den Wert in der Spalte nicht mehr unterstützte, eine Produkttabelle in einer Datenbank vergleichen.</span><span class="sxs-lookup"><span data-stu-id="524b6-104">For example, you can compare a Boolean value to the value in the discontinued column of a Products table in a database.</span></span>  
  
 <span data-ttu-id="524b6-105">Die <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> Klasse erstellt einen Gleichheitsvergleich (==) für den Wert jedes Parameters und der entsprechenden Eigenschaft des der <xref:System.Linq.IQueryable> Datenobjekt.</span><span class="sxs-lookup"><span data-stu-id="524b6-105">The <xref:System.Web.UI.WebControls.Expressions.PropertyExpression> class creates an equals (==) comparison for the value of each parameter and the corresponding property of the <xref:System.Linq.IQueryable> data object.</span></span> <span data-ttu-id="524b6-106">Wenn Sie mehr als einen Parameter angeben, die Parameter werden mit kombiniert den logischen `AND` Operator.</span><span class="sxs-lookup"><span data-stu-id="524b6-106">If you provide more than one parameter, the parameters are combined using the logical `AND` operator.</span></span> <span data-ttu-id="524b6-107">Parameter, die einen leeren Wert enthalten nicht hinzugefügt werden die `Where` Klausel.</span><span class="sxs-lookup"><span data-stu-id="524b6-107">Parameters that contain an empty value are not added to the `Where` clause.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="524b6-108">Im folgende Beispiel wird gezeigt, wie die Products-Tabelle der Suche nach der AdventureWorks-Datenbank für Produkte, deren `MakeFlag` Eigenschaft (eine boolesche Spalte)-Wert von `true`.</span><span class="sxs-lookup"><span data-stu-id="524b6-108">The following example shows how to search the Products table of the AdventureWorks database for products whose `MakeFlag` property (a Boolean column) is set to `true`.</span></span> <span data-ttu-id="524b6-109">Das Wahrheitswert-Parameter wird in einem Kontrollkästchen festgelegt.</span><span class="sxs-lookup"><span data-stu-id="524b6-109">The Boolean value parameter is set in a check box.</span></span> <span data-ttu-id="524b6-110">Das Ergebnis der Abfrage, die von zurückgegeben wird das <xref:System.Web.UI.WebControls.LinqDataSource> Steuerelement wird angezeigt, einem <xref:System.Web.UI.WebControls.GridView> Steuerelement.</span><span class="sxs-lookup"><span data-stu-id="524b6-110">The result of the query that is returned from the <xref:System.Web.UI.WebControls.LinqDataSource> control is displayed in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 <span data-ttu-id="524b6-111">Dieses Codebeispiel ist Teil eines umfangreicheren Beispiels, die in bereitgestellten [Exemplarische Vorgehensweise: Filtern von Daten in einer Webseite mithilfe von deklarativer Syntax](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).</span><span class="sxs-lookup"><span data-stu-id="524b6-111">This code example is part of a larger example that is provided in [Walkthrough: Filtering Data in a Web Page Using Declarative Syntax](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).</span></span>  
  
  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.PropertyExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="524b6-112">Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="524b6-112">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.PropertyExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="propertyExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">
          <span data-ttu-id="524b6-113">Das für die Abfrage zu verwendende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="524b6-113">The object to use for the query.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="524b6-114">Wendet ein<see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" />-Objekt an, indem das angegebene <see cref="T:System.Linq.IQueryable" />-Datenquellenobjekt verwendet wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="524b6-114">Applies a <see cref="T:System.Web.UI.WebControls.Expressions.PropertyExpression" /> object by using the specified <see cref="T:System.Linq.IQueryable" /> data source object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="524b6-115">Eine Instanz des Objekts, für das die Ausdrücke übernommen wurden.</span>
          <span class="sxs-lookup">
            <span data-stu-id="524b6-115">An instance of the object that the expressions were applied to.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="524b6-116">Diese Methode kombiniert die angegebenen <xref:System.Linq.IQueryable> Objekt mit den Ausdrücken in der <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> Auflistung mithilfe des logischen `AND` Operator.</span><span class="sxs-lookup"><span data-stu-id="524b6-116">This method combines the specified <xref:System.Linq.IQueryable> object with the expressions in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection by using the logical `AND` operator.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>