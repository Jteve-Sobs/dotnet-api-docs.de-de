<Type Name="OrderByExpression" FullName="System.Web.UI.WebControls.Expressions.OrderByExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2a37ac7920bcdb0c88a4aa2960dd0d3d21b6705e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69402207" /></Metadata><TypeSignature Language="C#" Value="public class OrderByExpression : System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit OrderByExpression extends System.Web.UI.WebControls.Expressions.DataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class OrderByExpression&#xA;Inherits DataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class OrderByExpression : System::Web::UI::WebControls::Expressions::DataSourceExpression" />
  <TypeSignature Language="F#" Value="type OrderByExpression = class&#xA;    inherit DataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.DataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ThenByExpressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Bietet eine Möglichkeit zum Anwenden eines Sortierausdrucks auf ein <see cref="T:System.Linq.IQueryable" />-Objekt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> -Klasse wird <xref:System.Web.UI.WebControls.QueryExtender> im-Steuerelement verwendet, um Daten in aufsteigender oder absteigender Reihenfolge zu sortieren. Die Sortierung erfolgt mit dem Standardvergleich für den Typ des Elements.  
  
 Das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement unterstützt eine Vielzahl von Optionen, die Sie zum Filtern von Daten verwenden können. Nachdem Sie die Filteroptionen verwendet haben, können Sie das <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> -Objekt verwenden, um die Daten zu sortieren.  
  
 Sie geben das zu sortierende Datenfeld mithilfe der <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField%2A> -Eigenschaft an. Sie geben die Sortierrichtung mithilfe der <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> -Eigenschaft an. Nachdem das <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> Objekt auf die Datenquelle angewendet wurde, können Sie die <xref:System.Web.UI.WebControls.Expressions.ThenBy> Ausdrücke verwenden, um eine nachfolgende Sortierung für ein anderes Datenfeld auszuführen.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Sie die Products-Tabelle der AdventureWorks-Datenbank nach Produkten durchsuchen, deren Namen mit der Zeichenfolge beginnen, die `SearchTextBox` im Textfeld angegeben ist. Das <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> -Objekt sortiert die Daten nach dem ListPrice-Datenfeld in absteigender Reihenfolge und dann nach dem Feld Product ID in aufsteigender Reihenfolge. Das Ergebnis der Abfrage, die vom <xref:System.Web.UI.WebControls.LinqDataSource> -Steuerelement zurückgegeben wird, wird in einem <xref:System.Web.UI.WebControls.GridView> -Steuerelement angezeigt.  
  
 Dieses Codebeispiel ist Teil eines größeren Beispiels, das in [Exemplarische Vorgehensweise bereitgestellt wird: Filtern von Daten in einer Webseite mithilfe von deklarativer](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)Syntax.  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />-Eigenschaft ist <see langword="null" />.</exception>
    <altmember cref="T:System.Web.UI.WebControls.QueryExtender" />
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">Übersicht über das QueryExtender-Webserver Steuerelement</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public OrderByExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; OrderByExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Eigenschaft des <see cref="T:System.Linq.IQueryable" />-Objekts ab, nach dem sortiert werden soll, oder legt diese fest.</summary>
        <value>Die Eigenschaft der <see cref="T:System.Linq.IQueryable" />-Datenquelle, nach der sortiert werden soll.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> -Objekt sortiert die Daten in einem Datenfeld. Der nachfolgende Sortiervorgang kann mithilfe der <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> -Eigenschaft für ein anderes Datenfeld ausgeführt werden.  
  
   
  
## Examples  
 Das folgende Beispiel zeigt, wie Daten nach dem Feld "ListPrice" in absteigender Reihenfolge und dann nach dem Feld "Product ID" in aufsteigender Reihenfolge sortiert werden. Dieses Codebeispiel ist Teil eines größeren Beispiels, das in [Exemplarische Vorgehensweise bereitgestellt wird: Filtern von Daten in einer Webseite mithilfe von deklarativer](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)Syntax.  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SortDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SortDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As SortDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SortDirection Direction { System::Web::UI::WebControls::SortDirection get(); void set(System::Web::UI::WebControls::SortDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Web.UI.WebControls.SortDirection with get, set" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SortDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Sortierrichtung des <see cref="T:System.Linq.IQueryable" />-Datenquellenobjekts ab oder legt diese fest.</summary>
        <value>Die Sortierrichtung des Datenquellenobjekts.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> -Klasse wird <xref:System.Web.UI.WebControls.QueryExtender> im-Steuerelement verwendet, um Daten in aufsteigender oder absteigender Reihenfolge zu sortieren. Die Richtung des Sortier Vorgangs wird mithilfe der <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction%2A> -Eigenschaft angegeben.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Daten nach dem Feld "ListPrice" in absteigender Reihenfolge und dann nach dem Feld "ProductID" in aufsteigender Reihenfolge sortiert werden. Dieses Codebeispiel ist Teil eines größeren Beispiels, das in [Exemplarische Vorgehensweise bereitgestellt wird: Filtern von Daten in einer Webseite mithilfe von deklarativer](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)Syntax.  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.OrderByExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="orderByExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Gibt die Datenquelle an, auf die die Sortierung angewendet werden soll.</param>
        <summary>Übernimmt einen Sortierausdruck auf Grundlage eines <see cref="T:System.Linq.IQueryable" />-Werts und eines <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.DataField" />-Werts für ein <see cref="P:System.Web.UI.WebControls.Expressions.OrderByExpression.Direction" />-Objekt.</summary>
        <returns>Eine Instanz der Datenquelle, für die der Ausdruck übernommen wurde.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ThenByExpressions">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Web.UI.WebControls.Expressions.ThenBy&gt; ThenByExpressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ThenByExpressions As Collection(Of ThenBy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ ThenByExpressions { System::Collections::ObjectModel::Collection&lt;System::Web::UI::WebControls::Expressions::ThenBy ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ThenByExpressions : System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;" Usage="System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Web.UI.WebControls.Expressions.ThenBy&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Auflistung von <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" />-Ausdrücken ab, die nach Anwenden eines <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />-Werts auf die Datenquelle angewendet werden sollen, oder legt diese fest.</summary>
        <value>Die Auflistung von <see cref="T:System.Web.UI.WebControls.Expressions.ThenBy" />-Ausdrücken, die nach Anwenden des <see cref="T:System.Web.UI.WebControls.Expressions.OrderByExpression" />-Werts auf die Datenquelle angewendet werden sollen.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Nachdem ein Sortiervorgang mit dem <xref:System.Web.UI.WebControls.Expressions.OrderByExpression> <xref:System.Web.UI.WebControls.QueryExtender> im-Steuerelement ausgeführt wurde, können nachfolgende Sortiervorgänge mithilfe der <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A> -Eigenschaft ausgeführt werden.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Daten nach dem Feld "ListPrice" in absteigender Reihenfolge und dann nach dem Feld "Product ID <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>" in aufsteigender Reihenfolge mithilfe von sortiert werden. Dieses Codebeispiel ist Teil eines größeren Beispiels, das in [Exemplarische Vorgehensweise bereitgestellt wird: Filtern von Daten in einer Webseite mithilfe von deklarativer](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)Syntax.  
  
```  
<asp:OrderByExpression DataField="ListPrice"   
    Direction="Descending">  
  <asp:ThenBy DataField="ProductID" Direction="Ascending"/>  
</asp:OrderByExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
