<Type Name="RangeExpression" FullName="System.Web.UI.WebControls.Expressions.RangeExpression">
  <Metadata><Meta Name="ms.openlocfilehash" Value="90b1d04037a75905933b6d6311c400cdbea1ed0a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70597541" /></Metadata><TypeSignature Language="C#" Value="public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RangeExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.RangeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class RangeExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class RangeExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <TypeSignature Language="F#" Value="type RangeExpression = class&#xA;    inherit ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Bietet eine Möglichkeit, um zu bestimmen, ob ein Wert größer oder kleiner als ein angegebener Wert ist, oder, ob ein Wert zwischen zwei angegebenen Werten liegt.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement bietet die Möglichkeit, Daten in einer Webseite mithilfe von Klassen <xref:System.Web.UI.WebControls.Expressions> im-Namespace zu filtern. Diese Klassen enthalten die <xref:System.Web.UI.WebControls.Expressions.RangeExpression> -Klasse.  
  
 Die <xref:System.Web.UI.WebControls.Expressions.RangeExpression> -Klasse durchsucht eine Datenspalte mit einem Paar von Werten, die den Bereich definieren. Verwenden Sie die <xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A> -Eigenschaft, um die zu durchsuchende Spalte anzugeben. Verwenden Sie die <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> -Eigenschaft, um anzugeben, ob das Minimalergebnis in die Suchergebnisse eingeschlossen oder ausgeschlossen werden soll <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> . verwenden Sie die-Eigenschaft, um anzugeben, ob der Maximalwert eingeschlossen oder ausgeschlossen werden soll. Die maximalen und minimalen Werte können in [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] -Steuerelementen angegeben werden, und die Werte können dann als Parameter in <xref:System.Web.UI.WebControls.ControlParameter> -Steuerelementen an das <xref:System.Web.UI.WebControls.QueryExtender> -Steuerelement weitergegeben werden. Die Ergebnisse werden in der Regel in einem Daten gebundenen Steuerelement angezeigt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie die ListPrice-Spalte in der Products-Tabelle der AdventureWorks-Datenbank für Produkte mit einem Listenpreis in dem Bereich durchsucht wird, `FromTextBox` der `ToTextBox` in den Textfeldern und angegeben ist. Der Filter enthält den minimalen Wert, aber schließt den maximalen Wert in den Ergebnissen aus. Die Ergebnisse werden in einem <xref:System.Web.UI.WebControls.Label> -Steuerelement angezeigt.  
  
 Dieses Codebeispiel ist Teil eines größeren Beispiels, das in Exemplarische Vorgehensweise [: Filtern von Daten in einer Webseite mithilfe von deklarativer Syntax](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)bereitgestellt wird.  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />-Eigenschaft ist <see langword="null" />.</exception>
    <related type="Article" href="https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702">Übersicht über das QueryExtender-Webserver Steuerelement</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RangeExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RangeExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" />-Klasse.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft das Feld für den Vergleich ab legt es fest.</summary>
        <value>Das für den Vergleich zu verwendende Feld.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Der Bereichs Ausdruck sucht das Datenfeld für den angegebenen Bereich.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie Sie in der Tabelle "Products" der AdventureWorks-Datenbank nach Produkten mit einem Listenpreis in dem Bereich suchen, der in den `FromTextBox` Textfeldern und `ToTextBox` angegeben ist.  
  
 Dieses Codebeispiel ist Teil eines größeren Beispiels, das in Exemplarische Vorgehensweise [: Filtern von Daten in einer Webseite mithilfe von deklarativer Syntax](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)bereitgestellt wird.  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberSignature Language="F#" Value="override this.GetQueryable : System.Linq.IQueryable -&gt; System.Linq.IQueryable" Usage="rangeExpression.GetQueryable source" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Das Objekt, das für den Vergleich verwendet werden soll.</param>
        <summary>Ruft das <see cref="T:System.Linq.IQueryable" />-Objekt ab, für das der Bereichsvergleich ausgeführt wurde.</summary>
        <returns>Eine Instanz des <see cref="T:System.Linq.IQueryable" />-Objekts, auf das der Ausdruck angewendet wurde.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Diese Methode verwendet das angegebene <xref:System.Linq.IQueryable> -Objekt zum Auflösen des Ausdrucks.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Die <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />-Eigenschaft ist <see langword="null" />.  
  
- oder - 
Die <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />-Eigenschaft und die <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />-Eigenschaft sind auf <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> festgelegt.  
  
- oder - 
Die <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />-Eigenschaft oder <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />-Eigenschaft ist nicht auf <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" /> festgelegt, und die Parameterauflistung ist leer.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MaxType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MaxType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MaxType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Höchstwert des Bereichs ab oder legt diesen fest.</summary>
        <value>Der Vergleichstyp für den maximalen Wert. Der Standardwert ist <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />. Dies bedeutet, dass der Vergleich des maximalen Werts nicht ausgeführt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mögliche Werte für diese Eigenschaft sind <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>und <xref:System.Web.UI.WebControls.Expressions.RangeType.None>.  
  
 Wenn auf <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive> festgelegt ist, ist der maximale Wert des Bereichs in den Suchergebnissen enthalten. <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> Dies entspricht dem Ausführen eines > =-Vorgangs. Wenn Sie die-Eigenschaft auf <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive> Feld festlegen, entspricht dies der Angabe eines > oder < Vorgangs. Wenn Sie die-Eigenschaft auf <xref:System.Web.UI.WebControls.Expressions.RangeType.None>festlegen, wird für den Bereich keine Begrenzung festgelegt.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie der Minimalwert, der im Bereich angegeben ist, eingeschlossen wird und wie der Höchstwert ausgeschlossen wird. Die maximalen und minimalen Werte werden in Textfelder eingegeben. Dieses Codebeispiel ist Teil eines größeren Beispiels, das in Exemplarische Vorgehensweise [: Filtern von Daten in einer Webseite mithilfe von deklarativer Syntax](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)bereitgestellt wird.  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MinType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberSignature Language="VB.NET" Value="Public Property MinType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MinType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberSignature Language="F#" Value="member this.MinType : System.Web.UI.WebControls.Expressions.RangeType with get, set" Usage="System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Mindestwert des Bereichs ab oder legt diesen fest.</summary>
        <value>Der Vergleichstyp für den minimalen Wert. Der Standardwert ist <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />. Dies bedeutet, dass der Vergleich des minimalen Werts nicht ausgeführt wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mögliche Werte für diese Eigenschaft sind <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>und <xref:System.Web.UI.WebControls.Expressions.RangeType.None>.  
  
 Wenn die <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> - <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> Eigenschaft oder die- <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>Eigenschaft auf festgelegt ist, werden die Mindest-und Höchstwerte des Bereichs in den Suchergebnissen berücksichtigt. Dies entspricht dem Ausführen eines > =-oder \<=-Vorgangs. Das <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive> -Feld entspricht dem >-oder <-Vorgang <xref:System.Web.UI.WebControls.Expressions.RangeType.None> und erzwingt keinen Grenzwert für den Bereich.  
  
   
  
## Examples  
 Im folgenden Beispiel wird gezeigt, wie der Minimalwert, der im Bereich angegeben ist, eingeschlossen wird und wie der Höchstwert ausgeschlossen wird. Die maximalen und minimalen Werte werden in Textfelder eingegeben. Dieses Codebeispiel ist Teil eines größeren Beispiels, das in Exemplarische Vorgehensweise [: Filtern von Daten in einer Webseite mithilfe von deklarativer Syntax](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)bereitgestellt wird.  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
