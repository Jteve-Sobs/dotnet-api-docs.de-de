<Type Name="ICompiledExpressionRoot" FullName="System.Activities.XamlIntegration.ICompiledExpressionRoot">
  <TypeSignature Language="C#" Value="public interface ICompiledExpressionRoot" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICompiledExpressionRoot" />
  <TypeSignature Language="DocId" Value="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICompiledExpressionRoot" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICompiledExpressionRoot" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="55fc5-101">Enthält Informationen über einen kompilierten Ausdrucksstamm.</span><span class="sxs-lookup"><span data-stu-id="55fc5-101">Specifies information about a compiled expression root.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="CanExecuteExpression">
      <MemberSignature Language="C#" Value="public bool CanExecuteExpression (string expressionText, bool isReference, System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt; locations, out int expressionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanExecuteExpression(string expressionText, bool isReference, class System.Collections.Generic.IList`1&lt;class System.Activities.LocationReference&gt; locations, [out] int32&amp; expressionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.CanExecuteExpression(System.String,System.Boolean,System.Collections.Generic.IList{System.Activities.LocationReference},System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function CanExecuteExpression (expressionText As String, isReference As Boolean, locations As IList(Of LocationReference), ByRef expressionId As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CanExecuteExpression(System::String ^ expressionText, bool isReference, System::Collections::Generic::IList&lt;System::Activities::LocationReference ^&gt; ^ locations, [Runtime::InteropServices::Out] int % expressionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionText" Type="System.String" />
        <Parameter Name="isReference" Type="System.Boolean" />
        <Parameter Name="locations" Type="System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt;" />
        <Parameter Name="expressionId" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="expressionText"><span data-ttu-id="55fc5-102">Der verwendete Text des Ausdrucks.</span><span class="sxs-lookup"><span data-stu-id="55fc5-102">The expression text used.</span></span></param>
        <param name="isReference">
          <span data-ttu-id="55fc5-103"><see langword="True" /> wenn Verweis; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="55fc5-103"><see langword="True" /> if reference; otherwise, <see langword="false" />.</span></span></param>
        <param name="locations"><span data-ttu-id="55fc5-104">Eine Auflistung von Speicherorten.</span><span class="sxs-lookup"><span data-stu-id="55fc5-104">The collection of locations.</span></span></param>
        <param name="expressionId"><span data-ttu-id="55fc5-105">Die Ausdrucks-ID.</span><span class="sxs-lookup"><span data-stu-id="55fc5-105">The expression identifier.</span></span></param>
        <summary><span data-ttu-id="55fc5-106">Gibt an, ob <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> den Ausdruck ausführen kann.</span><span class="sxs-lookup"><span data-stu-id="55fc5-106">Indicates whether the <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> can execute expression.</span></span></summary>
        <returns>
          <span data-ttu-id="55fc5-107"><see langword="True" />, wenn der <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> den Ausdruck ausführen kann; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="55fc5-107"><see langword="True" /> if the <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> can execute expression; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetExpressionTreeForExpression">
      <MemberSignature Language="C#" Value="public System.Linq.Expressions.Expression GetExpressionTreeForExpression (int expressionId, System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt; locationReferences);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Linq.Expressions.Expression GetExpressionTreeForExpression(int32 expressionId, class System.Collections.Generic.IList`1&lt;class System.Activities.LocationReference&gt; locationReferences) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.GetExpressionTreeForExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference})" />
      <MemberSignature Language="VB.NET" Value="Public Function GetExpressionTreeForExpression (expressionId As Integer, locationReferences As IList(Of LocationReference)) As Expression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Linq::Expressions::Expression ^ GetExpressionTreeForExpression(int expressionId, System::Collections::Generic::IList&lt;System::Activities::LocationReference ^&gt; ^ locationReferences);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.Expressions.Expression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionId" Type="System.Int32" />
        <Parameter Name="locationReferences" Type="System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt;" />
      </Parameters>
      <Docs>
        <param name="expressionId"><span data-ttu-id="55fc5-108">Die Ausdrucks-ID.</span><span class="sxs-lookup"><span data-stu-id="55fc5-108">The expression identifier.</span></span></param>
        <param name="locationReferences"><span data-ttu-id="55fc5-109">Der Speicherortverweis.</span><span class="sxs-lookup"><span data-stu-id="55fc5-109">The location reference.</span></span></param>
        <summary><span data-ttu-id="55fc5-110">Ruft die Ausdrucksbaumstruktur ab, die für den Ausdruck verwendet wurde.</span><span class="sxs-lookup"><span data-stu-id="55fc5-110">Gets the expression tree used for the expression.</span></span></summary>
        <returns><span data-ttu-id="55fc5-111">Die Ausdrucksbaumstruktur, die für den Ausdruck verwendet wurde.</span><span class="sxs-lookup"><span data-stu-id="55fc5-111">The expression tree used for the expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLanguage">
      <MemberSignature Language="C#" Value="public string GetLanguage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetLanguage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.GetLanguage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLanguage () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetLanguage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="55fc5-112">Ruft die Sprache ab, die im Ausdrucksstammverzeichnis verwendet wird.</span><span class="sxs-lookup"><span data-stu-id="55fc5-112">Gets the language used in the expression root.</span></span></summary>
        <returns><span data-ttu-id="55fc5-113">Die benutzte Sprache.</span><span class="sxs-lookup"><span data-stu-id="55fc5-113">The language used.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredLocations">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;string&gt; GetRequiredLocations (int expressionId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetRequiredLocations(int32 expressionId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.GetRequiredLocations(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredLocations (expressionId As Integer) As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetRequiredLocations(int expressionId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionId" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="expressionId"><span data-ttu-id="55fc5-114">Die Ausdrucks-ID.</span><span class="sxs-lookup"><span data-stu-id="55fc5-114">The expression identifier.</span></span></param>
        <summary><span data-ttu-id="55fc5-115">Ruft die Liste der erforderlichen Positionen für den Ausdrucksstamm ab.</span><span class="sxs-lookup"><span data-stu-id="55fc5-115">Gets the list of required locations for the expression root.</span></span></summary>
        <returns><span data-ttu-id="55fc5-116">Die Liste der erforderlichen Positionen für den Ausdrucksstamm.</span><span class="sxs-lookup"><span data-stu-id="55fc5-116">The list of required locations for the expression root.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeExpression">
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="55fc5-117">Ruft den <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> auf.</span><span class="sxs-lookup"><span data-stu-id="55fc5-117">Invokes the <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeExpression">
      <MemberSignature Language="C#" Value="public object InvokeExpression (int expressionId, System.Collections.Generic.IList&lt;System.Activities.Location&gt; locations);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeExpression(int32 expressionId, class System.Collections.Generic.IList`1&lt;class System.Activities.Location&gt; locations) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.Location})" />
      <MemberSignature Language="VB.NET" Value="Public Function InvokeExpression (expressionId As Integer, locations As IList(Of Location)) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeExpression(int expressionId, System::Collections::Generic::IList&lt;System::Activities::Location ^&gt; ^ locations);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionId" Type="System.Int32" />
        <Parameter Name="locations" Type="System.Collections.Generic.IList&lt;System.Activities.Location&gt;" />
      </Parameters>
      <Docs>
        <param name="expressionId"><span data-ttu-id="55fc5-118">Die Ausdrucks-ID.</span><span class="sxs-lookup"><span data-stu-id="55fc5-118">The expression identifier.</span></span></param>
        <param name="locations"><span data-ttu-id="55fc5-119">Die verwendeten Positionen.</span><span class="sxs-lookup"><span data-stu-id="55fc5-119">The locations used.</span></span></param>
        <summary><span data-ttu-id="55fc5-120">Ruft <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> unter Verwendung des angegebenen Ausdrucksbezeichners und der Speicherorte auf.</span><span class="sxs-lookup"><span data-stu-id="55fc5-120">Invokes the <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> using the specified expression identifier and locations.</span></span></summary>
        <returns><span data-ttu-id="55fc5-121">Der aufgerufene Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="55fc5-121">The invoked expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InvokeExpression">
      <MemberSignature Language="C#" Value="public object InvokeExpression (int expressionId, System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt; locations, System.Activities.ActivityContext activityContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object InvokeExpression(int32 expressionId, class System.Collections.Generic.IList`1&lt;class System.Activities.LocationReference&gt; locations, class System.Activities.ActivityContext activityContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.ICompiledExpressionRoot.InvokeExpression(System.Int32,System.Collections.Generic.IList{System.Activities.LocationReference},System.Activities.ActivityContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ InvokeExpression(int expressionId, System::Collections::Generic::IList&lt;System::Activities::LocationReference ^&gt; ^ locations, System::Activities::ActivityContext ^ activityContext);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expressionId" Type="System.Int32" />
        <Parameter Name="locations" Type="System.Collections.Generic.IList&lt;System.Activities.LocationReference&gt;" />
        <Parameter Name="activityContext" Type="System.Activities.ActivityContext" />
      </Parameters>
      <Docs>
        <param name="expressionId"><span data-ttu-id="55fc5-122">Die Ausdrucks-ID.</span><span class="sxs-lookup"><span data-stu-id="55fc5-122">The expression identifier.</span></span></param>
        <param name="locations"><span data-ttu-id="55fc5-123">Die Speicherorte.</span><span class="sxs-lookup"><span data-stu-id="55fc5-123">The locations.</span></span></param>
        <param name="activityContext"><span data-ttu-id="55fc5-124">Der Aktivitätskontext.</span><span class="sxs-lookup"><span data-stu-id="55fc5-124">The activity context.</span></span></param>
        <summary><span data-ttu-id="55fc5-125">Ruft <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> unter Verwendung des angegebenen Ausdrucksbezeichners, der Speicherorte und des Aktivitätskontexts auf.</span><span class="sxs-lookup"><span data-stu-id="55fc5-125">Invokes the <see cref="T:System.Activities.XamlIntegration.ICompiledExpressionRoot" /> using the specified expression identifier and locations and activity context.</span></span></summary>
        <returns><span data-ttu-id="55fc5-126">Der aufgerufene Ausdruck.</span><span class="sxs-lookup"><span data-stu-id="55fc5-126">The invoked expression.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>