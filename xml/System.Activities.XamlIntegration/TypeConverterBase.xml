<Type Name="TypeConverterBase" FullName="System.Activities.XamlIntegration.TypeConverterBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e1ca87112b344b036e5be20bebd2f4747e1a9d2f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class TypeConverterBase : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit TypeConverterBase extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Activities.XamlIntegration.TypeConverterBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class TypeConverterBase&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class TypeConverterBase abstract : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b18c5-101">Stellt Methoden bereit, mit denen abgeleitete Typkonverterklassen Objekte in unterschiedliche Darstellungen/aus unterschiedlichen Darstellungen konvertieren können.</span>
      <span class="sxs-lookup">
        <span data-stu-id="b18c5-101">Provides methods that derived type converter classes can use for converting objects to and from various representations.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.TypeConverterBase.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b18c5-102">Die für die Konvertierung verwendeten Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-102">Context information that is used for conversion.</span>
          </span>
        </param>
        <param name="sourceType">
          <span data-ttu-id="b18c5-103">Der Typ, aus dem konvertiert wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-103">The type to convert from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b18c5-104">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob die Konvertierung aus dem angegebenen Typ möglich ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-104">When overridden in a derived class, determines whether the specified type can be converted from.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b18c5-105">
            <see langword="true" />, wenn der angegebene Typ konvertiert werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-105">
              <see langword="true" /> if the specified type can be converted from; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.TypeConverterBase.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b18c5-106">Die für die Konvertierung verwendeten Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-106">Context information that is used for conversion.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b18c5-107">Der Typ, in den konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-107">The type to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b18c5-108">Bestimmt beim Überschreiben in einer abgeleiteten Klasse, ob die Konvertierung in den angegebenen Typ möglich ist.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-108">When overridden in a derived class, determines whether the specified type can be converted to.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b18c5-109">
            <see langword="true" />, wenn der angegebene Typ konvertiert werden kann, andernfalls <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-109">
              <see langword="true" /> if the specified type can be converted to; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.TypeConverterBase.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b18c5-110">Die für die Konvertierung verwendeten Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-110">Context information that is used for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b18c5-111">Eine optionale <see cref="T:System.Globalization.CultureInfo" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-111">An optional <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="b18c5-112">Erfolgt hier keine Angabe, wird die aktuelle Kultur angenommen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-112">If not supplied, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b18c5-113">Das zu konvertierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-113">The object to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b18c5-114">Konvertiert beim Überschreiben in einer abgeleiteten Klasse den angegebenen Wert in eine neue Darstellung, die durch die abgeleitete Klasse angegeben wird.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-114">When overridden in a derived class, converts the specified value to a new representation specified by the derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b18c5-115">Der konvertierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-115">The converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.TypeConverterBase.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="b18c5-116">Die für die Konvertierung verwendeten Kontextinformationen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-116">Context information that is used for conversion.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="b18c5-117">Eine optionale <see cref="T:System.Globalization.CultureInfo" />-Klasse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-117">An optional <see cref="T:System.Globalization.CultureInfo" />.</span>
          </span>
          <span data-ttu-id="b18c5-118">Erfolgt hier keine Angabe, wird die aktuelle Kultur angenommen.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-118">If not supplied, the current culture is assumed.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="b18c5-119">Das zu konvertierende Objekt.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-119">The object to convert.</span>
          </span>
        </param>
        <param name="destinationType">
          <span data-ttu-id="b18c5-120">Der Typ, in den konvertiert werden soll.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-120">The type to convert to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b18c5-121">Konvertiert beim Überschreiben in einer abgeleiteten Klasse den angegebenen Wert in die angegebene Darstellung.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-121">When overridden in a derived class, converts the specified value to the specified representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b18c5-122">Der konvertierte Wert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="b18c5-122">The converted value.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>