<Type Name="DynamicUpdateMapItemConverter" FullName="System.Activities.XamlIntegration.DynamicUpdateMapItemConverter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f35beec96b8d85c37f670c3cc6b12b3ec62dff9b" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69339487" /></Metadata><TypeSignature Language="C#" Value="public class DynamicUpdateMapItemConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DynamicUpdateMapItemConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class DynamicUpdateMapItemConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class DynamicUpdateMapItemConverter : System::ComponentModel::TypeConverter" />
  <TypeSignature Language="F#" Value="type DynamicUpdateMapItemConverter = class&#xA;    inherit TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Activities</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="96f07-101">Stellt einen Konverter für dynamische Updatezuordnungselemente dar.</span><span class="sxs-lookup"><span data-stu-id="96f07-101">Represents a converter for dynamic update map items.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DynamicUpdateMapItemConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DynamicUpdateMapItemConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="96f07-102">Initialisiert eine neue Instanz der <see cref="T:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="96f07-102">Initializes a new instance of the <see cref="T:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertFrom : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dynamicUpdateMapItemConverter.CanConvertFrom (context, sourceType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="96f07-103">Die für die Konvertierung verwendeten Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="96f07-103">Context information that is used for conversion.</span></span></param>
        <param name="sourceType"><span data-ttu-id="96f07-104">Der Typ, aus dem konvertiert wird.</span><span class="sxs-lookup"><span data-stu-id="96f07-104">The type to convert from.</span></span></param>
        <summary><span data-ttu-id="96f07-105">Bestimmt, ob aus dem angegebenen Typ konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="96f07-105">Determines whether the specified type can be converted from.</span></span></summary>
        <returns><span data-ttu-id="96f07-106"><see langword="true" />, wenn der angegebene Typ konvertiert werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96f07-106"><see langword="true" /> if the specified type can be converted from; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertTo">
      <MemberSignature Language="C#" Value="public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertTo (context As ITypeDescriptorContext, destinationType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.CanConvertTo : System.ComponentModel.ITypeDescriptorContext * Type -&gt; bool" Usage="dynamicUpdateMapItemConverter.CanConvertTo (context, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="96f07-107">Die für die Konvertierung verwendeten Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="96f07-107">Context information that is used for conversion.</span></span></param>
        <param name="destinationType"><span data-ttu-id="96f07-108">Der Typ, in den konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="96f07-108">The type to convert to.</span></span></param>
        <summary><span data-ttu-id="96f07-109">Bestimmt, ob in den angegebenen Typ konvertiert werden kann.</span><span class="sxs-lookup"><span data-stu-id="96f07-109">Determines whether the specified type can be converted to.</span></span></summary>
        <returns><span data-ttu-id="96f07-110"><see langword="true" />, wenn der angegebene Typ konvertiert werden kann, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96f07-110"><see langword="true" /> if the specified type can be converted to; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="override this.ConvertFrom : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj -&gt; obj" Usage="dynamicUpdateMapItemConverter.ConvertFrom (context, culture, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="96f07-111">Die für die Konvertierung verwendeten Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="96f07-111">Context information that is used for conversion.</span></span></param>
        <param name="culture"><span data-ttu-id="96f07-112">Eine optionale Kulturinformation.</span><span class="sxs-lookup"><span data-stu-id="96f07-112">An optional culture information.</span></span></param>
        <param name="value"><span data-ttu-id="96f07-113">Das zu konvertierende Objekt.</span><span class="sxs-lookup"><span data-stu-id="96f07-113">The object to convert.</span></span></param>
        <summary><span data-ttu-id="96f07-114">Konvertiert den angegebenen Wert in eine neue Darstellung, die durch die abgeleitete Klasse angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="96f07-114">Converts the specified value to a new representation specified by the derived class.</span></span></summary>
        <returns><span data-ttu-id="96f07-115"><see langword="true" />, wenn der angegebene Wert für eine neue Darstellung konvertiert wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96f07-115"><see langword="true" /> if the specified value to a new representation is converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Activities.XamlIntegration.DynamicUpdateMapItemConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberSignature Language="F#" Value="override this.ConvertTo : System.ComponentModel.ITypeDescriptorContext * System.Globalization.CultureInfo * obj * Type -&gt; obj" Usage="dynamicUpdateMapItemConverter.ConvertTo (context, culture, value, destinationType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Activities</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context"><span data-ttu-id="96f07-116">Die für die Konvertierung verwendeten Kontextinformationen.</span><span class="sxs-lookup"><span data-stu-id="96f07-116">Context information that is used for conversion.</span></span></param>
        <param name="culture"><span data-ttu-id="96f07-117">Eine optionale Kulturinformation.</span><span class="sxs-lookup"><span data-stu-id="96f07-117">An optional culture information.</span></span></param>
        <param name="value"><span data-ttu-id="96f07-118">Das zu konvertierende Objekt.</span><span class="sxs-lookup"><span data-stu-id="96f07-118">The object to convert.</span></span></param>
        <param name="destinationType"><span data-ttu-id="96f07-119">Der Typ, in den konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="96f07-119">The type to convert to.</span></span></param>
        <summary><span data-ttu-id="96f07-120">Konvertiert den angegebenen Wert in die angegebene Darstellung.</span><span class="sxs-lookup"><span data-stu-id="96f07-120">Converts the specified value to the specified representation.</span></span></summary>
        <returns><span data-ttu-id="96f07-121"><see langword="true" />, wenn der angegebene Wert für die angegebene Darstellung konvertiert wird; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="96f07-121"><see langword="true" /> if the specified value to the specified representation is converted; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
