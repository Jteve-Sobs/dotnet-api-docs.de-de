<Type Name="IDesignerDataSchema" FullName="System.ComponentModel.Design.Data.IDesignerDataSchema">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cd5170a1948b603b574c9972774e36299c3ffa38" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="de-DE" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37698753" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IDesignerDataSchema" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IDesignerDataSchema" />
  <TypeSignature Language="DocId" Value="T:System.ComponentModel.Design.Data.IDesignerDataSchema" />
  <TypeSignature Language="VB.NET" Value="Public Interface IDesignerDataSchema" />
  <TypeSignature Language="C++ CLI" Value="public interface class IDesignerDataSchema" />
  <TypeSignature Language="F#" Value="type IDesignerDataSchema = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Definiert Methoden zum Abrufen von Schemainformationen für Datenspeicher.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Klassen, in denen die <xref:System.ComponentModel.Design.Data.IDesignerDataSchema> Schnittstelle abrufen von Schemainformationen aus einem Datenspeicher und Zurückgeben der Benutzeroberfläche, in der Regel um UI-Elementen zu füllen, die dem Benutzer ermöglichen, geben Sie die Datenspeicher-Objekt, das sie verwenden möchten.  
  
 Die <xref:System.ComponentModel.Design.Data.IDesignerDataSchema> Schnittstelle bietet zwei Methoden: die <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> Methode, die die angeforderte Schemaeigenschaft Objekte zurückgibt, und die <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> -Methode, die angibt, ob eine angegebene Datenschemaobjekt von Datenspeicher unterstützt wird.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetSchemaItems">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetSchemaItems (System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.ICollection GetSchemaItems(class System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems(System.ComponentModel.Design.Data.DesignerDataSchemaClass)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetSchemaItems (schemaClass As DesignerDataSchemaClass) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetSchemaItems(System::ComponentModel::Design::Data::DesignerDataSchemaClass ^ schemaClass);" />
      <MemberSignature Language="F#" Value="abstract member GetSchemaItems : System.ComponentModel.Design.Data.DesignerDataSchemaClass -&gt; System.Collections.ICollection" Usage="iDesignerDataSchema.GetSchemaItems schemaClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaClass" Type="System.ComponentModel.Design.Data.DesignerDataSchemaClass" />
      </Parameters>
      <Docs>
        <param name="schemaClass">Die zurückzugebenden Schemaobjekte.</param>
        <summary>Ruft eine Auflistung der angegebenen Schemaelemente ab.</summary>
        <returns>Eine Auflistung der Schemaobjekte des angegebenen Typs.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> -Methode gibt eine Auflistung aller Objekte angegebene Schema im Datenspeicher.  
  
 Finden Sie unter den <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> Klasse für die Liste von Schemaobjekten, die von .NET Framework unterstützt werden. Zusätzliche Schemaobjekte können hinzugefügt werden die <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> Klasse durch Erstellen eines abgeleiteten Typs.  
  
 Wenn das angeforderte Schema-Objekt, von der Datenspeicher nicht unterstützt wird die <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> Methode zurückgeben soll `null`. Können Sie die <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> Methode, um zu bestimmen, ob Datenspeicher, das angeforderte Schema-Objekt vor dem Aufruf unterstützt der <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> Methode, um zurückgegeben zu vermeiden `null` für Ihre Anwendung.  
  
 Wenn der Datenspeicher das angeforderte Objekt unterstützt, aber es keine Instanzen enthält, die <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.GetSchemaItems%2A> Methode sollte eine leere Auflistung zurückgeben.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsSchemaClass">
      <MemberSignature Language="C#" Value="public bool SupportsSchemaClass (System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool SupportsSchemaClass(class System.ComponentModel.Design.Data.DesignerDataSchemaClass schemaClass) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass(System.ComponentModel.Design.Data.DesignerDataSchemaClass)" />
      <MemberSignature Language="VB.NET" Value="Public Function SupportsSchemaClass (schemaClass As DesignerDataSchemaClass) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool SupportsSchemaClass(System::ComponentModel::Design::Data::DesignerDataSchemaClass ^ schemaClass);" />
      <MemberSignature Language="F#" Value="abstract member SupportsSchemaClass : System.ComponentModel.Design.Data.DesignerDataSchemaClass -&gt; bool" Usage="iDesignerDataSchema.SupportsSchemaClass schemaClass" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaClass" Type="System.ComponentModel.Design.Data.DesignerDataSchemaClass" />
      </Parameters>
      <Docs>
        <param name="schemaClass">Die zurückzugebenden Schemaobjekte.</param>
        <summary>Gibt einen Wert zurück, der angibt, ob das angegebene Datenschemaobjekt im Datenspeicher enthalten ist.</summary>
        <returns>
          <see langword="true" />, wenn der Datenspeicher das angegebene Datenschemaobjekt unterstützt, andernfalls <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Die <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> Methode angibt, ob es sich bei der Datenspeicher einen angegebene Datenschemaobjekt unterstützt. Wenn der Datenspeicher das angegebene Objekt nicht unterstützt wird die <xref:System.ComponentModel.Design.Data.IDesignerDataSchema.SupportsSchemaClass%2A> Methode zurückgeben soll `false`.  
  
 Sie können die Tests für zusätzliche Daten und Schema-Objekte hinzufügen, durch Ableiten von der <xref:System.ComponentModel.Design.Data.DesignerDataSchemaClass> Klasse.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>