<Type Name="RsaEncryptionCookieTransform" FullName="System.IdentityModel.RsaEncryptionCookieTransform">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b7643d07d4f9a8408f024cc96b69292cecfe3ef5" /><Meta Name="ms.sourcegitcommit" Value="0084afad1b3b1cb2c8ad2c142ae3597d08bad4a7" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="10/31/2019" /><Meta Name="ms.locfileid" Value="73387265" /></Metadata><TypeSignature Language="C#" Value="public class RsaEncryptionCookieTransform : System.IdentityModel.CookieTransform" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RsaEncryptionCookieTransform extends System.IdentityModel.CookieTransform" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.RsaEncryptionCookieTransform" />
  <TypeSignature Language="VB.NET" Value="Public Class RsaEncryptionCookieTransform&#xA;Inherits CookieTransform" />
  <TypeSignature Language="C++ CLI" Value="public ref class RsaEncryptionCookieTransform : System::IdentityModel::CookieTransform" />
  <TypeSignature Language="F#" Value="type RsaEncryptionCookieTransform = class&#xA;    inherit CookieTransform" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.CookieTransform</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Verschlüsselt ein Cookie mit <see cref="T:System.Security.Cryptography.RSA" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Mit dieser Transformation verschlüsselte Cookies können von jedem Computer entschlüsselt werden, der denselben anderen RSA-Schlüssel gemeinsam nutzt (in der Regel mit einem X. 509-Zertifikat verknüpft).  
  
 Die angegebenen Daten werden mit einem zufälligen AES256-Schlüssel verschlüsselt. Dieser Schlüssel wird dann mit RSA verschlüsselt, und der öffentliche RSA-Schlüssel wird als nur-Text gesendet, sodass beim Decodieren der Klasse weiß, welcher RSA-Schlüssel verwendet werden soll.  
  
> [!IMPORTANT]
>  Wenn die <xref:System.IdentityModel.RsaEncryptionCookieTransform> mit einem Dienst verwendet wird, muss der Dienst neu gestartet werden, wenn der Dienst von einem Zertifikat geändert wird.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.IdentityModel.Tokens.SessionSecurityTokenHandler" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.RsaEncryptionCookieTransform" />-Klasse.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RsaEncryptionCookieTransform (System.Security.Cryptography.RSA key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.RSA key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaEncryptionCookieTransform.#ctor(System.Security.Cryptography.RSA)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (key As RSA)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RsaEncryptionCookieTransform(System::Security::Cryptography::RSA ^ key);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.RsaEncryptionCookieTransform : System.Security.Cryptography.RSA -&gt; System.IdentityModel.RsaEncryptionCookieTransform" Usage="new System.IdentityModel.RsaEncryptionCookieTransform key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Security.Cryptography.RSA" />
      </Parameters>
      <Docs>
        <param name="key">Der als standardmäßiger Verschlüsselungs- und Entschlüsselungsschlüssel zu verwendende Schlüssel. Initialisiert die Eigenschaften <see cref="P:System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys" />, und <see cref="P:System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.RsaEncryptionCookieTransform" />-Klasse, die die angegebene Schlüssel für die Ver- und Entschlüsselung.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="key" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RsaEncryptionCookieTransform (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Security.Cryptography.X509Certificates.X509Certificate2 certificate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaEncryptionCookieTransform.#ctor(System.Security.Cryptography.X509Certificates.X509Certificate2)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (certificate As X509Certificate2)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RsaEncryptionCookieTransform(System::Security::Cryptography::X509Certificates::X509Certificate2 ^ certificate);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.RsaEncryptionCookieTransform : System.Security.Cryptography.X509Certificates.X509Certificate2 -&gt; System.IdentityModel.RsaEncryptionCookieTransform" Usage="new System.IdentityModel.RsaEncryptionCookieTransform certificate" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="certificate" Type="System.Security.Cryptography.X509Certificates.X509Certificate2" />
      </Parameters>
      <Docs>
        <param name="certificate">Das Zertifikat, dessen privater Schlüssel verwendet wird, um zu verschlüsseln und zu entschlüsseln.  
  
Das Zertifikat, dessen privater Schlüssel als standardmäßiger Verschlüsselungsschlüssel und Entschlüsselungsschlüssel verwendet wird. Initialisiert die Eigenschaften <see cref="P:System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys" />, und <see cref="P:System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey" />.</param>
        <summary>Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.RsaEncryptionCookieTransform" />-Klasse, die den privaten Schlüssel des angegebenen X.509-Zertifikats zur Verschlüsselung und Entschlüsselung verwendet.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="certificate" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="certificate" /> verfügt über keinen privaten Schlüssel.  
  
- oder - 
Der private Schlüssel ist nicht RSA.</exception>
      </Docs>
    </Member>
    <Member MemberName="Decode">
      <MemberSignature Language="C#" Value="public override byte[] Decode (byte[] encoded);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Decode(unsigned int8[] encoded) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaEncryptionCookieTransform.Decode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Decode (encoded As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Decode(cli::array &lt;System::Byte&gt; ^ encoded);" />
      <MemberSignature Language="F#" Value="override this.Decode : byte[] -&gt; byte[]" Usage="rsaEncryptionCookieTransform.Decode encoded" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="encoded" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="encoded">Die codierten Daten</param>
        <summary>Entschlüsselt die angegebenen Daten mithilfe der bereitgestellten RSA-TASTE(N), um eine AES-TASTE zu entschlüsseln, die das Cookie entschlüsselt.</summary>
        <returns>Die decodierten Daten.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="encoded" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="encoded" /> enthält null Bytes.</exception>
        <exception cref="T:System.NotSupportedException">Die Platform unterstützt den angeforderte Algorithmus nicht.</exception>
        <exception cref="T:System.InvalidOperationException">Es sind keine Entschlüsselungsschlüssel vorhanden, oder keine der Schlüssel stimmen überein.</exception>
      </Docs>
    </Member>
    <Member MemberName="DecryptionKeys">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt; DecryptionKeys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;class System.Security.Cryptography.RSA&gt; DecryptionKeys" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DecryptionKeys As ReadOnlyCollection(Of RSA)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::RSA ^&gt; ^ DecryptionKeys { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::Security::Cryptography::RSA ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecryptionKeys : System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt;" Usage="System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.Security.Cryptography.RSA&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft die Schlüssel ab, die für die Entschlüsselung verwendet wurden. Standardmäßig gibt diese Eigenschaft eine Liste zurück, die nur den Verschlüsselungsschlüssel enthält.</summary>
        <value>Die bei der Entschlüsselung zu verwendende Schlüssel.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public override byte[] Encode (byte[] value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance unsigned int8[] Encode(unsigned int8[] value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.RsaEncryptionCookieTransform.Encode(System.Byte[])" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Encode (value As Byte()) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override cli::array &lt;System::Byte&gt; ^ Encode(cli::array &lt;System::Byte&gt; ^ value);" />
      <MemberSignature Language="F#" Value="override this.Encode : byte[] -&gt; byte[]" Usage="rsaEncryptionCookieTransform.Encode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Byte[]" />
      </Parameters>
      <Docs>
        <param name="value">Die zu codierenden Daten.</param>
        <summary>Codiert die angegebenen Daten. Die Daten werden mithilfe des standardmäßigen Verschlüsselungsalgorithmus (AES-256) verschlüsselt. Dann wird der AES-Schlüssel mithilfe von RSA verschlüsselt, und der öffentliche RSA-Schlüssel wird angefügt.</summary>
        <returns>Die codierten Daten</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="value" /> ist <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException"><paramref name="value" /> enthält null Bytes.</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey" /> ist <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="EncryptionKey">
      <MemberSignature Language="C#" Value="public virtual System.Security.Cryptography.RSA EncryptionKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Cryptography.RSA EncryptionKey" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EncryptionKey As RSA" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Cryptography::RSA ^ EncryptionKey { System::Security::Cryptography::RSA ^ get(); void set(System::Security::Cryptography::RSA ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EncryptionKey : System.Security.Cryptography.RSA with get, set" Usage="System.IdentityModel.RsaEncryptionCookieTransform.EncryptionKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Cryptography.RSA</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den für Verschlüsselung verwendeten RSA-Schlüssel ab oder legt ihn fest.</summary>
        <value>Der RSA-Schlüssel, der für die -Verschlüsselung verwendet wird.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Wenn diese Eigenschaft festgelegt wird, wird auch die <xref:System.IdentityModel.RsaEncryptionCookieTransform.DecryptionKeys%2A>-Eigenschaft auf eine Auflistung festgelegt, die den gleichen Schlüssel wie das einzige Element enthält.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HashName">
      <MemberSignature Language="C#" Value="public string HashName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HashName" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.RsaEncryptionCookieTransform.HashName" />
      <MemberSignature Language="VB.NET" Value="Public Property HashName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ HashName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HashName : string with get, set" Usage="System.IdentityModel.RsaEncryptionCookieTransform.HashName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ruft den Namen des verwendeten Hashalgorithmus ab oder legt diesen fest.</summary>
        <value>Der Name des zu verwendeten Hash-Algorithmus. Der Standardwert ist "SHA2566".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SHA256 ist der Standard Algorithmus. Hierfür ist möglicherweise eine minimale Plattform von Windows Server 2003 und .NET 3,5 SP1 erforderlich.  
  
 Wenn SHA256 nicht unterstützt wird, legen Sie die <xref:System.IdentityModel.RsaEncryptionCookieTransform.HashName%2A>-Eigenschaft auf "SHA1" fest. 

 Aufgrund von Konnektivitätsproblemen mit SHA1 empfiehlt Microsoft SHA256 oder eine bessere. 
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
