<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EnvelopedSignatureReader.xml" source-language="en-US" target-language="de-DE">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d72d4e16df9e75e2f077936cffd9c460b51e0302.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d72d4e16df9e75e2f077936cffd9c460b51e0302</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.EnvelopedSignatureReader">
          <source>Wraps a reader that is pointing to enveloped signed XML to provide a reader that can be used to read the content without having to process the signature.</source>
          <target state="translated">Bindet einen Reader, der auf umschlossenes signiertes XML zum Erstellen eines Readers zeigt, der verwendet werden kann, um den Inhalt zu lesen, ohne die Signatur zu verarbeiten.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.EnvelopedSignatureReader">
          <source>The signature is automatically validated when the last element of the envelope is read.</source>
          <target state="translated">Die Signatur wird automatisch überprüft, wenn das letzte Element des Umschlags gelesen wird.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.EnvelopedSignatureReader">
          <source>This class cannot be inherited.</source>
          <target state="translated">Diese Klasse kann nicht vererbt werden.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="T:System.IdentityModel.EnvelopedSignatureReader">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.EnvelopedSignatureReader" /&gt;</ph> class.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IdentityModel.EnvelopedSignatureReader" /&gt;</ph>-Klasse.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>A reader that is pointing to the enveloped signed XML.</source>
          <target state="translated">Ein Reader, der auf das eingeschlossene XML mit Vorzeichen zeigt.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>The token serializer to be used to deserialize the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfo" /&gt;</ph> of the signature.</source>
          <target state="translated">Das Tokenserialisierungsprogramm, das verwendet wird, um die <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfo" /&gt;</ph> der Signatur zu deserialisieren.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.EnvelopedSignatureReader" /&gt;</ph> class by using the specified reader and security token serializer.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IdentityModel.EnvelopedSignatureReader" /&gt;</ph>-Klasse mit dem angegebenen Reader und Sicherheitstoken-Serialisierungsprogramm.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> constructor is invoked with the following additional parameters:</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> Konstruktor mit den folgenden zusätzlichen Parameter aufgerufen wird:</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>Parameter Name</source>
          <target state="translated">Parametername</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)">
          <source><ph id="ph1">&lt;paramref name="securityTokenSerializer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityTokenSerializer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>A reader that is pointing to the enveloped signed XML.</source>
          <target state="translated">Ein Reader, der auf das eingeschlossene XML mit Vorzeichen zeigt.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The token serializer to be used to deserialize the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfo" /&gt;</ph> of the signature.</source>
          <target state="translated">Das Tokenserialisierungsprogramm, das verwendet wird, um die <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfo" /&gt;</ph> der Signatur zu deserialisieren.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The token resolver to be used to resolve the signing token.</source>
          <target state="translated">Der Tokenresolver, der zum Auflösen des Signaturtokens verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> specifies that a default security token resolver should be used.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> gibt an, dass ein standardmäßiger Sicherheitstoken-Resolver verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.EnvelopedSignatureReader" /&gt;</ph> class by using the specified reader, security token serializer, and token resolver.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IdentityModel.EnvelopedSignatureReader" /&gt;</ph>-Klasse mit dem angegebenen Reader, Sicherheitstoken-Serialisierungsprogramm und Tokensresolver.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>The <ph id="ph1">&lt;xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> constructor is invoked with the following additional parameters:</source>
          <target state="translated">Die <ph id="ph1">&lt;xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType&gt;</ph> Konstruktor mit den folgenden zusätzlichen Parameter aufgerufen wird:</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Parameter Name</source>
          <target state="translated">Parametername</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>Value</source>
          <target state="translated">Wert</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)">
          <source><ph id="ph1">&lt;paramref name="securityTokenSerializer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityTokenSerializer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)">
          <source>A reader that is pointing to the enveloped signed XML.</source>
          <target state="translated">Ein Reader, der auf das eingeschlossene XML mit Vorzeichen zeigt.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)">
          <source>The token serializer to be used to deserialize the <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfo" /&gt;</ph> of the signature.</source>
          <target state="translated">Das Tokenserialisierungsprogramm, das verwendet wird, um die <ph id="ph1">&lt;see cref="T:System.Security.Cryptography.Xml.KeyInfo" /&gt;</ph> der Signatur zu deserialisieren.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)">
          <source>The token resolver to be used to resolve the signing token.</source>
          <target state="translated">Der Tokenresolver, der zum Auflösen des Signaturtokens verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> specifies that a default security token resolver should be used.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="null" /&gt;</ph> gibt an, dass ein standardmäßiger Sicherheitstoken-Resolver verwendet werden soll.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature is required; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Signatur erforderlich ist, andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature should be read; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Signatur gelesen werden soll; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if intrinsic signing keys should be resolved; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn systeminterne Signaturschlüssel aufgelöst werden sollen; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.IdentityModel.EnvelopedSignatureReader" /&gt;</ph> class by using the specified reader, security token serializer, token resolver, and behavior.</source>
          <target state="translated">Initialisiert eine neue Instanz der <ph id="ph1">&lt;see cref="T:System.IdentityModel.EnvelopedSignatureReader" /&gt;</ph>-Klasse mit dem angegebenen Reader, Sicherheitstoken-Serialisierungsprogramm, Tokensresolver und Verhalten.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="reader" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)">
          <source>-or-</source>
          <target state="translated">- oder - </target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;paramref name="securityTokenSerializer" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="securityTokenSerializer" /&gt;</ph> ist <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.Read">
          <source>Reads the next node from the stream.</source>
          <target state="translated">Liest den nächsten Knoten aus dem Stream.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.Read">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the next node was read successfully; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if there are no more nodes.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn der nächste Knoten erfolgreich gelesen wurde, <ph id="ph2">&lt;see langword="false" /&gt;</ph>, wenn keine weiteren Knoten vorhanden sind.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.EnvelopedSignatureReader.Read">
          <source>Checks whether the end of the envelope is reached and validates the signature if the <ph id="ph1">`requireSignature`</ph> parameter was specified <ph id="ph2">`true`</ph> in the constructor.</source>
          <target state="translated">Überprüft, ob das Ende des Umschlags erreicht ist und die Signatur wird überprüft, wenn die <ph id="ph1">`requireSignature`</ph> -Parameter wurde angegeben <ph id="ph2">`true`</ph> im Konstruktor.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.EnvelopedSignatureReader.Read">
          <source>If the reader gets positioned on a <ph id="ph1">`&lt;Signature&gt;`</ph> element, the whole signature is read in if the <ph id="ph2">`automaticallyReadSignature`</ph> parameter was specified <ph id="ph3">`true`</ph> in the constructor.</source>
          <target state="translated">Wenn der Reader auf positioniert Ruft eine <ph id="ph1">`&lt;Signature&gt;`</ph> Element, wird die gesamte Signatur in if-gelesen der <ph id="ph2">`automaticallyReadSignature`</ph> -Parameter wurde angegeben <ph id="ph3">`true`</ph> im Konstruktor.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.IdentityModel.EnvelopedSignatureReader.SigningCredentials">
          <source>Gets the signing credentials that are used in the signature, after the envelope is consumed and when the signature is validated.</source>
          <target state="translated">Ruft die Anmeldeinformationen zur Signierung ab, die in der Signatur verwendet werden, nachdem der Umschlag verbraucht ist und wenn die Signatur überprüft wird.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.IdentityModel.EnvelopedSignatureReader.SigningCredentials">
          <source>The signing credentials.</source>
          <target state="translated">Die Anmeldeinformationen zur Signierung.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.TryReadSignature">
          <source>Reads the signature if the reader is currently positioned at a <ph id="ph1">&lt;see langword="&amp;lt;Signature&amp;gt;" /&gt;</ph> element.</source>
          <target state="translated">Liest die Signatur, wenn der Reader aktuell bei einem <ph id="ph1">&lt;see langword="&amp;lt;Signature&amp;gt;" /&gt;</ph>-Element positioniert ist.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.IdentityModel.EnvelopedSignatureReader.TryReadSignature">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the signature was successfully read; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, wenn die Signatur erfolgreich gelesen wurde; andernfalls <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IdentityModel.EnvelopedSignatureReader.TryReadSignature">
          <source>If the reader is currently positioned on a <ph id="ph1">`&lt;Signature&gt;`</ph> element, invokes the <ph id="ph2">&lt;xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A&gt;</ph> method to read the signature.</source>
          <target state="translated">Wenn der Reader derzeit positioniert ist, auf eine <ph id="ph1">`&lt;Signature&gt;`</ph> Element, ruft die <ph id="ph2">&lt;xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A&gt;</ph> Methode, um die Signatur zu lesen.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>