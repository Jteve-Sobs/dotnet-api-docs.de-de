<Type Name="EnvelopedSignatureReader" FullName="System.IdentityModel.EnvelopedSignatureReader">
  <Metadata><Meta Name="ms.openlocfilehash" Value="29b7cbe2da88423d14eb6f1c8a60d083be1e1cec" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70565001" /></Metadata><TypeSignature Language="C#" Value="public sealed class EnvelopedSignatureReader : System.IdentityModel.DelegatingXmlDictionaryReader" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit EnvelopedSignatureReader extends System.IdentityModel.DelegatingXmlDictionaryReader" />
  <TypeSignature Language="DocId" Value="T:System.IdentityModel.EnvelopedSignatureReader" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EnvelopedSignatureReader&#xA;Inherits DelegatingXmlDictionaryReader" />
  <TypeSignature Language="C++ CLI" Value="public ref class EnvelopedSignatureReader sealed : System::IdentityModel::DelegatingXmlDictionaryReader" />
  <TypeSignature Language="F#" Value="type EnvelopedSignatureReader = class&#xA;    inherit DelegatingXmlDictionaryReader" />
  <AssemblyInfo>
    <AssemblyName>System.IdentityModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IdentityModel.DelegatingXmlDictionaryReader</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="dd696-101">Bindet einen Reader, der auf umschlossenes signiertes XML zum Erstellen eines Readers zeigt, der verwendet werden kann, um den Inhalt zu lesen, ohne die Signatur zu verarbeiten.</span><span class="sxs-lookup"><span data-stu-id="dd696-101">Wraps a reader that is pointing to enveloped signed XML to provide a reader that can be used to read the content without having to process the signature.</span></span> <span data-ttu-id="dd696-102">Die Signatur wird automatisch überprüft, wenn das letzte Element des Umschlags gelesen wird.</span><span class="sxs-lookup"><span data-stu-id="dd696-102">The signature is automatically validated when the last element of the envelope is read.</span></span> <span data-ttu-id="dd696-103">Diese Klasse kann nicht vererbt werden.</span><span class="sxs-lookup"><span data-stu-id="dd696-103">This class cannot be inherited.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="dd696-104">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.EnvelopedSignatureReader" />-Klasse.</span><span class="sxs-lookup"><span data-stu-id="dd696-104">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnvelopedSignatureReader(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenSerializer ^ securityTokenSerializer);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.EnvelopedSignatureReader : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenSerializer -&gt; System.IdentityModel.EnvelopedSignatureReader" Usage="new System.IdentityModel.EnvelopedSignatureReader (reader, securityTokenSerializer)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="securityTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="dd696-105">Ein Reader, der auf das eingeschlossene XML mit Vorzeichen zeigt.</span><span class="sxs-lookup"><span data-stu-id="dd696-105">A reader that is pointing to the enveloped signed XML.</span></span></param>
        <param name="securityTokenSerializer"><span data-ttu-id="dd696-106">Das Tokenserialisierungsprogramm, das verwendet wird, um die <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> der Signatur zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="dd696-106">The token serializer to be used to deserialize the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the signature.</span></span></param>
        <summary><span data-ttu-id="dd696-107">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.EnvelopedSignatureReader" />-Klasse mit dem angegebenen Reader und Sicherheitstoken-Serialisierungsprogramm.</span><span class="sxs-lookup"><span data-stu-id="dd696-107">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> class by using the specified reader and security token serializer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd696-108">Der <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor wird mit den folgenden zusätzlichen Parametern aufgerufen:</span><span class="sxs-lookup"><span data-stu-id="dd696-108">The <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor is invoked with the following additional parameters:</span></span>  
  
|<span data-ttu-id="dd696-109">Parametername</span><span class="sxs-lookup"><span data-stu-id="dd696-109">Parameter Name</span></span>|<span data-ttu-id="dd696-110">Wert</span><span class="sxs-lookup"><span data-stu-id="dd696-110">Value</span></span>|  
|--------------------|-----------|  
|`signingTokenResolver`|`null`|  
|`requireSignature`|`true`|  
|`automaticallyReadSignature`|`true`|  
|`resolveIntrinsicSigningKeys`|`true`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dd696-111"><paramref name="reader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dd696-111"><paramref name="reader" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="dd696-112">- oder -</span><span class="sxs-lookup"><span data-stu-id="dd696-112">-or-</span></span> 
 <span data-ttu-id="dd696-113"><paramref name="securityTokenSerializer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dd696-113"><paramref name="securityTokenSerializer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnvelopedSignatureReader(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenSerializer ^ securityTokenSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ signingTokenResolver);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.EnvelopedSignatureReader : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver -&gt; System.IdentityModel.EnvelopedSignatureReader" Usage="new System.IdentityModel.EnvelopedSignatureReader (reader, securityTokenSerializer, signingTokenResolver)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="securityTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
        <Parameter Name="signingTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="dd696-114">Ein Reader, der auf das eingeschlossene XML mit Vorzeichen zeigt.</span><span class="sxs-lookup"><span data-stu-id="dd696-114">A reader that is pointing to the enveloped signed XML.</span></span></param>
        <param name="securityTokenSerializer"><span data-ttu-id="dd696-115">Das Tokenserialisierungsprogramm, das verwendet wird, um die <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> der Signatur zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="dd696-115">The token serializer to be used to deserialize the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the signature.</span></span></param>
        <param name="signingTokenResolver"><span data-ttu-id="dd696-116">Der Tokenresolver, der zum Auflösen des Signaturtokens verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd696-116">The token resolver to be used to resolve the signing token.</span></span> <span data-ttu-id="dd696-117"><see langword="null" /> gibt an, dass ein standardmäßiger Sicherheitstoken-Resolver verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd696-117"><see langword="null" /> specifies that a default security token resolver should be used.</span></span></param>
        <summary><span data-ttu-id="dd696-118">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.EnvelopedSignatureReader" />-Klasse mit dem angegebenen Reader, Sicherheitstoken-Serialisierungsprogramm und Tokensresolver.</span><span class="sxs-lookup"><span data-stu-id="dd696-118">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> class by using the specified reader, security token serializer, and token resolver.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd696-119">Der <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> Konstruktor wird mit den folgenden zusätzlichen Parametern aufgerufen:</span><span class="sxs-lookup"><span data-stu-id="dd696-119">The <xref:System.IdentityModel.EnvelopedSignatureReader.%23ctor%28System.Xml.XmlReader%2CSystem.IdentityModel.Selectors.SecurityTokenSerializer%2CSystem.IdentityModel.Selectors.SecurityTokenResolver%2CSystem.Boolean%2CSystem.Boolean%2CSystem.Boolean%29?displayProperty=nameWithType> constructor is invoked with the following additional parameters:</span></span>  
  
|<span data-ttu-id="dd696-120">Parametername</span><span class="sxs-lookup"><span data-stu-id="dd696-120">Parameter Name</span></span>|<span data-ttu-id="dd696-121">Wert</span><span class="sxs-lookup"><span data-stu-id="dd696-121">Value</span></span>|  
|--------------------|-----------|  
|`requireSignature`|`true`|  
|`automaticallyReadSignature`|`true`|  
|`resolveIntrinsicSigningKeys`|`true`|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dd696-122"><paramref name="reader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dd696-122"><paramref name="reader" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="dd696-123">- oder -</span><span class="sxs-lookup"><span data-stu-id="dd696-123">-or-</span></span> 
 <span data-ttu-id="dd696-124"><paramref name="securityTokenSerializer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dd696-124"><paramref name="securityTokenSerializer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EnvelopedSignatureReader (System.Xml.XmlReader reader, System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlReader reader, class System.IdentityModel.Selectors.SecurityTokenSerializer securityTokenSerializer, class System.IdentityModel.Selectors.SecurityTokenResolver signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.#ctor(System.Xml.XmlReader,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver,System.Boolean,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EnvelopedSignatureReader(System::Xml::XmlReader ^ reader, System::IdentityModel::Selectors::SecurityTokenSerializer ^ securityTokenSerializer, System::IdentityModel::Selectors::SecurityTokenResolver ^ signingTokenResolver, bool requireSignature, bool automaticallyReadSignature, bool resolveIntrinsicSigningKeys);" />
      <MemberSignature Language="F#" Value="new System.IdentityModel.EnvelopedSignatureReader : System.Xml.XmlReader * System.IdentityModel.Selectors.SecurityTokenSerializer * System.IdentityModel.Selectors.SecurityTokenResolver * bool * bool * bool -&gt; System.IdentityModel.EnvelopedSignatureReader" Usage="new System.IdentityModel.EnvelopedSignatureReader (reader, securityTokenSerializer, signingTokenResolver, requireSignature, automaticallyReadSignature, resolveIntrinsicSigningKeys)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="reader" Type="System.Xml.XmlReader" />
        <Parameter Name="securityTokenSerializer" Type="System.IdentityModel.Selectors.SecurityTokenSerializer" />
        <Parameter Name="signingTokenResolver" Type="System.IdentityModel.Selectors.SecurityTokenResolver" />
        <Parameter Name="requireSignature" Type="System.Boolean" />
        <Parameter Name="automaticallyReadSignature" Type="System.Boolean" />
        <Parameter Name="resolveIntrinsicSigningKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="dd696-125">Ein Reader, der auf das eingeschlossene XML mit Vorzeichen zeigt.</span><span class="sxs-lookup"><span data-stu-id="dd696-125">A reader that is pointing to the enveloped signed XML.</span></span></param>
        <param name="securityTokenSerializer"><span data-ttu-id="dd696-126">Das Tokenserialisierungsprogramm, das verwendet wird, um die <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> der Signatur zu deserialisieren.</span><span class="sxs-lookup"><span data-stu-id="dd696-126">The token serializer to be used to deserialize the <see cref="T:System.Security.Cryptography.Xml.KeyInfo" /> of the signature.</span></span></param>
        <param name="signingTokenResolver"><span data-ttu-id="dd696-127">Der Tokenresolver, der zum Auflösen des Signaturtokens verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd696-127">The token resolver to be used to resolve the signing token.</span></span> <span data-ttu-id="dd696-128"><see langword="null" /> gibt an, dass ein standardmäßiger Sicherheitstoken-Resolver verwendet werden soll.</span><span class="sxs-lookup"><span data-stu-id="dd696-128"><see langword="null" /> specifies that a default security token resolver should be used.</span></span></param>
        <param name="requireSignature"><span data-ttu-id="dd696-129"><see langword="true" />, wenn die Signatur erforderlich ist, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd696-129"><see langword="true" /> if the signature is required; otherwise, <see langword="false" />.</span></span></param>
        <param name="automaticallyReadSignature"><span data-ttu-id="dd696-130"><see langword="true" />, wenn die Signatur gelesen werden soll; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd696-130"><see langword="true" /> if the signature should be read; otherwise, <see langword="false" />.</span></span></param>
        <param name="resolveIntrinsicSigningKeys"><span data-ttu-id="dd696-131"><see langword="true" />, wenn systeminterne Signaturschlüssel aufgelöst werden sollen; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd696-131"><see langword="true" /> if intrinsic signing keys should be resolved; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="dd696-132">Initialisiert eine neue Instanz der <see cref="T:System.IdentityModel.EnvelopedSignatureReader" />-Klasse mit dem angegebenen Reader, Sicherheitstoken-Serialisierungsprogramm, Tokensresolver und Verhalten.</span><span class="sxs-lookup"><span data-stu-id="dd696-132">Initializes a new instance of the <see cref="T:System.IdentityModel.EnvelopedSignatureReader" /> class by using the specified reader, security token serializer, token resolver, and behavior.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="dd696-133"><paramref name="reader" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dd696-133"><paramref name="reader" /> is <see langword="null" />.</span></span>  
  
<span data-ttu-id="dd696-134">- oder -</span><span class="sxs-lookup"><span data-stu-id="dd696-134">-or-</span></span> 
 <span data-ttu-id="dd696-135"><paramref name="securityTokenSerializer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="dd696-135"><paramref name="securityTokenSerializer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="envelopedSignatureReader.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Read">
      <MemberSignature Language="C#" Value="public override bool Read ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Read() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.Read" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Read () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Read();" />
      <MemberSignature Language="F#" Value="override this.Read : unit -&gt; bool" Usage="envelopedSignatureReader.Read " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd696-136">Liest den nächsten Knoten aus dem Stream.</span><span class="sxs-lookup"><span data-stu-id="dd696-136">Reads the next node from the stream.</span></span></summary>
        <returns><span data-ttu-id="dd696-137"><see langword="true" />, wenn der nächste Knoten erfolgreich gelesen wurde, <see langword="false" />, wenn keine weiteren Knoten vorhanden sind.</span><span class="sxs-lookup"><span data-stu-id="dd696-137"><see langword="true" /> if the next node was read successfully; <see langword="false" /> if there are no more nodes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd696-138">Überprüft, ob das Ende des Umschlags erreicht ist, und überprüft die Signatur, `requireSignature` wenn der Parameter `true` im Konstruktor angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="dd696-138">Checks whether the end of the envelope is reached and validates the signature if the `requireSignature` parameter was specified `true` in the constructor.</span></span> <span data-ttu-id="dd696-139">Wenn der Reader auf einem `<Signature>` -Element positioniert wird, wird die gesamte Signatur eingelesen, wenn der `automaticallyReadSignature` - `true` Parameter im Konstruktor angegeben wurde.</span><span class="sxs-lookup"><span data-stu-id="dd696-139">If the reader gets positioned on a `<Signature>` element, the whole signature is read in if the `automaticallyReadSignature` parameter was specified `true` in the constructor.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SigningCredentials">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Tokens.SigningCredentials SigningCredentials { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Tokens.SigningCredentials SigningCredentials" />
      <MemberSignature Language="DocId" Value="P:System.IdentityModel.EnvelopedSignatureReader.SigningCredentials" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SigningCredentials As SigningCredentials" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Tokens::SigningCredentials ^ SigningCredentials { System::IdentityModel::Tokens::SigningCredentials ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SigningCredentials : System.IdentityModel.Tokens.SigningCredentials" Usage="System.IdentityModel.EnvelopedSignatureReader.SigningCredentials" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Tokens.SigningCredentials</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="dd696-140">Ruft die Anmeldeinformationen zur Signierung ab, die in der Signatur verwendet werden, nachdem der Umschlag verbraucht ist und wenn die Signatur überprüft wird.</span><span class="sxs-lookup"><span data-stu-id="dd696-140">Gets the signing credentials that are used in the signature, after the envelope is consumed and when the signature is validated.</span></span></summary>
        <value><span data-ttu-id="dd696-141">Die Anmeldeinformationen zur Signierung.</span><span class="sxs-lookup"><span data-stu-id="dd696-141">The signing credentials.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReadSignature">
      <MemberSignature Language="C#" Value="public bool TryReadSignature ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryReadSignature() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IdentityModel.EnvelopedSignatureReader.TryReadSignature" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReadSignature () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryReadSignature();" />
      <MemberSignature Language="F#" Value="member this.TryReadSignature : unit -&gt; bool" Usage="envelopedSignatureReader.TryReadSignature " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IdentityModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="dd696-142">Liest die Signatur, wenn der Reader aktuell bei einem <see langword="&lt;Signature&gt;" />-Element positioniert ist.</span><span class="sxs-lookup"><span data-stu-id="dd696-142">Reads the signature if the reader is currently positioned at a <see langword="&lt;Signature&gt;" /> element.</span></span></summary>
        <returns><span data-ttu-id="dd696-143"><see langword="true" />, wenn die Signatur erfolgreich gelesen wurde; andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="dd696-143"><see langword="true" /> if the signature was successfully read; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dd696-144">Wenn der Reader derzeit auf einem `<Signature>` -Element positioniert ist, ruft die <xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A> -Methode auf, um die Signatur zu lesen.</span><span class="sxs-lookup"><span data-stu-id="dd696-144">If the reader is currently positioned on a `<Signature>` element, invokes the <xref:System.IdentityModel.EnvelopedSignatureReader.Read%2A> method to read the signature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
