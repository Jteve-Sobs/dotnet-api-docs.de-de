<Type Name="JsonSerializer" FullName="System.Text.Json.JsonSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6aa527c990328b1a92e147f50ae46b820dffa029" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82405994" /></Metadata><TypeSignature Language="C#" Value="public static class JsonSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonSerializer abstract sealed" />
  <TypeSignature Language="F#" Value="type JsonSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a58f5-101">Stellt Funktionen zum Serialisieren von Objekten oder Werttypen in JSON und zum Deserialisieren von JSON in Objekte oder Werttypen bereit.</span><span class="sxs-lookup"><span data-stu-id="a58f5-101">Provides functionality to serialize objects or value types to JSON and to deserialize JSON into objects or value types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-102">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-102">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static object Deserialize (ReadOnlySpan&lt;byte&gt; utf8Json, Type returnType, System.Text.Json.JsonSerializerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Deserialize(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Json, class System.Type returnType, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Byte},System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize (utf8Json As ReadOnlySpan(Of Byte), returnType As Type, Optional options As JsonSerializerOptions = null) As Object" />
      <MemberSignature Language="F#" Value="static member Deserialize : ReadOnlySpan&lt;byte&gt; * Type * System.Text.Json.JsonSerializerOptions -&gt; obj" Usage="System.Text.Json.JsonSerializer.Deserialize (utf8Json, returnType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="a58f5-103">Ruft den zu analysierenden JSON-Text ab.</span><span class="sxs-lookup"><span data-stu-id="a58f5-103">The JSON text to parse.</span></span></param>
        <param name="returnType"><span data-ttu-id="a58f5-104">Der Typ des Objekts, in das konvertiert und das zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-104">The type of the object to convert to and return.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-105">Optionen zum Steuern des Verhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="a58f5-105">Options to control the behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a58f5-106">Analysiert den UTF-8-codierten Text, der einen einzelnen JSON-Wert darstellt, in eine Instanz eines angegebenen Typs.</span><span class="sxs-lookup"><span data-stu-id="a58f5-106">Parses the UTF-8 encoded text representing a single JSON value into an instance of a specified type.</span></span></summary>
        <returns><span data-ttu-id="a58f5-107">Eine <paramref name="returnType" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-107">A <paramref name="returnType" /> representation of the JSON value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-108">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-108">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58f5-109"><paramref name="returnType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a58f5-109"><paramref name="returnType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a58f5-110">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a58f5-110">The JSON is invalid.</span></span>

<span data-ttu-id="a58f5-111">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-111">-or-</span></span>

<span data-ttu-id="a58f5-112"><typeparamref name="returnType" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a58f5-112"><typeparamref name="returnType" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a58f5-113">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-113">-or-</span></span>

<span data-ttu-id="a58f5-114">Es sind noch Daten im Bereich über einen einzelnen JSON-Wert hinaus vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-114">There is remaining data in the span beyond a single JSON value.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-115">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <paramref name="returnType" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-115">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="returnType" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static object Deserialize (string json, Type returnType, System.Text.Json.JsonSerializerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Deserialize(string json, class System.Type returnType, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Deserialize(System.String,System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize (json As String, returnType As Type, Optional options As JsonSerializerOptions = null) As Object" />
      <MemberSignature Language="F#" Value="static member Deserialize : string * Type * System.Text.Json.JsonSerializerOptions -&gt; obj" Usage="System.Text.Json.JsonSerializer.Deserialize (json, returnType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="json"><span data-ttu-id="a58f5-116">Ruft den zu analysierenden JSON-Text ab.</span><span class="sxs-lookup"><span data-stu-id="a58f5-116">The JSON text to parse.</span></span></param>
        <param name="returnType"><span data-ttu-id="a58f5-117">Der Typ des Objekts, in das konvertiert und das zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-117">The type of the object to convert to and return.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-118">Optionen zum Steuern des Verhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="a58f5-118">Options to control the behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a58f5-119">Analysiert den Text, der einen einzelnen JSON-Wert darstellt, in eine Instanz eines angegebenen Typs.</span><span class="sxs-lookup"><span data-stu-id="a58f5-119">Parses the text representing a single JSON value into an instance of a specified type.</span></span></summary>
        <returns><span data-ttu-id="a58f5-120">Eine <paramref name="returnType" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-120">A <paramref name="returnType" /> representation of the JSON value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-121">Die Verwendung eines <xref:System.String> ist nicht so effizient wie die Verwendung der UTF-8-Methoden, da die Implementierung UTF-8 nativ verwendet.</span><span class="sxs-lookup"><span data-stu-id="a58f5-121">Using a <xref:System.String> is not as efficient as using the UTF-8 methods since the implementation natively uses UTF-8.</span></span>

<span data-ttu-id="a58f5-122">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-122">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58f5-123"><paramref name="json" /> oder <paramref name="returnType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a58f5-123"><paramref name="json" /> or <paramref name="returnType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a58f5-124">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a58f5-124">The JSON is invalid.</span></span>
          
<span data-ttu-id="a58f5-125">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-125">-or-</span></span>

<span data-ttu-id="a58f5-126"><typeparamref name="TValue" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a58f5-126"><typeparamref name="TValue" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a58f5-127">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-127">-or-</span></span>

<span data-ttu-id="a58f5-128">Es sind noch Daten in der Zeichenfolge über einen einzelnen JSON-Wert hinaus vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-128">There is remaining data in the string beyond a single JSON value.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-129">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <paramref name="returnType" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-129">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="returnType" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static object Deserialize (ref System.Text.Json.Utf8JsonReader reader, Type returnType, System.Text.Json.JsonSerializerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Deserialize(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.Type returnType, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize (ByRef reader As Utf8JsonReader, returnType As Type, Optional options As JsonSerializerOptions = null) As Object" />
      <MemberSignature Language="F#" Value="static member Deserialize : Utf8JsonReader * Type * System.Text.Json.JsonSerializerOptions -&gt; obj" Usage="System.Text.Json.JsonSerializer.Deserialize (reader, returnType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a58f5-130">Der Reader, aus dem der JSON-Inhalt gelesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-130">The reader to read the JSON from.</span></span></param>
        <param name="returnType"><span data-ttu-id="a58f5-131">Der Typ des Objekts, in das konvertiert und das zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-131">The type of the object to convert to and return.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-132">Optionen zum Steuern des Serialisiererverhaltens während des Lesevorgangs.</span><span class="sxs-lookup"><span data-stu-id="a58f5-132">Options to control the serializer behavior during reading.</span></span></param>
        <summary><span data-ttu-id="a58f5-133">Liest einen JSON-Wert (einschließlich Objekten oder Arrays) aus dem bereitgestellten Reader und konvertiert ihn in eine Instanz eines angegebenen Typs.</span><span class="sxs-lookup"><span data-stu-id="a58f5-133">Reads one JSON value (including objects or arrays) from the provided reader and converts it into an instance of  a specified type.</span></span></summary>
        <returns><span data-ttu-id="a58f5-134">Eine <paramref name="returnType" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-134">A <paramref name="returnType" /> representation of the JSON value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-135">Wenn die <xref:System.Text.Json.Utf8JsonReader.TokenType>-Eigenschaft von `reader` <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> oder <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>ist, wird der Reader durch einen aufzurufenden <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> erweitert, um den Anfang des Werts zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-135">If the <xref:System.Text.Json.Utf8JsonReader.TokenType> property of `reader` is <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> or <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>, the reader will be advanced by one call to <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> to determine the start of the value.</span></span>

<span data-ttu-id="a58f5-136">Nach Abschluss dieser Methode werden `reader` am endgültigen Token im JSON-Wert positioniert.</span><span class="sxs-lookup"><span data-stu-id="a58f5-136">Upon completion of this method, `reader` will be positioned at the final token in the JSON value.</span></span>  <span data-ttu-id="a58f5-137">Wenn eine Ausnahme ausgelöst wird, wird der Reader auf den Zustand zurückgesetzt, in dem er sich befand, als die-Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="a58f5-137">If an exception is thrown, the reader is reset to the state it was in when the method was called.</span></span>

<span data-ttu-id="a58f5-138">Diese Methode erstellt eine Kopie der Daten, auf die der Reader reagiert hat, sodass keine aufruferanforderung vorhanden ist, die die Datenintegrität über die Rückgabe dieser Methode hinaus aufrechtzuerhalten.</span><span class="sxs-lookup"><span data-stu-id="a58f5-138">This method makes a copy of the data the reader acted on, so there is no caller requirement to maintain data integrity beyond the return of this method.</span></span>

<span data-ttu-id="a58f5-139">Der <xref:System.Text.Json.JsonReaderOptions>, der zum Erstellen der Instanz des <xref:System.Text.Json.Utf8JsonReader> verwendet wird, hat Vorrang vor dem <xref:System.Text.Json.JsonSerializerOptions>, wenn Sie einen Konflikt verursachen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-139">The <xref:System.Text.Json.JsonReaderOptions> used to create the instance of the <xref:System.Text.Json.Utf8JsonReader> take precedence over the <xref:System.Text.Json.JsonSerializerOptions> when they conflict.</span></span> <span data-ttu-id="a58f5-140">Daher werden <xref:System.Text.Json.JsonReaderOptions.AllowTrailingCommas?displayProperty=nameWithType>, <xref:System.Text.Json.JsonReaderOptions.MaxDepth?displayProperty=nameWithType>und <xref:System.Text.Json.JsonReaderOptions.CommentHandling?displayProperty=nameWithType> beim Lesen verwendet.</span><span class="sxs-lookup"><span data-stu-id="a58f5-140">Hence, <xref:System.Text.Json.JsonReaderOptions.AllowTrailingCommas?displayProperty=nameWithType>, <xref:System.Text.Json.JsonReaderOptions.MaxDepth?displayProperty=nameWithType>, and <xref:System.Text.Json.JsonReaderOptions.CommentHandling?displayProperty=nameWithType> are used while reading.</span></span>

<span data-ttu-id="a58f5-141">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-141">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58f5-142"><paramref name="returnType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a58f5-142"><paramref name="returnType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a58f5-143">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a58f5-143">The JSON is invalid.</span></span>
          
<span data-ttu-id="a58f5-144">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-144">-or-</span></span>

<span data-ttu-id="a58f5-145"><typeparamref name="returnType" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a58f5-145"><typeparamref name="returnType" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a58f5-146">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-146">-or-</span></span>

<span data-ttu-id="a58f5-147">Es konnte kein Wert aus dem Reader gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-147">A value could not be read from the reader.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a58f5-148"><paramref name="reader" /> verwendet nicht unterstützte Optionen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-148"><paramref name="reader" /> is using unsupported options.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-149">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <paramref name="returnType" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-149">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="returnType" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue Deserialize&lt;TValue&gt; (ReadOnlySpan&lt;byte&gt; utf8Json, System.Text.Json.JsonSerializerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue Deserialize&lt;TValue&gt;(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Json, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize(Of TValue) (utf8Json As ReadOnlySpan(Of Byte), Optional options As JsonSerializerOptions = null) As TValue" />
      <MemberSignature Language="F#" Value="static member Deserialize : ReadOnlySpan&lt;byte&gt; * System.Text.Json.JsonSerializerOptions -&gt; 'Value" Usage="System.Text.Json.JsonSerializer.Deserialize (utf8Json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a58f5-150">Der Zieltyp des UTF-8-codierten Texts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-150">The target type of the UTF-8 encoded text.</span></span></typeparam>
        <param name="utf8Json"><span data-ttu-id="a58f5-151">Ruft den zu analysierenden JSON-Text ab.</span><span class="sxs-lookup"><span data-stu-id="a58f5-151">The JSON text to parse.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-152">Optionen zum Steuern des Verhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="a58f5-152">Options to control the behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a58f5-153">Analysiert den UTF-8-codierten Text, der einen einzelnen JSON-Wert darstellt, in eine Instanz des Typs, der durch einen generischen Typparameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a58f5-153">Parses the UTF-8 encoded text representing a single JSON value into an instance of the type specified by a generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="a58f5-154">Eine <typeparamref name="TValue" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-154">A <typeparamref name="TValue" /> representation of the JSON value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-155">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-155">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a58f5-156">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a58f5-156">The JSON is invalid.</span></span>

<span data-ttu-id="a58f5-157">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-157">-or-</span></span>

<span data-ttu-id="a58f5-158"><typeparamref name="TValue" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a58f5-158"><typeparamref name="TValue" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a58f5-159">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-159">-or-</span></span>

<span data-ttu-id="a58f5-160">Es sind noch Daten im Bereich über einen einzelnen JSON-Wert hinaus vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-160">There is remaining data in the span beyond a single JSON value.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-161">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <typeparamref name="TValue" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-161">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue Deserialize&lt;TValue&gt; (string json, System.Text.Json.JsonSerializerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue Deserialize&lt;TValue&gt;(string json, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize(Of TValue) (json As String, Optional options As JsonSerializerOptions = null) As TValue" />
      <MemberSignature Language="F#" Value="static member Deserialize : string * System.Text.Json.JsonSerializerOptions -&gt; 'Value" Usage="System.Text.Json.JsonSerializer.Deserialize (json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="json" Type="System.String" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a58f5-162">Der Zieltyp des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-162">The target type of the JSON value.</span></span></typeparam>
        <param name="json"><span data-ttu-id="a58f5-163">Ruft den zu analysierenden JSON-Text ab.</span><span class="sxs-lookup"><span data-stu-id="a58f5-163">The JSON text to parse.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-164">Optionen zum Steuern des Verhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="a58f5-164">Options to control the behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a58f5-165">Analysiert den Text, der einen einzelnen JSON-Wert darstellt, in eine Instanz des Typs, der durch einen generischen Typparameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a58f5-165">Parses the text representing a single JSON value into an instance of the type specified by a generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="a58f5-166">Eine <typeparamref name="TValue" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-166">A <typeparamref name="TValue" /> representation of the JSON value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-167">Die Verwendung eines <xref:System.String> ist nicht so effizient wie die Verwendung der UTF-8-Methoden, da die Implementierung UTF-8 nativ verwendet.</span><span class="sxs-lookup"><span data-stu-id="a58f5-167">Using a <xref:System.String> is not as efficient as using the UTF-8 methods since the implementation natively uses UTF-8.</span></span>

<span data-ttu-id="a58f5-168">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-168">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58f5-169"><paramref name="json" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a58f5-169"><paramref name="json" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a58f5-170">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a58f5-170">The JSON is invalid.</span></span>

<span data-ttu-id="a58f5-171">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-171">-or-</span></span>

<span data-ttu-id="a58f5-172"><typeparamref name="TValue" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a58f5-172"><typeparamref name="TValue" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a58f5-173">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-173">-or-</span></span>

<span data-ttu-id="a58f5-174">Es sind noch Daten in der Zeichenfolge über einen einzelnen JSON-Wert hinaus vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-174">There is remaining data in the string beyond a single JSON value.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-175">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <typeparamref name="TValue" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-175">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue Deserialize&lt;TValue&gt; (ref System.Text.Json.Utf8JsonReader reader, System.Text.Json.JsonSerializerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue Deserialize&lt;TValue&gt;(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize(Of TValue) (ByRef reader As Utf8JsonReader, Optional options As JsonSerializerOptions = null) As TValue" />
      <MemberSignature Language="F#" Value="static member Deserialize : Utf8JsonReader * System.Text.Json.JsonSerializerOptions -&gt; 'Value" Usage="System.Text.Json.JsonSerializer.Deserialize (reader, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a58f5-176">Der Zieltyp des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-176">The target type of the JSON value.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="a58f5-177">Der Reader, aus dem der JSON-Inhalt gelesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-177">The reader to read the JSON from.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-178">Optionen zum Steuern des Serialisiererverhaltens während des Lesevorgangs.</span><span class="sxs-lookup"><span data-stu-id="a58f5-178">Options to control serializer behavior during reading.</span></span></param>
        <summary><span data-ttu-id="a58f5-179">Liest einen JSON-Wert (einschließlich Objekten oder Arrays) aus dem bereitgestellten Reader in eine Instanz des Typs, der durch einen generischen Typparameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a58f5-179">Reads one JSON value (including objects or arrays) from the provided reader into an instance of the type specified by a generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="a58f5-180">Eine <typeparamref name="TValue" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-180">A <typeparamref name="TValue" /> representation of the JSON value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-181">Wenn die <xref:System.Text.Json.Utf8JsonReader.TokenType>-Eigenschaft von `reader` <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> oder <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>ist, wird der Reader durch einen aufzurufenden <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> erweitert, um den Anfang des Werts zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-181">If the <xref:System.Text.Json.Utf8JsonReader.TokenType> property of `reader` is <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> or <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>, the reader will be advanced by one call to <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> to determine the start of the value.</span></span>
               
<span data-ttu-id="a58f5-182">Nach Abschluss dieser Methode werden `reader` am endgültigen Token im JSON-Wert positioniert.</span><span class="sxs-lookup"><span data-stu-id="a58f5-182">Upon completion of this method, `reader` will be positioned at the final token in the JSON value.</span></span> <span data-ttu-id="a58f5-183">Wenn eine Ausnahme ausgelöst wird, wird der Reader auf den Zustand zurückgesetzt, in dem er sich befand, als die-Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="a58f5-183">If an exception is thrown, the reader is reset to the state it was in when the method was called.</span></span>
               
<span data-ttu-id="a58f5-184">Diese Methode erstellt eine Kopie der Daten, auf die der Reader reagiert hat, sodass keine aufruferanforderung vorhanden ist, die die Datenintegrität über die Rückgabe dieser Methode hinaus aufrechtzuerhalten.</span><span class="sxs-lookup"><span data-stu-id="a58f5-184">This method makes a copy of the data the reader acted on, so there is no caller requirement to maintain data integrity beyond the return of this method.</span></span>
               
<span data-ttu-id="a58f5-185">Der <xref:System.Text.Json.JsonReaderOptions>, der zum Erstellen der Instanz des <xref:System.Text.Json.Utf8JsonReader> verwendet wird, hat Vorrang vor dem <xref:System.Text.Json.JsonSerializerOptions>, wenn Sie einen Konflikt verursachen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-185">The <xref:System.Text.Json.JsonReaderOptions> used to create the instance of the <xref:System.Text.Json.Utf8JsonReader> take precedence over the <xref:System.Text.Json.JsonSerializerOptions> when they conflict.</span></span> <span data-ttu-id="a58f5-186">Daher werden <xref:System.Text.Json.JsonReaderOptions.AllowTrailingCommas?displayProperty=nameWithType>, <xref:System.Text.Json.JsonReaderOptions.MaxDepth?displayProperty=nameWithType>und <xref:System.Text.Json.JsonReaderOptions.CommentHandling?displayProperty=nameWithType> beim Lesen verwendet.</span><span class="sxs-lookup"><span data-stu-id="a58f5-186">Hence, <xref:System.Text.Json.JsonReaderOptions.AllowTrailingCommas?displayProperty=nameWithType>, <xref:System.Text.Json.JsonReaderOptions.MaxDepth?displayProperty=nameWithType>, and <xref:System.Text.Json.JsonReaderOptions.CommentHandling?displayProperty=nameWithType> are used while reading.</span></span>

<span data-ttu-id="a58f5-187">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-187">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>
               
          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a58f5-188">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a58f5-188">The JSON is invalid.</span></span>

<span data-ttu-id="a58f5-189">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-189">-or-</span></span>

<span data-ttu-id="a58f5-190"><typeparamref name="TValue" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a58f5-190"><typeparamref name="TValue" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a58f5-191">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-191">-or-</span></span>

<span data-ttu-id="a58f5-192">Es konnte kein Wert aus dem Reader gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-192">A value could not be read from the reader.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a58f5-193"><paramref name="reader" /> verwendet nicht unterstützte Optionen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-193"><paramref name="reader" /> uses unsupported options.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-194">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <typeparamref name="TValue" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-194">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;object&gt; DeserializeAsync (System.IO.Stream utf8Json, Type returnType, System.Text.Json.JsonSerializerOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; DeserializeAsync(class System.IO.Stream utf8Json, class System.Type returnType, class System.Text.Json.JsonSerializerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeserializeAsync (utf8Json As Stream, returnType As Type, Optional options As JsonSerializerOptions = null, Optional cancellationToken As CancellationToken = null) As ValueTask(Of Object)" />
      <MemberSignature Language="F#" Value="static member DeserializeAsync : System.IO.Stream * Type * System.Text.Json.JsonSerializerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="System.Text.Json.JsonSerializer.DeserializeAsync (utf8Json, returnType, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="a58f5-195">Die zu analysierenden JSON-Daten.</span><span class="sxs-lookup"><span data-stu-id="a58f5-195">The JSON data to parse.</span></span></param>
        <param name="returnType"><span data-ttu-id="a58f5-196">Der Typ des Objekts, in das konvertiert und das zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-196">The type of the object to convert to and return.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-197">Optionen zum Steuern des Verhaltens während des Lesevorgangs.</span><span class="sxs-lookup"><span data-stu-id="a58f5-197">Options to control the behavior during reading.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a58f5-198">Ein Abbruchtoken, das verwendet werden kann, um den Lesevorgang abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-198">A cancellation token that may be used to cancel the read operation.</span></span></param>
        <summary><span data-ttu-id="a58f5-199">Liest den UTF-8-codierten Text, der einen einzelnen JSON-Wert darstellt, asynchron in eine Instanz eines angegebenen Typs.</span><span class="sxs-lookup"><span data-stu-id="a58f5-199">Asynchronously reads the UTF-8 encoded text representing a single JSON value into an instance of a specified type.</span></span> <span data-ttu-id="a58f5-200">Der Datenstrom wird vollständig gelesen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-200">The stream will be read to completion.</span></span></summary>
        <returns><span data-ttu-id="a58f5-201">Eine <paramref name="returnType" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-201">A <paramref name="returnType" /> representation of the JSON value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-202">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-202">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58f5-203"><paramref name="utf8Json" /> oder <paramref name="returnType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a58f5-203"><paramref name="utf8Json" /> or <paramref name="returnType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a58f5-204">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a58f5-204">The JSON is invalid.</span></span>

<span data-ttu-id="a58f5-205">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-205">-or-</span></span>

<span data-ttu-id="a58f5-206"><typeparamref name="TValue" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a58f5-206"><typeparamref name="TValue" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a58f5-207">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-207">-or-</span></span>

<span data-ttu-id="a58f5-208">Es verbleiben Daten im Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="a58f5-208">There is remaining data in the stream.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-209">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <paramref name="returnType" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-209">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="returnType" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;TValue&gt; DeserializeAsync&lt;TValue&gt; (System.IO.Stream utf8Json, System.Text.Json.JsonSerializerOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;!!TValue&gt; DeserializeAsync&lt;TValue&gt;(class System.IO.Stream utf8Json, class System.Text.Json.JsonSerializerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.DeserializeAsync``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function DeserializeAsync(Of TValue) (utf8Json As Stream, Optional options As JsonSerializerOptions = null, Optional cancellationToken As CancellationToken = null) As ValueTask(Of TValue)" />
      <MemberSignature Language="F#" Value="static member DeserializeAsync : System.IO.Stream * System.Text.Json.JsonSerializerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'Value&gt;" Usage="System.Text.Json.JsonSerializer.DeserializeAsync (utf8Json, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a58f5-210">Der Zieltyp des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-210">The target type of the JSON value.</span></span></typeparam>
        <param name="utf8Json"><span data-ttu-id="a58f5-211">Die zu analysierenden JSON-Daten.</span><span class="sxs-lookup"><span data-stu-id="a58f5-211">The JSON data to parse.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-212">Optionen zum Steuern des Verhaltens während des Lesevorgangs.</span><span class="sxs-lookup"><span data-stu-id="a58f5-212">Options to control the behavior during reading.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a58f5-213">Ein Token, das verwendet werden kann, um den Lesevorgang abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-213">A token that may be used to cancel the read operation.</span></span></param>
        <summary><span data-ttu-id="a58f5-214">Kiest den UTF-8-codierten Text, der einen einzelnen JSON-Wert darstellt, asynchron in eine Instanz des Typs, der durch einen generischen Typparameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a58f5-214">Asynchronously reads the UTF-8 encoded text representing a single JSON value into an instance of a type specified by a generic type parameter.</span></span> <span data-ttu-id="a58f5-215">Der Datenstrom wird vollständig gelesen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-215">The stream will be read to completion.</span></span></summary>
        <returns><span data-ttu-id="a58f5-216">Eine <typeparamref name="TValue" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-216">A <typeparamref name="TValue" /> representation of the JSON value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-217">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-217">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a58f5-218">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a58f5-218">The JSON is invalid.</span></span>

<span data-ttu-id="a58f5-219">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-219">-or-</span></span>

<span data-ttu-id="a58f5-220"><typeparamref name="TValue" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a58f5-220"><typeparamref name="TValue" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a58f5-221">- oder -</span><span class="sxs-lookup"><span data-stu-id="a58f5-221">-or-</span></span>

<span data-ttu-id="a58f5-222">Es verbleiben Daten im Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="a58f5-222">There is remaining data in the stream.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-223">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <typeparamref name="TValue" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-223">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public static string Serialize (object value, Type inputType, System.Text.Json.JsonSerializerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Serialize(object value, class System.Type inputType, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Serialize(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Serialize (value As Object, inputType As Type, Optional options As JsonSerializerOptions = null) As String" />
      <MemberSignature Language="F#" Value="static member Serialize : obj * Type * System.Text.Json.JsonSerializerOptions -&gt; string" Usage="System.Text.Json.JsonSerializer.Serialize (value, inputType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="inputType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a58f5-224">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="a58f5-224">The value to convert.</span></span></param>
        <param name="inputType"><span data-ttu-id="a58f5-225">Der Typ des <paramref name="value" />-Elements, das konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-225">The type of the <paramref name="value" /> to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-226">Optionen zum Steuern des Konvertierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a58f5-226">Options to control the conversion behavior.</span></span></param>
        <summary><span data-ttu-id="a58f5-227">Konvertiert den Wert eines angegebenen Typs in eine JSON-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="a58f5-227">Converts the value of a specified type into a JSON string.</span></span></summary>
        <returns><span data-ttu-id="a58f5-228">Die JSON-Zeichenfolgendarstellung des Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-228">The JSON string representation of the value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-229">Die Verwendung einer <xref:System.String> ist nicht so effizient wie die Verwendung der UTF-8-Codierung, da die Implementierung UTF-8 intern verwendet.</span><span class="sxs-lookup"><span data-stu-id="a58f5-229">Using a <xref:System.String> is not as efficient as using UTF-8 encoding since the implementation internally uses UTF-8.</span></span> <span data-ttu-id="a58f5-230">Siehe auch <xref:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)> und <xref:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)>.</span><span class="sxs-lookup"><span data-stu-id="a58f5-230">See also <xref:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)> and <xref:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)>.</span></span>

<span data-ttu-id="a58f5-231">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-231">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a58f5-232"><paramref name="inputType" /> ist nicht mit <paramref name="value" /> kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a58f5-232"><paramref name="inputType" /> is not compatible with <paramref name="value" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58f5-233"><paramref name="inputType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a58f5-233"><paramref name="inputType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-234">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <paramref name="inputType" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-234">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="inputType" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public static void Serialize (System.Text.Json.Utf8JsonWriter writer, object value, Type inputType, System.Text.Json.JsonSerializerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Serialize(class System.Text.Json.Utf8JsonWriter writer, object value, class System.Type inputType, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter,System.Object,System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Serialize (writer As Utf8JsonWriter, value As Object, inputType As Type, Optional options As JsonSerializerOptions = null)" />
      <MemberSignature Language="F#" Value="static member Serialize : System.Text.Json.Utf8JsonWriter * obj * Type * System.Text.Json.JsonSerializerOptions -&gt; unit" Usage="System.Text.Json.JsonSerializer.Serialize (writer, value, inputType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="inputType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a58f5-235">Der JSON-Writer, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-235">The JSON writer to write to.</span></span></param>
        <param name="value"><span data-ttu-id="a58f5-236">Der zu konvertierende und zu schreibende Wert.</span><span class="sxs-lookup"><span data-stu-id="a58f5-236">The value to convert and write.</span></span></param>
        <param name="inputType"><span data-ttu-id="a58f5-237">Der Typ des <paramref name="value" />-Elements, das konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-237">The type of the <paramref name="value" /> to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-238">Optionen zum Steuern des Serialisierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a58f5-238">Options to control serialization behavior.</span></span></param>
        <summary><span data-ttu-id="a58f5-239">Schreibt die JSON-Darstellung des angegebenen Typs in den bereitgestellten Writer.</span><span class="sxs-lookup"><span data-stu-id="a58f5-239">Writes the JSON representation of the specified type to the provided writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-240">Der <xref:System.Text.Json.JsonWriterOptions>, der zum Erstellen der Instanz des <xref:System.Text.Json.Utf8JsonWriter> verwendet wird, hat Vorrang vor dem <xref:System.Text.Json.JsonSerializerOptions>, wenn Sie einen Konflikt verursachen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-240">The <xref:System.Text.Json.JsonWriterOptions> used to create the instance of the <xref:System.Text.Json.Utf8JsonWriter> take precedence over the <xref:System.Text.Json.JsonSerializerOptions> when they conflict.</span></span> <span data-ttu-id="a58f5-241">Daher werden <xref:System.Text.Json.JsonWriterOptions.Indented?displayProperty=nameWithType>, <xref:System.Text.Json.JsonWriterOptions.SkipValidation?displayProperty=nameWithType>und <xref:System.Text.Json.JsonWriterOptions.Encoder?displayProperty=nameWithType> beim Schreiben verwendet.</span><span class="sxs-lookup"><span data-stu-id="a58f5-241">Hence, <xref:System.Text.Json.JsonWriterOptions.Indented?displayProperty=nameWithType>, <xref:System.Text.Json.JsonWriterOptions.SkipValidation?displayProperty=nameWithType>, and <xref:System.Text.Json.JsonWriterOptions.Encoder?displayProperty=nameWithType> are used while writing.</span></span>

<span data-ttu-id="a58f5-242">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-242">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a58f5-243"><paramref name="inputType" /> ist nicht mit <paramref name="value" /> kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a58f5-243"><paramref name="inputType" /> is not compatible with <paramref name="value" /></span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58f5-244"><paramref name="writer" /> oder <paramref name="inputType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a58f5-244"><paramref name="writer" /> or <paramref name="inputType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-245">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <paramref name="inputType" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-245">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="inputType" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static string Serialize&lt;TValue&gt; (TValue value, System.Text.Json.JsonSerializerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Serialize&lt;TValue&gt;(!!TValue value, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Serialize``1(``0,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Serialize(Of TValue) (value As TValue, Optional options As JsonSerializerOptions = null) As String" />
      <MemberSignature Language="F#" Value="static member Serialize : 'Value * System.Text.Json.JsonSerializerOptions -&gt; string" Usage="System.Text.Json.JsonSerializer.Serialize (value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a58f5-246">Der Typ des zu serialisierenden Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-246">The type of the value to serialize.</span></span></typeparam>
        <param name="value"><span data-ttu-id="a58f5-247">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="a58f5-247">The value to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-248">Optionen zum Steuern des Serialisierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a58f5-248">Options to control serialization behavior.</span></span></param>
        <summary><span data-ttu-id="a58f5-249">Konvertiert den Wert eines von einem generischen Typparameter angegebenen Typs in eine JSON-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="a58f5-249">Converts the value of a type specified by a generic type parameter into a JSON string.</span></span></summary>
        <returns><span data-ttu-id="a58f5-250">Eine JSON-Zeichenfolgendarstellung des Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-250">A JSON string representation of the value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-251">Die Verwendung einer <xref:System.String> ist nicht so effizient wie die Verwendung der UTF-8-Codierung, da die Implementierung UTF-8 intern verwendet.</span><span class="sxs-lookup"><span data-stu-id="a58f5-251">Using a <xref:System.String> is not as efficient as using UTF-8 encoding since the implementation internally uses UTF-8.</span></span> <span data-ttu-id="a58f5-252">Siehe auch <xref:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)> und <xref:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)>.</span><span class="sxs-lookup"><span data-stu-id="a58f5-252">See also <xref:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)> and <xref:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)>.</span></span>

<span data-ttu-id="a58f5-253">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-253">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-254">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <typeparamref name="TValue" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-254">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Serialize&lt;TValue&gt; (System.Text.Json.Utf8JsonWriter writer, TValue value, System.Text.Json.JsonSerializerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Serialize&lt;TValue&gt;(class System.Text.Json.Utf8JsonWriter writer, !!TValue value, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Serialize``1(System.Text.Json.Utf8JsonWriter,``0,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Serialize(Of TValue) (writer As Utf8JsonWriter, value As TValue, Optional options As JsonSerializerOptions = null)" />
      <MemberSignature Language="F#" Value="static member Serialize : System.Text.Json.Utf8JsonWriter * 'Value * System.Text.Json.JsonSerializerOptions -&gt; unit" Usage="System.Text.Json.JsonSerializer.Serialize (writer, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a58f5-255">Der Typ des zu serialisierenden Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-255">The type of the value to serialize.</span></span></typeparam>
        <param name="writer"><span data-ttu-id="a58f5-256">Ein JSON-Writer, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-256">A JSON writer to write to.</span></span></param>
        <param name="value"><span data-ttu-id="a58f5-257">Der zu konvertierende und zu schreibende Wert.</span><span class="sxs-lookup"><span data-stu-id="a58f5-257">The value to convert and write.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-258">Optionen zum Steuern des Serialisierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a58f5-258">Options to control serialization behavior.</span></span></param>
        <summary><span data-ttu-id="a58f5-259">Schreibt die JSON-Darstellung eines Typs, der von einem generischen Typparameter angegeben wird, in den bereitgestellten Writer.</span><span class="sxs-lookup"><span data-stu-id="a58f5-259">Writes the JSON representation of a type specified by a generic type parameter to the provided writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-260">Der <xref:System.Text.Json.JsonWriterOptions>, der zum Erstellen der Instanz des <xref:System.Text.Json.Utf8JsonWriter> verwendet wird, hat Vorrang vor dem <xref:System.Text.Json.JsonSerializerOptions>, wenn Sie einen Konflikt verursachen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-260">The <xref:System.Text.Json.JsonWriterOptions> used to create the instance of the <xref:System.Text.Json.Utf8JsonWriter> take precedence over the <xref:System.Text.Json.JsonSerializerOptions> when they conflict.</span></span> <span data-ttu-id="a58f5-261">Daher werden <xref:System.Text.Json.JsonWriterOptions.Indented?displayProperty=nameWithType>, <xref:System.Text.Json.JsonWriterOptions.SkipValidation?displayProperty=nameWithType>und <xref:System.Text.Json.JsonWriterOptions.Encoder?displayProperty=nameWithType> beim Schreiben verwendet.</span><span class="sxs-lookup"><span data-stu-id="a58f5-261">Hence, <xref:System.Text.Json.JsonWriterOptions.Indented?displayProperty=nameWithType>, <xref:System.Text.Json.JsonWriterOptions.SkipValidation?displayProperty=nameWithType>, and <xref:System.Text.Json.JsonWriterOptions.Encoder?displayProperty=nameWithType> are used while writing.</span></span>

<span data-ttu-id="a58f5-262">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-262">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58f5-263"><paramref name="writer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a58f5-263"><paramref name="writer" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-264">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <typeparamref name="TValue" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-264">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SerializeAsync (System.IO.Stream utf8Json, object value, Type inputType, System.Text.Json.JsonSerializerOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SerializeAsync(class System.IO.Stream utf8Json, object value, class System.Type inputType, class System.Text.Json.JsonSerializerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SerializeAsync (utf8Json As Stream, value As Object, inputType As Type, Optional options As JsonSerializerOptions = null, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="static member SerializeAsync : System.IO.Stream * obj * Type * System.Text.Json.JsonSerializerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="System.Text.Json.JsonSerializer.SerializeAsync (utf8Json, value, inputType, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="inputType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="a58f5-265">Der UTF-8-Datenstrom, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-265">The UTF-8 stream to write to.</span></span></param>
        <param name="value"><span data-ttu-id="a58f5-266">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="a58f5-266">The value to convert.</span></span></param>
        <param name="inputType"><span data-ttu-id="a58f5-267">Der Typ des <paramref name="value" />-Elements, das konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-267">The type of the <paramref name="value" /> to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-268">Optionen zum Steuern des Serialisierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a58f5-268">Options to control serialization behavior.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a58f5-269">Ein Token, das verwendet werden kann, um den Schreibvorgang abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-269">A token that may be used to cancel the write operation.</span></span></param>
        <summary><span data-ttu-id="a58f5-270">Konvertiert den Wert eines angegebenen Typs asynchron in UTF-8-codierten JSON-Text und schreibt ihn in den angegebenen Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="a58f5-270">Asynchronously converts the value of a specified type to UTF-8 encoded JSON text and writes it to the specified stream.</span></span></summary>
        <returns><span data-ttu-id="a58f5-271">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="a58f5-271">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-272">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-272">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a58f5-273"><paramref name="inputType" /> ist nicht mit <paramref name="value" /> kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a58f5-273"><paramref name="inputType" /> is not compatible with <paramref name="value" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58f5-274"><paramref name="utf8Json" /> oder <paramref name="inputType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a58f5-274"><paramref name="utf8Json" /> or <paramref name="inputType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-275">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <paramref name="inputType" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-275">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="inputType" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SerializeAsync&lt;TValue&gt; (System.IO.Stream utf8Json, TValue value, System.Text.Json.JsonSerializerOptions options = default, System.Threading.CancellationToken cancellationToken = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SerializeAsync&lt;TValue&gt;(class System.IO.Stream utf8Json, !!TValue value, class System.Text.Json.JsonSerializerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.SerializeAsync``1(System.IO.Stream,``0,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SerializeAsync(Of TValue) (utf8Json As Stream, value As TValue, Optional options As JsonSerializerOptions = null, Optional cancellationToken As CancellationToken = null) As Task" />
      <MemberSignature Language="F#" Value="static member SerializeAsync : System.IO.Stream * 'Value * System.Text.Json.JsonSerializerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="System.Text.Json.JsonSerializer.SerializeAsync (utf8Json, value, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a58f5-276">Der Typ des zu serialisierenden Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-276">The type of the value to serialize.</span></span></typeparam>
        <param name="utf8Json"><span data-ttu-id="a58f5-277">Der UTF-8-Datenstrom, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-277">The UTF-8 stream to write to.</span></span></param>
        <param name="value"><span data-ttu-id="a58f5-278">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="a58f5-278">The value to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-279">Optionen zum Steuern des Serialisierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a58f5-279">Options to control serialization behavior.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a58f5-280">Ein Token, das verwendet werden kann, um den Schreibvorgang abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="a58f5-280">A token that may be used to cancel the write operation.</span></span></param>
        <summary><span data-ttu-id="a58f5-281">Konvertiert einen Wert eines Typs, der durch einen generischen Typparameter angegeben wird, asynchron in UTF-8-codierten JSON-Text und schreibt ihn in einen Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="a58f5-281">Asynchronously converts a value of a type specified by a generic type parameter to UTF-8 encoded JSON text and writes it to a stream.</span></span></summary>
        <returns><span data-ttu-id="a58f5-282">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="a58f5-282">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-283">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-283">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58f5-284"><paramref name="utf8Json" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a58f5-284"><paramref name="utf8Json" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-285">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <typeparamref name="TValue" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-285">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeToUtf8Bytes">
      <MemberSignature Language="C#" Value="public static byte[] SerializeToUtf8Bytes (object value, Type inputType, System.Text.Json.JsonSerializerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] SerializeToUtf8Bytes(object value, class System.Type inputType, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SerializeToUtf8Bytes (value As Object, inputType As Type, Optional options As JsonSerializerOptions = null) As Byte()" />
      <MemberSignature Language="F#" Value="static member SerializeToUtf8Bytes : obj * Type * System.Text.Json.JsonSerializerOptions -&gt; byte[]" Usage="System.Text.Json.JsonSerializer.SerializeToUtf8Bytes (value, inputType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="inputType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a58f5-286">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="a58f5-286">The value to convert.</span></span></param>
        <param name="inputType"><span data-ttu-id="a58f5-287">Der Typ des <paramref name="value" />-Elements, das konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a58f5-287">The type of the <paramref name="value" /> to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-288">Optionen zum Steuern des Konvertierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a58f5-288">Options to control the conversion behavior.</span></span></param>
        <summary><span data-ttu-id="a58f5-289">Konvertiert einen Wert des angegebenen Typs in eine JSON-Zeichenfolge, die als UTF-8-Bytes codiert ist.</span><span class="sxs-lookup"><span data-stu-id="a58f5-289">Converts a value of the specified type into a JSON string, encoded as UTF-8 bytes.</span></span></summary>
        <returns><span data-ttu-id="a58f5-290">Eine JSON-Zeichenfolgendarstellung des Werts, die als UTF-8-Bytes codiert ist.</span><span class="sxs-lookup"><span data-stu-id="a58f5-290">A JSON string representation of the value, encoded as UTF-8 bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-291">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-291">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a58f5-292"><paramref name="inputType" /> ist nicht mit <paramref name="value" /> kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a58f5-292"><paramref name="inputType" /> is not compatible with <paramref name="value" />.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a58f5-293"><paramref name="inputType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a58f5-293"><paramref name="inputType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-294">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <paramref name="inputType" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-294">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <paramref name="inputType" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="SerializeToUtf8Bytes&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static byte[] SerializeToUtf8Bytes&lt;TValue&gt; (TValue value, System.Text.Json.JsonSerializerOptions options = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] SerializeToUtf8Bytes&lt;TValue&gt;(!!TValue value, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes``1(``0,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SerializeToUtf8Bytes(Of TValue) (value As TValue, Optional options As JsonSerializerOptions = null) As Byte()" />
      <MemberSignature Language="F#" Value="static member SerializeToUtf8Bytes : 'Value * System.Text.Json.JsonSerializerOptions -&gt; byte[]" Usage="System.Text.Json.JsonSerializer.SerializeToUtf8Bytes (value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a58f5-295">Der Typ des Werts.</span><span class="sxs-lookup"><span data-stu-id="a58f5-295">The type of the value.</span></span></typeparam>
        <param name="value"><span data-ttu-id="a58f5-296">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="a58f5-296">The value to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a58f5-297">Optionen zum Steuern des Konvertierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a58f5-297">Options to control the conversion behavior.</span></span></param>
        <summary><span data-ttu-id="a58f5-298">Konvertiert den Wert eines Typs, der durch einen generischen Typparameter angegeben wird, in eine als UTF-8-Bytes codierte JSON-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="a58f5-298">Converts the value of a type specified by a generic type parameter into a JSON string, encoded as UTF-8 bytes.</span></span></summary>
        <returns><span data-ttu-id="a58f5-299">Eine JSON-Zeichenfolgendarstellung des Werts, die als UTF-8-Bytes codiert ist.</span><span class="sxs-lookup"><span data-stu-id="a58f5-299">A JSON string representation of the value, encoded as UTF-8 bytes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a58f5-300">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span><span class="sxs-lookup"><span data-stu-id="a58f5-300">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md).</span></span>

 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="a58f5-301">Es ist keine kompatible <see cref="System.Text.Json.Serialization.JsonConverter" />-Klasse für <typeparamref name="TValue" /> oder die serialisierbaren Member vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a58f5-301">There is no compatible <see cref="System.Text.Json.Serialization.JsonConverter" /> for <typeparamref name="TValue" /> or its serializable members.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
