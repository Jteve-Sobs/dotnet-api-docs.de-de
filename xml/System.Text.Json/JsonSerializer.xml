<Type Name="JsonSerializer" FullName="System.Text.Json.JsonSerializer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="294530933a00ebb0c444acf0443efd95a382704e" /><Meta Name="ms.sourcegitcommit" Value="96c669ea9a8f9e1197bf570e5eb51a3c7a913f39" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/10/2019" /><Meta Name="ms.locfileid" Value="70875222" /></Metadata><TypeSignature Language="C#" Value="public static class JsonSerializer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit JsonSerializer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonSerializer" />
  <TypeSignature Language="VB.NET" Value="Public Class JsonSerializer" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonSerializer abstract sealed" />
  <TypeSignature Language="F#" Value="type JsonSerializer = class" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="a6deb-101">Stellt Funktionen zum Serialisieren von Objekten oder Werttypen in JSON und zum Deserialisieren von JSON in Objekte oder Werttypen bereit.</span><span class="sxs-lookup"><span data-stu-id="a6deb-101">Provides functionality to serialize objects or value types to JSON and to deserialize JSON into objects or value types.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static object Deserialize (ReadOnlySpan&lt;byte&gt; utf8Json, Type returnType, System.Text.Json.JsonSerializerOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Deserialize(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Json, class System.Type returnType, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Deserialize(System.ReadOnlySpan{System.Byte},System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize (utf8Json As ReadOnlySpan(Of Byte), returnType As Type, Optional options As JsonSerializerOptions = null) As Object" />
      <MemberSignature Language="F#" Value="static member Deserialize : ReadOnlySpan&lt;byte&gt; * Type * System.Text.Json.JsonSerializerOptions -&gt; obj" Usage="System.Text.Json.JsonSerializer.Deserialize (utf8Json, returnType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="a6deb-102">Ruft den zu analysierenden JSON-Text ab.</span><span class="sxs-lookup"><span data-stu-id="a6deb-102">The JSON text to parse.</span></span></param>
        <param name="returnType"><span data-ttu-id="a6deb-103">Der Typ des Objekts, in das konvertiert und das zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-103">The type of the object to convert to and return.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-104">Optionen zum Steuern des Verhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="a6deb-104">Options to control the behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a6deb-105">Analysiert den UTF-8-codierten Text, der einen einzelnen JSON-Wert darstellt, in eine Instanz eines angegebenen Typs.</span><span class="sxs-lookup"><span data-stu-id="a6deb-105">Parses the UTF-8 encoded text representing a single JSON value into an instance of a specified type.</span></span></summary>
        <returns><span data-ttu-id="a6deb-106">Eine <paramref name="returnType" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-106">A <paramref name="returnType" /> representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6deb-107"><paramref name="returnType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6deb-107"><paramref name="returnType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a6deb-108">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a6deb-108">The JSON is invalid.</span></span>
          
<span data-ttu-id="a6deb-109">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-109">-or-</span></span>

<span data-ttu-id="a6deb-110"><typeparamref name="returnType" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a6deb-110"><typeparamref name="returnType" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a6deb-111">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-111">-or-</span></span>

<span data-ttu-id="a6deb-112">Es sind noch Daten im Bereich über einen einzelnen JSON-Wert hinaus vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a6deb-112">There is remaining data in the span beyond a single JSON value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static object Deserialize (string json, Type returnType, System.Text.Json.JsonSerializerOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Deserialize(string json, class System.Type returnType, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Deserialize(System.String,System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize (json As String, returnType As Type, Optional options As JsonSerializerOptions = null) As Object" />
      <MemberSignature Language="F#" Value="static member Deserialize : string * Type * System.Text.Json.JsonSerializerOptions -&gt; obj" Usage="System.Text.Json.JsonSerializer.Deserialize (json, returnType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.String" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="json"><span data-ttu-id="a6deb-113">Ruft den zu analysierenden JSON-Text ab.</span><span class="sxs-lookup"><span data-stu-id="a6deb-113">The JSON text to parse.</span></span></param>
        <param name="returnType"><span data-ttu-id="a6deb-114">Der Typ des Objekts, in das konvertiert und das zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-114">The type of the object to convert to and return.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-115">Optionen zum Steuern des Verhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="a6deb-115">Options to control the behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a6deb-116">Analysiert den Text, der einen einzelnen JSON-Wert darstellt, in eine Instanz eines angegebenen Typs.</span><span class="sxs-lookup"><span data-stu-id="a6deb-116">Parses the text representing a single JSON value into an instance of a specified type.</span></span></summary>
        <returns><span data-ttu-id="a6deb-117">Eine <paramref name="returnType" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-117">A <paramref name="returnType" /> representation of the JSON value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6deb-118">Die Verwendung <xref:System.String> eines ist nicht so effizient wie die Verwendung der UTF-8-Methoden, da die Implementierung UTF-8 nativ verwendet.</span><span class="sxs-lookup"><span data-stu-id="a6deb-118">Using a <xref:System.String> is not as efficient as using the UTF-8 methods since the implementation natively uses UTF-8.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6deb-119"><paramref name="json" /> oder <paramref name="returnType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6deb-119"><paramref name="json" /> or <paramref name="returnType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a6deb-120">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a6deb-120">The JSON is invalid.</span></span>
          
<span data-ttu-id="a6deb-121">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-121">-or-</span></span>

<span data-ttu-id="a6deb-122"><typeparamref name="TValue" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a6deb-122"><typeparamref name="TValue" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a6deb-123">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-123">-or-</span></span>

<span data-ttu-id="a6deb-124">Es sind noch Daten in der Zeichenfolge über einen einzelnen JSON-Wert hinaus vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a6deb-124">There is remaining data in the string beyond a single JSON value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize">
      <MemberSignature Language="C#" Value="public static object Deserialize (ref System.Text.Json.Utf8JsonReader reader, Type returnType, System.Text.Json.JsonSerializerOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object Deserialize(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.Type returnType, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Deserialize(System.Text.Json.Utf8JsonReader@,System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize (ByRef reader As Utf8JsonReader, returnType As Type, Optional options As JsonSerializerOptions = null) As Object" />
      <MemberSignature Language="F#" Value="static member Deserialize : Utf8JsonReader * Type * System.Text.Json.JsonSerializerOptions -&gt; obj" Usage="System.Text.Json.JsonSerializer.Deserialize (reader, returnType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="a6deb-125">Der Reader, aus dem der JSON-Inhalt gelesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-125">The reader to read the JSON from.</span></span></param>
        <param name="returnType"><span data-ttu-id="a6deb-126">Der Typ des Objekts, in das konvertiert und das zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-126">The type of the object to convert to and return.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-127">Optionen zum Steuern des Serialisiererverhaltens während des Lesevorgangs.</span><span class="sxs-lookup"><span data-stu-id="a6deb-127">Options to control the serializer behavior during reading.</span></span></param>
        <summary><span data-ttu-id="a6deb-128">Liest einen JSON-Wert (einschließlich Objekten oder Arrays) aus dem bereitgestellten Reader und konvertiert ihn in eine Instanz eines angegebenen Typs.</span><span class="sxs-lookup"><span data-stu-id="a6deb-128">Reads one JSON value (including objects or arrays) from the provided reader and converts it into an instance of  a specified type.</span></span></summary>
        <returns><span data-ttu-id="a6deb-129">Eine <paramref name="returnType" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-129">A <paramref name="returnType" /> representation of the JSON value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6deb-130">Wenn die <xref:System.Text.Json.Utf8JsonReader.TokenType> -Eigenschaft `reader` von <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> oder <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>ist, wird der Reader durch einen-Rückruf <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> erweitert, um den Anfang des Werts zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-130">If the <xref:System.Text.Json.Utf8JsonReader.TokenType> property of `reader` is <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> or <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>, the reader will be advanced by one call to <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> to determine the start of the value.</span></span>

<span data-ttu-id="a6deb-131">Nach Abschluss dieser Methode `reader` wird am endgültigen Token im JSON-Wert positioniert.</span><span class="sxs-lookup"><span data-stu-id="a6deb-131">Upon completion of this method, `reader` will be positioned at the final token in the JSON value.</span></span>  <span data-ttu-id="a6deb-132">Wenn eine Ausnahme ausgelöst wird, wird der Reader auf den Zustand zurückgesetzt, in dem er sich befand, als die-Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="a6deb-132">If an exception is thrown, the reader is reset to the state it was in when the method was called.</span></span>

<span data-ttu-id="a6deb-133">Diese Methode erstellt eine Kopie der Daten, auf die der Reader reagiert hat, sodass keine aufruferanforderung vorhanden ist, die die Datenintegrität über die Rückgabe dieser Methode hinaus aufrechtzuerhalten.</span><span class="sxs-lookup"><span data-stu-id="a6deb-133">This method makes a copy of the data the reader acted on, so there is no caller requirement to maintain data integrity beyond the return of this method.</span></span>

<span data-ttu-id="a6deb-134">Der <xref:System.Text.Json.JsonReaderOptions> , der zum Erstellen der Instanz <xref:System.Text.Json.Utf8JsonReader> von verwendet wird, hat <xref:System.Text.Json.JsonSerializerOptions> Vorrang vor dem, wenn Sie einen Konflikt verursachen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-134">The <xref:System.Text.Json.JsonReaderOptions> used to create the instance of the <xref:System.Text.Json.Utf8JsonReader> take precedence over the <xref:System.Text.Json.JsonSerializerOptions> when they conflict.</span></span> <span data-ttu-id="a6deb-135">Daher werden, und<xref:System.Text.Json.JsonReaderOptions.CommentHandling?displayProperty=nameWithType> beim Lesen verwendet. <xref:System.Text.Json.JsonReaderOptions.AllowTrailingCommas?displayProperty=nameWithType> <xref:System.Text.Json.JsonReaderOptions.MaxDepth?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a6deb-135">Hence, <xref:System.Text.Json.JsonReaderOptions.AllowTrailingCommas?displayProperty=nameWithType>, <xref:System.Text.Json.JsonReaderOptions.MaxDepth?displayProperty=nameWithType>, and <xref:System.Text.Json.JsonReaderOptions.CommentHandling?displayProperty=nameWithType> are used while reading.</span></span>
               
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6deb-136"><paramref name="returnType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6deb-136"><paramref name="returnType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a6deb-137">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a6deb-137">The JSON is invalid.</span></span>
          
<span data-ttu-id="a6deb-138">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-138">-or-</span></span>

<span data-ttu-id="a6deb-139"><typeparamref name="returnType" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a6deb-139"><typeparamref name="returnType" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a6deb-140">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-140">-or-</span></span>

<span data-ttu-id="a6deb-141">Es konnte kein Wert aus dem Reader gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="a6deb-141">A value could not be read from the reader.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a6deb-142"><paramref name="reader" /> verwendet nicht unterstützte Optionen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-142"><paramref name="reader" /> is using unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue Deserialize&lt;TValue&gt; (ReadOnlySpan&lt;byte&gt; utf8Json, System.Text.Json.JsonSerializerOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue Deserialize&lt;TValue&gt;(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Json, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Deserialize``1(System.ReadOnlySpan{System.Byte},System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize(Of TValue) (utf8Json As ReadOnlySpan(Of Byte), Optional options As JsonSerializerOptions = null) As TValue" />
      <MemberSignature Language="F#" Value="static member Deserialize : ReadOnlySpan&lt;byte&gt; * System.Text.Json.JsonSerializerOptions -&gt; 'Value" Usage="System.Text.Json.JsonSerializer.Deserialize (utf8Json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a6deb-143">Der Zieltyp des UTF-8-codierten Texts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-143">The target type of the UTF-8 encoded text.</span></span></typeparam>
        <param name="utf8Json"><span data-ttu-id="a6deb-144">Ruft den zu analysierenden JSON-Text ab.</span><span class="sxs-lookup"><span data-stu-id="a6deb-144">The JSON text to parse.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-145">Optionen zum Steuern des Verhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="a6deb-145">Options to control the behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a6deb-146">Analysiert den UTF-8-codierten Text, der einen einzelnen JSON-Wert darstellt, in eine Instanz des Typs, der durch einen generischen Typparameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a6deb-146">Parses the UTF-8 encoded text representing a single JSON value into an instance of the type specified by a generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="a6deb-147">Eine <typeparamref name="TValue" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-147">A <typeparamref name="TValue" /> representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a6deb-148">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a6deb-148">The JSON is invalid.</span></span>
          
<span data-ttu-id="a6deb-149">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-149">-or-</span></span>

<span data-ttu-id="a6deb-150"><typeparamref name="TValue" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a6deb-150"><typeparamref name="TValue" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a6deb-151">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-151">-or-</span></span>

<span data-ttu-id="a6deb-152">Es sind noch Daten im Bereich über einen einzelnen JSON-Wert hinaus vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a6deb-152">There is remaining data in the span beyond a single JSON value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue Deserialize&lt;TValue&gt; (string json, System.Text.Json.JsonSerializerOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue Deserialize&lt;TValue&gt;(string json, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Deserialize``1(System.String,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize(Of TValue) (json As String, Optional options As JsonSerializerOptions = null) As TValue" />
      <MemberSignature Language="F#" Value="static member Deserialize : string * System.Text.Json.JsonSerializerOptions -&gt; 'Value" Usage="System.Text.Json.JsonSerializer.Deserialize (json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="json" Type="System.String" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a6deb-153">Der Zieltyp des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-153">The target type of the JSON value.</span></span></typeparam>
        <param name="json"><span data-ttu-id="a6deb-154">Ruft den zu analysierenden JSON-Text ab.</span><span class="sxs-lookup"><span data-stu-id="a6deb-154">The JSON text to parse.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-155">Optionen zum Steuern des Verhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="a6deb-155">Options to control the behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="a6deb-156">Analysiert den Text, der einen einzelnen JSON-Wert darstellt, in eine Instanz des Typs, der durch einen generischen Typparameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a6deb-156">Parses the text representing a single JSON value into an instance of the type specified by a generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="a6deb-157">Eine <typeparamref name="TValue" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-157">A <typeparamref name="TValue" /> representation of the JSON value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6deb-158">Die Verwendung <xref:System.String> eines ist nicht so effizient wie die Verwendung der UTF-8-Methoden, da die Implementierung UTF-8 nativ verwendet.</span><span class="sxs-lookup"><span data-stu-id="a6deb-158">Using a <xref:System.String> is not as efficient as using the UTF-8 methods since the implementation natively uses UTF-8.</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6deb-159"><paramref name="json" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6deb-159"><paramref name="json" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a6deb-160">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a6deb-160">The JSON is invalid.</span></span>
          
<span data-ttu-id="a6deb-161">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-161">-or-</span></span>

<span data-ttu-id="a6deb-162"><typeparamref name="TValue" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a6deb-162"><typeparamref name="TValue" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a6deb-163">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-163">-or-</span></span>

<span data-ttu-id="a6deb-164">Es sind noch Daten in der Zeichenfolge über einen einzelnen JSON-Wert hinaus vorhanden.</span><span class="sxs-lookup"><span data-stu-id="a6deb-164">There is remaining data in the string beyond a single JSON value.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Deserialize&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static TValue Deserialize&lt;TValue&gt; (ref System.Text.Json.Utf8JsonReader reader, System.Text.Json.JsonSerializerOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TValue Deserialize&lt;TValue&gt;(valuetype System.Text.Json.Utf8JsonReader&amp; reader, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Deserialize``1(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Deserialize(Of TValue) (ByRef reader As Utf8JsonReader, Optional options As JsonSerializerOptions = null) As TValue" />
      <MemberSignature Language="F#" Value="static member Deserialize : Utf8JsonReader * System.Text.Json.JsonSerializerOptions -&gt; 'Value" Usage="System.Text.Json.JsonSerializer.Deserialize (reader, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TValue</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a6deb-165">Der Zieltyp des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-165">The target type of the JSON value.</span></span></typeparam>
        <param name="reader"><span data-ttu-id="a6deb-166">Der Reader, aus dem der JSON-Inhalt gelesen werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-166">The reader to read the JSON from.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-167">Optionen zum Steuern des Serialisiererverhaltens während des Lesevorgangs.</span><span class="sxs-lookup"><span data-stu-id="a6deb-167">Options to control serializer behavior during reading.</span></span></param>
        <summary><span data-ttu-id="a6deb-168">Liest einen JSON-Wert (einschließlich Objekten oder Arrays) aus dem bereitgestellten Reader in eine Instanz des Typs, der durch einen generischen Typparameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a6deb-168">Reads one JSON value (including objects or arrays) from the provided reader into an instance of the type specified by a generic type parameter.</span></span></summary>
        <returns><span data-ttu-id="a6deb-169">Eine <typeparamref name="TValue" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-169">A <typeparamref name="TValue" /> representation of the JSON value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6deb-170">Wenn die <xref:System.Text.Json.Utf8JsonReader.TokenType> -Eigenschaft `reader` von <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> oder <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>ist, wird der Reader durch einen-Rückruf <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> erweitert, um den Anfang des Werts zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-170">If the <xref:System.Text.Json.Utf8JsonReader.TokenType> property of `reader` is <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> or <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>, the reader will be advanced by one call to <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> to determine the start of the value.</span></span>
               
<span data-ttu-id="a6deb-171">Nach Abschluss dieser Methode `reader` wird am endgültigen Token im JSON-Wert positioniert.</span><span class="sxs-lookup"><span data-stu-id="a6deb-171">Upon completion of this method, `reader` will be positioned at the final token in the JSON value.</span></span> <span data-ttu-id="a6deb-172">Wenn eine Ausnahme ausgelöst wird, wird der Reader auf den Zustand zurückgesetzt, in dem er sich befand, als die-Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="a6deb-172">If an exception is thrown, the reader is reset to the state it was in when the method was called.</span></span>
               
<span data-ttu-id="a6deb-173">Diese Methode erstellt eine Kopie der Daten, auf die der Reader reagiert hat, sodass keine aufruferanforderung vorhanden ist, die die Datenintegrität über die Rückgabe dieser Methode hinaus aufrechtzuerhalten.</span><span class="sxs-lookup"><span data-stu-id="a6deb-173">This method makes a copy of the data the reader acted on, so there is no caller requirement to maintain data integrity beyond the return of this method.</span></span>
               
<span data-ttu-id="a6deb-174">Der <xref:System.Text.Json.JsonReaderOptions> , der zum Erstellen der Instanz <xref:System.Text.Json.Utf8JsonReader> von verwendet wird, hat <xref:System.Text.Json.JsonSerializerOptions> Vorrang vor dem, wenn Sie einen Konflikt verursachen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-174">The <xref:System.Text.Json.JsonReaderOptions> used to create the instance of the <xref:System.Text.Json.Utf8JsonReader> take precedence over the <xref:System.Text.Json.JsonSerializerOptions> when they conflict.</span></span> <span data-ttu-id="a6deb-175">Daher werden, und<xref:System.Text.Json.JsonReaderOptions.CommentHandling?displayProperty=nameWithType> beim Lesen verwendet. <xref:System.Text.Json.JsonReaderOptions.AllowTrailingCommas?displayProperty=nameWithType> <xref:System.Text.Json.JsonReaderOptions.MaxDepth?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a6deb-175">Hence, <xref:System.Text.Json.JsonReaderOptions.AllowTrailingCommas?displayProperty=nameWithType>, <xref:System.Text.Json.JsonReaderOptions.MaxDepth?displayProperty=nameWithType>, and <xref:System.Text.Json.JsonReaderOptions.CommentHandling?displayProperty=nameWithType> are used while reading.</span></span>
               
          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a6deb-176">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a6deb-176">The JSON is invalid.</span></span>
          
<span data-ttu-id="a6deb-177">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-177">-or-</span></span>

<span data-ttu-id="a6deb-178"><typeparamref name="TValue" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a6deb-178"><typeparamref name="TValue" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a6deb-179">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-179">-or-</span></span>

<span data-ttu-id="a6deb-180">Es konnte kein Wert aus dem Reader gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="a6deb-180">A value could not be read from the reader.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a6deb-181"><paramref name="reader" /> verwendet nicht unterstützte Optionen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-181"><paramref name="reader" /> uses unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;object&gt; DeserializeAsync (System.IO.Stream utf8Json, Type returnType, System.Text.Json.JsonSerializerOptions options = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;object&gt; DeserializeAsync(class System.IO.Stream utf8Json, class System.Type returnType, class System.Text.Json.JsonSerializerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.DeserializeAsync(System.IO.Stream,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member DeserializeAsync : System.IO.Stream * Type * System.Text.Json.JsonSerializerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;obj&gt;" Usage="System.Text.Json.JsonSerializer.DeserializeAsync (utf8Json, returnType, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="returnType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="a6deb-182">Die zu analysierenden JSON-Daten.</span><span class="sxs-lookup"><span data-stu-id="a6deb-182">The JSON data to parse.</span></span></param>
        <param name="returnType"><span data-ttu-id="a6deb-183">Der Typ des Objekts, in das konvertiert und das zurückgegeben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-183">The type of the object to convert to and return.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-184">Optionen zum Steuern des Verhaltens während des Lesevorgangs.</span><span class="sxs-lookup"><span data-stu-id="a6deb-184">Options to control the behavior during reading.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a6deb-185">Ein Abbruchtoken, das verwendet werden kann, um den Lesevorgang abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-185">A cancellation token that may be used to cancel the read operation.</span></span></param>
        <summary><span data-ttu-id="a6deb-186">Liest den UTF-8-codierten Text, der einen einzelnen JSON-Wert darstellt, asynchron in eine Instanz eines angegebenen Typs.</span><span class="sxs-lookup"><span data-stu-id="a6deb-186">Asynchronously reads the UTF-8 encoded text representing a single JSON value into an instance of a specified type.</span></span> <span data-ttu-id="a6deb-187">Der Datenstrom wird vollständig gelesen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-187">The stream will be read to completion.</span></span></summary>
        <returns><span data-ttu-id="a6deb-188">Eine <paramref name="returnType" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-188">A <paramref name="returnType" /> representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a6deb-189"><paramref name="utf8Json" /> oder <paramref name="returnType" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a6deb-189"><paramref name="utf8Json" /> or <paramref name="returnType" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a6deb-190">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a6deb-190">The JSON is invalid.</span></span>
          
<span data-ttu-id="a6deb-191">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-191">-or-</span></span>

<span data-ttu-id="a6deb-192"><typeparamref name="TValue" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a6deb-192"><typeparamref name="TValue" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a6deb-193">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-193">-or-</span></span>

<span data-ttu-id="a6deb-194">Es verbleiben Daten im Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="a6deb-194">There is remaining data in the stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="DeserializeAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.ValueTask&lt;TValue&gt; DeserializeAsync&lt;TValue&gt; (System.IO.Stream utf8Json, System.Text.Json.JsonSerializerOptions options = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Threading.Tasks.ValueTask`1&lt;!!TValue&gt; DeserializeAsync&lt;TValue&gt;(class System.IO.Stream utf8Json, class System.Text.Json.JsonSerializerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.DeserializeAsync``1(System.IO.Stream,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member DeserializeAsync : System.IO.Stream * System.Text.Json.JsonSerializerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.ValueTask&lt;'Value&gt;" Usage="System.Text.Json.JsonSerializer.DeserializeAsync (utf8Json, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.ValueTask&lt;TValue&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a6deb-195">Der Zieltyp des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-195">The target type of the JSON value.</span></span></typeparam>
        <param name="utf8Json"><span data-ttu-id="a6deb-196">Die zu analysierenden JSON-Daten.</span><span class="sxs-lookup"><span data-stu-id="a6deb-196">The JSON data to parse.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-197">Optionen zum Steuern des Verhaltens während des Lesevorgangs.</span><span class="sxs-lookup"><span data-stu-id="a6deb-197">Options to control the behavior during reading.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a6deb-198">Ein Token, das verwendet werden kann, um den Lesevorgang abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-198">A token that may be used to cancel the read operation.</span></span></param>
        <summary><span data-ttu-id="a6deb-199">Kiest den UTF-8-codierten Text, der einen einzelnen JSON-Wert darstellt, asynchron in eine Instanz des Typs, der durch einen generischen Typparameter angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="a6deb-199">Asynchronously reads the UTF-8 encoded text representing a single JSON value into an instance of a type specified by a generic type parameter.</span></span> <span data-ttu-id="a6deb-200">Der Datenstrom wird vollständig gelesen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-200">The stream will be read to completion.</span></span></summary>
        <returns><span data-ttu-id="a6deb-201">Eine <typeparamref name="TValue" />-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-201">A <typeparamref name="TValue" /> representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="a6deb-202">Der JSON-Code ist ungültig.</span><span class="sxs-lookup"><span data-stu-id="a6deb-202">The JSON is invalid.</span></span>
          
<span data-ttu-id="a6deb-203">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-203">-or-</span></span>

<span data-ttu-id="a6deb-204"><typeparamref name="TValue" /> ist nicht mit dem JSON-Code kompatibel.</span><span class="sxs-lookup"><span data-stu-id="a6deb-204"><typeparamref name="TValue" /> is not compatible with the JSON.</span></span>

<span data-ttu-id="a6deb-205">- oder -</span><span class="sxs-lookup"><span data-stu-id="a6deb-205">-or-</span></span>

<span data-ttu-id="a6deb-206">Es verbleiben Daten im Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="a6deb-206">There is remaining data in the stream.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public static string Serialize (object value, Type inputType, System.Text.Json.JsonSerializerOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Serialize(object value, class System.Type inputType, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Serialize(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Serialize (value As Object, inputType As Type, Optional options As JsonSerializerOptions = null) As String" />
      <MemberSignature Language="F#" Value="static member Serialize : obj * Type * System.Text.Json.JsonSerializerOptions -&gt; string" Usage="System.Text.Json.JsonSerializer.Serialize (value, inputType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="inputType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6deb-207">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6deb-207">The value to convert.</span></span></param>
        <param name="inputType"><span data-ttu-id="a6deb-208">Der Typ des <paramref name="value" />-Elements, das konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-208">The type of the <paramref name="value" /> to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-209">Optionen zum Steuern des Konvertierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a6deb-209">Options to control the conversion behavior.</span></span></param>
        <summary><span data-ttu-id="a6deb-210">Konvertiert den Wert eines angegebenen Typs in eine JSON-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="a6deb-210">Converts the value of a specified type into a JSON string.</span></span></summary>
        <returns><span data-ttu-id="a6deb-211">Die JSON-Zeichenfolgendarstellung des Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-211">The JSON string representation of the value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6deb-212">Die Verwendung <xref:System.String> eines ist nicht so effizient wie die Verwendung der UTF-8-Codierung, da die Implementierung UTF-8 intern verwendet.</span><span class="sxs-lookup"><span data-stu-id="a6deb-212">Using a <xref:System.String> is not as efficient as using UTF-8 encoding since the implementation internally uses UTF-8.</span></span> <span data-ttu-id="a6deb-213">Siehe auch <xref:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)> und <xref:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)>.</span><span class="sxs-lookup"><span data-stu-id="a6deb-213">See also <xref:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)> and <xref:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize">
      <MemberSignature Language="C#" Value="public static void Serialize (System.Text.Json.Utf8JsonWriter writer, object value, Type inputType, System.Text.Json.JsonSerializerOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Serialize(class System.Text.Json.Utf8JsonWriter writer, object value, class System.Type inputType, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Serialize(System.Text.Json.Utf8JsonWriter,System.Object,System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Serialize (writer As Utf8JsonWriter, value As Object, inputType As Type, Optional options As JsonSerializerOptions = null)" />
      <MemberSignature Language="F#" Value="static member Serialize : System.Text.Json.Utf8JsonWriter * obj * Type * System.Text.Json.JsonSerializerOptions -&gt; unit" Usage="System.Text.Json.JsonSerializer.Serialize (writer, value, inputType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="inputType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="a6deb-214">Der JSON-Writer, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-214">The JSON writer to write to.</span></span></param>
        <param name="value"><span data-ttu-id="a6deb-215">Der zu konvertierende und zu schreibende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6deb-215">The value to convert and write.</span></span></param>
        <param name="inputType"><span data-ttu-id="a6deb-216">Der Typ des <paramref name="value" />-Elements, das konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-216">The type of the <paramref name="value" /> to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-217">Optionen zum Steuern des Serialisierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a6deb-217">Options to control serialization behavior.</span></span></param>
        <summary><span data-ttu-id="a6deb-218">Schreibt die JSON-Darstellung des angegebenen Typs in den bereitgestellten Writer.</span><span class="sxs-lookup"><span data-stu-id="a6deb-218">Writes the JSON representation of the specified type to the provided writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6deb-219">Der <xref:System.Text.Json.JsonWriterOptions> , der zum Erstellen der Instanz <xref:System.Text.Json.Utf8JsonWriter> von verwendet wird, hat <xref:System.Text.Json.JsonSerializerOptions> Vorrang vor dem, wenn Sie einen Konflikt verursachen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-219">The <xref:System.Text.Json.JsonWriterOptions> used to create the instance of the <xref:System.Text.Json.Utf8JsonWriter> take precedence over the <xref:System.Text.Json.JsonSerializerOptions> when they conflict.</span></span> <span data-ttu-id="a6deb-220">Daher werden, und<xref:System.Text.Json.JsonWriterOptions.Encoder?displayProperty=nameWithType> beim Schreiben verwendet. <xref:System.Text.Json.JsonWriterOptions.Indented?displayProperty=nameWithType> <xref:System.Text.Json.JsonWriterOptions.SkipValidation?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a6deb-220">Hence, <xref:System.Text.Json.JsonWriterOptions.Indented?displayProperty=nameWithType>, <xref:System.Text.Json.JsonWriterOptions.SkipValidation?displayProperty=nameWithType>, and <xref:System.Text.Json.JsonWriterOptions.Encoder?displayProperty=nameWithType> are used while writing.</span></span>
               
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static string Serialize&lt;TValue&gt; (TValue value, System.Text.Json.JsonSerializerOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string Serialize&lt;TValue&gt;(!!TValue value, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Serialize``1(``0,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Serialize(Of TValue) (value As TValue, Optional options As JsonSerializerOptions = null) As String" />
      <MemberSignature Language="F#" Value="static member Serialize : 'Value * System.Text.Json.JsonSerializerOptions -&gt; string" Usage="System.Text.Json.JsonSerializer.Serialize (value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a6deb-221">Der Typ des zu serialisierenden Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-221">The type of the value to serialize.</span></span></typeparam>
        <param name="value"><span data-ttu-id="a6deb-222">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6deb-222">The value to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-223">Optionen zum Steuern des Serialisierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a6deb-223">Options to control serialization behavior.</span></span></param>
        <summary><span data-ttu-id="a6deb-224">Konvertiert den Wert eines von einem generischen Typparameter angegebenen Typs in eine JSON-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="a6deb-224">Converts the value of a type specified by a generic type parameter into a JSON string.</span></span></summary>
        <returns><span data-ttu-id="a6deb-225">Eine JSON-Zeichenfolgendarstellung des Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-225">A JSON string representation of the value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6deb-226">Die Verwendung <xref:System.String> eines ist nicht so effizient wie die Verwendung der UTF-8-Codierung, da die Implementierung UTF-8 intern verwendet.</span><span class="sxs-lookup"><span data-stu-id="a6deb-226">Using a <xref:System.String> is not as efficient as using UTF-8 encoding since the implementation internally uses UTF-8.</span></span> <span data-ttu-id="a6deb-227">Siehe auch <xref:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)> und <xref:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)>.</span><span class="sxs-lookup"><span data-stu-id="a6deb-227">See also <xref:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)> and <xref:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)>.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Serialize&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Serialize&lt;TValue&gt; (System.Text.Json.Utf8JsonWriter writer, TValue value, System.Text.Json.JsonSerializerOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Serialize&lt;TValue&gt;(class System.Text.Json.Utf8JsonWriter writer, !!TValue value, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.Serialize``1(System.Text.Json.Utf8JsonWriter,``0,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Serialize(Of TValue) (writer As Utf8JsonWriter, value As TValue, Optional options As JsonSerializerOptions = null)" />
      <MemberSignature Language="F#" Value="static member Serialize : System.Text.Json.Utf8JsonWriter * 'Value * System.Text.Json.JsonSerializerOptions -&gt; unit" Usage="System.Text.Json.JsonSerializer.Serialize (writer, value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a6deb-228">Der Typ des zu serialisierenden Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-228">The type of the value to serialize.</span></span></typeparam>
        <param name="writer"><span data-ttu-id="a6deb-229">Ein JSON-Writer, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-229">A JSON writer to write to.</span></span></param>
        <param name="value"><span data-ttu-id="a6deb-230">Der zu konvertierende und zu schreibende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6deb-230">The value to convert and write.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-231">Optionen zum Steuern des Serialisierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a6deb-231">Options to control serialization behavior.</span></span></param>
        <summary><span data-ttu-id="a6deb-232">Schreibt die JSON-Darstellung eines Typs, der von einem generischen Typparameter angegeben wird, in den bereitgestellten Writer.</span><span class="sxs-lookup"><span data-stu-id="a6deb-232">Writes the JSON representation of a type specified by a generic type parameter to the provided writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="a6deb-233">Der <xref:System.Text.Json.JsonWriterOptions> , der zum Erstellen der Instanz <xref:System.Text.Json.Utf8JsonWriter> von verwendet wird, hat <xref:System.Text.Json.JsonSerializerOptions> Vorrang vor dem, wenn Sie einen Konflikt verursachen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-233">The <xref:System.Text.Json.JsonWriterOptions> used to create the instance of the <xref:System.Text.Json.Utf8JsonWriter> take precedence over the <xref:System.Text.Json.JsonSerializerOptions> when they conflict.</span></span> <span data-ttu-id="a6deb-234">Daher werden, und<xref:System.Text.Json.JsonWriterOptions.Encoder?displayProperty=nameWithType> beim Schreiben verwendet. <xref:System.Text.Json.JsonWriterOptions.Indented?displayProperty=nameWithType> <xref:System.Text.Json.JsonWriterOptions.SkipValidation?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="a6deb-234">Hence, <xref:System.Text.Json.JsonWriterOptions.Indented?displayProperty=nameWithType>, <xref:System.Text.Json.JsonWriterOptions.SkipValidation?displayProperty=nameWithType>, and <xref:System.Text.Json.JsonWriterOptions.Encoder?displayProperty=nameWithType> are used while writing.</span></span>
               
          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SerializeAsync (System.IO.Stream utf8Json, object value, Type inputType, System.Text.Json.JsonSerializerOptions options = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SerializeAsync(class System.IO.Stream utf8Json, object value, class System.Type inputType, class System.Text.Json.JsonSerializerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.SerializeAsync(System.IO.Stream,System.Object,System.Type,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member SerializeAsync : System.IO.Stream * obj * Type * System.Text.Json.JsonSerializerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="System.Text.Json.JsonSerializer.SerializeAsync (utf8Json, value, inputType, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="inputType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="a6deb-235">Der UTF-8-Datenstrom, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-235">The UTF-8 stream to write to.</span></span></param>
        <param name="value"><span data-ttu-id="a6deb-236">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6deb-236">The value to convert.</span></span></param>
        <param name="inputType"><span data-ttu-id="a6deb-237">Der Typ des <paramref name="value" />-Elements, das konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-237">The type of the <paramref name="value" /> to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-238">Optionen zum Steuern des Serialisierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a6deb-238">Options to control serialization behavior.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a6deb-239">Ein Token, das verwendet werden kann, um den Schreibvorgang abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-239">A token that may be used to cancel the write operation.</span></span></param>
        <summary><span data-ttu-id="a6deb-240">Konvertiert den Wert eines angegebenen Typs asynchron in UTF-8-codierten JSON-Text und schreibt ihn in den angegebenen Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="a6deb-240">Asynchronously converts the value of a specified type to UTF-8 encoded JSON text and writes it to the specified stream.</span></span></summary>
        <returns><span data-ttu-id="a6deb-241">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="a6deb-241">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeAsync&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task SerializeAsync&lt;TValue&gt; (System.IO.Stream utf8Json, TValue value, System.Text.Json.JsonSerializerOptions options = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task SerializeAsync&lt;TValue&gt;(class System.IO.Stream utf8Json, !!TValue value, class System.Text.Json.JsonSerializerOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.SerializeAsync``1(System.IO.Stream,``0,System.Text.Json.JsonSerializerOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member SerializeAsync : System.IO.Stream * 'Value * System.Text.Json.JsonSerializerOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="System.Text.Json.JsonSerializer.SerializeAsync (utf8Json, value, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a6deb-242">Der Typ des zu serialisierenden Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-242">The type of the value to serialize.</span></span></typeparam>
        <param name="utf8Json"><span data-ttu-id="a6deb-243">Der UTF-8-Datenstrom, in den geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-243">The UTF-8 stream to write to.</span></span></param>
        <param name="value"><span data-ttu-id="a6deb-244">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6deb-244">The value to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-245">Optionen zum Steuern des Serialisierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a6deb-245">Options to control serialization behavior.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="a6deb-246">Ein Token, das verwendet werden kann, um den Schreibvorgang abzubrechen.</span><span class="sxs-lookup"><span data-stu-id="a6deb-246">A token that may be used to cancel the write operation.</span></span></param>
        <summary><span data-ttu-id="a6deb-247">Konvertiert einen Wert eines Typs, der durch einen generischen Typparameter angegeben wird, asynchron in UTF-8-codierten JSON-Text und schreibt ihn in einen Datenstrom.</span><span class="sxs-lookup"><span data-stu-id="a6deb-247">Asynchronously converts a value of a type specified by a generic type parametaer to UTF-8 encoded JSON text and writes it to a stream.</span></span></summary>
        <returns><span data-ttu-id="a6deb-248">Eine Aufgabe, die den asynchronen Schreibvorgang darstellt.</span><span class="sxs-lookup"><span data-stu-id="a6deb-248">A task that represents the asynchronous write operation.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToUtf8Bytes">
      <MemberSignature Language="C#" Value="public static byte[] SerializeToUtf8Bytes (object value, Type inputType, System.Text.Json.JsonSerializerOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] SerializeToUtf8Bytes(object value, class System.Type inputType, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes(System.Object,System.Type,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SerializeToUtf8Bytes (value As Object, inputType As Type, Optional options As JsonSerializerOptions = null) As Byte()" />
      <MemberSignature Language="F#" Value="static member SerializeToUtf8Bytes : obj * Type * System.Text.Json.JsonSerializerOptions -&gt; byte[]" Usage="System.Text.Json.JsonSerializer.SerializeToUtf8Bytes (value, inputType, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="inputType" Type="System.Type" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="a6deb-249">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6deb-249">The value to convert.</span></span></param>
        <param name="inputType"><span data-ttu-id="a6deb-250">Der Typ des <paramref name="value" />-Elements, das konvertiert werden soll.</span><span class="sxs-lookup"><span data-stu-id="a6deb-250">The type of the <paramref name="value" /> to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-251">Optionen zum Steuern des Konvertierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a6deb-251">Options to control the conversion behavior.</span></span></param>
        <summary><span data-ttu-id="a6deb-252">Konvertiert einen Wert des angegebenen Typs in eine JSON-Zeichenfolge, die als UTF-8-Bytes codiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6deb-252">Converts a value of the specified type into a JSON string, encoded as UTF-8 bytes.</span></span></summary>
        <returns><span data-ttu-id="a6deb-253">Eine JSON-Zeichenfolgendarstellung des Werts, die als UTF-8-Bytes codiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6deb-253">A JSON string representation of the value, encoded as UTF-8 bytes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializeToUtf8Bytes&lt;TValue&gt;">
      <MemberSignature Language="C#" Value="public static byte[] SerializeToUtf8Bytes&lt;TValue&gt; (TValue value, System.Text.Json.JsonSerializerOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int8[] SerializeToUtf8Bytes&lt;TValue&gt;(!!TValue value, class System.Text.Json.JsonSerializerOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonSerializer.SerializeToUtf8Bytes``1(``0,System.Text.Json.JsonSerializerOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function SerializeToUtf8Bytes(Of TValue) (value As TValue, Optional options As JsonSerializerOptions = null) As Byte()" />
      <MemberSignature Language="F#" Value="static member SerializeToUtf8Bytes : 'Value * System.Text.Json.JsonSerializerOptions -&gt; byte[]" Usage="System.Text.Json.JsonSerializer.SerializeToUtf8Bytes (value, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="value" Type="TValue" />
        <Parameter Name="options" Type="System.Text.Json.JsonSerializerOptions" />
      </Parameters>
      <Docs>
        <typeparam name="TValue"><span data-ttu-id="a6deb-254">Der Typ des Werts.</span><span class="sxs-lookup"><span data-stu-id="a6deb-254">The type of the value.</span></span></typeparam>
        <param name="value"><span data-ttu-id="a6deb-255">Der zu konvertierende Wert.</span><span class="sxs-lookup"><span data-stu-id="a6deb-255">The value to convert.</span></span></param>
        <param name="options"><span data-ttu-id="a6deb-256">Optionen zum Steuern des Konvertierungsverhaltens.</span><span class="sxs-lookup"><span data-stu-id="a6deb-256">Options to control the conversion behavior.</span></span></param>
        <summary><span data-ttu-id="a6deb-257">Konvertiert den Wert eines Typs, der durch einen generischen Typparameter angegeben wird, in eine als UTF-8-Bytes codierte JSON-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="a6deb-257">Converts the value of a type specifed by a generic type parameter into a JSON string, encoded as UTF-8 bytes.</span></span></summary>
        <returns><span data-ttu-id="a6deb-258">Eine JSON-Zeichenfolgendarstellung des Werts, die als UTF-8-Bytes codiert ist.</span><span class="sxs-lookup"><span data-stu-id="a6deb-258">A JSON string representation of the value, encoded as UTF-8 bytes.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
