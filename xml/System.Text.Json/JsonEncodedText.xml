<Type Name="JsonEncodedText" FullName="System.Text.Json.JsonEncodedText">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c4b1d884a97ce55e2b5b6c5d27b02a42eecfbfb7" /><Meta Name="ms.sourcegitcommit" Value="b0947fed0227b6b2e292d7efb43705b488b130aa" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="04/29/2020" /><Meta Name="ms.locfileid" Value="82406163" /></Metadata><TypeSignature Language="C#" Value="public struct JsonEncodedText : IEquatable&lt;System.Text.Json.JsonEncodedText&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonEncodedText extends System.ValueType implements class System.IEquatable`1&lt;valuetype System.Text.Json.JsonEncodedText&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonEncodedText" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonEncodedText&#xA;Implements IEquatable(Of JsonEncodedText)" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonEncodedText : IEquatable&lt;System::Text::Json::JsonEncodedText&gt;" />
  <TypeSignature Language="F#" Value="type JsonEncodedText = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
    <AssemblyVersion>5.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Text.Json.JsonEncodedText&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="c7446-101">Stellt Methoden zum Transformieren von UTF-8- oder UTF-16-codiertem Text in eine Form bereit, die für JSON geeignet ist.</span><span class="sxs-lookup"><span data-stu-id="c7446-101">Provides methods to transform UTF-8 or UTF-16 encoded text into a form that is suitable for JSON.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c7446-102">Dieser Typ kann zum Zwischenspeichern und speichern bekannter Zeichen folgen verwendet werden, die für das Schreiben von JSON im Voraus verwendet werden, indem diese vorab codiert werden.</span><span class="sxs-lookup"><span data-stu-id="c7446-102">This type can be used to cache and store known strings used for writing JSON ahead of time by pre-encoding them up front.</span></span>

            ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonEncodedText Encode (ReadOnlySpan&lt;byte&gt; utf8Value, System.Text.Encodings.Web.JavaScriptEncoder encoder = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Json.JsonEncodedText Encode(valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; utf8Value, class System.Text.Encodings.Web.JavaScriptEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Encode(System.ReadOnlySpan{System.Byte},System.Text.Encodings.Web.JavaScriptEncoder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (utf8Value As ReadOnlySpan(Of Byte), Optional encoder As JavaScriptEncoder = null) As JsonEncodedText" />
      <MemberSignature Language="F#" Value="static member Encode : ReadOnlySpan&lt;byte&gt; * System.Text.Encodings.Web.JavaScriptEncoder -&gt; System.Text.Json.JsonEncodedText" Usage="System.Text.Json.JsonEncodedText.Encode (utf8Value, encoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonEncodedText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Value" Type="System.ReadOnlySpan&lt;System.Byte&gt;" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.JavaScriptEncoder" />
      </Parameters>
      <Docs>
        <param name="utf8Value"><span data-ttu-id="c7446-103">Der codierte UTF-8-Text, der in codierten JSON-Text konvertiert werden soll</span><span class="sxs-lookup"><span data-stu-id="c7446-103">The UTF-8 encoded text to convert to JSON encoded text.</span></span></param>
        <param name="encoder"><span data-ttu-id="c7446-104">Der Encoder, der beim Versehen von Zeichenfolgen mit Escapezeichen verwendet wird, oder <see langword="null" />, um den Standardencoder zu verwenden</span><span class="sxs-lookup"><span data-stu-id="c7446-104">The encoder to use when escaping the string, or <see langword="null" /> to use the default encoder.</span></span></param>
        <summary><span data-ttu-id="c7446-105">Codiert einen UTF-8-Textwert als JSON-Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="c7446-105">Encodes a UTF-8 text value as a JSON string.</span></span></summary>
        <returns><span data-ttu-id="c7446-106">Der codierte JSON-Text</span><span class="sxs-lookup"><span data-stu-id="c7446-106">The encoded JSON text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7446-107"><paramref name="utf8Value" /> ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="c7446-107"><paramref name="utf8Value" /> is too large.</span></span>

<span data-ttu-id="c7446-108">- oder -</span><span class="sxs-lookup"><span data-stu-id="c7446-108">-or-</span></span>

<span data-ttu-id="c7446-109"><paramref name="utf8Value" /> enthält ungültige UTF-8-Bytes</span><span class="sxs-lookup"><span data-stu-id="c7446-109"><paramref name="utf8Value" /> contains invalid UTF-8 bytes.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonEncodedText Encode (ReadOnlySpan&lt;char&gt; value, System.Text.Encodings.Web.JavaScriptEncoder encoder = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Json.JsonEncodedText Encode(valuetype System.ReadOnlySpan`1&lt;char&gt; value, class System.Text.Encodings.Web.JavaScriptEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Encode(System.ReadOnlySpan{System.Char},System.Text.Encodings.Web.JavaScriptEncoder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (value As ReadOnlySpan(Of Char), Optional encoder As JavaScriptEncoder = null) As JsonEncodedText" />
      <MemberSignature Language="F#" Value="static member Encode : ReadOnlySpan&lt;char&gt; * System.Text.Encodings.Web.JavaScriptEncoder -&gt; System.Text.Json.JsonEncodedText" Usage="System.Text.Json.JsonEncodedText.Encode (value, encoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonEncodedText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.JavaScriptEncoder" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c7446-110">Der in codierten JSON-Text zu konvertierende Wert</span><span class="sxs-lookup"><span data-stu-id="c7446-110">The value to convert to JSON encoded text.</span></span></param>
        <param name="encoder"><span data-ttu-id="c7446-111">Der Encoder, der beim Versehen von Zeichenfolgen mit Escapezeichen verwendet wird, oder <see langword="null" />, um den Standardencoder zu verwenden</span><span class="sxs-lookup"><span data-stu-id="c7446-111">The encoder to use when escaping the string, or <see langword="null" /> to use the default encoder.</span></span></param>
        <summary><span data-ttu-id="c7446-112">Codiert den angegebenen Textwert als JSON-Zeichenfolge</span><span class="sxs-lookup"><span data-stu-id="c7446-112">Encodes a specified text value as a JSON string.</span></span></summary>
        <returns><span data-ttu-id="c7446-113">Der codierte JSON-Text</span><span class="sxs-lookup"><span data-stu-id="c7446-113">The encoded JSON text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7446-114"><paramref name="value" /> ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="c7446-114"><paramref name="value" /> is too large.</span></span>

<span data-ttu-id="c7446-115">- oder -</span><span class="sxs-lookup"><span data-stu-id="c7446-115">-or-</span></span>

<span data-ttu-id="c7446-116"><paramref name="value" /> enthält ungültige UTF-16-Zeichen</span><span class="sxs-lookup"><span data-stu-id="c7446-116"><paramref name="value" /> contains invalid UTF-16 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Encode">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonEncodedText Encode (string value, System.Text.Encodings.Web.JavaScriptEncoder encoder = default);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Text.Json.JsonEncodedText Encode(string value, class System.Text.Encodings.Web.JavaScriptEncoder encoder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Encode(System.String,System.Text.Encodings.Web.JavaScriptEncoder)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Encode (value As String, Optional encoder As JavaScriptEncoder = null) As JsonEncodedText" />
      <MemberSignature Language="F#" Value="static member Encode : string * System.Text.Encodings.Web.JavaScriptEncoder -&gt; System.Text.Json.JsonEncodedText" Usage="System.Text.Json.JsonEncodedText.Encode (value, encoder)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonEncodedText</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="encoder" Type="System.Text.Encodings.Web.JavaScriptEncoder" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="c7446-117">Der in codierten JSON-Text zu konvertierende Wert</span><span class="sxs-lookup"><span data-stu-id="c7446-117">The value to convert to JSON encoded text.</span></span></param>
        <param name="encoder"><span data-ttu-id="c7446-118">Der Encoder, der beim Versehen von Zeichenfolgen mit Escapezeichen verwendet wird, oder <see langword="null" />, um den Standardencoder zu verwenden</span><span class="sxs-lookup"><span data-stu-id="c7446-118">The encoder to use when escaping the string, or <see langword="null" /> to use the default encoder.</span></span></param>
        <summary><span data-ttu-id="c7446-119">Codiert den Textwert der Zeichenfolge als JSON-Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c7446-119">Encodes the string text value as a JSON string.</span></span></summary>
        <returns><span data-ttu-id="c7446-120">Der codierte JSON-Text</span><span class="sxs-lookup"><span data-stu-id="c7446-120">The encoded JSON text.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="c7446-121"><paramref name="value" /> ist <see langword="null" /></span><span class="sxs-lookup"><span data-stu-id="c7446-121"><paramref name="value" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="c7446-122"><paramref name="value" /> ist zu groß.</span><span class="sxs-lookup"><span data-stu-id="c7446-122"><paramref name="value" /> is too large.</span></span>

<span data-ttu-id="c7446-123">- oder -</span><span class="sxs-lookup"><span data-stu-id="c7446-123">-or-</span></span>

<span data-ttu-id="c7446-124"><paramref name="value" /> enthält ungültige UTF-16-Zeichen</span><span class="sxs-lookup"><span data-stu-id="c7446-124"><paramref name="value" /> contains invalid UTF-16 characters.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="EncodedUtf8Bytes">
      <MemberSignature Language="C#" Value="public ReadOnlySpan&lt;byte&gt; EncodedUtf8Bytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ReadOnlySpan`1&lt;unsigned int8&gt; EncodedUtf8Bytes" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonEncodedText.EncodedUtf8Bytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EncodedUtf8Bytes As ReadOnlySpan(Of Byte)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property ReadOnlySpan&lt;System::Byte&gt; EncodedUtf8Bytes { ReadOnlySpan&lt;System::Byte&gt; get(); };" />
      <MemberSignature Language="F#" Value="member this.EncodedUtf8Bytes : ReadOnlySpan&lt;byte&gt;" Usage="System.Text.Json.JsonEncodedText.EncodedUtf8Bytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ReadOnlySpan&lt;System.Byte&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c7446-125">Ruft die UTF-8-codierte Darstellung des vorcodierten JSON-Texts ab.</span><span class="sxs-lookup"><span data-stu-id="c7446-125">Gets the UTF-8 encoded representation of the pre-encoded JSON text.</span></span></summary>
        <value><span data-ttu-id="c7446-126">Die UTF-8-codierte Darstellung des vorcodierten JSON-Texts.</span><span class="sxs-lookup"><span data-stu-id="c7446-126">The UTF-8 encoded representation of the pre-encoded JSON text.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="jsonEncodedText.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="c7446-127">Das mit dieser Instanz zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="c7446-127">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="c7446-128">Bestimmt, ob diese Instanz und ein angegebenes Objekt, das ebenfalls eine <see cref="T:System.Text.Json.JsonEncodedText" />-Instanz sein muss, denselben Wert haben.</span><span class="sxs-lookup"><span data-stu-id="c7446-128">Determines whether this instance and a specified object, which must also be a <see cref="T:System.Text.Json.JsonEncodedText" /> instance, have the same value.</span></span></summary>
        <returns><span data-ttu-id="c7446-129"><see langword="true" />, wenn die angegebene Instanz und <paramref name="obj" /> gleich sind, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c7446-129"><see langword="true" /> if the current instance and <paramref name="obj" /> are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c7446-130">Wenn `obj` gleich `null` ist, gibt die Methode `false` zurück.</span><span class="sxs-lookup"><span data-stu-id="c7446-130">If `obj` is `null`, the method returns `false`.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Text.Json.JsonEncodedText other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(valuetype System.Text.Json.JsonEncodedText other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.Equals(System.Text.Json.JsonEncodedText)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As JsonEncodedText) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Text::Json::JsonEncodedText other);" />
      <MemberSignature Language="F#" Value="override this.Equals : System.Text.Json.JsonEncodedText -&gt; bool" Usage="jsonEncodedText.Equals other" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Text.Json.JsonEncodedText" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="c7446-131">Das mit dieser Instanz zu vergleichende Objekt.</span><span class="sxs-lookup"><span data-stu-id="c7446-131">The object to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="c7446-132">Bestimmt, ob diese Instanz und eine andere angegebene <see cref="T:System.Text.Json.JsonEncodedText" />-Instanz denselben Wert haben.</span><span class="sxs-lookup"><span data-stu-id="c7446-132">Determines whether this instance and another specified <see cref="T:System.Text.Json.JsonEncodedText" /> instance have the same value.</span></span></summary>
        <returns><span data-ttu-id="c7446-133"><see langword="true" />, wenn diese Instanz und <paramref name="other" /> den gleichen Wert haben, andernfalls <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="c7446-133"><see langword="true" /> if this instance and <paramref name="other" /> have the same value; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c7446-134">Standard Instanzen von <xref:System.Text.Json.JsonEncodedText> werden als gleich behandelt.</span><span class="sxs-lookup"><span data-stu-id="c7446-134">Default instances of <xref:System.Text.Json.JsonEncodedText> are treated as equal.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="jsonEncodedText.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7446-135">Gibt den Hashcode für diesen <see cref="T:System.Text.Json.JsonEncodedText" /> zurück.</span><span class="sxs-lookup"><span data-stu-id="c7446-135">Returns the hash code for this <see cref="T:System.Text.Json.JsonEncodedText" />.</span></span></summary>
        <returns><span data-ttu-id="c7446-136">Der Hashcode für diese Instanz.</span><span class="sxs-lookup"><span data-stu-id="c7446-136">The hash code for this instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c7446-137">Diese Methode gibt 0 für eine Standard Instanz von <xref:System.Text.Json.JsonEncodedText>zurück.</span><span class="sxs-lookup"><span data-stu-id="c7446-137">This method returns 0 on a default instance of <xref:System.Text.Json.JsonEncodedText>.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonEncodedText.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="jsonEncodedText.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
        <AssemblyVersion>5.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c7446-138">Konvertiert den Wert dieser Instanz in einen <see cref="T:System.String" />.</span><span class="sxs-lookup"><span data-stu-id="c7446-138">Converts the value of this instance to a <see cref="T:System.String" />.</span></span></summary>
        <returns><span data-ttu-id="c7446-139">Die zugrunde liegende UTF-16-codierte Zeichenfolge.</span><span class="sxs-lookup"><span data-stu-id="c7446-139">The underlying UTF-16 encoded string.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="c7446-140">Diese Methode gibt eine leere Zeichenfolge für eine Standard Instanz von <xref:System.Text.Json.JsonEncodedText>zurück.</span><span class="sxs-lookup"><span data-stu-id="c7446-140">This method returns an empty string on a default instance of <xref:System.Text.Json.JsonEncodedText>.</span></span>

            ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
