<Type Name="JsonDocumentOptions" FullName="System.Text.Json.JsonDocumentOptions">
  <Metadata><Meta Name="ms.openlocfilehash" Value="982061f4228e233e5aa1a4661a6dc716c0bf15bc" /><Meta Name="ms.sourcegitcommit" Value="96c669ea9a8f9e1197bf570e5eb51a3c7a913f39" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="09/10/2019" /><Meta Name="ms.locfileid" Value="70875183" /></Metadata><TypeSignature Language="C#" Value="public struct JsonDocumentOptions" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit JsonDocumentOptions extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonDocumentOptions" />
  <TypeSignature Language="VB.NET" Value="Public Structure JsonDocumentOptions" />
  <TypeSignature Language="C++ CLI" Value="public value class JsonDocumentOptions" />
  <TypeSignature Language="F#" Value="type JsonDocumentOptions = struct" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="72166-101">Bietet dem Benutzer die Möglichkeit, benutzerdefiniertes Verhalten beim Analysieren von JSON zum Erstellen von <see cref="T:System.Text.Json.JsonDocument" /> zu definieren.</span><span class="sxs-lookup"><span data-stu-id="72166-101">Provides the ability for the user to define custom behavior when parsing JSON to create a <see cref="T:System.Text.Json.JsonDocument" />.</span></span></summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowTrailingCommas">
      <MemberSignature Language="C#" Value="public bool AllowTrailingCommas { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowTrailingCommas" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonDocumentOptions.AllowTrailingCommas" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowTrailingCommas As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowTrailingCommas { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowTrailingCommas : bool with get, set" Usage="System.Text.Json.JsonDocumentOptions.AllowTrailingCommas" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72166-102">Ruft einen Wert ab, der angibt, ob ein zusätzliches Komma am Ende einer Liste von JSON-Werten in einem Objekt oder Array in der gelesenen JSON-Nutzlast zulässig ist (und ignoriert wird), oder legt diesen Wert fest.</span><span class="sxs-lookup"><span data-stu-id="72166-102">Gets or sets a value that indicates whether an extra comma at the end of a list of JSON values in an object or array is allowed (and ignored) within the JSON payload being read.</span></span></summary>
        <value><span data-ttu-id="72166-103"><see langword="true" />, wenn ein zusätzliches Komma am Ende einer Liste von JSON-Werten in einem Objekt oder Array zulässig ist. <see langword="false" />andernfalls.</span><span class="sxs-lookup"><span data-stu-id="72166-103"><see langword="true" /> if an extra comma at the end of a list of JSON values in an object or array is allowed; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="72166-104">Der Standardwert ist<see langword="false" /></span><span class="sxs-lookup"><span data-stu-id="72166-104">Default is <see langword="false" /></span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="72166-105">Standardmäßig `AllowTrailingCommas` ist auf `false`festgelegt, und eine <xref:System.Text.Json.JsonException> wird ausgelöst, wenn ein nach gestelltes Komma auftritt.</span><span class="sxs-lookup"><span data-stu-id="72166-105">By default, `AllowTrailingCommas` is set to `false`, and a <xref:System.Text.Json.JsonException> is thrown if a trailing comma is encountered.</span></span>

          ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommentHandling">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonCommentHandling CommentHandling { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonCommentHandling CommentHandling" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonDocumentOptions.CommentHandling" />
      <MemberSignature Language="VB.NET" Value="Public Property CommentHandling As JsonCommentHandling" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonCommentHandling CommentHandling { System::Text::Json::JsonCommentHandling get(); void set(System::Text::Json::JsonCommentHandling value); };" />
      <MemberSignature Language="F#" Value="member this.CommentHandling : System.Text.Json.JsonCommentHandling with get, set" Usage="System.Text.Json.JsonDocumentOptions.CommentHandling" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonCommentHandling</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72166-106">Ruft einen Wert ab, der bestimmt, wie <see cref="T:System.Text.Json.JsonDocument" /> beim Durchlesen der JSON-Daten Kommentare behandelt, oder legt diesen fest.</span><span class="sxs-lookup"><span data-stu-id="72166-106">Gets or sets a value that determines how the <see cref="T:System.Text.Json.JsonDocument" /> handles comments when reading through the JSON data.</span></span></summary>
        <value><span data-ttu-id="72166-107">Einer der Enumerationswerte, der angibt, wie Kommentare behandelt werden.</span><span class="sxs-lookup"><span data-stu-id="72166-107">One of the enumeration values that indicates how comments are handled.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="72166-108">Standardmäßig wird eine <xref:System.Text.Json.JsonException> ausgelöst, wenn ein Kommentar gefunden wird.</span><span class="sxs-lookup"><span data-stu-id="72166-108">By default, a <xref:System.Text.Json.JsonException> is thrown if a comment is encountered.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="72166-109">Die Enumeration für die Kommentarbehandlung wird auf einen Wert festgelegt, der nicht unterstützt wird (oder nicht innerhalb des <see cref="T:System.Text.Json.JsonCommentHandling" />-Enumeratiosbereichs liegt).</span><span class="sxs-lookup"><span data-stu-id="72166-109">The comment handling enum is set to a value that is not supported (or not within the <see cref="T:System.Text.Json.JsonCommentHandling" /> enum range).</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="MaxDepth">
      <MemberSignature Language="C#" Value="public int MaxDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDepth" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonDocumentOptions.MaxDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDepth : int with get, set" Usage="System.Text.Json.JsonDocumentOptions.MaxDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.CompilerServices.IsReadOnly</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="72166-110">Ruft die beim Analysieren von JSON-Daten maximal zulässige Tiefe ab oder legt sie fest, wobei standardmäßig (d.h. 0 ) eine maximale Tiefe von 64 angegeben wird.</span><span class="sxs-lookup"><span data-stu-id="72166-110">Gets or sets the maximum depth allowed when parsing JSON data, with the default (that is, 0) indicating a maximum depth of 64.</span></span></summary>
        <value><span data-ttu-id="72166-111">Die maximal zulässige Tiefe beim Auswerten von JSON-Daten.</span><span class="sxs-lookup"><span data-stu-id="72166-111">The maximum depth allowed when parsing JSON data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks

<span data-ttu-id="72166-112">Wenn Sie diese Tiefe überschreiten, wird <xref:System.Text.Json.JsonException>eine ausgelöst.</span><span class="sxs-lookup"><span data-stu-id="72166-112">Parsing past this depth will throw a <xref:System.Text.Json.JsonException>.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="72166-113">Die maximale Tiefe wird auf einen negativen Wert festgelegt.</span><span class="sxs-lookup"><span data-stu-id="72166-113">The max depth is set to a negative value.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
