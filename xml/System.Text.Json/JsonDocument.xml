<Type Name="JsonDocument" FullName="System.Text.Json.JsonDocument">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9266046f79bafa7c727434fac714bcf542247abb" /><Meta Name="ms.sourcegitcommit" Value="385ff23cc00fe9aa1c93460c62603b45c2041d0b" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="de-DE" /><Meta Name="ms.lasthandoff" Value="11/22/2019" /><Meta Name="ms.locfileid" Value="74388242" /></Metadata><TypeSignature Language="C#" Value="public sealed class JsonDocument : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit JsonDocument extends System.Object implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Text.Json.JsonDocument" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class JsonDocument&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class JsonDocument sealed : IDisposable" />
  <TypeSignature Language="F#" Value="type JsonDocument = class&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Text.Json</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="17268-101">Stellt einen Mechanismus zum Untersuchen des strukturellen Inhalts eines JSON-Werts ohne automatisches Instanziieren von Datenwerten bereit.</span><span class="sxs-lookup"><span data-stu-id="17268-101">Provides a mechanism for examining the structural content of a JSON value without automatically instantiating data values.</span></span></summary>
    <remarks>
      <format><![CDATA[
      
<span data-ttu-id="17268-102">Diese Klasse nutzt Ressourcen aus in einem Pool zusammen gespeichertem Arbeitsspeicher, um die Auswirkungen der Garbage Collector (GC) in Szenarien mit hoher Auslastung zu minimieren.</span><span class="sxs-lookup"><span data-stu-id="17268-102">This class utilizes resources from pooled memory to minimize the impact of the garbage collector (GC) in high-usage scenarios.</span></span> <span data-ttu-id="17268-103">Wenn Sie dieses Objekt nicht ordnungsgemäß verwerfen, wird der Arbeitsspeicher nicht an den Pool zurückgegeben, wodurch die Auswirkungen der GC auf verschiedene Teile des Frameworks erhöht werden.</span><span class="sxs-lookup"><span data-stu-id="17268-103">Failure to properly dispose this object will result in the memory not being returned to the pool, which will increase GC impact across various parts of the framework.</span></span>

<span data-ttu-id="17268-104">Weitere Informationen finden Sie unter Gewusst [wie: Serialisieren und Deserialisieren von JSON](~/docs/standard/serialization/system-text-json-how-to.md#utf8jsonreader-utf8jsonwriter-and-jsondocument).</span><span class="sxs-lookup"><span data-stu-id="17268-104">For more information, see [How to serialize and deserialize JSON](~/docs/standard/serialization/system-text-json-how-to.md#utf8jsonreader-utf8jsonwriter-and-jsondocument).</span></span>

              
      ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="public void Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Dispose" />
      <MemberSignature Language="VB.NET" Value="Public Sub Dispose ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Dispose();" />
      <MemberSignature Language="F#" Value="abstract member Dispose : unit -&gt; unit&#xA;override this.Dispose : unit -&gt; unit" Usage="jsonDocument.Dispose " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="17268-105">Gibt die von dieser <see cref="T:System.Text.Json.JsonDocument" />-Instanz verwendeten Ressourcen frei.</span><span class="sxs-lookup"><span data-stu-id="17268-105">Releases the resources used by this <see cref="T:System.Text.Json.JsonDocument" /> instance.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (System.Buffers.ReadOnlySequence&lt;byte&gt; utf8Json, System.Text.Json.JsonDocumentOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(valuetype System.Buffers.ReadOnlySequence`1&lt;unsigned int8&gt; utf8Json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.Buffers.ReadOnlySequence{System.Byte},System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (utf8Json As ReadOnlySequence(Of Byte), Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : System.Buffers.ReadOnlySequence&lt;byte&gt; * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (utf8Json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.Buffers.ReadOnlySequence&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="17268-106">Ruft den zu analysierenden JSON-Text ab.</span><span class="sxs-lookup"><span data-stu-id="17268-106">The JSON text to parse.</span></span></param>
        <param name="options"><span data-ttu-id="17268-107">Optionen zum Steuern des Readerverhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="17268-107">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="17268-108">Analysiert eine Sequenz als UTF-8-codierten Text, der einen einzelnen JSON-Bytewert in einem JsonDocument darstellt.</span><span class="sxs-lookup"><span data-stu-id="17268-108">Parses a sequence as UTF-8-encoded text representing a single JSON byte value into a JsonDocument.</span></span></summary>
        <returns><span data-ttu-id="17268-109">Eine JsonDocument-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="17268-109">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="17268-110">Der <xref:System.Buffers.ReadOnlySequence%601> kann für die gesamte Lebensdauer des jsondocument-Objekts verwendet werden, und der Aufrufer muss sicherstellen, dass die darin enthaltenen Daten während der Objekt Lebensdauer nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="17268-110">The <xref:System.Buffers.ReadOnlySequence%601> may be used for the entire lifetime of the JsonDocument object, and the caller must ensure that the data therein does not change during the object lifetime.</span></span>
<span data-ttu-id="17268-111">Da die Eingabe als Text betrachtet wird, darf eine UTF-8-Byte-Reihenfolge Markierung (BOM) nicht vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="17268-111">Because the input is considered to be text, a UTF-8 Byte-Order-Mark (BOM) must not be present.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="17268-112"><paramref name="utf8Json" /> stellt keinen gültigen einzelnen JSON-Wert dar.</span><span class="sxs-lookup"><span data-stu-id="17268-112"><paramref name="utf8Json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17268-113"><paramref name="readerOptions" /> enthält nicht unterstützte Optionen.</span><span class="sxs-lookup"><span data-stu-id="17268-113"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (System.IO.Stream utf8Json, System.Text.Json.JsonDocumentOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(class System.IO.Stream utf8Json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.IO.Stream,System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (utf8Json As Stream, Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : System.IO.Stream * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (utf8Json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="17268-114">Die zu analysierenden JSON-Daten.</span><span class="sxs-lookup"><span data-stu-id="17268-114">The JSON data to parse.</span></span></param>
        <param name="options"><span data-ttu-id="17268-115">Optionen zum Steuern des Readerverhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="17268-115">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="17268-116">Analysiert einen <see cref="T:System.IO.Stream" /> als UTF-8-codierte Daten, die einen einzelnen JSON-Wert in einem JsonDocument darstellen.</span><span class="sxs-lookup"><span data-stu-id="17268-116">Parses a <see cref="T:System.IO.Stream" /> as UTF-8-encoded data representing a single JSON value into a JsonDocument.</span></span> <span data-ttu-id="17268-117">Der Stream wird vollständig gelesen.</span><span class="sxs-lookup"><span data-stu-id="17268-117">The stream is read to completion.</span></span></summary>
        <returns><span data-ttu-id="17268-118">Eine JsonDocument-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="17268-118">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="17268-119"><paramref name="utf8Json" /> stellt keinen gültigen einzelnen JSON-Wert dar.</span><span class="sxs-lookup"><span data-stu-id="17268-119"><paramref name="utf8Json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17268-120"><paramref name="readerOptions" /> enthält nicht unterstützte Optionen.</span><span class="sxs-lookup"><span data-stu-id="17268-120"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (ReadOnlyMemory&lt;byte&gt; utf8Json, System.Text.Json.JsonDocumentOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(valuetype System.ReadOnlyMemory`1&lt;unsigned int8&gt; utf8Json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.ReadOnlyMemory{System.Byte},System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (utf8Json As ReadOnlyMemory(Of Byte), Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlyMemory&lt;byte&gt; * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (utf8Json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.ReadOnlyMemory&lt;System.Byte&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="17268-121">Ruft den zu analysierenden JSON-Text ab.</span><span class="sxs-lookup"><span data-stu-id="17268-121">The JSON text to parse.</span></span></param>
        <param name="options"><span data-ttu-id="17268-122">Optionen zum Steuern des Readerverhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="17268-122">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="17268-123">Analysiert Arbeitsspeicher als UTF-8-codierten Text, der einen einzelnen JSON-Bytewert in einem JsonDocument darstellt.</span><span class="sxs-lookup"><span data-stu-id="17268-123">Parses memory as UTF-8-encoded text representing a single JSON byte value into a JsonDocument.</span></span></summary>
        <returns><span data-ttu-id="17268-124">Eine JsonDocument-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="17268-124">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>
          <format><![CDATA[

<span data-ttu-id="17268-125">Der <xref:System.ReadOnlyMemory%601>-Wert wird für die gesamte Lebensdauer des jsondocument-Objekts verwendet, und der Aufrufer muss sicherstellen, dass die darin enthaltenen Daten während der Objekt Lebensdauer nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="17268-125">The <xref:System.ReadOnlyMemory%601> value will be used for the entire lifetime of the JsonDocument object, and the caller must ensure that the data therein does not change during the object lifetime.</span></span>

<span data-ttu-id="17268-126">Da die Eingabe als Text betrachtet wird, darf eine UTF-8-Byte-Reihenfolge Markierung (BOM) nicht vorhanden sein.</span><span class="sxs-lookup"><span data-stu-id="17268-126">Because the input is considered to be text, a UTF-8 Byte-Order-Mark (BOM) must not be present.</span></span>
          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="17268-127"><paramref name="utf8Json" /> stellt keinen gültigen einzelnen JSON-Wert dar.</span><span class="sxs-lookup"><span data-stu-id="17268-127"><paramref name="utf8Json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17268-128"><paramref name="readerOptions" /> enthält nicht unterstützte Optionen.</span><span class="sxs-lookup"><span data-stu-id="17268-128"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (ReadOnlyMemory&lt;char&gt; json, System.Text.Json.JsonDocumentOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(valuetype System.ReadOnlyMemory`1&lt;char&gt; json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.ReadOnlyMemory{System.Char},System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (json As ReadOnlyMemory(Of Char), Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlyMemory&lt;char&gt; * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.ReadOnlyMemory&lt;System.Char&gt;" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="json"><span data-ttu-id="17268-129">Ruft den zu analysierenden JSON-Text ab.</span><span class="sxs-lookup"><span data-stu-id="17268-129">The JSON text to parse.</span></span></param>
        <param name="options"><span data-ttu-id="17268-130">Optionen zum Steuern des Readerverhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="17268-130">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="17268-131">Analysiert Text, der einen einzelnen JSON-Zeichenwert in einem JsonDocument darstellt.</span><span class="sxs-lookup"><span data-stu-id="17268-131">Parses text representing a single JSON character value into a JsonDocument.</span></span></summary>
        <returns><span data-ttu-id="17268-132">Eine JsonDocument-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="17268-132">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>
          <format><![CDATA[
<span data-ttu-id="17268-133">Der <xref:System.ReadOnlyMemory%601>-Wert kann für die gesamte Lebensdauer des jsondocument-Objekts verwendet werden, und der Aufrufer muss sicherstellen, dass die darin enthaltenen Daten während der Objekt Lebensdauer nicht geändert werden.</span><span class="sxs-lookup"><span data-stu-id="17268-133">The <xref:System.ReadOnlyMemory%601> value may be used for the entire lifetime of the JsonDocument object, and the caller must ensure that the data therein does not change during the object lifetime.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="17268-134"><paramref name="json" /> stellt keinen gültigen einzelnen JSON-Wert dar.</span><span class="sxs-lookup"><span data-stu-id="17268-134"><paramref name="json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17268-135"><paramref name="readerOptions" /> enthält nicht unterstützte Optionen.</span><span class="sxs-lookup"><span data-stu-id="17268-135"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument Parse (string json, System.Text.Json.JsonDocumentOptions options = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument Parse(string json, valuetype System.Text.Json.JsonDocumentOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.Parse(System.String,System.Text.Json.JsonDocumentOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (json As String, Optional options As JsonDocumentOptions = null) As JsonDocument" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Text.Json.JsonDocumentOptions -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.Parse (json, options)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="json" Type="System.String" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
      </Parameters>
      <Docs>
        <param name="json"><span data-ttu-id="17268-136">Ruft den zu analysierenden JSON-Text ab.</span><span class="sxs-lookup"><span data-stu-id="17268-136">The JSON text to parse.</span></span></param>
        <param name="options"><span data-ttu-id="17268-137">Optionen zum Steuern des Readerverhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="17268-137">Options to control the reader behavior during parsing.</span></span></param>
        <summary><span data-ttu-id="17268-138">Analysiert Text, der einen einzelnen JSON-Zeichenfolgenwert in einem JsonDocument darstellt.</span><span class="sxs-lookup"><span data-stu-id="17268-138">Parses text representing a single JSON string value into a JsonDocument.</span></span></summary>
        <returns><span data-ttu-id="17268-139">Eine JsonDocument-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="17268-139">A JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="17268-140"><paramref name="json" /> stellt keinen gültigen einzelnen JSON-Wert dar.</span><span class="sxs-lookup"><span data-stu-id="17268-140"><paramref name="json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17268-141"><paramref name="readerOptions" /> enthält nicht unterstützte Optionen.</span><span class="sxs-lookup"><span data-stu-id="17268-141"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ParseAsync">
      <MemberSignature Language="C#" Value="public static System.Threading.Tasks.Task&lt;System.Text.Json.JsonDocument&gt; ParseAsync (System.IO.Stream utf8Json, System.Text.Json.JsonDocumentOptions options = null, System.Threading.CancellationToken cancellationToken = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Threading.Tasks.Task`1&lt;class System.Text.Json.JsonDocument&gt; ParseAsync(class System.IO.Stream utf8Json, valuetype System.Text.Json.JsonDocumentOptions options, valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.ParseAsync(System.IO.Stream,System.Text.Json.JsonDocumentOptions,System.Threading.CancellationToken)" />
      <MemberSignature Language="F#" Value="static member ParseAsync : System.IO.Stream * System.Text.Json.JsonDocumentOptions * System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task&lt;System.Text.Json.JsonDocument&gt;" Usage="System.Text.Json.JsonDocument.ParseAsync (utf8Json, options, cancellationToken)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task&lt;System.Text.Json.JsonDocument&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="utf8Json" Type="System.IO.Stream" />
        <Parameter Name="options" Type="System.Text.Json.JsonDocumentOptions" />
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="utf8Json"><span data-ttu-id="17268-142">Die zu analysierenden JSON-Daten.</span><span class="sxs-lookup"><span data-stu-id="17268-142">The JSON data to parse.</span></span></param>
        <param name="options"><span data-ttu-id="17268-143">Optionen zum Steuern des Readerverhaltens während der Analyse.</span><span class="sxs-lookup"><span data-stu-id="17268-143">Options to control the reader behavior during parsing.</span></span></param>
        <param name="cancellationToken"><span data-ttu-id="17268-144">Das Token zum Überwachen von Abbruchanforderungen.</span><span class="sxs-lookup"><span data-stu-id="17268-144">The token to monitor for cancellation requests.</span></span></param>
        <summary><span data-ttu-id="17268-145">Analysiert einen <see cref="T:System.IO.Stream" /> als UTF-8-codierte Daten, die einen einzelnen JSON-Wert in einem JsonDocument darstellen.</span><span class="sxs-lookup"><span data-stu-id="17268-145">Parses a <see cref="T:System.IO.Stream" /> as UTF-8-encoded data representing a single JSON value into a JsonDocument.</span></span> <span data-ttu-id="17268-146">Der Stream wird vollständig gelesen.</span><span class="sxs-lookup"><span data-stu-id="17268-146">The stream is read to completion.</span></span></summary>
        <returns><span data-ttu-id="17268-147">Eine Aufgabe zum Produzieren einer JsonDocument-Darstellung des JSON-Werts.</span><span class="sxs-lookup"><span data-stu-id="17268-147">A task to produce a JsonDocument representation of the JSON value.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="17268-148"><paramref name="utf8Json" /> stellt keinen gültigen einzelnen JSON-Wert dar.</span><span class="sxs-lookup"><span data-stu-id="17268-148"><paramref name="utf8Json" /> does not represent a valid single JSON value.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17268-149"><paramref name="readerOptions" /> enthält nicht unterstützte Optionen.</span><span class="sxs-lookup"><span data-stu-id="17268-149"><paramref name="readerOptions" /> contains unsupported options.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ParseValue">
      <MemberSignature Language="C#" Value="public static System.Text.Json.JsonDocument ParseValue (ref System.Text.Json.Utf8JsonReader reader);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Text.Json.JsonDocument ParseValue(valuetype System.Text.Json.Utf8JsonReader&amp; reader) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.ParseValue(System.Text.Json.Utf8JsonReader@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ParseValue (ByRef reader As Utf8JsonReader) As JsonDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Text::Json::JsonDocument ^ ParseValue(System::Text::Json::Utf8JsonReader % reader);" />
      <MemberSignature Language="F#" Value="static member ParseValue : Utf8JsonReader -&gt; System.Text.Json.JsonDocument" Usage="System.Text.Json.JsonDocument.ParseValue reader" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonDocument</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="17268-150">Der Reader zum Lesen.</span><span class="sxs-lookup"><span data-stu-id="17268-150">The reader to read.</span></span></param>
        <summary><span data-ttu-id="17268-151">Analysiert einen JSON-Wert (einschließlich Objekte oder Arrays) aus dem angegebenen Reader.</span><span class="sxs-lookup"><span data-stu-id="17268-151">Parses one JSON value (including objects or arrays) from the provided reader.</span></span></summary>
        <returns><span data-ttu-id="17268-152">Ein JsonDocument, das den Wert (und geschachtelte Werte) darstellt, die aus dem Reader gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="17268-152">A JsonDocument representing the value (and nested values) read from the reader.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="17268-153">Wenn die <xref:System.Text.Json.Utf8JsonReader.TokenType>-Eigenschaft von `reader` <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> oder <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>ist, wird der Reader durch einen-auf<xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> rufvorgang fortsetzen, um den Anfang des Werts zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="17268-153">If the <xref:System.Text.Json.Utf8JsonReader.TokenType> property of `reader` is <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> or <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>, the reader will advance by one call to <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> to determine the start of the value.</span></span>
               
<span data-ttu-id="17268-154">Nach Abschluss dieser Methode wird `reader` am endgültigen Token im JSON-Wert positioniert.</span><span class="sxs-lookup"><span data-stu-id="17268-154">Upon completion of this method, `reader` is positioned at the final token in the JSON value.</span></span> <span data-ttu-id="17268-155">Wenn eine Ausnahme ausgelöst wird, wird der Reader auf den Zustand zurückgesetzt, in dem er sich befand, als die-Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="17268-155">If an exception is thrown, the reader is reset to the state it was in when the method was called.</span></span>
               
<span data-ttu-id="17268-156">Diese Methode erstellt eine Kopie der Daten, auf die der Reader reagiert hat, sodass keine aufruferanforderung vorhanden ist, die die Datenintegrität über die Rückgabe dieser Methode hinaus aufrechtzuerhalten.</span><span class="sxs-lookup"><span data-stu-id="17268-156">This method makes a copy of the data the reader acted on, so there is no caller requirement to maintain data integrity beyond the return of this method.</span></span>

          ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17268-157"><paramref name="reader" /> enthält nicht unterstützte Optionen.</span><span class="sxs-lookup"><span data-stu-id="17268-157"><paramref name="reader" /> contains unsupported options.</span></span>

<span data-ttu-id="17268-158">- oder -</span><span class="sxs-lookup"><span data-stu-id="17268-158">-or-</span></span>

<span data-ttu-id="17268-159">Das aktuelle <paramref name="reader" />-Token startet nicht oder stellt einen Wert dar.</span><span class="sxs-lookup"><span data-stu-id="17268-159">The current <paramref name="reader" /> token does not start or represent a value.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="17268-160">Es konnte kein Wert aus dem Reader gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="17268-160">A value could not be read from the reader.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RootElement">
      <MemberSignature Language="C#" Value="public System.Text.Json.JsonElement RootElement { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Text.Json.JsonElement RootElement" />
      <MemberSignature Language="DocId" Value="P:System.Text.Json.JsonDocument.RootElement" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootElement As JsonElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Text::Json::JsonElement RootElement { System::Text::Json::JsonElement get(); };" />
      <MemberSignature Language="F#" Value="member this.RootElement : System.Text.Json.JsonElement" Usage="System.Text.Json.JsonDocument.RootElement" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Text.Json.JsonElement</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="17268-161">Ruft das Stammelement dieses JSON-Dokuments ab.</span><span class="sxs-lookup"><span data-stu-id="17268-161">Gets the root element of this JSON document.</span></span></summary>
        <value><span data-ttu-id="17268-162">Eine <see cref="T:System.Text.Json.JsonElement" />, die den Wert des Dokuments darstellt.</span><span class="sxs-lookup"><span data-stu-id="17268-162">A <see cref="T:System.Text.Json.JsonElement" /> representing the value of the document.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParseValue">
      <MemberSignature Language="C#" Value="public static bool TryParseValue (ref System.Text.Json.Utf8JsonReader reader, out System.Text.Json.JsonDocument document);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParseValue(valuetype System.Text.Json.Utf8JsonReader&amp; reader, [out] class System.Text.Json.JsonDocument&amp; document) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.TryParseValue(System.Text.Json.Utf8JsonReader@,System.Text.Json.JsonDocument@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParseValue (ByRef reader As Utf8JsonReader, ByRef document As JsonDocument) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParseValue(System::Text::Json::Utf8JsonReader % reader, [Runtime::InteropServices::Out] System::Text::Json::JsonDocument ^ % document);" />
      <MemberSignature Language="F#" Value="static member TryParseValue : Utf8JsonReader * JsonDocument -&gt; bool" Usage="System.Text.Json.JsonDocument.TryParseValue (reader, document)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="reader" Type="System.Text.Json.Utf8JsonReader" RefType="ref" />
        <Parameter Name="document" Type="System.Text.Json.JsonDocument" RefType="out" />
      </Parameters>
      <Docs>
        <param name="reader"><span data-ttu-id="17268-163">Der Reader zum Lesen.</span><span class="sxs-lookup"><span data-stu-id="17268-163">The reader to read.</span></span></param>
        <param name="document"><span data-ttu-id="17268-164">Wenn diese Methode zurückgegeben wird, enthält sie das analysierte Dokument.</span><span class="sxs-lookup"><span data-stu-id="17268-164">When the method returns, contains the parsed document.</span></span></param>
        <summary><span data-ttu-id="17268-165">Versucht, einen JSON-Wert (einschließlich Objekte oder Arrays) aus dem angegebenen Reader zu analysieren.</span><span class="sxs-lookup"><span data-stu-id="17268-165">Attempts to parse one JSON value (including objects or arrays) from the provided reader.</span></span></summary>
        <returns><span data-ttu-id="17268-166"><see langword="true" />, wenn ein Wert gelesen und in ein JsonDocument analysiert wurde; <see langword="false" />, wenn dem Reader beim Analysieren die Daten ausgegangen sind.</span><span class="sxs-lookup"><span data-stu-id="17268-166"><see langword="true" /> if a value was read and parsed into a JsonDocument; <see langword="false" /> if the reader ran out of data while parsing.</span></span> <span data-ttu-id="17268-167">Alle anderen Fälle führen dazu, dass eine Ausnahme ausgelöst wird.</span><span class="sxs-lookup"><span data-stu-id="17268-167">All other situations result in an exception being thrown.</span></span></returns>
        <remarks>
          <format><![CDATA[

## Remarks

<span data-ttu-id="17268-168">Wenn die <xref:System.Text.Json.Utf8JsonReader.TokenType>-Eigenschaft von `reader` <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> oder <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>ist, wird der Reader durch einen-auf<xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> rufvorgang fortsetzen, um den Anfang des Werts zu bestimmen.</span><span class="sxs-lookup"><span data-stu-id="17268-168">If the <xref:System.Text.Json.Utf8JsonReader.TokenType> property of `reader` is <xref:System.Text.Json.JsonTokenType.PropertyName?displayProperty=nameWithType> or <xref:System.Text.Json.JsonTokenType.None?displayProperty=nameWithType>, the reader will advance by one call to <xref:System.Text.Json.Utf8JsonReader.Read?displayProperty=nameWithType> to determine the start of the value.</span></span>
               
<span data-ttu-id="17268-169">Nach Abschluss dieser Methode wird `reader` am endgültigen Token im JSON-Wert positioniert.</span><span class="sxs-lookup"><span data-stu-id="17268-169">Upon completion of this method, `reader` is positioned at the final token in the JSON value.</span></span> <span data-ttu-id="17268-170">Wenn eine Ausnahme ausgelöst wird oder `false` zurückgegeben wird, wird der Reader auf den Zustand zurückgesetzt, in dem er sich befand, als die-Methode aufgerufen wurde.</span><span class="sxs-lookup"><span data-stu-id="17268-170">If an exception is thrown or `false` is returned, the reader is reset to the state it was in when the method was called.</span></span>
               
<span data-ttu-id="17268-171">Diese Methode erstellt eine Kopie der Daten, auf die der Reader reagiert hat, sodass keine aufruferanforderung vorhanden ist, die die Datenintegrität über die Rückgabe dieser Methode hinaus aufrechtzuerhalten.</span><span class="sxs-lookup"><span data-stu-id="17268-171">This method makes a copy of the data the reader acted on, so there is no caller requirement to maintain data integrity beyond the return of this method.</span></span>
                 
               ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="17268-172"><paramref name="reader" /> enthält nicht unterstützte Optionen.</span><span class="sxs-lookup"><span data-stu-id="17268-172"><paramref name="reader" /> contains unsupported options.</span></span>

<span data-ttu-id="17268-173">- oder -</span><span class="sxs-lookup"><span data-stu-id="17268-173">-or-</span></span>

<span data-ttu-id="17268-174">Das aktuelle <paramref name="reader" />-Token startet nicht oder stellt einen Wert dar.</span><span class="sxs-lookup"><span data-stu-id="17268-174">The current <paramref name="reader" /> token does not start or represent a value.</span></span></exception>
        <exception cref="T:System.Text.Json.JsonException"><span data-ttu-id="17268-175">Es konnte kein Wert aus dem Reader gelesen werden.</span><span class="sxs-lookup"><span data-stu-id="17268-175">A value could not be read from the reader.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="WriteTo">
      <MemberSignature Language="C#" Value="public void WriteTo (System.Text.Json.Utf8JsonWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WriteTo(class System.Text.Json.Utf8JsonWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Text.Json.JsonDocument.WriteTo(System.Text.Json.Utf8JsonWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub WriteTo (writer As Utf8JsonWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WriteTo(System::Text::Json::Utf8JsonWriter ^ writer);" />
      <MemberSignature Language="F#" Value="member this.WriteTo : System.Text.Json.Utf8JsonWriter -&gt; unit" Usage="jsonDocument.WriteTo writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Text.Json</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Text.Json.Utf8JsonWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="17268-176">Der Writer, in den das Dokument geschrieben werden soll.</span><span class="sxs-lookup"><span data-stu-id="17268-176">The writer to which to write the document.</span></span></param>
        <summary><span data-ttu-id="17268-177">Schreibt das Dokument als JSON-Wert in den angegebenen Writer.</span><span class="sxs-lookup"><span data-stu-id="17268-177">Writes the document to the provided writer as a JSON value.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="17268-178">Der Parameter <paramref name="writer" /> ist <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="17268-178">The <paramref name="writer" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="17268-179">Die <see cref="P:System.Text.Json.JsonElement.ValueKind" />-Eigenschaft von diesem <see cref="P:System.Text.Json.JsonDocument.RootElement" /> würde zu ungültigem JSON-Code führen.</span><span class="sxs-lookup"><span data-stu-id="17268-179">The <see cref="P:System.Text.Json.JsonElement.ValueKind" /> of this <see cref="P:System.Text.Json.JsonDocument.RootElement" /> would result in invalid JSON.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="17268-180">Das übergeordnete <see cref="T:System.Text.Json.JsonDocument" /> wurde verworfen.</span><span class="sxs-lookup"><span data-stu-id="17268-180">The parent <see cref="T:System.Text.Json.JsonDocument" /> has been disposed.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>
